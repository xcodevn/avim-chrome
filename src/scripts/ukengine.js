// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (process['argv'].length > 1) {
    Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
  } else {
    Module['thisProgram'] = 'unknown-program';
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  this['Module'] = Module;

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WEB) {
    window['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    var source = Pointer_stringify(code);
    if (source[0] === '"') {
      // tolerate EM_ASM("..code..") even though EM_ASM(..code..) is correct
      if (source.indexOf('"', 1) === source.length-1) {
        source = source.substr(1, source.length-2);
      } else {
        // something invalid happened, e.g. EM_ASM("..code($0)..", input)
        abort('invalid EM_ASM input |' + source + '|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)');
      }
    }
    try {
      // Module is the only 'upvar', which we provide directly. We also provide FS for legacy support.
      var evalled = eval('(function(Module, FS) { return function(' + args.join(',') + '){ ' + source + ' } })')(Module, typeof FS !== 'undefined' ? FS : null);
    } catch(e) {
      Module.printErr('error in executing inline EM_ASM code: ' + e + ' on: \n\n' + source + '\n\nwith args |' + args + '| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)');
      throw e;
    }
    return Runtime.asmConstCache[code] = evalled;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;

      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }

      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }

      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          (((codePoint - 0x10000) / 0x400)|0) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      /* TODO: use TextEncoder when present,
        var encoder = new TextEncoder();
        encoder['encoding'] = "utf-8";
        var utf8Array = encoder['encode'](aMsg.data);
      */
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}


Module['Runtime'] = Runtime;









//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) Runtime.stackRestore(stack);
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }

  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;


function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;


function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;


function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk

function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;

function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))>>0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;

// === Body ===





STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 54256;
  /* global initializers */ __ATINIT__.push({ func: function() { __GLOBAL__I_a() } }, { func: function() { __GLOBAL__I_a60() } }, { func: function() { __GLOBAL__I_a90() } }, { func: function() { __GLOBAL__I_a114() } }, { func: function() { __GLOBAL__I_a199() } });
  

/* memory initializer */ allocate([0,0,0,0,184,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,3,0,0,0,7,0,0,0,8,0,0,0,1,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,49,52,83,116,114,105,110,103,66,73,83,116,114,101,97,109,0,0,0,0,0,0,0,0,49,50,66,121,116,101,73,110,83,116,114,101,97,109,0,0,49,48,66,121,116,101,83,116,114,101,97,109,0,0,0,0,176,203,0,0,144,0,0,0,80,205,0,0,128,0,0,0,160,0,0,0,0,0,0,0,80,205,0,0,104,0,0,0,168,0,0,0,0,0,0,0,49,52,83,116,114,105,110,103,66,79,83,116,114,101,97,109,0,0,0,0,0,0,0,0,49,51,66,121,116,101,79,117,116,83,116,114,101,97,109,0,80,205,0,0,224,0,0,0,160,0,0,0,0,0,0,0,80,205,0,0,200,0,0,0,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,5,0,0,4,0,0,0,5,0,0,0,1,0,0,0,2,0,0,0,7,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,72,4,0,0,4,0,0,0,5,0,0,0,3,0,0,0,4,0,0,0,8,0,0,0,6,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,216,5,0,0,4,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,9,0,0,0,6,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,4,0,0,0,5,0,0,0,7,0,0,0,8,0,0,0,7,0,0,0,6,0,0,0,10,0,0,0,0,0,0,0,58,47,47,0,0,0,0,0,64,0,0,0,0,0,0,0,109,97,105,108,116,111,58,0,101,109,97,105,108,58,0,0,110,101,119,115,58,0,0,0,119,119,119,0,0,0,0,0,102,116,112,0,0,0,0,0,248,2,0,0,24,191,0,0,0,3,0,0,8,3,0,0,16,3,0,0,24,3,0,0,32,3,0,0,40,3,0,0,0,0,0,0,32,6,0,0,11,0,0,0,12,0,0,0,9,0,0,0,10,0,0,0,7,0,0,0,6,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,72,6,0,0,14,0,0,0,15,0,0,0,11,0,0,0,12,0,0,0,7,0,0,0,6,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,112,6,0,0,4,0,0,0,5,0,0,0,13,0,0,0,14,0,0,0,7,0,0,0,6,0,0,0,17,0,0,0,0,0,0,0,57,86,110,67,104,97,114,115,101,116,0,0,0,0,0,0,176,203,0,0,200,3,0,0,0,0,0,0,32,4,0,0,4,0,0,0,5,0,0,0,15,0,0,0,16,0,0,0,10,0,0,0,6,0,0,0,18,0,0,0,0,0,0,0,49,55,86,110,73,110,116,101,114,110,97,108,67,104,97,114,115,101,116,0,0,0,0,0,80,205,0,0,8,4,0,0,216,3,0,0,0,0,0,0,49,52,85,110,105,99,111,100,101,67,104,97,114,115,101,116,0,0,0,0,0,0,0,0,80,205,0,0,48,4,0,0,216,3,0,0,0,0,0,0,0,0,0,0,152,4,0,0,4,0,0,0,5,0,0,0,17,0,0,0,18,0,0,0,8,0,0,0,6,0,0,0,19,0,0,0,0,0,0,0,49,56,85,110,105,99,111,100,101,85,84,70,56,67,104,97,114,115,101,116,0,0,0,0,80,205,0,0,128,4,0,0,72,4,0,0,0,0,0,0,0,0,0,0,232,4,0,0,4,0,0,0,5,0,0,0,19,0,0,0,20,0,0,0,8,0,0,0,6,0,0,0,20,0,0,0,0,0,0,0,49,55,85,110,105,99,111,100,101,82,101,102,67,104,97,114,115,101,116,0,0,0,0,0,80,205,0,0,208,4,0,0,72,4,0,0,0,0,0,0,0,0,0,0,56,5,0,0,4,0,0,0,5,0,0,0,19,0,0,0,21,0,0,0,8,0,0,0,6,0,0,0,21,0,0,0,0,0,0,0,49,55,85,110,105,99,111,100,101,72,101,120,67,104,97,114,115,101,116,0,0,0,0,0,80,205,0,0,32,5,0,0,232,4,0,0,0,0,0,0,0,0,0,0,136,5,0,0,22,0,0,0,5,0,0,0,22,0,0,0,23,0,0,0,8,0,0,0,6,0,0,0,23,0,0,0,0,0,0,0,50,49,85,110,105,99,111,100,101,67,83,116,114,105,110,103,67,104,97,114,115,101,116,0,80,205,0,0,112,5,0,0,72,4,0,0,0,0,0,0,49,55,83,105,110,103,108,101,66,121,116,101,67,104,97,114,115,101,116,0,0,0,0,0,80,205,0,0,152,5,0,0,216,3,0,0,0,0,0,0,49,56,85,110,105,99,111,100,101,67,111,109,112,67,104,97,114,115,101,116,0,0,0,0,80,205,0,0,192,5,0,0,216,3,0,0,0,0,0,0,49,55,68,111,117,98,108,101,66,121,116,101,67,104,97,114,115,101,116,0,0,0,0,0,80,205,0,0,232,5,0,0,216,3,0,0,0,0,0,0,49,49,86,73,81,82,67,104,97,114,115,101,116,0,0,0,80,205,0,0,16,6,0,0,216,3,0,0,0,0,0,0,49,53,85,84,70,56,86,73,81,82,67,104,97,114,115,101,116,0,0,0,0,0,0,0,80,205,0,0,48,6,0,0,216,3,0,0,0,0,0,0,49,54,87,105,110,67,80,49,50,53,56,67,104,97,114,115,101,116,0,0,0,0,0,0,80,205,0,0,88,6,0,0,216,3,0,0,0,0,0,0,65,97,184,184,181,181,182,182,183,183,185,185,162,169,202,202,199,199,200,200,201,201,203,203,161,168,190,190,187,187,188,188,189,189,198,198,66,98,67,99,68,100,167,174,69,101,208,208,204,204,206,206,207,207,209,209,163,170,213,213,210,210,211,211,212,212,214,214,70,102,71,103,72,104,73,105,221,221,215,215,216,216,220,220,222,222,74,106,75,107,76,108,77,109,78,110,79,111,227,227,223,223,225,225,226,226,228,228,164,171,232,232,229,229,230,230,231,231,233,233,165,172,237,237,234,234,235,235,236,236,238,238,80,112,81,113,82,114,83,115,84,116,85,117,243,243,239,239,241,241,242,242,244,244,166,173,248,248,245,245,246,246,247,247,249,249,86,118,87,119,88,120,89,121,253,253,250,250,251,251,252,252,254,254,90,122,128,130,131,132,133,134,135,136,137,138,139,140,142,145,146,147,148,149,150,151,152,153,154,155,156,158,159,65,97,193,225,128,224,129,228,130,227,229,229,194,226,131,195,132,192,133,196,197,197,198,198,136,230,141,161,142,162,143,163,240,164,165,165,66,98,67,99,68,100,241,199,69,101,201,233,215,232,222,200,254,235,203,203,202,234,144,137,147,138,148,139,149,205,140,140,70,102,71,103,72,104,73,105,180,237,181,236,183,204,184,239,206,206,74,106,75,107,76,108,77,109,78,110,79,111,185,243,188,242,189,213,190,245,134,134,212,244,150,211,151,210,152,176,153,135,182,182,247,214,157,167,158,169,159,170,166,171,174,174,80,112,81,113,82,114,83,115,84,116,85,117,218,250,168,249,209,251,172,219,248,248,208,220,173,217,175,216,177,186,187,187,191,191,86,118,87,119,88,120,89,121,221,154,178,255,253,155,179,207,156,156,90,122,0,0,0,0,0,0,0,0,0,0,0,0,142,145,146,0,0,0,0,0,0,0,0,0,0,158,0,65,97,193,225,192,224,196,228,195,227,128,213,194,226,132,164,133,165,134,166,231,231,135,167,197,229,129,161,130,162,198,198,199,199,131,163,66,98,67,99,68,100,208,240,69,101,201,233,200,232,203,235,136,168,137,169,202,234,138,170,139,171,140,172,141,173,142,174,70,102,71,103,72,104,73,105,205,237,204,236,155,239,206,238,152,184,74,106,75,107,76,108,77,109,78,110,79,111,211,243,210,242,153,246,245,245,154,247,212,244,143,175,144,176,145,177,146,178,147,181,180,189,149,190,150,182,151,183,179,222,148,254,80,112,81,113,82,114,83,115,84,116,85,117,218,250,217,249,156,252,157,251,158,248,191,223,186,209,187,215,188,216,255,230,185,241,86,118,87,119,88,120,89,121,221,253,159,207,214,214,219,219,220,220,90,122,128,0,0,0,0,0,0,0,0,0,0,0,142,0,0,0,0,0,0,0,0,0,0,0,0,158,0,65,97,128,190,129,191,130,192,131,193,132,194,159,221,126,222,161,223,162,224,163,225,164,226,153,215,154,216,155,217,156,218,157,219,152,220,66,98,67,99,68,100,125,189,69,101,133,195,134,196,135,197,136,198,137,199,165,227,166,228,167,229,168,230,169,231,170,232,70,102,71,103,72,104,73,105,138,200,139,201,140,202,141,203,142,204,74,106,75,107,76,108,77,109,78,110,79,111,143,205,144,206,145,207,146,208,147,209,171,233,172,234,173,235,174,236,175,237,176,238,177,239,178,240,179,241,180,242,181,243,182,244,80,112,81,113,82,114,83,115,84,116,85,117,148,210,149,211,150,212,151,213,152,214,183,245,184,246,185,247,186,248,187,249,188,250,86,118,87,119,88,120,89,121,123,251,94,252,96,253,124,254,142,255,90,122,128,0,0,0,0,0,0,0,0,0,0,0,142,0,0,0,0,0,0,0,0,0,0,0,0,158,0,65,97,192,192,170,170,182,182,186,186,193,193,151,161,202,202,199,199,200,200,201,201,203,203,150,159,197,197,194,194,195,195,196,196,198,198,66,98,67,99,68,100,152,162,69,101,207,207,204,204,205,205,206,206,209,209,153,163,213,213,210,210,211,211,212,212,214,214,70,102,71,103,72,104,73,105,219,219,216,216,217,217,218,218,220,220,74,106,75,107,76,108,77,109,78,110,79,111,226,226,223,223,224,224,225,225,227,227,154,164,231,231,228,228,229,229,230,230,232,232,155,165,236,236,233,233,234,234,235,235,237,237,80,112,81,113,82,114,83,115,84,116,85,117,242,242,238,238,239,239,241,241,243,243,156,167,247,247,244,244,245,245,246,246,248,248,86,118,87,119,88,120,89,121,252,252,249,249,250,250,251,251,255,255,90,122,128,130,131,132,133,134,135,136,137,138,139,140,142,145,146,147,148,149,0,0,0,0,0,0,0,158,0,65,97,131,184,128,181,129,182,130,183,132,185,162,169,196,160,193,199,194,200,195,201,134,203,161,168,192,190,175,187,186,188,191,189,133,198,66,98,67,99,68,100,167,174,69,101,208,138,135,204,136,206,137,207,209,139,163,170,218,213,197,210,205,211,217,212,140,214,70,102,71,103,72,104,73,105,144,221,141,215,142,216,143,220,145,222,74,106,75,107,76,108,77,109,78,110,79,111,149,227,146,223,147,225,148,226,150,228,164,171,255,232,219,229,224,230,240,231,151,233,165,172,155,237,152,234,153,235,154,236,156,238,80,112,81,113,82,114,83,115,84,116,85,117,64,243,157,239,158,241,159,242,124,244,166,173,96,248,92,245,94,246,126,247,35,249,86,118,87,119,88,120,89,121,179,253,176,250,177,251,178,252,180,254,90,122,0,0,0,0,0,0,0,0,0,0,0,0,0,17,18,19,20,0,0,0,0,0,0,0,0,0,0,0,0,65,0,97,0,65,217,97,249,65,216,97,248,65,219,97,251,65,213,97,245,65,207,97,239,65,194,97,226,65,193,97,225,65,192,97,224,65,197,97,229,65,195,97,227,65,196,97,228,65,202,97,234,65,201,97,233,65,200,97,232,65,218,97,250,65,220,97,252,65,203,97,235,66,0,98,0,67,0,99,0,68,0,100,0,209,0,241,0,69,0,101,0,69,217,101,249,69,216,101,248,69,219,101,251,69,213,101,245,69,207,101,239,69,194,101,226,69,193,101,225,69,192,101,224,69,197,101,229,69,195,101,227,69,196,101,228,70,0,102,0,71,0,103,0,72,0,104,0,73,0,105,0,205,0,237,0,204,0,236,0,198,0,230,0,211,0,243,0,210,0,242,0,74,0,106,0,75,0,107,0,76,0,108,0,77,0,109,0,78,0,110,0,79,0,111,0,79,217,111,249,79,216,111,248,79,219,111,251,79,213,111,245,79,207,111,239,79,194,111,226,79,193,111,225,79,192,111,224,79,197,111,229,79,195,111,227,79,196,111,228,212,0,244,0,212,217,244,249,212,216,244,248,212,219,244,251,212,213,244,245,212,207,244,239,80,0,112,0,81,0,113,0,82,0,114,0,83,0,115,0,84,0,116,0,85,0,117,0,85,217,117,249,85,216,117,248,85,219,117,251,85,213,117,245,85,207,117,239,214,0,246,0,214,217,246,249,214,216,246,248,214,219,246,251,214,213,246,245,214,207,246,239,86,0,118,0,87,0,119,0,88,0,120,0,89,0,121,0,89,217,121,249,89,216,121,248,89,219,121,251,89,213,121,245,206,0,238,0,90,0,122,0,128,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,138,0,139,0,140,0,142,0,145,0,146,0,147,0,148,0,149,0,150,0,151,0,152,0,153,0,154,0,155,0,156,0,158,0,159,0,65,0,97,0,65,193,97,225,65,194,97,226,65,195,97,227,65,196,97,228,65,197,97,229,202,0,234,0,202,203,234,235,202,204,234,236,202,205,234,237,202,206,234,238,202,197,234,229,217,0,249,0,217,198,249,230,217,199,249,231,217,200,249,232,217,201,249,233,217,197,249,229,66,0,98,0,67,0,99,0,68,0,100,0,192,0,224,0,69,0,101,0,69,193,101,225,69,194,101,226,69,195,101,227,69,196,101,228,69,197,101,229,207,0,239,0,207,203,239,235,207,204,239,236,207,205,239,237,207,206,239,238,207,229,239,229,70,0,102,0,71,0,103,0,72,0,104,0,73,0,105,0,209,0,241,0,210,0,242,0,211,0,243,0,212,0,244,0,213,0,245,0,74,0,106,0,75,0,107,0,76,0,108,0,77,0,109,0,78,0,110,0,79,0,111,0,79,193,111,225,79,194,111,226,79,195,111,227,79,196,111,228,79,197,111,229,214,0,246,0,214,203,246,235,214,204,246,236,214,205,246,237,214,206,246,238,214,197,246,229,218,0,250,0,218,193,250,225,218,194,250,226,218,195,250,227,218,196,250,228,218,197,250,229,80,0,112,0,81,0,113,0,82,0,114,0,83,0,115,0,84,0,116,0,85,0,117,0,85,193,117,225,85,194,117,226,85,195,117,227,85,196,117,228,85,197,117,229,219,0,251,0,219,193,251,225,219,194,251,226,219,195,251,227,219,196,251,228,219,197,251,229,86,0,118,0,87,0,119,0,88,0,120,0,89,0,121,0,89,193,121,225,89,194,121,226,89,195,121,227,89,196,121,228,89,197,121,229,90,0,122,0,128,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,138,0,139,0,140,0,142,0,145,0,146,0,147,0,148,0,149,0,150,0,151,0,152,0,153,0,154,0,155,0,156,0,158,0,159,0,65,0,97,0,65,207,97,239,65,204,97,236,65,205,97,237,65,206,97,238,65,219,97,251,193,0,225,0,193,218,225,250,193,214,225,246,193,216,225,248,193,217,225,249,193,219,225,251,192,0,224,0,192,213,224,245,192,210,224,242,192,211,224,243,192,212,224,244,192,219,224,251,66,0,98,0,67,0,99,0,68,0,100,0,194,0,226,0,69,0,101,0,69,207,101,239,69,204,101,236,69,205,101,237,69,206,101,238,69,219,101,251,195,0,227,0,195,218,227,250,195,214,227,246,195,216,227,248,195,217,227,249,195,219,227,251,70,0,102,0,71,0,103,0,72,0,104,0,73,0,105,0,202,0,234,0,199,0,231,0,200,0,232,0,201,0,233,0,203,0,235,0,74,0,106,0,75,0,107,0,76,0,108,0,77,0,109,0,78,0,110,0,79,0,111,0,79,207,111,239,79,204,111,236,79,205,111,237,79,206,111,238,79,220,111,252,196,0,228,0,196,218,228,250,196,214,228,246,196,216,228,248,196,217,228,249,196,220,228,252,197,0,229,0,197,207,229,239,197,204,229,236,197,205,229,237,197,206,229,238,197,220,229,252,80,0,112,0,81,0,113,0,82,0,114,0,83,0,115,0,84,0,116,0,85,0,117,0,85,207,117,239,85,204,117,236,85,205,117,237,85,206,117,238,85,219,117,251,198,0,230,0,198,207,230,239,198,204,230,236,198,205,230,237,198,206,230,238,198,219,230,251,86,0,118,0,87,0,119,0,88,0,120,0,89,0,121,0,89,207,121,239,89,204,121,236,89,205,121,237,89,206,121,238,89,209,121,241,90,0,122,0,128,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,138,0,139,0,140,0,142,0,145,0,146,0,147,0,148,0,149,0,150,0,151,0,152,0,153,0,154,0,155,0,156,0,158,0,159,0,65,0,97,0,65,244,97,157,65,175,97,191,65,243,97,158,65,205,97,155,65,236,97,149,65,229,97,137,65,231,97,135,65,203,97,136,65,129,97,140,65,204,97,139,65,128,97,138,65,230,97,144,65,131,97,142,65,233,97,143,65,242,97,156,65,134,97,159,65,232,97,145,66,0,98,0,67,0,99,0,68,0,100,0,132,0,150,0,69,0,101,0,69,244,101,157,69,175,101,191,69,243,101,158,69,205,101,155,69,236,101,149,69,229,101,137,69,231,101,135,69,203,101,136,69,129,101,140,69,204,101,139,69,128,101,138,70,0,102,0,71,0,103,0,72,0,104,0,73,0,105,0,234,0,146,0,237,0,147,0,174,0,190,0,238,0,151,0,241,0,152,0,74,0,106,0,75,0,107,0,76,0,108,0,77,0,109,0,78,0,110,0,79,0,111,0,79,244,111,157,79,175,111,191,79,243,111,158,79,205,111,155,79,236,111,149,79,229,111,137,79,231,111,135,79,203,111,136,79,129,111,140,79,204,111,139,79,128,111,138,239,0,153,0,239,244,153,157,239,175,153,191,239,243,153,158,239,205,153,155,239,236,153,149,80,0,112,0,81,0,113,0,82,0,114,0,83,0,115,0,84,0,116,0,85,0,117,0,85,244,117,157,85,175,117,191,85,243,117,158,85,205,117,155,85,236,117,149,133,0,154,0,133,244,154,157,133,175,154,191,133,243,154,158,133,205,154,155,133,236,154,149,86,0,118,0,87,0,119,0,88,0,120,0,89,0,121,0,89,244,121,157,89,175,121,191,89,243,121,158,89,205,121,155,235,0,148,0,90,0,122,0,219,0,226,0,196,0,227,0,201,0,160,0,224,0,246,0,228,0,63,0,220,0,206,0,63,0,212,0,213,0,210,0,211,0,165,0,208,0,209,0,247,0,170,0,63,0,221,0,207,0,63,0,217,0,65,0,97,0,65,236,97,236,65,204,97,204,65,210,97,210,65,222,97,222,65,242,97,242,194,0,226,0,194,236,226,236,194,204,226,204,194,210,226,210,194,222,226,222,194,242,226,242,195,0,227,0,195,236,227,236,195,204,227,204,195,210,227,210,195,222,227,222,195,242,227,242,66,0,98,0,67,0,99,0,68,0,100,0,208,0,240,0,69,0,101,0,69,236,101,236,69,204,101,204,69,210,101,210,69,222,101,222,69,242,101,242,202,0,234,0,202,236,234,236,202,204,234,204,202,210,234,210,202,222,234,222,202,242,234,242,70,0,102,0,71,0,103,0,72,0,104,0,73,0,105,0,73,236,105,236,73,204,105,204,73,210,105,210,73,222,105,222,73,242,105,242,74,0,106,0,75,0,107,0,76,0,108,0,77,0,109,0,78,0,110,0,79,0,111,0,79,236,111,236,79,204,111,204,79,210,111,210,79,222,111,222,79,242,111,242,212,0,244,0,212,236,244,236,212,204,244,204,212,210,244,210,212,222,244,222,212,242,244,242,213,0,245,0,213,236,245,236,213,204,245,204,213,210,245,210,213,222,245,222,213,242,245,242,80,0,112,0,81,0,113,0,82,0,114,0,83,0,115,0,84,0,116,0,85,0,117,0,85,236,117,236,85,204,117,204,85,210,117,210,85,222,117,222,85,242,117,242,221,0,253,0,221,236,253,236,221,204,253,204,221,210,253,210,221,222,253,222,221,242,253,242,86,0,118,0,87,0,119,0,88,0,120,0,89,0,121,0,89,236,121,236,89,204,121,204,89,210,121,210,89,222,121,222,89,242,121,242,90,0,122,0,128,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,138,0,139,0,140,0,142,0,145,0,146,0,147,0,148,0,149,0,150,0,151,0,152,0,153,0,154,0,155,0,156,0,158,0,159,0,0,0,0,0,0,0,65,0,97,0,193,0,225,0,192,0,224,0,65,210,97,210,65,222,97,222,65,242,97,242,194,0,226,0,194,236,226,236,194,204,226,204,194,210,226,210,194,222,226,222,194,242,226,242,195,0,227,0,195,236,227,236,195,204,227,204,195,210,227,210,195,222,227,222,195,242,227,242,66,0,98,0,67,0,99,0,68,0,100,0,208,0,240,0,69,0,101,0,201,0,233,0,200,0,232,0,69,210,101,210,69,222,101,222,69,242,101,242,202,0,234,0,202,236,234,236,202,204,234,204,202,210,234,210,202,222,234,222,202,242,234,242,70,0,102,0,71,0,103,0,72,0,104,0,73,0,105,0,205,0,237,0,73,204,105,204,73,210,105,210,73,222,105,222,73,242,105,242,74,0,106,0,75,0,107,0,76,0,108,0,77,0,109,0,78,0,110,0,79,0,111,0,211,0,243,0,79,204,111,204,79,210,111,210,79,222,111,222,79,242,111,242,212,0,244,0,212,236,244,236,212,204,244,204,212,210,244,210,212,222,244,222,212,242,244,242,213,0,245,0,213,236,245,236,213,204,245,204,213,210,245,210,213,222,245,222,213,242,245,242,80,0,112,0,81,0,113,0,82,0,114,0,83,0,115,0,84,0,116,0,85,0,117,0,218,0,250,0,217,0,249,0,85,210,117,210,85,222,117,222,85,242,117,242,221,0,253,0,221,236,253,236,221,204,253,204,221,210,253,210,221,222,253,222,221,242,253,242,86,0,118,0,87,0,119,0,88,0,120,0,89,0,121,0,89,236,121,236,89,204,121,204,89,210,121,210,89,222,121,222,89,242,121,242,90,0,122,0,128,0,130,0,131,0,132,0,133,0,134,0,135,0,136,0,137,0,138,0,139,0,140,0,142,0,145,0,146,0,147,0,148,0,149,0,150,0,151,0,152,0,153,0,154,0,155,0,156,0,158,0,159,0,0,0,0,0,0,0,65,0,97,0,193,0,225,0,192,0,224,0,162,30,163,30,195,0,227,0,160,30,161,30,194,0,226,0,164,30,165,30,166,30,167,30,168,30,169,30,170,30,171,30,172,30,173,30,2,1,3,1,174,30,175,30,176,30,177,30,178,30,179,30,180,30,181,30,182,30,183,30,66,0,98,0,67,0,99,0,68,0,100,0,16,1,17,1,69,0,101,0,201,0,233,0,200,0,232,0,186,30,187,30,188,30,189,30,184,30,185,30,202,0,234,0,190,30,191,30,192,30,193,30,194,30,195,30,196,30,197,30,198,30,199,30,70,0,102,0,71,0,103,0,72,0,104,0,73,0,105,0,205,0,237,0,204,0,236,0,200,30,201,30,40,1,41,1,202,30,203,30,74,0,106,0,75,0,107,0,76,0,108,0,77,0,109,0,78,0,110,0,79,0,111,0,211,0,243,0,210,0,242,0,206,30,207,30,213,0,245,0,204,30,205,30,212,0,244,0,208,30,209,30,210,30,211,30,212,30,213,30,214,30,215,30,216,30,217,30,160,1,161,1,218,30,219,30,220,30,221,30,222,30,223,30,224,30,225,30,226,30,227,30,80,0,112,0,81,0,113,0,82,0,114,0,83,0,115,0,84,0,116,0,85,0,117,0,218,0,250,0,217,0,249,0,230,30,231,30,104,1,105,1,228,30,229,30,175,1,176,1,232,30,233,30,234,30,235,30,236,30,237,30,238,30,239,30,240,30,241,30,86,0,118,0,87,0,119,0,88,0,120,0,89,0,121,0,221,0,253,0,242,30,243,30,246,30,247,30,248,30,249,30,244,30,245,30,90,0,122,0,172,32,161,32,146,1,30,32,38,32,32,32,33,32,198,2,48,32,96,1,57,32,82,1,125,1,24,32,25,32,28,32,29,32,34,32,19,32,20,32,220,2,34,33,97,1,58,32,83,1,126,1,120,1,0,0,0,0,0,0,65,0,0,0,97,0,0,0,65,39,0,0,97,39,0,0,65,96,0,0,97,96,0,0,65,63,0,0,97,63,0,0,65,126,0,0,97,126,0,0,65,46,0,0,97,46,0,0,65,94,0,0,97,94,0,0,65,94,39,0,97,94,39,0,65,94,96,0,97,94,96,0,65,94,63,0,97,94,63,0,65,94,126,0,97,94,126,0,65,94,46,0,97,94,46,0,65,40,0,0,97,40,0,0,65,40,39,0,97,40,39,0,65,40,96,0,97,40,96,0,65,40,63,0,97,40,63,0,65,40,126,0,97,40,126,0,65,40,46,0,97,40,46,0,66,0,0,0,98,0,0,0,67,0,0,0,99,0,0,0,68,0,0,0,100,0,0,0,68,68,0,0,100,100,0,0,69,0,0,0,101,0,0,0,69,39,0,0,101,39,0,0,69,96,0,0,101,96,0,0,69,63,0,0,101,63,0,0,69,126,0,0,101,126,0,0,69,46,0,0,101,46,0,0,69,94,0,0,101,94,0,0,69,94,39,0,101,94,39,0,69,94,96,0,101,94,96,0,69,94,63,0,101,94,63,0,69,94,126,0,101,94,126,0,69,94,46,0,101,94,46,0,70,0,0,0,102,0,0,0,71,0,0,0,103,0,0,0,72,0,0,0,104,0,0,0,73,0,0,0,105,0,0,0,73,39,0,0,105,39,0,0,73,96,0,0,105,96,0,0,73,63,0,0,105,63,0,0,73,126,0,0,105,126,0,0,73,46,0,0,105,46,0,0,74,0,0,0,106,0,0,0,75,0,0,0,107,0,0,0,76,0,0,0,108,0,0,0,77,0,0,0,109,0,0,0,78,0,0,0,110,0,0,0,79,0,0,0,111,0,0,0,79,39,0,0,111,39,0,0,79,96,0,0,111,96,0,0,79,63,0,0,111,63,0,0,79,126,0,0,111,126,0,0,79,46,0,0,111,46,0,0,79,94,0,0,111,94,0,0,79,94,39,0,111,94,39,0,79,94,96,0,111,94,96,0,79,94,63,0,111,94,63,0,79,94,126,0,111,94,126,0,79,94,46,0,111,94,46,0,79,43,0,0,111,43,0,0,79,43,39,0,111,43,39,0,79,43,96,0,111,43,96,0,79,43,63,0,111,43,63,0,79,43,126,0,111,43,126,0,79,43,46,0,111,43,46,0,80,0,0,0,112,0,0,0,81,0,0,0,113,0,0,0,82,0,0,0,114,0,0,0,83,0,0,0,115,0,0,0,84,0,0,0,116,0,0,0,85,0,0,0,117,0,0,0,85,39,0,0,117,39,0,0,85,96,0,0,117,96,0,0,85,63,0,0,117,63,0,0,85,126,0,0,117,126,0,0,85,46,0,0,117,46,0,0,85,43,0,0,117,43,0,0,85,43,39,0,117,43,39,0,85,43,96,0,117,43,96,0,85,43,63,0,117,43,63,0,85,43,126,0,117,43,126,0,85,43,46,0,117,43,46,0,86,0,0,0,118,0,0,0,87,0,0,0,119,0,0,0,88,0,0,0,120,0,0,0,89,0,0,0,121,0,0,0,89,39,0,0,121,39,0,0,89,96,0,0,121,96,0,0,89,63,0,0,121,63,0,0,89,126,0,0,121,126,0,0,89,46,0,0,121,46,0,0,90,0,0,0,122,0,0,0,128,0,0,0,130,0,0,0,131,0,0,0,132,0,0,0,133,0,0,0,134,0,0,0,135,0,0,0,136,0,0,0,137,0,0,0,138,0,0,0,139,0,0,0,140,0,0,0,142,0,0,0,145,0,0,0,146,0,0,0,147,0,0,0,148,0,0,0,149,0,0,0,150,0,0,0,151,0,0,0,152,0,0,0,153,0,0,0,154,0,0,0,155,0,0,0,156,0,0,0,158,0,0,0,159,0,0,0,0,0,0,0,65,0,0,0,97,0,0,0,65,0,1,3,97,0,1,3,65,0,0,3,97,0,0,3,65,0,9,3,97,0,9,3,65,0,3,3,97,0,3,3,65,0,35,3,97,0,35,3,194,0,0,0,226,0,0,0,194,0,1,3,226,0,1,3,194,0,0,3,226,0,0,3,194,0,9,3,226,0,9,3,194,0,3,3,226,0,3,3,194,0,35,3,226,0,35,3,2,1,0,0,3,1,0,0,2,1,1,3,3,1,1,3,2,1,0,3,3,1,0,3,2,1,9,3,3,1,9,3,2,1,3,3,3,1,3,3,2,1,35,3,3,1,35,3,66,0,0,0,98,0,0,0,67,0,0,0,99,0,0,0,68,0,0,0,100,0,0,0,16,1,0,0,17,1,0,0,69,0,0,0,101,0,0,0,69,0,1,3,101,0,1,3,69,0,0,3,101,0,0,3,69,0,9,3,101,0,9,3,69,0,3,3,101,0,3,3,69,0,35,3,101,0,35,3,202,0,0,0,234,0,0,0,202,0,1,3,234,0,1,3,202,0,0,3,234,0,0,3,202,0,9,3,234,0,9,3,202,0,3,3,234,0,3,3,202,0,35,3,234,0,35,3,70,0,0,0,102,0,0,0,71,0,0,0,103,0,0,0,72,0,0,0,104,0,0,0,73,0,0,0,105,0,0,0,73,0,1,3,105,0,1,3,73,0,0,3,105,0,0,3,73,0,9,3,105,0,9,3,73,0,3,3,105,0,3,3,73,0,35,3,105,0,35,3,74,0,0,0,106,0,0,0,75,0,0,0,107,0,0,0,76,0,0,0,108,0,0,0,77,0,0,0,109,0,0,0,78,0,0,0,110,0,0,0,79,0,0,0,111,0,0,0,79,0,1,3,111,0,1,3,79,0,0,3,111,0,0,3,79,0,9,3,111,0,9,3,79,0,3,3,111,0,3,3,79,0,35,3,111,0,35,3,212,0,0,0,244,0,0,0,212,0,1,3,244,0,1,3,212,0,0,3,244,0,0,3,212,0,9,3,244,0,9,3,212,0,3,3,244,0,3,3,212,0,35,3,244,0,35,3,160,1,0,0,161,1,0,0,160,1,1,3,161,1,1,3,160,1,0,3,161,1,0,3,160,1,9,3,161,1,9,3,160,1,3,3,161,1,3,3,160,1,35,3,161,1,35,3,80,0,0,0,112,0,0,0,81,0,0,0,113,0,0,0,82,0,0,0,114,0,0,0,83,0,0,0,115,0,0,0,84,0,0,0,116,0,0,0,85,0,0,0,117,0,0,0,85,0,1,3,117,0,1,3,85,0,0,3,117,0,0,3,85,0,9,3,117,0,9,3,85,0,3,3,117,0,3,3,85,0,35,3,117,0,35,3,175,1,0,0,176,1,0,0,175,1,1,3,176,1,1,3,175,1,0,3,176,1,0,3,175,1,9,3,176,1,9,3,175,1,3,3,176,1,3,3,175,1,35,3,176,1,35,3,86,0,0,0,118,0,0,0,87,0,0,0,119,0,0,0,88,0,0,0,120,0,0,0,89,0,0,0,121,0,0,0,89,0,1,3,121,0,1,3,89,0,0,3,121,0,0,3,89,0,9,3,121,0,9,3,89,0,3,3,121,0,3,3,89,0,35,3,121,0,35,3,90,0,0,0,122,0,0,0,172,32,0,0,161,32,0,0,146,1,0,0,30,32,0,0,38,32,0,0,32,32,0,0,33,32,0,0,198,2,0,0,48,32,0,0,96,1,0,0,57,32,0,0,82,1,0,0,125,1,0,0,24,32,0,0,25,32,0,0,28,32,0,0,29,32,0,0,34,32,0,0,19,32,0,0,20,32,0,0,220,2,0,0,34,33,0,0,97,1,0,0,58,32,0,0,83,1,0,0,126,1,0,0,120,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,40,0,0,0,41,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,74,0,0,0,75,0,0,0,74,0,0,0,75,0,0,0,74,0,0,0,75,0,0,0,74,0,0,0,75,0,0,0,74,0,0,0,75,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,132,0,0,0,133,0,0,0,134,0,0,0,135,0,0,0,136,0,0,0,137,0,0,0,138,0,0,0,139,0,0,0,140,0,0,0,141,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,166,0,0,0,167,0,0,0,168,0,0,0,169,0,0,0,170,0,0,0,171,0,0,0,172,0,0,0,173,0,0,0,172,0,0,0,173,0,0,0,172,0,0,0,173,0,0,0,172,0,0,0,173,0,0,0,172,0,0,0,173,0,0,0,172,0,0,0,173,0,0,0,184,0,0,0,185,0,0,0,186,0,0,0,187,0,0,0,188,0,0,0,189,0,0,0,190,0,0,0,191,0,0,0,192,0,0,0,193,0,0,0,194,0,0,0,195,0,0,0,196,0,0,0,197,0,0,0,198,0,0,0,199,0,0,0,200,0,0,0,201,0,0,0,202,0,0,0,203,0,0,0,204,0,0,0,205,0,0,0,206,0,0,0,207,0,0,0,208,0,0,0,209,0,0,0,210,0,0,0,211,0,0,0,212,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,12,0,0,0,13,0,0,0,12,0,0,0,13,0,0,0,12,0,0,0,13,0,0,0,12,0,0,0,13,0,0,0,12,0,0,0,13,0,0,0,12,0,0,0,13,0,0,0,24,0,0,0,25,0,0,0,24,0,0,0,25,0,0,0,24,0,0,0,25,0,0,0,24,0,0,0,25,0,0,0,24,0,0,0,25,0,0,0,24,0,0,0,25,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,44,0,0,0,45,0,0,0,56,0,0,0,57,0,0,0,56,0,0,0,57,0,0,0,56,0,0,0,57,0,0,0,56,0,0,0,57,0,0,0,56,0,0,0,57,0,0,0,56,0,0,0,57,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,74,0,0,0,75,0,0,0,74,0,0,0,75,0,0,0,74,0,0,0,75,0,0,0,74,0,0,0,75,0,0,0,74,0,0,0,75,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,96,0,0,0,97,0,0,0,108,0,0,0,109,0,0,0,108,0,0,0,109,0,0,0,108,0,0,0,109,0,0,0,108,0,0,0,109,0,0,0,108,0,0,0,109,0,0,0,108,0,0,0,109,0,0,0,120,0,0,0,121,0,0,0,120,0,0,0,121,0,0,0,120,0,0,0,121,0,0,0,120,0,0,0,121,0,0,0,120,0,0,0,121,0,0,0,120,0,0,0,121,0,0,0,132,0,0,0,133,0,0,0,134,0,0,0,135,0,0,0,136,0,0,0,137,0,0,0,138,0,0,0,139,0,0,0,140,0,0,0,141,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,142,0,0,0,143,0,0,0,154,0,0,0,155,0,0,0,154,0,0,0,155,0,0,0,154,0,0,0,155,0,0,0,154,0,0,0,155,0,0,0,154,0,0,0,155,0,0,0,154,0,0,0,155,0,0,0,166,0,0,0,167,0,0,0,168,0,0,0,169,0,0,0,170,0,0,0,171,0,0,0,172,0,0,0,173,0,0,0,172,0,0,0,173,0,0,0,172,0,0,0,173,0,0,0,172,0,0,0,173,0,0,0,172,0,0,0,173,0,0,0,172,0,0,0,173,0,0,0,184,0,0,0,185,0,0,0,186,0,0,0,187,0,0,0,188,0,0,0,189,0,0,0,190,0,0,0,191,0,0,0,192,0,0,0,193,0,0,0,194,0,0,0,195,0,0,0,196,0,0,0,197,0,0,0,198,0,0,0,199,0,0,0,200,0,0,0,201,0,0,0,202,0,0,0,203,0,0,0,204,0,0,0,205,0,0,0,206,0,0,0,207,0,0,0,208,0,0,0,209,0,0,0,210,0,0,0,211,0,0,0,212,0,0,0,0,0,0,0,44,59,58,46,34,39,33,63,32,60,62,61,43,45,42,47,92,95,64,35,36,37,38,40,41,123,125,91,93,124,0,0,0,0,0,0,36,0,0,0,38,0,0,0,40,0,0,0,44,0,0,0,68,0,0,0,70,0,0,0,72,0,0,0,74,0,0,0,86,0,0,0,88,0,0,0,90,0,0,0,92,0,0,0,94,0,0,0,96,0,0,0,132,0,0,0,134,0,0,0,136,0,0,0,138,0,0,0,140,0,0,0,142,0,0,0,166,0,0,0,168,0,0,0,170,0,0,0,172,0,0,0,184,0,0,0,1,0,0,0,37,0,0,0,39,0,0,0,41,0,0,0,45,0,0,0,69,0,0,0,71,0,0,0,73,0,0,0,75,0,0,0,87,0,0,0,89,0,0,0,91,0,0,0,93,0,0,0,95,0,0,0,97,0,0,0,133,0,0,0,135,0,0,0,137,0,0,0,139,0,0,0,141,0,0,0,143,0,0,0,167,0,0,0,169,0,0,0,171,0,0,0,173,0,0,0,185], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([192,0,0,0,4,0,0,0,193,0,0,0,2,0,0,0,194,0,0,0,12,0,0,0,194,0,0,0,8,0,0,0,200,0,0,0,48,0,0,0,201,0,0,0,46,0,0,0,202,0,0,0,56,0,0,0,204,0,0,0,78,0,0,0,205,0,0,0,76,0,0,0,210,0,0,0,100,0,0,0,211,0,0,0,98,0,0,0,212,0,0,0,108,0,0,0,213,0,0,0,104,0,0,0,217,0,0,0,146,0,0,0,218,0,0,0,144,0,0,0,221,0,0,0,174,0,0,0,224,0,0,0,5,0,0,0,225,0,0,0,3,0,0,0,226,0,0,0,13,0,0,0,227,0,0,0,9,0,0,0,232,0,0,0,49,0,0,0,233,0,0,0,47,0,0,0,234,0,0,0,57,0,0,0,236,0,0,0,79,0,0,0,237,0,0,0,77,0,0,0,242,0,0,0,101,0,0,0,243,0,0,0,99,0,0,0,244,0,0,0,109,0,0,0,245,0,0,0,105,0,0,0,249,0,0,0,147,0,0,0,250,0,0,0,145,0,0,0,253,0,0,0,175,0,0,0,0,0,0,0,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10624);
/* memory initializer */ allocate([90,0,0,0,10,0,0,0,83,0,0,0,11,0,0,0,70,0,0,0,12,0,0,0,82,0,0,0,13,0,0,0,88,0,0,0,14,0,0,0,74,0,0,0,15,0,0,0,87,0,0,0,16,0,0,0,65,0,0,0,1,0,0,0,69,0,0,0,2,0,0,0,79,0,0,0,3,0,0,0,68,0,0,0,9,0,0,0,91,0,0,0,141,0,0,0,93,0,0,0,175,0,0,0,123,0,0,0,140,0,0,0,125,0,0,0,174,0,0,0,0,0,0,0,19,0,0,0,90,0,0,0,10,0,0,0,83,0,0,0,11,0,0,0,70,0,0,0,12,0,0,0,82,0,0,0,13,0,0,0,88,0,0,0,14,0,0,0,74,0,0,0,15,0,0,0,87,0,0,0,4,0,0,0,65,0,0,0,1,0,0,0,69,0,0,0,2,0,0,0,79,0,0,0,3,0,0,0,68,0,0,0,9,0,0,0,0,0,0,0,19,0,0,0,90,0,0,0,10,0,0,0,83,0,0,0,11,0,0,0,70,0,0,0,12,0,0,0,82,0,0,0,13,0,0,0,88,0,0,0,14,0,0,0,74,0,0,0,15,0,0,0,87,0,0,0,16,0,0,0,65,0,0,0,1,0,0,0,69,0,0,0,2,0,0,0,79,0,0,0,3,0,0,0,68,0,0,0,9,0,0,0,0,0,0,0,19,0,0,0,48,0,0,0,10,0,0,0,49,0,0,0,11,0,0,0,50,0,0,0,12,0,0,0,51,0,0,0,13,0,0,0,52,0,0,0,14,0,0,0,53,0,0,0,15,0,0,0,54,0,0,0,0,0,0,0,55,0,0,0,5,0,0,0,56,0,0,0,8,0,0,0,57,0,0,0,9,0,0,0,0,0,0,0,19,0,0,0,48,0,0,0,10,0,0,0,39,0,0,0,11,0,0,0,96,0,0,0,12,0,0,0,63,0,0,0,13,0,0,0,126,0,0,0,14,0,0,0,46,0,0,0,15,0,0,0,94,0,0,0,0,0,0,0,43,0,0,0,5,0,0,0,42,0,0,0,5,0,0,0,40,0,0,0,8,0,0,0,68,0,0,0,9,0,0,0,92,0,0,0,18,0,0,0,0,0,0,0,19,0,0,0,53,0,0,0,12,0,0,0,37,0,0,0,12,0,0,0,54,0,0,0,13,0,0,0,94,0,0,0,13,0,0,0,55,0,0,0,14,0,0,0,38,0,0,0,14,0,0,0,56,0,0,0,11,0,0,0,42,0,0,0,11,0,0,0,57,0,0,0,15,0,0,0,40,0,0,0,15,0,0,0,49,0,0,0,45,0,0,0,33,0,0,0,44,0,0,0,50,0,0,0,33,0,0,0,64,0,0,0,32,0,0,0,51,0,0,0,77,0,0,0,35,0,0,0,76,0,0,0,52,0,0,0,129,0,0,0,36,0,0,0,128,0,0,0,48,0,0,0,63,0,0,0,41,0,0,0,62,0,0,0,91,0,0,0,175,0,0,0,93,0,0,0,141,0,0,0,123,0,0,0,174,0,0,0,125,0,0,0,140,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,130,131,132,133,134,135,136,137,138,139,140,142,145,146,147,148,149,150,151,152,153,154,155,156,158,159], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+11920);
/* memory initializer */ allocate([1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,255,255,255,255,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,13,0,0,0,255,255,255,255,255,255,255,255,1,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,25,0,0,0,255,255,255,255,255,255,255,255,2,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,0,0,0,0,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,45,0,0,0,255,255,255,255,255,255,255,255,3,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,4,0,0,0,255,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,57,0,0,0,255,255,255,255,255,255,255,255,4,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,75,0,0,0,255,255,255,255,255,255,255,255,5,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,97,0,0,0,255,255,255,255,255,255,255,255,6,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,7,0,0,0,255,255,255,255,8,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,109,0,0,0,255,255,255,255,255,255,255,255,7,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,255,255,255,255,8,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,121,0,0,0,255,255,255,255,255,255,255,255,8,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,7,0,0,0,0,0,0,0,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,143,0,0,0,255,255,255,255,255,255,255,255,9,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,10,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,155,0,0,0,255,255,255,255,255,255,255,255,10,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,173,0,0,0,255,255,255,255,255,255,255,255,11,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,75,0,0,0,255,255,255,255,0,0,0,0,12,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,97,0,0,0,255,255,255,255,0,0,0,0,13,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,143,0,0,0,255,255,255,255,0,0,0,0,14,0,0,0,255,255,255,255,255,255,255,255,16,0,0,0,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,173,0,0,0,255,255,255,255,0,0,0,0,15,0,0,0,255,255,255,255,255,255,255,255,17,0,0,0,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,13,0,0,0,143,0,0,0,255,255,255,255,1,0,0,0,16,0,0,0,255,255,255,255,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,13,0,0,0,173,0,0,0,255,255,255,255,1,0,0,0,17,0,0,0,255,255,255,255,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,45,0,0,0,97,0,0,0,255,255,255,255,3,0,0,0,18,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,0,0,0,0,0,0,0,0,45,0,0,0,143,0,0,0,255,255,255,255,3,0,0,0,19,0,0,0,255,255,255,255,255,255,255,255,20,0,0,0,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,57,0,0,0,143,0,0,0,255,255,255,255,4,0,0,0,20,0,0,0,255,255,255,255,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,75,0,0,0,1,0,0,0,255,255,255,255,5,0,0,0,21,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,75,0,0,0,45,0,0,0,255,255,255,255,5,0,0,0,22,0,0,0,255,255,255,255,255,255,255,255,23,0,0,0,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,1,0,0,0,75,0,0,0,57,0,0,0,255,255,255,255,5,0,0,0,23,0,0,0,255,255,255,255,1,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,75,0,0,0,143,0,0,0,255,255,255,255,5,0,0,0,24,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,1,0,0,0,97,0,0,0,1,0,0,0,255,255,255,255,6,0,0,0,25,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,26,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,97,0,0,0,25,0,0,0,255,255,255,255,6,0,0,0,26,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,255,255,255,255,2,0,0,0,1,0,0,0,1,0,0,0,97,0,0,0,45,0,0,0,255,255,255,255,6,0,0,0,27,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,97,0,0,0,75,0,0,0,255,255,255,255,6,0,0,0,28,0,0,0,255,255,255,255,255,255,255,255,29,0,0,0,255,255,255,255,30,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,109,0,0,0,75,0,0,0,255,255,255,255,7,0,0,0,29,0,0,0,255,255,255,255,0,0,0,0,255,255,255,255,255,255,255,255,30,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,121,0,0,0,75,0,0,0,255,255,255,255,8,0,0,0,30,0,0,0,255,255,255,255,255,255,255,255,29,0,0,0,0,0,0,0,255,255,255,255,2,0,0,0,1,0,0,0,1,0,0,0,143,0,0,0,1,0,0,0,255,255,255,255,9,0,0,0,31,0,0,0,255,255,255,255,255,255,255,255,32,0,0,0,255,255,255,255,41,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,143,0,0,0,13,0,0,0,255,255,255,255,9,0,0,0,32,0,0,0,255,255,255,255,1,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,143,0,0,0,45,0,0,0,255,255,255,255,9,0,0,0,33,0,0,0,255,255,255,255,255,255,255,255,34,0,0,0,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,1,0,0,0,143,0,0,0,57,0,0,0,255,255,255,255,9,0,0,0,34,0,0,0,255,255,255,255,1,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,143,0,0,0,75,0,0,0,255,255,255,255,9,0,0,0,35,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,42,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,143,0,0,0,97,0,0,0,255,255,255,255,9,0,0,0,36,0,0,0,255,255,255,255,255,255,255,255,37,0,0,0,255,255,255,255,43,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,143,0,0,0,109,0,0,0,255,255,255,255,9,0,0,0,37,0,0,0,255,255,255,255,1,0,0,0,255,255,255,255,255,255,255,255,38,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,143,0,0,0,121,0,0,0,255,255,255,255,9,0,0,0,38,0,0,0,255,255,255,255,255,255,255,255,37,0,0,0,1,0,0,0,44,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,143,0,0,0,255,255,255,255,9,0,0,0,39,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,45,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,143,0,0,0,173,0,0,0,255,255,255,255,9,0,0,0,40,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,155,0,0,0,1,0,0,0,255,255,255,255,10,0,0,0,41,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,155,0,0,0,75,0,0,0,255,255,255,255,10,0,0,0,42,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,155,0,0,0,97,0,0,0,255,255,255,255,10,0,0,0,43,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,44,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,155,0,0,0,121,0,0,0,255,255,255,255,10,0,0,0,44,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,2,0,0,0,1,0,0,0,0,0,0,0,155,0,0,0,143,0,0,0,255,255,255,255,10,0,0,0,45,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,173,0,0,0,45,0,0,0,255,255,255,255,11,0,0,0,46,0,0,0,255,255,255,255,255,255,255,255,47,0,0,0,255,255,255,255,255,255,255,255,2,0,0,0,1,0,0,0,1,0,0,0,173,0,0,0,57,0,0,0,255,255,255,255,11,0,0,0,47,0,0,0,255,255,255,255,1,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,0,0,0,0,0,0,0,0,75,0,0,0,45,0,0,0,143,0,0,0,5,0,0,0,22,0,0,0,48,0,0,0,255,255,255,255,49,0,0,0,255,255,255,255,255,255,255,255,3,0,0,0,1,0,0,0,0,0,0,0,75,0,0,0,57,0,0,0,143,0,0,0,5,0,0,0,23,0,0,0,49,0,0,0,1,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,1,0,0,0,0,0,0,0,97,0,0,0,1,0,0,0,75,0,0,0,6,0,0,0,25,0,0,0,50,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,1,0,0,0,0,0,0,0,97,0,0,0,1,0,0,0,173,0,0,0,6,0,0,0,25,0,0,0,51,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,1,0,0,0,0,0,0,0,97,0,0,0,45,0,0,0,97,0,0,0,6,0,0,0,27,0,0,0,52,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,1,0,0,0,173,0,0,0,9,0,0,0,31,0,0,0,53,0,0,0,255,255,255,255,54,0,0,0,255,255,255,255,255,255,255,255,3,0,0,0,1,0,0,0,0,0,0,0,143,0,0,0,13,0,0,0,173,0,0,0,9,0,0,0,32,0,0,0,54,0,0,0,1,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,97,0,0,0,75,0,0,0,9,0,0,0,36,0,0,0,55,0,0,0,255,255,255,255,57,0,0,0,255,255,255,255,64,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,97,0,0,0,143,0,0,0,9,0,0,0,36,0,0,0,56,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,65,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,143,0,0,0,109,0,0,0,75,0,0,0,9,0,0,0,37,0,0,0,57,0,0,0,1,0,0,0,255,255,255,255,255,255,255,255,58,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,121,0,0,0,75,0,0,0,9,0,0,0,38,0,0,0,58,0,0,0,255,255,255,255,57,0,0,0,1,0,0,0,66,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,121,0,0,0,143,0,0,0,9,0,0,0,38,0,0,0,59,0,0,0,255,255,255,255,255,255,255,255,1,0,0,0,67,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,143,0,0,0,173,0,0,0,1,0,0,0,9,0,0,0,40,0,0,0,60,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,0,0,0,0,1,0,0,0,143,0,0,0,173,0,0,0,45,0,0,0,9,0,0,0,40,0,0,0,61,0,0,0,255,255,255,255,62,0,0,0,255,255,255,255,255,255,255,255,3,0,0,0,1,0,0,0,1,0,0,0,143,0,0,0,173,0,0,0,57,0,0,0,9,0,0,0,40,0,0,0,62,0,0,0,2,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,1,0,0,0,0,0,0,0,143,0,0,0,173,0,0,0,143,0,0,0,9,0,0,0,40,0,0,0,63,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,0,0,0,0,0,0,0,0,155,0,0,0,97,0,0,0,75,0,0,0,10,0,0,0,43,0,0,0,64,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,66,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,155,0,0,0,97,0,0,0,143,0,0,0,10,0,0,0,43,0,0,0,65,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,67,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,155,0,0,0,121,0,0,0,75,0,0,0,10,0,0,0,44,0,0,0,66,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,3,0,0,0,1,0,0,0,0,0,0,0,155,0,0,0,121,0,0,0,143,0,0,0,10,0,0,0,44,0,0,0,67,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,3,0,0,0,0,0,0,0,0,0,0,0,173,0,0,0,45,0,0,0,143,0,0,0,11,0,0,0,46,0,0,0,68,0,0,0,255,255,255,255,69,0,0,0,255,255,255,255,255,255,255,255,3,0,0,0,1,0,0,0,0,0,0,0,173,0,0,0,57,0,0,0,143,0,0,0,11,0,0,0,47,0,0,0,69,0,0,0,1,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,37,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,1,0,0,0,39,0,0,0,255,255,255,255,255,255,255,255,1,0,0,0,2,0,0,0,39,0,0,0,73,0,0,0,255,255,255,255,1,0,0,0,1,0,0,0,41,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,1,0,0,0,43,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,2,0,0,0,41,0,0,0,185,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,71,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,2,0,0,0,71,0,0,0,73,0,0,0,255,255,255,255,0,0,0,0,2,0,0,0,71,0,0,0,75,0,0,0,255,255,255,255,0,0,0,0,3,0,0,0,71,0,0,0,75,0,0,0,95,0,0,0,0,0,0,0,1,0,0,0,73,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,1,0,0,0,89,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,2,0,0,0,89,0,0,0,73,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,91,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,1,0,0,0,93,0,0,0,255,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,95,0,0,0,255,255,255,255,255,255,255,255,1,0,0,0,2,0,0,0,95,0,0,0,71,0,0,0,255,255,255,255,1,0,0,0,3,0,0,0,95,0,0,0,71,0,0,0,73,0,0,0,0,0,0,0,2,0,0,0,95,0,0,0,73,0,0,0,255,255,255,255,1,0,0,0,1,0,0,0,133,0,0,0,255,255,255,255,255,255,255,255,1,0,0,0,2,0,0,0,133,0,0,0,73,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,135,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,2,0,0,0,135,0,0,0,143,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,137,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,1,0,0,0,139,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,1,0,0,0,141,0,0,0,255,255,255,255,255,255,255,255,1,0,0,0,2,0,0,0,141,0,0,0,73,0,0,0,255,255,255,255,0,0,0,0,2,0,0,0,141,0,0,0,137,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,167,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,1,0,0,0,171,0,0,0,255,255,255,255,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+13888);
/* memory initializer */ allocate([1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,25,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,1,0,0,0,16,0,0,0,1,0,0,0,19,0,0,0,1,0,0,0,25,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,14,0,0,0,2,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,2,0,0,0,19,0,0,0,2,0,0,0,25,0,0,0,3,0,0,0,1,0,0,0,3,0,0,0,2,0,0,0,3,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,3,0,0,0,16,0,0,0,3,0,0,0,18,0,0,0,3,0,0,0,19,0,0,0,3,0,0,0,25,0,0,0,4,0,0,0,1,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,14,0,0,0,4,0,0,0,15,0,0,0,4,0,0,0,18,0,0,0,4,0,0,0,19,0,0,0,4,0,0,0,25,0,0,0,5,0,0,0,1,0,0,0,5,0,0,0,2,0,0,0,5,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,5,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,5,0,0,0,25,0,0,0,6,0,0,0,1,0,0,0,6,0,0,0,14,0,0,0,6,0,0,0,15,0,0,0,6,0,0,0,16,0,0,0,6,0,0,0,19,0,0,0,6,0,0,0,25,0,0,0,7,0,0,0,1,0,0,0,7,0,0,0,14,0,0,0,7,0,0,0,15,0,0,0,7,0,0,0,16,0,0,0,7,0,0,0,19,0,0,0,7,0,0,0,25,0,0,0,8,0,0,0,14,0,0,0,8,0,0,0,15,0,0,0,8,0,0,0,19,0,0,0,8,0,0,0,25,0,0,0,9,0,0,0,1,0,0,0,9,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,9,0,0,0,16,0,0,0,9,0,0,0,19,0,0,0,9,0,0,0,25,0,0,0,10,0,0,0,1,0,0,0,10,0,0,0,14,0,0,0,10,0,0,0,15,0,0,0,10,0,0,0,16,0,0,0,10,0,0,0,25,0,0,0,11,0,0,0,25,0,0,0,22,0,0,0,1,0,0,0,22,0,0,0,14,0,0,0,22,0,0,0,15,0,0,0,22,0,0,0,16,0,0,0,22,0,0,0,19,0,0,0,22,0,0,0,25,0,0,0,23,0,0,0,1,0,0,0,23,0,0,0,14,0,0,0,23,0,0,0,15,0,0,0,23,0,0,0,16,0,0,0,23,0,0,0,19,0,0,0,23,0,0,0,25,0,0,0,25,0,0,0,1,0,0,0,25,0,0,0,2,0,0,0,25,0,0,0,14,0,0,0,25,0,0,0,15,0,0,0,25,0,0,0,16,0,0,0,25,0,0,0,18,0,0,0,25,0,0,0,19,0,0,0,25,0,0,0,25,0,0,0,26,0,0,0,1,0,0,0,26,0,0,0,14,0,0,0,26,0,0,0,15,0,0,0,26,0,0,0,16,0,0,0,26,0,0,0,25,0,0,0,27,0,0,0,15,0,0,0,27,0,0,0,25,0,0,0,31,0,0,0,15,0,0,0,31,0,0,0,16,0,0,0,31,0,0,0,25,0,0,0,32,0,0,0,15,0,0,0,32,0,0,0,16,0,0,0,32,0,0,0,25,0,0,0,33,0,0,0,1,0,0,0,33,0,0,0,2,0,0,0,33,0,0,0,15,0,0,0,33,0,0,0,18,0,0,0,34,0,0,0,1,0,0,0,34,0,0,0,2,0,0,0,34,0,0,0,15,0,0,0,34,0,0,0,18,0,0,0,36,0,0,0,1,0,0,0,36,0,0,0,14,0,0,0,36,0,0,0,15,0,0,0,36,0,0,0,16,0,0,0,36,0,0,0,19,0,0,0,36,0,0,0,25,0,0,0,37,0,0,0,1,0,0,0,37,0,0,0,14,0,0,0,37,0,0,0,15,0,0,0,37,0,0,0,16,0,0,0,37,0,0,0,25,0,0,0,43,0,0,0,1,0,0,0,43,0,0,0,14,0,0,0,43,0,0,0,15,0,0,0,43,0,0,0,16,0,0,0,43,0,0,0,19,0,0,0,43,0,0,0,25,0,0,0,44,0,0,0,1,0,0,0,44,0,0,0,14,0,0,0,44,0,0,0,15,0,0,0,44,0,0,0,16,0,0,0,44,0,0,0,19,0,0,0,44,0,0,0,25,0,0,0,40,0,0,0,1,0,0,0,40,0,0,0,2,0,0,0,40,0,0,0,15,0,0,0,40,0,0,0,18,0,0,0,40,0,0,0,19,0,0,0,40,0,0,0,25,0,0,0,46,0,0,0,14,0,0,0,46,0,0,0,15,0,0,0,46,0,0,0,16,0,0,0,46,0,0,0,19,0,0,0,46,0,0,0,25,0,0,0,47,0,0,0,14,0,0,0,47,0,0,0,15,0,0,0,47,0,0,0,16,0,0,0,47,0,0,0,25,0,0,0,61,0,0,0,15,0,0,0,61,0,0,0,25,0,0,0,62,0,0,0,15,0,0,0,62,0,0,0,25,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,48,0,0,0,49,0,0,0,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+19732);
/* memory initializer */ allocate([85,110,105,107,101,121,83,101,116,117,112,0,0,0,0,0,85,110,105,107,101,121,83,101,116,73,110,112,117,116,77,101,116,104,111,100,0,0,0,0,85,110,105,107,101,121,67,108,101,97,110,117,112,0,0,0,85,110,105,107,101,121,80,117,116,67,104,97,114,0,0,0,85,110,105,107,101,121,82,101,115,101,116,66,117,102,0,0,85,110,105,107,101,121,66,97,99,107,115,112,97,99,101,80,114,101,115,115,0,0,0,0,85,110,105,107,101,121,83,101,116,67,97,112,115,83,116,97,116,101,0,0,0,0,0,0,85,110,105,107,101,121,83,101,116,83,105,110,103,108,101,77,111,100,101,0,0,0,0,0,85,110,105,107,101,121,82,101,115,116,111,114,101,75,101,121,83,116,114,111,107,101,115,0,103,101,116,85,110,105,107,101,121,66,117,102,0,0,0,0,85,110,105,107,101,121,70,105,108,116,101,114,0,0,0,0,103,101,116,85,110,105,107,101,121,66,97,99,107,115,112,97,99,101,115,0,0,0,0,0,103,101,116,85,110,105,107,101,121,66,117,102,67,104,97,114,115,0,0,0,0,0,0,0,85,107,73,110,112,117,116,77,101,116,104,111,100,0,0,0,85,107,84,101,108,101,120,0,85,107,86,110,105,0,0,0,85,107,86,105,113,114,0,0,49,51,85,107,73,110,112,117,116,77,101,116,104,111,100,0,248,204,0,0,104,134,0,0,105,105,0,0,0,0,0,0,160,204,0,0,0,0,0,0,118,105,105,105,0,0,0,0,48,204,0,0,160,204,0,0,160,204,0,0,0,0,0,0,118,105,105,0,0,0,0,0,48,204,0,0,176,204,0,0,118,105,105,0,0,0,0,0,48,204,0,0,120,134,0,0,118,105,0,0,0,0,0,0,48,204,0,0,0,0,0,0,118,111,105,100,0,0,0,0,98,111,111,108,0,0,0,0,108,111,110,103,0,0,0,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,117,110,115,105,103,110,101,100,32,99,104,97,114,62,0,0,0,0,0,0,0,0,115,116,100,58,58,119,115,116,114,105,110,103,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,118,97,108,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,99,104,97,114,62,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,115,105,103,110,101,100,32,99,104,97,114,62,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,99,104,97,114,62,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,115,104,111,114,116,62,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,115,104,111,114,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,62,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,105,110,116,62,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,108,111,110,103,62,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,108,111,110,103,62,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,56,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,56,95,116,62,0,0,0,0,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,49,54,95,116,62,0,0,0,0,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,49,54,95,116,62,0,0,0,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,51,50,95,116,62,0,0,0,0,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,51,50,95,116,62,0,0,0,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,102,108,111,97,116,62,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,100,111,117,98,108,101,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,108,111,110,103,32,100,111,117,98,108,101,62,0,0,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,101,69,69,0,0,176,203,0,0,208,137,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,100,69,69,0,0,176,203,0,0,248,137,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,102,69,69,0,0,176,203,0,0,32,138,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,109,69,69,0,0,176,203,0,0,72,138,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,108,69,69,0,0,176,203,0,0,112,138,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,106,69,69,0,0,176,203,0,0,152,138,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,105,69,69,0,0,176,203,0,0,192,138,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,116,69,69,0,0,176,203,0,0,232,138,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,115,69,69,0,0,176,203,0,0,16,139,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,104,69,69,0,0,176,203,0,0,56,139,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,97,69,69,0,0,176,203,0,0,96,139,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,99,69,69,0,0,176,203,0,0,136,139,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,51,118,97,108,69,0,0,0,0,0,0,176,203,0,0,176,139,0,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,50,49,95,95,98,97,115,105,99,95,115,116,114,105,110,103,95,99,111,109,109,111,110,73,76,98,49,69,69,69,0,0,0,176,203,0,0,16,140,0,0,176,205,0,0,208,139,0,0,0,0,0,0,1,0,0,0,56,140,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,104,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,104,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,104,69,69,69,69,0,0,176,205,0,0,88,140,0,0,0,0,0,0,1,0,0,0,56,140,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,176,205,0,0,176,140,0,0,0,0,0,0,1,0,0,0,56,140], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+34096);
/* memory initializer */ allocate([144,145,0,0,24,0,0,0,25,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,11,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,14,0,0,0,17,0,0,0,4,0,0,0,18,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,80,205,0,0,112,145,0,0,248,150,0,0,0,0,0,0,0,0,0,0,248,145,0,0,24,0,0,0,26,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,15,0,0,0,12,0,0,0,3,0,0,0,16,0,0,0,17,0,0,0,19,0,0,0,5,0,0,0,20,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,80,205,0,0,224,145,0,0,248,150,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,0,0,0,0,144,146,0,0,27,0,0,0,28,0,0,0,3,0,0,0,6,0,0,0,2,0,0,0,2,0,0,0,18,0,0,0,19,0,0,0,7,0,0,0,20,0,0,0,21,0,0,0,21,0,0,0,8,0,0,0,22,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,80,205,0,0,112,146,0,0,184,150,0,0,0,0,0,0,0,0,0,0,248,146,0,0,27,0,0,0,29,0,0,0,4,0,0,0,6,0,0,0,2,0,0,0,2,0,0,0,22,0,0,0,19,0,0,0,7,0,0,0,23,0,0,0,24,0,0,0,23,0,0,0,9,0,0,0,24,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,80,205,0,0,224,146,0,0,184,150,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,176,203,0,0,8,147,0,0,58,32,0,0,0,0,0,0,0,0,0,0,104,147,0,0,30,0,0,0,31,0,0,0,25,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,80,205,0,0,80,147,0,0,88,202,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,176,203,0,0,120,147,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,80,205,0,0,160,147,0,0,152,147,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,150,0,0,32,0,0,0,33,0,0,0,5,0,0,0,6,0,0,0,2,0,0,0,2,0,0,0,22,0,0,0,19,0,0,0,7,0,0,0,20,0,0,0,21,0,0,0,21,0,0,0,9,0,0,0,24,0,0,0,0,0,0,0,248,150,0,0,34,0,0,0,35,0,0,0,6,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,15,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,14,0,0,0,17,0,0,0,5,0,0,0,20,0,0,0,8,0,0,0,0,0,0,0,48,151,0,0,36,0,0,0,37,0,0,0,248,255,255,255,248,255,255,255,48,151,0,0,38,0,0,0,39,0,0,0,8,0,0,0,0,0,0,0,120,151,0,0,40,0,0,0,41,0,0,0,248,255,255,255,248,255,255,255,120,151,0,0,42,0,0,0,43,0,0,0,4,0,0,0,0,0,0,0,192,151,0,0,44,0,0,0,45,0,0,0,252,255,255,255,252,255,255,255,192,151,0,0,46,0,0,0,47,0,0,0,4,0,0,0,0,0,0,0,8,152,0,0,48,0,0,0,49,0,0,0,252,255,255,255,252,255,255,255,8,152,0,0,50,0,0,0,51,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,149,0,0,52,0,0,0,53,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,248,149,0,0,54,0,0,0,55,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,80,205,0,0,176,149,0,0,104,147,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,176,203,0,0,224,149,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,80,205,0,0,0,150,0,0,248,149,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,80,205,0,0,64,150,0,0,248,149,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,176,203,0,0,128,150,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,176,203,0,0,192,150,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,176,205,0,0,0,151,0,0,0,0,0,0,1,0,0,0,48,150,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,176,205,0,0,72,151,0,0,0,0,0,0,1,0,0,0,112,150,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,176,205,0,0,144,151,0,0,0,0,0,0,1,0,0,0,48,150,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,176,205,0,0,216,151,0,0,0,0,0,0,1,0,0,0,112,150,0,0,3,244,255,255,0,0,0,0,104,152,0,0,56,0,0,0,57,0,0,0,26,0,0,0,1,0,0,0,10,0,0,0,11,0,0,0,2,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,80,205,0,0,72,152,0,0,184,147,0,0,0,0,0,0,0,0,0,0,96,166,0,0,58,0,0,0,59,0,0,0,60,0,0,0,1,0,0,0,3,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,166,0,0,61,0,0,0,62,0,0,0,60,0,0,0,2,0,0,0,4,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,171,0,0,63,0,0,0,64,0,0,0,60,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,208,171,0,0,65,0,0,0,66,0,0,0,60,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,172,0,0,67,0,0,0,68,0,0,0,60,0,0,0,3,0,0,0,4,0,0,0,23,0,0,0,5,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,40,173,0,0,69,0,0,0,70,0,0,0,60,0,0,0,7,0,0,0,8,0,0,0,25,0,0,0,9,0,0,0,26,0,0,0,3,0,0,0,4,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,80,168,0,0,71,0,0,0,72,0,0,0,60,0,0,0,27,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,248,255,255,255,80,168,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,240,168,0,0,73,0,0,0,74,0,0,0,60,0,0,0,35,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,2,0,0,0,248,255,255,255,240,168,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,128,169,0,0,75,0,0,0,76,0,0,0,60,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,169,0,0,77,0,0,0,78,0,0,0,60,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,166,0,0,79,0,0,0,80,0,0,0,60,0,0,0,43,0,0,0,44,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,45,0,0,0,11,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,167,0,0,81,0,0,0,82,0,0,0,60,0,0,0,46,0,0,0,47,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,48,0,0,0,17,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,167,0,0,83,0,0,0,84,0,0,0,60,0,0,0,49,0,0,0,50,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,51,0,0,0,23,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,167,0,0,85,0,0,0,86,0,0,0,60,0,0,0,52,0,0,0,53,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,54,0,0,0,29,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,173,0,0,87,0,0,0,88,0,0,0,60,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,0,0,0,0,72,174,0,0,89,0,0,0,90,0,0,0,60,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,0,0,0,0,216,174,0,0,91,0,0,0,92,0,0,0,60,0,0,0,1,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,46,48,76,102,0,0,0,0,0,0,0,104,175,0,0,93,0,0,0,94,0,0,0,60,0,0,0,2,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,170,0,0,95,0,0,0,96,0,0,0,60,0,0,0,14,0,0,0,11,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,170,0,0,97,0,0,0,98,0,0,0,60,0,0,0,15,0,0,0,12,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,118,101,99,116,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,56,166,0,0,99,0,0,0,100,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,163,0,0,101,0,0,0,102,0,0,0,60,0,0,0,25,0,0,0,16,0,0,0,26,0,0,0,17,0,0,0,27,0,0,0,24,0,0,0,18,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,163,0,0,103,0,0,0,104,0,0,0,60,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,55,0,0,0,56,0,0,0,5,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,165,0,0,105,0,0,0,106,0,0,0,60,0,0,0,58,0,0,0,59,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,0,0,0,0,16,166,0,0,107,0,0,0,108,0,0,0,60,0,0,0,60,0,0,0,61,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,0,0,72,162,0,0,109,0,0,0,110,0,0,0,60,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,80,205,0,0,48,162,0,0,40,147,0,0,0,0,0,0,0,0,0,0,216,162,0,0,109,0,0,0,111,0,0,0,60,0,0,0,19,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,20,0,0,0,29,0,0,0,21,0,0,0,30,0,0,0,28,0,0,0,22,0,0,0,6,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,176,203,0,0,184,162,0,0,176,205,0,0,160,162,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,208,162,0,0,2,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,176,205,0,0,248,162,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,208,162,0,0,2,0,0,0,0,0,0,0,168,163,0,0,109,0,0,0,112,0,0,0,60,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,62,0,0,0,63,0,0,0,8,0,0,0,64,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,176,203,0,0,136,163,0,0,176,205,0,0,96,163,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,160,163,0,0,2,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,176,205,0,0,200,163,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,160,163,0,0,2,0,0,0,0,0,0,0,104,164,0,0,109,0,0,0,113,0,0,0,60,0,0,0,5,0,0,0,6,0,0,0,9,0,0,0,65,0,0,0,66,0,0,0,10,0,0,0,67,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,176,205,0,0,64,164,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,160,163,0,0,2,0,0,0,0,0,0,0,224,164,0,0,109,0,0,0,114,0,0,0,60,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,68,0,0,0,69,0,0,0,12,0,0,0,70,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,176,205,0,0,184,164,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,160,163,0,0,2,0,0,0,0,0,0,0,88,165,0,0,109,0,0,0,115,0,0,0,60,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,68,0,0,0,69,0,0,0,12,0,0,0,70,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,80,205,0,0,48,165,0,0,224,164,0,0,0,0,0,0,0,0,0,0,192,165,0,0,109,0,0,0,116,0,0,0,60,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,68,0,0,0,69,0,0,0,12,0,0,0,70,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,80,205,0,0,152,165,0,0,224,164,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,80,205,0,0,208,165,0,0,72,162,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,80,205,0,0,248,165,0,0,72,162,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,80,205,0,0,32,166,0,0,72,162,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,80,205,0,0,72,166,0,0,72,162,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,80,205,0,0,112,166,0,0,72,162,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,176,203,0,0,184,166,0,0,176,205,0,0,152,166,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,208,166,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,176,205,0,0,248,166,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,208,166,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,176,205,0,0,56,167,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,208,166,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,176,205,0,0,120,167,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,208,166,0,0,2,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,176,203,0,0,0,168,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,176,203,0,0,32,168,0,0,176,205,0,0,184,167,0,0,0,0,0,0,3,0,0,0,72,162,0,0,2,0,0,0,24,168,0,0,2,0,0,0,72,168,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,176,203,0,0,192,168,0,0,176,205,0,0,120,168,0,0,0,0,0,0,3,0,0,0,72,162,0,0,2,0,0,0,24,168,0,0,2,0,0,0,232,168,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,176,203,0,0,96,169,0,0,176,205,0,0,24,169,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,120,169,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,176,205,0,0,160,169,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,120,169,0,0,0,8,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,176,203,0,0,32,170,0,0,176,205,0,0,8,170,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,56,170,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,176,205,0,0,96,170,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,56,170,0,0,2,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,176,203,0,0,248,170,0,0,176,205,0,0,224,170,0,0,0,0,0,0,1,0,0,0,24,171,0,0,0,0,0,0,176,205,0,0,152,170,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,32,171,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,176,205,0,0,160,171,0,0,0,0,0,0,1,0,0,0,24,171,0,0,0,0,0,0,176,205,0,0,88,171,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,184,171,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,176,203,0,0,80,172,0,0,176,205,0,0,56,172,0,0,0,0,0,0,1,0,0,0,112,172,0,0,0,0,0,0,176,205,0,0,240,171,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,120,172,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,176,205,0,0,248,172,0,0,0,0,0,0,1,0,0,0,112,172,0,0,0,0,0,0,176,205,0,0,176,172,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,16,173,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,176,203,0,0,144,173,0,0,176,205,0,0,72,173,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,176,173,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,176,203,0,0,32,174,0,0,176,205,0,0,216,173,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,64,174,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,176,203,0,0,176,174,0,0,176,205,0,0,104,174,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,208,174,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,176,203,0,0,64,175,0,0,176,205,0,0,248,174,0,0,0,0,0,0,2,0,0,0,72,162,0,0,2,0,0,0,96,175,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+37164);
/* memory initializer */ allocate([83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,32,99,111,110,115,116,0,0,32,118,111,108,97,116,105,108,101,0,0,0,0,0,0,0,32,114,101,115,116,114,105,99,116,0,0,0,0,0,0,0,32,99,111,109,112,108,101,120,0,0,0,0,0,0,0,0,32,105,109,97,103,105,110,97,114,121,0,0,0,0,0,0,32,91,0,0,0,0,0,0,32,40,0,0,0,0,0,0,41,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,38,38,0,0,0,0,0,0,111,98,106,99,95,111,98,106,101,99,116,60,0,0,0,0,42,0,0,0,0,0,0,0,105,100,0,0,0,0,0,0,38,0,0,0,0,0,0,0,111,98,106,99,112,114,111,116,111,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,62,0,0,0,0,0,0,0,32,118,101,99,116,111,114,91,0,0,0,0,0,0,0,0,93,0,0,0,0,0,0,0,112,105,120,101,108,32,118,101,99,116,111,114,91,0,0,0,126,0,0,0,0,0,0,0,58,58,0,0,0,0,0,0,100,101,108,101,116,101,91,93,32,0,0,0,0,0,0,0,100,101,108,101,116,101,32,0,47,0,0,0,0,0,0,0,41,91,0,0,0,0,0,0,60,60,61,0,0,0,0,0,41,45,45,0,0,0,0,0,45,62,42,0,0,0,0,0,41,43,43,0,0,0,0,0,41,32,63,32,40,0,0,0,41,32,58,32,40,0,0,0,62,62,61,0,0,0,0,0,116,104,114,111,119,0,0,0,116,104,114,111,119,32,0,0,116,121,112,101,105,100,40,0,115,105,122,101,111,102,46,46,46,40,0,0,0,0,0,0,44,32,0,0,0,0,0,0,115,105,122,101,111,102,32,40,0,0,0,0,0,0,0,0,115,116,97,116,105,99,95,99,97,115,116,60,0,0,0,0,62,40,0,0,0,0,0,0,114,101,105,110,116,101,114,112,114,101,116,95,99,97,115,116,60,0,0,0,0,0,0,0,45,62,0,0,0,0,0,0,110,111,101,120,99,101,112,116,32,40,0,0,0,0,0,0,91,93,32,0,0,0,0,0,41,32,0,0,0,0,0,0,46,42,0,0,0,0,0,0,115,116,100,58,58,0,0,0,111,112,101,114,97,116,111,114,38,38,0,0,0,0,0,0,111,112,101,114,97,116,111,114,38,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,38,61,0,0,0,0,0,0,111,112,101,114,97,116,111,114,61,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,40,41,0,0,0,0,0,0,111,112,101,114,97,116,111,114,44,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,126,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,32,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,91,93,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,42,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,0,111,112,101,114,97,116,111,114,47,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,47,61,0,0,0,0,0,0,111,112,101,114,97,116,111,114,94,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,94,61,0,0,0,0,0,0,111,112,101,114,97,116,111,114,61,61,0,0,0,0,0,0,111,112,101,114,97,116,111,114,62,61,0,0,0,0,0,0,111,112,101,114,97,116,111,114,62,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,91,93,0,0,0,0,0,0,111,112,101,114,97,116,111,114,60,61,0,0,0,0,0,0,111,112,101,114,97,116,111,114,34,34,32,0,0,0,0,0,111,112,101,114,97,116,111,114,60,60,0,0,0,0,0,0,111,112,101,114,97,116,111,114,60,60,61,0,0,0,0,0,111,112,101,114,97,116,111,114,60,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,45,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,45,61,0,0,0,0,0,0,111,112,101,114,97,116,111,114,42,61,0,0,0,0,0,0,111,112,101,114,97,116,111,114,45,45,0,0,0,0,0,0,111,112,101,114,97,116,111,114,32,110,101,119,91,93,0,0,111,112,101,114,97,116,111,114,33,61,0,0,0,0,0,0,111,112,101,114,97,116,111,114,33,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,32,110,101,119,0,0,0,0,111,112,101,114,97,116,111,114,124,124,0,0,0,0,0,0,111,112,101,114,97,116,111,114,124,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,124,61,0,0,0,0,0,0,111,112,101,114,97,116,111,114,45,62,42,0,0,0,0,0,111,112,101,114,97,116,111,114,43,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,43,61,0,0,0,0,0,0,111,112,101,114,97,116,111,114,43,43,0,0,0,0,0,0,111,112,101,114,97,116,111,114,45,62,0,0,0,0,0,0,111,112,101,114,97,116,111,114,63,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,37,0,0,0,0,0,0,0,111,112,101,114,97,116,111,114,37,61,0,0,0,0,0,0,111,112,101,114,97,116,111,114,62,62,0,0,0,0,0,0,111,112,101,114,97,116,111,114,62,62,61,0,0,0,0,0,39,108,97,109,98,100,97,39,40,0,0,0,0,0,0,0,115,116,100,58,58,115,116,114,105,110,103,0,0,0,0,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,44,32,115,116,100,58,58,97,108,108,111,99,97,116,111,114,60,99,104,97,114,62,32,62,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,115,116,100,58,58,105,115,116,114,101,97,109,0,0,0,0,115,116,100,58,58,98,97,115,105,99,95,105,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,0,0,0,0,0,0,98,97,115,105,99,95,105,115,116,114,101,97,109,0,0,0,115,116,100,58,58,111,115,116,114,101,97,109,0,0,0,0,115,116,100,58,58,98,97,115,105,99,95,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,0,0,0,0,0,0,98,97,115,105,99,95,111,115,116,114,101,97,109,0,0,0,115,116,100,58,58,105,111,115,116,114,101,97,109,0,0,0,115,116,100,58,58,98,97,115,105,99,95,105,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0,0,0,0,0,0,98,97,115,105,99,95,105,111,115,116,114,101,97,109,0,0,100,121,110,97,109,105,99,95,99,97,115,116,60,0,0,0,41,40,0,0,0,0,0,0,99,111,110,115,116,95,99,97,115,116,60,0,0,0,0,0,97,108,105,103,110,111,102,32,40,0,0,0,0,0,0,0,102,112,0,0,0,0,0,0,119,99,104,97,114,95,116,0,102,97,108,115,101,0,0,0,99,104,97,114,0,0,0,0,115,105,103,110,101,100,32,99,104,97,114,0,0,0,0,0,117,110,115,105,103,110,101,100,32,99,104,97,114,0,0,0,115,104,111,114,116,0,0,0,117,110,115,105,103,110,101,100,32,115,104,111,114,116,0,0,0,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,117,108,108,0,0,0,0,0,117,110,115,105,103,110,101,100,32,95,95,105,110,116,49,50,56,0,0,0,0,0,0,0,37,76,97,76,0,0,0,0,37,97,0,0,0,0,0,0,37,97,102,0,0,0,0,0,100,101,99,108,116,121,112,101,40,0,0,0,0,0,0,0,115,116,100,58,58,97,108,108,111,99,97,116,111,114,0,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,0,0,0,58,58,115,116,114,105,110,103,32,108,105,116,101,114,97,108,0,0,0,0,0,0,0,0,115,116,100,0,0,0,0,0,95,71,76,79,66,65,76,95,95,78,0,0,0,0,0,0,40,97,110,111,110,121,109,111,117,115,32,110,97,109,101,115,112,97,99,101,41,0,0,0,32,62,0,0,0,0,0,0,58,58,42,0,0,0,0,0,32,38,0,0,0,0,0,0,32,38,38,0,0,0,0,0,32,91,93,0,0,0,0,0,105,110,116,0,0,0,0,0,117,110,115,105,103,110,101,100,32,105,110,116,0,0,0,0,117,110,115,105,103,110,101,100,32,108,111,110,103,0,0,0,108,111,110,103,32,108,111,110,103,0,0,0,0,0,0,0,117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,0,0,0,0,0,0,102,108,111,97,116,0,0,0,100,111,117,98,108,101,0,0,108,111,110,103,32,100,111,117,98,108,101,0,0,0,0,0,95,95,102,108,111,97,116,49,50,56,0,0,0,0,0,0,46,46,46,0,0,0,0,0,100,101,99,105,109,97,108,54,52,0,0,0,0,0,0,0,100,101,99,105,109,97,108,49,50,56,0,0,0,0,0,0,100,101,99,105,109,97,108,51,50,0,0,0,0,0,0,0,100,101,99,105,109,97,108,49,54,0,0,0,0,0,0,0,115,116,100,58,58,110,117,108,108,112,116,114,95,116,0,0,95,98,108,111,99,107,95,105,110,118,111,107,101,0,0,0,105,110,118,111,99,97,116,105,111,110,32,102,117,110,99,116,105,111,110,32,102,111,114,32,98,108,111,99,107,32,105,110,32,0,0,0,0,0,0,0,118,116,97,98,108,101,32,102,111,114,32,0,0,0,0,0,86,84,84,32,102,111,114,32,0,0,0,0,0,0,0,0,116,121,112,101,105,110,102,111,32,102,111,114,32,0,0,0,116,121,112,101,105,110,102,111,32,110,97,109,101,32,102,111,114,32,0,0,0,0,0,0,99,111,118,97,114,105,97,110,116,32,114,101,116,117,114,110,32,116,104,117,110,107,32,116,111,32,0,0,0,0,0,0,99,111,110,115,116,114,117,99,116,105,111,110,32,118,116,97,98,108,101,32,102,111,114,32,0,0,0,0,0,0,0,0,45,105,110,45,0,0,0,0,118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0,0,0,0,0,0,0,110,111,110,45,118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0,0,0,103,117,97,114,100,32,118,97,114,105,97,98,108,101,32,102,111,114,32,0,0,0,0,0,114,101,102,101,114,101,110,99,101,32,116,101,109,112,111,114,97,114,121,32,102,111,114,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,0,224,200,0,0,117,0,0,0,118,0,0,0,71,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,80,205,0,0,208,200,0,0,104,201,0,0,0,0,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,176,203,0,0,88,201,0,0,0,0,0,0,176,201,0,0,119,0,0,0,120,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,88,202,0,0,121,0,0,0,122,0,0,0,25,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,80,205,0,0,160,201,0,0,104,201,0,0,0,0,0,0,0,0,0,0,240,201,0,0,119,0,0,0,123,0,0,0,72,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,80,205,0,0,216,201,0,0,176,201,0,0,0,0,0,0,0,0,0,0,48,202,0,0,119,0,0,0,124,0,0,0,72,0,0,0,0,0,0,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,80,205,0,0,24,202,0,0,176,201,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,80,205,0,0,64,202,0,0,104,201,0,0,0,0,0,0,0,0,0,0,184,202,0,0,125,0,0,0,126,0,0,0,73,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,176,203,0,0,144,202,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,80,205,0,0,168,202,0,0,104,201,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,80,205,0,0,200,202,0,0,160,202,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,80,205,0,0,0,203,0,0,240,202,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,80,205,0,0,96,203,0,0,240,202,0,0,0,0,0,0,80,205,0,0,56,203,0,0,136,203,0,0,0,0,0,0,0,0,0,0,40,203,0,0,127,0,0,0,128,0,0,0,129,0,0,0,130,0,0,0,23,0,0,0,13,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,24,204,0,0,127,0,0,0,131,0,0,0,129,0,0,0,130,0,0,0,24,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0,80,205,0,0,240,203,0,0,240,202,0,0,0,0,0,0,118,0,0,0,0,0,0,0,216,203,0,0,40,204,0,0,98,0,0,0,0,0,0,0,216,203,0,0,56,204,0,0,99,0,0,0,0,0,0,0,216,203,0,0,72,204,0,0,104,0,0,0,0,0,0,0,216,203,0,0,88,204,0,0,97,0,0,0,0,0,0,0,216,203,0,0,104,204,0,0,115,0,0,0,0,0,0,0,216,203,0,0,120,204,0,0,116,0,0,0,0,0,0,0,216,203,0,0,136,204,0,0,105,0,0,0,0,0,0,0,216,203,0,0,152,204,0,0,106,0,0,0,0,0,0,0,216,203,0,0,168,204,0,0,216,203,0,0,248,196,0,0,109,0,0,0,0,0,0,0,216,203,0,0,192,204,0,0,102,0,0,0,0,0,0,0,216,203,0,0,208,204,0,0,100,0,0,0,0,0,0,0,216,203,0,0,224,204,0,0,0,0,0,0,56,205,0,0,127,0,0,0,132,0,0,0,129,0,0,0,130,0,0,0,25,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,101,110,117,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,80,205,0,0,16,205,0,0,240,202,0,0,0,0,0,0,0,0,0,0,152,205,0,0,127,0,0,0,133,0,0,0,129,0,0,0,130,0,0,0,23,0,0,0,14,0,0,0,2,0,0,0,6,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,80,205,0,0,112,205,0,0,40,203,0,0,0,0,0,0,0,0,0,0,248,205,0,0,127,0,0,0,134,0,0,0,129,0,0,0,130,0,0,0,23,0,0,0,15,0,0,0,3,0,0,0,7,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,80,205,0,0,208,205,0,0,40,203,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,95,112,137,0,255,9,47,15,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+47568);




var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}


  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }function ___cxa_atexit() {
  return _atexit.apply(null, arguments)
  }

   
  Module["_i64Subtract"] = _i64Subtract;

  
  
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value;
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  
  
  
  function embind_init_charCodes() {
      var codes = new Array(256);
      for (var i = 0; i < 256; ++i) {
          codes[i] = String.fromCharCode(i);
      }
      embind_charCodes = codes;
    }var embind_charCodes=undefined;function readLatin1String(ptr) {
      var ret = "";
      var c = ptr;
      while (HEAPU8[c]) {
          ret += embind_charCodes[HEAPU8[c++]];
      }
      return ret;
    }
  
  
  var awaitingDependencies={};
  
  var registeredTypes={};
  
  var typeDependencies={};
  
  
  
  
  
  
  var char_0=48;
  
  var char_9=57;function makeLegalFunctionName(name) {
      if (undefined === name) {
          return '_unknown';
      }
      name = name.replace(/[^a-zA-Z0-9_]/g, '$');
      var f = name.charCodeAt(0);
      if (f >= char_0 && f <= char_9) {
          return '_' + name;
      } else {
          return name;
      }
    }function createNamedFunction(name, body) {
      name = makeLegalFunctionName(name);
      /*jshint evil:true*/
      return new Function(
          "body",
          "return function " + name + "() {\n" +
          "    \"use strict\";" +
          "    return body.apply(this, arguments);\n" +
          "};\n"
      )(body);
    }function extendError(baseErrorType, errorName) {
      var errorClass = createNamedFunction(errorName, function(message) {
          this.name = errorName;
          this.message = message;
  
          var stack = (new Error(message)).stack;
          if (stack !== undefined) {
              this.stack = this.toString() + '\n' +
                  stack.replace(/^Error(:[^\n]*)?\n/, '');
          }
      });
      errorClass.prototype = Object.create(baseErrorType.prototype);
      errorClass.prototype.constructor = errorClass;
      errorClass.prototype.toString = function() {
          if (this.message === undefined) {
              return this.name;
          } else {
              return this.name + ': ' + this.message;
          }
      };
  
      return errorClass;
    }var BindingError=undefined;function throwBindingError(message) {
      throw new BindingError(message);
    }
  
  
  
  var InternalError=undefined;function throwInternalError(message) {
      throw new InternalError(message);
    }function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
      myTypes.forEach(function(type) {
          typeDependencies[type] = dependentTypes;
      });
  
      function onComplete(typeConverters) {
          var myTypeConverters = getTypeConverters(typeConverters);
          if (myTypeConverters.length !== myTypes.length) {
              throwInternalError('Mismatched type converter count');
          }
          for (var i = 0; i < myTypes.length; ++i) {
              registerType(myTypes[i], myTypeConverters[i]);
          }
      }
  
      var typeConverters = new Array(dependentTypes.length);
      var unregisteredTypes = [];
      var registered = 0;
      dependentTypes.forEach(function(dt, i) {
          if (registeredTypes.hasOwnProperty(dt)) {
              typeConverters[i] = registeredTypes[dt];
          } else {
              unregisteredTypes.push(dt);
              if (!awaitingDependencies.hasOwnProperty(dt)) {
                  awaitingDependencies[dt] = [];
              }
              awaitingDependencies[dt].push(function() {
                  typeConverters[i] = registeredTypes[dt];
                  ++registered;
                  if (registered === unregisteredTypes.length) {
                      onComplete(typeConverters);
                  }
              });
          }
      });
      if (0 === unregisteredTypes.length) {
          onComplete(typeConverters);
      }
    }function registerType(rawType, registeredInstance, options) {
      options = options || {};
  
      if (!('argPackAdvance' in registeredInstance)) {
          throw new TypeError('registerType registeredInstance requires argPackAdvance');
      }
  
      var name = registeredInstance.name;
      if (!rawType) {
          throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
      }
      if (registeredTypes.hasOwnProperty(rawType)) {
          if (options.ignoreDuplicateRegistrations) {
              return;
          } else {
              throwBindingError("Cannot register type '" + name + "' twice");
          }
      }
  
      registeredTypes[rawType] = registeredInstance;
      delete typeDependencies[rawType];
  
      if (awaitingDependencies.hasOwnProperty(rawType)) {
          var callbacks = awaitingDependencies[rawType];
          delete awaitingDependencies[rawType];
          callbacks.forEach(function(cb) {
              cb();
          });
      }
    }function __embind_register_void(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          isVoid: true, // void return values can be optimized out sometimes
          name: name,
          'argPackAdvance': 0,
          'fromWireType': function() {
              return undefined;
          },
          'toWireType': function(destructors, o) {
              // TODO: assert if anything else is given?
              return undefined;
          },
      });
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  
  function getShiftFromSize(size) {
      switch (size) {
          case 1: return 0;
          case 2: return 1;
          case 4: return 2;
          case 8: return 3;
          default:
              throw new TypeError('Unknown type size: ' + size);
      }
    }function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
      var shift = getShiftFromSize(size);
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(wt) {
              // ambiguous emscripten ABI: sometimes return values are
              // true or false, and sometimes integers (0 or 1)
              return !!wt;
          },
          'toWireType': function(destructors, o) {
              return o ? trueValue : falseValue;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': function(pointer) {
              // TODO: if heap is fixed (like in asm.js) this could be executed outside
              var heap;
              if (size === 1) {
                  heap = HEAP8;
              } else if (size === 2) {
                  heap = HEAP16;
              } else if (size === 4) {
                  heap = HEAP32;
              } else {
                  throw new TypeError("Unknown boolean type size: " + name);
              }
              return this['fromWireType'](heap[pointer >> shift]);
          },
          destructorFunction: null, // This type does not need a destructor
      });
    }

  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }

  function _pthread_mutex_lock() {}

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }

  
  function _free() {
  }
  Module["_free"] = _free;
  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;
  
  function simpleReadValueFromPointer(pointer) {
      return this['fromWireType'](HEAPU32[pointer >> 2]);
    }function __embind_register_std_string(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              if (value instanceof ArrayBuffer) {
                  value = new Uint8Array(value);
              }
  
              function getTAElement(ta, index) {
                  return ta[index];
              }
              function getStringElement(string, index) {
                  return string.charCodeAt(index);
              }
              var getElement;
              if (value instanceof Uint8Array) {
                  getElement = getTAElement;
              } else if (value instanceof Int8Array) {
                  getElement = getTAElement;
              } else if (typeof value === 'string') {
                  getElement = getStringElement;
              } else {
                  throwBindingError('Cannot pass non-string to std::string');
              }
  
              // assumes 4-byte alignment
              var length = value.length;
              var ptr = _malloc(4 + length);
              HEAPU32[ptr >> 2] = length;
              for (var i = 0; i < length; ++i) {
                  var charCode = getElement(value, i);
                  if (charCode > 255) {
                      _free(ptr);
                      throwBindingError('String has UTF-16 code units that do not fit in 8 bits');
                  }
                  HEAPU8[ptr + 4 + i] = charCode;
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function __embind_register_std_wstring(rawType, charSize, name) {
      name = readLatin1String(name);
      var HEAP, shift;
      if (charSize === 2) {
          HEAP = HEAPU16;
          shift = 1;
      } else if (charSize === 4) {
          HEAP = HEAPU32;
          shift = 2;
      }
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              var start = (value + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAP[start + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              // assumes 4-byte alignment
              var length = value.length;
              var ptr = _malloc(4 + length * charSize);
              HEAPU32[ptr >> 2] = length;
              var start = (ptr + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  HEAP[start + i] = value.charCodeAt(i);
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }

  
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          }
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.buffer.byteLength which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
  
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
  
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) { // Can we just reuse the buffer we are given?
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          fileStore.createIndex('timestamp', 'timestamp', { unique: false });
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function() { callback(this.error); };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function() { callback(this.error); };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function() { done(this.error); };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },getStreamFromPtr:function (ptr) {
        return FS.streams[ptr - 1];
      },getPtrForStream:function (stream) {
        return stream ? stream.fd + 1 : 0;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=FS.getPtrForStream(stdin);
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=FS.getPtrForStream(stdout);
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=FS.getPtrForStream(stderr);
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperty(node, "usedBytes", {
            get: function() { return this.contents.length; }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
  
      /*
      // Disabled, see https://github.com/kripken/emscripten/issues/2770
      stream = FS.getStreamFromPtr(stream);
      if (stream.stream_ops.flush) {
        stream.stream_ops.flush(stream);
      }
      */
    }

   
  Module["_strlen"] = _strlen;

  
  
  
  
  function _mkport() { throw 'TODO' }var SOCKFS={mount:function (mount) {
        // If Module['websocket'] has already been defined (e.g. for configuring
        // the subprotocol/url) use that, if not initialise it to a new object.
        Module['websocket'] = (Module['websocket'] && 
                               ('object' === typeof Module['websocket'])) ? Module['websocket'] : {};
  
        // Add the Event registration mechanism to the exported websocket configuration
        // object so we can register network callbacks from native JavaScript too.
        // For more documentation see system/include/emscripten/emscripten.h
        Module['websocket']._callbacks = {};
        Module['websocket']['on'] = function(event, callback) {
  	    if ('function' === typeof callback) {
  		  this._callbacks[event] = callback;
          }
  	    return this;
        };
  
        Module['websocket'].emit = function(event, param) {
  	    if ('function' === typeof this._callbacks[event]) {
  		  this._callbacks[event].call(this, param);
          }
        };
  
        // If debug is enabled register simple default logging callbacks for each Event.
  
        return FS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
  
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          error: null, // Used in getsockopt for SOL_SOCKET/SO_ERROR test
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
  
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
  
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
  
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
  
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
  
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
  
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              // runtimeConfig gets set to true if WebSocket runtime configuration is available.
              var runtimeConfig = (Module['websocket'] && ('object' === typeof Module['websocket']));
  
              // The default value is 'ws://' the replace is needed because the compiler replaces '//' comments with '#'
              // comments without checking context, so we'd end up with ws:#, the replace swaps the '#' for '//' again.
              var url = 'ws:#'.replace('#', '//');
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['url']) {
                  url = Module['websocket']['url']; // Fetch runtime WebSocket URL config.
                }
              }
  
              if (url === 'ws://' || url === 'wss://') { // Is the supplied URL config just a prefix, if so complete it.
                var parts = addr.split('/');
                url = url + parts[0] + ":" + port + "/" + parts.slice(1).join('/');
              }
  
              // Make the WebSocket subprotocol (Sec-WebSocket-Protocol) default to binary if no configuration is set.
              var subProtocols = 'binary'; // The default value is 'binary'
  
              if (runtimeConfig) {
                if ('string' === typeof Module['websocket']['subprotocol']) {
                  subProtocols = Module['websocket']['subprotocol']; // Fetch runtime WebSocket subprotocol config.
                }
              }
  
              // The regex trims the string (removes spaces at the beginning and end, then splits the string by
              // <any space>,<any space> into an Array. Whitespace removal is important for Websockify and ws.
              subProtocols = subProtocols.replace(/^ +| +$/g,"").split(/ *, */);
  
              // The node ws library API for specifying optional subprotocol is slightly different than the browser's.
              var opts = ENVIRONMENT_IS_NODE ? {'protocol': subProtocols.toString()} : subProtocols;
  
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
  
  
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
  
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
  
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
  
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
  
          var handleOpen = function () {
  
            Module['websocket'].emit('open', sock.stream.fd);
  
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
  
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
  
  
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
  
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
            Module['websocket'].emit('message', sock.stream.fd);
          };
  
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('close', function() {
              Module['websocket'].emit('close', sock.stream.fd);
            });
            peer.socket.on('error', function(error) {
              // Although the ws library may pass errors that may be more descriptive than
              // ECONNREFUSED they are not necessarily the expected error code e.g. 
              // ENOTFOUND on getaddrinfo seems to be node.js specific, so using ECONNREFUSED
              // is still probably the most useful thing to do.
              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onclose = function() {
              Module['websocket'].emit('close', sock.stream.fd);
            };
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
            peer.socket.onerror = function(error) {
              // The WebSocket spec only allows a 'simple event' to be thrown on error,
              // so we only really know as much as ECONNREFUSED.
              sock.error = ERRNO_CODES.ECONNREFUSED; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
              Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'ECONNREFUSED: Connection refused']);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
  
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
  
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
  
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
  
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
  
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
  
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
  
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
  
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
  
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          Module['websocket'].emit('listen', sock.stream.fd); // Send Event with listen fd.
  
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
  
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
  
              // push to queue for accept to pick up
              sock.pending.push(newsock);
              Module['websocket'].emit('connection', newsock.stream.fd);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
              Module['websocket'].emit('connection', sock.stream.fd);
            }
          });
          sock.server.on('closed', function() {
            Module['websocket'].emit('close', sock.stream.fd);
            sock.server = null;
          });
          sock.server.on('error', function(error) {
            // Although the ws library may pass errors that may be more descriptive than
            // ECONNREFUSED they are not necessarily the expected error code e.g. 
            // ENOTFOUND on getaddrinfo seems to be node.js specific, so using EHOSTUNREACH
            // is still probably the most useful thing to do. This error shouldn't
            // occur in a well written app as errors should get trapped in the compiled
            // app's own getaddrinfo call.
            sock.error = ERRNO_CODES.EHOSTUNREACH; // Used in getsockopt for SOL_SOCKET/SO_ERROR test.
            Module['websocket'].emit('error', [sock.stream.fd, sock.error, 'EHOSTUNREACH: Host is unreachable']);
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
  
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
  
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
  
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
  
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
  
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
  
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
  
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
  
  
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
  
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) return -1;
      return stream.fd;
    }function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)>>0)]=chr;
      var fd = _fileno(stream);
      var ret = _write(fd, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

   
  Module["_i64Add"] = _i64Add;

  var _fabs=Math_abs;

  function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var fd = _fileno(stream);
      var bytesWritten = _write(fd, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStreamFromPtr(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return (bytesWritten / size)|0;
      }
    }

  
  
  
  
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
  
  
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)>>0)]=streamObj.ungotten.pop();
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(streamObj.fd, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return (bytesRead / size)|0;
    }function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStreamFromPtr(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)>>0)];
      }
    }function _getc() {
  return _fgetc.apply(null, arguments)
  }

  
  function _embind_repr(v) {
      if (v === null) {
          return 'null';
      }
      var t = typeof v;
      if (t === 'object' || t === 'array' || t === 'function') {
          return v.toString();
      } else {
          return '' + v;
      }
    }
  
  function integerReadValueFromPointer(name, shift, signed) {
      // integers are quite common, so generate very specialized functions
      switch (shift) {
          case 0: return signed ?
              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :
              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };
          case 1: return signed ?
              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :
              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };
          case 2: return signed ?
              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :
              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };
          default:
              throw new TypeError("Unknown integer type: " + name);
      }
    }function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
      name = readLatin1String(name);
      if (maxRange === -1) { // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come out as 'i32 -1'. Always treat those as max u32.
          maxRange = 4294967295;
      }
  
      var shift = getShiftFromSize(size);
  
      registerType(primitiveType, {
          name: name,
          'fromWireType': function(value) {
              return value;
          },
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following two if()s and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              if (value < minRange || value > maxRange) {
                  throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');
              }
              return value | 0;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, value); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      }
      return 0;
    }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(function() {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        });
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
      else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
      Browser.mainLoop.scheduler();
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
        
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvasContainer.requestFullScreen();
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              Browser.lastTouches[touch.identifier] = Browser.touches[touch.identifier];
              Browser.touches[touch.identifier] = { x: adjustedX, y: adjustedY };
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i];
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  
  
  var emval_free_list=[];
  
  var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle) {
      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
          emval_handle_array[handle] = undefined;
          emval_free_list.push(handle);
      }
    }
  
  
  
  function count_emval_handles() {
      var count = 0;
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              ++count;
          }
      }
      return count;
    }
  
  function get_first_emval() {
      for (var i = 1; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              return emval_handle_array[i];
          }
      }
      return null;
    }function init_emval() {
      Module['count_emval_handles'] = count_emval_handles;
      Module['get_first_emval'] = get_first_emval;
    }function __emval_register(value) {
  
      switch(value){
        case undefined :{ return 1; }
        case null :{ return 2; }
        case true :{ return 3; }
        case false :{ return 4; }
        default:{
          var handle = emval_free_list.length ?
              emval_free_list.pop() :
              emval_handle_array.length;
  
          emval_handle_array[handle] = {refcount: 1, value: value};
          return handle;
          }
        }
    }function __embind_register_emval(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(handle) {
              var rv = emval_handle_array[handle].value;
              __emval_decref(handle);
              return rv;
          },
          'toWireType': function(destructors, value) {
              return __emval_register(value);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: null, // This type does not need a destructor
  
          // TODO: do we need a deleteObject here?  write a test where
          // emval is passed into JS via an interface
      });
    }

  
  var LOCALE={curr:0,check:function (locale) {
        if (locale) locale = Pointer_stringify(locale);
        return locale === 'C' || locale === 'POSIX' || !locale;
      }};function _freelocale(locale) {
      _free(locale);
    }

  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  function _catopen(name, oflag) {
      // nl_catd catopen (const char *name, int oflag)
      return -1;
    }

  function _catgets(catd, set_id, msg_id, s) {
      // char *catgets (nl_catd catd, int set_id, int msg_id, const char *s)
      return s;
    }

  
  function floatReadValueFromPointer(name, shift) {
      switch (shift) {
          case 2: return function(pointer) {
              return this['fromWireType'](HEAPF32[pointer >> 2]);
          };
          case 3: return function(pointer) {
              return this['fromWireType'](HEAPF64[pointer >> 3]);
          };
          default:
              throw new TypeError("Unknown float type: " + name);
      }
    }function __embind_register_float(rawType, name, size) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              return value;
          },
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following if() and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              return value;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': floatReadValueFromPointer(name, shift),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  var _BDtoIHigh=true;

  function _pthread_cond_broadcast() {
      return 0;
    }

  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  
  
  function new_(constructor, argumentList) {
      if (!(constructor instanceof Function)) {
          throw new TypeError('new_ called with constructor type ' + typeof(constructor) + " which is not a function");
      }
  
      /*
       * Previously, the following line was just:
  
       function dummy() {};
  
       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even though at creation, the 'dummy' has the
       * correct constructor name.  Thus, objects created with IMVU.new would show up in the debugger as 'dummy', which
       * isn't very helpful.  Using IMVU.createNamedFunction addresses the issue.  Doublely-unfortunately, there's no way
       * to write a test for this behavior.  -NRD 2013.02.22
       */
      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});
      dummy.prototype = constructor.prototype;
      var obj = new dummy;
  
      var r = constructor.apply(obj, argumentList);
      return (r instanceof Object) ? r : obj;
    }
  
  function runDestructors(destructors) {
      while (destructors.length) {
          var ptr = destructors.pop();
          var del = destructors.pop();
          del(ptr);
      }
    }function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
      // humanName: a human-readable string name for the function to be generated.
      // argTypes: An array that contains the embind type objects for all types in the function signature.
      //    argTypes[0] is the type object for the function return value.
      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.
      //    argTypes[2...] are the actual function parameters.
      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.
      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.
      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.
      var argCount = argTypes.length;
  
      if (argCount < 2) {
          throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
      }
  
      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);
  
      // Free functions with signature "void function()" do not need an invoker that marshalls between wire types.
  // TODO: This omits argument count check - enable only at -O3 or similar.
  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == "void" && !isClassMethodFunc) {
  //       return FUNCTION_TABLE[fn];
  //    }
  
      var argsList = "";
      var argsListWired = "";
      for(var i = 0; i < argCount - 2; ++i) {
          argsList += (i!==0?", ":"")+"arg"+i;
          argsListWired += (i!==0?", ":"")+"arg"+i+"Wired";
      }
  
      var invokerFnBody =
          "return function "+makeLegalFunctionName(humanName)+"("+argsList+") {\n" +
          "if (arguments.length !== "+(argCount - 2)+") {\n" +
              "throwBindingError('function "+humanName+" called with ' + arguments.length + ' arguments, expected "+(argCount - 2)+" args!');\n" +
          "}\n";
  
  
      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.
      // TODO: Remove this completely once all function invokers are being dynamically generated.
      var needsDestructorStack = false;
  
      for(var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.
          if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack
              needsDestructorStack = true;
              break;
          }
      }
  
      if (needsDestructorStack) {
          invokerFnBody +=
              "var destructors = [];\n";
      }
  
      var dtorStack = needsDestructorStack ? "destructors" : "null";
      var args1 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"];
      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];
  
  
      if (isClassMethodFunc) {
          invokerFnBody += "var thisWired = classParam.toWireType("+dtorStack+", this);\n";
      }
  
      for(var i = 0; i < argCount - 2; ++i) {
          invokerFnBody += "var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n";
          args1.push("argType"+i);
          args2.push(argTypes[i+2]);
      }
  
      if (isClassMethodFunc) {
          argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
      }
  
      var returns = (argTypes[0].name !== "void");
  
      invokerFnBody +=
          (returns?"var rv = ":"") + "invoker(fn"+(argsListWired.length>0?", ":"")+argsListWired+");\n";
  
      if (needsDestructorStack) {
          invokerFnBody += "runDestructors(destructors);\n";
      } else {
          for(var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.
              var paramName = (i === 1 ? "thisWired" : ("arg"+(i - 2)+"Wired"));
              if (argTypes[i].destructorFunction !== null) {
                  invokerFnBody += paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n";
                  args1.push(paramName+"_dtor");
                  args2.push(argTypes[i].destructorFunction);
              }
          }
      }
  
      if (returns) {
          invokerFnBody += "var ret = retType.fromWireType(rv);\n" +
                           "return ret;\n";
      } else {
      }
      invokerFnBody += "}\n";
  
      args1.push(invokerFnBody);
  
      var invokerFunction = new_(Function, args1).apply(null, args2);
      return invokerFunction;
    }
  
  
  function ensureOverloadTable(proto, methodName, humanName) {
      if (undefined === proto[methodName].overloadTable) {
          var prevFunc = proto[methodName];
          // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.
          proto[methodName] = function() {
              // TODO This check can be removed in -O3 level "unsafe" optimizations.
              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
                  throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
              }
              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
          };
          // Move the previous function into the overload table.
          proto[methodName].overloadTable = [];
          proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
      }
    }function exposePublicSymbol(name, value, numArguments) {
      if (Module.hasOwnProperty(name)) {
          if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {
              throwBindingError("Cannot register public name '" + name + "' twice");
          }
  
          // We are exposing a function with the same name as an existing function. Create an overload table and a function selector
          // that routes between the two.
          ensureOverloadTable(Module, name, name);
          if (Module.hasOwnProperty(numArguments)) {
              throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
          }
          // Add the new function into the overload table.
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          if (undefined !== numArguments) {
              Module[name].numArguments = numArguments;
          }
      }
    }
  
  function heap32VectorToArray(count, firstElement) {
      var array = [];
      for (var i = 0; i < count; i++) {
          array.push(HEAP32[(firstElement >> 2) + i]);
      }
      return array;
    }
  
  function replacePublicSymbol(name, value, numArguments) {
      if (!Module.hasOwnProperty(name)) {
          throwInternalError('Replacing nonexistant public symbol');
      }
      // If there's an overload table for this symbol, replace the symbol in the overload table instead.
      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
      }
    }
  
  function requireFunction(signature, rawFunction) {
      signature = readLatin1String(signature);
  
      function makeDynCaller(dynCall) {
          var args = [];
          for (var i = 1; i < signature.length; ++i) {
              args.push('a' + i);
          }
  
          var name = 'dynCall_' + signature + '_' + rawFunction;
          var body = 'return function ' + name + '(' + args.join(', ') + ') {\n';
          body    += '    return dynCall(rawFunction' + (args.length ? ', ' : '') + args.join(', ') + ');\n';
          body    += '};\n';
  
          return (new Function('dynCall', 'rawFunction', body))(dynCall, rawFunction);
      }
  
      var fp;
      if (Module['FUNCTION_TABLE_' + signature] !== undefined) {
          fp = Module['FUNCTION_TABLE_' + signature][rawFunction];
      } else if (typeof FUNCTION_TABLE !== "undefined") {
          fp = FUNCTION_TABLE[rawFunction];
      } else {
          // asm.js does not give direct access to the function tables,
          // and thus we must go through the dynCall interface which allows
          // calling into a signature's function table by pointer value.
          //
          // https://github.com/dherman/asm.js/issues/83
          //
          // This has three main penalties:
          // - dynCall is another function call in the path from JavaScript to C++.
          // - JITs may not predict through the function table indirection at runtime.
          var dc = asm['dynCall_' + signature];
          if (dc === undefined) {
              // We will always enter this branch if the signature
              // contains 'f' and PRECISE_F32 is not enabled.
              //
              // Try again, replacing 'f' with 'd'.
              dc = asm['dynCall_' + signature.replace(/f/g, 'd')];
              if (dc === undefined) {
                  throwBindingError("No dynCall invoker for signature: " + signature);
              }
          }
          fp = makeDynCaller(dc);
      }
  
      if (typeof fp !== "function") {
          throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
      }
      return fp;
    }
  
  
  var UnboundTypeError=undefined;function throwUnboundTypeError(message, types) {
      var unboundTypes = [];
      var seen = {};
      function visit(type) {
          if (seen[type]) {
              return;
          }
          if (registeredTypes[type]) {
              return;
          }
          if (typeDependencies[type]) {
              typeDependencies[type].forEach(visit);
              return;
          }
          unboundTypes.push(type);
          seen[type] = true;
      }
      types.forEach(visit);
  
      throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));
    }function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {
      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      name = readLatin1String(name);
      
      rawInvoker = requireFunction(signature, rawInvoker);
  
      exposePublicSymbol(name, function() {
          throwUnboundTypeError('Cannot call ' + name + ' due to unbound types', argTypes);
      }, argCount - 1);
  
      whenDependentTypesAreResolved([], argTypes, function(argTypes) {
          var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);
          replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn), argCount - 1);
          return [];
      });
    }

  function ___cxa_guard_release() {}

  
  
  
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = (HEAP32[((tempDoublePtr)>>2)]=HEAP32[(((varargs)+(argIndex))>>2)],HEAP32[(((tempDoublePtr)+(4))>>2)]=HEAP32[(((varargs)+((argIndex)+(4)))>>2)],(+(HEAPF64[(tempDoublePtr)>>3])));
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+4))>>2)]];
  
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Runtime.getNativeFieldSize(type);
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[((textIndex)>>0)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)>>0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          }
  
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)>>0)];
            }
          }
  
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)>>0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)>>0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)>>0)];
          }
          if (precision < 0) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)>>0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)>>0)];
  
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
  
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
  
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
  
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
  
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
  
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
  
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
  
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
  
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
  
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
  
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
  
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)>>0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length;
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[((i)>>0)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }

  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i];
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  
  
  function getTypeName(type) {
      var ptr = ___getTypeName(type);
      var rv = readLatin1String(ptr);
      _free(ptr);
      return rv;
    }function requireRegisteredType(rawType, humanName) {
      var impl = registeredTypes[rawType];
      if (undefined === impl) {
          throwBindingError(humanName + " has unknown type " + getTypeName(rawType));
      }
      return impl;
    }function __embind_register_enum_value(
      rawEnumType,
      name,
      enumValue
    ) {
      var enumType = requireRegisteredType(rawEnumType, 'enum');
      name = readLatin1String(name);
  
      var Enum = enumType.constructor;
  
      var Value = Object.create(enumType.constructor.prototype, {
          value: {value: enumValue},
          constructor: {value: createNamedFunction(enumType.name + '_' + name, function() {})},
      });
      Enum.values[enumValue] = Value;
      Enum[name] = Value;
    }


  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  
  function _calloc(n, s) {
      var ret = _malloc(n*s);
      _memset(ret, 0, n*s);
      return ret;
    }
  Module["_calloc"] = _calloc;function _newlocale(mask, locale, base) {
      if (!LOCALE.check(locale)) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      if (!base) base = _calloc(1, 4);
      return base;
    }

   
  Module["_memmove"] = _memmove;

  function ___errno_location() {
      return ___errno_state;
    }

  var _BItoD=true;

  function _catclose(catd) {
      // int catclose (nl_catd catd)
      return 0;
    }

  function _pthread_mutex_unlock() {}

  function _pthread_cond_wait() {
      return 0;
    }

  function __embind_register_memory_view(rawType, dataTypeIndex, name) {
      var typeMapping = [
          Int8Array,
          Uint8Array,
          Int16Array,
          Uint16Array,
          Int32Array,
          Uint32Array,
          Float32Array,
          Float64Array,
      ];
  
      var TA = typeMapping[dataTypeIndex];
  
      function decodeMemoryView(handle) {
          handle = handle >> 2;
          var heap = HEAPU32;
          var size = heap[handle]; // in elements
          var data = heap[handle + 1]; // byte offset into emscripten heap
          return new TA(heap['buffer'], data, size);
      }
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': decodeMemoryView,
          'argPackAdvance': 8,
          'readValueFromPointer': decodeMemoryView,
      }, {
          ignoreDuplicateRegistrations: true,
      });
    }

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStreamFromPtr(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }

  
  function enumReadValueFromPointer(name, shift, signed) {
      switch (shift) {
          case 0: return function(pointer) {
              var heap = signed ? HEAP8 : HEAPU8;
              return this['fromWireType'](heap[pointer]);
          };
          case 1: return function(pointer) {
              var heap = signed ? HEAP16 : HEAPU16;
              return this['fromWireType'](heap[pointer >> 1]);
          };
          case 2: return function(pointer) {
              var heap = signed ? HEAP32 : HEAPU32;
              return this['fromWireType'](heap[pointer >> 2]);
          };
          default:
              throw new TypeError("Unknown integer type: " + name);
      }
    }function __embind_register_enum(
      rawType,
      name,
      size,
      isSigned
    ) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
  
      function constructor() {
      }
      constructor.values = {};
  
      registerType(rawType, {
          name: name,
          constructor: constructor,
          'fromWireType': function(c) {
              return this.constructor.values[c];
          },
          'toWireType': function(destructors, c) {
              return c.value;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': enumReadValueFromPointer(name, shift, isSigned),
          destructorFunction: null,
      });
      exposePublicSymbol(name, constructor);
    }

  function _uselocale(locale) {
      var old = LOCALE.curr;
      if (locale) LOCALE.curr = locale;
      return old;
    }

  var ___dso_handle=allocate(1, "i32*", ALLOC_STATIC);



___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
embind_init_charCodes()
BindingError = Module['BindingError'] = extendError(Error, 'BindingError');
InternalError = Module['InternalError'] = extendError(Error, 'InternalError');
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
init_emval();
UnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "min": Math_min, "invoke_iiii": invoke_iiii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_i": invoke_i, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_ii": invoke_ii, "invoke_viiiiiid": invoke_viiiiiid, "invoke_viii": invoke_viii, "invoke_viiiiid": invoke_viiiiid, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiii": invoke_iiiii, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_fabs": _fabs, "floatReadValueFromPointer": floatReadValueFromPointer, "simpleReadValueFromPointer": simpleReadValueFromPointer, "throwInternalError": throwInternalError, "get_first_emval": get_first_emval, "___cxa_guard_acquire": ___cxa_guard_acquire, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "getShiftFromSize": getShiftFromSize, "__addDays": __addDays, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "_sbrk": _sbrk, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_sysconf": _sysconf, "__embind_register_std_string": __embind_register_std_string, "_fread": _fread, "_write": _write, "whenDependentTypesAreResolved": whenDependentTypesAreResolved, "___cxa_atexit": ___cxa_atexit, "_catclose": _catclose, "_send": _send, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "embind_init_charCodes": embind_init_charCodes, "_strerror_r": _strerror_r, "___setErrNo": ___setErrNo, "readLatin1String": readLatin1String, "_newlocale": _newlocale, "__embind_register_bool": __embind_register_bool, "___resumeException": ___resumeException, "_freelocale": _freelocale, "createNamedFunction": createNamedFunction, "__embind_register_emval": __embind_register_emval, "__embind_register_enum_value": __embind_register_enum_value, "__emval_decref": __emval_decref, "_pthread_once": _pthread_once, "___ctype_toupper_loc": ___ctype_toupper_loc, "heap32VectorToArray": heap32VectorToArray, "_getc": _getc, "_read": _read, "_fwrite": _fwrite, "_time": _time, "_fprintf": _fprintf, "new_": new_, "_catopen": _catopen, "replacePublicSymbol": replacePublicSymbol, "___ctype_b_loc": ___ctype_b_loc, "_vfprintf": _vfprintf, "__embind_register_integer": __embind_register_integer, "___cxa_allocate_exception": ___cxa_allocate_exception, "__isLeapYear": __isLeapYear, "_pwrite": _pwrite, "_uselocale": _uselocale, "enumReadValueFromPointer": enumReadValueFromPointer, "_embind_repr": _embind_repr, "_strftime": _strftime, "throwUnboundTypeError": throwUnboundTypeError, "craftInvokerFunction": craftInvokerFunction, "runDestructors": runDestructors, "requireRegisteredType": requireRegisteredType, "makeLegalFunctionName": makeLegalFunctionName, "_pthread_key_create": _pthread_key_create, "init_emval": init_emval, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_recv": _recv, "_fputc": _fputc, "_abort": _abort, "throwBindingError": throwBindingError, "getTypeName": getTypeName, "exposePublicSymbol": exposePublicSymbol, "_pthread_getspecific": _pthread_getspecific, "_pthread_cond_wait": _pthread_cond_wait, "__embind_register_memory_view": __embind_register_memory_view, "extendError": extendError, "_ungetc": _ungetc, "ensureOverloadTable": ensureOverloadTable, "__embind_register_void": __embind_register_void, "__embind_register_function": __embind_register_function, "_strftime_l": _strftime_l, "_pthread_mutex_lock": _pthread_mutex_lock, "__reallyNegative": __reallyNegative, "__emval_register": __emval_register, "_catgets": _catgets, "_calloc": _calloc, "_fileno": _fileno, "__arraySum": __arraySum, "___ctype_tolower_loc": ___ctype_tolower_loc, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pread": _pread, "_mkport": _mkport, "__embind_register_float": __embind_register_float, "integerReadValueFromPointer": integerReadValueFromPointer, "__embind_register_std_wstring": __embind_register_std_wstring, "_fflush": _fflush, "_emscripten_set_main_loop": _emscripten_set_main_loop, "___errno_location": ___errno_location, "___cxa_guard_release": ___cxa_guard_release, "_pthread_setspecific": _pthread_setspecific, "_fgetc": _fgetc, "registerType": registerType, "___cxa_throw": ___cxa_throw, "__embind_register_enum": __embind_register_enum, "count_emval_handles": count_emval_handles, "requireFunction": requireFunction, "_strerror": _strerror, "__formatString": __formatString, "_atexit": _atexit, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "___dso_handle": ___dso_handle, "_stderr": _stderr, "_stdin": _stdin, "_stdout": _stdout };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ctlz_i8=env.ctlz_i8|0;
  var ___dso_handle=env.___dso_handle|0;
  var _stderr=env._stderr|0;
  var _stdin=env._stdin|0;
  var _stdout=env._stdout|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = +env.NaN, inf = +env.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var abort=env.abort;
  var assert=env.assert;
  var Math_min=env.min;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_i=env.invoke_i;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_viiiiiiiii=env.invoke_viiiiiiiii;
  var invoke_ii=env.invoke_ii;
  var invoke_viiiiiid=env.invoke_viiiiiid;
  var invoke_viii=env.invoke_viii;
  var invoke_viiiiid=env.invoke_viiiiid;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiiiiiii=env.invoke_viiiiiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _fabs=env._fabs;
  var floatReadValueFromPointer=env.floatReadValueFromPointer;
  var simpleReadValueFromPointer=env.simpleReadValueFromPointer;
  var throwInternalError=env.throwInternalError;
  var get_first_emval=env.get_first_emval;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var getShiftFromSize=env.getShiftFromSize;
  var __addDays=env.__addDays;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _sbrk=env._sbrk;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _sysconf=env._sysconf;
  var __embind_register_std_string=env.__embind_register_std_string;
  var _fread=env._fread;
  var _write=env._write;
  var whenDependentTypesAreResolved=env.whenDependentTypesAreResolved;
  var ___cxa_atexit=env.___cxa_atexit;
  var _catclose=env._catclose;
  var _send=env._send;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var embind_init_charCodes=env.embind_init_charCodes;
  var _strerror_r=env._strerror_r;
  var ___setErrNo=env.___setErrNo;
  var readLatin1String=env.readLatin1String;
  var _newlocale=env._newlocale;
  var __embind_register_bool=env.__embind_register_bool;
  var ___resumeException=env.___resumeException;
  var _freelocale=env._freelocale;
  var createNamedFunction=env.createNamedFunction;
  var __embind_register_emval=env.__embind_register_emval;
  var __embind_register_enum_value=env.__embind_register_enum_value;
  var __emval_decref=env.__emval_decref;
  var _pthread_once=env._pthread_once;
  var ___ctype_toupper_loc=env.___ctype_toupper_loc;
  var heap32VectorToArray=env.heap32VectorToArray;
  var _getc=env._getc;
  var _read=env._read;
  var _fwrite=env._fwrite;
  var _time=env._time;
  var _fprintf=env._fprintf;
  var new_=env.new_;
  var _catopen=env._catopen;
  var replacePublicSymbol=env.replacePublicSymbol;
  var ___ctype_b_loc=env.___ctype_b_loc;
  var _vfprintf=env._vfprintf;
  var __embind_register_integer=env.__embind_register_integer;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var __isLeapYear=env.__isLeapYear;
  var _pwrite=env._pwrite;
  var _uselocale=env._uselocale;
  var enumReadValueFromPointer=env.enumReadValueFromPointer;
  var _embind_repr=env._embind_repr;
  var _strftime=env._strftime;
  var throwUnboundTypeError=env.throwUnboundTypeError;
  var craftInvokerFunction=env.craftInvokerFunction;
  var runDestructors=env.runDestructors;
  var requireRegisteredType=env.requireRegisteredType;
  var makeLegalFunctionName=env.makeLegalFunctionName;
  var _pthread_key_create=env._pthread_key_create;
  var init_emval=env.init_emval;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _recv=env._recv;
  var _fputc=env._fputc;
  var _abort=env._abort;
  var throwBindingError=env.throwBindingError;
  var getTypeName=env.getTypeName;
  var exposePublicSymbol=env.exposePublicSymbol;
  var _pthread_getspecific=env._pthread_getspecific;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var __embind_register_memory_view=env.__embind_register_memory_view;
  var extendError=env.extendError;
  var _ungetc=env._ungetc;
  var ensureOverloadTable=env.ensureOverloadTable;
  var __embind_register_void=env.__embind_register_void;
  var __embind_register_function=env.__embind_register_function;
  var _strftime_l=env._strftime_l;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var __reallyNegative=env.__reallyNegative;
  var __emval_register=env.__emval_register;
  var _catgets=env._catgets;
  var _calloc=env._calloc;
  var _fileno=env._fileno;
  var __arraySum=env.__arraySum;
  var ___ctype_tolower_loc=env.___ctype_tolower_loc;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pread=env._pread;
  var _mkport=env._mkport;
  var __embind_register_float=env.__embind_register_float;
  var integerReadValueFromPointer=env.integerReadValueFromPointer;
  var __embind_register_std_wstring=env.__embind_register_std_wstring;
  var _fflush=env._fflush;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var ___errno_location=env.___errno_location;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var _pthread_setspecific=env._pthread_setspecific;
  var _fgetc=env._fgetc;
  var registerType=env.registerType;
  var ___cxa_throw=env.___cxa_throw;
  var __embind_register_enum=env.__embind_register_enum;
  var count_emval_handles=env.count_emval_handles;
  var requireFunction=env.requireFunction;
  var _strerror=env._strerror;
  var __formatString=env.__formatString;
  var _atexit=env._atexit;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
STACKTOP = (STACKTOP + 15)&-16;

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}
function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __ZN14StringBIStream3eosEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($1|0);
}
function __ZN14StringBIStream7getNextERh($this,$b) {
 $this = $this|0;
 $b = $b|0;
 var $$0 = 0, $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if (!($2)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = (($this) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 1|0);
 HEAP32[$3>>2] = $5;
 $6 = HEAP8[$4>>0]|0;
 HEAP8[$b>>0] = $6;
 $7 = (($this) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(-1);
 if ($9) {
  $10 = ($6<<24>>24)==(0);
  $$sink = $10;
 } else {
  $11 = (($this) + 20|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($12) + -1)|0;
  HEAP32[$11>>2] = $13;
  $14 = ($12|0)<(2);
  $$sink = $14;
 }
 $15 = $$sink&1;
 HEAP32[$0>>2] = $15;
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN14StringBIStream5ungetEh($this,$b) {
 $this = $this|0;
 $b = $b|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==($3|0);
 if ($4) {
  STACKTOP = sp;return 1;
 }
 $5 = (($1) + -1|0);
 HEAP32[$0>>2] = $5;
 HEAP8[$5>>0] = $b;
 $6 = (($this) + 4|0);
 HEAP32[$6>>2] = 0;
 $7 = (($this) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(-1);
 if ($9) {
  STACKTOP = sp;return 1;
 }
 $10 = (($this) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 1)|0;
 HEAP32[$10>>2] = $12;
 STACKTOP = sp;return 1;
}
function __ZN14StringBIStream8getNextWERt($this,$w) {
 $this = $this|0;
 $w = $w|0;
 var $$0 = 0, $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if (!($2)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = (($this) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP16[$4>>1]|0;
 HEAP16[$w>>1] = $5;
 $6 = (($4) + 2|0);
 HEAP32[$3>>2] = $6;
 $7 = (($this) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(-1);
 if ($9) {
  $10 = ($5<<16>>16)==(0);
  $$sink = $10;
 } else {
  $11 = (($this) + 20|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($12) + -2)|0;
  HEAP32[$11>>2] = $13;
  $14 = ($13|0)<(1);
  $$sink = $14;
 }
 $15 = $$sink&1;
 HEAP32[$0>>2] = $15;
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN14StringBIStream9getNextDWERj($this,$dw) {
 $this = $this|0;
 $dw = $dw|0;
 var $$0 = 0, $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if (!($2)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = (($this) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$dw>>2] = $5;
 $6 = (($4) + 4|0);
 HEAP32[$3>>2] = $6;
 $7 = (($this) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(-1);
 if ($9) {
  $10 = ($5|0)==(0);
  $$sink = $10;
 } else {
  $11 = (($this) + 20|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($12) + -4)|0;
  HEAP32[$11>>2] = $13;
  $14 = ($13|0)<(1);
  $$sink = $14;
 }
 $15 = $$sink&1;
 HEAP32[$0>>2] = $15;
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN14StringBIStream8peekNextERh($this,$b) {
 $this = $this|0;
 $b = $b|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if (!($2)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = (($this) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP8[$4>>0]|0;
 HEAP8[$b>>0] = $5;
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN14StringBIStream9peekNextWERt($this,$w) {
 $this = $this|0;
 $w = $w|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if (!($2)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = (($this) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP16[$4>>1]|0;
 HEAP16[$w>>1] = $5;
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN14StringBIStream8bookmarkEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 44|0);
 HEAP32[$0>>2] = 1;
 $1 = (($this) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + 32|0);
 HEAP32[$3>>2] = $2;
 $4 = (($this) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($this) + 28|0);
 HEAP32[$6>>2] = $5;
 $7 = (($this) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($this) + 24|0);
 HEAP32[$9>>2] = $8;
 $10 = (($this) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($this) + 40|0);
 HEAP32[$12>>2] = $11;
 $13 = (($this) + 16|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($this) + 36|0);
 HEAP32[$15>>2] = $14;
 STACKTOP = sp;return 1;
}
function __ZN14StringBIStream12gotoBookmarkEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 44|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = (($this) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($this) + 12|0);
 HEAP32[$5>>2] = $4;
 $6 = (($this) + 28|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($this) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = (($this) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($this) + 4|0);
 HEAP32[$11>>2] = $10;
 $12 = (($this) + 40|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($this) + 20|0);
 HEAP32[$14>>2] = $13;
 $15 = (($this) + 36|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (($this) + 16|0);
 HEAP32[$17>>2] = $16;
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN14StringBIStream5closeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 1;
}
function __ZN14StringBOStream4putBEh($this,$b) {
 $this = $this|0;
 $b = $b|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 1)|0;
 HEAP32[$0>>2] = $2;
 $3 = (($this) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0);
 if (!($5)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $6 = (($this) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($1|0)<($7|0);
 if ($8) {
  $9 = (($this) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($10) + 1|0);
  HEAP32[$9>>2] = $11;
  HEAP8[$10>>0] = $b;
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 } else {
  HEAP32[$3>>2] = 1;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZN14StringBOStream4putWEt($this,$w) {
 $this = $this|0;
 $w = $w|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 2)|0;
 HEAP32[$0>>2] = $2;
 $3 = (($this) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0);
 if (!($5)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $6 = (($this) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($2|0)>($7|0);
 if ($8) {
  HEAP32[$3>>2] = 1;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = (($this) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP16[$10>>1] = $w;
  $11 = (($10) + 2|0);
  HEAP32[$9>>2] = $11;
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZN14StringBOStream4putsEPKci($this,$s,$size) {
 $this = $this|0;
 $s = $s|0;
 $size = $size|0;
 var $$013 = 0, $$pre = 0, $$sink2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $size$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($size|0)==(-1);
 do {
  if ($0) {
   $1 = HEAP8[$s>>0]|0;
   $2 = ($1<<24>>24)==(0);
   if (!($2)) {
    $3 = (($this) + 12|0);
    $4 = (($this) + 16|0);
    $5 = (($this) + 8|0);
    $$013 = $s;
    while(1) {
     $6 = HEAP32[$3>>2]|0;
     $7 = (($6) + 1)|0;
     HEAP32[$3>>2] = $7;
     $8 = HEAP32[$4>>2]|0;
     $9 = ($6|0)<($8|0);
     if ($9) {
      $10 = HEAP8[$$013>>0]|0;
      $11 = HEAP32[$5>>2]|0;
      $12 = (($11) + 1|0);
      HEAP32[$5>>2] = $12;
      HEAP8[$11>>0] = $10;
     }
     $13 = (($$013) + 1|0);
     $14 = HEAP8[$13>>0]|0;
     $15 = ($14<<24>>24)==(0);
     if ($15) {
      break;
     } else {
      $$013 = $13;
     }
    }
   }
   $16 = (($this) + 20|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(0);
   if ($18) {
    $19 = (($this) + 12|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = (($this) + 16|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ($20|0)>($22|0);
    if ($23) {
     HEAP32[$16>>2] = 1;
     $$sink2 = 1;
    } else {
     $$sink2 = 0;
    }
   } else {
    $$sink2 = $17;
   }
  } else {
   $24 = (($this) + 20|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($25|0)==(0);
   $27 = (($this) + 12|0);
   $28 = HEAP32[$27>>2]|0;
   if (!($26)) {
    $29 = (($28) + ($size))|0;
    HEAP32[$27>>2] = $29;
    $$sink2 = $25;
    break;
   }
   $30 = (($this) + 16|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ($31|0)<($28|0);
   if ($32) {
    $33 = HEAP32[$27>>2]|0;
    $34 = (($33) + ($size))|0;
    HEAP32[$27>>2] = $34;
    $47 = $34;
   } else {
    $35 = (($31) - ($28))|0;
    $36 = ($35|0)>($size|0);
    $size$ = $36 ? $size : $35;
    $37 = (($this) + 8|0);
    $38 = HEAP32[$37>>2]|0;
    _memcpy(($38|0),($s|0),($size$|0))|0;
    $39 = HEAP32[$37>>2]|0;
    $40 = (($39) + ($size$)|0);
    HEAP32[$37>>2] = $40;
    $$pre = HEAP32[$24>>2]|0;
    $41 = HEAP32[$27>>2]|0;
    $42 = (($41) + ($size))|0;
    HEAP32[$27>>2] = $42;
    $43 = ($$pre|0)==(0);
    if ($43) {
     $47 = $42;
    } else {
     $$sink2 = $$pre;
     break;
    }
   }
   $44 = (($this) + 16|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ($47|0)>($45|0);
   if ($46) {
    HEAP32[$24>>2] = 1;
    $$sink2 = 1;
   } else {
    $$sink2 = 0;
   }
  }
 } while(0);
 $48 = ($$sink2|0)==(0);
 $49 = $48&1;
 STACKTOP = sp;return ($49|0);
}
function __ZN14StringBOStream4isOKEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 20|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 $3 = $2&1;
 STACKTOP = sp;return ($3|0);
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZN10ByteStreamD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZN14StringBIStreamD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN14StringBOStreamD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN14StringBOStream5closeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 1;
}
function __ZN9VnCharset11elementSizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 1;
}
function __ZN17VnInternalCharset9nextInputER12ByteInStreamRjRi($this,$is,$stdChar,$bytesRead) {
 $this = $this|0;
 $is = $is|0;
 $stdChar = $stdChar|0;
 $bytesRead = $bytesRead|0;
 var $$ = 0, $$1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$is>>2]|0;
 $1 = (($0) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iii[$2 & 63]($is,$stdChar)|0);
 $4 = ($3|0)==(0);
 $$ = $4 ? 0 : 4;
 $5 = $4&1;
 $$1 = $5 ^ 1;
 HEAP32[$bytesRead>>2] = $$;
 STACKTOP = sp;return ($$1|0);
}
function __ZN17VnInternalCharset7putCharER13ByteOutStreamjRi($this,$os,$stdChar,$outLen) {
 $this = $this|0;
 $os = $os|0;
 $stdChar = $stdChar|0;
 $outLen = $outLen|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$outLen>>2] = 4;
 $0 = HEAP32[$os>>2]|0;
 $1 = (($0) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $stdChar&65535;
 (FUNCTION_TABLE_iii[$2 & 63]($os,$3)|0);
 $4 = HEAP32[$os>>2]|0;
 $5 = (($4) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $stdChar >>> 16;
 $8 = $7&65535;
 $9 = (FUNCTION_TABLE_iii[$6 & 63]($os,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZN17VnInternalCharset11elementSizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 4;
}
function __ZN17SingleByteCharset9nextInputER12ByteInStreamRjRi($this,$is,$stdChar,$bytesRead) {
 $this = $this|0;
 $is = $is|0;
 $stdChar = $stdChar|0;
 $bytesRead = $bytesRead|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ch = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ch = sp;
 $0 = HEAP32[$is>>2]|0;
 $1 = (($0) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iii[$2 & 63]($is,$ch)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $storemerge = 0;
  HEAP32[$bytesRead>>2] = $storemerge;
  STACKTOP = sp;return ($storemerge|0);
 }
 $5 = HEAP8[$ch>>0]|0;
 $6 = $5&255;
 $7 = ((($this) + ($6<<1)|0) + 4|0);
 $8 = HEAP16[$7>>1]|0;
 $9 = ($8<<16>>16)==(0);
 if ($9) {
  $13 = $6;
 } else {
  $10 = $8&65535;
  $11 = $10 | 65536;
  $12 = (($11) + -1)|0;
  $13 = $12;
 }
 HEAP32[$stdChar>>2] = $13;
 $storemerge = 1;
 HEAP32[$bytesRead>>2] = $storemerge;
 STACKTOP = sp;return ($storemerge|0);
}
function __ZN17SingleByteCharset7putCharER13ByteOutStreamjRi($this,$os,$stdChar,$outLen) {
 $this = $this|0;
 $os = $os|0;
 $stdChar = $stdChar|0;
 $outLen = $outLen|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ch$0 = 0, $ret$0 = 0, $stdChar$off = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($stdChar>>>0)>(65535);
 if ($0) {
  HEAP32[$outLen>>2] = 1;
  $1 = (($stdChar) + -65536)|0;
  $2 = (($this) + 516|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = (($3) + ($1)|0);
  $5 = HEAP8[$4>>0]|0;
  $6 = ($5<<24>>24)==(0);
  if ($6) {
   $stdChar$off = (($stdChar) + -65737)|0;
   $7 = ($stdChar$off>>>0)<(2);
   if ($7) {
    $ch$0 = 34;
   } else {
    $8 = ($stdChar|0)==(65726);
    $9 = $8 ? 46 : 35;
    $ch$0 = $9;
   }
  } else {
   $ch$0 = $5;
  }
  $10 = HEAP32[$os>>2]|0;
  $11 = (($10) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (FUNCTION_TABLE_iii[$12 & 63]($os,$ch$0)|0);
  $ret$0 = $13;
  STACKTOP = sp;return ($ret$0|0);
 }
 $14 = ($stdChar>>>0)>(255);
 if (!($14)) {
  $15 = ((($this) + ($stdChar<<1)|0) + 4|0);
  $16 = HEAP16[$15>>1]|0;
  $17 = ($16<<16>>16)==(0);
  if ($17) {
   HEAP32[$outLen>>2] = 1;
   $22 = HEAP32[$os>>2]|0;
   $23 = (($22) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = $stdChar&255;
   $26 = (FUNCTION_TABLE_iii[$24 & 63]($os,$25)|0);
   $ret$0 = $26;
   STACKTOP = sp;return ($ret$0|0);
  }
 }
 HEAP32[$outLen>>2] = 1;
 $18 = HEAP32[$os>>2]|0;
 $19 = (($18) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (FUNCTION_TABLE_iii[$20 & 63]($os,35)|0);
 $ret$0 = $21;
 STACKTOP = sp;return ($ret$0|0);
}
function __Z15wideCharComparePKvS0_($ele1,$ele2) {
 $ele1 = $ele1|0;
 $ele2 = $ele2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$ele1>>2]|0;
 $1 = HEAP32[$ele2>>2]|0;
 $2 = $0 & 65535;
 $3 = $1 & 65535;
 $4 = ($2|0)==($3|0);
 if ($4) {
  $7 = 0;
  STACKTOP = sp;return ($7|0);
 }
 $5 = ($2>>>0)>($3>>>0);
 $6 = $5 ? 1 : -1;
 $7 = $6;
 STACKTOP = sp;return ($7|0);
}
function __ZN14UnicodeCharset9nextInputER12ByteInStreamRjRi($this,$is,$stdChar,$bytesRead) {
 $this = $this|0;
 $is = $is|0;
 $stdChar = $stdChar|0;
 $bytesRead = $bytesRead|0;
 var $$$i = 0, $$0 = 0, $$01$$i = 0, $$014$i = 0, $$023$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, $storemerge = 0, $uniCh = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $uniCh = sp;
 $0 = HEAP32[$is>>2]|0;
 $1 = (($0) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iii[$2 & 63]($is,$uniCh)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  HEAP32[$bytesRead>>2] = 0;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$bytesRead>>2] = 2;
 $5 = HEAP16[$uniCh>>1]|0;
 $6 = $5&65535;
 $7 = (($this) + 4|0);
 $$014$i = $7;$$023$i = 213;
 while(1) {
  $8 = $$023$i >>> 1;
  $9 = $8 << 2;
  $10 = (($$014$i) + ($9)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $11 & 65535;
  $13 = ($6|0)==($12|0);
  if ($13) {
   label = 7;
   break;
  }
  $14 = ($$023$i|0)==(1);
  if ($14) {
   $storemerge = $6;
   break;
  }
  $not$ = ($6>>>0)<=($12>>>0);
  $15 = (($$023$i) - ($8))|0;
  $$$i = $not$ ? $8 : $15;
  $$01$$i = $not$ ? $$014$i : $10;
  $16 = ($$$i|0)==(0);
  if ($16) {
   $storemerge = $6;
   break;
  } else {
   $$014$i = $$01$$i;$$023$i = $$$i;
  }
 }
 if ((label|0) == 7) {
  $17 = ($10|0)==(0|0);
  if ($17) {
   $storemerge = $6;
  } else {
   $18 = $11 >>> 16;
   $19 = $18 | 65536;
   $storemerge = $19;
  }
 }
 HEAP32[$stdChar>>2] = $storemerge;
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN14UnicodeCharset7putCharER13ByteOutStreamjRi($this,$os,$stdChar,$outLen) {
 $this = $this|0;
 $os = $os|0;
 $stdChar = $stdChar|0;
 $outLen = $outLen|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$outLen>>2] = 2;
 $0 = HEAP32[$os>>2]|0;
 $1 = (($0) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($stdChar>>>0)>(65535);
 if ($3) {
  $4 = (($stdChar) + -65536)|0;
  $5 = (($this) + 856|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($6) + ($4<<1)|0);
  $8 = HEAP16[$7>>1]|0;
  $10 = $8;
 } else {
  $9 = $stdChar&65535;
  $10 = $9;
 }
 $11 = (FUNCTION_TABLE_iii[$2 & 63]($os,$10)|0);
 STACKTOP = sp;return ($11|0);
}
function __ZN14UnicodeCharset11elementSizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 2;
}
function __Z18uniCompInfoComparePKvS0_($ele1,$ele2) {
 $ele1 = $ele1|0;
 $ele2 = $ele2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$ele1>>2]|0;
 $1 = HEAP32[$ele2>>2]|0;
 $2 = ($0|0)==($1|0);
 if ($2) {
  $5 = 0;
 } else {
  $3 = ($0>>>0)>($1>>>0);
  $4 = $3 ? 1 : -1;
  $5 = $4;
 }
 STACKTOP = sp;return ($5|0);
}
function __ZN18UnicodeCompCharsetC2EPtPj($this,$uniChars,$uniCompChars) {
 $this = $this|0;
 $uniChars = $uniChars|0;
 $uniCompChars = $uniCompChars|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond4 = 0, $i$03 = 0, $i$12 = 0, $i$2 = 0, $k$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((680 + 8|0));
 $0 = (($this) + 3412|0);
 HEAP32[$0>>2] = $uniCompChars;
 $1 = (($this) + 3416|0);
 HEAP32[$1>>2] = 0;
 $i$03 = 0;
 while(1) {
  $2 = (($uniCompChars) + ($i$03<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = ((($this) + ($i$03<<3)|0) + 4|0);
  HEAP32[$4>>2] = $3;
  $5 = ((($this) + ($i$03<<3)|0) + 8|0);
  HEAP32[$5>>2] = $i$03;
  $6 = HEAP32[$1>>2]|0;
  $7 = (($6) + 1)|0;
  HEAP32[$1>>2] = $7;
  $8 = (($i$03) + 1)|0;
  $exitcond4 = ($8|0)==(213);
  if ($exitcond4) {
   $23 = $7;$i$12 = 213;$k$01 = 0;
   break;
  } else {
   $i$03 = $8;
  }
 }
 while(1) {
  $9 = (($uniChars) + ($k$01<<1)|0);
  $10 = HEAP16[$9>>1]|0;
  $11 = $10&65535;
  $12 = (($uniCompChars) + ($k$01<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($11|0)==($13|0);
  if ($14) {
   $22 = $23;$i$2 = $i$12;
  } else {
   $15 = ((($this) + ($i$12<<3)|0) + 4|0);
   HEAP32[$15>>2] = $11;
   $16 = ((($this) + ($i$12<<3)|0) + 8|0);
   HEAP32[$16>>2] = $k$01;
   $17 = HEAP32[$1>>2]|0;
   $18 = (($17) + 1)|0;
   HEAP32[$1>>2] = $18;
   $19 = (($i$12) + 1)|0;
   $22 = $18;$i$2 = $19;
  }
  $20 = (($k$01) + 1)|0;
  $exitcond = ($20|0)==(213);
  if ($exitcond) {
   break;
  } else {
   $23 = $22;$i$12 = $i$2;$k$01 = $20;
  }
 }
 $21 = (($this) + 4|0);
 _qsort($21,$22,8,31);
 STACKTOP = sp;return;
}
function __ZN18UnicodeCompCharset9nextInputER12ByteInStreamRjRi($this,$is,$stdChar,$bytesRead) {
 $this = $this|0;
 $is = $is|0;
 $stdChar = $stdChar|0;
 $bytesRead = $bytesRead|0;
 var $$$i = 0, $$$i4 = 0, $$0 = 0, $$01$$i = 0, $$01$$i5 = 0, $$014$i = 0, $$014$i1 = 0, $$023$i = 0, $$023$i2 = 0, $$sum11 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $not$ = 0, $not$10 = 0, $w = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $w = sp;
 $0 = HEAP32[$is>>2]|0;
 $1 = (($0) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iii[$2 & 63]($is,$w)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  HEAP32[$bytesRead>>2] = 0;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $5 = HEAP16[$w>>1]|0;
 $6 = $5&65535;
 HEAP32[$bytesRead>>2] = 2;
 $7 = (($this) + 4|0);
 $8 = (($this) + 3416|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0);
 L5: do {
  if (!($10)) {
   $$014$i = $7;$$023$i = $9;
   while(1) {
    $11 = $$023$i >>> 1;
    $12 = $11 << 3;
    $13 = (($$014$i) + ($12)|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($6|0)==($14|0);
    if ($15) {
     break;
    }
    $16 = ($$023$i|0)==(1);
    if ($16) {
     break L5;
    }
    $not$ = ($6>>>0)<=($14>>>0);
    $17 = (($$023$i) - ($11))|0;
    $$$i = $not$ ? $11 : $17;
    $$01$$i = $not$ ? $$014$i : $13;
    $18 = ($$$i|0)==(0);
    if ($18) {
     break L5;
    } else {
     $$014$i = $$01$$i;$$023$i = $$$i;
    }
   }
   $19 = ($13|0)==(0|0);
   if (!($19)) {
    $$sum9 = $12 | 4;
    $20 = (($$014$i) + ($$sum9)|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = (($21) + 65536)|0;
    HEAP32[$stdChar>>2] = $22;
    $23 = HEAP32[$is>>2]|0;
    $24 = (($23) + 24|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = (FUNCTION_TABLE_iii[$25 & 63]($is,$w)|0);
    $27 = ($26|0)==(0);
    if ($27) {
     $$0 = 1;
     STACKTOP = sp;return ($$0|0);
    }
    $28 = HEAP16[$w>>1]|0;
    $29 = ($28<<16>>16)==(0);
    if ($29) {
     $$0 = 1;
     STACKTOP = sp;return ($$0|0);
    }
    $30 = $28&65535;
    $31 = $30 << 16;
    $32 = $6 | $31;
    $33 = HEAP32[$8>>2]|0;
    $34 = ($33|0)==(0);
    if ($34) {
     $$0 = 1;
     STACKTOP = sp;return ($$0|0);
    } else {
     $$014$i1 = $7;$$023$i2 = $33;
    }
    while(1) {
     $35 = $$023$i2 >>> 1;
     $36 = $35 << 3;
     $37 = (($$014$i1) + ($36)|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ($32|0)==($38|0);
     if ($39) {
      label = 15;
      break;
     }
     $40 = ($$023$i2|0)==(1);
     if ($40) {
      $$0 = 1;
      label = 17;
      break;
     }
     $not$10 = ($32>>>0)<=($38>>>0);
     $41 = (($$023$i2) - ($35))|0;
     $$$i4 = $not$10 ? $35 : $41;
     $$01$$i5 = $not$10 ? $$014$i1 : $37;
     $42 = ($$$i4|0)==(0);
     if ($42) {
      $$0 = 1;
      label = 17;
      break;
     } else {
      $$014$i1 = $$01$$i5;$$023$i2 = $$$i4;
     }
    }
    if ((label|0) == 15) {
     $43 = ($37|0)==(0|0);
     if ($43) {
      $$0 = 1;
      STACKTOP = sp;return ($$0|0);
     }
     $$sum11 = $36 | 4;
     $44 = (($$014$i1) + ($$sum11)|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = (($45) + 65536)|0;
     HEAP32[$stdChar>>2] = $46;
     $47 = HEAP32[$bytesRead>>2]|0;
     $48 = (($47) + 2)|0;
     HEAP32[$bytesRead>>2] = $48;
     $49 = HEAP32[$is>>2]|0;
     $50 = (($49) + 20|0);
     $51 = HEAP32[$50>>2]|0;
     (FUNCTION_TABLE_iii[$51 & 63]($is,$w)|0);
     $$0 = 1;
     STACKTOP = sp;return ($$0|0);
    }
    else if ((label|0) == 17) {
     STACKTOP = sp;return ($$0|0);
    }
   }
  }
 } while(0);
 HEAP32[$stdChar>>2] = $6;
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN18UnicodeCompCharset7putCharER13ByteOutStreamjRi($this,$os,$stdChar,$outLen) {
 $this = $this|0;
 $os = $os|0;
 $stdChar = $stdChar|0;
 $outLen = $outLen|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ret$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($stdChar>>>0)>(65535);
 if (!($0)) {
  HEAP32[$outLen>>2] = 2;
  $20 = HEAP32[$os>>2]|0;
  $21 = (($20) + 12|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = $stdChar&65535;
  $24 = (FUNCTION_TABLE_iii[$22 & 63]($os,$23)|0);
  $ret$0 = $24;
  STACKTOP = sp;return ($ret$0|0);
 }
 $1 = (($stdChar) + -65536)|0;
 $2 = (($this) + 3412|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + ($1<<2)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5&65535;
 $7 = $5 >>> 16;
 HEAP32[$outLen>>2] = 2;
 $8 = HEAP32[$os>>2]|0;
 $9 = (($8) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (FUNCTION_TABLE_iii[$10 & 63]($os,$6)|0);
 $12 = ($7|0)==(0);
 if ($12) {
  $ret$0 = $11;
  STACKTOP = sp;return ($ret$0|0);
 }
 $13 = $7&65535;
 $14 = HEAP32[$outLen>>2]|0;
 $15 = (($14) + 2)|0;
 HEAP32[$outLen>>2] = $15;
 $16 = HEAP32[$os>>2]|0;
 $17 = (($16) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (FUNCTION_TABLE_iii[$18 & 63]($os,$13)|0);
 $ret$0 = $19;
 STACKTOP = sp;return ($ret$0|0);
}
function __ZN18UnicodeCompCharset11elementSizeEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 2;
}
function __ZN18UnicodeUTF8Charset9nextInputER12ByteInStreamRjRi($this,$is,$stdChar,$bytesRead) {
 $this = $this|0;
 $is = $is|0;
 $stdChar = $stdChar|0;
 $bytesRead = $bytesRead|0;
 var $$$i = 0, $$0 = 0, $$01$$i = 0, $$014$i = 0, $$023$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $8 = 0, $9 = 0, $first = 0, $not$ = 0, $second = 0, $storemerge = 0, $third = 0, $uniCh$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $first = sp + 2|0;
 $second = sp + 1|0;
 $third = sp;
 HEAP32[$bytesRead>>2] = 0;
 $0 = HEAP32[$is>>2]|0;
 $1 = (($0) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iii[$2 & 63]($is,$first)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$bytesRead>>2] = 1;
 $5 = HEAP8[$first>>0]|0;
 $6 = $5&255;
 $7 = ($5<<24>>24)>(-1);
 do {
  if ($7) {
   $uniCh$0 = $6;
  } else {
   $8 = $6 & 224;
   $9 = ($8|0)==(192);
   if ($9) {
    $10 = HEAP32[$is>>2]|0;
    $11 = (($10) + 12|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = (FUNCTION_TABLE_iii[$12 & 63]($is,$second)|0);
    $14 = ($13|0)==(0);
    if ($14) {
     $$0 = 0;
     STACKTOP = sp;return ($$0|0);
    }
    $15 = HEAP8[$second>>0]|0;
    $16 = $15 & -64;
    $17 = ($16<<24>>24)==(-128);
    if ($17) {
     $18 = HEAP32[$is>>2]|0;
     $19 = (($18) + 8|0);
     $20 = HEAP32[$19>>2]|0;
     (FUNCTION_TABLE_iii[$20 & 63]($is,$second)|0);
     HEAP32[$bytesRead>>2] = 2;
     $21 = HEAP8[$first>>0]|0;
     $22 = HEAP8[$second>>0]|0;
     $23 = $21&255;
     $24 = $23 << 6;
     $25 = $24 & 1984;
     $26 = $22&255;
     $27 = $26 & 63;
     $28 = $25 | $27;
     $uniCh$0 = $28;
     break;
    }
    HEAP32[$stdChar>>2] = -1;
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
   $29 = $6 & 240;
   $30 = ($29|0)==(224);
   if (!($30)) {
    HEAP32[$stdChar>>2] = -1;
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
   $31 = HEAP32[$is>>2]|0;
   $32 = (($31) + 12|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = (FUNCTION_TABLE_iii[$33 & 63]($is,$second)|0);
   $35 = ($34|0)==(0);
   if ($35) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
   $36 = HEAP8[$second>>0]|0;
   $37 = $36 & -64;
   $38 = ($37<<24>>24)==(-128);
   if (!($38)) {
    HEAP32[$stdChar>>2] = -1;
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
   $39 = HEAP32[$is>>2]|0;
   $40 = (($39) + 8|0);
   $41 = HEAP32[$40>>2]|0;
   (FUNCTION_TABLE_iii[$41 & 63]($is,$second)|0);
   HEAP32[$bytesRead>>2] = 2;
   $42 = HEAP32[$is>>2]|0;
   $43 = (($42) + 12|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (FUNCTION_TABLE_iii[$44 & 63]($is,$third)|0);
   $46 = ($45|0)==(0);
   if ($46) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
   $47 = HEAP8[$third>>0]|0;
   $48 = $47 & -64;
   $49 = ($48<<24>>24)==(-128);
   if ($49) {
    $50 = HEAP32[$is>>2]|0;
    $51 = (($50) + 8|0);
    $52 = HEAP32[$51>>2]|0;
    (FUNCTION_TABLE_iii[$52 & 63]($is,$third)|0);
    HEAP32[$bytesRead>>2] = 3;
    $53 = HEAP8[$first>>0]|0;
    $54 = HEAP8[$second>>0]|0;
    $55 = HEAP8[$third>>0]|0;
    $56 = $53&255;
    $57 = $56 << 12;
    $58 = $54&255;
    $59 = $58 << 6;
    $60 = $59 & 4032;
    $61 = $60 | $57;
    $62 = $55&255;
    $63 = $62 & 63;
    $64 = $61 | $63;
    $uniCh$0 = $64;
    break;
   }
   HEAP32[$stdChar>>2] = -1;
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 $65 = $uniCh$0 & 65535;
 $66 = (($this) + 4|0);
 $$014$i = $66;$$023$i = 213;
 while(1) {
  $67 = $$023$i >>> 1;
  $68 = $67 << 2;
  $69 = (($$014$i) + ($68)|0);
  $70 = HEAP32[$69>>2]|0;
  $71 = $70 & 65535;
  $72 = ($65|0)==($71|0);
  if ($72) {
   label = 21;
   break;
  }
  $73 = ($$023$i|0)==(1);
  if ($73) {
   $storemerge = $65;
   break;
  }
  $not$ = ($65>>>0)<=($71>>>0);
  $74 = (($$023$i) - ($67))|0;
  $$$i = $not$ ? $67 : $74;
  $$01$$i = $not$ ? $$014$i : $69;
  $75 = ($$$i|0)==(0);
  if ($75) {
   $storemerge = $65;
   break;
  } else {
   $$014$i = $$01$$i;$$023$i = $$$i;
  }
 }
 if ((label|0) == 21) {
  $76 = ($69|0)==(0|0);
  if ($76) {
   $storemerge = $65;
  } else {
   $77 = $70 >>> 16;
   $78 = $77 | 65536;
   $storemerge = $78;
  }
 }
 HEAP32[$stdChar>>2] = $storemerge;
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN18UnicodeUTF8Charset7putCharER13ByteOutStreamjRi($this,$os,$stdChar,$outLen) {
 $this = $this|0;
 $os = $os|0;
 $stdChar = $stdChar|0;
 $outLen = $outLen|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ret$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($stdChar>>>0)<(65536);
 if ($0) {
  $1 = $stdChar&65535;
  $8 = $1;
 } else {
  $2 = (($stdChar) + -65536)|0;
  $3 = (($this) + 856|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($4) + ($2<<1)|0);
  $6 = HEAP16[$5>>1]|0;
  $8 = $6;
 }
 $7 = $8&65535;
 $9 = ($8&65535)<(128);
 if ($9) {
  HEAP32[$outLen>>2] = 1;
  $10 = HEAP32[$os>>2]|0;
  $11 = (($10) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = $8&255;
  $14 = (FUNCTION_TABLE_iii[$12 & 63]($os,$13)|0);
  $ret$0 = $14;
  STACKTOP = sp;return ($ret$0|0);
 }
 $15 = ($8&65535)<(2048);
 if ($15) {
  HEAP32[$outLen>>2] = 2;
  $16 = HEAP32[$os>>2]|0;
  $17 = (($16) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = ($8&65535) >>> 6;
  $20 = $19&65535;
  $21 = $20 | 192;
  $22 = $21&255;
  (FUNCTION_TABLE_iii[$18 & 63]($os,$22)|0);
  $23 = HEAP32[$os>>2]|0;
  $24 = (($23) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = $7 & 63;
  $27 = $26 | 128;
  $28 = $27&255;
  $29 = (FUNCTION_TABLE_iii[$25 & 63]($os,$28)|0);
  $ret$0 = $29;
  STACKTOP = sp;return ($ret$0|0);
 } else {
  HEAP32[$outLen>>2] = 3;
  $30 = HEAP32[$os>>2]|0;
  $31 = (($30) + 8|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ($8&65535) >>> 12;
  $34 = $33&65535;
  $35 = $34 | 224;
  $36 = $35&255;
  (FUNCTION_TABLE_iii[$32 & 63]($os,$36)|0);
  $37 = HEAP32[$os>>2]|0;
  $38 = (($37) + 8|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = $7 >>> 6;
  $41 = $40 & 63;
  $42 = $41 | 128;
  $43 = $42&255;
  (FUNCTION_TABLE_iii[$39 & 63]($os,$43)|0);
  $44 = HEAP32[$os>>2]|0;
  $45 = (($44) + 8|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = $7 & 63;
  $48 = $47 | 128;
  $49 = $48&255;
  $50 = (FUNCTION_TABLE_iii[$46 & 63]($os,$49)|0);
  $ret$0 = $50;
  STACKTOP = sp;return ($ret$0|0);
 }
 return (0)|0;
}
function __ZN17UnicodeRefCharset9nextInputER12ByteInStreamRjRi($this,$is,$stdChar,$bytesRead) {
 $this = $this|0;
 $is = $is|0;
 $stdChar = $stdChar|0;
 $bytesRead = $bytesRead|0;
 var $$ = 0, $$$i = 0, $$$i1 = 0, $$0 = 0, $$01$$i = 0, $$014$i = 0, $$023$i = 0, $$4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ch = 0, $code$0$lcssa = 0, $code$010 = 0, $code$09 = 0, $code1$0$lcssa = 0, $code1$014 = 0, $code1$016 = 0, $digit$off$i = 0, $digit$off3$i = 0, $digit$off4$i = 0, $digits$011 = 0, $digits2$017 = 0, $isdigit = 0, $isdigit$i = 0, $isdigittmp = 0, $isdigittmp$i = 0;
 var $not$ = 0, $or$cond = 0, $or$cond3 = 0, $or$cond6 = 0, $storemerge = 0, $uniCh$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ch = sp;
 HEAP32[$bytesRead>>2] = 0;
 $0 = HEAP32[$is>>2]|0;
 $1 = (($0) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iii[$2 & 63]($is,$ch)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$bytesRead>>2] = 1;
 $5 = HEAP8[$ch>>0]|0;
 $6 = $5&255;
 $7 = ($5<<24>>24)==(38);
 do {
  if ($7) {
   $8 = HEAP32[$is>>2]|0;
   $9 = (($8) + 12|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (FUNCTION_TABLE_iii[$10 & 63]($is,$ch)|0);
   $12 = ($11|0)!=(0);
   $13 = HEAP8[$ch>>0]|0;
   $14 = ($13<<24>>24)==(35);
   $or$cond = $12 & $14;
   if ($or$cond) {
    $15 = HEAP32[$is>>2]|0;
    $16 = (($15) + 8|0);
    $17 = HEAP32[$16>>2]|0;
    (FUNCTION_TABLE_iii[$17 & 63]($is,$ch)|0);
    $18 = HEAP32[$bytesRead>>2]|0;
    $19 = (($18) + 1)|0;
    HEAP32[$bytesRead>>2] = $19;
    $20 = HEAP32[$is>>2]|0;
    $21 = (($20) + 40|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($is)|0);
    $24 = ($23|0)==(0);
    if ($24) {
     $25 = HEAP32[$is>>2]|0;
     $26 = (($25) + 12|0);
     $27 = HEAP32[$26>>2]|0;
     (FUNCTION_TABLE_iii[$27 & 63]($is,$ch)|0);
     $28 = HEAP8[$ch>>0]|0;
     if (!((($28<<24>>24) == 88) | (($28<<24>>24) == 120))) {
      $29 = HEAP32[$is>>2]|0;
      $30 = (($29) + 12|0);
      $31 = HEAP32[$30>>2]|0;
      $32 = (FUNCTION_TABLE_iii[$31 & 63]($is,$ch)|0);
      $33 = ($32|0)==(0);
      L10: do {
       if ($33) {
        $code$0$lcssa = 0;
        label = 7;
       } else {
        $code$010 = 0;$digits$011 = 0;
        while(1) {
         $35 = HEAP8[$ch>>0]|0;
         $36 = $35&255;
         $isdigittmp = (($36) + -48)|0;
         $isdigit = ($isdigittmp>>>0)<(10);
         $37 = ($digits$011|0)<(5);
         $$ = $isdigit & $37;
         $38 = HEAP32[$is>>2]|0;
         if (!($$)) {
          $57 = $38;$code$09 = $code$010;
          break L10;
         }
         $39 = (($38) + 8|0);
         $40 = HEAP32[$39>>2]|0;
         (FUNCTION_TABLE_iii[$40 & 63]($is,$ch)|0);
         $41 = HEAP32[$bytesRead>>2]|0;
         $42 = (($41) + 1)|0;
         HEAP32[$bytesRead>>2] = $42;
         $43 = $code$010&65535;
         $44 = ($43*10)|0;
         $45 = HEAP8[$ch>>0]|0;
         $46 = $45&255;
         $47 = (($44) + 65488)|0;
         $48 = (($47) + ($46))|0;
         $49 = $48&65535;
         $50 = (($digits$011) + 1)|0;
         $51 = HEAP32[$is>>2]|0;
         $52 = (($51) + 12|0);
         $53 = HEAP32[$52>>2]|0;
         $54 = (FUNCTION_TABLE_iii[$53 & 63]($is,$ch)|0);
         $55 = ($54|0)==(0);
         if ($55) {
          $code$0$lcssa = $49;
          label = 7;
          break;
         } else {
          $code$010 = $49;$digits$011 = $50;
         }
        }
       }
      } while(0);
      if ((label|0) == 7) {
       $34 = HEAP32[$is>>2]|0;
       $57 = $34;$code$09 = $code$0$lcssa;
      }
      $56 = (($57) + 12|0);
      $58 = HEAP32[$56>>2]|0;
      $59 = (FUNCTION_TABLE_iii[$58 & 63]($is,$ch)|0);
      $60 = ($59|0)!=(0);
      $61 = HEAP8[$ch>>0]|0;
      $62 = ($61<<24>>24)==(59);
      $or$cond3 = $60 & $62;
      if (!($or$cond3)) {
       $uniCh$0 = $6;
       break;
      }
      $63 = HEAP32[$is>>2]|0;
      $64 = (($63) + 8|0);
      $65 = HEAP32[$64>>2]|0;
      (FUNCTION_TABLE_iii[$65 & 63]($is,$ch)|0);
      $66 = HEAP32[$bytesRead>>2]|0;
      $67 = (($66) + 1)|0;
      HEAP32[$bytesRead>>2] = $67;
      $uniCh$0 = $code$09;
      break;
     }
     $68 = HEAP32[$is>>2]|0;
     $69 = (($68) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     (FUNCTION_TABLE_iii[$70 & 63]($is,$ch)|0);
     $71 = HEAP32[$bytesRead>>2]|0;
     $72 = (($71) + 1)|0;
     HEAP32[$bytesRead>>2] = $72;
     $73 = HEAP32[$is>>2]|0;
     $74 = (($73) + 12|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (FUNCTION_TABLE_iii[$75 & 63]($is,$ch)|0);
     $77 = ($76|0)==(0);
     L19: do {
      if ($77) {
       $code1$0$lcssa = 0;
       label = 13;
      } else {
       $code1$016 = 0;$digits2$017 = 0;
       while(1) {
        $79 = HEAP8[$ch>>0]|0;
        $80 = $79&255;
        $isdigittmp$i = (($80) + -48)|0;
        $isdigit$i = ($isdigittmp$i>>>0)<(10);
        if ($isdigit$i) {
         $85 = 1;
        } else {
         $81 = $80 | 32;
         $82 = (($81) + -97)|0;
         $83 = ($82>>>0)<(6);
         $85 = $83;
        }
        $84 = ($digits2$017|0)<(4);
        $$4 = $84 & $85;
        $86 = HEAP32[$is>>2]|0;
        if (!($$4)) {
         $111 = $86;$code1$014 = $code1$016;
         break L19;
        }
        $87 = (($86) + 8|0);
        $88 = HEAP32[$87>>2]|0;
        (FUNCTION_TABLE_iii[$88 & 63]($is,$ch)|0);
        $89 = HEAP32[$bytesRead>>2]|0;
        $90 = (($89) + 1)|0;
        HEAP32[$bytesRead>>2] = $90;
        $91 = $code1$016&65535;
        $92 = $91 << 4;
        $93 = HEAP8[$ch>>0]|0;
        $94 = $93&255;
        $digit$off$i = (($93) + -97)<<24>>24;
        $95 = ($digit$off$i&255)<(6);
        do {
         if ($95) {
          $96 = (($94) + -87)|0;
          $102 = $96;
         } else {
          $digit$off3$i = (($93) + -65)<<24>>24;
          $97 = ($digit$off3$i&255)<(6);
          if ($97) {
           $98 = (($94) + -55)|0;
           $102 = $98;
           break;
          } else {
           $digit$off4$i = (($93) + -48)<<24>>24;
           $99 = ($digit$off4$i&255)<(10);
           $100 = (($94) + -48)|0;
           $$$i1 = $99 ? $100 : 0;
           $102 = $$$i1;
           break;
          }
         }
        } while(0);
        $101 = (($102) + ($92))|0;
        $103 = $101&65535;
        $104 = (($digits2$017) + 1)|0;
        $105 = HEAP32[$is>>2]|0;
        $106 = (($105) + 12|0);
        $107 = HEAP32[$106>>2]|0;
        $108 = (FUNCTION_TABLE_iii[$107 & 63]($is,$ch)|0);
        $109 = ($108|0)==(0);
        if ($109) {
         $code1$0$lcssa = $103;
         label = 13;
         break;
        } else {
         $code1$016 = $103;$digits2$017 = $104;
        }
       }
      }
     } while(0);
     if ((label|0) == 13) {
      $78 = HEAP32[$is>>2]|0;
      $111 = $78;$code1$014 = $code1$0$lcssa;
     }
     $110 = (($111) + 12|0);
     $112 = HEAP32[$110>>2]|0;
     $113 = (FUNCTION_TABLE_iii[$112 & 63]($is,$ch)|0);
     $114 = ($113|0)!=(0);
     $115 = HEAP8[$ch>>0]|0;
     $116 = ($115<<24>>24)==(59);
     $or$cond6 = $114 & $116;
     if ($or$cond6) {
      $117 = HEAP32[$is>>2]|0;
      $118 = (($117) + 8|0);
      $119 = HEAP32[$118>>2]|0;
      (FUNCTION_TABLE_iii[$119 & 63]($is,$ch)|0);
      $120 = HEAP32[$bytesRead>>2]|0;
      $121 = (($120) + 1)|0;
      HEAP32[$bytesRead>>2] = $121;
      $uniCh$0 = $code1$014;
     } else {
      $uniCh$0 = $6;
     }
    } else {
     $uniCh$0 = $6;
    }
   } else {
    $uniCh$0 = $6;
   }
  } else {
   $uniCh$0 = $6;
  }
 } while(0);
 $122 = $uniCh$0&65535;
 $123 = (($this) + 4|0);
 $$014$i = $123;$$023$i = 213;
 while(1) {
  $124 = $$023$i >>> 1;
  $125 = $124 << 2;
  $126 = (($$014$i) + ($125)|0);
  $127 = HEAP32[$126>>2]|0;
  $128 = $127 & 65535;
  $129 = ($122|0)==($128|0);
  if ($129) {
   label = 29;
   break;
  }
  $130 = ($$023$i|0)==(1);
  if ($130) {
   $storemerge = $122;
   break;
  }
  $not$ = ($122>>>0)<=($128>>>0);
  $131 = (($$023$i) - ($124))|0;
  $$$i = $not$ ? $124 : $131;
  $$01$$i = $not$ ? $$014$i : $126;
  $132 = ($$$i|0)==(0);
  if ($132) {
   $storemerge = $122;
   break;
  } else {
   $$014$i = $$01$$i;$$023$i = $$$i;
  }
 }
 if ((label|0) == 29) {
  $133 = ($126|0)==(0|0);
  if ($133) {
   $storemerge = $122;
  } else {
   $134 = $127 >>> 16;
   $135 = $134 | 65536;
   $storemerge = $135;
  }
 }
 HEAP32[$stdChar>>2] = $storemerge;
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN17UnicodeRefCharset7putCharER13ByteOutStreamjRi($this,$os,$stdChar,$outLen) {
 $this = $this|0;
 $os = $os|0;
 $stdChar = $stdChar|0;
 $outLen = $outLen|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, $div = 0;
 var $div6 = 0, $div7 = 0, $div8 = 0, $prev$1 = 0, $prev$1$1 = 0, $prev$1$2 = 0, $prev$1$3 = 0, $ret$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($stdChar>>>0)<(65536);
 if ($0) {
  $1 = $stdChar&65535;
  $8 = $1;
 } else {
  $2 = (($stdChar) + -65536)|0;
  $3 = (($this) + 856|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($4) + ($2<<1)|0);
  $6 = HEAP16[$5>>1]|0;
  $8 = $6;
 }
 $7 = ($8&65535)<(128);
 if ($7) {
  HEAP32[$outLen>>2] = 1;
  $9 = HEAP32[$os>>2]|0;
  $10 = (($9) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $8&255;
  $13 = (FUNCTION_TABLE_iii[$11 & 63]($os,$12)|0);
  $ret$0 = $13;
  STACKTOP = sp;return ($ret$0|0);
 }
 HEAP32[$outLen>>2] = 2;
 $14 = HEAP32[$os>>2]|0;
 $15 = (($14) + 8|0);
 $16 = HEAP32[$15>>2]|0;
 (FUNCTION_TABLE_iii[$16 & 63]($os,38)|0);
 $17 = HEAP32[$os>>2]|0;
 $18 = (($17) + 8|0);
 $19 = HEAP32[$18>>2]|0;
 (FUNCTION_TABLE_iii[$19 & 63]($os,35)|0);
 $20 = ($8&65535)<(10000);
 if ($20) {
  $prev$1 = 0;
 } else {
  $div = (($8&65535) / 10000)&-1;
  $21 = $div&65535;
  $22 = HEAP32[$outLen>>2]|0;
  $23 = (($22) + 1)|0;
  HEAP32[$outLen>>2] = $23;
  $24 = HEAP32[$os>>2]|0;
  $25 = (($24) + 8|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = $21 | 48;
  $28 = $27&255;
  (FUNCTION_TABLE_iii[$26 & 63]($os,$28)|0);
  $prev$1 = 1;
 }
 $29 = (($8&65535) % 10000)&-1;
 $div6 = (($29&65535) / 1000)&-1;
 $30 = $div6&65535;
 $31 = $30 | $prev$1;
 $32 = ($31|0)==(0);
 if ($32) {
  $prev$1$1 = $prev$1;
 } else {
  $33 = HEAP32[$outLen>>2]|0;
  $34 = (($33) + 1)|0;
  HEAP32[$outLen>>2] = $34;
  $35 = HEAP32[$os>>2]|0;
  $36 = (($35) + 8|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = (($30) + 48)|0;
  $39 = $38&255;
  (FUNCTION_TABLE_iii[$37 & 63]($os,$39)|0);
  $prev$1$1 = 1;
 }
 $40 = (($29&65535) % 1000)&-1;
 $div7 = (($40&65535) / 100)&-1;
 $41 = $div7&65535;
 $42 = $41 | $prev$1$1;
 $43 = ($42|0)==(0);
 if ($43) {
  $prev$1$2 = $prev$1$1;
 } else {
  $44 = HEAP32[$outLen>>2]|0;
  $45 = (($44) + 1)|0;
  HEAP32[$outLen>>2] = $45;
  $46 = HEAP32[$os>>2]|0;
  $47 = (($46) + 8|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = $41 | 48;
  $50 = $49&255;
  (FUNCTION_TABLE_iii[$48 & 63]($os,$50)|0);
  $prev$1$2 = 1;
 }
 $51 = (($40&65535) % 100)&-1;
 $div8 = (($51&65535) / 10)&-1;
 $52 = $div8&65535;
 $53 = $52 | $prev$1$2;
 $54 = ($53|0)==(0);
 if ($54) {
  $prev$1$3 = $prev$1$2;
 } else {
  $55 = HEAP32[$outLen>>2]|0;
  $56 = (($55) + 1)|0;
  HEAP32[$outLen>>2] = $56;
  $57 = HEAP32[$os>>2]|0;
  $58 = (($57) + 8|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = $52 | 48;
  $61 = $60&255;
  (FUNCTION_TABLE_iii[$59 & 63]($os,$61)|0);
  $prev$1$3 = 1;
 }
 $62 = (($51&65535) % 10)&-1;
 $63 = $62&65535;
 $64 = $63 | $prev$1$3;
 $65 = ($64|0)==(0);
 if (!($65)) {
  $66 = HEAP32[$outLen>>2]|0;
  $67 = (($66) + 1)|0;
  HEAP32[$outLen>>2] = $67;
  $68 = HEAP32[$os>>2]|0;
  $69 = (($68) + 8|0);
  $70 = HEAP32[$69>>2]|0;
  $71 = $63 | 48;
  $72 = $71&255;
  (FUNCTION_TABLE_iii[$70 & 63]($os,$72)|0);
 }
 $73 = HEAP32[$os>>2]|0;
 $74 = (($73) + 8|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = (FUNCTION_TABLE_iii[$75 & 63]($os,59)|0);
 $77 = HEAP32[$outLen>>2]|0;
 $78 = (($77) + 1)|0;
 HEAP32[$outLen>>2] = $78;
 $ret$0 = $76;
 STACKTOP = sp;return ($ret$0|0);
}
function __ZN17UnicodeHexCharset7putCharER13ByteOutStreamjRi($this,$os,$stdChar,$outLen) {
 $this = $this|0;
 $os = $os|0;
 $stdChar = $stdChar|0;
 $outLen = $outLen|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $9 = 0, $prev$1 = 0, $prev$1$1 = 0, $prev$1$2 = 0, $ret$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($stdChar>>>0)<(65536);
 if ($0) {
  $1 = $stdChar&65535;
  $8 = $1;
 } else {
  $2 = (($stdChar) + -65536)|0;
  $3 = (($this) + 856|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($4) + ($2<<1)|0);
  $6 = HEAP16[$5>>1]|0;
  $8 = $6;
 }
 $7 = $8&65535;
 $9 = ($8&65535)<(256);
 if ($9) {
  HEAP32[$outLen>>2] = 1;
  $10 = HEAP32[$os>>2]|0;
  $11 = (($10) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = $8&255;
  $14 = (FUNCTION_TABLE_iii[$12 & 63]($os,$13)|0);
  $ret$0 = $14;
  STACKTOP = sp;return ($ret$0|0);
 }
 HEAP32[$outLen>>2] = 3;
 $15 = HEAP32[$os>>2]|0;
 $16 = (($15) + 8|0);
 $17 = HEAP32[$16>>2]|0;
 (FUNCTION_TABLE_iii[$17 & 63]($os,38)|0);
 $18 = HEAP32[$os>>2]|0;
 $19 = (($18) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 (FUNCTION_TABLE_iii[$20 & 63]($os,35)|0);
 $21 = HEAP32[$os>>2]|0;
 $22 = (($21) + 8|0);
 $23 = HEAP32[$22>>2]|0;
 (FUNCTION_TABLE_iii[$23 & 63]($os,120)|0);
 $24 = $7 >>> 12;
 $25 = ($24|0)==(0);
 if ($25) {
  $prev$1 = 0;
 } else {
  $26 = HEAP32[$outLen>>2]|0;
  $27 = (($26) + 1)|0;
  HEAP32[$outLen>>2] = $27;
  $28 = HEAP32[$os>>2]|0;
  $29 = (($28) + 8|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($8&65535)<(40960);
  $32 = $24 | 48;
  $33 = (($24) + 55)|0;
  $34 = $31 ? $32 : $33;
  $35 = $34&255;
  (FUNCTION_TABLE_iii[$30 & 63]($os,$35)|0);
  $prev$1 = 1;
 }
 $36 = $7 >>> 8;
 $37 = $36 & 15;
 $38 = $37 | $prev$1;
 $39 = ($38|0)==(0);
 if ($39) {
  $prev$1$1 = $prev$1;
 } else {
  $40 = HEAP32[$outLen>>2]|0;
  $41 = (($40) + 1)|0;
  HEAP32[$outLen>>2] = $41;
  $42 = HEAP32[$os>>2]|0;
  $43 = (($42) + 8|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($37>>>0)<(10);
  $46 = $37 | 48;
  $47 = (($37) + 55)|0;
  $48 = $45 ? $46 : $47;
  $49 = $48&255;
  (FUNCTION_TABLE_iii[$44 & 63]($os,$49)|0);
  $prev$1$1 = 1;
 }
 $50 = $7 >>> 4;
 $51 = $50 & 15;
 $52 = $51 | $prev$1$1;
 $53 = ($52|0)==(0);
 if ($53) {
  $prev$1$2 = $prev$1$1;
 } else {
  $54 = HEAP32[$outLen>>2]|0;
  $55 = (($54) + 1)|0;
  HEAP32[$outLen>>2] = $55;
  $56 = HEAP32[$os>>2]|0;
  $57 = (($56) + 8|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ($51>>>0)<(10);
  $60 = $51 | 48;
  $61 = (($51) + 55)|0;
  $62 = $59 ? $60 : $61;
  $63 = $62&255;
  (FUNCTION_TABLE_iii[$58 & 63]($os,$63)|0);
  $prev$1$2 = 1;
 }
 $64 = $7 & 15;
 $65 = $64 | $prev$1$2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $67 = HEAP32[$outLen>>2]|0;
  $68 = (($67) + 1)|0;
  HEAP32[$outLen>>2] = $68;
  $69 = HEAP32[$os>>2]|0;
  $70 = (($69) + 8|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = ($64>>>0)<(10);
  $73 = $64 | 48;
  $74 = (($64) + 55)|0;
  $75 = $72 ? $73 : $74;
  $76 = $75&255;
  (FUNCTION_TABLE_iii[$71 & 63]($os,$76)|0);
 }
 $77 = HEAP32[$os>>2]|0;
 $78 = (($77) + 8|0);
 $79 = HEAP32[$78>>2]|0;
 $80 = (FUNCTION_TABLE_iii[$79 & 63]($os,59)|0);
 $81 = HEAP32[$outLen>>2]|0;
 $82 = (($81) + 1)|0;
 HEAP32[$outLen>>2] = $82;
 $ret$0 = $80;
 STACKTOP = sp;return ($ret$0|0);
}
function __ZN21UnicodeCStringCharset10startInputEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 860|0);
 HEAP32[$0>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN21UnicodeCStringCharset9nextInputER12ByteInStreamRjRi($this,$is,$stdChar,$bytesRead) {
 $this = $this|0;
 $is = $is|0;
 $stdChar = $stdChar|0;
 $bytesRead = $bytesRead|0;
 var $$$i = 0, $$$i1 = 0, $$0 = 0, $$01$$i = 0, $$014$i = 0, $$023$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $ch = 0, $code$03 = 0, $digit$off$i = 0, $digit$off3$i = 0, $digit$off4$i = 0;
 var $digits$04 = 0, $isdigit$i = 0, $isdigittmp$i = 0, $not$ = 0, $or$cond = 0, $storemerge = 0, $uniCh$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ch = sp;
 HEAP32[$bytesRead>>2] = 0;
 $0 = HEAP32[$is>>2]|0;
 $1 = (($0) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iii[$2 & 63]($is,$ch)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$bytesRead>>2] = 1;
 $5 = HEAP8[$ch>>0]|0;
 $6 = $5&255;
 $7 = ($5<<24>>24)==(92);
 L4: do {
  if ($7) {
   $8 = HEAP32[$is>>2]|0;
   $9 = (($8) + 12|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (FUNCTION_TABLE_iii[$10 & 63]($is,$ch)|0);
   $12 = ($11|0)==(0);
   if ($12) {
    $uniCh$0 = $6;
   } else {
    $13 = HEAP8[$ch>>0]|0;
    if ((($13<<24>>24) == 88) | (($13<<24>>24) == 120)) {
     $14 = HEAP32[$is>>2]|0;
     $15 = (($14) + 8|0);
     $16 = HEAP32[$15>>2]|0;
     (FUNCTION_TABLE_iii[$16 & 63]($is,$ch)|0);
     $17 = HEAP32[$bytesRead>>2]|0;
     $18 = (($17) + 1)|0;
     HEAP32[$bytesRead>>2] = $18;
     $19 = HEAP32[$is>>2]|0;
     $20 = (($19) + 12|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = (FUNCTION_TABLE_iii[$21 & 63]($is,$ch)|0);
     $23 = ($22|0)==(0);
     if ($23) {
      $uniCh$0 = 0;
     } else {
      $code$03 = 0;$digits$04 = 0;
      while(1) {
       $24 = HEAP8[$ch>>0]|0;
       $25 = $24&255;
       $isdigittmp$i = (($25) + -48)|0;
       $isdigit$i = ($isdigittmp$i>>>0)<(10);
       if ($isdigit$i) {
        $30 = 1;
       } else {
        $26 = $25 | 32;
        $27 = (($26) + -97)|0;
        $28 = ($27>>>0)<(6);
        $30 = $28;
       }
       $29 = ($digits$04|0)<(4);
       $or$cond = $30 & $29;
       if (!($or$cond)) {
        $uniCh$0 = $code$03;
        break L4;
       }
       $31 = HEAP32[$is>>2]|0;
       $32 = (($31) + 8|0);
       $33 = HEAP32[$32>>2]|0;
       (FUNCTION_TABLE_iii[$33 & 63]($is,$ch)|0);
       $34 = HEAP32[$bytesRead>>2]|0;
       $35 = (($34) + 1)|0;
       HEAP32[$bytesRead>>2] = $35;
       $36 = $code$03&65535;
       $37 = $36 << 4;
       $38 = HEAP8[$ch>>0]|0;
       $39 = $38&255;
       $digit$off$i = (($38) + -97)<<24>>24;
       $40 = ($digit$off$i&255)<(6);
       do {
        if ($40) {
         $41 = (($39) + -87)|0;
         $47 = $41;
        } else {
         $digit$off3$i = (($38) + -65)<<24>>24;
         $42 = ($digit$off3$i&255)<(6);
         if ($42) {
          $43 = (($39) + -55)|0;
          $47 = $43;
          break;
         } else {
          $digit$off4$i = (($38) + -48)<<24>>24;
          $44 = ($digit$off4$i&255)<(10);
          $45 = (($39) + -48)|0;
          $$$i1 = $44 ? $45 : 0;
          $47 = $$$i1;
          break;
         }
        }
       } while(0);
       $46 = (($47) + ($37))|0;
       $48 = $46&65535;
       $49 = (($digits$04) + 1)|0;
       $50 = HEAP32[$is>>2]|0;
       $51 = (($50) + 12|0);
       $52 = HEAP32[$51>>2]|0;
       $53 = (FUNCTION_TABLE_iii[$52 & 63]($is,$ch)|0);
       $54 = ($53|0)==(0);
       if ($54) {
        $uniCh$0 = $48;
        break;
       } else {
        $code$03 = $48;$digits$04 = $49;
       }
      }
     }
    } else {
     $uniCh$0 = $6;
    }
   }
  } else {
   $uniCh$0 = $6;
  }
 } while(0);
 $55 = $uniCh$0&65535;
 $56 = (($this) + 4|0);
 $$014$i = $56;$$023$i = 213;
 while(1) {
  $57 = $$023$i >>> 1;
  $58 = $57 << 2;
  $59 = (($$014$i) + ($58)|0);
  $60 = HEAP32[$59>>2]|0;
  $61 = $60 & 65535;
  $62 = ($55|0)==($61|0);
  if ($62) {
   label = 19;
   break;
  }
  $63 = ($$023$i|0)==(1);
  if ($63) {
   $storemerge = $55;
   break;
  }
  $not$ = ($55>>>0)<=($61>>>0);
  $64 = (($$023$i) - ($57))|0;
  $$$i = $not$ ? $57 : $64;
  $$01$$i = $not$ ? $$014$i : $59;
  $65 = ($$$i|0)==(0);
  if ($65) {
   $storemerge = $55;
   break;
  } else {
   $$014$i = $$01$$i;$$023$i = $$$i;
  }
 }
 if ((label|0) == 19) {
  $66 = ($59|0)==(0|0);
  if ($66) {
   $storemerge = $55;
  } else {
   $67 = $60 >>> 16;
   $68 = $67 | 65536;
   $storemerge = $68;
  }
 }
 HEAP32[$stdChar>>2] = $storemerge;
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN21UnicodeCStringCharset7putCharER13ByteOutStreamjRi($this,$os,$stdChar,$outLen) {
 $this = $this|0;
 $os = $os|0;
 $stdChar = $stdChar|0;
 $outLen = $outLen|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $9 = 0, $isdigit$i = 0, $isdigittmp$i = 0, $or$cond = 0, $prev$1 = 0, $prev$1$1 = 0, $prev$1$2 = 0, $ret$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($stdChar>>>0)<(65536);
 if ($0) {
  $1 = $stdChar&65535;
  $8 = $1;
 } else {
  $2 = (($stdChar) + -65536)|0;
  $3 = (($this) + 856|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($4) + ($2<<1)|0);
  $6 = HEAP16[$5>>1]|0;
  $8 = $6;
 }
 $7 = $8&65535;
 $9 = ($8&65535)>=(128);
 $isdigittmp$i = (($7) + -48)|0;
 $isdigit$i = ($isdigittmp$i>>>0)<(10);
 $or$cond = $9 | $isdigit$i;
 if (!($or$cond)) {
  $10 = $7 | 32;
  $11 = (($10) + -97)|0;
  $12 = ($11>>>0)<(6);
  if (!($12)) {
   if (!((($8<<16>>16) == 88) | (($8<<16>>16) == 120))) {
    HEAP32[$outLen>>2] = 1;
    $13 = HEAP32[$os>>2]|0;
    $14 = (($13) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = $8&255;
    $17 = (FUNCTION_TABLE_iii[$15 & 63]($os,$16)|0);
    $ret$0 = $17;
    STACKTOP = sp;return ($ret$0|0);
   }
  }
 }
 HEAP32[$outLen>>2] = 2;
 $18 = HEAP32[$os>>2]|0;
 $19 = (($18) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 (FUNCTION_TABLE_iii[$20 & 63]($os,92)|0);
 $21 = HEAP32[$os>>2]|0;
 $22 = (($21) + 8|0);
 $23 = HEAP32[$22>>2]|0;
 (FUNCTION_TABLE_iii[$23 & 63]($os,120)|0);
 $24 = $7 >>> 12;
 $25 = ($24|0)==(0);
 if ($25) {
  $prev$1 = 0;
 } else {
  $26 = HEAP32[$outLen>>2]|0;
  $27 = (($26) + 1)|0;
  HEAP32[$outLen>>2] = $27;
  $28 = HEAP32[$os>>2]|0;
  $29 = (($28) + 8|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($8&65535)<(40960);
  $32 = $24 | 48;
  $33 = (($24) + 55)|0;
  $34 = $31 ? $32 : $33;
  $35 = $34&255;
  (FUNCTION_TABLE_iii[$30 & 63]($os,$35)|0);
  $prev$1 = 1;
 }
 $36 = $7 >>> 8;
 $37 = $36 & 15;
 $38 = $37 | $prev$1;
 $39 = ($38|0)==(0);
 if ($39) {
  $prev$1$1 = $prev$1;
 } else {
  $40 = HEAP32[$outLen>>2]|0;
  $41 = (($40) + 1)|0;
  HEAP32[$outLen>>2] = $41;
  $42 = HEAP32[$os>>2]|0;
  $43 = (($42) + 8|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($37>>>0)<(10);
  $46 = $37 | 48;
  $47 = (($37) + 55)|0;
  $48 = $45 ? $46 : $47;
  $49 = $48&255;
  (FUNCTION_TABLE_iii[$44 & 63]($os,$49)|0);
  $prev$1$1 = 1;
 }
 $50 = $7 >>> 4;
 $51 = $50 & 15;
 $52 = $51 | $prev$1$1;
 $53 = ($52|0)==(0);
 if ($53) {
  $prev$1$2 = $prev$1$1;
 } else {
  $54 = HEAP32[$outLen>>2]|0;
  $55 = (($54) + 1)|0;
  HEAP32[$outLen>>2] = $55;
  $56 = HEAP32[$os>>2]|0;
  $57 = (($56) + 8|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ($51>>>0)<(10);
  $60 = $51 | 48;
  $61 = (($51) + 55)|0;
  $62 = $59 ? $60 : $61;
  $63 = $62&255;
  (FUNCTION_TABLE_iii[$58 & 63]($os,$63)|0);
  $prev$1$2 = 1;
 }
 $64 = $7 & 15;
 $65 = $64 | $prev$1$2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $67 = HEAP32[$outLen>>2]|0;
  $68 = (($67) + 1)|0;
  HEAP32[$outLen>>2] = $68;
  $69 = HEAP32[$os>>2]|0;
  $70 = (($69) + 8|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = ($64>>>0)<(10);
  $73 = $64 | 48;
  $74 = (($64) + 55)|0;
  $75 = $72 ? $73 : $74;
  $76 = $75&255;
  (FUNCTION_TABLE_iii[$71 & 63]($os,$76)|0);
 }
 $77 = HEAP32[$os>>2]|0;
 $78 = (($77) + 20|0);
 $79 = HEAP32[$78>>2]|0;
 $80 = (FUNCTION_TABLE_ii[$79 & 127]($os)|0);
 $81 = (($this) + 860|0);
 HEAP32[$81>>2] = 1;
 $ret$0 = $80;
 STACKTOP = sp;return ($ret$0|0);
}
function __ZN17DoubleByteCharsetC2EPt($this,$vnChars) {
 $this = $this|0;
 $vnChars = $vnChars|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $exitcond = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((720 + 8|0));
 $0 = (($this) + 1368|0);
 HEAP32[$0>>2] = $vnChars;
 $1 = (($this) + 4|0);
 _memset(($1|0),0,512)|0;
 $i$01 = 0;
 while(1) {
  $2 = (($vnChars) + ($i$01<<1)|0);
  $3 = HEAP16[$2>>1]|0;
  $4 = $3&65535;
  $5 = $4 >>> 8;
  $6 = ($5|0)==(0);
  if ($6) {
   $8 = ((($this) + ($4<<1)|0) + 4|0);
   $9 = HEAP16[$8>>1]|0;
   $10 = ($9<<16>>16)==(0);
   if ($10) {
    $11 = (($i$01) + 1)|0;
    $12 = $11&65535;
    HEAP16[$8>>1] = $12;
   }
  } else {
   $7 = ((($this) + ($5<<1)|0) + 4|0);
   HEAP16[$7>>1] = -1;
  }
  $13 = $i$01 << 16;
  $14 = HEAP16[$2>>1]|0;
  $15 = $14&65535;
  $16 = $15 | $13;
  $17 = ((($this) + ($i$01<<2)|0) + 516|0);
  HEAP32[$17>>2] = $16;
  $18 = (($i$01) + 1)|0;
  $exitcond = ($18|0)==(213);
  if ($exitcond) {
   break;
  } else {
   $i$01 = $18;
  }
 }
 $19 = (($this) + 516|0);
 _qsort($19,213,4,32);
 STACKTOP = sp;return;
}
function __ZN17DoubleByteCharset9nextInputER12ByteInStreamRjRi($this,$is,$stdChar,$bytesRead) {
 $this = $this|0;
 $is = $is|0;
 $stdChar = $stdChar|0;
 $bytesRead = $bytesRead|0;
 var $$$i = 0, $$0 = 0, $$01$$i = 0, $$014$i = 0, $$023$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ch = 0, $hi = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ch = sp + 1|0;
 $hi = sp;
 HEAP32[$bytesRead>>2] = 0;
 $0 = HEAP32[$is>>2]|0;
 $1 = (($0) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iii[$2 & 63]($is,$ch)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$bytesRead>>2] = 1;
 $5 = HEAP8[$ch>>0]|0;
 $6 = $5&255;
 $7 = ((($this) + ($6<<1)|0) + 4|0);
 $8 = HEAP16[$7>>1]|0;
 $9 = $8&65535;
 HEAP32[$stdChar>>2] = $9;
 if ((($8<<16>>16) == 0)) {
  HEAP32[$stdChar>>2] = $6;
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 } else if ((($8<<16>>16) == -1)) {
  HEAP32[$stdChar>>2] = -1;
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 } else {
  $10 = (($9) + 65535)|0;
  HEAP32[$stdChar>>2] = $10;
  $11 = HEAP32[$is>>2]|0;
  $12 = (($11) + 12|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_iii[$13 & 63]($is,$hi)|0);
  $15 = ($14|0)==(0);
  if ($15) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  $16 = HEAP8[$hi>>0]|0;
  $17 = ($16<<24>>24)==(0);
  if ($17) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  $18 = HEAP8[$ch>>0]|0;
  $19 = $18&255;
  $20 = $16&255;
  $21 = $20 << 8;
  $22 = $19 | $21;
  $23 = (($this) + 516|0);
  $$014$i = $23;$$023$i = 213;
  while(1) {
   $24 = $$023$i >>> 1;
   $25 = $24 << 2;
   $26 = (($$014$i) + ($25)|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = $27 & 65535;
   $29 = ($22|0)==($28|0);
   if ($29) {
    label = 11;
    break;
   }
   $30 = ($$023$i|0)==(1);
   if ($30) {
    $$0 = 1;
    label = 13;
    break;
   }
   $not$ = ($22>>>0)<=($28>>>0);
   $31 = (($$023$i) - ($24))|0;
   $$$i = $not$ ? $24 : $31;
   $$01$$i = $not$ ? $$014$i : $26;
   $32 = ($$$i|0)==(0);
   if ($32) {
    $$0 = 1;
    label = 13;
    break;
   } else {
    $$014$i = $$01$$i;$$023$i = $$$i;
   }
  }
  if ((label|0) == 11) {
   $33 = ($26|0)==(0|0);
   if ($33) {
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
   $34 = $27 >>> 16;
   $35 = $34 | 65536;
   HEAP32[$stdChar>>2] = $35;
   HEAP32[$bytesRead>>2] = 2;
   $36 = HEAP32[$is>>2]|0;
   $37 = (($36) + 8|0);
   $38 = HEAP32[$37>>2]|0;
   (FUNCTION_TABLE_iii[$38 & 63]($is,$hi)|0);
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  else if ((label|0) == 13) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 return (0)|0;
}
function __ZN17DoubleByteCharset7putCharER13ByteOutStreamjRi($this,$os,$stdChar,$outLen) {
 $this = $this|0;
 $os = $os|0;
 $stdChar = $stdChar|0;
 $outLen = $outLen|0;
 var $$ = 0, $$mask = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $ret$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($stdChar>>>0)>(65535);
 if ($0) {
  $1 = (($stdChar) + -65536)|0;
  $2 = (($this) + 1368|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = (($3) + ($1<<1)|0);
  $5 = HEAP16[$4>>1]|0;
  $6 = ($5&65535)<(256);
  if ($6) {
   $17 = $5&255;
   $$mask = $5 & 255;
   $18 = $$mask&65535;
   $19 = ((($this) + ($18<<1)|0) + 4|0);
   $20 = HEAP16[$19>>1]|0;
   $21 = ($20<<16>>16)==(-1);
   $$ = $21 ? 35 : $17;
   HEAP32[$outLen>>2] = 1;
   $22 = HEAP32[$os>>2]|0;
   $23 = (($22) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (FUNCTION_TABLE_iii[$24 & 63]($os,$$)|0);
   $ret$0 = $25;
   STACKTOP = sp;return ($ret$0|0);
  } else {
   HEAP32[$outLen>>2] = 2;
   $7 = HEAP32[$os>>2]|0;
   $8 = (($7) + 8|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $5&255;
   (FUNCTION_TABLE_iii[$9 & 63]($os,$10)|0);
   $11 = HEAP32[$os>>2]|0;
   $12 = (($11) + 8|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ($5&65535) >>> 8;
   $15 = $14&255;
   $16 = (FUNCTION_TABLE_iii[$13 & 63]($os,$15)|0);
   $ret$0 = $16;
   STACKTOP = sp;return ($ret$0|0);
  }
 }
 $26 = ($stdChar>>>0)>(255);
 if (!($26)) {
  $27 = ((($this) + ($stdChar<<1)|0) + 4|0);
  $28 = HEAP16[$27>>1]|0;
  $29 = ($28<<16>>16)==(0);
  if ($29) {
   HEAP32[$outLen>>2] = 1;
   $34 = HEAP32[$os>>2]|0;
   $35 = (($34) + 8|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = $stdChar&255;
   $38 = (FUNCTION_TABLE_iii[$36 & 63]($os,$37)|0);
   $ret$0 = $38;
   STACKTOP = sp;return ($ret$0|0);
  }
 }
 HEAP32[$outLen>>2] = 1;
 $30 = HEAP32[$os>>2]|0;
 $31 = (($30) + 8|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = (FUNCTION_TABLE_iii[$32 & 63]($os,35)|0);
 $ret$0 = $33;
 STACKTOP = sp;return ($ret$0|0);
}
function __ZN11VIQRCharset10startInputEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 552|0);
 HEAP32[$0>>2] = 0;
 $1 = (($this) + 520|0);
 HEAP32[$1>>2] = 1;
 $2 = (($this) + 540|0);
 HEAP32[$2>>2] = 0;
 $3 = (($this) + 544|0);
 HEAP32[$3>>2] = 0;
 $4 = HEAP32[((480 + 100|0))>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  STACKTOP = sp;return;
 }
 $6 = HEAP32[((480 + 84|0))>>2]|0;
 $7 = ($6|0)>(0);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = HEAP32[((480 + 80|0))>>2]|0;
 $i$01$i = 0;
 while(1) {
  $9 = ((($8) + (($i$01$i*176)|0)|0) + 168|0);
  HEAP32[$9>>2] = 0;
  $10 = ((($8) + (($i$01$i*176)|0)|0) + 172|0);
  HEAP32[$10>>2] = 0;
  $11 = (($i$01$i) + 1)|0;
  $12 = ($11|0)<($6|0);
  if ($12) {
   $i$01$i = $11;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZN11VIQRCharset9nextInputER12ByteInStreamRjRi($this,$is,$stdChar,$bytesRead) {
 $this = $this|0;
 $is = $is|0;
 $stdChar = $stdChar|0;
 $bytesRead = $bytesRead|0;
 var $$ = 0, $$0 = 0, $$0$i = 0, $$18 = 0, $$26 = 0, $$off = 0, $$off36 = 0, $$off37 = 0, $$old10 = 0, $$pr30 = 0, $$pr34 = 0, $$pre = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ch1 = 0, $ch2 = 0;
 var $cond$0 = 0, $i$02$i = 0, $offset$0 = 0, $or$cond = 0, $or$cond11 = 0, $or$cond25 = 0, $or$cond28 = 0, $or$cond5 = 0, $or$cond9 = 0, $patternFound$01$i = 0, $ret$0$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ch1 = sp + 1|0;
 $ch2 = sp;
 HEAP32[$bytesRead>>2] = 0;
 $0 = HEAP32[$is>>2]|0;
 $1 = (($0) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iii[$2 & 63]($is,$ch1)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$bytesRead>>2] = 1;
 $5 = HEAP8[$ch1>>0]|0;
 $6 = $5&255;
 $7 = ((($this) + ($6<<1)|0) + 8|0);
 $8 = HEAP16[$7>>1]|0;
 $9 = $8&65535;
 HEAP32[$stdChar>>2] = $9;
 $10 = HEAP32[((480 + 100|0))>>2]|0;
 $11 = ($10|0)==(0);
 if (!($11)) {
  $12 = HEAP32[((480 + 84|0))>>2]|0;
  $13 = ($12|0)>(0);
  if ($13) {
   $$pre = HEAP32[((480 + 80|0))>>2]|0;
   $i$02$i = 0;$patternFound$01$i = -1;
   while(1) {
    $14 = (($$pre) + (($i$02$i*176)|0)|0);
    $15 = ((($$pre) + (($i$02$i*176)|0)|0) + 168|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($16|0)>(-1);
    $$pre3 = HEAP32[$14>>2]|0;
    L9: do {
     if ($17) {
      $19 = $16;
      while(1) {
       $18 = (($$pre3) + ($19)|0);
       $20 = HEAP8[$18>>0]|0;
       $21 = ($20<<24>>24)==($5<<24>>24);
       if ($21) {
        $26 = $19;$28 = $$pre3;
        break L9;
       }
       $22 = (((($$pre) + (($i$02$i*176)|0)|0) + ($19<<2)|0) + 4|0);
       $23 = HEAP32[$22>>2]|0;
       HEAP32[$15>>2] = $23;
       $24 = ($23|0)>(-1);
       if ($24) {
        $19 = $23;
       } else {
        $26 = $23;$28 = $$pre3;
        break;
       }
      }
     } else {
      $26 = $16;$28 = $$pre3;
     }
    } while(0);
    $25 = (($26) + 1)|0;
    HEAP32[$15>>2] = $25;
    $27 = (($28) + ($25)|0);
    $29 = HEAP8[$27>>0]|0;
    $30 = ($29<<24>>24)==(0);
    if ($30) {
     $31 = ((($$pre) + (($i$02$i*176)|0)|0) + 172|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = (($32) + 1)|0;
     HEAP32[$31>>2] = $33;
     $34 = (((($$pre) + (($i$02$i*176)|0)|0) + ($25<<2)|0) + 4|0);
     $35 = HEAP32[$34>>2]|0;
     HEAP32[$15>>2] = $35;
     $ret$0$i$i = $i$02$i;
    } else {
     $ret$0$i$i = $patternFound$01$i;
    }
    $36 = (($i$02$i) + 1)|0;
    $37 = ($36|0)<($12|0);
    if ($37) {
     $i$02$i = $36;$patternFound$01$i = $ret$0$i$i;
    } else {
     break;
    }
   }
   $38 = ($ret$0$i$i|0)==(-1);
   if (!($38)) {
    $39 = (($this) + 544|0);
    HEAP32[$39>>2] = 1;
   }
  }
 }
 $40 = (($this) + 544|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = ($41|0)==(0);
 L20: do {
  if ($42) {
   label = 16;
  } else {
   switch ($5<<24>>24) {
   case 10: case 13: case 9: case 32:  {
    break;
   }
   case 92:  {
    label = 17;
    break L20;
    break;
   }
   default: {
    label = 19;
    break L20;
   }
   }
   HEAP32[$40>>2] = 0;
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $43 = ($5<<24>>24)==(92);
  if ($43) {
   label = 17;
  } else {
   label = 19;
  }
 }
 if ((label|0) == 17) {
  $44 = HEAP32[$is>>2]|0;
  $45 = (($44) + 8|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = (FUNCTION_TABLE_iii[$46 & 63]($is,$ch1)|0);
  $48 = ($47|0)==(0);
  if ($48) {
   $49 = HEAP32[$bytesRead>>2]|0;
   $50 = (($49) + 1)|0;
   HEAP32[$bytesRead>>2] = $50;
   $51 = HEAP8[$ch1>>0]|0;
   $52 = $51&255;
   $53 = ((($this) + ($52<<1)|0) + 8|0);
   $54 = HEAP16[$53>>1]|0;
   $55 = $54&65535;
   HEAP32[$stdChar>>2] = $55;
   $57 = $55;
  } else {
   label = 19;
  }
 }
 if ((label|0) == 19) {
  $$pr30 = HEAP32[$stdChar>>2]|0;
  $57 = $$pr30;
 }
 $56 = ($57>>>0)<(256);
 L31: do {
  if ($56) {
   $58 = HEAP8[$ch1>>0]|0;
   $59 = $58&255;
   HEAP32[$stdChar>>2] = $59;
  } else {
   $60 = HEAP32[$40>>2]|0;
   $61 = ($60|0)==(0);
   if ($61) {
    $62 = HEAP32[$is>>2]|0;
    $63 = (($62) + 40|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = (FUNCTION_TABLE_ii[$64 & 127]($is)|0);
    $66 = ($65|0)==(0);
    if ($66) {
     $67 = HEAP32[$is>>2]|0;
     $68 = (($67) + 12|0);
     $69 = HEAP32[$68>>2]|0;
     (FUNCTION_TABLE_iii[$69 & 63]($is,$ch2)|0);
     $70 = HEAP8[$ch1>>0]|0;
     $71 = $70&255;
     $72 = (($71) + -97)|0;
     $73 = ($72>>>0)<(26);
     $74 = $71 & 95;
     $$0$i = $73 ? $74 : $71;
     $75 = HEAP32[((480 + 116|0))>>2]|0;
     $76 = ($75|0)==(0);
     if ($76) {
      $$old10 = ($$0$i|0)==(68);
      if ($$old10) {
       label = 27;
      }
     } else {
      $77 = (($this) + 520|0);
      $78 = HEAP32[$77>>2]|0;
      $79 = ($78|0)!=(0);
      $80 = ($$0$i|0)==(68);
      $or$cond11 = $79 & $80;
      if ($or$cond11) {
       label = 27;
      }
     }
     if ((label|0) == 27) {
      $81 = HEAP8[$ch2>>0]|0;
      if ((($81<<24>>24) == 68) | (($81<<24>>24) == 100)) {
       $82 = HEAP32[$is>>2]|0;
       $83 = (($82) + 8|0);
       $84 = HEAP32[$83>>2]|0;
       (FUNCTION_TABLE_iii[$84 & 63]($is,$ch2)|0);
       $85 = HEAP32[$bytesRead>>2]|0;
       $86 = (($85) + 1)|0;
       HEAP32[$bytesRead>>2] = $86;
       $87 = HEAP32[$stdChar>>2]|0;
       $88 = (($87) + 2)|0;
       HEAP32[$stdChar>>2] = $88;
       break;
      }
     }
     $89 = HEAP8[$ch2>>0]|0;
     $90 = $89&255;
     $91 = ((($this) + ($90<<1)|0) + 8|0);
     $92 = HEAP16[$91>>1]|0;
     $93 = (($this) + 552|0);
     $94 = HEAP32[$93>>2]|0;
     $95 = ($94|0)==(0);
     $$off = (($70) + -97)<<24>>24;
     $96 = ($$off&255)<(26);
     do {
      if ($95) {
       if ($96) {
        $111 = (272 + ($72<<2)|0);
        $112 = HEAP32[$111>>2]|0;
        $113 = ($112|0)==(0);
        if ($113) {
         label = 42;
        } else {
         label = 44;
        }
       } else {
        label = 42;
       }
       if ((label|0) == 42) {
        $$off37 = (($70) + -65)<<24>>24;
        $114 = ($$off37&255)<(26);
        if ($114) {
         $115 = (($71) + -65)|0;
         $116 = (376 + ($115<<2)|0);
         $117 = HEAP32[$116>>2]|0;
         $118 = ($117|0)==(0);
         if ($118) {
          $131 = 0;
         } else {
          label = 44;
         }
        } else {
         $131 = 0;
        }
       }
       L62: do {
        if ((label|0) == 44) {
         $119 = ($92&65535)<(11);
         $120 = ($92<<16>>16)!=(0);
         $or$cond5 = $119 & $120;
         do {
          if ($or$cond5) {
           $121 = (($this) + 540|0);
           $122 = HEAP32[$121>>2]|0;
           $123 = ($122|0)==(0);
           if ($123) {
            $131 = 1;
            break L62;
           }
           if (!((($92<<16>>16) == 10) | (($92<<16>>16) == 6))) {
            $131 = 1;
            break L62;
           }
          } else {
           $124 = ($92<<16>>16)==(12);
           if ($124) {
            if ((($$0$i|0) == 79) | (($$0$i|0) == 69) | (($$0$i|0) == 65)) {
             $131 = 1;
             break L62;
            } else {
             break;
            }
           }
           $125 = ($92<<16>>16)==(24);
           $126 = ($$0$i|0)==(65);
           $or$cond25 = $125 & $126;
           if ($or$cond25) {
            $131 = 1;
            break L62;
           }
           $127 = ($92<<16>>16)==(26);
           if (!($127)) {
            $131 = 0;
            break L62;
           }
           $128 = ($$0$i|0)==(79);
           $129 = ($$0$i|0)==(85);
           $$26 = $128 | $129;
           $131 = $$26;
           break L62;
          }
         } while(0);
         $131 = 0;
        }
       } while(0);
       $130 = $131&1;
       $cond$0 = $130;
      } else {
       if ($96) {
        $97 = (272 + ($72<<2)|0);
        $98 = HEAP32[$97>>2]|0;
        $99 = ($98|0)==(0);
        if ($99) {
         label = 32;
        }
       } else {
        label = 32;
       }
       if ((label|0) == 32) {
        $$off36 = (($70) + -65)<<24>>24;
        $100 = ($$off36&255)<(26);
        if (!($100)) {
         break L31;
        }
        $101 = (($71) + -65)|0;
        $102 = (376 + ($101<<2)|0);
        $103 = HEAP32[$102>>2]|0;
        $104 = ($103|0)==(0);
        if ($104) {
         break L31;
        }
       }
       if ((($92<<16>>16) == 2) | (($92<<16>>16) == 4) | (($92<<16>>16) == 8)) {
        $184 = 1;
       } else if ((($92<<16>>16) == 12)) {
        if ((($$0$i|0) == 79) | (($$0$i|0) == 69) | (($$0$i|0) == 65)) {
         $184 = 1;
        } else {
         break L31;
        }
       } else {
        $105 = ($92<<16>>16)==(24);
        $106 = ($$0$i|0)==(65);
        $or$cond = $105 & $106;
        if ($or$cond) {
         $184 = 1;
        } else {
         $107 = ($92<<16>>16)==(26);
         if (!($107)) {
          break L31;
         }
         $108 = ($$0$i|0)==(79);
         $109 = ($$0$i|0)==(85);
         $$18 = $108 | $109;
         $110 = $$18&1;
         if ((($$0$i|0) == 79) | (($$0$i|0) == 85)) {
          $184 = $110;
         } else {
          $cond$0 = $110;
          break;
         }
        }
       }
       HEAP32[$93>>2] = 0;
       $cond$0 = $184;
      }
     } while(0);
     $132 = ($cond$0|0)==(0);
     if (!($132)) {
      $133 = ($92<<16>>16)==(0);
      if (!($133)) {
       $134 = (($this) + 540|0);
       HEAP32[$134>>2] = 1;
      }
      $135 = HEAP32[$is>>2]|0;
      $136 = (($135) + 8|0);
      $137 = HEAP32[$136>>2]|0;
      (FUNCTION_TABLE_iii[$137 & 63]($is,$ch2)|0);
      $138 = HEAP32[$bytesRead>>2]|0;
      $139 = (($138) + 1)|0;
      HEAP32[$bytesRead>>2] = $139;
      $140 = HEAP8[$ch2>>0]|0;
      $141 = $140&255;
      $142 = ((($this) + ($141<<1)|0) + 8|0);
      $143 = HEAP16[$142>>1]|0;
      $144 = $143&65535;
      $145 = ($143<<16>>16)==(26);
      $$ = $145 ? 24 : $144;
      $146 = ($$|0)==(24);
      if ($146) {
       $147 = HEAP8[$ch1>>0]|0;
       if ((($147<<24>>24) == 85) | (($147<<24>>24) == 117)) {
        $offset$0 = 12;
       } else {
        $offset$0 = 24;
       }
      } else {
       $offset$0 = $$;
      }
      $148 = HEAP32[$stdChar>>2]|0;
      $149 = (($148) + ($offset$0))|0;
      HEAP32[$stdChar>>2] = $149;
      $150 = HEAP32[$is>>2]|0;
      $151 = (($150) + 12|0);
      $152 = HEAP32[$151>>2]|0;
      $153 = (FUNCTION_TABLE_iii[$152 & 63]($is,$ch2)|0);
      $154 = ($153|0)!=(0);
      $155 = ($92&65535)>(10);
      $or$cond9 = $154 & $155;
      if ($or$cond9) {
       $156 = HEAP8[$ch2>>0]|0;
       $157 = $156&255;
       $158 = ((($this) + ($157<<1)|0) + 8|0);
       $159 = HEAP16[$158>>1]|0;
       $160 = ($159<<16>>16)!=(0);
       $161 = ($159&65535)<(11);
       $or$cond28 = $160 & $161;
       if ($or$cond28) {
        $162 = HEAP32[$is>>2]|0;
        $163 = (($162) + 8|0);
        $164 = HEAP32[$163>>2]|0;
        (FUNCTION_TABLE_iii[$164 & 63]($is,$ch2)|0);
        $165 = HEAP32[$bytesRead>>2]|0;
        $166 = (($165) + 1)|0;
        HEAP32[$bytesRead>>2] = $166;
        $167 = HEAP8[$ch2>>0]|0;
        $168 = $167&255;
        $169 = ((($this) + ($168<<1)|0) + 8|0);
        $170 = HEAP16[$169>>1]|0;
        $171 = $170&65535;
        $172 = HEAP32[$stdChar>>2]|0;
        $173 = (($172) + ($171))|0;
        HEAP32[$stdChar>>2] = $173;
       }
      }
     }
    }
   }
  }
 } while(0);
 $174 = HEAP32[$stdChar>>2]|0;
 $175 = ($174>>>0)<(256);
 $176 = $175&1;
 $177 = (($this) + 520|0);
 HEAP32[$177>>2] = $176;
 $178 = HEAP32[$stdChar>>2]|0;
 $179 = ($178>>>0)<(256);
 if ($179) {
  $180 = (($this) + 540|0);
  HEAP32[$180>>2] = 0;
  $$pr34 = HEAP32[$stdChar>>2]|0;
  $181 = ($$pr34>>>0)>(255);
  if ($181) {
   $183 = $$pr34;
  } else {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  $183 = $178;
 }
 $182 = (($183) + 65280)|0;
 HEAP32[$stdChar>>2] = $182;
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN11VIQRCharset11startOutputEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $i$01$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 524|0);
 $1 = (($this) + 548|0);
 HEAP32[$1>>2] = 0;
 ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;
 $2 = HEAP32[((480 + 92|0))>>2]|0;
 $3 = ($2|0)>(0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = HEAP32[((480 + 88|0))>>2]|0;
 $i$01$i = 0;
 while(1) {
  $5 = ((($4) + (($i$01$i*176)|0)|0) + 168|0);
  HEAP32[$5>>2] = 0;
  $6 = ((($4) + (($i$01$i*176)|0)|0) + 172|0);
  HEAP32[$6>>2] = 0;
  $7 = (($i$01$i) + 1)|0;
  $8 = ($7|0)<($2|0);
  if ($8) {
   $i$01$i = $7;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZN11VIQRCharset7putCharER13ByteOutStreamjRi($this,$os,$stdChar,$outLen) {
 $this = $this|0;
 $os = $os|0;
 $stdChar = $stdChar|0;
 $outLen = $outLen|0;
 var $$ = 0, $$0$i = 0, $$off5 = 0, $$pre = 0, $$pre35 = 0, $$pre38 = 0, $$pre39 = 0, $$pre43 = 0, $$pre44 = 0, $$pre48 = 0, $$pre49 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i$01$i = 0, $i$02$i = 0, $i$02$i13 = 0, $i$02$i2 = 0, $i$02$i25 = 0;
 var $or$cond3 = 0, $patternFound$01$i = 0, $patternFound$01$i14 = 0, $patternFound$01$i26 = 0, $patternFound$01$i3 = 0, $ret$0 = 0, $ret$0$i$i = 0, $ret$0$i$i18 = 0, $ret$0$i$i30 = 0, $ret$0$i$i7 = 0, $ret$1 = 0, $ret$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($stdChar>>>0)>(65535);
 if ($0) {
  HEAP32[$outLen>>2] = 1;
  $1 = (($stdChar) + -65536)|0;
  $2 = (($this) + 4|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = (($3) + ($1<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = $5&255;
  $7 = $5 & 255;
  $8 = (($7) + -97)|0;
  $9 = ($8>>>0)<(26);
  $10 = $5 & 95;
  $$0$i = $9 ? $10 : $7;
  $11 = HEAP32[$os>>2]|0;
  $12 = (($11) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_iii[$13 & 63]($os,$6)|0);
  $15 = HEAP32[((480 + 92|0))>>2]|0;
  $16 = ($15|0)>(0);
  if ($16) {
   $$pre = HEAP32[((480 + 88|0))>>2]|0;
   $i$02$i2 = 0;$patternFound$01$i3 = -1;
   while(1) {
    $17 = (($$pre) + (($i$02$i2*176)|0)|0);
    $18 = ((($$pre) + (($i$02$i2*176)|0)|0) + 168|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = ($19|0)>(-1);
    $$pre35 = HEAP32[$17>>2]|0;
    L7: do {
     if ($20) {
      $22 = $19;
      while(1) {
       $21 = (($$pre35) + ($22)|0);
       $23 = HEAP8[$21>>0]|0;
       $24 = ($23<<24>>24)==($6<<24>>24);
       if ($24) {
        $29 = $22;$31 = $$pre35;
        break L7;
       }
       $25 = (((($$pre) + (($i$02$i2*176)|0)|0) + ($22<<2)|0) + 4|0);
       $26 = HEAP32[$25>>2]|0;
       HEAP32[$18>>2] = $26;
       $27 = ($26|0)>(-1);
       if ($27) {
        $22 = $26;
       } else {
        $29 = $26;$31 = $$pre35;
        break;
       }
      }
     } else {
      $29 = $19;$31 = $$pre35;
     }
    } while(0);
    $28 = (($29) + 1)|0;
    HEAP32[$18>>2] = $28;
    $30 = (($31) + ($28)|0);
    $32 = HEAP8[$30>>0]|0;
    $33 = ($32<<24>>24)==(0);
    if ($33) {
     $34 = ((($$pre) + (($i$02$i2*176)|0)|0) + 172|0);
     $35 = HEAP32[$34>>2]|0;
     $36 = (($35) + 1)|0;
     HEAP32[$34>>2] = $36;
     $37 = (((($$pre) + (($i$02$i2*176)|0)|0) + ($28<<2)|0) + 4|0);
     $38 = HEAP32[$37>>2]|0;
     HEAP32[$18>>2] = $38;
     $ret$0$i$i7 = $i$02$i2;
    } else {
     $ret$0$i$i7 = $patternFound$01$i3;
    }
    $39 = (($i$02$i2) + 1)|0;
    $40 = ($39|0)<($15|0);
    if ($40) {
     $i$02$i2 = $39;$patternFound$01$i3 = $ret$0$i$i7;
    } else {
     break;
    }
   }
   $41 = ($ret$0$i$i7|0)==(-1);
   if (!($41)) {
    $42 = (($this) + 548|0);
    HEAP32[$42>>2] = 1;
   }
  }
  $43 = (($this) + 548|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($44|0)==(0);
  if (!($45)) {
   if ((($7|0) == 10) | (($7|0) == 13) | (($7|0) == 9) | (($7|0) == 32)) {
    HEAP32[$43>>2] = 0;
   }
  }
  $46 = $5 & 65280;
  $47 = ($46|0)==(0);
  if ($47) {
   if ($9) {
    $82 = (272 + ($8<<2)|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($83|0)==(0);
    if ($84) {
     label = 27;
    } else {
     $90 = 1;
    }
   } else {
    label = 27;
   }
   if ((label|0) == 27) {
    $$off5 = (($7) + -65)|0;
    $85 = ($$off5>>>0)<(26);
    if ($85) {
     $86 = (376 + ($$off5<<2)|0);
     $87 = HEAP32[$86>>2]|0;
     $88 = ($87|0)!=(0);
     $90 = $88;
    } else {
     $90 = 0;
    }
   }
   $89 = $90&1;
   $91 = (($this) + 536|0);
   HEAP32[$91>>2] = $89;
   $92 = ($$0$i|0)==(65);
   $93 = $92&1;
   $94 = (($this) + 524|0);
   HEAP32[$94>>2] = $93;
   $95 = ($$0$i|0)==(85);
   $96 = ($$0$i|0)==(79);
   $$ = $95 | $96;
   $97 = $$&1;
   $98 = (($this) + 532|0);
   HEAP32[$98>>2] = $97;
   if ((($$0$i|0) == 79) | (($$0$i|0) == 65) | (($$0$i|0) == 69)) {
    $100 = 1;
   } else {
    $100 = 0;
   }
   $99 = (($this) + 528|0);
   HEAP32[$99>>2] = $100;
   $ret$2 = $14;
   STACKTOP = sp;return ($ret$2|0);
  }
  $48 = $5 >>> 8;
  $49 = $48&255;
  $50 = HEAP32[$outLen>>2]|0;
  $51 = (($50) + 1)|0;
  HEAP32[$outLen>>2] = $51;
  $52 = HEAP32[$os>>2]|0;
  $53 = (($52) + 8|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = (FUNCTION_TABLE_iii[$54 & 63]($os,$49)|0);
  $56 = $5 & 16711680;
  $57 = ($56|0)==(0);
  if ($57) {
   $67 = $48 & 255;
   $68 = ((($this) + ($67<<1)|0) + 8|0);
   $69 = HEAP16[$68>>1]|0;
   if ((($69<<16>>16) == 26) | (($69<<16>>16) == 24) | (($69<<16>>16) == 12)) {
    $71 = 1;
   } else {
    $71 = 0;
   }
   $70 = (($this) + 536|0);
   HEAP32[$70>>2] = $71;
   $ret$0 = $55;
  } else {
   $58 = HEAP32[$outLen>>2]|0;
   $59 = (($58) + 1)|0;
   HEAP32[$outLen>>2] = $59;
   $60 = HEAP32[$os>>2]|0;
   $61 = (($60) + 8|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = $5 >>> 16;
   $64 = $63&255;
   $65 = (FUNCTION_TABLE_iii[$62 & 63]($os,$64)|0);
   $66 = (($this) + 536|0);
   HEAP32[$66>>2] = 0;
   $ret$0 = $65;
  }
  $72 = HEAP32[((480 + 92|0))>>2]|0;
  $73 = ($72|0)>(0);
  if ($73) {
   $74 = HEAP32[((480 + 88|0))>>2]|0;
   $i$01$i = 0;
   while(1) {
    $75 = ((($74) + (($i$01$i*176)|0)|0) + 168|0);
    HEAP32[$75>>2] = 0;
    $76 = ((($74) + (($i$01$i*176)|0)|0) + 172|0);
    HEAP32[$76>>2] = 0;
    $77 = (($i$01$i) + 1)|0;
    $78 = ($77|0)<($72|0);
    if ($78) {
     $i$01$i = $77;
    } else {
     break;
    }
   }
  }
  $79 = (($this) + 524|0);
  HEAP32[$79>>2] = 0;
  $80 = (($this) + 532|0);
  HEAP32[$80>>2] = 0;
  $81 = (($this) + 528|0);
  HEAP32[$81>>2] = 0;
  $ret$2 = $ret$0;
  STACKTOP = sp;return ($ret$2|0);
 }
 $101 = ($stdChar>>>0)>(255);
 HEAP32[$outLen>>2] = 1;
 if ($101) {
  $102 = HEAP32[$os>>2]|0;
  $103 = (($102) + 8|0);
  $104 = HEAP32[$103>>2]|0;
  $105 = (FUNCTION_TABLE_iii[$104 & 63]($os,35)|0);
  $106 = HEAP32[((480 + 92|0))>>2]|0;
  $107 = ($106|0)>(0);
  if ($107) {
   $$pre38 = HEAP32[((480 + 88|0))>>2]|0;
   $i$02$i25 = 0;$patternFound$01$i26 = -1;
   while(1) {
    $108 = (($$pre38) + (($i$02$i25*176)|0)|0);
    $109 = ((($$pre38) + (($i$02$i25*176)|0)|0) + 168|0);
    $110 = HEAP32[$109>>2]|0;
    $111 = ($110|0)>(-1);
    $$pre39 = HEAP32[$108>>2]|0;
    L99: do {
     if ($111) {
      $113 = $110;
      while(1) {
       $112 = (($$pre39) + ($113)|0);
       $114 = HEAP8[$112>>0]|0;
       $115 = ($114<<24>>24)==(35);
       if ($115) {
        $120 = $113;$122 = $$pre39;
        break L99;
       }
       $116 = (((($$pre38) + (($i$02$i25*176)|0)|0) + ($113<<2)|0) + 4|0);
       $117 = HEAP32[$116>>2]|0;
       HEAP32[$109>>2] = $117;
       $118 = ($117|0)>(-1);
       if ($118) {
        $113 = $117;
       } else {
        $120 = $117;$122 = $$pre39;
        break;
       }
      }
     } else {
      $120 = $110;$122 = $$pre39;
     }
    } while(0);
    $119 = (($120) + 1)|0;
    HEAP32[$109>>2] = $119;
    $121 = (($122) + ($119)|0);
    $123 = HEAP8[$121>>0]|0;
    $124 = ($123<<24>>24)==(0);
    if ($124) {
     $125 = ((($$pre38) + (($i$02$i25*176)|0)|0) + 172|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = (($126) + 1)|0;
     HEAP32[$125>>2] = $127;
     $128 = (((($$pre38) + (($i$02$i25*176)|0)|0) + ($119<<2)|0) + 4|0);
     $129 = HEAP32[$128>>2]|0;
     HEAP32[$109>>2] = $129;
     $ret$0$i$i30 = $i$02$i25;
    } else {
     $ret$0$i$i30 = $patternFound$01$i26;
    }
    $130 = (($i$02$i25) + 1)|0;
    $131 = ($130|0)<($106|0);
    if ($131) {
     $i$02$i25 = $130;$patternFound$01$i26 = $ret$0$i$i30;
    } else {
     break;
    }
   }
   $132 = ($ret$0$i$i30|0)==(-1);
   if ($132) {
    $ret$1 = $105;
   } else {
    $133 = (($this) + 548|0);
    HEAP32[$133>>2] = 1;
    $ret$1 = $105;
   }
  } else {
   $ret$1 = $105;
  }
 } else {
  $134 = ((($this) + ($stdChar<<1)|0) + 8|0);
  $135 = HEAP16[$134>>1]|0;
  $136 = HEAP32[((480 + 96|0))>>2]|0;
  $137 = ($136|0)==(0);
  L51: do {
   if ($137) {
    $138 = (($this) + 548|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = ($139|0)==(0);
    if ($140) {
     $141 = ($stdChar|0)==(92);
     do {
      if (!($141)) {
       $142 = ($135<<16>>16)!=(0);
       $143 = ($135&65535)<(11);
       $or$cond3 = $142 & $143;
       if ($or$cond3) {
        $144 = (($this) + 536|0);
        $145 = HEAP32[$144>>2]|0;
        $146 = ($145|0)==(0);
        if (!($146)) {
         break;
        }
       }
       if ((($135<<16>>16) == 26)) {
        $153 = (($this) + 532|0);
        $154 = HEAP32[$153>>2]|0;
        $155 = ($154|0)==(0);
        if ($155) {
         break L51;
        } else {
         break;
        }
       } else if ((($135<<16>>16) == 24)) {
        $150 = (($this) + 524|0);
        $151 = HEAP32[$150>>2]|0;
        $152 = ($151|0)==(0);
        if ($152) {
         break L51;
        } else {
         break;
        }
       } else if ((($135<<16>>16) == 12)) {
        $147 = (($this) + 528|0);
        $148 = HEAP32[$147>>2]|0;
        $149 = ($148|0)==(0);
        if ($149) {
         break L51;
        } else {
         break;
        }
       } else {
        break L51;
       }
      }
     } while(0);
     HEAP32[$outLen>>2] = 2;
     $156 = HEAP32[$os>>2]|0;
     $157 = (($156) + 8|0);
     $158 = HEAP32[$157>>2]|0;
     (FUNCTION_TABLE_iii[$158 & 63]($os,92)|0);
     $159 = HEAP32[((480 + 92|0))>>2]|0;
     $160 = ($159|0)>(0);
     if ($160) {
      $$pre43 = HEAP32[((480 + 88|0))>>2]|0;
      $i$02$i13 = 0;$patternFound$01$i14 = -1;
      while(1) {
       $161 = (($$pre43) + (($i$02$i13*176)|0)|0);
       $162 = ((($$pre43) + (($i$02$i13*176)|0)|0) + 168|0);
       $163 = HEAP32[$162>>2]|0;
       $164 = ($163|0)>(-1);
       $$pre44 = HEAP32[$161>>2]|0;
       L67: do {
        if ($164) {
         $166 = $163;
         while(1) {
          $165 = (($$pre44) + ($166)|0);
          $167 = HEAP8[$165>>0]|0;
          $168 = ($167<<24>>24)==(92);
          if ($168) {
           $173 = $166;$175 = $$pre44;
           break L67;
          }
          $169 = (((($$pre43) + (($i$02$i13*176)|0)|0) + ($166<<2)|0) + 4|0);
          $170 = HEAP32[$169>>2]|0;
          HEAP32[$162>>2] = $170;
          $171 = ($170|0)>(-1);
          if ($171) {
           $166 = $170;
          } else {
           $173 = $170;$175 = $$pre44;
           break;
          }
         }
        } else {
         $173 = $163;$175 = $$pre44;
        }
       } while(0);
       $172 = (($173) + 1)|0;
       HEAP32[$162>>2] = $172;
       $174 = (($175) + ($172)|0);
       $176 = HEAP8[$174>>0]|0;
       $177 = ($176<<24>>24)==(0);
       if ($177) {
        $178 = ((($$pre43) + (($i$02$i13*176)|0)|0) + 172|0);
        $179 = HEAP32[$178>>2]|0;
        $180 = (($179) + 1)|0;
        HEAP32[$178>>2] = $180;
        $181 = (((($$pre43) + (($i$02$i13*176)|0)|0) + ($172<<2)|0) + 4|0);
        $182 = HEAP32[$181>>2]|0;
        HEAP32[$162>>2] = $182;
        $ret$0$i$i18 = $i$02$i13;
       } else {
        $ret$0$i$i18 = $patternFound$01$i14;
       }
       $183 = (($i$02$i13) + 1)|0;
       $184 = ($183|0)<($159|0);
       if ($184) {
        $i$02$i13 = $183;$patternFound$01$i14 = $ret$0$i$i18;
       } else {
        break;
       }
      }
      $185 = ($ret$0$i$i18|0)==(-1);
      if (!($185)) {
       HEAP32[$138>>2] = 1;
      }
     }
    }
   }
  } while(0);
  $186 = $stdChar&255;
  $187 = HEAP32[$os>>2]|0;
  $188 = (($187) + 8|0);
  $189 = HEAP32[$188>>2]|0;
  $190 = (FUNCTION_TABLE_iii[$189 & 63]($os,$186)|0);
  $191 = HEAP32[((480 + 92|0))>>2]|0;
  $192 = ($191|0)>(0);
  if ($192) {
   $$pre48 = HEAP32[((480 + 88|0))>>2]|0;
   $i$02$i = 0;$patternFound$01$i = -1;
   while(1) {
    $193 = (($$pre48) + (($i$02$i*176)|0)|0);
    $194 = ((($$pre48) + (($i$02$i*176)|0)|0) + 168|0);
    $195 = HEAP32[$194>>2]|0;
    $196 = ($195|0)>(-1);
    $$pre49 = HEAP32[$193>>2]|0;
    L82: do {
     if ($196) {
      $198 = $195;
      while(1) {
       $197 = (($$pre49) + ($198)|0);
       $199 = HEAP8[$197>>0]|0;
       $200 = ($199<<24>>24)==($186<<24>>24);
       if ($200) {
        $205 = $198;$207 = $$pre49;
        break L82;
       }
       $201 = (((($$pre48) + (($i$02$i*176)|0)|0) + ($198<<2)|0) + 4|0);
       $202 = HEAP32[$201>>2]|0;
       HEAP32[$194>>2] = $202;
       $203 = ($202|0)>(-1);
       if ($203) {
        $198 = $202;
       } else {
        $205 = $202;$207 = $$pre49;
        break;
       }
      }
     } else {
      $205 = $195;$207 = $$pre49;
     }
    } while(0);
    $204 = (($205) + 1)|0;
    HEAP32[$194>>2] = $204;
    $206 = (($207) + ($204)|0);
    $208 = HEAP8[$206>>0]|0;
    $209 = ($208<<24>>24)==(0);
    if ($209) {
     $210 = ((($$pre48) + (($i$02$i*176)|0)|0) + 172|0);
     $211 = HEAP32[$210>>2]|0;
     $212 = (($211) + 1)|0;
     HEAP32[$210>>2] = $212;
     $213 = (((($$pre48) + (($i$02$i*176)|0)|0) + ($204<<2)|0) + 4|0);
     $214 = HEAP32[$213>>2]|0;
     HEAP32[$194>>2] = $214;
     $ret$0$i$i = $i$02$i;
    } else {
     $ret$0$i$i = $patternFound$01$i;
    }
    $215 = (($i$02$i) + 1)|0;
    $216 = ($215|0)<($191|0);
    if ($216) {
     $i$02$i = $215;$patternFound$01$i = $ret$0$i$i;
    } else {
     break;
    }
   }
   $217 = ($ret$0$i$i|0)==(-1);
   if (!($217)) {
    $218 = (($this) + 548|0);
    HEAP32[$218>>2] = 1;
   }
  }
  $219 = (($this) + 548|0);
  $220 = HEAP32[$219>>2]|0;
  $221 = ($220|0)==(0);
  if ($221) {
   $ret$1 = $190;
  } else {
   $222 = $stdChar & 255;
   if ((($222|0) == 10) | (($222|0) == 13) | (($222|0) == 9) | (($222|0) == 32)) {
    HEAP32[$219>>2] = 0;
    $ret$1 = $190;
   } else {
    $ret$1 = $190;
   }
  }
 }
 $223 = (($this) + 524|0);
 ;HEAP32[$223+0>>2]=0|0;HEAP32[$223+4>>2]=0|0;HEAP32[$223+8>>2]=0|0;HEAP32[$223+12>>2]=0|0;
 $ret$2 = $ret$1;
 STACKTOP = sp;return ($ret$2|0);
}
function __ZN15UTF8VIQRCharset10startInputEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 FUNCTION_TABLE_vi[$3 & 255]($1);
 $4 = (($this) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vi[$7 & 255]($5);
 STACKTOP = sp;return;
}
function __ZN15UTF8VIQRCharset11startOutputEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 FUNCTION_TABLE_vi[$4 & 255]($1);
 $5 = (($this) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($7) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 FUNCTION_TABLE_vi[$9 & 255]($6);
 STACKTOP = sp;return;
}
function __ZN15UTF8VIQRCharset9nextInputER12ByteInStreamRjRi($this,$is,$stdChar,$bytesRead) {
 $this = $this|0;
 $is = $is|0;
 $stdChar = $stdChar|0;
 $bytesRead = $bytesRead|0;
 var $$0 = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ch = sp;
 $0 = HEAP32[$is>>2]|0;
 $1 = (($0) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iii[$2 & 63]($is,$ch)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $5 = HEAP8[$ch>>0]|0;
 $$off = (($5) + 64)<<24>>24;
 $6 = ($$off&255)<(62);
 $7 = (($this) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 if ($6) {
  $9 = HEAP32[$8>>2]|0;
  $10 = HEAP32[$9>>2]|0;
  FUNCTION_TABLE_vi[$10 & 255]($8);
  $11 = HEAP32[$7>>2]|0;
  $12 = (($11) + 552|0);
  HEAP32[$12>>2] = 1;
  $13 = (($this) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = HEAP32[$14>>2]|0;
  $16 = (($15) + 8|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = (FUNCTION_TABLE_iiiii[$17 & 31]($14,$is,$stdChar,$bytesRead)|0);
  $$0 = $18;
  STACKTOP = sp;return ($$0|0);
 } else {
  $19 = HEAP32[$8>>2]|0;
  $20 = (($19) + 8|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (FUNCTION_TABLE_iiiii[$21 & 31]($8,$is,$stdChar,$bytesRead)|0);
  $$0 = $22;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZN15UTF8VIQRCharset7putCharER13ByteOutStreamjRi($this,$os,$stdChar,$outLen) {
 $this = $this|0;
 $os = $os|0;
 $stdChar = $stdChar|0;
 $outLen = $outLen|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (FUNCTION_TABLE_iiiii[$4 & 31]($1,$os,$stdChar,$outLen)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN13CVnCharsetLibC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $0 = (($this) + 80|0);
 $1 = (($this) + 88|0);
 ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;
 dest=272+0|0; stop=dest+96|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 HEAP32[272>>2] = 1;
 HEAP32[((272 + 16|0))>>2] = 1;
 HEAP32[((272 + 32|0))>>2] = 1;
 HEAP32[((272 + 56|0))>>2] = 1;
 HEAP32[((272 + 80|0))>>2] = 1;
 HEAP32[((272 + 96|0))>>2] = 1;
 dest=376+0|0; stop=dest+96|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 HEAP32[376>>2] = 1;
 HEAP32[((376 + 16|0))>>2] = 1;
 HEAP32[((376 + 32|0))>>2] = 1;
 HEAP32[((376 + 56|0))>>2] = 1;
 HEAP32[((376 + 80|0))>>2] = 1;
 HEAP32[((376 + 96|0))>>2] = 1;
 $2 = (($this) + 76|0);
 HEAP32[$2>>2] = 0;
 $3 = (($this) + 100|0);
 dest=$this+0|0; stop=dest+72|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 HEAP32[$3>>2] = 1;
 $4 = (($this) + 96|0);
 HEAP32[$4>>2] = 0;
 $5 = (($this) + 104|0);
 HEAP32[$5>>2] = 0;
 $6 = (($this) + 108|0);
 HEAP32[$6>>2] = 0;
 $7 = (($this) + 112|0);
 HEAP32[$7>>2] = 0;
 $8 = (($this) + 116|0);
 HEAP32[$8>>2] = 1;
 __ZN11PatternList4initEPPci($0);
 __ZN11PatternList4initEPPci($1);
 STACKTOP = sp;return;
}
function __ZN13CVnCharsetLibD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 40|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = HEAP32[$1>>2]|0;
  $4 = (($3) + 24|0);
  $5 = HEAP32[$4>>2]|0;
  FUNCTION_TABLE_vi[$5 & 255]($1);
 }
 $6 = (($this) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  $9 = HEAP32[$7>>2]|0;
  $10 = (($9) + 24|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_vi[$11 & 255]($7);
 }
 $12 = (($this) + 52|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if (!($14)) {
  $15 = HEAP32[$13>>2]|0;
  $16 = (($15) + 24|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vi[$17 & 255]($13);
 }
 $18 = (($this) + 56|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0|0);
 if (!($20)) {
  $21 = HEAP32[$19>>2]|0;
  $22 = (($21) + 24|0);
  $23 = HEAP32[$22>>2]|0;
  FUNCTION_TABLE_vi[$23 & 255]($19);
 }
 $24 = (($this) + 60|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = ($25|0)==(0|0);
 if (!($26)) {
  $27 = HEAP32[$25>>2]|0;
  $28 = (($27) + 24|0);
  $29 = HEAP32[$28>>2]|0;
  FUNCTION_TABLE_vi[$29 & 255]($25);
 }
 $30 = (($this) + 64|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)==(0|0);
 if (!($32)) {
  $33 = HEAP32[$31>>2]|0;
  $34 = (($33) + 24|0);
  $35 = HEAP32[$34>>2]|0;
  FUNCTION_TABLE_vi[$35 & 255]($31);
 }
 $36 = (($this) + 68|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ($37|0)==(0|0);
 if (!($38)) {
  $39 = HEAP32[$37>>2]|0;
  $40 = (($39) + 24|0);
  $41 = HEAP32[$40>>2]|0;
  FUNCTION_TABLE_vi[$41 & 255]($37);
 }
 $42 = (($this) + 72|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = ($43|0)==(0|0);
 if (!($44)) {
  $45 = HEAP32[$43>>2]|0;
  $46 = (($45) + 24|0);
  $47 = HEAP32[$46>>2]|0;
  FUNCTION_TABLE_vi[$47 & 255]($43);
 }
 $48 = (($this) + 76|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = ($49|0)==(0|0);
 if (!($50)) {
  $51 = HEAP32[$49>>2]|0;
  $52 = (($51) + 24|0);
  $53 = HEAP32[$52>>2]|0;
  FUNCTION_TABLE_vi[$53 & 255]($49);
 }
 $54 = HEAP32[$this>>2]|0;
 $55 = ($54|0)==(0|0);
 if (!($55)) {
  $56 = HEAP32[$54>>2]|0;
  $57 = (($56) + 24|0);
  $58 = HEAP32[$57>>2]|0;
  FUNCTION_TABLE_vi[$58 & 255]($54);
 }
 $59 = (($this) + 4|0);
 $60 = HEAP32[$59>>2]|0;
 $61 = ($60|0)==(0|0);
 if (!($61)) {
  $92 = HEAP32[$60>>2]|0;
  $93 = (($92) + 24|0);
  $94 = HEAP32[$93>>2]|0;
  FUNCTION_TABLE_vi[$94 & 255]($60);
 }
 $95 = (($this) + 8|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = ($96|0)==(0|0);
 if (!($97)) {
  $98 = HEAP32[$96>>2]|0;
  $99 = (($98) + 24|0);
  $100 = HEAP32[$99>>2]|0;
  FUNCTION_TABLE_vi[$100 & 255]($96);
 }
 $101 = (($this) + 12|0);
 $102 = HEAP32[$101>>2]|0;
 $103 = ($102|0)==(0|0);
 if (!($103)) {
  $104 = HEAP32[$102>>2]|0;
  $105 = (($104) + 24|0);
  $106 = HEAP32[$105>>2]|0;
  FUNCTION_TABLE_vi[$106 & 255]($102);
 }
 $107 = (($this) + 16|0);
 $108 = HEAP32[$107>>2]|0;
 $109 = ($108|0)==(0|0);
 if (!($109)) {
  $110 = HEAP32[$108>>2]|0;
  $111 = (($110) + 24|0);
  $112 = HEAP32[$111>>2]|0;
  FUNCTION_TABLE_vi[$112 & 255]($108);
 }
 $113 = (($this) + 20|0);
 $114 = HEAP32[$113>>2]|0;
 $115 = ($114|0)==(0|0);
 if (!($115)) {
  $116 = HEAP32[$114>>2]|0;
  $117 = (($116) + 24|0);
  $118 = HEAP32[$117>>2]|0;
  FUNCTION_TABLE_vi[$118 & 255]($114);
 }
 $62 = (($this) + 24|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = ($63|0)==(0|0);
 if (!($64)) {
  $65 = HEAP32[$63>>2]|0;
  $66 = (($65) + 24|0);
  $67 = HEAP32[$66>>2]|0;
  FUNCTION_TABLE_vi[$67 & 255]($63);
 }
 $68 = (($this) + 28|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = ($69|0)==(0|0);
 if (!($70)) {
  $71 = HEAP32[$69>>2]|0;
  $72 = (($71) + 24|0);
  $73 = HEAP32[$72>>2]|0;
  FUNCTION_TABLE_vi[$73 & 255]($69);
 }
 $74 = (($this) + 32|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = ($75|0)==(0|0);
 if (!($76)) {
  $77 = HEAP32[$75>>2]|0;
  $78 = (($77) + 24|0);
  $79 = HEAP32[$78>>2]|0;
  FUNCTION_TABLE_vi[$79 & 255]($75);
 }
 $80 = (($this) + 36|0);
 $81 = HEAP32[$80>>2]|0;
 $82 = ($81|0)==(0|0);
 if (!($82)) {
  $83 = HEAP32[$81>>2]|0;
  $84 = (($83) + 24|0);
  $85 = HEAP32[$84>>2]|0;
  FUNCTION_TABLE_vi[$85 & 255]($81);
 }
 $86 = (($this) + 88|0);
 $87 = HEAP32[$86>>2]|0;
 $88 = ($87|0)==(0|0);
 if (!($88)) {
  _free($87);
 }
 $89 = (($this) + 80|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = ($90|0)==(0|0);
 if ($91) {
  STACKTOP = sp;return;
 }
 _free($90);
 STACKTOP = sp;return;
}
function __ZN13CVnCharsetLib12getVnCharsetEi($charsetIdx) {
 $charsetIdx = $charsetIdx|0;
 var $$0 = 0, $$pre = 0, $$pre$phi21Z2D = 0, $$pre$phiZ2D = 0, $$pre16 = 0, $$pre19 = 0, $$pre20 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $charsetIdx$off = 0, $exitcond$i = 0, $exitcond$i$i = 0;
 var $exitcond$i$i$i = 0, $exitcond$i$i11 = 0, $exitcond$i$i2 = 0, $exitcond$i$i4 = 0, $exitcond$i14 = 0, $exitcond$i6 = 0, $exitcond$i8 = 0, $i$01$i = 0, $i$01$i$i = 0, $i$01$i$i$i = 0, $i$01$i$i1 = 0, $i$01$i$i10 = 0, $i$01$i$i3 = 0, $i$01$i13 = 0, $i$01$i5 = 0, $i$01$i7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 do {
  switch ($charsetIdx|0) {
  case 6:  {
   $51 = HEAP32[((480 + 72|0))>>2]|0;
   $52 = ($51|0)==(0|0);
   if ($52) {
    $53 = (__Znwj(864)|0);
    HEAP32[$53>>2] = ((640 + 8|0));
    $54 = (($53) + 856|0);
    HEAP32[$54>>2] = 5512;
    $i$01$i$i3 = 0;
    while(1) {
     $55 = $i$01$i$i3 << 16;
     $56 = (5512 + ($i$01$i$i3<<1)|0);
     $57 = HEAP16[$56>>1]|0;
     $58 = $57&65535;
     $59 = $58 | $55;
     $60 = ((($53) + ($i$01$i$i3<<2)|0) + 4|0);
     HEAP32[$60>>2] = $59;
     $61 = (($i$01$i$i3) + 1)|0;
     $exitcond$i$i4 = ($61|0)==(213);
     if ($exitcond$i$i4) {
      break;
     } else {
      $i$01$i$i3 = $61;
     }
    }
    $62 = (($53) + 4|0);
    _qsort($62,213,4,32);
    HEAP32[$53>>2] = ((1352 + 8|0));
    HEAP32[((480 + 72|0))>>2] = $53;
    $163 = $53;
   } else {
    $163 = $51;
   }
   $$0 = $163;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 5:  {
   $63 = HEAP32[((480 + 68|0))>>2]|0;
   $64 = ($63|0)==(0|0);
   if ($64) {
    $65 = (__Znwj(2228)|0);
    __ZN16WinCP1258CharsetC2EPtS0_($65,4648,5080);
    HEAP32[((480 + 68|0))>>2] = $65;
    $164 = $65;
   } else {
    $164 = $63;
   }
   $$0 = $164;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 4:  {
   $12 = HEAP32[((480 + 44|0))>>2]|0;
   $13 = ($12|0)==(0|0);
   if ($13) {
    $14 = (__Znwj(3420)|0);
    __ZN18UnicodeCompCharsetC2EPtPj($14,5512,6800);
    HEAP32[((480 + 44|0))>>2] = $14;
    $159 = $14;
   } else {
    $159 = $12;
   }
   $$0 = $159;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 0:  {
   $0 = HEAP32[((480 + 40|0))>>2]|0;
   $1 = ($0|0)==(0|0);
   if ($1) {
    $2 = (__Znwj(860)|0);
    HEAP32[$2>>2] = ((640 + 8|0));
    $3 = (($2) + 856|0);
    HEAP32[$3>>2] = 5512;
    $i$01$i = 0;
    while(1) {
     $4 = $i$01$i << 16;
     $5 = (5512 + ($i$01$i<<1)|0);
     $6 = HEAP16[$5>>1]|0;
     $7 = $6&65535;
     $8 = $7 | $4;
     $9 = ((($2) + ($i$01$i<<2)|0) + 4|0);
     HEAP32[$9>>2] = $8;
     $10 = (($i$01$i) + 1)|0;
     $exitcond$i = ($10|0)==(213);
     if ($exitcond$i) {
      break;
     } else {
      $i$01$i = $10;
     }
    }
    $11 = (($2) + 4|0);
    _qsort($11,213,4,32);
    HEAP32[((480 + 40|0))>>2] = $2;
    $158 = $2;
   } else {
    $158 = $0;
   }
   $$0 = $158;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 11:  {
   $91 = HEAP32[((480 + 64|0))>>2]|0;
   $92 = ($91|0)==(0|0);
   if ($92) {
    $93 = HEAP32[((480 + 60|0))>>2]|0;
    $94 = ($93|0)==(0|0);
    if ($94) {
     $95 = (__Znwj(556)|0);
     HEAP32[$95>>2] = ((848 + 8|0));
     $96 = (($95) + 8|0);
     _memset(($96|0),0,512)|0;
     $97 = (($95) + 4|0);
     HEAP32[$97>>2] = 5944;
     $99 = 5944;$i$01$i7 = 0;
     while(1) {
      $98 = (($99) + ($i$01$i7<<2)|0);
      $100 = HEAP32[$98>>2]|0;
      $101 = ($100>>>0)>(255);
      if (!($101)) {
       $102 = (($i$01$i7) + 256)|0;
       $103 = $102&65535;
       $104 = ((($95) + ($100<<1)|0) + 8|0);
       HEAP16[$104>>1] = $103;
      }
      $105 = (($i$01$i7) + 1)|0;
      $exitcond$i8 = ($105|0)==(213);
      if ($exitcond$i8) {
       break;
      }
      $$pre16 = HEAP32[$97>>2]|0;
      $99 = $$pre16;$i$01$i7 = $105;
     }
     $106 = (($95) + 86|0);
     HEAP16[$106>>1] = 2;
     $107 = (($95) + 200|0);
     HEAP16[$107>>1] = 4;
     $108 = (($95) + 134|0);
     HEAP16[$108>>1] = 6;
     $109 = (($95) + 260|0);
     HEAP16[$109>>1] = 8;
     $110 = (($95) + 100|0);
     HEAP16[$110>>1] = 10;
     $111 = (($95) + 196|0);
     HEAP16[$111>>1] = 12;
     $112 = (($95) + 88|0);
     HEAP16[$112>>1] = 24;
     $113 = (($95) + 94|0);
     HEAP16[$113>>1] = 26;
     $114 = (($95) + 92|0);
     HEAP16[$114>>1] = 26;
     HEAP32[((480 + 60|0))>>2] = $95;
    }
    $115 = HEAP32[((480 + 48|0))>>2]|0;
    $116 = ($115|0)==(0|0);
    if ($116) {
     $117 = (__Znwj(860)|0);
     HEAP32[$117>>2] = ((640 + 8|0));
     $118 = (($117) + 856|0);
     HEAP32[$118>>2] = 5512;
     $i$01$i$i10 = 0;
     while(1) {
      $119 = $i$01$i$i10 << 16;
      $120 = (5512 + ($i$01$i$i10<<1)|0);
      $121 = HEAP16[$120>>1]|0;
      $122 = $121&65535;
      $123 = $122 | $119;
      $124 = ((($117) + ($i$01$i$i10<<2)|0) + 4|0);
      HEAP32[$124>>2] = $123;
      $125 = (($i$01$i$i10) + 1)|0;
      $exitcond$i$i11 = ($125|0)==(213);
      if ($exitcond$i$i11) {
       break;
      } else {
       $i$01$i$i10 = $125;
      }
     }
     $126 = (($117) + 4|0);
     _qsort($126,213,4,32);
     HEAP32[$117>>2] = ((1112 + 8|0));
     HEAP32[((480 + 48|0))>>2] = $117;
    }
    $127 = (__Znwj(12)|0);
    $128 = HEAP32[((480 + 48|0))>>2]|0;
    $129 = HEAP32[((480 + 60|0))>>2]|0;
    HEAP32[$127>>2] = ((888 + 8|0));
    $130 = (($127) + 8|0);
    HEAP32[$130>>2] = $128;
    $131 = (($127) + 4|0);
    HEAP32[$131>>2] = $129;
    HEAP32[((480 + 64|0))>>2] = $127;
    $167 = $127;
   } else {
    $167 = $91;
   }
   $$0 = $167;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 7:  {
   $88 = HEAP32[((480 + 76|0))>>2]|0;
   $89 = ($88|0)==(0|0);
   if ($89) {
    $90 = (__Znwj(4)|0);
    HEAP32[$90>>2] = ((992 + 8|0));
    HEAP32[((480 + 76|0))>>2] = $90;
    $166 = $90;
   } else {
    $166 = $88;
   }
   $$0 = $166;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 3:  {
   $39 = HEAP32[((480 + 56|0))>>2]|0;
   $40 = ($39|0)==(0|0);
   if ($40) {
    $41 = (__Znwj(860)|0);
    HEAP32[$41>>2] = ((640 + 8|0));
    $42 = (($41) + 856|0);
    HEAP32[$42>>2] = 5512;
    $i$01$i$i$i = 0;
    while(1) {
     $43 = $i$01$i$i$i << 16;
     $44 = (5512 + ($i$01$i$i$i<<1)|0);
     $45 = HEAP16[$44>>1]|0;
     $46 = $45&65535;
     $47 = $46 | $43;
     $48 = ((($41) + ($i$01$i$i$i<<2)|0) + 4|0);
     HEAP32[$48>>2] = $47;
     $49 = (($i$01$i$i$i) + 1)|0;
     $exitcond$i$i$i = ($49|0)==(213);
     if ($exitcond$i$i$i) {
      break;
     } else {
      $i$01$i$i$i = $49;
     }
    }
    $50 = (($41) + 4|0);
    _qsort($50,213,4,32);
    HEAP32[$41>>2] = ((1272 + 8|0));
    HEAP32[((480 + 56|0))>>2] = $41;
    $162 = $41;
   } else {
    $162 = $39;
   }
   $$0 = $162;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 10:  {
   $66 = HEAP32[((480 + 60|0))>>2]|0;
   $67 = ($66|0)==(0|0);
   if ($67) {
    $68 = (__Znwj(556)|0);
    HEAP32[$68>>2] = ((848 + 8|0));
    $69 = (($68) + 8|0);
    _memset(($69|0),0,512)|0;
    $70 = (($68) + 4|0);
    HEAP32[$70>>2] = 5944;
    $72 = 5944;$i$01$i5 = 0;
    while(1) {
     $71 = (($72) + ($i$01$i5<<2)|0);
     $73 = HEAP32[$71>>2]|0;
     $74 = ($73>>>0)>(255);
     if (!($74)) {
      $75 = (($i$01$i5) + 256)|0;
      $76 = $75&65535;
      $77 = ((($68) + ($73<<1)|0) + 8|0);
      HEAP16[$77>>1] = $76;
     }
     $78 = (($i$01$i5) + 1)|0;
     $exitcond$i6 = ($78|0)==(213);
     if ($exitcond$i6) {
      break;
     }
     $$pre = HEAP32[$70>>2]|0;
     $72 = $$pre;$i$01$i5 = $78;
    }
    $79 = (($68) + 86|0);
    HEAP16[$79>>1] = 2;
    $80 = (($68) + 200|0);
    HEAP16[$80>>1] = 4;
    $81 = (($68) + 134|0);
    HEAP16[$81>>1] = 6;
    $82 = (($68) + 260|0);
    HEAP16[$82>>1] = 8;
    $83 = (($68) + 100|0);
    HEAP16[$83>>1] = 10;
    $84 = (($68) + 196|0);
    HEAP16[$84>>1] = 12;
    $85 = (($68) + 88|0);
    HEAP16[$85>>1] = 24;
    $86 = (($68) + 94|0);
    HEAP16[$86>>1] = 26;
    $87 = (($68) + 92|0);
    HEAP16[$87>>1] = 26;
    HEAP32[((480 + 60|0))>>2] = $68;
    $165 = $68;
   } else {
    $165 = $66;
   }
   $$0 = $165;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 12: case 1:  {
   $15 = HEAP32[((480 + 48|0))>>2]|0;
   $16 = ($15|0)==(0|0);
   if ($16) {
    $17 = (__Znwj(860)|0);
    HEAP32[$17>>2] = ((640 + 8|0));
    $18 = (($17) + 856|0);
    HEAP32[$18>>2] = 5512;
    $i$01$i$i = 0;
    while(1) {
     $19 = $i$01$i$i << 16;
     $20 = (5512 + ($i$01$i$i<<1)|0);
     $21 = HEAP16[$20>>1]|0;
     $22 = $21&65535;
     $23 = $22 | $19;
     $24 = ((($17) + ($i$01$i$i<<2)|0) + 4|0);
     HEAP32[$24>>2] = $23;
     $25 = (($i$01$i$i) + 1)|0;
     $exitcond$i$i = ($25|0)==(213);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$01$i$i = $25;
     }
    }
    $26 = (($17) + 4|0);
    _qsort($26,213,4,32);
    HEAP32[$17>>2] = ((1112 + 8|0));
    HEAP32[((480 + 48|0))>>2] = $17;
    $160 = $17;
   } else {
    $160 = $15;
   }
   $$0 = $160;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 2:  {
   $27 = HEAP32[((480 + 52|0))>>2]|0;
   $28 = ($27|0)==(0|0);
   if ($28) {
    $29 = (__Znwj(860)|0);
    HEAP32[$29>>2] = ((640 + 8|0));
    $30 = (($29) + 856|0);
    HEAP32[$30>>2] = 5512;
    $i$01$i$i1 = 0;
    while(1) {
     $31 = $i$01$i$i1 << 16;
     $32 = (5512 + ($i$01$i$i1<<1)|0);
     $33 = HEAP16[$32>>1]|0;
     $34 = $33&65535;
     $35 = $34 | $31;
     $36 = ((($29) + ($i$01$i$i1<<2)|0) + 4|0);
     HEAP32[$36>>2] = $35;
     $37 = (($i$01$i$i1) + 1)|0;
     $exitcond$i$i2 = ($37|0)==(213);
     if ($exitcond$i$i2) {
      break;
     } else {
      $i$01$i$i1 = $37;
     }
    }
    $38 = (($29) + 4|0);
    _qsort($38,213,4,32);
    HEAP32[$29>>2] = ((1192 + 8|0));
    HEAP32[((480 + 52|0))>>2] = $29;
    $161 = $29;
   } else {
    $161 = $27;
   }
   $$0 = $161;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  default: {
   $charsetIdx$off = (($charsetIdx) + -20)|0;
   $132 = ($charsetIdx$off>>>0)<(6);
   if (!($132)) {
    $150 = $charsetIdx & -4;
    $151 = ($150|0)==(40);
    if (!($151)) {
     $$0 = 0;
     STACKTOP = sp;return ($$0|0);
    }
    $152 = (($charsetIdx) + -40)|0;
    $153 = ((480 + ($152<<2)|0) + 24|0);
    $154 = HEAP32[$153>>2]|0;
    $155 = ($154|0)==(0|0);
    if ($155) {
     $156 = (__Znwj(1372)|0);
     $157 = (2944 + (($152*426)|0)|0);
     __ZN17DoubleByteCharsetC2EPt($156,$157);
     HEAP32[$153>>2] = $156;
     $169 = $156;
    } else {
     $169 = $154;
    }
    $$0 = $169;
    STACKTOP = sp;return ($$0|0);
   }
   $133 = (480 + ($charsetIdx$off<<2)|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = ($134|0)==(0|0);
   if ($135) {
    $136 = (__Znwj(520)|0);
    $137 = (1664 + (($charsetIdx$off*213)|0)|0);
    HEAP32[$136>>2] = ((600 + 8|0));
    $138 = (($136) + 516|0);
    HEAP32[$138>>2] = $137;
    $139 = (($136) + 4|0);
    _memset(($139|0),0,512)|0;
    $i$01$i13 = 0;
    while(1) {
     $140 = ((1664 + (($charsetIdx$off*213)|0)|0) + ($i$01$i13)|0);
     $141 = HEAP8[$140>>0]|0;
     $142 = ($141<<24>>24)==(0);
     do {
      if ($142) {
       $$pre19 = (($i$01$i13) + 1)|0;
       $$pre$phiZ2D = $$pre19;
      } else {
       $143 = ($i$01$i13|0)==(212);
       $$pre20 = (($i$01$i13) + 1)|0;
       if ($143) {
        $$pre$phi21Z2D = $$pre20;
       } else {
        $144 = ((1664 + (($charsetIdx$off*213)|0)|0) + ($$pre20)|0);
        $145 = HEAP8[$144>>0]|0;
        $146 = ($141<<24>>24)==($145<<24>>24);
        if ($146) {
         $$pre$phiZ2D = $$pre20;
         break;
        } else {
         $$pre$phi21Z2D = $$pre20;
        }
       }
       $147 = $$pre$phi21Z2D&65535;
       $148 = $141&255;
       $149 = ((($136) + ($148<<1)|0) + 4|0);
       HEAP16[$149>>1] = $147;
       $$pre$phiZ2D = $$pre$phi21Z2D;
      }
     } while(0);
     $exitcond$i14 = ($$pre$phiZ2D|0)==(213);
     if ($exitcond$i14) {
      break;
     } else {
      $i$01$i13 = $$pre$phiZ2D;
     }
    }
    HEAP32[$133>>2] = $136;
    $168 = $136;
   } else {
    $168 = $134;
   }
   $$0 = $168;
   STACKTOP = sp;return ($$0|0);
  }
  }
 } while(0);
 return (0)|0;
}
function __ZN16WinCP1258CharsetC2EPtS0_($this,$compositeChars,$precomposedChars) {
 $this = $this|0;
 $compositeChars = $compositeChars|0;
 $precomposedChars = $precomposedChars|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond4 = 0, $i$03 = 0, $i$12 = 0, $i$2 = 0, $k$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((928 + 8|0));
 $0 = (($this) + 2220|0);
 HEAP32[$0>>2] = $compositeChars;
 $1 = (($this) + 4|0);
 _memset(($1|0),0,512)|0;
 $i$03 = 0;
 while(1) {
  $2 = (($compositeChars) + ($i$03<<1)|0);
  $3 = HEAP16[$2>>1]|0;
  $4 = $3&65535;
  $5 = $4 >>> 8;
  $6 = ($5|0)==(0);
  if ($6) {
   $8 = ((($this) + ($4<<1)|0) + 4|0);
   $9 = HEAP16[$8>>1]|0;
   $10 = ($9<<16>>16)==(0);
   if ($10) {
    $11 = (($i$03) + 1)|0;
    $12 = $11&65535;
    HEAP16[$8>>1] = $12;
   }
  } else {
   $7 = ((($this) + ($5<<1)|0) + 4|0);
   HEAP16[$7>>1] = -1;
  }
  $13 = $i$03 << 16;
  $14 = HEAP16[$2>>1]|0;
  $15 = $14&65535;
  $16 = $15 | $13;
  $17 = ((($this) + ($i$03<<2)|0) + 516|0);
  HEAP32[$17>>2] = $16;
  $18 = (($i$03) + 1)|0;
  $exitcond4 = ($18|0)==(213);
  if ($exitcond4) {
   break;
  } else {
   $i$03 = $18;
  }
 }
 $19 = (($this) + 2224|0);
 HEAP32[$19>>2] = 213;
 $45 = 213;$i$12 = 213;$k$01 = 0;
 while(1) {
  $20 = (($precomposedChars) + ($k$01<<1)|0);
  $21 = HEAP16[$20>>1]|0;
  $22 = $21&65535;
  $23 = (($compositeChars) + ($k$01<<1)|0);
  $24 = HEAP16[$23>>1]|0;
  $25 = ($21<<16>>16)==($24<<16>>16);
  if ($25) {
   $44 = $45;$i$2 = $i$12;
  } else {
   $26 = $22 >>> 8;
   $27 = ($26|0)==(0);
   if ($27) {
    $29 = ((($this) + ($22<<1)|0) + 4|0);
    $30 = HEAP16[$29>>1]|0;
    $31 = ($30<<16>>16)==(0);
    if ($31) {
     $32 = (($k$01) + 1)|0;
     $33 = $32&65535;
     HEAP16[$29>>1] = $33;
    }
   } else {
    $28 = ((($this) + ($26<<1)|0) + 4|0);
    HEAP16[$28>>1] = -1;
   }
   $34 = $k$01 << 16;
   $35 = HEAP16[$20>>1]|0;
   $36 = $35&65535;
   $37 = $36 | $34;
   $38 = ((($this) + ($i$12<<2)|0) + 516|0);
   HEAP32[$38>>2] = $37;
   $39 = HEAP32[$19>>2]|0;
   $40 = (($39) + 1)|0;
   HEAP32[$19>>2] = $40;
   $41 = (($i$12) + 1)|0;
   $44 = $40;$i$2 = $41;
  }
  $42 = (($k$01) + 1)|0;
  $exitcond = ($42|0)==(213);
  if ($exitcond) {
   break;
  } else {
   $45 = $44;$i$12 = $i$2;$k$01 = $42;
  }
 }
 $43 = (($this) + 516|0);
 _qsort($43,$44,4,32);
 STACKTOP = sp;return;
}
function __ZN16WinCP1258Charset9nextInputER12ByteInStreamRjRi($this,$is,$stdChar,$bytesRead) {
 $this = $this|0;
 $is = $is|0;
 $stdChar = $stdChar|0;
 $bytesRead = $bytesRead|0;
 var $$$i = 0, $$0 = 0, $$01$$i = 0, $$014$i = 0, $$023$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ch = 0, $hi = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ch = sp + 1|0;
 $hi = sp;
 HEAP32[$bytesRead>>2] = 0;
 $0 = HEAP32[$is>>2]|0;
 $1 = (($0) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_iii[$2 & 63]($is,$ch)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$bytesRead>>2] = 1;
 $5 = HEAP8[$ch>>0]|0;
 $6 = $5&255;
 $7 = ((($this) + ($6<<1)|0) + 4|0);
 $8 = HEAP16[$7>>1]|0;
 $9 = $8&65535;
 HEAP32[$stdChar>>2] = $9;
 if ((($8<<16>>16) == 0)) {
  HEAP32[$stdChar>>2] = $6;
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 } else if ((($8<<16>>16) == -1)) {
  HEAP32[$stdChar>>2] = -1;
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 } else {
  $10 = (($9) + 65535)|0;
  HEAP32[$stdChar>>2] = $10;
  $11 = HEAP32[$is>>2]|0;
  $12 = (($11) + 12|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_iii[$13 & 63]($is,$hi)|0);
  $15 = ($14|0)==(0);
  if ($15) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  $16 = HEAP8[$hi>>0]|0;
  $17 = ($16<<24>>24)==(0);
  if ($17) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  $18 = (($this) + 2224|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ($19|0)==(0);
  if ($20) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  $21 = $16&255;
  $22 = HEAP8[$ch>>0]|0;
  $23 = (($this) + 516|0);
  $24 = $21 << 8;
  $25 = $22&255;
  $26 = $25 | $24;
  $$014$i = $23;$$023$i = $19;
  while(1) {
   $27 = $$023$i >>> 1;
   $28 = $27 << 2;
   $29 = (($$014$i) + ($28)|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = $30 & 65535;
   $32 = ($26|0)==($31|0);
   if ($32) {
    label = 12;
    break;
   }
   $33 = ($$023$i|0)==(1);
   if ($33) {
    $$0 = 1;
    label = 14;
    break;
   }
   $not$ = ($26>>>0)<=($31>>>0);
   $34 = (($$023$i) - ($27))|0;
   $$$i = $not$ ? $27 : $34;
   $$01$$i = $not$ ? $$014$i : $29;
   $35 = ($$$i|0)==(0);
   if ($35) {
    $$0 = 1;
    label = 14;
    break;
   } else {
    $$014$i = $$01$$i;$$023$i = $$$i;
   }
  }
  if ((label|0) == 12) {
   $36 = ($29|0)==(0|0);
   if ($36) {
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
   $37 = $30 >>> 16;
   $38 = $37 | 65536;
   HEAP32[$stdChar>>2] = $38;
   HEAP32[$bytesRead>>2] = 2;
   $39 = HEAP32[$is>>2]|0;
   $40 = (($39) + 8|0);
   $41 = HEAP32[$40>>2]|0;
   (FUNCTION_TABLE_iii[$41 & 63]($is,$hi)|0);
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  else if ((label|0) == 14) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 return (0)|0;
}
function __ZN16WinCP1258Charset7putCharER13ByteOutStreamjRi($this,$os,$stdChar,$outLen) {
 $this = $this|0;
 $os = $os|0;
 $stdChar = $stdChar|0;
 $outLen = $outLen|0;
 var $$ = 0, $$mask = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $ret$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($stdChar>>>0)>(65535);
 if ($0) {
  $1 = (($stdChar) + -65536)|0;
  $2 = (($this) + 2220|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = (($3) + ($1<<1)|0);
  $5 = HEAP16[$4>>1]|0;
  $6 = ($5&65535)<(256);
  if ($6) {
   $17 = $5&255;
   $$mask = $5 & 255;
   $18 = $$mask&65535;
   $19 = ((($this) + ($18<<1)|0) + 4|0);
   $20 = HEAP16[$19>>1]|0;
   $21 = ($20<<16>>16)==(-1);
   $$ = $21 ? 35 : $17;
   HEAP32[$outLen>>2] = 1;
   $22 = HEAP32[$os>>2]|0;
   $23 = (($22) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (FUNCTION_TABLE_iii[$24 & 63]($os,$$)|0);
   $ret$0 = $25;
   STACKTOP = sp;return ($ret$0|0);
  } else {
   HEAP32[$outLen>>2] = 2;
   $7 = HEAP32[$os>>2]|0;
   $8 = (($7) + 8|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $5&255;
   (FUNCTION_TABLE_iii[$9 & 63]($os,$10)|0);
   $11 = HEAP32[$os>>2]|0;
   $12 = (($11) + 8|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ($5&65535) >>> 8;
   $15 = $14&255;
   $16 = (FUNCTION_TABLE_iii[$13 & 63]($os,$15)|0);
   $ret$0 = $16;
   STACKTOP = sp;return ($ret$0|0);
  }
 }
 $26 = ($stdChar>>>0)>(255);
 if (!($26)) {
  $27 = ((($this) + ($stdChar<<1)|0) + 4|0);
  $28 = HEAP16[$27>>1]|0;
  $29 = ($28<<16>>16)==(0);
  if ($29) {
   HEAP32[$outLen>>2] = 1;
   $34 = HEAP32[$os>>2]|0;
   $35 = (($34) + 8|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = $stdChar&255;
   $38 = (FUNCTION_TABLE_iii[$36 & 63]($os,$37)|0);
   $ret$0 = $38;
   STACKTOP = sp;return ($ret$0|0);
  }
 }
 HEAP32[$outLen>>2] = 1;
 $30 = HEAP32[$os>>2]|0;
 $31 = (($30) + 8|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = (FUNCTION_TABLE_iii[$32 & 63]($os,35)|0);
 $ret$0 = $33;
 STACKTOP = sp;return ($ret$0|0);
}
function __ZN9VnCharset10startInputEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZN9VnCharset11startOutputEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZN9VnCharsetD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZN17SingleByteCharsetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN14UnicodeCharsetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN18UnicodeCompCharsetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN17DoubleByteCharsetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN11VIQRCharsetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN15UTF8VIQRCharsetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN16WinCP1258CharsetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN17VnInternalCharsetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN18UnicodeUTF8CharsetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN17UnicodeRefCharsetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN17UnicodeHexCharsetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN21UnicodeCStringCharsetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __GLOBAL__I_a() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN13CVnCharsetLibC2Ev(480);
 (___cxa_atexit((135|0),(480|0),(___dso_handle|0))|0);
 STACKTOP = sp;return;
}
function _VnConvert($outCharset,$input,$output,$pInLen,$pMaxOutLen) {
 $outCharset = $outCharset|0;
 $input = $input|0;
 $output = $output|0;
 $pInLen = $pInLen|0;
 $pMaxOutLen = $pMaxOutLen|0;
 var $$0$i$i = 0, $$0$i2$i = 0, $$0$i4$i = 0, $$lcssa$i = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $bytesRead$i = 0, $bytesWritten$i = 0, $ch$off$i$i = 0, $ch$off$i1$i = 0, $ch$off$i3$i = 0, $is = 0, $not$or$cond$i$i = 0, $notlhs$i$i = 0;
 var $notrhs$i$i = 0, $or$cond$i$i = 0, $or$cond3 = 0, $os = 0, $stdChar$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $stdChar$i = sp + 80|0;
 $bytesRead$i = sp + 76|0;
 $bytesWritten$i = sp + 72|0;
 $is = sp + 24|0;
 $os = sp;
 $0 = HEAP32[$pInLen>>2]|0;
 $1 = HEAP32[$pMaxOutLen>>2]|0;
 $2 = ($0|0)<(-1);
 if ($2) {
  STACKTOP = sp;return;
 }
 $3 = HEAP32[((480 + 76|0))>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $5 = (_malloc(4)|0);
  $6 = ($5|0)==(0|0);
  L6: do {
   if ($6) {
    while(1) {
     $7 = HEAP32[51536>>2]|0;HEAP32[51536>>2] = (($7+0)|0);
     $8 = ($7|0)==(0);
     if ($8) {
      break;
     }
     $9 = $7;
     FUNCTION_TABLE_v[$9 & 15]();
     $10 = (_malloc(4)|0);
     $11 = ($10|0)==(0|0);
     if (!($11)) {
      $$lcssa$i = $10;
      break L6;
     }
    }
    $12 = (___cxa_allocate_exception(4)|0);
    HEAP32[$12>>2] = ((51368 + 8|0));
    ___cxa_throw(($12|0),(51424|0),(117|0));
    // unreachable;
   } else {
    $$lcssa$i = $5;
   }
  } while(0);
  HEAP32[$$lcssa$i>>2] = ((992 + 8|0));
  HEAP32[((480 + 76|0))>>2] = $$lcssa$i;
  $15 = $$lcssa$i;
 } else {
  $15 = $3;
 }
 $13 = (__ZN13CVnCharsetLib12getVnCharsetEi($outCharset)|0);
 $14 = ($15|0)!=(0|0);
 $16 = ($13|0)!=(0|0);
 $or$cond3 = $14 & $16;
 if (!($or$cond3)) {
  STACKTOP = sp;return;
 }
 $17 = HEAP32[$15>>2]|0;
 $18 = (($17) + 16|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (FUNCTION_TABLE_ii[$19 & 127]($15)|0);
 HEAP32[$is>>2] = ((8 + 8|0));
 $21 = (($is) + 12|0);
 HEAP32[$21>>2] = $input;
 $22 = (($is) + 8|0);
 HEAP32[$22>>2] = $input;
 $23 = (($is) + 20|0);
 HEAP32[$23>>2] = $0;
 $24 = (($is) + 16|0);
 HEAP32[$24>>2] = $0;
 $25 = ($0|0)==(-1);
 do {
  if ($25) {
   if ((($20|0) == 4)) {
    $30 = HEAP32[$input>>2]|0;
    $31 = ($30|0)==(4);
    $32 = $31&1;
    $33 = (($is) + 4|0);
    HEAP32[$33>>2] = $32;
    break;
   } else if ((($20|0) == 2)) {
    $26 = HEAP16[$input>>1]|0;
    $27 = ($26<<16>>16)==(0);
    $28 = $27&1;
    $29 = (($is) + 4|0);
    HEAP32[$29>>2] = $28;
    break;
   } else {
    $34 = HEAP8[$input>>0]|0;
    $35 = ($34<<24>>24)==(0);
    $36 = $35&1;
    $37 = (($is) + 4|0);
    HEAP32[$37>>2] = $36;
    break;
   }
  } else {
   $38 = ($0|0)<(1);
   $39 = $38&1;
   $40 = (($is) + 4|0);
   HEAP32[$40>>2] = $39;
  }
 } while(0);
 $41 = (($is) + 44|0);
 HEAP32[$41>>2] = 0;
 HEAP32[$os>>2] = ((64 + 8|0));
 $42 = (($os) + 4|0);
 HEAP32[$42>>2] = $output;
 $43 = (($os) + 8|0);
 HEAP32[$43>>2] = $output;
 $44 = (($os) + 16|0);
 HEAP32[$44>>2] = $1;
 $45 = (($os) + 12|0);
 HEAP32[$45>>2] = 0;
 $46 = (($os) + 20|0);
 HEAP32[$46>>2] = 0;
 $47 = HEAP32[$15>>2]|0;
 $48 = HEAP32[$47>>2]|0;
 FUNCTION_TABLE_vi[$48 & 255]($15);
 $49 = HEAP32[$13>>2]|0;
 $50 = (($49) + 4|0);
 $51 = HEAP32[$50>>2]|0;
 FUNCTION_TABLE_vi[$51 & 255]($13);
 $53 = ((8 + 8|0));
 while(1) {
  $52 = (($53) + 40|0);
  $54 = HEAP32[$52>>2]|0;
  $55 = (FUNCTION_TABLE_ii[$54 & 127]($is)|0);
  $56 = ($55|0)==(0);
  if (!($56)) {
   break;
  }
  HEAP32[$stdChar$i>>2] = 0;
  $57 = HEAP32[$15>>2]|0;
  $58 = (($57) + 8|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = (FUNCTION_TABLE_iiiii[$59 & 31]($15,$is,$stdChar$i,$bytesRead$i)|0);
  $61 = ($60|0)==(0);
  if ($61) {
   break;
  }
  $62 = HEAP32[$stdChar$i>>2]|0;
  $63 = ($62|0)==(-1);
  if (!($63)) {
   $64 = HEAP32[((480 + 108|0))>>2]|0;
   $65 = ($64|0)==(0);
   if ($65) {
    $70 = HEAP32[((480 + 104|0))>>2]|0;
    $71 = ($70|0)==(0);
    if ($71) {
     $76 = $62;
    } else {
     $ch$off$i1$i = (($62) + -65536)|0;
     $72 = $62 & 1;
     $notlhs$i$i = ($ch$off$i1$i>>>0)<(186);
     $notrhs$i$i = ($72|0)!=(0);
     $not$or$cond$i$i = $notrhs$i$i & $notlhs$i$i;
     $73 = $not$or$cond$i$i << 31 >> 31;
     $$0$i2$i = (($73) + ($62))|0;
     HEAP32[$stdChar$i>>2] = $$0$i2$i;
     $76 = $$0$i2$i;
    }
   } else {
    $ch$off$i$i = (($62) + -65536)|0;
    $66 = ($ch$off$i$i>>>0)<(186);
    $67 = $62 & 1;
    $68 = ($67|0)==(0);
    $or$cond$i$i = $66 & $68;
    $69 = $or$cond$i$i&1;
    $$0$i$i = (($69) + ($62))|0;
    HEAP32[$stdChar$i>>2] = $$0$i$i;
    $76 = $$0$i$i;
   }
   $74 = HEAP32[((480 + 112|0))>>2]|0;
   $75 = ($74|0)==(0);
   if ($75) {
    $84 = $76;
   } else {
    $ch$off$i3$i = (($76) + -65536)|0;
    $77 = ($ch$off$i3$i>>>0)<(213);
    if ($77) {
     $78 = (7656 + ($ch$off$i3$i<<2)|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = (($79) + 65536)|0;
     $$0$i4$i = $80;
    } else {
     $$0$i4$i = $76;
    }
    HEAP32[$stdChar$i>>2] = $$0$i4$i;
    $84 = $$0$i4$i;
   }
   $81 = HEAP32[$13>>2]|0;
   $82 = (($81) + 12|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_iiiii[$83 & 31]($13,$os,$84,$bytesWritten$i)|0);
  }
  $$pre = HEAP32[$is>>2]|0;
  $53 = $$pre;
 }
 $85 = HEAP32[$45>>2]|0;
 HEAP32[$pMaxOutLen>>2] = $85;
 $86 = HEAP32[$23>>2]|0;
 HEAP32[$pInLen>>2] = $86;
 STACKTOP = sp;return;
}
function __Z25SetupInputClassifierTablev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $c$018 = 0, $c$117 = 0, $exitcond = 0, $exitcond21 = 0, $exitcond22 = 0, $i$010 = 0, $i$18 = 0, $i$35 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $c$018 = 0;
 while(1) {
  $0 = (9608 + ($c$018<<2)|0);
  HEAP32[$0>>2] = 3;
  $1 = (($c$018) + 1)|0;
  $exitcond22 = ($1|0)==(33);
  if ($exitcond22) {
   $c$117 = 33;
   break;
  } else {
   $c$018 = $1;
  }
 }
 while(1) {
  $2 = (9608 + ($c$117<<2)|0);
  HEAP32[$2>>2] = 2;
  $3 = (($c$117) + 1)|0;
  $exitcond21 = ($3|0)==(256);
  if ($exitcond21) {
   break;
  } else {
   $c$117 = $3;
  }
 }
 dest=((9608 + 388|0))+0|0; stop=dest+104|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 dest=((9608 + 260|0))+0|0; stop=dest+104|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $5 = 192;$i$010 = 0;
 while(1) {
  $4 = (9608 + ($5<<2)|0);
  HEAP32[$4>>2] = 0;
  $6 = (($i$010) + 1)|0;
  $7 = (10632 + ($6<<3)|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6|0)==(32);
  if ($9) {
   break;
  } else {
   $5 = $8;$i$010 = $6;
  }
 }
 HEAP32[((9608 + 424|0))>>2] = 2;
 HEAP32[((9608 + 296|0))>>2] = 2;
 HEAP32[((9608 + 408|0))>>2] = 2;
 HEAP32[((9608 + 280|0))>>2] = 2;
 HEAP32[((9608 + 476|0))>>2] = 2;
 HEAP32[((9608 + 348|0))>>2] = 2;
 $i$18 = 0;
 while(1) {
  $10 = (9368 + ($i$18)|0);
  $11 = HEAP8[$10>>0]|0;
  $12 = $11&255;
  $13 = (9608 + ($12<<2)|0);
  HEAP32[$13>>2] = 1;
  $14 = (($i$18) + 1)|0;
  $exitcond = ($14|0)==(30);
  if ($exitcond) {
   break;
  } else {
   $i$18 = $14;
  }
 }
 _memset((10896|0),-1,1024)|0;
 $18 = 192;$i$35 = 0;
 while(1) {
  $15 = ((10632 + ($i$35<<3)|0) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = (10896 + ($18<<2)|0);
  HEAP32[$17>>2] = $16;
  $19 = (($i$35) + 1)|0;
  $20 = (10632 + ($19<<3)|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = ($19|0)==(32);
  if ($22) {
   break;
  } else {
   $18 = $21;$i$35 = $19;
  }
 }
 dest=((10896 + 388|0))+0|0; src=9504+0|0; stop=dest+104|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 dest=((10896 + 260|0))+0|0; src=9400+0|0; stop=dest+104|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 STACKTOP = sp;return;
}
function __ZN16UkInputProcessor5setIME13UkInputMethod($this,$im) {
 $this = $this|0;
 $im = $im|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = $im;
 switch ($im|0) {
 case 6:  {
  __ZN16UkInputProcessor10useBuiltInEP12UkKeyMapping($this,12152);
  break;
 }
 case 0:  {
  __ZN16UkInputProcessor10useBuiltInEP12UkKeyMapping($this,11928);
  break;
 }
 case 3:  {
  __ZN16UkInputProcessor10useBuiltInEP12UkKeyMapping($this,12440);
  break;
 }
 case 1:  {
  __ZN16UkInputProcessor10useBuiltInEP12UkKeyMapping($this,12248);
  break;
 }
 case 2:  {
  __ZN16UkInputProcessor10useBuiltInEP12UkKeyMapping($this,12336);
  break;
 }
 case 5:  {
  __ZN16UkInputProcessor10useBuiltInEP12UkKeyMapping($this,12056);
  break;
 }
 default: {
  HEAP32[$this>>2] = 0;
  __ZN16UkInputProcessor10useBuiltInEP12UkKeyMapping($this,11928);
 }
 }
 STACKTOP = sp;return;
}
function __ZN16UkInputProcessor10useBuiltInEP12UkKeyMapping($this,$map) {
 $this = $this|0;
 $map = $map|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $c$01$i = 0, $exitcond$i = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $c$01$i = 0;
 while(1) {
  $0 = ((($this) + ($c$01$i<<2)|0) + 4|0);
  HEAP32[$0>>2] = 19;
  $1 = (($c$01$i) + 1)|0;
  $exitcond$i = ($1|0)==(256);
  if ($exitcond$i) {
   break;
  } else {
   $c$01$i = $1;
  }
 }
 $2 = HEAP8[$map>>0]|0;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  STACKTOP = sp;return;
 } else {
  $7 = $2;$i$01 = 0;
 }
 while(1) {
  $4 = ((($map) + ($i$01<<3)|0) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = $7&255;
  $8 = ((($this) + ($6<<2)|0) + 4|0);
  HEAP32[$8>>2] = $5;
  $9 = HEAP32[$4>>2]|0;
  $10 = ($9|0)<(20);
  do {
   if ($10) {
    $11 = (($6) + -97)|0;
    $12 = ($11>>>0)<(26);
    if ($12) {
     $13 = $6 & 95;
     $14 = ((($this) + ($13<<2)|0) + 4|0);
     HEAP32[$14>>2] = $9;
     break;
    }
    $15 = (($6) + -65)|0;
    $16 = ($15>>>0)<(26);
    if ($16) {
     $17 = $6 | 32;
     $18 = ((($this) + ($17<<2)|0) + 4|0);
     HEAP32[$18>>2] = $9;
    }
   }
  } while(0);
  $19 = (($i$01) + 1)|0;
  $20 = (($map) + ($19<<3)|0);
  $21 = HEAP8[$20>>0]|0;
  $22 = ($21<<24>>24)==(0);
  if ($22) {
   break;
  } else {
   $7 = $21;$i$01 = $19;
  }
 }
 STACKTOP = sp;return;
}
function __ZN11CMacroTable6lookupEPj($this,$key) {
 $this = $this|0;
 $key = $key|0;
 var $$$i = 0, $$$i2 = 0, $$0 = 0, $$0$i34 = 0, $$01$$i = 0, $$014$i = 0, $$023$i = 0, $$off$i = 0, $$off6$i = 0, $$pr$i = 0, $$sum5 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$012$i = 0, $i$09$i = 0, $not$$i = 0, $or$cond2$i = 0, $or$cond5$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8192|0);
 HEAP32[12640>>2] = $0;
 $1 = (($this) + 139264|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $4 = HEAP32[$key>>2]|0;
 $5 = ($4|0)==(0);
 $$014$i = $this;$$023$i = $2;
 while(1) {
  $6 = $$023$i >>> 1;
  $7 = $6 << 3;
  $8 = (($$014$i) + ($7)|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($this) + ($9)|0) + 8192|0);
  L6: do {
   if ($5) {
    $i$09$i = 0;
    label = 9;
   } else {
    $18 = $4;$30 = $key;$i$012$i = 0;
    while(1) {
     $15 = (($10) + ($i$012$i<<2)|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = ($16|0)==(0);
     if ($17) {
      break;
     }
     $$off$i = (($18) + -65536)|0;
     $19 = ($$off$i>>>0)<(186);
     $20 = $18 & 1;
     $21 = ($20|0)==(0);
     $or$cond2$i = $19 & $21;
     $22 = $or$cond2$i&1;
     $$$i2 = (($22) + ($18))|0;
     $$off6$i = (($16) + -65536)|0;
     $23 = ($$off6$i>>>0)<(186);
     $24 = $16 & 1;
     $25 = ($24|0)==(0);
     $or$cond5$i = $23 & $25;
     $26 = $or$cond5$i&1;
     $27 = (($26) + ($16))|0;
     $28 = ($$$i2>>>0)>($27>>>0);
     if ($28) {
      $$0$i34 = 1;
      break L6;
     }
     $29 = ($$$i2>>>0)<($27>>>0);
     $12 = (($i$012$i) + 1)|0;
     if ($29) {
      $$0$i34 = -1;
      break L6;
     }
     $11 = (($key) + ($12<<2)|0);
     $13 = HEAP32[$11>>2]|0;
     $14 = ($13|0)==(0);
     if ($14) {
      $i$09$i = $12;
      label = 9;
      break L6;
     } else {
      $18 = $13;$30 = $11;$i$012$i = $12;
     }
    }
    $$pr$i = HEAP32[$30>>2]|0;
    $31 = ($$pr$i|0)==(0);
    if ($31) {
     $i$09$i = $i$012$i;
     label = 9;
    } else {
     $$0$i34 = 1;
    }
   }
  } while(0);
  if ((label|0) == 9) {
   label = 0;
   $32 = (($10) + ($i$09$i<<2)|0);
   $33 = HEAP32[$32>>2]|0;
   $not$$i = ($33|0)!=(0);
   $34 = $not$$i << 31 >> 31;
   if ($not$$i) {
    $$0$i34 = $34;
   } else {
    label = 12;
    break;
   }
  }
  $35 = ($$023$i|0)==(1);
  if ($35) {
   $$0 = 0;
   label = 14;
   break;
  }
  $36 = ($$0$i34|0)<(0);
  $37 = (($$023$i) - ($6))|0;
  $$$i = $36 ? $6 : $37;
  $$01$$i = $36 ? $$014$i : $8;
  $38 = ($$$i|0)==(0);
  if ($38) {
   $$0 = 0;
   label = 14;
   break;
  } else {
   $$014$i = $$01$$i;$$023$i = $$$i;
  }
 }
 if ((label|0) == 12) {
  $39 = ($8|0)==(0|0);
  if ($39) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $$sum5 = $7 | 4;
  $40 = (($$014$i) + ($$sum5)|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = ((($this) + ($41)|0) + 8192|0);
  $$0 = $42;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 14) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZN11PatternList4initEPPci($this) {
 $this = $this|0;
 var $$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $i$01 = 0, $i$02$i = 0;
 var $j$03$i = 0, $j$1$lcssa$i = 0, $j$11$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 HEAP32[$0>>2] = 8;
 $1 = HEAP32[$this>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  _free($1);
 }
 $3 = (_malloc(1408)|0);
 $4 = ($3|0)==(0|0);
 L4: do {
  if ($4) {
   while(1) {
    $5 = HEAP32[51536>>2]|0;HEAP32[51536>>2] = (($5+0)|0);
    $6 = ($5|0)==(0);
    if ($6) {
     break;
    }
    $7 = $5;
    FUNCTION_TABLE_v[$7 & 15]();
    $8 = (_malloc(1408)|0);
    $9 = ($8|0)==(0|0);
    if (!($9)) {
     $$lcssa$i = $8;
     break L4;
    }
   }
   $10 = (___cxa_allocate_exception(4)|0);
   HEAP32[$10>>2] = ((51368 + 8|0));
   ___cxa_throw(($10|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $$lcssa$i = $3;
  }
 } while(0);
 HEAP32[$this>>2] = $$lcssa$i;
 $i$01 = 0;
 while(1) {
  $11 = (816 + ($i$01<<2)|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ((($$lcssa$i) + (($i$01*176)|0)|0) + 168|0);
  HEAP32[$13>>2] = 0;
  $14 = ((($$lcssa$i) + (($i$01*176)|0)|0) + 172|0);
  HEAP32[$14>>2] = 0;
  $15 = (($$lcssa$i) + (($i$01*176)|0)|0);
  HEAP32[$15>>2] = $12;
  $16 = ((($$lcssa$i) + (($i$01*176)|0)|0) + 4|0);
  HEAP32[$16>>2] = -1;
  $17 = HEAP8[$12>>0]|0;
  $18 = ($17<<24>>24)==(0);
  if (!($18)) {
   $21 = $12;$24 = $17;$i$02$i = 0;$j$03$i = -1;
   while(1) {
    $19 = ($j$03$i|0)>(-1);
    L15: do {
     if ($19) {
      $j$11$i = $j$03$i;
      while(1) {
       $20 = (($21) + ($j$11$i)|0);
       $22 = HEAP8[$20>>0]|0;
       $23 = ($24<<24>>24)==($22<<24>>24);
       if ($23) {
        $j$1$lcssa$i = $j$11$i;
        break L15;
       }
       $25 = (((($$lcssa$i) + (($i$01*176)|0)|0) + ($j$11$i<<2)|0) + 4|0);
       $26 = HEAP32[$25>>2]|0;
       $27 = ($26|0)>(-1);
       if ($27) {
        $j$11$i = $26;
       } else {
        $j$1$lcssa$i = $26;
        break;
       }
      }
     } else {
      $j$1$lcssa$i = $j$03$i;
     }
    } while(0);
    $28 = (($i$02$i) + 1)|0;
    $29 = (($j$1$lcssa$i) + 1)|0;
    $30 = (((($$lcssa$i) + (($i$01*176)|0)|0) + ($28<<2)|0) + 4|0);
    HEAP32[$30>>2] = $29;
    $31 = HEAP32[$15>>2]|0;
    $32 = (($31) + ($28)|0);
    $33 = HEAP8[$32>>0]|0;
    $34 = ($33<<24>>24)==(0);
    if ($34) {
     break;
    } else {
     $21 = $31;$24 = $33;$i$02$i = $28;$j$03$i = $29;
    }
   }
  }
  $35 = (($i$01) + 1)|0;
  $exitcond = ($35|0)==(8);
  if ($exitcond) {
   break;
  } else {
   $i$01 = $35;
  }
 }
 STACKTOP = sp;return;
}
function __ZN8UkEngine11processRoofER10UkKeyEvent($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $$$i$i = 0, $$$i$i22 = 0, $$$i$i37 = 0, $$$i$i9 = 0, $$0 = 0, $$0$i = 0, $$0$i1$i$ph = 0, $$0$i1$i20$ph = 0, $$0$i1$i35$ph = 0, $$0$i1$i7$ph = 0, $$0$i28 = 0, $$01$$i$i = 0, $$01$$i$i10 = 0, $$01$$i$i23 = 0, $$01$$i$i38 = 0, $$014$i$i = 0, $$014$i$i16 = 0, $$014$i$i3 = 0, $$014$i$i31 = 0, $$023$i$i = 0;
 var $$023$i$i17 = 0, $$023$i$i32 = 0, $$023$i$i4 = 0, $$neg8 = 0, $$sum51 = 0, $$sum52 = 0, $$sum53 = 0, $$sum54 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c1$0 = 0, $c2$0 = 0, $changePos$0 = 0, $doubleChangeUO$0$off0 = 0, $i$01$i$i = 0, $i$01$i$i19 = 0;
 var $i$01$i$i34 = 0, $i$01$i$i6 = 0, $i$09 = 0, $key$i = 0, $key$i15 = 0, $key$i2 = 0, $key$i30 = 0, $newVs$0 = 0, $newVs$1 = 0, $newVs$2 = 0, $or$cond = 0, $or$cond55 = 0, $or$cond56 = 0, $or$cond7 = 0, $pInfo$0 = 0, $roofRemoved$0$off0 = 0, $target$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $key$i30 = sp + 48|0;
 $key$i15 = sp + 32|0;
 $key$i2 = sp + 16|0;
 $key$i = sp;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if (!($4)) {
  $5 = (($this) + 20|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)<(0);
  if (!($7)) {
   $8 = ((($this) + (($6*36)|0)|0) + 3136|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)<(0);
   if (!($10)) {
    $12 = HEAP32[$ev>>2]|0;
    if ((($12|0) == 3)) {
     $target$0 = 109;
    } else if ((($12|0) == 1)) {
     $target$0 = 13;
    } else if ((($12|0) == 2)) {
     $target$0 = 57;
    } else {
     $target$0 = -1;
    }
    $13 = (($6) - ($9))|0;
    $14 = ((($this) + (($13*36)|0)|0) + 3144|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = (13896 + (($15*52)|0)|0);
    $17 = HEAP32[$16>>2]|0;
    $$neg8 = (($13) + 1)|0;
    $18 = (($$neg8) - ($17))|0;
    $19 = ($9|0)!=(0);
    $20 = ($15>>>0)<(12);
    do {
     if ($20) {
      $$0$i = 0;
     } else {
      $21 = ((13896 + (($15*52)|0)|0) + 36|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = ($22|0)==(-1);
      if ($23) {
       $24 = ((13896 + (($15*52)|0)|0) + 44|0);
       $25 = HEAP32[$24>>2]|0;
       $26 = ($25|0)==(-1);
       if (!($26)) {
        if ((($15|0) == 44) | (($15|0) == 66) | (($15|0) == 67)) {
         $$0$i = 1;
         break;
        }
        $$0$i = $25;
        break;
       }
       $27 = (($15) + -48)|0;
       $28 = ($27>>>0)<(22);
       if ($28) {
        $$0$i = 1;
       } else {
        $29 = (($1) + 12|0);
        $30 = HEAP32[$29>>2]|0;
        $31 = ($30|0)==(0);
        if (!($31)) {
         if ((($15|0) == 25) | (($15|0) == 27) | (($15|0) == 40)) {
          $$0$i = 1;
          break;
         }
        }
        $32 = $19&1;
        $$0$i = $32;
       }
      } else {
       $$0$i = $22;
      }
     }
    } while(0);
    $33 = (($18) + ($$0$i))|0;
    $34 = ((($this) + (($33*36)|0)|0) + 3152|0);
    $35 = HEAP32[$34>>2]|0;
    L22: do {
     if ((($15|0) == 43) | (($15|0) == 44) | (($15|0) == 64) | (($15|0) == 66)) {
      $36 = ((13896 + (($15*52)|0)|0) + 20|0);
      $37 = HEAP32[$36>>2]|0;
      HEAP32[$key$i>>2] = 143;
      $38 = (($key$i) + 4|0);
      HEAP32[$38>>2] = 109;
      $39 = (($key$i) + 8|0);
      HEAP32[$39>>2] = $37;
      $$014$i$i = 18136;$$023$i$i = 70;
      L25: while(1) {
       $40 = $$023$i$i >>> 1;
       $41 = $40 << 4;
       $42 = (($$014$i$i) + ($41)|0);
       $i$01$i$i = 0;
       while(1) {
        $45 = (($key$i) + ($i$01$i$i<<2)|0);
        $46 = HEAP32[$45>>2]|0;
        $47 = (($42) + ($i$01$i$i<<2)|0);
        $48 = HEAP32[$47>>2]|0;
        $49 = ($46|0)<($48|0);
        if ($49) {
         $$0$i1$i$ph = -1;
         break;
        }
        $50 = ($46|0)>($48|0);
        $44 = (($i$01$i$i) + 1)|0;
        if ($50) {
         $$0$i1$i$ph = 1;
         break;
        }
        $43 = ($44|0)<(3);
        if ($43) {
         $i$01$i$i = $44;
        } else {
         break L25;
        }
       }
       $51 = ($$023$i$i|0)==(1);
       if ($51) {
        $doubleChangeUO$0$off0 = 1;$newVs$0 = -1;
        break L22;
       }
       $52 = ($$0$i1$i$ph|0)<(0);
       $53 = (($$023$i$i) - ($40))|0;
       $$$i$i = $52 ? $40 : $53;
       $$01$$i$i = $52 ? $$014$i$i : $42;
       $54 = ($$$i$i|0)==(0);
       if ($54) {
        $doubleChangeUO$0$off0 = 1;$newVs$0 = -1;
        break L22;
       } else {
        $$014$i$i = $$01$$i$i;$$023$i$i = $$$i$i;
       }
      }
      $55 = ($42|0)==(0|0);
      if ($55) {
       $doubleChangeUO$0$off0 = 1;$newVs$0 = -1;
      } else {
       $$sum51 = $41 | 12;
       $56 = (($$014$i$i) + ($$sum51)|0);
       $57 = HEAP32[$56>>2]|0;
       $doubleChangeUO$0$off0 = 1;$newVs$0 = $57;
      }
     } else {
      $58 = ((13896 + (($15*52)|0)|0) + 40|0);
      $59 = HEAP32[$58>>2]|0;
      $doubleChangeUO$0$off0 = 0;$newVs$0 = $59;
     }
    } while(0);
    $60 = ($newVs$0|0)==(-1);
    do {
     if ($60) {
      $61 = ((13896 + (($15*52)|0)|0) + 36|0);
      $62 = HEAP32[$61>>2]|0;
      $63 = ($62|0)==(-1);
      if ($63) {
       $64 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
       $$0 = $64;
       STACKTOP = sp;return ($$0|0);
      }
      $65 = (($62) + ($18))|0;
      $66 = ((($this) + (($65*36)|0)|0) + 3156|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = ($target$0|0)==(-1);
      $69 = ($67|0)==($target$0|0);
      $or$cond = $68 | $69;
      if (!($or$cond)) {
       $70 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
       $$0 = $70;
       STACKTOP = sp;return ($$0|0);
      }
      $71 = ($67|0)==(13);
      if ($71) {
       $79 = 1;
      } else {
       $72 = ($67|0)==(57);
       $73 = $72 ? 45 : 97;
       $79 = $73;
      }
      $74 = (($1) + 8|0);
      $75 = HEAP32[$74>>2]|0;
      $76 = ($75|0)!=(0);
      $77 = ($65|0)==($6|0);
      $or$cond55 = $76 | $77;
      if (!($or$cond55)) {
       $78 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
       $$0 = $78;
       STACKTOP = sp;return ($$0|0);
      }
      __ZN8UkEngine10markChangeEi($this,$65);
      HEAP32[$66>>2] = $79;
      $80 = (($15) + -48)|0;
      $81 = ($80>>>0)<(22);
      L79: do {
       if ($81) {
        $82 = ((($this) + (($18*36)|0)|0) + 3156|0);
        $83 = HEAP32[$82>>2]|0;
        $84 = (($18) + 1)|0;
        $85 = ((($this) + (($84*36)|0)|0) + 3156|0);
        $86 = HEAP32[$85>>2]|0;
        $87 = (($18) + 2)|0;
        $88 = ((($this) + (($87*36)|0)|0) + 3156|0);
        $89 = HEAP32[$88>>2]|0;
        HEAP32[$key$i2>>2] = $83;
        $90 = (($key$i2) + 4|0);
        HEAP32[$90>>2] = $86;
        $91 = (($key$i2) + 8|0);
        HEAP32[$91>>2] = $89;
        $$014$i$i3 = 18136;$$023$i$i4 = 70;
        L105: while(1) {
         $92 = $$023$i$i4 >>> 1;
         $93 = $92 << 4;
         $94 = (($$014$i$i3) + ($93)|0);
         $i$01$i$i6 = 0;
         while(1) {
          $97 = (($key$i2) + ($i$01$i$i6<<2)|0);
          $98 = HEAP32[$97>>2]|0;
          $99 = (($94) + ($i$01$i$i6<<2)|0);
          $100 = HEAP32[$99>>2]|0;
          $101 = ($98|0)<($100|0);
          if ($101) {
           $$0$i1$i7$ph = -1;
           break;
          }
          $102 = ($98|0)>($100|0);
          $96 = (($i$01$i$i6) + 1)|0;
          if ($102) {
           $$0$i1$i7$ph = 1;
           break;
          }
          $95 = ($96|0)<(3);
          if ($95) {
           $i$01$i$i6 = $96;
          } else {
           break L105;
          }
         }
         $103 = ($$023$i$i4|0)==(1);
         if ($103) {
          $newVs$1 = -1;
          break L79;
         }
         $104 = ($$0$i1$i7$ph|0)<(0);
         $105 = (($$023$i$i4) - ($92))|0;
         $$$i$i9 = $104 ? $92 : $105;
         $$01$$i$i10 = $104 ? $$014$i$i3 : $94;
         $106 = ($$$i$i9|0)==(0);
         if ($106) {
          $newVs$1 = -1;
          break L79;
         } else {
          $$014$i$i3 = $$01$$i$i10;$$023$i$i4 = $$$i$i9;
         }
        }
        $107 = ($94|0)==(0|0);
        if ($107) {
         $newVs$1 = -1;
        } else {
         $$sum54 = $93 | 12;
         $108 = (($$014$i$i3) + ($$sum54)|0);
         $109 = HEAP32[$108>>2]|0;
         $newVs$1 = $109;
        }
       } else {
        $110 = (($15) + -12)|0;
        $111 = ($110>>>0)<(36);
        $112 = ((($this) + (($18*36)|0)|0) + 3156|0);
        $113 = HEAP32[$112>>2]|0;
        if ($111) {
         $114 = (($18) + 1)|0;
         $115 = ((($this) + (($114*36)|0)|0) + 3156|0);
         $116 = HEAP32[$115>>2]|0;
         HEAP32[$key$i15>>2] = $113;
         $117 = (($key$i15) + 4|0);
         HEAP32[$117>>2] = $116;
         $118 = (($key$i15) + 8|0);
         HEAP32[$118>>2] = -1;
         $$014$i$i16 = 18136;$$023$i$i17 = 70;
         L94: while(1) {
          $119 = $$023$i$i17 >>> 1;
          $120 = $119 << 4;
          $121 = (($$014$i$i16) + ($120)|0);
          $i$01$i$i19 = 0;
          while(1) {
           $124 = (($key$i15) + ($i$01$i$i19<<2)|0);
           $125 = HEAP32[$124>>2]|0;
           $126 = (($121) + ($i$01$i$i19<<2)|0);
           $127 = HEAP32[$126>>2]|0;
           $128 = ($125|0)<($127|0);
           if ($128) {
            $$0$i1$i20$ph = -1;
            break;
           }
           $129 = ($125|0)>($127|0);
           $123 = (($i$01$i$i19) + 1)|0;
           if ($129) {
            $$0$i1$i20$ph = 1;
            break;
           }
           $122 = ($123|0)<(3);
           if ($122) {
            $i$01$i$i19 = $123;
           } else {
            break L94;
           }
          }
          $130 = ($$023$i$i17|0)==(1);
          if ($130) {
           $newVs$1 = -1;
           break L79;
          }
          $131 = ($$0$i1$i20$ph|0)<(0);
          $132 = (($$023$i$i17) - ($119))|0;
          $$$i$i22 = $131 ? $119 : $132;
          $$01$$i$i23 = $131 ? $$014$i$i16 : $121;
          $133 = ($$$i$i22|0)==(0);
          if ($133) {
           $newVs$1 = -1;
           break L79;
          } else {
           $$014$i$i16 = $$01$$i$i23;$$023$i$i17 = $$$i$i22;
          }
         }
         $134 = ($121|0)==(0|0);
         if ($134) {
          $newVs$1 = -1;
          break;
         }
         $$sum53 = $120 | 12;
         $135 = (($$014$i$i16) + ($$sum53)|0);
         $136 = HEAP32[$135>>2]|0;
         $newVs$1 = $136;
         break;
        } else {
         HEAP32[$key$i30>>2] = $113;
         $137 = (($key$i30) + 4|0);
         HEAP32[$137>>2] = -1;
         $138 = (($key$i30) + 8|0);
         HEAP32[$138>>2] = -1;
         $$014$i$i31 = 18136;$$023$i$i32 = 70;
         L83: while(1) {
          $139 = $$023$i$i32 >>> 1;
          $140 = $139 << 4;
          $141 = (($$014$i$i31) + ($140)|0);
          $i$01$i$i34 = 0;
          while(1) {
           $144 = (($key$i30) + ($i$01$i$i34<<2)|0);
           $145 = HEAP32[$144>>2]|0;
           $146 = (($141) + ($i$01$i$i34<<2)|0);
           $147 = HEAP32[$146>>2]|0;
           $148 = ($145|0)<($147|0);
           if ($148) {
            $$0$i1$i35$ph = -1;
            break;
           }
           $149 = ($145|0)>($147|0);
           $143 = (($i$01$i$i34) + 1)|0;
           if ($149) {
            $$0$i1$i35$ph = 1;
            break;
           }
           $142 = ($143|0)<(3);
           if ($142) {
            $i$01$i$i34 = $143;
           } else {
            break L83;
           }
          }
          $150 = ($$023$i$i32|0)==(1);
          if ($150) {
           $newVs$1 = -1;
           break L79;
          }
          $151 = ($$0$i1$i35$ph|0)<(0);
          $152 = (($$023$i$i32) - ($139))|0;
          $$$i$i37 = $151 ? $139 : $152;
          $$01$$i$i38 = $151 ? $$014$i$i31 : $141;
          $153 = ($$$i$i37|0)==(0);
          if ($153) {
           $newVs$1 = -1;
           break L79;
          } else {
           $$014$i$i31 = $$01$$i$i38;$$023$i$i32 = $$$i$i37;
          }
         }
         $154 = ($141|0)==(0|0);
         if ($154) {
          $newVs$1 = -1;
          break;
         }
         $$sum52 = $140 | 12;
         $155 = (($$014$i$i31) + ($$sum52)|0);
         $156 = HEAP32[$155>>2]|0;
         $newVs$1 = $156;
         break;
        }
       }
      } while(0);
      $157 = (13896 + (($newVs$1*52)|0)|0);
      $newVs$2 = $newVs$1;$pInfo$0 = $157;$roofRemoved$0$off0 = 1;
     } else {
      $158 = (13896 + (($newVs$0*52)|0)|0);
      $159 = ($target$0|0)==(-1);
      if (!($159)) {
       $160 = ((13896 + (($newVs$0*52)|0)|0) + 36|0);
       $161 = HEAP32[$160>>2]|0;
       $162 = (((13896 + (($newVs$0*52)|0)|0) + ($161<<2)|0) + 12|0);
       $163 = HEAP32[$162>>2]|0;
       $164 = ($163|0)==($target$0|0);
       if (!($164)) {
        $165 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
        $$0 = $165;
        STACKTOP = sp;return ($$0|0);
       }
      }
      $166 = ((($this) + (($6*36)|0)|0) + 3132|0);
      $167 = HEAP32[$166>>2]|0;
      $168 = ($167|0)==(-1);
      if ($168) {
       $c1$0 = -1;
      } else {
       $169 = (($6) - ($167))|0;
       $170 = ((($this) + (($169*36)|0)|0) + 3144|0);
       $171 = HEAP32[$170>>2]|0;
       $c1$0 = $171;
      }
      $172 = ((($this) + (($6*36)|0)|0) + 3140|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==(-1);
      if ($174) {
       $c2$0 = -1;
      } else {
       $175 = (($6) - ($173))|0;
       $176 = ((($this) + (($175*36)|0)|0) + 3144|0);
       $177 = HEAP32[$176>>2]|0;
       $c2$0 = $177;
      }
      $178 = (__Z10isValidCVC6ConSeq8VowelSeqS_($c1$0,$newVs$0,$c2$0)|0);
      if (!($178)) {
       $179 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
       $$0 = $179;
       STACKTOP = sp;return ($$0|0);
      }
      if ($doubleChangeUO$0$off0) {
       $changePos$0 = $18;
      } else {
       $180 = ((13896 + (($newVs$0*52)|0)|0) + 36|0);
       $181 = HEAP32[$180>>2]|0;
       $182 = (($181) + ($18))|0;
       $changePos$0 = $182;
      }
      $183 = (($1) + 8|0);
      $184 = HEAP32[$183>>2]|0;
      $185 = ($184|0)!=(0);
      $186 = ($changePos$0|0)==($6|0);
      $or$cond56 = $185 | $186;
      if (!($or$cond56)) {
       $187 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
       $$0 = $187;
       STACKTOP = sp;return ($$0|0);
      }
      __ZN8UkEngine10markChangeEi($this,$changePos$0);
      if ($doubleChangeUO$0$off0) {
       $188 = ((($this) + (($18*36)|0)|0) + 3156|0);
       HEAP32[$188>>2] = 143;
       $189 = (($18) + 1)|0;
       $190 = ((($this) + (($189*36)|0)|0) + 3156|0);
       HEAP32[$190>>2] = 109;
       $newVs$2 = $newVs$0;$pInfo$0 = $158;$roofRemoved$0$off0 = 0;
       break;
      } else {
       $191 = ((13896 + (($newVs$0*52)|0)|0) + 36|0);
       $192 = HEAP32[$191>>2]|0;
       $193 = (((13896 + (($newVs$0*52)|0)|0) + ($192<<2)|0) + 12|0);
       $194 = HEAP32[$193>>2]|0;
       $195 = ((($this) + (($changePos$0*36)|0)|0) + 3156|0);
       HEAP32[$195>>2] = $194;
       $newVs$2 = $newVs$0;$pInfo$0 = $158;$roofRemoved$0$off0 = 0;
       break;
      }
     }
    } while(0);
    $196 = HEAP32[$pInfo$0>>2]|0;
    $197 = ($196|0)>(0);
    if ($197) {
     $i$09 = 0;
     while(1) {
      $198 = ((($pInfo$0) + ($i$09<<2)|0) + 24|0);
      $199 = HEAP32[$198>>2]|0;
      $200 = (($i$09) + ($18))|0;
      $201 = ((($this) + (($200*36)|0)|0) + 3144|0);
      HEAP32[$201>>2] = $199;
      $202 = (($i$09) + 1)|0;
      $203 = ($202|0)<($196|0);
      if ($203) {
       $i$09 = $202;
      } else {
       break;
      }
     }
    }
    $204 = HEAP32[$5>>2]|0;
    $205 = ($13|0)!=($204|0);
    $206 = ($newVs$2>>>0)<(12);
    do {
     if ($206) {
      $$0$i28 = 0;
     } else {
      $207 = ((13896 + (($newVs$2*52)|0)|0) + 36|0);
      $208 = HEAP32[$207>>2]|0;
      $209 = ($208|0)==(-1);
      if ($209) {
       $210 = ((13896 + (($newVs$2*52)|0)|0) + 44|0);
       $211 = HEAP32[$210>>2]|0;
       $212 = ($211|0)==(-1);
       if (!($212)) {
        if ((($newVs$2|0) == 44) | (($newVs$2|0) == 66) | (($newVs$2|0) == 67)) {
         $$0$i28 = 1;
         break;
        }
        $$0$i28 = $211;
        break;
       }
       $213 = (($newVs$2) + -48)|0;
       $214 = ($213>>>0)<(22);
       if ($214) {
        $$0$i28 = 1;
       } else {
        $215 = HEAP32[$0>>2]|0;
        $216 = (($215) + 12|0);
        $217 = HEAP32[$216>>2]|0;
        $218 = ($217|0)==(0);
        if (!($218)) {
         if ((($newVs$2|0) == 25) | (($newVs$2|0) == 27) | (($newVs$2|0) == 40)) {
          $$0$i28 = 1;
          break;
         }
        }
        $219 = $205&1;
        $$0$i28 = $219;
       }
      } else {
       $$0$i28 = $208;
      }
     }
    } while(0);
    $220 = (($$0$i28) + ($18))|0;
    $221 = ($33|0)!=($220|0);
    $222 = ($35|0)!=(0);
    $or$cond7 = $221 & $222;
    if ($or$cond7) {
     __ZN8UkEngine10markChangeEi($this,$220);
     $223 = ((($this) + (($220*36)|0)|0) + 3152|0);
     HEAP32[$223>>2] = $35;
     __ZN8UkEngine10markChangeEi($this,$33);
     HEAP32[$34>>2] = 0;
    }
    if (!($roofRemoved$0$off0)) {
     $$0 = 1;
     STACKTOP = sp;return ($$0|0);
    }
    $224 = (($this) + 24|0);
    HEAP32[$224>>2] = 0;
    (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
    $225 = (($this) + 3121|0);
    HEAP8[$225>>0] = 1;
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
  }
 }
 $11 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
 $$0 = $11;
 STACKTOP = sp;return ($$0|0);
}
function __ZN8UkEngine11processHookER10UkKeyEvent($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $$$i$i = 0, $$$i$i$i = 0, $$$i$i12 = 0, $$$i$i22$i = 0, $$$i$i25 = 0, $$$i$i37$i = 0, $$$i$i9$i = 0, $$0 = 0, $$0$i$i = 0, $$0$i1 = 0, $$0$i1$i = 0, $$0$i1$i$i$ph = 0, $$0$i1$i10$ph = 0, $$0$i1$i2$ph = 0, $$0$i1$i20$i$ph = 0, $$0$i1$i23$ph = 0, $$0$i1$i35$i$ph = 0, $$0$i1$i7$i$ph = 0, $$0$i13$i = 0, $$0$i26$i = 0;
 var $$0$i28$i = 0, $$0$i31 = 0, $$0$i41$i = 0, $$01$$i$i = 0, $$01$$i$i$i = 0, $$01$$i$i10$i = 0, $$01$$i$i13 = 0, $$01$$i$i23$i = 0, $$01$$i$i26 = 0, $$01$$i$i38$i = 0, $$014$i$i = 0, $$014$i$i$i = 0, $$014$i$i16$i = 0, $$014$i$i19 = 0, $$014$i$i3$i = 0, $$014$i$i31$i = 0, $$014$i$i6 = 0, $$023$i$i = 0, $$023$i$i$i = 0, $$023$i$i17$i = 0;
 var $$023$i$i20 = 0, $$023$i$i32$i = 0, $$023$i$i4$i = 0, $$023$i$i7 = 0, $$neg4 = 0, $$neg4$i = 0, $$neg441 = 0, $$sum48 = 0, $$sum49 = 0, $$sum50 = 0, $$sum51 = 0, $$sum52 = 0, $$sum53 = 0, $$sum54 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;
 var $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c1$0 = 0, $c2$0 = 0, $hookRemoved$0$off0 = 0, $hookRemoved$0$off0$i = 0, $i$01$i$i = 0, $i$01$i$i$i = 0, $i$01$i$i19$i = 0, $i$01$i$i22 = 0, $i$01$i$i34$i = 0, $i$01$i$i6$i = 0, $i$01$i$i9 = 0;
 var $i$05 = 0, $i$05$i = 0, $key$i = 0, $key$i18 = 0, $key$i5 = 0, $newVs$0$i = 0, $newVs$0$pn = 0, $or$cond = 0, $or$cond3 = 0, $or$cond3$i = 0, $or$cond55 = 0, $or$cond56 = 0, $or$cond57 = 0, $or$cond58 = 0, $or$cond59 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $key$i18 = sp + 32|0;
 $key$i5 = sp + 16|0;
 $key$i = sp;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if (!($4)) {
  $5 = (($this) + 20|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)<(0);
  if (!($7)) {
   $8 = ((($this) + (($6*36)|0)|0) + 3136|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)<(0);
   if (!($10)) {
    $12 = (($6) - ($9))|0;
    $13 = ((($this) + (($12*36)|0)|0) + 3144|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ((13896 + (($14*52)|0)|0) + 12|0);
    $16 = (13896 + (($14*52)|0)|0);
    $17 = (($14) + -12)|0;
    $18 = ($17>>>0)<(58);
    do {
     if ($18) {
      $19 = HEAP32[$ev>>2]|0;
      $20 = ($19|0)==(8);
      if ($20) {
       $21 = HEAP32[$16>>2]|0;
       $$neg441 = (($12) + 1)|0;
       $22 = (($$neg441) - ($21))|0;
       $434 = $22;
       label = 99;
       break;
      }
      $23 = HEAP32[$15>>2]|0;
      if ((($23|0) == 155) | (($23|0) == 143)) {
       $24 = ((13896 + (($14*52)|0)|0) + 16|0);
       $25 = HEAP32[$24>>2]|0;
       if ((($25|0) == 109) | (($25|0) == 121) | (($25|0) == 97)) {
        $26 = (($1) + 8|0);
        $27 = HEAP32[$26>>2]|0;
        $28 = ($27|0)!=(0);
        $29 = ($9|0)==(0);
        $or$cond55 = $28 | $29;
        if (!($or$cond55)) {
         $30 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
         $$0 = $30;
         STACKTOP = sp;return ($$0|0);
        }
        $31 = HEAP32[$16>>2]|0;
        $$neg4$i = (($12) + 1)|0;
        $32 = (($$neg4$i) - ($31))|0;
        $33 = ($9|0)!=(0);
        $34 = ($14>>>0)<(12);
        do {
         if ($34) {
          $$0$i$i = 0;
         } else {
          $35 = ((13896 + (($14*52)|0)|0) + 36|0);
          $36 = HEAP32[$35>>2]|0;
          $37 = ($36|0)==(-1);
          if ($37) {
           $38 = ((13896 + (($14*52)|0)|0) + 44|0);
           $39 = HEAP32[$38>>2]|0;
           $40 = ($39|0)==(-1);
           if (!($40)) {
            if ((($14|0) == 44) | (($14|0) == 66) | (($14|0) == 67)) {
             $$0$i$i = 1;
             break;
            }
            $$0$i$i = $39;
            break;
           }
           $41 = (($14) + -48)|0;
           $42 = ($41>>>0)<(22);
           if ($42) {
            $$0$i$i = 1;
           } else {
            $43 = (($1) + 12|0);
            $44 = HEAP32[$43>>2]|0;
            $45 = ($44|0)==(0);
            if (!($45)) {
             if ((($14|0) == 25) | (($14|0) == 27) | (($14|0) == 40)) {
              $$0$i$i = 1;
              break;
             }
            }
            $46 = $33&1;
            $$0$i$i = $46;
           }
          } else {
           $$0$i$i = $36;
          }
         }
        } while(0);
        $47 = (($32) + ($$0$i$i))|0;
        $48 = ((($this) + (($47*36)|0)|0) + 3152|0);
        $49 = HEAP32[$48>>2]|0;
        do {
         if ((($19|0) == 7)) {
          if (!((($25|0) == 109) | (($25|0) == 97))) {
           $120 = ((13896 + (($14*52)|0)|0) + 20|0);
           $121 = HEAP32[$120>>2]|0;
           HEAP32[$key$i18>>2] = 143;
           $122 = (($key$i18) + 4|0);
           HEAP32[$122>>2] = 97;
           $123 = (($key$i18) + 8|0);
           HEAP32[$123>>2] = $121;
           $$014$i$i16$i = 18136;$$023$i$i17$i = 70;
           L59: while(1) {
            $124 = $$023$i$i17$i >>> 1;
            $125 = $124 << 4;
            $126 = (($$014$i$i16$i) + ($125)|0);
            $i$01$i$i19$i = 0;
            while(1) {
             $129 = (($key$i18) + ($i$01$i$i19$i<<2)|0);
             $130 = HEAP32[$129>>2]|0;
             $131 = (($126) + ($i$01$i$i19$i<<2)|0);
             $132 = HEAP32[$131>>2]|0;
             $133 = ($130|0)<($132|0);
             if ($133) {
              $$0$i1$i20$i$ph = -1;
              break;
             }
             $134 = ($130|0)>($132|0);
             $128 = (($i$01$i$i19$i) + 1)|0;
             if ($134) {
              $$0$i1$i20$i$ph = 1;
              break;
             }
             $127 = ($128|0)<(3);
             if ($127) {
              $i$01$i$i19$i = $128;
             } else {
              label = 58;
              break L59;
             }
            }
            $135 = ($$023$i$i17$i|0)==(1);
            if ($135) {
             $$0$i26$i = -1;
             break;
            }
            $136 = ($$0$i1$i20$i$ph|0)<(0);
            $137 = (($$023$i$i17$i) - ($124))|0;
            $$$i$i22$i = $136 ? $124 : $137;
            $$01$$i$i23$i = $136 ? $$014$i$i16$i : $126;
            $138 = ($$$i$i22$i|0)==(0);
            if ($138) {
             $$0$i26$i = -1;
             break;
            } else {
             $$014$i$i16$i = $$01$$i$i23$i;$$023$i$i17$i = $$$i$i22$i;
            }
           }
           if ((label|0) == 58) {
            $139 = ($126|0)==(0|0);
            if ($139) {
             $$0$i26$i = -1;
            } else {
             $$sum52 = $125 | 12;
             $140 = (($$014$i$i16$i) + ($$sum52)|0);
             $141 = HEAP32[$140>>2]|0;
             $$0$i26$i = $141;
            }
           }
           $142 = ($23|0)==(155);
           if ($142) {
            __ZN8UkEngine10markChangeEi($this,$32);
            $143 = ((($this) + (($32*36)|0)|0) + 3156|0);
            HEAP32[$143>>2] = 143;
            $144 = (($32) + 1)|0;
            $145 = ((($this) + (($144*36)|0)|0) + 3156|0);
            HEAP32[$145>>2] = 97;
            $hookRemoved$0$off0$i = 1;$newVs$0$i = $$0$i26$i;
            break;
           } else {
            $146 = (($32) + 1)|0;
            __ZN8UkEngine10markChangeEi($this,$146);
            $147 = ((($this) + (($146*36)|0)|0) + 3156|0);
            HEAP32[$147>>2] = 97;
            $hookRemoved$0$off0$i = 1;$newVs$0$i = $$0$i26$i;
            break;
           }
          }
          $79 = ($9|0)==(0);
          $80 = ($17>>>0)<(36);
          $or$cond56 = $79 & $80;
          if ($or$cond56) {
           $81 = ((($this) + (($6*36)|0)|0) + 3128|0);
           $82 = HEAP32[$81>>2]|0;
           $83 = ($82|0)==(4);
           if ($83) {
            $84 = (($6) + -2)|0;
            $85 = ((($this) + (($84*36)|0)|0) + 3144|0);
            $86 = HEAP32[$85>>2]|0;
            $87 = ($86|0)==(26);
            if ($87) {
             $88 = ((13896 + (($14*52)|0)|0) + 48|0);
             $89 = HEAP32[$88>>2]|0;
             $90 = (($32) + 1)|0;
             __ZN8UkEngine10markChangeEi($this,$90);
             $91 = ((($this) + (($90*36)|0)|0) + 3156|0);
             HEAP32[$91>>2] = 121;
             $hookRemoved$0$off0$i = 0;$newVs$0$i = $89;
             break;
            }
           }
          }
          $92 = ((13896 + (($14*52)|0)|0) + 20|0);
          $93 = HEAP32[$92>>2]|0;
          HEAP32[$key$i18>>2] = 155;
          $94 = (($key$i18) + 4|0);
          HEAP32[$94>>2] = 121;
          $95 = (($key$i18) + 8|0);
          HEAP32[$95>>2] = $93;
          $$014$i$i3$i = 18136;$$023$i$i4$i = 70;
          L80: while(1) {
           $96 = $$023$i$i4$i >>> 1;
           $97 = $96 << 4;
           $98 = (($$014$i$i3$i) + ($97)|0);
           $i$01$i$i6$i = 0;
           while(1) {
            $101 = (($key$i18) + ($i$01$i$i6$i<<2)|0);
            $102 = HEAP32[$101>>2]|0;
            $103 = (($98) + ($i$01$i$i6$i<<2)|0);
            $104 = HEAP32[$103>>2]|0;
            $105 = ($102|0)<($104|0);
            if ($105) {
             $$0$i1$i7$i$ph = -1;
             break;
            }
            $106 = ($102|0)>($104|0);
            $100 = (($i$01$i$i6$i) + 1)|0;
            if ($106) {
             $$0$i1$i7$i$ph = 1;
             break;
            }
            $99 = ($100|0)<(3);
            if ($99) {
             $i$01$i$i6$i = $100;
            } else {
             label = 46;
             break L80;
            }
           }
           $107 = ($$023$i$i4$i|0)==(1);
           if ($107) {
            $$0$i13$i = -1;
            break;
           }
           $108 = ($$0$i1$i7$i$ph|0)<(0);
           $109 = (($$023$i$i4$i) - ($96))|0;
           $$$i$i9$i = $108 ? $96 : $109;
           $$01$$i$i10$i = $108 ? $$014$i$i3$i : $98;
           $110 = ($$$i$i9$i|0)==(0);
           if ($110) {
            $$0$i13$i = -1;
            break;
           } else {
            $$014$i$i3$i = $$01$$i$i10$i;$$023$i$i4$i = $$$i$i9$i;
           }
          }
          if ((label|0) == 46) {
           $111 = ($98|0)==(0|0);
           if ($111) {
            $$0$i13$i = -1;
           } else {
            $$sum51 = $97 | 12;
            $112 = (($$014$i$i3$i) + ($$sum51)|0);
            $113 = HEAP32[$112>>2]|0;
            $$0$i13$i = $113;
           }
          }
          $114 = ($23|0)==(143);
          if ($114) {
           __ZN8UkEngine10markChangeEi($this,$32);
           $115 = ((($this) + (($32*36)|0)|0) + 3156|0);
           HEAP32[$115>>2] = 155;
           $116 = (($32) + 1)|0;
           $117 = ((($this) + (($116*36)|0)|0) + 3156|0);
           HEAP32[$117>>2] = 121;
           $hookRemoved$0$off0$i = 0;$newVs$0$i = $$0$i13$i;
           break;
          } else {
           $118 = (($32) + 1)|0;
           __ZN8UkEngine10markChangeEi($this,$118);
           $119 = ((($this) + (($118*36)|0)|0) + 3156|0);
           HEAP32[$119>>2] = 121;
           $hookRemoved$0$off0$i = 0;$newVs$0$i = $$0$i13$i;
           break;
          }
         } else if ((($19|0) == 6)) {
          $50 = ($23|0)==(143);
          if ($50) {
           $51 = ((13896 + (($14*52)|0)|0) + 48|0);
           $52 = HEAP32[$51>>2]|0;
           __ZN8UkEngine10markChangeEi($this,$32);
           $53 = ((($this) + (($32*36)|0)|0) + 3156|0);
           HEAP32[$53>>2] = 155;
           $hookRemoved$0$off0$i = 0;$newVs$0$i = $52;
           break;
          }
          $54 = ((13896 + (($14*52)|0)|0) + 20|0);
          $55 = HEAP32[$54>>2]|0;
          HEAP32[$key$i18>>2] = 143;
          $56 = (($key$i18) + 4|0);
          HEAP32[$56>>2] = 97;
          $57 = (($key$i18) + 8|0);
          HEAP32[$57>>2] = $55;
          $$014$i$i$i = 18136;$$023$i$i$i = 70;
          L99: while(1) {
           $58 = $$023$i$i$i >>> 1;
           $59 = $58 << 4;
           $60 = (($$014$i$i$i) + ($59)|0);
           $i$01$i$i$i = 0;
           while(1) {
            $63 = (($key$i18) + ($i$01$i$i$i<<2)|0);
            $64 = HEAP32[$63>>2]|0;
            $65 = (($60) + ($i$01$i$i$i<<2)|0);
            $66 = HEAP32[$65>>2]|0;
            $67 = ($64|0)<($66|0);
            if ($67) {
             $$0$i1$i$i$ph = -1;
             break;
            }
            $68 = ($64|0)>($66|0);
            $62 = (($i$01$i$i$i) + 1)|0;
            if ($68) {
             $$0$i1$i$i$ph = 1;
             break;
            }
            $61 = ($62|0)<(3);
            if ($61) {
             $i$01$i$i$i = $62;
            } else {
             label = 31;
             break L99;
            }
           }
           $69 = ($$023$i$i$i|0)==(1);
           if ($69) {
            $$0$i1$i = -1;
            break;
           }
           $70 = ($$0$i1$i$i$ph|0)<(0);
           $71 = (($$023$i$i$i) - ($58))|0;
           $$$i$i$i = $70 ? $58 : $71;
           $$01$$i$i$i = $70 ? $$014$i$i$i : $60;
           $72 = ($$$i$i$i|0)==(0);
           if ($72) {
            $$0$i1$i = -1;
            break;
           } else {
            $$014$i$i$i = $$01$$i$i$i;$$023$i$i$i = $$$i$i$i;
           }
          }
          if ((label|0) == 31) {
           $73 = ($60|0)==(0|0);
           if ($73) {
            $$0$i1$i = -1;
           } else {
            $$sum53 = $59 | 12;
            $74 = (($$014$i$i$i) + ($$sum53)|0);
            $75 = HEAP32[$74>>2]|0;
            $$0$i1$i = $75;
           }
          }
          __ZN8UkEngine10markChangeEi($this,$32);
          $76 = ((($this) + (($32*36)|0)|0) + 3156|0);
          HEAP32[$76>>2] = 143;
          $77 = (($32) + 1)|0;
          $78 = ((($this) + (($77*36)|0)|0) + 3156|0);
          HEAP32[$78>>2] = 97;
          $hookRemoved$0$off0$i = 1;$newVs$0$i = $$0$i1$i;
         } else {
          $148 = ($23|0)==(143);
          if ($148) {
           if (!((($25|0) == 97) | (($25|0) == 109))) {
            $168 = ((13896 + (($14*52)|0)|0) + 48|0);
            $169 = HEAP32[$168>>2]|0;
            __ZN8UkEngine10markChangeEi($this,$32);
            $170 = ((($this) + (($32*36)|0)|0) + 3156|0);
            HEAP32[$170>>2] = 155;
            $hookRemoved$0$off0$i = 0;$newVs$0$i = $169;
            break;
           }
           $149 = $14 & -2;
           $150 = ($149|0)==(36);
           $151 = ($9|0)==(0);
           $or$cond57 = $150 & $151;
           if ($or$cond57) {
            $152 = ((($this) + (($6*36)|0)|0) + 3128|0);
            $153 = HEAP32[$152>>2]|0;
            $154 = ($153|0)==(4);
            if ($154) {
             $155 = (($6) + -2)|0;
             $156 = ((($this) + (($155*36)|0)|0) + 3144|0);
             $157 = HEAP32[$156>>2]|0;
             $158 = ($157|0)==(26);
             if ($158) {
              $159 = (($32) + 1)|0;
              __ZN8UkEngine10markChangeEi($this,$159);
              $160 = ((($this) + (($159*36)|0)|0) + 3156|0);
              HEAP32[$160>>2] = 121;
              $hookRemoved$0$off0$i = 0;$newVs$0$i = 38;
              break;
             }
            }
           }
           $161 = ((13896 + (($14*52)|0)|0) + 48|0);
           $162 = HEAP32[$161>>2]|0;
           __ZN8UkEngine10markChangeEi($this,$32);
           $163 = ((($this) + (($32*36)|0)|0) + 3156|0);
           HEAP32[$163>>2] = 155;
           $164 = ((13896 + (($162*52)|0)|0) + 48|0);
           $165 = HEAP32[$164>>2]|0;
           $166 = (($32) + 1)|0;
           $167 = ((($this) + (($166*36)|0)|0) + 3156|0);
           HEAP32[$167>>2] = 121;
           $hookRemoved$0$off0$i = 0;$newVs$0$i = $165;
           break;
          }
          $171 = ($25|0)==(97);
          if ($171) {
           $172 = ((13896 + (($14*52)|0)|0) + 48|0);
           $173 = HEAP32[$172>>2]|0;
           $174 = (($32) + 1)|0;
           __ZN8UkEngine10markChangeEi($this,$174);
           $175 = ((($this) + (($174*36)|0)|0) + 3156|0);
           HEAP32[$175>>2] = 121;
           $hookRemoved$0$off0$i = 0;$newVs$0$i = $173;
           break;
          }
          $176 = ((13896 + (($14*52)|0)|0) + 20|0);
          $177 = HEAP32[$176>>2]|0;
          HEAP32[$key$i18>>2] = 143;
          $178 = (($key$i18) + 4|0);
          HEAP32[$178>>2] = 97;
          $179 = (($key$i18) + 8|0);
          HEAP32[$179>>2] = $177;
          $$014$i$i31$i = 18136;$$023$i$i32$i = 70;
          L44: while(1) {
           $180 = $$023$i$i32$i >>> 1;
           $181 = $180 << 4;
           $182 = (($$014$i$i31$i) + ($181)|0);
           $i$01$i$i34$i = 0;
           while(1) {
            $185 = (($key$i18) + ($i$01$i$i34$i<<2)|0);
            $186 = HEAP32[$185>>2]|0;
            $187 = (($182) + ($i$01$i$i34$i<<2)|0);
            $188 = HEAP32[$187>>2]|0;
            $189 = ($186|0)<($188|0);
            if ($189) {
             $$0$i1$i35$i$ph = -1;
             break;
            }
            $190 = ($186|0)>($188|0);
            $184 = (($i$01$i$i34$i) + 1)|0;
            if ($190) {
             $$0$i1$i35$i$ph = 1;
             break;
            }
            $183 = ($184|0)<(3);
            if ($183) {
             $i$01$i$i34$i = $184;
            } else {
             label = 80;
             break L44;
            }
           }
           $191 = ($$023$i$i32$i|0)==(1);
           if ($191) {
            $$0$i41$i = -1;
            break;
           }
           $192 = ($$0$i1$i35$i$ph|0)<(0);
           $193 = (($$023$i$i32$i) - ($180))|0;
           $$$i$i37$i = $192 ? $180 : $193;
           $$01$$i$i38$i = $192 ? $$014$i$i31$i : $182;
           $194 = ($$$i$i37$i|0)==(0);
           if ($194) {
            $$0$i41$i = -1;
            break;
           } else {
            $$014$i$i31$i = $$01$$i$i38$i;$$023$i$i32$i = $$$i$i37$i;
           }
          }
          if ((label|0) == 80) {
           $195 = ($182|0)==(0|0);
           if ($195) {
            $$0$i41$i = -1;
           } else {
            $$sum54 = $181 | 12;
            $196 = (($$014$i$i31$i) + ($$sum54)|0);
            $197 = HEAP32[$196>>2]|0;
            $$0$i41$i = $197;
           }
          }
          __ZN8UkEngine10markChangeEi($this,$32);
          $198 = ((($this) + (($32*36)|0)|0) + 3156|0);
          HEAP32[$198>>2] = 143;
          $199 = (($32) + 1)|0;
          $200 = ((($this) + (($199*36)|0)|0) + 3156|0);
          HEAP32[$200>>2] = 97;
          $hookRemoved$0$off0$i = 1;$newVs$0$i = $$0$i41$i;
         }
        } while(0);
        $201 = (13896 + (($newVs$0$i*52)|0)|0);
        $202 = HEAP32[$201>>2]|0;
        $i$05$i = 0;
        while(1) {
         $203 = (((13896 + (($newVs$0$i*52)|0)|0) + ($i$05$i<<2)|0) + 24|0);
         $204 = HEAP32[$203>>2]|0;
         $205 = (($i$05$i) + ($32))|0;
         $206 = ((($this) + (($205*36)|0)|0) + 3144|0);
         HEAP32[$206>>2] = $204;
         $207 = (($i$05$i) + 1)|0;
         $208 = ($207|0)<($202|0);
         if ($208) {
          $i$05$i = $207;
         } else {
          break;
         }
        }
        $209 = HEAP32[$5>>2]|0;
        $210 = ($12|0)!=($209|0);
        $211 = ($newVs$0$i>>>0)<(12);
        do {
         if ($211) {
          $$0$i28$i = 0;
         } else {
          $212 = ((13896 + (($newVs$0$i*52)|0)|0) + 36|0);
          $213 = HEAP32[$212>>2]|0;
          $214 = ($213|0)==(-1);
          if ($214) {
           $215 = ((13896 + (($newVs$0$i*52)|0)|0) + 44|0);
           $216 = HEAP32[$215>>2]|0;
           $217 = ($216|0)==(-1);
           if (!($217)) {
            if ((($newVs$0$i|0) == 44) | (($newVs$0$i|0) == 66) | (($newVs$0$i|0) == 67)) {
             $$0$i28$i = 1;
             break;
            }
            $$0$i28$i = $216;
            break;
           }
           $218 = (($newVs$0$i) + -48)|0;
           $219 = ($218>>>0)<(22);
           if ($219) {
            $$0$i28$i = 1;
           } else {
            $220 = HEAP32[$0>>2]|0;
            $221 = (($220) + 12|0);
            $222 = HEAP32[$221>>2]|0;
            $223 = ($222|0)==(0);
            if (!($223)) {
             if ((($newVs$0$i|0) == 25) | (($newVs$0$i|0) == 27) | (($newVs$0$i|0) == 40)) {
              $$0$i28$i = 1;
              break;
             }
            }
            $224 = $210&1;
            $$0$i28$i = $224;
           }
          } else {
           $$0$i28$i = $213;
          }
         }
        } while(0);
        $225 = (($$0$i28$i) + ($32))|0;
        $226 = ($47|0)!=($225|0);
        $227 = ($49|0)!=(0);
        $or$cond3$i = $226 & $227;
        if ($or$cond3$i) {
         __ZN8UkEngine10markChangeEi($this,$225);
         $228 = ((($this) + (($225*36)|0)|0) + 3152|0);
         HEAP32[$228>>2] = $49;
         __ZN8UkEngine10markChangeEi($this,$47);
         HEAP32[$48>>2] = 0;
        }
        if (!($hookRemoved$0$off0$i)) {
         $$0 = 1;
         STACKTOP = sp;return ($$0|0);
        }
        $229 = (($this) + 24|0);
        HEAP32[$229>>2] = 0;
        (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
        $230 = (($this) + 3121|0);
        HEAP8[$230>>0] = 1;
        $$0 = 1;
        STACKTOP = sp;return ($$0|0);
       } else {
        label = 98;
       }
      } else {
       label = 98;
      }
     } else {
      label = 98;
     }
    } while(0);
    if ((label|0) == 98) {
     $231 = HEAP32[$16>>2]|0;
     $$neg4 = (($12) + 1)|0;
     $232 = (($$neg4) - ($231))|0;
     $233 = ($14>>>0)<(12);
     if ($233) {
      $$0$i1 = 0;$248 = $232;
     } else {
      $434 = $232;
      label = 99;
     }
    }
    do {
     if ((label|0) == 99) {
      $234 = ($9|0)!=(0);
      $235 = ((13896 + (($14*52)|0)|0) + 36|0);
      $236 = HEAP32[$235>>2]|0;
      $237 = ($236|0)==(-1);
      if ($237) {
       $238 = ((13896 + (($14*52)|0)|0) + 44|0);
       $239 = HEAP32[$238>>2]|0;
       $240 = ($239|0)==(-1);
       if (!($240)) {
        if ((($14|0) == 44) | (($14|0) == 66) | (($14|0) == 67)) {
         $$0$i1 = 1;$248 = $434;
         break;
        }
        $$0$i1 = $239;$248 = $434;
        break;
       }
       $241 = (($14) + -48)|0;
       $242 = ($241>>>0)<(22);
       if ($242) {
        $$0$i1 = 1;$248 = $434;
       } else {
        $243 = (($1) + 12|0);
        $244 = HEAP32[$243>>2]|0;
        $245 = ($244|0)==(0);
        if (!($245)) {
         if ((($14|0) == 25) | (($14|0) == 27) | (($14|0) == 40)) {
          $$0$i1 = 1;$248 = $434;
          break;
         }
        }
        $246 = $234&1;
        $$0$i1 = $246;$248 = $434;
       }
      } else {
       $$0$i1 = $236;$248 = $434;
      }
     }
    } while(0);
    $247 = (($$0$i1) + ($248))|0;
    $249 = ((($this) + (($247*36)|0)|0) + 3152|0);
    $250 = HEAP32[$249>>2]|0;
    $251 = ((13896 + (($14*52)|0)|0) + 48|0);
    $252 = HEAP32[$251>>2]|0;
    $253 = ($252|0)==(-1);
    L148: do {
     if ($253) {
      $254 = ((13896 + (($14*52)|0)|0) + 44|0);
      $255 = HEAP32[$254>>2]|0;
      $256 = ($255|0)==(-1);
      if ($256) {
       $257 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
       $$0 = $257;
       STACKTOP = sp;return ($$0|0);
      }
      $258 = (($255) + ($248))|0;
      $259 = ((($this) + (($258*36)|0)|0) + 3156|0);
      $260 = HEAP32[$259>>2]|0;
      $261 = ($260|0)==(25);
      if ($261) {
       $277 = 1;
      } else {
       $262 = ($260|0)==(155);
       $263 = $262 ? 143 : 97;
       $277 = $263;
      }
      $264 = (($1) + 8|0);
      $265 = HEAP32[$264>>2]|0;
      $266 = ($265|0)!=(0);
      $267 = ($258|0)==($6|0);
      $or$cond58 = $266 | $267;
      if (!($or$cond58)) {
       $268 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
       $$0 = $268;
       STACKTOP = sp;return ($$0|0);
      }
      $269 = HEAP32[$ev>>2]|0;
      if ((($269|0) == 6)) {
       $270 = ($260|0)==(155);
       if (!($270)) {
        $271 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
        $$0 = $271;
        STACKTOP = sp;return ($$0|0);
       }
      } else if ((($269|0) == 7)) {
       $272 = ($260|0)==(121);
       if (!($272)) {
        $273 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
        $$0 = $273;
        STACKTOP = sp;return ($$0|0);
       }
      } else if ((($269|0) == 8)) {
       if (!($261)) {
        $274 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
        $$0 = $274;
        STACKTOP = sp;return ($$0|0);
       }
      } else {
       $275 = ($269|0)==(5);
       $or$cond = $275 & $261;
       if ($or$cond) {
        $276 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
        $$0 = $276;
        STACKTOP = sp;return ($$0|0);
       }
      }
      __ZN8UkEngine10markChangeEi($this,$258);
      HEAP32[$259>>2] = $277;
      $278 = (($14) + -48)|0;
      $279 = ($278>>>0)<(22);
      if ($279) {
       $280 = ((($this) + (($248*36)|0)|0) + 3156|0);
       $281 = HEAP32[$280>>2]|0;
       $282 = (($248) + 1)|0;
       $283 = ((($this) + (($282*36)|0)|0) + 3156|0);
       $284 = HEAP32[$283>>2]|0;
       $285 = (($248) + 2)|0;
       $286 = ((($this) + (($285*36)|0)|0) + 3156|0);
       $287 = HEAP32[$286>>2]|0;
       HEAP32[$key$i>>2] = $281;
       $288 = (($key$i) + 4|0);
       HEAP32[$288>>2] = $284;
       $289 = (($key$i) + 8|0);
       HEAP32[$289>>2] = $287;
       $$014$i$i = 18136;$$023$i$i = 70;
       L177: while(1) {
        $290 = $$023$i$i >>> 1;
        $291 = $290 << 4;
        $292 = (($$014$i$i) + ($291)|0);
        $i$01$i$i = 0;
        while(1) {
         $295 = (($key$i) + ($i$01$i$i<<2)|0);
         $296 = HEAP32[$295>>2]|0;
         $297 = (($292) + ($i$01$i$i<<2)|0);
         $298 = HEAP32[$297>>2]|0;
         $299 = ($296|0)<($298|0);
         if ($299) {
          $$0$i1$i2$ph = -1;
          break;
         }
         $300 = ($296|0)>($298|0);
         $294 = (($i$01$i$i) + 1)|0;
         if ($300) {
          $$0$i1$i2$ph = 1;
          break;
         }
         $293 = ($294|0)<(3);
         if ($293) {
          $i$01$i$i = $294;
         } else {
          break L177;
         }
        }
        $301 = ($$023$i$i|0)==(1);
        if ($301) {
         $hookRemoved$0$off0 = 1;$newVs$0$pn = -1;
         break L148;
        }
        $302 = ($$0$i1$i2$ph|0)<(0);
        $303 = (($$023$i$i) - ($290))|0;
        $$$i$i = $302 ? $290 : $303;
        $$01$$i$i = $302 ? $$014$i$i : $292;
        $304 = ($$$i$i|0)==(0);
        if ($304) {
         $hookRemoved$0$off0 = 1;$newVs$0$pn = -1;
         break L148;
        } else {
         $$014$i$i = $$01$$i$i;$$023$i$i = $$$i$i;
        }
       }
       $305 = ($292|0)==(0|0);
       if ($305) {
        $hookRemoved$0$off0 = 1;$newVs$0$pn = -1;
        break;
       }
       $$sum50 = $291 | 12;
       $306 = (($$014$i$i) + ($$sum50)|0);
       $307 = HEAP32[$306>>2]|0;
       $hookRemoved$0$off0 = 1;$newVs$0$pn = $307;
       break;
      }
      $308 = ($17>>>0)<(36);
      $309 = ((($this) + (($248*36)|0)|0) + 3156|0);
      $310 = HEAP32[$309>>2]|0;
      if ($308) {
       $311 = (($248) + 1)|0;
       $312 = ((($this) + (($311*36)|0)|0) + 3156|0);
       $313 = HEAP32[$312>>2]|0;
       HEAP32[$key$i5>>2] = $310;
       $314 = (($key$i5) + 4|0);
       HEAP32[$314>>2] = $313;
       $315 = (($key$i5) + 8|0);
       HEAP32[$315>>2] = -1;
       $$014$i$i6 = 18136;$$023$i$i7 = 70;
       L190: while(1) {
        $316 = $$023$i$i7 >>> 1;
        $317 = $316 << 4;
        $318 = (($$014$i$i6) + ($317)|0);
        $i$01$i$i9 = 0;
        while(1) {
         $321 = (($key$i5) + ($i$01$i$i9<<2)|0);
         $322 = HEAP32[$321>>2]|0;
         $323 = (($318) + ($i$01$i$i9<<2)|0);
         $324 = HEAP32[$323>>2]|0;
         $325 = ($322|0)<($324|0);
         if ($325) {
          $$0$i1$i10$ph = -1;
          break;
         }
         $326 = ($322|0)>($324|0);
         $320 = (($i$01$i$i9) + 1)|0;
         if ($326) {
          $$0$i1$i10$ph = 1;
          break;
         }
         $319 = ($320|0)<(3);
         if ($319) {
          $i$01$i$i9 = $320;
         } else {
          break L190;
         }
        }
        $327 = ($$023$i$i7|0)==(1);
        if ($327) {
         $hookRemoved$0$off0 = 1;$newVs$0$pn = -1;
         break L148;
        }
        $328 = ($$0$i1$i10$ph|0)<(0);
        $329 = (($$023$i$i7) - ($316))|0;
        $$$i$i12 = $328 ? $316 : $329;
        $$01$$i$i13 = $328 ? $$014$i$i6 : $318;
        $330 = ($$$i$i12|0)==(0);
        if ($330) {
         $hookRemoved$0$off0 = 1;$newVs$0$pn = -1;
         break L148;
        } else {
         $$014$i$i6 = $$01$$i$i13;$$023$i$i7 = $$$i$i12;
        }
       }
       $331 = ($318|0)==(0|0);
       if ($331) {
        $hookRemoved$0$off0 = 1;$newVs$0$pn = -1;
        break;
       }
       $$sum49 = $317 | 12;
       $332 = (($$014$i$i6) + ($$sum49)|0);
       $333 = HEAP32[$332>>2]|0;
       $hookRemoved$0$off0 = 1;$newVs$0$pn = $333;
       break;
      } else {
       HEAP32[$key$i18>>2] = $310;
       $334 = (($key$i18) + 4|0);
       HEAP32[$334>>2] = -1;
       $335 = (($key$i18) + 8|0);
       HEAP32[$335>>2] = -1;
       $$014$i$i19 = 18136;$$023$i$i20 = 70;
       L201: while(1) {
        $336 = $$023$i$i20 >>> 1;
        $337 = $336 << 4;
        $338 = (($$014$i$i19) + ($337)|0);
        $i$01$i$i22 = 0;
        while(1) {
         $341 = (($key$i18) + ($i$01$i$i22<<2)|0);
         $342 = HEAP32[$341>>2]|0;
         $343 = (($338) + ($i$01$i$i22<<2)|0);
         $344 = HEAP32[$343>>2]|0;
         $345 = ($342|0)<($344|0);
         if ($345) {
          $$0$i1$i23$ph = -1;
          break;
         }
         $346 = ($342|0)>($344|0);
         $340 = (($i$01$i$i22) + 1)|0;
         if ($346) {
          $$0$i1$i23$ph = 1;
          break;
         }
         $339 = ($340|0)<(3);
         if ($339) {
          $i$01$i$i22 = $340;
         } else {
          break L201;
         }
        }
        $347 = ($$023$i$i20|0)==(1);
        if ($347) {
         $hookRemoved$0$off0 = 1;$newVs$0$pn = -1;
         break L148;
        }
        $348 = ($$0$i1$i23$ph|0)<(0);
        $349 = (($$023$i$i20) - ($336))|0;
        $$$i$i25 = $348 ? $336 : $349;
        $$01$$i$i26 = $348 ? $$014$i$i19 : $338;
        $350 = ($$$i$i25|0)==(0);
        if ($350) {
         $hookRemoved$0$off0 = 1;$newVs$0$pn = -1;
         break L148;
        } else {
         $$014$i$i19 = $$01$$i$i26;$$023$i$i20 = $$$i$i25;
        }
       }
       $351 = ($338|0)==(0|0);
       if ($351) {
        $hookRemoved$0$off0 = 1;$newVs$0$pn = -1;
        break;
       }
       $$sum48 = $337 | 12;
       $352 = (($$014$i$i19) + ($$sum48)|0);
       $353 = HEAP32[$352>>2]|0;
       $hookRemoved$0$off0 = 1;$newVs$0$pn = $353;
       break;
      }
     } else {
      $354 = HEAP32[$ev>>2]|0;
      if ((($354|0) == 6)) {
       $355 = ((13896 + (($252*52)|0)|0) + 44|0);
       $356 = HEAP32[$355>>2]|0;
       $357 = (((13896 + (($252*52)|0)|0) + ($356<<2)|0) + 12|0);
       $358 = HEAP32[$357>>2]|0;
       $359 = ($358|0)==(155);
       if (!($359)) {
        $360 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
        $$0 = $360;
        STACKTOP = sp;return ($$0|0);
       }
      } else if ((($354|0) == 7)) {
       $361 = ((13896 + (($252*52)|0)|0) + 44|0);
       $362 = HEAP32[$361>>2]|0;
       $363 = (((13896 + (($252*52)|0)|0) + ($362<<2)|0) + 12|0);
       $364 = HEAP32[$363>>2]|0;
       $365 = ($364|0)==(121);
       if (!($365)) {
        $366 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
        $$0 = $366;
        STACKTOP = sp;return ($$0|0);
       }
      } else if ((($354|0) == 8)) {
       $367 = ((13896 + (($252*52)|0)|0) + 44|0);
       $368 = HEAP32[$367>>2]|0;
       $369 = (((13896 + (($252*52)|0)|0) + ($368<<2)|0) + 12|0);
       $370 = HEAP32[$369>>2]|0;
       $371 = ($370|0)==(25);
       if (!($371)) {
        $372 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
        $$0 = $372;
        STACKTOP = sp;return ($$0|0);
       }
      } else if ((($354|0) == 5)) {
       $373 = ((13896 + (($252*52)|0)|0) + 44|0);
       $374 = HEAP32[$373>>2]|0;
       $375 = (((13896 + (($252*52)|0)|0) + ($374<<2)|0) + 12|0);
       $376 = HEAP32[$375>>2]|0;
       $377 = ($376|0)==(25);
       if ($377) {
        $378 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
        $$0 = $378;
        STACKTOP = sp;return ($$0|0);
       }
      }
      $379 = ((($this) + (($6*36)|0)|0) + 3132|0);
      $380 = HEAP32[$379>>2]|0;
      $381 = ($380|0)==(-1);
      if ($381) {
       $c1$0 = -1;
      } else {
       $382 = (($6) - ($380))|0;
       $383 = ((($this) + (($382*36)|0)|0) + 3144|0);
       $384 = HEAP32[$383>>2]|0;
       $c1$0 = $384;
      }
      $385 = ((($this) + (($6*36)|0)|0) + 3140|0);
      $386 = HEAP32[$385>>2]|0;
      $387 = ($386|0)==(-1);
      if ($387) {
       $c2$0 = -1;
      } else {
       $388 = (($6) - ($386))|0;
       $389 = ((($this) + (($388*36)|0)|0) + 3144|0);
       $390 = HEAP32[$389>>2]|0;
       $c2$0 = $390;
      }
      $391 = (__Z10isValidCVC6ConSeq8VowelSeqS_($c1$0,$252,$c2$0)|0);
      if (!($391)) {
       $392 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
       $$0 = $392;
       STACKTOP = sp;return ($$0|0);
      }
      $393 = ((13896 + (($252*52)|0)|0) + 44|0);
      $394 = HEAP32[$393>>2]|0;
      $395 = (($394) + ($248))|0;
      $396 = (($1) + 8|0);
      $397 = HEAP32[$396>>2]|0;
      $398 = ($397|0)!=(0);
      $399 = ($395|0)==($6|0);
      $or$cond59 = $398 | $399;
      if ($or$cond59) {
       __ZN8UkEngine10markChangeEi($this,$395);
       $401 = (((13896 + (($252*52)|0)|0) + ($394<<2)|0) + 12|0);
       $402 = HEAP32[$401>>2]|0;
       $403 = ((($this) + (($395*36)|0)|0) + 3156|0);
       HEAP32[$403>>2] = $402;
       $hookRemoved$0$off0 = 0;$newVs$0$pn = $252;
       break;
      }
      $400 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
      $$0 = $400;
      STACKTOP = sp;return ($$0|0);
     }
    } while(0);
    $404 = (13896 + (($newVs$0$pn*52)|0)|0);
    $405 = HEAP32[$404>>2]|0;
    $i$05 = 0;
    while(1) {
     $406 = (((13896 + (($newVs$0$pn*52)|0)|0) + ($i$05<<2)|0) + 24|0);
     $407 = HEAP32[$406>>2]|0;
     $408 = (($i$05) + ($248))|0;
     $409 = ((($this) + (($408*36)|0)|0) + 3144|0);
     HEAP32[$409>>2] = $407;
     $410 = (($i$05) + 1)|0;
     $411 = ($410|0)<($405|0);
     if ($411) {
      $i$05 = $410;
     } else {
      break;
     }
    }
    $412 = HEAP32[$5>>2]|0;
    $413 = ($12|0)!=($412|0);
    $414 = ($newVs$0$pn>>>0)<(12);
    do {
     if ($414) {
      $$0$i31 = 0;
     } else {
      $415 = ((13896 + (($newVs$0$pn*52)|0)|0) + 36|0);
      $416 = HEAP32[$415>>2]|0;
      $417 = ($416|0)==(-1);
      if ($417) {
       $418 = ((13896 + (($newVs$0$pn*52)|0)|0) + 44|0);
       $419 = HEAP32[$418>>2]|0;
       $420 = ($419|0)==(-1);
       if (!($420)) {
        if ((($newVs$0$pn|0) == 44) | (($newVs$0$pn|0) == 66) | (($newVs$0$pn|0) == 67)) {
         $$0$i31 = 1;
         break;
        }
        $$0$i31 = $419;
        break;
       }
       $421 = (($newVs$0$pn) + -48)|0;
       $422 = ($421>>>0)<(22);
       if ($422) {
        $$0$i31 = 1;
       } else {
        $423 = HEAP32[$0>>2]|0;
        $424 = (($423) + 12|0);
        $425 = HEAP32[$424>>2]|0;
        $426 = ($425|0)==(0);
        if (!($426)) {
         if ((($newVs$0$pn|0) == 25) | (($newVs$0$pn|0) == 27) | (($newVs$0$pn|0) == 40)) {
          $$0$i31 = 1;
          break;
         }
        }
        $427 = $413&1;
        $$0$i31 = $427;
       }
      } else {
       $$0$i31 = $416;
      }
     }
    } while(0);
    $428 = (($$0$i31) + ($248))|0;
    $429 = ($247|0)!=($428|0);
    $430 = ($250|0)!=(0);
    $or$cond3 = $429 & $430;
    if ($or$cond3) {
     __ZN8UkEngine10markChangeEi($this,$428);
     $431 = ((($this) + (($428*36)|0)|0) + 3152|0);
     HEAP32[$431>>2] = $250;
     __ZN8UkEngine10markChangeEi($this,$247);
     HEAP32[$249>>2] = 0;
    }
    if (!($hookRemoved$0$off0)) {
     $$0 = 1;
     STACKTOP = sp;return ($$0|0);
    }
    $432 = (($this) + 24|0);
    HEAP32[$432>>2] = 0;
    (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
    $433 = (($this) + 3121|0);
    HEAP8[$433>>0] = 1;
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
  }
 }
 $11 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
 $$0 = $11;
 STACKTOP = sp;return ($$0|0);
}
function __ZN8UkEngine9processDdER10UkKeyEvent($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if (!($4)) {
  $5 = (($this) + 20|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)<(0);
  if (!($7)) {
   $9 = ((($this) + (($6*36)|0)|0) + 3128|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0);
   do {
    if ($11) {
     $12 = ((($this) + (($6*36)|0)|0) + 3156|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ($13|0)==(41);
     if ($14) {
      $15 = (($6) + -1)|0;
      $16 = ((($this) + (($15*36)|0)|0) + 3156|0);
      $17 = HEAP32[$16>>2]|0;
      $18 = ($17|0)==(-1);
      if (!($18)) {
       $19 = (12648 + ($17)|0);
       $20 = HEAP8[$19>>0]|0;
       $21 = ($20<<24>>24)==(0);
       if (!($21)) {
        break;
       }
      }
      $22 = (($this) + 24|0);
      HEAP32[$22>>2] = 1;
      __ZN8UkEngine10markChangeEi($this,$6);
      $23 = ((($this) + (($6*36)|0)|0) + 3144|0);
      HEAP32[$23>>2] = 4;
      HEAP32[$12>>2] = 43;
      HEAP32[$9>>2] = 2;
      $24 = ((($this) + (($6*36)|0)|0) + 3132|0);
      HEAP32[$24>>2] = 0;
      $25 = ((($this) + (($6*36)|0)|0) + 3140|0);
      HEAP32[$25>>2] = -1;
      $26 = ((($this) + (($6*36)|0)|0) + 3136|0);
      HEAP32[$26>>2] = -1;
      $$0 = 1;
      STACKTOP = sp;return ($$0|0);
     }
    }
   } while(0);
   $27 = ((($this) + (($6*36)|0)|0) + 3132|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($28|0)<(0);
   if ($29) {
    $30 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
    $$0 = $30;
    STACKTOP = sp;return ($$0|0);
   }
   $31 = (($6) - ($28))|0;
   $32 = (($1) + 8|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ($33|0)!=(0);
   $35 = ($28|0)==(0);
   $or$cond = $34 | $35;
   if (!($or$cond)) {
    $36 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
    $$0 = $36;
    STACKTOP = sp;return ($$0|0);
   }
   $37 = ((($this) + (($31*36)|0)|0) + 3144|0);
   $38 = HEAP32[$37>>2]|0;
   if ((($38|0) == 3)) {
    __ZN8UkEngine10markChangeEi($this,$31);
    HEAP32[$37>>2] = 4;
    $39 = ((($this) + (($31*36)|0)|0) + 3156|0);
    HEAP32[$39>>2] = 43;
    $40 = (($this) + 24|0);
    HEAP32[$40>>2] = 1;
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   } else if ((($38|0) == 4)) {
    __ZN8UkEngine10markChangeEi($this,$31);
    HEAP32[$37>>2] = 3;
    $41 = ((($this) + (($31*36)|0)|0) + 3156|0);
    HEAP32[$41>>2] = 41;
    $42 = (($this) + 24|0);
    HEAP32[$42>>2] = 0;
    (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
    $43 = (($this) + 3121|0);
    HEAP8[$43>>0] = 1;
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   } else {
    $44 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
    $$0 = $44;
    STACKTOP = sp;return ($$0|0);
   }
  }
 }
 $8 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
 $$0 = $8;
 STACKTOP = sp;return ($$0|0);
}
function __ZN8UkEngine11processToneER10UkKeyEvent($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $$0 = 0, $$0$i = 0, $$neg10 = 0, $$off6 = 0, $$off8 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $not$ = 0, $or$cond = 0, $switch = 0, $switch7 = 0, $switch9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 20|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)<(0);
 if (!($2)) {
  $3 = (($this) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($4) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)==(0);
  if (!($7)) {
   $9 = ((($this) + (($1*36)|0)|0) + 3128|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(2);
   if ($11) {
    $12 = ((($this) + (($1*36)|0)|0) + 3144|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = $13 & -2;
    $switch = ($14|0)==(8);
    if ($switch) {
     $not$ = ($13|0)!=(8);
     $15 = $not$ << 31 >> 31;
     $16 = (($15) + ($1))|0;
     $17 = ((($this) + (($16*36)|0)|0) + 3152|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = ($18|0)==(0);
     $20 = (($ev) + 16|0);
     if ($19) {
      $21 = HEAP32[$20>>2]|0;
      $22 = ($21|0)==(0);
      if ($22) {
       $23 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
       $$0 = $23;
       STACKTOP = sp;return ($$0|0);
      } else {
       $$pre$phiZ2D = $20;
      }
     } else {
      $$pre$phiZ2D = $20;
     }
     __ZN8UkEngine10markChangeEi($this,$16);
     $24 = HEAP32[$17>>2]|0;
     $25 = HEAP32[$$pre$phiZ2D>>2]|0;
     $26 = ($24|0)==($25|0);
     if ($26) {
      HEAP32[$17>>2] = 0;
      $27 = (($this) + 24|0);
      HEAP32[$27>>2] = 0;
      (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
      $28 = (($this) + 3121|0);
      HEAP8[$28>>0] = 1;
      $$0 = 1;
      STACKTOP = sp;return ($$0|0);
     } else {
      HEAP32[$17>>2] = $25;
      $$0 = 1;
      STACKTOP = sp;return ($$0|0);
     }
    }
   }
   $29 = ((($this) + (($1*36)|0)|0) + 3136|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ($30|0)<(0);
   if ($31) {
    $32 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
    $$0 = $32;
    STACKTOP = sp;return ($$0|0);
   }
   $33 = (($1) - ($30))|0;
   $34 = ((($this) + (($33*36)|0)|0) + 3144|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = (($4) + 36|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = ($37|0)==(0);
   if (!($38)) {
    $39 = (($4) + 8|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = ($40|0)==(0);
    if ($41) {
     $42 = ((13896 + (($35*52)|0)|0) + 4|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = ($43|0)==(0);
     if ($44) {
      $45 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
      $$0 = $45;
      STACKTOP = sp;return ($$0|0);
     }
    }
   }
   $$off6 = (($10) + -5)|0;
   $switch7 = ($$off6>>>0)<(2);
   if ($switch7) {
    $46 = ((($this) + (($1*36)|0)|0) + 3144|0);
    $47 = HEAP32[$46>>2]|0;
    if ((($47|0) == 1) | (($47|0) == 2) | (($47|0) == 19) | (($47|0) == 25)) {
     $48 = (($ev) + 16|0);
     $49 = HEAP32[$48>>2]|0;
     $$off8 = (($49) + -2)|0;
     $switch9 = ($$off8>>>0)<(3);
     if ($switch9) {
      $50 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
      $$0 = $50;
      STACKTOP = sp;return ($$0|0);
     }
    }
   }
   $51 = ($30|0)!=(0);
   $52 = ($35>>>0)<(12);
   do {
    if ($52) {
     $$0$i = 0;
    } else {
     $53 = ((13896 + (($35*52)|0)|0) + 36|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==(-1);
     if ($55) {
      $56 = ((13896 + (($35*52)|0)|0) + 44|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = ($57|0)==(-1);
      if (!($58)) {
       if ((($35|0) == 44) | (($35|0) == 66) | (($35|0) == 67)) {
        $$0$i = 1;
        break;
       }
       $$0$i = $57;
       break;
      }
      $59 = (($35) + -48)|0;
      $60 = ($59>>>0)<(22);
      if ($60) {
       $$0$i = 1;
      } else {
       $61 = (($4) + 12|0);
       $62 = HEAP32[$61>>2]|0;
       $63 = ($62|0)==(0);
       if (!($63)) {
        if ((($35|0) == 25) | (($35|0) == 27) | (($35|0) == 40)) {
         $$0$i = 1;
         break;
        }
       }
       $64 = $51&1;
       $$0$i = $64;
      }
     } else {
      $$0$i = $54;
     }
    }
   } while(0);
   $65 = (13896 + (($35*52)|0)|0);
   $66 = HEAP32[$65>>2]|0;
   $$neg10 = (($33) + 1)|0;
   $67 = (($$neg10) + ($$0$i))|0;
   $68 = (($67) - ($66))|0;
   $69 = ((($this) + (($68*36)|0)|0) + 3152|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ($70|0)==(0);
   $72 = (($ev) + 16|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = ($73|0)==(0);
   $or$cond = $71 & $74;
   if ($or$cond) {
    $75 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
    $$0 = $75;
    STACKTOP = sp;return ($$0|0);
   }
   $76 = ($70|0)==($73|0);
   __ZN8UkEngine10markChangeEi($this,$68);
   if ($76) {
    HEAP32[$69>>2] = 0;
    $77 = (($this) + 24|0);
    HEAP32[$77>>2] = 0;
    (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
    $78 = (($this) + 3121|0);
    HEAP8[$78>>0] = 1;
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   } else {
    $79 = (($ev) + 16|0);
    $80 = HEAP32[$79>>2]|0;
    HEAP32[$69>>2] = $80;
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
  }
 }
 $8 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
 $$0 = $8;
 STACKTOP = sp;return ($$0|0);
}
function __ZN8UkEngine13processTelexWER10UkKeyEvent($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $$0 = 0, $$0$i = 0, $$0$i1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $capsLockOn = 0, $shiftPressed = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $capsLockOn = sp + 4|0;
 $shiftPressed = sp;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if ($4) {
  $5 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
  $$0 = $5;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$capsLockOn>>2] = 0;
 HEAP32[$shiftPressed>>2] = 0;
 $6 = HEAP32[$this>>2]|0;
 $7 = ($6|0)==(0|0);
 if (!($7)) {
  FUNCTION_TABLE_vii[$6 & 63]($shiftPressed,$capsLockOn);
 }
 $8 = HEAP8[21184>>0]|0;
 $9 = ($8<<24>>24)==(0);
 if ($9) {
  HEAP32[$ev>>2] = 4;
  HEAP8[21184>>0] = 0;
  $30 = (__ZN8UkEngine11processHookER10UkKeyEvent($this,$ev)|0);
  $31 = ($30|0)==(0);
  if (!($31)) {
   $$0 = $30;
   STACKTOP = sp;return ($$0|0);
  }
  $32 = (($this) + 20|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = ($33|0)>(-1);
  if ($34) {
   $35 = (($33) + -1)|0;
   HEAP32[$32>>2] = $35;
  }
  HEAP32[$ev>>2] = 17;
  $36 = (($ev) + 12|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = (($37) + -65)|0;
  $39 = ($38>>>0)<(26);
  $40 = $39 ? 154 : 155;
  $41 = (($ev) + 8|0);
  HEAP32[$41>>2] = $40;
  $42 = HEAP32[$capsLockOn>>2]|0;
  $43 = ($42|0)==(0);
  if (!($43)) {
   $44 = $40 & 1;
   $45 = ($44|0)==(0);
   $46 = (($40) + -1)|0;
   $47 = (($40) + 1)|0;
   $$0$i1 = $45 ? $47 : $46;
   HEAP32[$41>>2] = $$0$i1;
  }
  $48 = (($ev) + 4|0);
  HEAP32[$48>>2] = 0;
  HEAP8[21184>>0] = 1;
  $49 = (__ZN8UkEngine14processMapCharER10UkKeyEvent($this,$ev)|0);
  $$0 = $49;
  STACKTOP = sp;return ($$0|0);
 } else {
  HEAP32[$ev>>2] = 17;
  $10 = (($ev) + 12|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + -65)|0;
  $13 = ($12>>>0)<(26);
  $14 = $13 ? 154 : 155;
  $15 = (($ev) + 8|0);
  HEAP32[$15>>2] = $14;
  $16 = HEAP32[$capsLockOn>>2]|0;
  $17 = ($16|0)==(0);
  if (!($17)) {
   $18 = $14 & 1;
   $19 = ($18|0)==(0);
   $20 = (($14) + -1)|0;
   $21 = (($14) + 1)|0;
   $$0$i = $19 ? $21 : $20;
   HEAP32[$15>>2] = $$0$i;
  }
  $22 = (($ev) + 4|0);
  HEAP32[$22>>2] = 0;
  $23 = (__ZN8UkEngine14processMapCharER10UkKeyEvent($this,$ev)|0);
  $24 = ($23|0)==(0);
  if (!($24)) {
   $$0 = $23;
   STACKTOP = sp;return ($$0|0);
  }
  $25 = (($this) + 20|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ($26|0)>(-1);
  if ($27) {
   $28 = (($26) + -1)|0;
   HEAP32[$25>>2] = $28;
  }
  HEAP8[21184>>0] = 0;
  HEAP32[$ev>>2] = 4;
  $29 = (__ZN8UkEngine11processHookER10UkKeyEvent($this,$ev)|0);
  $$0 = $29;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZN8UkEngine14processMapCharER10UkKeyEvent($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $$ = 0, $$0 = 0, $$0$i = 0, $$0$i1 = 0, $$0$i3 = 0, $$off = 0, $$pr = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $capsLockOn = 0, $not$ = 0, $or$cond = 0, $shiftPressed = 0, $switch = 0, $switch1 = 0, $switch2 = 0, $undo$0$off0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $capsLockOn = sp + 4|0;
 $shiftPressed = sp;
 HEAP32[$capsLockOn>>2] = 0;
 HEAP32[$shiftPressed>>2] = 0;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  FUNCTION_TABLE_vii[$0 & 63]($shiftPressed,$capsLockOn);
  $$pr = HEAP32[$capsLockOn>>2]|0;
  $2 = ($$pr|0)==(0);
  if (!($2)) {
   $3 = (($ev) + 8|0);
   $4 = HEAP32[$3>>2]|0;
   $5 = ($4|0)==(-1);
   do {
    if ($5) {
     $$0$i = -1;
    } else {
     $6 = $4 & 1;
     $7 = ($6|0)==(0);
     if ($7) {
      $8 = (($4) + 1)|0;
      $$0$i = $8;
      break;
     } else {
      $9 = (($4) + -1)|0;
      $$0$i = $9;
      break;
     }
    }
   } while(0);
   HEAP32[$3>>2] = $$0$i;
  }
 }
 $10 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
 $11 = (($this) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0);
 if ($15) {
  $$0 = $10;
  STACKTOP = sp;return ($$0|0);
 }
 $16 = (($this) + 20|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($17|0)>(-1);
 if (!($18)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $19 = ((($this) + (($17*36)|0)|0) + 3128|0);
 $20 = HEAP32[$19>>2]|0;
 $switch = ($20>>>0)<(2);
 if (!($switch)) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $21 = (($17) + -1)|0;
 HEAP32[$16>>2] = $21;
 $22 = ((($this) + (($21*36)|0)|0) + 3128|0);
 $23 = HEAP32[$22>>2]|0;
 $switch1 = ($23>>>0)<(2);
 do {
  if ($switch1) {
   $undo$0$off0 = 0;
  } else {
   $24 = ((($this) + (($21*36)|0)|0) + 3156|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ((($this) + (($21*36)|0)|0) + 3148|0);
   $27 = HEAP32[$26>>2]|0;
   $not$ = ($27|0)!=(0);
   $28 = $not$ << 31 >> 31;
   $$ = (($28) + ($25))|0;
   $29 = (($ev) + 8|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ($$|0)==($30|0);
   if ($31) {
    $32 = ($23|0)==(2);
    if ($32) {
     __ZN8UkEngine10markChangeEi($this,$21);
     $83 = HEAP32[$16>>2]|0;
     $84 = (($83) + -1)|0;
     HEAP32[$16>>2] = $84;
     $undo$0$off0 = 1;
     break;
    }
    $33 = ((($this) + (($21*36)|0)|0) + 3136|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (($21) - ($34))|0;
    $36 = ((($this) + (($35*36)|0)|0) + 3144|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = (13896 + (($37*52)|0)|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (($35) - ($39))|0;
    $41 = (($40) + 1)|0;
    $42 = ($34|0)!=(0);
    $43 = ($37>>>0)<(12);
    do {
     if ($43) {
      $$0$i1 = 0;
     } else {
      $44 = ((13896 + (($37*52)|0)|0) + 36|0);
      $45 = HEAP32[$44>>2]|0;
      $46 = ($45|0)==(-1);
      if ($46) {
       $47 = ((13896 + (($37*52)|0)|0) + 44|0);
       $48 = HEAP32[$47>>2]|0;
       $49 = ($48|0)==(-1);
       if (!($49)) {
        if ((($37|0) == 44) | (($37|0) == 66) | (($37|0) == 67)) {
         $$0$i1 = 1;
         break;
        }
        $$0$i1 = $48;
        break;
       }
       $50 = (($37) + -48)|0;
       $51 = ($50>>>0)<(22);
       if ($51) {
        $$0$i1 = 1;
       } else {
        $52 = (($12) + 12|0);
        $53 = HEAP32[$52>>2]|0;
        $54 = ($53|0)==(0);
        if (!($54)) {
         if ((($37|0) == 25) | (($37|0) == 27) | (($37|0) == 40)) {
          $$0$i1 = 1;
          break;
         }
        }
        $55 = $42&1;
        $$0$i1 = $55;
       }
      } else {
       $$0$i1 = $45;
      }
     }
    } while(0);
    $56 = (($41) + ($$0$i1))|0;
    $57 = ((($this) + (($56*36)|0)|0) + 3152|0);
    $58 = HEAP32[$57>>2]|0;
    __ZN8UkEngine10markChangeEi($this,$21);
    $59 = HEAP32[$16>>2]|0;
    $60 = (($59) + -1)|0;
    HEAP32[$16>>2] = $60;
    $61 = ($58|0)!=(0);
    $62 = ($59|0)>(0);
    $or$cond = $61 & $62;
    if ($or$cond) {
     $63 = ((($this) + (($60*36)|0)|0) + 3128|0);
     $64 = HEAP32[$63>>2]|0;
     $$off = (($64) + -3)|0;
     $switch2 = ($$off>>>0)<(2);
     if ($switch2) {
      $65 = ((($this) + (($60*36)|0)|0) + 3144|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ($66>>>0)<(12);
      do {
       if ($67) {
        $$0$i3 = 0;
       } else {
        $68 = ((13896 + (($66*52)|0)|0) + 36|0);
        $69 = HEAP32[$68>>2]|0;
        $70 = ($69|0)==(-1);
        if ($70) {
         $71 = ((13896 + (($66*52)|0)|0) + 44|0);
         $72 = HEAP32[$71>>2]|0;
         $73 = ($72|0)==(-1);
         if (!($73)) {
          if ((($66|0) == 44) | (($66|0) == 66) | (($66|0) == 67)) {
           $$0$i3 = 1;
           break;
          }
          $$0$i3 = $72;
          break;
         }
         $74 = (($66) + -48)|0;
         $75 = ($74>>>0)<(22);
         if ($75) {
          $$0$i3 = 1;
         } else {
          $76 = HEAP32[$11>>2]|0;
          $77 = (($76) + 12|0);
          $78 = HEAP32[$77>>2]|0;
          $79 = ($78|0)==(0);
          if (!($79)) {
           if ((($66|0) == 25) | (($66|0) == 27) | (($66|0) == 40)) {
            $$0$i3 = 1;
            break;
           }
          }
          $$0$i3 = 0;
         }
        } else {
         $$0$i3 = $69;
        }
       }
      } while(0);
      $80 = (($$0$i3) + ($41))|0;
      $81 = ($80|0)==($56|0);
      if ($81) {
       $undo$0$off0 = 1;
      } else {
       __ZN8UkEngine10markChangeEi($this,$80);
       $82 = ((($this) + (($80*36)|0)|0) + 3152|0);
       HEAP32[$82>>2] = $58;
       __ZN8UkEngine10markChangeEi($this,$56);
       HEAP32[$57>>2] = 0;
       $undo$0$off0 = 1;
      }
     } else {
      $undo$0$off0 = 1;
     }
    } else {
     $undo$0$off0 = 1;
    }
   } else {
    $undo$0$off0 = 0;
   }
  }
 } while(0);
 HEAP32[$ev>>2] = 19;
 $85 = (($ev) + 12|0);
 $86 = HEAP32[$85>>2]|0;
 $87 = ($86>>>0)>(255);
 if ($87) {
  $88 = (($ev) + 4|0);
  HEAP32[$88>>2] = 2;
  $95 = -1;
 } else {
  $89 = (9608 + ($86<<2)|0);
  $90 = HEAP32[$89>>2]|0;
  $91 = (($ev) + 4|0);
  HEAP32[$91>>2] = $90;
  $92 = (10896 + ($86<<2)|0);
  $93 = HEAP32[$92>>2]|0;
  $95 = $93;
 }
 $94 = (($ev) + 8|0);
 HEAP32[$94>>2] = $95;
 $96 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
 if (!($undo$0$off0)) {
  $$0 = $96;
  STACKTOP = sp;return ($$0|0);
 }
 $97 = (($this) + 24|0);
 HEAP32[$97>>2] = 0;
 $98 = (($this) + 3121|0);
 HEAP8[$98>>0] = 1;
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN8UkEngine14processEscCharER10UkKeyEvent($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if (!($4)) {
  $5 = (($this) + 20|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)>(-1);
  if ($7) {
   $8 = ((($this) + (($6*36)|0)|0) + 3128|0);
   $9 = HEAP32[$8>>2]|0;
   $switch = ($9>>>0)<(2);
   if (!($switch)) {
    $10 = (($this) + 3108|0);
    HEAP8[$10>>0] = 1;
   }
  }
 }
 $11 = (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
 STACKTOP = sp;return ($11|0);
}
function __ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev) {
 $this = $this|0;
 $ev = $ev|0;
 var $$$i = 0, $$$i$i$i = 0, $$$i$i10$i = 0, $$$i$i23$i = 0, $$$i$i37$i = 0, $$$i$i52$i = 0, $$$i1 = 0, $$0 = 0, $$0$i$i$i9 = 0, $$0$i$i1$i = 0, $$0$i$i10 = 0, $$0$i$i2 = 0, $$0$i1$i = 0, $$0$i1$i$i$ph = 0, $$0$i1$i21$i$ph = 0, $$0$i1$i35$i$ph = 0, $$0$i1$i50$i$ph = 0, $$0$i1$i8$i$ph = 0, $$0$i14$i = 0, $$0$i2$i$i = 0;
 var $$0$i27$i = 0, $$0$i29$i = 0, $$0$i4 = 0, $$0$i4$i = 0, $$0$i43$i = 0, $$0$i5 = 0, $$0$i58$i = 0, $$01$$i$i$i = 0, $$01$$i$i11$i = 0, $$01$$i$i24$i = 0, $$01$$i$i38$i = 0, $$01$$i$i53$i = 0, $$014$i$i$i = 0, $$014$i$i17$i = 0, $$014$i$i31$i = 0, $$014$i$i4$i = 0, $$014$i$i46$i = 0, $$023$i$i$i = 0, $$023$i$i18$i = 0, $$023$i$i32$i = 0;
 var $$023$i$i47$i = 0, $$023$i$i5$i = 0, $$2$i = 0, $$off$i = 0, $$off$i$i = 0, $$off$i2$i = 0, $$off19$i$i = 0, $$off2$i = 0, $$off3$i = 0, $$pr$i$i = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre27 = 0, $$pre28 = 0, $$pre29 = 0, $$pre30 = 0, $$sum$i = 0, $$sum31 = 0, $$sum32 = 0, $$sum33 = 0;
 var $$sum34 = 0, $$sum35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0;
 var $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0;
 var $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0;
 var $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0;
 var $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0;
 var $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0;
 var $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0;
 var $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0;
 var $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c1$0$i$i = 0, $capsLockOn$i$i = 0, $ch$off$i$i$i = 0, $ch$off$i1$i$i = 0, $escape$0$i = 0, $escape$06$i = 0, $ev$idx12 = 0, $ev$idx12$val = 0, $ev$idx14 = 0, $ev$idx14$val = 0;
 var $exitcond$i$i = 0, $i$0$lcssa$i65$i = 0, $i$01$i$i$i = 0, $i$01$i$i20$i = 0, $i$01$i$i34$i = 0, $i$01$i$i49$i = 0, $i$01$i$i7$i = 0, $i$04$i$i = 0, $i$04$i63$i = 0, $i$051$i$i = 0, $i$1$neg$i$i = 0, $i$1$neg32$i$i = 0, $i$1$neg38$i$i = 0, $i$1$neg40$i$i = 0, $i$128$i$i = 0, $i$139$i$i = 0, $i$218$i$i = 0, $i$322$i$i = 0, $i$420$i$i = 0, $inLen$i$i = 0;
 var $indvars$iv$i$i = 0, $indvars$iv$next$i$i = 0, $j$046$i$i = 0, $key$i$i6 = 0, $key$i30$i = 0, $key$i45$i = 0, $macroCase$023$i$i = 0, $macroCase$1$i$i = 0, $macroCase$2$i$i = 0, $maxOutSize$i$i = 0, $newVs$0$i = 0, $not$$i$i = 0, $not$$i62$i = 0, $not$3$i$i = 0, $not$3$i61$i = 0, $not$or$cond$i$i$i = 0, $notlhs$i$i$i = 0, $notrhs$i$i$i = 0, $or$cond = 0, $or$cond$i = 0;
 var $or$cond$i$i = 0, $or$cond$i$i$i = 0, $or$cond$not$i$i = 0, $or$cond10$i$i = 0, $or$cond11$not$i$i = 0, $or$cond13$i$i = 0, $or$cond3 = 0, $or$cond4$i = 0, $or$cond7$i = 0, $or$cond7$i$i = 0, $outSize$0$i$i = 0, $outSize$i = 0, $pKeyStart$017$i$i = 0, $pMacText$216$i$i = 0, $phitmp = 0, $phitmp$i = 0, $shiftPressed$i$i = 0, $storemerge$i$i = 0, $switch$cast$i = 0, $switch$cast$i$clear = 0;
 var $switch$downshift$i = 0, $switch$i$i = 0, $switch$masked$i = 0, $vnChar$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $capsLockOn$i$i = sp + 120|0;
 $shiftPressed$i$i = sp + 80|0;
 $key$i$i6 = sp + 4|0;
 $maxOutSize$i$i = sp + 72|0;
 $inLen$i$i = sp + 136|0;
 $vnChar$i$i = sp;
 $outSize$i = sp + 76|0;
 $key$i45$i = sp + 104|0;
 $key$i30$i = sp + 88|0;
 $0 = (($ev) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 if ((($1|0) == 1)) {
  $6 = (($this) + 24|0);
  HEAP32[$6>>2] = 0;
  $7 = (($this) + 4|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = (($8) + 16|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0);
  if ($11) {
   $147 = $8;
  } else {
   HEAP32[$capsLockOn$i$i>>2] = 0;
   HEAP32[$shiftPressed$i$i>>2] = 0;
   $12 = HEAP32[$this>>2]|0;
   $13 = ($12|0)==(0|0);
   if ($13) {
    label = 7;
   } else {
    FUNCTION_TABLE_vii[$12 & 63]($shiftPressed$i$i,$capsLockOn$i$i);
    $$pr$i$i = HEAP32[$shiftPressed$i$i>>2]|0;
    $14 = ($$pr$i$i|0)==(0);
    if ($14) {
     label = 7;
    } else {
     $15 = (($ev) + 12|0);
     $16 = HEAP32[$15>>2]|0;
     if (!((($16|0) == 13) | (($16|0) == 32))) {
      label = 7;
     }
    }
   }
   L8: do {
    if ((label|0) == 7) {
     $17 = (($this) + 20|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = ($18|0)>(-1);
     if ($19) {
      $20 = (($key$i$i6) + 4|0);
      $23 = $18;$i$051$i$i = $18;
      while(1) {
       $21 = (1 - ($i$051$i$i))|0;
       $22 = (($21) + ($23))|0;
       $24 = ($22|0)<(16);
       if (!($24)) {
        break L8;
       }
       $i$1$neg38$i$i = (0 - ($i$051$i$i))|0;
       $25 = ($i$051$i$i|0)>(-1);
       L14: do {
        if ($25) {
         $i$1$neg40$i$i = $i$1$neg38$i$i;$i$139$i$i = $i$051$i$i;
         while(1) {
          $27 = ((($this) + (($i$139$i$i*36)|0)|0) + 3128|0);
          $28 = HEAP32[$27>>2]|0;
          $29 = ($28|0)==(1);
          if ($29) {
           break;
          }
          $30 = (($i$1$neg40$i$i) + 1)|0;
          $31 = (($30) + ($23))|0;
          $32 = ($31|0)<(16);
          $33 = (($i$139$i$i) + -1)|0;
          if (!($32)) {
           break L8;
          }
          $i$1$neg$i$i = (1 - ($i$139$i$i))|0;
          $26 = ($i$139$i$i|0)>(0);
          if ($26) {
           $i$1$neg40$i$i = $i$1$neg$i$i;$i$139$i$i = $33;
          } else {
           $666 = 0;$i$1$neg32$i$i = $i$1$neg$i$i;$i$128$i$i = $33;
           break L14;
          }
         }
         $34 = ((($this) + (($i$139$i$i*36)|0)|0) + 3156|0);
         $35 = HEAP32[$34>>2]|0;
         $36 = ($35|0)==(-1);
         if ($36) {
          $47 = ((($this) + (($i$139$i$i*36)|0)|0) + 3160|0);
          $48 = HEAP32[$47>>2]|0;
          HEAP32[$key$i$i6>>2] = $48;
          $666 = 1;$i$1$neg32$i$i = $i$1$neg40$i$i;$i$128$i$i = $i$139$i$i;
          break;
         }
         $37 = (($35) + 65536)|0;
         HEAP32[$key$i$i6>>2] = $37;
         $38 = ((($this) + (($i$139$i$i*36)|0)|0) + 3148|0);
         $39 = HEAP32[$38>>2]|0;
         $40 = ($39|0)==(0);
         if ($40) {
          $46 = $37;
         } else {
          $41 = (($35) + 65535)|0;
          HEAP32[$key$i$i6>>2] = $41;
          $46 = $41;
         }
         $42 = ((($this) + (($i$139$i$i*36)|0)|0) + 3152|0);
         $43 = HEAP32[$42>>2]|0;
         $44 = $43 << 1;
         $45 = (($46) + ($44))|0;
         HEAP32[$key$i$i6>>2] = $45;
         $666 = 1;$i$1$neg32$i$i = $i$1$neg40$i$i;$i$128$i$i = $i$139$i$i;
        } else {
         $666 = 0;$i$1$neg32$i$i = $i$1$neg38$i$i;$i$128$i$i = $i$051$i$i;
        }
       } while(0);
       $49 = (($i$128$i$i) + 1)|0;
       $50 = ($i$128$i$i|0)<($23|0);
       if ($50) {
        $j$046$i$i = $49;
        while(1) {
         $51 = ((($this) + (($j$046$i$i*36)|0)|0) + 3156|0);
         $52 = HEAP32[$51>>2]|0;
         $53 = ($52|0)==(-1);
         if ($53) {
          $66 = ((($this) + (($j$046$i$i*36)|0)|0) + 3160|0);
          $67 = HEAP32[$66>>2]|0;
          $68 = (($j$046$i$i) - ($i$128$i$i))|0;
          $69 = (($key$i$i6) + ($68<<2)|0);
          HEAP32[$69>>2] = $67;
         } else {
          $54 = (($52) + 65536)|0;
          $55 = (($j$046$i$i) - ($i$128$i$i))|0;
          $56 = (($key$i$i6) + ($55<<2)|0);
          HEAP32[$56>>2] = $54;
          $57 = ((($this) + (($j$046$i$i*36)|0)|0) + 3148|0);
          $58 = HEAP32[$57>>2]|0;
          $59 = ($58|0)==(0);
          if ($59) {
           $65 = $54;
          } else {
           $60 = (($52) + 65535)|0;
           HEAP32[$56>>2] = $60;
           $65 = $60;
          }
          $61 = ((($this) + (($j$046$i$i*36)|0)|0) + 3152|0);
          $62 = HEAP32[$61>>2]|0;
          $63 = $62 << 1;
          $64 = (($65) + ($63))|0;
          HEAP32[$56>>2] = $64;
         }
         $70 = (($j$046$i$i) + 1)|0;
         $71 = ($j$046$i$i|0)<($23|0);
         if ($71) {
          $j$046$i$i = $70;
         } else {
          break;
         }
        }
       }
       $72 = (($i$1$neg32$i$i) + 1)|0;
       $73 = (($72) + ($23))|0;
       $74 = (($key$i$i6) + ($73<<2)|0);
       HEAP32[$74>>2] = 0;
       $75 = HEAP32[$7>>2]|0;
       $76 = (($75) + 2104|0);
       $77 = (__ZN11CMacroTable6lookupEPj($76,$20)|0);
       $78 = ($77|0)==(0|0);
       if (!($78)) {
        $i$218$i$i = $49;$pKeyStart$017$i$i = $20;$pMacText$216$i$i = $77;
        break;
       }
       if ($666) {
        $79 = HEAP32[$7>>2]|0;
        $80 = (($79) + 2104|0);
        $81 = (__ZN11CMacroTable6lookupEPj($80,$key$i$i6)|0);
        $82 = ($81|0)==(0|0);
        if (!($82)) {
         $i$218$i$i = $i$128$i$i;$pKeyStart$017$i$i = $key$i$i6;$pMacText$216$i$i = $81;
         break;
        }
       }
       $83 = ($i$128$i$i|0)>(0);
       if (!($83)) {
        break L8;
       }
       $84 = (($i$128$i$i) + -1)|0;
       $$pre27 = HEAP32[$17>>2]|0;
       $23 = $$pre27;$i$051$i$i = $84;
      }
      __ZN8UkEngine10markChangeEi($this,$i$218$i$i);
      $85 = HEAP32[$pKeyStart$017$i$i>>2]|0;
      $$off$i$i = (($85) + -65536)|0;
      $86 = ($$off$i$i>>>0)<(186);
      $or$cond$not$i$i = $86 ^ 1;
      $87 = $85 & 1;
      $88 = ($87|0)==(0);
      $or$cond7$i$i = $88 | $or$cond$not$i$i;
      if ($or$cond7$i$i) {
       $or$cond10$i$i = $86 & $88;
       if ($or$cond10$i$i) {
        $89 = (($pKeyStart$017$i$i) + 4|0);
        $90 = HEAP32[$89>>2]|0;
        $91 = ($90|0)==(0);
        if ($91) {
         $macroCase$2$i$i = 1;
        } else {
         $92 = $90;$i$322$i$i = 1;$macroCase$023$i$i = 1;
         while(1) {
          $$off19$i$i = (($92) + -65536)|0;
          $or$cond11$not$i$i = ($$off19$i$i>>>0)>(185);
          $93 = $92 & 1;
          $94 = ($93|0)==(0);
          $or$cond13$i$i = $or$cond11$not$i$i | $94;
          $macroCase$1$i$i = $or$cond13$i$i ? $macroCase$023$i$i : 0;
          $95 = (($i$322$i$i) + 1)|0;
          $96 = (($pKeyStart$017$i$i) + ($95<<2)|0);
          $97 = HEAP32[$96>>2]|0;
          $98 = ($97|0)==(0);
          if ($98) {
           $macroCase$2$i$i = $macroCase$1$i$i;
           break;
          } else {
           $92 = $97;$i$322$i$i = $95;$macroCase$023$i$i = $macroCase$1$i$i;
          }
         }
        }
       } else {
        $macroCase$2$i$i = 0;
       }
      } else {
       $macroCase$2$i$i = 2;
      }
      $indvars$iv$i$i = 0;
      while(1) {
       $99 = (($pMacText$216$i$i) + ($indvars$iv$i$i<<2)|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = ($100|0)==(0);
       $indvars$iv$next$i$i = (($indvars$iv$i$i) + 1)|0;
       if ($101) {
        break;
       } else {
        $indvars$iv$i$i = $indvars$iv$next$i$i;
       }
      }
      $102 = ($indvars$iv$i$i|0)>(0);
      if ($102) {
       $i$420$i$i = 0;
       while(1) {
        $103 = (($pMacText$216$i$i) + ($i$420$i$i<<2)|0);
        $104 = HEAP32[$103>>2]|0;
        if ((($macroCase$2$i$i|0) == 1)) {
         $ch$off$i$i$i = (($104) + -65536)|0;
         $105 = $104 & 1;
         $notlhs$i$i$i = ($ch$off$i$i$i>>>0)<(186);
         $notrhs$i$i$i = ($105|0)!=(0);
         $not$or$cond$i$i$i = $notrhs$i$i$i & $notlhs$i$i$i;
         $106 = $not$or$cond$i$i$i << 31 >> 31;
         $$0$i$i$i9 = (($106) + ($104))|0;
         $107 = (21192 + ($i$420$i$i<<2)|0);
         HEAP32[$107>>2] = $$0$i$i$i9;
        } else if ((($macroCase$2$i$i|0) == 2)) {
         $ch$off$i1$i$i = (($104) + -65536)|0;
         $108 = ($ch$off$i1$i$i>>>0)<(186);
         $109 = $104 & 1;
         $110 = ($109|0)==(0);
         $or$cond$i$i$i = $108 & $110;
         $111 = $or$cond$i$i$i&1;
         $$0$i2$i$i = (($111) + ($104))|0;
         $112 = (21192 + ($i$420$i$i<<2)|0);
         HEAP32[$112>>2] = $$0$i2$i$i;
        } else {
         $113 = (21192 + ($i$420$i$i<<2)|0);
         HEAP32[$113>>2] = $104;
        }
        $114 = (($i$420$i$i) + 1)|0;
        $exitcond$i$i = ($114|0)==($indvars$iv$i$i|0);
        if ($exitcond$i$i) {
         break;
        } else {
         $i$420$i$i = $114;
        }
       }
      }
      $115 = (($this) + 3116|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = HEAP32[$116>>2]|0;
      HEAP32[$maxOutSize$i$i>>2] = $117;
      $118 = $indvars$iv$i$i << 2;
      HEAP32[$inLen$i$i>>2] = $118;
      $119 = HEAP32[$7>>2]|0;
      $120 = (($119) + 2100|0);
      $121 = HEAP32[$120>>2]|0;
      $122 = (($this) + 3112|0);
      $123 = HEAP32[$122>>2]|0;
      _VnConvert($121,21192,$123,$inLen$i$i,$maxOutSize$i$i);
      $124 = HEAP32[$maxOutSize$i$i>>2]|0;
      $125 = HEAP32[$115>>2]|0;
      $126 = HEAP32[$125>>2]|0;
      $127 = ($126|0)>($124|0);
      if ($127) {
       $128 = (($126) - ($124))|0;
       HEAP32[$maxOutSize$i$i>>2] = $128;
       $129 = (($ev) + 8|0);
       $130 = HEAP32[$129>>2]|0;
       $131 = ($130|0)==(-1);
       if ($131) {
        $133 = (($ev) + 12|0);
        $134 = HEAP32[$133>>2]|0;
        $storemerge$i$i = $134;
       } else {
        $132 = (($130) + 65536)|0;
        $storemerge$i$i = $132;
       }
       HEAP32[$vnChar$i$i>>2] = $storemerge$i$i;
       HEAP32[$inLen$i$i>>2] = 4;
       $135 = HEAP32[$7>>2]|0;
       $136 = (($135) + 2100|0);
       $137 = HEAP32[$136>>2]|0;
       $138 = HEAP32[$122>>2]|0;
       $139 = (($138) + ($124)|0);
       _VnConvert($137,$vnChar$i$i,$139,$inLen$i$i,$maxOutSize$i$i);
       $140 = HEAP32[$maxOutSize$i$i>>2]|0;
       $141 = (($140) + ($124))|0;
       $$pre28 = HEAP32[$115>>2]|0;
       $145 = $$pre28;$outSize$0$i$i = $141;
      } else {
       $145 = $125;$outSize$0$i$i = $124;
      }
      HEAP32[$17>>2] = -1;
      $142 = (($this) + 3104|0);
      HEAP32[$142>>2] = -1;
      HEAP32[$6>>2] = 0;
      $143 = (($this) + 3108|0);
      HEAP8[$143>>0] = 0;
      $144 = (($this) + 3120|0);
      HEAP8[$144>>0] = 1;
      HEAP32[$145>>2] = $outSize$0$i$i;
      $$0 = 1;
      STACKTOP = sp;return ($$0|0);
     }
    }
   } while(0);
   $$pre = HEAP32[$7>>2]|0;
   $147 = $$pre;
  }
  $146 = (($147) + 36|0);
  $148 = HEAP32[$146>>2]|0;
  $149 = ($148|0)==(0);
  if (!($149)) {
   $150 = HEAP32[$6>>2]|0;
   $151 = ($150|0)==(0);
   if ($151) {
    $152 = (($this) + 20|0);
    $153 = HEAP32[$152>>2]|0;
    $154 = ($153|0)<(0);
    if (!($154)) {
     $155 = (($this) + 3123|0);
     $156 = HEAP8[$155>>0]|0;
     $157 = ($156<<24>>24)==(0);
     if ($157) {
      HEAP32[$outSize$i>>2] = 0;
      $175 = (($147) + 40|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0);
      L77: do {
       if (!($177)) {
        $178 = ((($this) + (($153*36)|0)|0) + 3128|0);
        $179 = HEAP32[$178>>2]|0;
        switch ($179|0) {
        case 4: case 3:  {
         $211 = ((($this) + (($153*36)|0)|0) + 3144|0);
         $212 = HEAP32[$211>>2]|0;
         $213 = ((13896 + (($212*52)|0)|0) + 4|0);
         $214 = HEAP32[$213>>2]|0;
         $215 = ($214|0)==(0);
         if (!($215)) {
          break L77;
         }
         break;
        }
        case 0:  {
         break;
        }
        case 5: case 6:  {
         $180 = ((($this) + (($153*36)|0)|0) + 3136|0);
         $181 = HEAP32[$180>>2]|0;
         $182 = (($153) - ($181))|0;
         $183 = ((($this) + (($182*36)|0)|0) + 3144|0);
         $184 = HEAP32[$183>>2]|0;
         $185 = ((13896 + (($184*52)|0)|0) + 4|0);
         $186 = HEAP32[$185>>2]|0;
         $187 = ($186|0)==(0);
         if (!($187)) {
          $188 = ((($this) + (($153*36)|0)|0) + 3144|0);
          $189 = HEAP32[$188>>2]|0;
          $190 = ((($this) + (($153*36)|0)|0) + 3132|0);
          $191 = HEAP32[$190>>2]|0;
          $192 = ($191|0)==(-1);
          if ($192) {
           $c1$0$i$i = -1;
          } else {
           $193 = (($153) - ($191))|0;
           $194 = ((($this) + (($193*36)|0)|0) + 3144|0);
           $195 = HEAP32[$194>>2]|0;
           $c1$0$i$i = $195;
          }
          $196 = (__Z10isValidCVC6ConSeq8VowelSeqS_($c1$0$i$i,$184,$189)|0);
          if ($196) {
           $197 = (13896 + (($184*52)|0)|0);
           $198 = HEAP32[$197>>2]|0;
           $199 = ($184>>>0)<(12);
           if ($199) {
            $$0$i$i1$i = 0;
           } else {
            $200 = ((13896 + (($184*52)|0)|0) + 36|0);
            $201 = HEAP32[$200>>2]|0;
            $202 = ($201|0)==(-1);
            if ($202) {
             $203 = ((13896 + (($184*52)|0)|0) + 44|0);
             $204 = HEAP32[$203>>2]|0;
             $205 = ($204|0)==(-1);
             if ($205) {
              $$0$i$i1$i = 1;
             } else {
              if ((($184|0) == 44) | (($184|0) == 66) | (($184|0) == 67)) {
               $$0$i$i1$i = 1;
              } else {
               $$0$i$i1$i = $204;
              }
             }
            } else {
             $$0$i$i1$i = $201;
            }
           }
           $206 = (($182) + 1)|0;
           $207 = (($206) - ($198))|0;
           $208 = (($207) + ($$0$i$i1$i))|0;
           $209 = ((($this) + (($208*36)|0)|0) + 3152|0);
           $210 = HEAP32[$209>>2]|0;
           if (!((($189|0) == 1) | (($189|0) == 2) | (($189|0) == 19) | (($189|0) == 25))) {
            break L77;
           }
           $$off$i2$i = (($210) + -2)|0;
           $switch$i$i = ($$off$i2$i>>>0)<(3);
           if (!($switch$i$i)) {
            break L77;
           }
          }
         }
         break;
        }
        default: {
         break L77;
        }
        }
        $216 = (($this) + 3116|0);
        $217 = HEAP32[$216>>2]|0;
        $218 = HEAP32[$217>>2]|0;
        HEAP32[$outSize$i>>2] = $218;
        $219 = (($this) + 12|0);
        $220 = (($this) + 3112|0);
        $221 = HEAP32[$220>>2]|0;
        $222 = (($this) + 3124|0);
        $223 = (__ZN8UkEngine17restoreKeyStrokesERiPhS0_R12UkOutputType($this,$219,$221,$outSize$i,$222)|0);
        $224 = ($223|0)==(0);
        if (!($224)) {
         $225 = (($this) + 3122|0);
         HEAP8[$225>>0] = 1;
         $226 = (($this) + 3120|0);
         HEAP8[$226>>0] = 1;
        }
       }
      } while(0);
      $227 = HEAP32[$152>>2]|0;
      $228 = (($227) + 1)|0;
      HEAP32[$152>>2] = $228;
      $229 = ((($this) + (($228*36)|0)|0) + 3128|0);
      HEAP32[$229>>2] = 1;
      $230 = ((($this) + (($228*36)|0)|0) + 3136|0);
      HEAP32[$230>>2] = -1;
      $231 = ((($this) + (($228*36)|0)|0) + 3140|0);
      HEAP32[$231>>2] = -1;
      $232 = ((($this) + (($228*36)|0)|0) + 3132|0);
      HEAP32[$232>>2] = -1;
      $233 = (($ev) + 12|0);
      $234 = HEAP32[$233>>2]|0;
      $235 = ((($this) + (($228*36)|0)|0) + 3160|0);
      HEAP32[$235>>2] = $234;
      $236 = (($ev) + 8|0);
      $237 = HEAP32[$236>>2]|0;
      $238 = $237 & 1;
      $239 = $238 ^ 1;
      $$0$i4$i = (($239) + ($237))|0;
      $240 = ((($this) + (($228*36)|0)|0) + 3156|0);
      HEAP32[$240>>2] = $$0$i4$i;
      $241 = $238 ^ 1;
      $242 = ((($this) + (($228*36)|0)|0) + 3148|0);
      HEAP32[$242>>2] = $241;
      $243 = (($this) + 3122|0);
      $244 = HEAP8[$243>>0]|0;
      $245 = ($244<<24>>24)==(0);
      if ($245) {
       $$0 = 0;
       STACKTOP = sp;return ($$0|0);
      }
      $246 = HEAP32[$outSize$i>>2]|0;
      $247 = (($this) + 3116|0);
      $248 = HEAP32[$247>>2]|0;
      $249 = HEAP32[$248>>2]|0;
      $250 = ($246|0)<($249|0);
      if (!($250)) {
       $$0 = 0;
       STACKTOP = sp;return ($$0|0);
      }
      $251 = $234&255;
      $252 = (($this) + 3112|0);
      $253 = HEAP32[$252>>2]|0;
      $254 = (($253) + ($246)|0);
      HEAP8[$254>>0] = $251;
      $255 = (($246) + 1)|0;
      HEAP32[$outSize$i>>2] = $255;
      $256 = HEAP32[$247>>2]|0;
      HEAP32[$256>>2] = $255;
      $$0 = 1;
      STACKTOP = sp;return ($$0|0);
     }
    }
   }
  }
  $158 = (($this) + 20|0);
  $159 = HEAP32[$158>>2]|0;
  $160 = (($159) + 1)|0;
  HEAP32[$158>>2] = $160;
  $161 = ((($this) + (($160*36)|0)|0) + 3128|0);
  HEAP32[$161>>2] = 1;
  $162 = ((($this) + (($160*36)|0)|0) + 3136|0);
  HEAP32[$162>>2] = -1;
  $163 = ((($this) + (($160*36)|0)|0) + 3140|0);
  HEAP32[$163>>2] = -1;
  $164 = ((($this) + (($160*36)|0)|0) + 3132|0);
  HEAP32[$164>>2] = -1;
  $165 = (($ev) + 12|0);
  $166 = HEAP32[$165>>2]|0;
  $167 = ((($this) + (($160*36)|0)|0) + 3160|0);
  HEAP32[$167>>2] = $166;
  $168 = (($ev) + 8|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = $169 & 1;
  $171 = $170 ^ 1;
  $$0$i$i10 = (($171) + ($169))|0;
  $172 = ((($this) + (($160*36)|0)|0) + 3156|0);
  HEAP32[$172>>2] = $$0$i$i10;
  $173 = $170 ^ 1;
  $174 = ((($this) + (($160*36)|0)|0) + 3148|0);
  HEAP32[$174>>2] = $173;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else if ((($1|0) == 3)) {
  $2 = (($this) + 20|0);
  HEAP32[$2>>2] = -1;
  $3 = (($this) + 3104|0);
  HEAP32[$3>>2] = -1;
  $4 = (($this) + 24|0);
  HEAP32[$4>>2] = 0;
  $5 = (($this) + 3108|0);
  HEAP8[$5>>0] = 0;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else if ((($1|0) == 0)) {
  $359 = (($ev) + 8|0);
  $360 = HEAP32[$359>>2]|0;
  $361 = (12648 + ($360)|0);
  $362 = HEAP8[$361>>0]|0;
  $363 = ($362<<24>>24)==(0);
  if ($363) {
   $ev$idx12 = (($ev) + 12|0);
   $ev$idx12$val = HEAP32[$ev$idx12>>2]|0;
   $665 = (__ZN8UkEngine16appendConsonnantER10UkKeyEvent($this,$360,$ev$idx12$val)|0);
   $$0 = $665;
   STACKTOP = sp;return ($$0|0);
  }
  $364 = $360 & 1;
  $365 = $364 ^ 1;
  $$0$i5 = (($365) + ($360))|0;
  $366 = (8512 + ($$0$i5<<2)|0);
  $367 = HEAP32[$366>>2]|0;
  $368 = (($this) + 20|0);
  $369 = HEAP32[$368>>2]|0;
  $370 = ($369|0)>(-1);
  do {
   if ($370) {
    $371 = ((($this) + (($369*36)|0)|0) + 3128|0);
    $372 = HEAP32[$371>>2]|0;
    $373 = ($372|0)==(2);
    if ($373) {
     $374 = ((($this) + (($369*36)|0)|0) + 3144|0);
     $375 = HEAP32[$374>>2]|0;
     $376 = ($375|0)==(21);
     $377 = ($367|0)==(143);
     $or$cond = $376 & $377;
     if (!($or$cond)) {
      $378 = ($375|0)==(6);
      $379 = ($367|0)==(75);
      $or$cond3 = $378 & $379;
      if (!($or$cond3)) {
       break;
      }
     }
     $ev$idx14 = (($ev) + 12|0);
     $ev$idx14$val = HEAP32[$ev$idx14>>2]|0;
     $380 = (__ZN8UkEngine16appendConsonnantER10UkKeyEvent($this,$360,$ev$idx14$val)|0);
     $$0 = $380;
     STACKTOP = sp;return ($$0|0);
    }
   }
  } while(0);
  $381 = (($369) + 1)|0;
  HEAP32[$368>>2] = $381;
  $382 = ((($this) + (($381*36)|0)|0) + 3128|0);
  $383 = ((($this) + (($381*36)|0)|0) + 3156|0);
  HEAP32[$383>>2] = $367;
  $384 = $364 ^ 1;
  $385 = ((($this) + (($381*36)|0)|0) + 3148|0);
  HEAP32[$385>>2] = $384;
  $386 = (($$0$i5) - ($367))|0;
  $387 = (($386|0) / 2)&-1;
  $388 = ((($this) + (($381*36)|0)|0) + 3152|0);
  HEAP32[$388>>2] = $387;
  $389 = (($ev) + 12|0);
  $390 = HEAP32[$389>>2]|0;
  $391 = ((($this) + (($381*36)|0)|0) + 3160|0);
  HEAP32[$391>>2] = $390;
  $392 = HEAP32[$368>>2]|0;
  $393 = ($392|0)==(0);
  if (!($393)) {
   $394 = (($this) + 4|0);
   $395 = HEAP32[$394>>2]|0;
   $396 = (($395) + 4|0);
   $397 = HEAP32[$396>>2]|0;
   $398 = ($397|0)==(0);
   if (!($398)) {
    $435 = (($392) + -1)|0;
    $436 = ((($this) + (($435*36)|0)|0) + 3128|0);
    $437 = HEAP32[$436>>2]|0;
    L124: do {
     switch ($437|0) {
     case 1:  {
      HEAP32[$382>>2] = 3;
      $438 = ((($this) + (($381*36)|0)|0) + 3140|0);
      HEAP32[$438>>2] = -1;
      $439 = ((($this) + (($381*36)|0)|0) + 3132|0);
      HEAP32[$439>>2] = -1;
      $440 = ((($this) + (($381*36)|0)|0) + 3136|0);
      HEAP32[$440>>2] = 0;
      HEAP32[$capsLockOn$i$i>>2] = $367;
      $441 = (($capsLockOn$i$i) + 4|0);
      HEAP32[$441>>2] = -1;
      $442 = (($capsLockOn$i$i) + 8|0);
      HEAP32[$442>>2] = -1;
      $$014$i$i17$i = 18136;$$023$i$i18$i = 70;
      L126: while(1) {
       $443 = $$023$i$i18$i >>> 1;
       $444 = $443 << 4;
       $445 = (($$014$i$i17$i) + ($444)|0);
       $i$01$i$i20$i = 0;
       while(1) {
        $448 = (($capsLockOn$i$i) + ($i$01$i$i20$i<<2)|0);
        $449 = HEAP32[$448>>2]|0;
        $450 = (($445) + ($i$01$i$i20$i<<2)|0);
        $451 = HEAP32[$450>>2]|0;
        $452 = ($449|0)<($451|0);
        if ($452) {
         $$0$i1$i21$i$ph = -1;
         break;
        }
        $453 = ($449|0)>($451|0);
        $447 = (($i$01$i$i20$i) + 1)|0;
        if ($453) {
         $$0$i1$i21$i$ph = 1;
         break;
        }
        $446 = ($447|0)<(3);
        if ($446) {
         $i$01$i$i20$i = $447;
        } else {
         label = 125;
         break L126;
        }
       }
       $454 = ($$023$i$i18$i|0)==(1);
       if ($454) {
        $$0$i27$i = -1;
        break;
       }
       $455 = ($$0$i1$i21$i$ph|0)<(0);
       $456 = (($$023$i$i18$i) - ($443))|0;
       $$$i$i23$i = $455 ? $443 : $456;
       $$01$$i$i24$i = $455 ? $$014$i$i17$i : $445;
       $457 = ($$$i$i23$i|0)==(0);
       if ($457) {
        $$0$i27$i = -1;
        break;
       } else {
        $$014$i$i17$i = $$01$$i$i24$i;$$023$i$i18$i = $$$i$i23$i;
       }
      }
      if ((label|0) == 125) {
       $458 = ($445|0)==(0|0);
       if ($458) {
        $$0$i27$i = -1;
       } else {
        $$sum34 = $444 | 12;
        $459 = (($$014$i$i17$i) + ($$sum34)|0);
        $460 = HEAP32[$459>>2]|0;
        $$0$i27$i = $460;
       }
      }
      $461 = ((($this) + (($381*36)|0)|0) + 3144|0);
      HEAP32[$461>>2] = $$0$i27$i;
      break;
     }
     case 5: case 6: case 0:  {
      HEAP32[$382>>2] = 0;
      $462 = ((($this) + (($381*36)|0)|0) + 3136|0);
      HEAP32[$462>>2] = -1;
      $463 = ((($this) + (($381*36)|0)|0) + 3140|0);
      HEAP32[$463>>2] = -1;
      $464 = ((($this) + (($381*36)|0)|0) + 3132|0);
      HEAP32[$464>>2] = -1;
      break;
     }
     case 4: case 3:  {
      $465 = ((($this) + (($435*36)|0)|0) + 3144|0);
      $466 = HEAP32[$465>>2]|0;
      $467 = (13896 + (($466*52)|0)|0);
      $468 = HEAP32[$467>>2]|0;
      $469 = ($466>>>0)<(12);
      do {
       if ($469) {
        $$0$i29$i = 0;
       } else {
        $470 = ((13896 + (($466*52)|0)|0) + 36|0);
        $471 = HEAP32[$470>>2]|0;
        $472 = ($471|0)==(-1);
        if ($472) {
         $473 = ((13896 + (($466*52)|0)|0) + 44|0);
         $474 = HEAP32[$473>>2]|0;
         $475 = ($474|0)==(-1);
         if (!($475)) {
          if ((($466|0) == 44) | (($466|0) == 66) | (($466|0) == 67)) {
           $$0$i29$i = 1;
           break;
          }
          $$0$i29$i = $474;
          break;
         }
         $476 = (($466) + -48)|0;
         $477 = ($476>>>0)<(22);
         if ($477) {
          $$0$i29$i = 1;
         } else {
          $478 = (($395) + 12|0);
          $479 = HEAP32[$478>>2]|0;
          $480 = ($479|0)==(0);
          if (!($480)) {
           if ((($466|0) == 25) | (($466|0) == 27) | (($466|0) == 40)) {
            $$0$i29$i = 1;
            break;
           }
          }
          $$0$i29$i = 0;
         }
        } else {
         $$0$i29$i = $471;
        }
       }
      } while(0);
      $481 = (($392) - ($468))|0;
      $482 = (($481) + ($$0$i29$i))|0;
      $483 = ((($this) + (($482*36)|0)|0) + 3152|0);
      $484 = HEAP32[$483>>2]|0;
      $485 = ($$0$i5|0)!=($367|0);
      $486 = ($484|0)!=(0);
      $or$cond$i = $485 & $486;
      $487 = (($466) + -48)|0;
      $488 = ($487>>>0)<(22);
      $or$cond7$i = $or$cond$i | $488;
      L152: do {
       if (!($or$cond7$i)) {
        $489 = (($466) + -12)|0;
        $490 = ($489>>>0)<(36);
        $491 = ((13896 + (($466*52)|0)|0) + 12|0);
        $492 = HEAP32[$491>>2]|0;
        L154: do {
         if ($490) {
          $493 = ((13896 + (($466*52)|0)|0) + 16|0);
          $494 = HEAP32[$493>>2]|0;
          HEAP32[$key$i30$i>>2] = $492;
          $495 = (($key$i30$i) + 4|0);
          HEAP32[$495>>2] = $494;
          $496 = (($key$i30$i) + 8|0);
          HEAP32[$496>>2] = $367;
          $$014$i$i31$i = 18136;$$023$i$i32$i = 70;
          L156: while(1) {
           $497 = $$023$i$i32$i >>> 1;
           $498 = $497 << 4;
           $499 = (($$014$i$i31$i) + ($498)|0);
           $i$01$i$i34$i = 0;
           while(1) {
            $502 = (($key$i30$i) + ($i$01$i$i34$i<<2)|0);
            $503 = HEAP32[$502>>2]|0;
            $504 = (($499) + ($i$01$i$i34$i<<2)|0);
            $505 = HEAP32[$504>>2]|0;
            $506 = ($503|0)<($505|0);
            if ($506) {
             $$0$i1$i35$i$ph = -1;
             break;
            }
            $507 = ($503|0)>($505|0);
            $501 = (($i$01$i$i34$i) + 1)|0;
            if ($507) {
             $$0$i1$i35$i$ph = 1;
             break;
            }
            $500 = ($501|0)<(3);
            if ($500) {
             $i$01$i$i34$i = $501;
            } else {
             break L156;
            }
           }
           $508 = ($$023$i$i32$i|0)==(1);
           if ($508) {
            $newVs$0$i = -1;
            break L154;
           }
           $509 = ($$0$i1$i35$i$ph|0)<(0);
           $510 = (($$023$i$i32$i) - ($497))|0;
           $$$i$i37$i = $509 ? $497 : $510;
           $$01$$i$i38$i = $509 ? $$014$i$i31$i : $499;
           $511 = ($$$i$i37$i|0)==(0);
           if ($511) {
            $newVs$0$i = -1;
            break L154;
           } else {
            $$014$i$i31$i = $$01$$i$i38$i;$$023$i$i32$i = $$$i$i37$i;
           }
          }
          $512 = ($499|0)==(0|0);
          if ($512) {
           $newVs$0$i = -1;
          } else {
           $$sum33 = $498 | 12;
           $513 = (($$014$i$i31$i) + ($$sum33)|0);
           $514 = HEAP32[$513>>2]|0;
           $newVs$0$i = $514;
          }
         } else {
          HEAP32[$key$i45$i>>2] = $492;
          $515 = (($key$i45$i) + 4|0);
          HEAP32[$515>>2] = $367;
          $516 = (($key$i45$i) + 8|0);
          HEAP32[$516>>2] = -1;
          $$014$i$i46$i = 18136;$$023$i$i47$i = 70;
          L167: while(1) {
           $517 = $$023$i$i47$i >>> 1;
           $518 = $517 << 4;
           $519 = (($$014$i$i46$i) + ($518)|0);
           $i$01$i$i49$i = 0;
           while(1) {
            $522 = (($key$i45$i) + ($i$01$i$i49$i<<2)|0);
            $523 = HEAP32[$522>>2]|0;
            $524 = (($519) + ($i$01$i$i49$i<<2)|0);
            $525 = HEAP32[$524>>2]|0;
            $526 = ($523|0)<($525|0);
            if ($526) {
             $$0$i1$i50$i$ph = -1;
             break;
            }
            $527 = ($523|0)>($525|0);
            $521 = (($i$01$i$i49$i) + 1)|0;
            if ($527) {
             $$0$i1$i50$i$ph = 1;
             break;
            }
            $520 = ($521|0)<(3);
            if ($520) {
             $i$01$i$i49$i = $521;
            } else {
             break L167;
            }
           }
           $528 = ($$023$i$i47$i|0)==(1);
           if ($528) {
            $newVs$0$i = -1;
            break L154;
           }
           $529 = ($$0$i1$i50$i$ph|0)<(0);
           $530 = (($$023$i$i47$i) - ($517))|0;
           $$$i$i52$i = $529 ? $517 : $530;
           $$01$$i$i53$i = $529 ? $$014$i$i46$i : $519;
           $531 = ($$$i$i52$i|0)==(0);
           if ($531) {
            $newVs$0$i = -1;
            break L154;
           } else {
            $$014$i$i46$i = $$01$$i$i53$i;$$023$i$i47$i = $$$i$i52$i;
           }
          }
          $532 = ($519|0)==(0|0);
          if ($532) {
           $newVs$0$i = -1;
          } else {
           $$sum32 = $518 | 12;
           $533 = (($$014$i$i46$i) + ($$sum32)|0);
           $534 = HEAP32[$533>>2]|0;
           $newVs$0$i = $534;
          }
         }
        } while(0);
        $535 = ($newVs$0$i|0)==(-1);
        if (!($535)) {
         $536 = ($437|0)==(4);
         do {
          if ($536) {
           $537 = ((($this) + (($435*36)|0)|0) + 3132|0);
           $538 = HEAP32[$537>>2]|0;
           $539 = (($435) - ($538))|0;
           $540 = ((($this) + (($539*36)|0)|0) + 3144|0);
           $541 = HEAP32[$540>>2]|0;
           if ((($541|0) == 22)) {
            $542 = ((13896 + (($newVs$0$i*52)|0)|0) + 12|0);
            $543 = HEAP32[$542>>2]|0;
            $not$$i62$i = ($543|0)!=(143);
            if ($not$$i62$i) {
             break;
            } else {
             break L152;
            }
           } else if ((($541|0) == 11)) {
            $i$04$i63$i = 0;
            while(1) {
             $546 = (21128 + ($i$04$i63$i<<2)|0);
             $547 = HEAP32[$546>>2]|0;
             $548 = ($547|0)==($newVs$0$i|0);
             $545 = (($i$04$i63$i) + 1)|0;
             if ($548) {
              $i$0$lcssa$i65$i = $i$04$i63$i;
              break;
             }
             $544 = ($545|0)==(12);
             if ($544) {
              break L152;
             } else {
              $i$04$i63$i = $545;
             }
            }
            $549 = ($i$0$lcssa$i65$i|0)!=(12);
            if ($549) {
             break;
            } else {
             break L152;
            }
           } else if ((($541|0) == 8)) {
            $550 = ((13896 + (($newVs$0$i*52)|0)|0) + 12|0);
            $551 = HEAP32[$550>>2]|0;
            $not$3$i61$i = ($551|0)!=(75);
            if ($not$3$i61$i) {
             break;
            } else {
             break L152;
            }
           } else {
            break;
           }
          }
         } while(0);
         HEAP32[$382>>2] = $437;
         $555 = HEAP32[$436>>2]|0;
         $556 = ($555|0)==(4);
         if ($556) {
          $557 = ((($this) + (($435*36)|0)|0) + 3132|0);
          $558 = HEAP32[$557>>2]|0;
          $559 = (($558) + 1)|0;
          $560 = ((($this) + (($381*36)|0)|0) + 3132|0);
          HEAP32[$560>>2] = $559;
         } else {
          $561 = ((($this) + (($381*36)|0)|0) + 3132|0);
          HEAP32[$561>>2] = -1;
         }
         $562 = ((($this) + (($381*36)|0)|0) + 3140|0);
         HEAP32[$562>>2] = -1;
         $563 = ((($this) + (($381*36)|0)|0) + 3136|0);
         HEAP32[$563>>2] = 0;
         $564 = ((($this) + (($381*36)|0)|0) + 3144|0);
         HEAP32[$564>>2] = $newVs$0$i;
         HEAP32[$388>>2] = 0;
         $565 = ($484|0)==(0);
         if ($565) {
          $$off3$i = (($386) + 1)|0;
          $566 = ($$off3$i>>>0)>(2);
          if (!($566)) {
           break L124;
          }
          $567 = ($newVs$0$i>>>0)<(12);
          do {
           if ($567) {
            $$0$i58$i = 0;
           } else {
            $568 = ((13896 + (($newVs$0$i*52)|0)|0) + 36|0);
            $569 = HEAP32[$568>>2]|0;
            $570 = ($569|0)==(-1);
            if ($570) {
             $571 = ((13896 + (($newVs$0$i*52)|0)|0) + 44|0);
             $572 = HEAP32[$571>>2]|0;
             $573 = ($572|0)==(-1);
             if (!($573)) {
              if ((($newVs$0$i|0) == 44) | (($newVs$0$i|0) == 66) | (($newVs$0$i|0) == 67)) {
               $$0$i58$i = 1;
               break;
              }
              $$0$i58$i = $572;
              break;
             }
             $574 = (($newVs$0$i) + -48)|0;
             $575 = ($574>>>0)<(22);
             if ($575) {
              $$0$i58$i = 1;
              break;
             }
             $576 = HEAP32[$394>>2]|0;
             $577 = (($576) + 12|0);
             $578 = HEAP32[$577>>2]|0;
             $579 = ($578|0)==(0);
             if (!($579)) {
              if ((($newVs$0$i|0) == 25) | (($newVs$0$i|0) == 27) | (($newVs$0$i|0) == 40)) {
               $$0$i58$i = 1;
               break;
              }
             }
             $$0$i58$i = 0;
            } else {
             $$0$i58$i = $569;
            }
           }
          } while(0);
          $580 = HEAP32[$368>>2]|0;
          $581 = (($580) + ($$0$i58$i))|0;
          $582 = (($581) - ($468))|0;
          __ZN8UkEngine10markChangeEi($this,$582);
          $583 = ((($this) + (($582*36)|0)|0) + 3152|0);
          HEAP32[$583>>2] = $387;
          $$0 = 1;
          STACKTOP = sp;return ($$0|0);
         }
         $584 = ($newVs$0$i>>>0)<(12);
         do {
          if ($584) {
           $$0$i43$i = 0;
          } else {
           $585 = ((13896 + (($newVs$0$i*52)|0)|0) + 36|0);
           $586 = HEAP32[$585>>2]|0;
           $587 = ($586|0)==(-1);
           if ($587) {
            $588 = ((13896 + (($newVs$0$i*52)|0)|0) + 44|0);
            $589 = HEAP32[$588>>2]|0;
            $590 = ($589|0)==(-1);
            if (!($590)) {
             if ((($newVs$0$i|0) == 44) | (($newVs$0$i|0) == 66) | (($newVs$0$i|0) == 67)) {
              $$0$i43$i = 1;
              break;
             }
             $$0$i43$i = $589;
             break;
            }
            $591 = (($newVs$0$i) + -48)|0;
            $592 = ($591>>>0)<(22);
            if ($592) {
             $$0$i43$i = 1;
            } else {
             $593 = HEAP32[$394>>2]|0;
             $594 = (($593) + 12|0);
             $595 = HEAP32[$594>>2]|0;
             $596 = ($595|0)==(0);
             if (!($596)) {
              if ((($newVs$0$i|0) == 25) | (($newVs$0$i|0) == 27) | (($newVs$0$i|0) == 40)) {
               $$0$i43$i = 1;
               break;
              }
             }
             $$0$i43$i = 0;
            }
           } else {
            $$0$i43$i = $586;
           }
          }
         } while(0);
         $597 = HEAP32[$368>>2]|0;
         $598 = (($597) + ($$0$i43$i))|0;
         $599 = (($598) - ($468))|0;
         $600 = ($599|0)==($482|0);
         if (!($600)) {
          __ZN8UkEngine10markChangeEi($this,$482);
          HEAP32[$483>>2] = 0;
          __ZN8UkEngine10markChangeEi($this,$599);
          $$off2$i = (($386) + 1)|0;
          $601 = ($$off2$i>>>0)>(2);
          $$$i = $601 ? $387 : $484;
          $602 = ((($this) + (($599*36)|0)|0) + 3152|0);
          HEAP32[$602>>2] = $$$i;
          $$0 = 1;
          STACKTOP = sp;return ($$0|0);
         }
         $$off$i = (($386) + 1)|0;
         $603 = ($$off$i>>>0)<(3);
         $604 = ($387|0)==($484|0);
         $or$cond4$i = $603 | $604;
         if ($or$cond4$i) {
          break L124;
         }
         __ZN8UkEngine10markChangeEi($this,$482);
         HEAP32[$483>>2] = $387;
         $$0 = 1;
         STACKTOP = sp;return ($$0|0);
        }
       }
      } while(0);
      HEAP32[$382>>2] = 0;
      $552 = ((($this) + (($381*36)|0)|0) + 3136|0);
      HEAP32[$552>>2] = -1;
      $553 = ((($this) + (($381*36)|0)|0) + 3140|0);
      HEAP32[$553>>2] = -1;
      $554 = ((($this) + (($381*36)|0)|0) + 3132|0);
      HEAP32[$554>>2] = -1;
      break;
     }
     case 2:  {
      HEAP32[$capsLockOn$i$i>>2] = $367;
      $605 = (($capsLockOn$i$i) + 4|0);
      HEAP32[$605>>2] = -1;
      $606 = (($capsLockOn$i$i) + 8|0);
      HEAP32[$606>>2] = -1;
      $$014$i$i4$i = 18136;$$023$i$i5$i = 70;
      L230: while(1) {
       $607 = $$023$i$i5$i >>> 1;
       $608 = $607 << 4;
       $609 = (($$014$i$i4$i) + ($608)|0);
       $i$01$i$i7$i = 0;
       while(1) {
        $612 = (($capsLockOn$i$i) + ($i$01$i$i7$i<<2)|0);
        $613 = HEAP32[$612>>2]|0;
        $614 = (($609) + ($i$01$i$i7$i<<2)|0);
        $615 = HEAP32[$614>>2]|0;
        $616 = ($613|0)<($615|0);
        if ($616) {
         $$0$i1$i8$i$ph = -1;
         break;
        }
        $617 = ($613|0)>($615|0);
        $611 = (($i$01$i$i7$i) + 1)|0;
        if ($617) {
         $$0$i1$i8$i$ph = 1;
         break;
        }
        $610 = ($611|0)<(3);
        if ($610) {
         $i$01$i$i7$i = $611;
        } else {
         label = 202;
         break L230;
        }
       }
       $618 = ($$023$i$i5$i|0)==(1);
       if ($618) {
        $$0$i14$i = -1;
        break;
       }
       $619 = ($$0$i1$i8$i$ph|0)<(0);
       $620 = (($$023$i$i5$i) - ($607))|0;
       $$$i$i10$i = $619 ? $607 : $620;
       $$01$$i$i11$i = $619 ? $$014$i$i4$i : $609;
       $621 = ($$$i$i10$i|0)==(0);
       if ($621) {
        $$0$i14$i = -1;
        break;
       } else {
        $$014$i$i4$i = $$01$$i$i11$i;$$023$i$i5$i = $$$i$i10$i;
       }
      }
      if ((label|0) == 202) {
       $622 = ($609|0)==(0|0);
       if ($622) {
        $$0$i14$i = -1;
       } else {
        $$sum31 = $608 | 12;
        $623 = (($$014$i$i4$i) + ($$sum31)|0);
        $624 = HEAP32[$623>>2]|0;
        $$0$i14$i = $624;
       }
      }
      $625 = ((($this) + (($435*36)|0)|0) + 3144|0);
      $626 = HEAP32[$625>>2]|0;
      $627 = ($626|0)==(-1);
      $628 = ($$0$i14$i|0)==(-1);
      $or$cond$i$i = $627 | $628;
      L242: do {
       if ($or$cond$i$i) {
        label = 211;
       } else {
        do {
         if ((($626|0) == 22)) {
          $629 = ((13896 + (($$0$i14$i*52)|0)|0) + 12|0);
          $630 = HEAP32[$629>>2]|0;
          $not$$i$i = ($630|0)==(143);
          if ($not$$i$i) {
           $639 = $382;
          } else {
           $643 = $382;
           break L242;
          }
         } else if ((($626|0) == 11)) {
          $i$04$i$i = 0;
          while(1) {
           $633 = (21128 + ($i$04$i$i<<2)|0);
           $634 = HEAP32[$633>>2]|0;
           $635 = ($634|0)==($$0$i14$i|0);
           $632 = (($i$04$i$i) + 1)|0;
           if ($635) {
            label = 210;
            break;
           }
           $631 = ($632|0)==(12);
           if ($631) {
            label = 208;
            break;
           } else {
            $i$04$i$i = $632;
           }
          }
          if ((label|0) == 208) {
           $639 = $382;
           break;
          }
          else if ((label|0) == 210) {
           $636 = ($i$04$i$i|0)==(12);
           if ($636) {
            $639 = $382;
            break;
           } else {
            $643 = $382;
            break L242;
           }
          }
         } else if ((($626|0) == 8)) {
          $637 = ((13896 + (($$0$i14$i*52)|0)|0) + 12|0);
          $638 = HEAP32[$637>>2]|0;
          $not$3$i$i = ($638|0)==(75);
          if ($not$3$i$i) {
           $639 = $382;
          } else {
           $643 = $382;
           break L242;
          }
         } else {
          label = 211;
          break L242;
         }
        } while(0);
        HEAP32[$639>>2] = 0;
        $640 = ((($this) + (($381*36)|0)|0) + 3136|0);
        HEAP32[$640>>2] = -1;
        $641 = ((($this) + (($381*36)|0)|0) + 3140|0);
        HEAP32[$641>>2] = -1;
        $642 = ((($this) + (($381*36)|0)|0) + 3132|0);
        HEAP32[$642>>2] = -1;
        break L124;
       }
      } while(0);
      if ((label|0) == 211) {
       $643 = $382;
      }
      HEAP32[$643>>2] = 4;
      $644 = ((($this) + (($381*36)|0)|0) + 3132|0);
      HEAP32[$644>>2] = 1;
      $645 = ((($this) + (($381*36)|0)|0) + 3140|0);
      HEAP32[$645>>2] = -1;
      $646 = ((($this) + (($381*36)|0)|0) + 3136|0);
      HEAP32[$646>>2] = 0;
      $647 = ((($this) + (($381*36)|0)|0) + 3144|0);
      HEAP32[$647>>2] = $$0$i14$i;
      $648 = ($626|0)==(8);
      if ($648) {
       $649 = ((($this) + (($435*36)|0)|0) + 3152|0);
       $650 = HEAP32[$649>>2]|0;
       $651 = ($650|0)==(0);
       if (!($651)) {
        $652 = HEAP32[$388>>2]|0;
        $653 = ($652|0)==(0);
        if ($653) {
         HEAP32[$388>>2] = $650;
        }
        $654 = HEAP32[$368>>2]|0;
        $655 = (($654) + -1)|0;
        __ZN8UkEngine10markChangeEi($this,$655);
        HEAP32[$649>>2] = 0;
        $$0 = 1;
        STACKTOP = sp;return ($$0|0);
       }
      }
      break;
     }
     default: {
     }
     }
    } while(0);
    $656 = HEAP32[$394>>2]|0;
    $657 = (($656) + 2100|0);
    $658 = HEAP32[$657>>2]|0;
    $659 = ($658|0)==(6);
    if (!($659)) {
     $660 = HEAP32[$391>>2]|0;
     $661 = $660 | 32;
     $662 = (($661) + -97)|0;
     $663 = ($662>>>0)<(26);
     if ($663) {
      $$0 = 0;
      STACKTOP = sp;return ($$0|0);
     }
    }
    $664 = HEAP32[$368>>2]|0;
    __ZN8UkEngine10markChangeEi($this,$664);
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
  }
  HEAP32[$382>>2] = 3;
  $399 = ((($this) + (($381*36)|0)|0) + 3140|0);
  HEAP32[$399>>2] = -1;
  $400 = ((($this) + (($381*36)|0)|0) + 3132|0);
  HEAP32[$400>>2] = -1;
  $401 = ((($this) + (($381*36)|0)|0) + 3136|0);
  HEAP32[$401>>2] = 0;
  HEAP32[$capsLockOn$i$i>>2] = $367;
  $402 = (($capsLockOn$i$i) + 4|0);
  HEAP32[$402>>2] = -1;
  $403 = (($capsLockOn$i$i) + 8|0);
  HEAP32[$403>>2] = -1;
  $$014$i$i$i = 18136;$$023$i$i$i = 70;
  L270: while(1) {
   $404 = $$023$i$i$i >>> 1;
   $405 = $404 << 4;
   $406 = (($$014$i$i$i) + ($405)|0);
   $i$01$i$i$i = 0;
   while(1) {
    $409 = (($capsLockOn$i$i) + ($i$01$i$i$i<<2)|0);
    $410 = HEAP32[$409>>2]|0;
    $411 = (($406) + ($i$01$i$i$i<<2)|0);
    $412 = HEAP32[$411>>2]|0;
    $413 = ($410|0)<($412|0);
    if ($413) {
     $$0$i1$i$i$ph = -1;
     break;
    }
    $414 = ($410|0)>($412|0);
    $408 = (($i$01$i$i$i) + 1)|0;
    if ($414) {
     $$0$i1$i$i$ph = 1;
     break;
    }
    $407 = ($408|0)<(3);
    if ($407) {
     $i$01$i$i$i = $408;
    } else {
     label = 111;
     break L270;
    }
   }
   $415 = ($$023$i$i$i|0)==(1);
   if ($415) {
    $$0$i1$i = -1;
    break;
   }
   $416 = ($$0$i1$i$i$ph|0)<(0);
   $417 = (($$023$i$i$i) - ($404))|0;
   $$$i$i$i = $416 ? $404 : $417;
   $$01$$i$i$i = $416 ? $$014$i$i$i : $406;
   $418 = ($$$i$i$i|0)==(0);
   if ($418) {
    $$0$i1$i = -1;
    break;
   } else {
    $$014$i$i$i = $$01$$i$i$i;$$023$i$i$i = $$$i$i$i;
   }
  }
  if ((label|0) == 111) {
   $419 = ($406|0)==(0|0);
   if ($419) {
    $$0$i1$i = -1;
   } else {
    $$sum35 = $405 | 12;
    $420 = (($$014$i$i$i) + ($$sum35)|0);
    $421 = HEAP32[$420>>2]|0;
    $$0$i1$i = $421;
   }
  }
  $422 = ((($this) + (($381*36)|0)|0) + 3144|0);
  HEAP32[$422>>2] = $$0$i1$i;
  $423 = (($this) + 4|0);
  $424 = HEAP32[$423>>2]|0;
  $425 = (($424) + 4|0);
  $426 = HEAP32[$425>>2]|0;
  $427 = ($426|0)==(0);
  if ($427) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $428 = (($424) + 2100|0);
  $429 = HEAP32[$428>>2]|0;
  $430 = ($429|0)==(6);
  if (!($430)) {
   $431 = $390 | 32;
   $432 = (($431) + -97)|0;
   $433 = ($432>>>0)<(26);
   if ($433) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  }
  $434 = HEAP32[$368>>2]|0;
  __ZN8UkEngine10markChangeEi($this,$434);
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 } else if ((($1|0) == 2)) {
  $257 = (($this) + 4|0);
  $258 = HEAP32[$257>>2]|0;
  $259 = (($258) + 4|0);
  $260 = HEAP32[$259>>2]|0;
  $261 = ($260|0)==(0);
  L291: do {
   if ($261) {
    $335 = 0;
   } else {
    $262 = (($258) + 2100|0);
    $263 = HEAP32[$262>>2]|0;
    $264 = ($263|0)==(10);
    if ($264) {
     $265 = (($this) + 20|0);
     $266 = HEAP32[$265>>2]|0;
     $267 = ($266|0)<(0);
     if ($267) {
      $335 = 0;
     } else {
      $268 = ((($this) + (($266*36)|0)|0) + 3128|0);
      $269 = HEAP32[$268>>2]|0;
      L295: do {
       if ((($269|0) == 0)) {
        $287 = ((($this) + (($266*36)|0)|0) + 3160|0);
        $288 = HEAP32[$287>>2]|0;
        $289 = (($288) + -97)|0;
        $290 = ($289>>>0)<(26);
        $291 = $288 & 95;
        $$0$i$i2 = $290 ? $291 : $288;
        $292 = (($ev) + 12|0);
        $293 = HEAP32[$292>>2]|0;
        switch ($293|0) {
        case 94:  {
         $294 = $$0$i$i2 & 255;
         if ((($294|0) == 69) | (($294|0) == 79) | (($294|0) == 65)) {
          $$pre$phiZ2D = $292;$319 = 94;$escape$06$i = 1;
          break L295;
         } else {
          $335 = 0;
          break L291;
         }
         break;
        }
        case 40:  {
         $295 = $$0$i$i2 & 255;
         $296 = ($295|0)==(65);
         $297 = $296&1;
         $667 = 40;$escape$0$i = $297;
         label = 89;
         break L295;
         break;
        }
        case 43:  {
         $298 = $$0$i$i2 & 255;
         $299 = ($298|0)==(79);
         $300 = ($298|0)==(85);
         $$2$i = $299 | $300;
         $301 = $$2$i&1;
         $667 = 43;$escape$0$i = $301;
         label = 89;
         break L295;
         break;
        }
        case 46: case 126: case 63: case 96: case 39:  {
         $302 = $$0$i$i2 & 255;
         $switch$cast$i = (($302) + -65)|0;
         $303 = ($switch$cast$i>>>0)<(25);
         if (!($303)) {
          $335 = 0;
          break L291;
         }
         $switch$cast$i$clear = $switch$cast$i & 33554431;
         $switch$downshift$i = 17842449 >>> $switch$cast$i$clear;
         $switch$masked$i = $switch$downshift$i & 33554431;
         $phitmp$i = $switch$masked$i & 1;
         $667 = $293;$escape$0$i = $phitmp$i;
         label = 89;
         break L295;
         break;
        }
        default: {
         $335 = 0;
         break L291;
        }
        }
       } else if ((($269|0) == 4) | (($269|0) == 3)) {
        $270 = (($ev) + 12|0);
        $271 = HEAP32[$270>>2]|0;
        switch ($271|0) {
        case 94:  {
         $272 = ((($this) + (($266*36)|0)|0) + 3156|0);
         $273 = HEAP32[$272>>2]|0;
         if ((($273|0) == 45) | (($273|0) == 97) | (($273|0) == 1)) {
          $$pre$phiZ2D = $270;$319 = 94;$escape$06$i = 1;
          break L295;
         } else {
          $335 = 0;
          break L291;
         }
         break;
        }
        case 40:  {
         $274 = ((($this) + (($266*36)|0)|0) + 3156|0);
         $275 = HEAP32[$274>>2]|0;
         $276 = ($275|0)==(1);
         $277 = $276&1;
         $667 = 40;$escape$0$i = $277;
         label = 89;
         break L295;
         break;
        }
        case 43:  {
         $278 = ((($this) + (($266*36)|0)|0) + 3156|0);
         $279 = HEAP32[$278>>2]|0;
         $280 = ($279|0)==(97);
         $281 = ($279|0)==(143);
         $$$i1 = $280 | $281;
         $282 = $$$i1&1;
         $667 = 43;$escape$0$i = $282;
         label = 89;
         break L295;
         break;
        }
        case 46: case 126: case 63: case 96: case 39:  {
         $283 = ((($this) + (($266*36)|0)|0) + 3152|0);
         $284 = HEAP32[$283>>2]|0;
         $285 = ($284|0)==(0);
         $286 = $285&1;
         $667 = $271;$escape$0$i = $286;
         label = 89;
         break L295;
         break;
        }
        default: {
         $335 = 0;
         break L291;
        }
        }
       } else {
        $335 = 0;
        break L291;
       }
      } while(0);
      if ((label|0) == 89) {
       $304 = ($escape$0$i|0)==(0);
       if ($304) {
        $335 = 0;
        break;
       }
       $$pre30 = (($ev) + 12|0);
       $$pre$phiZ2D = $$pre30;$319 = $667;$escape$06$i = $escape$0$i;
      }
      $305 = (($266) + 1)|0;
      HEAP32[$265>>2] = $305;
      $306 = ((($this) + (($305*36)|0)|0) + 3128|0);
      HEAP32[$306>>2] = 0;
      $307 = ((($this) + (($305*36)|0)|0) + 3136|0);
      HEAP32[$307>>2] = -1;
      $308 = ((($this) + (($305*36)|0)|0) + 3140|0);
      HEAP32[$308>>2] = -1;
      $309 = ((($this) + (($305*36)|0)|0) + 3132|0);
      HEAP32[$309>>2] = -1;
      $310 = ((($this) + (($305*36)|0)|0) + 3160|0);
      HEAP32[$310>>2] = 63;
      $311 = ((($this) + (($305*36)|0)|0) + 3156|0);
      HEAP32[$311>>2] = -1;
      $312 = HEAP32[$265>>2]|0;
      $313 = (($312) + 1)|0;
      HEAP32[$265>>2] = $313;
      $$sum$i = (($266) + 2)|0;
      $314 = ((($this) + (($$sum$i*36)|0)|0) + 3128|0);
      HEAP32[$314>>2] = 0;
      $315 = ((($this) + (($$sum$i*36)|0)|0) + 3136|0);
      HEAP32[$315>>2] = -1;
      $316 = ((($this) + (($$sum$i*36)|0)|0) + 3140|0);
      HEAP32[$316>>2] = -1;
      $317 = ((($this) + (($$sum$i*36)|0)|0) + 3132|0);
      HEAP32[$317>>2] = -1;
      $318 = ((($this) + (($$sum$i*36)|0)|0) + 3160|0);
      HEAP32[$318>>2] = $319;
      $320 = ((($this) + (($$sum$i*36)|0)|0) + 3156|0);
      HEAP32[$320>>2] = -1;
      $321 = (($this) + 3112|0);
      $322 = HEAP32[$321>>2]|0;
      HEAP8[$322>>0] = 92;
      $323 = HEAP32[$$pre$phiZ2D>>2]|0;
      $324 = $323&255;
      $325 = HEAP32[$321>>2]|0;
      $326 = (($325) + 1|0);
      HEAP8[$326>>0] = $324;
      $327 = (($this) + 3116|0);
      $328 = HEAP32[$327>>2]|0;
      HEAP32[$328>>2] = 2;
      $329 = (($this) + 3120|0);
      HEAP8[$329>>0] = 1;
      $330 = ($escape$06$i|0)==(0);
      if ($330) {
       $$pre29 = HEAP32[$0>>2]|0;
       $phitmp = ($$pre29|0)==(1);
       $335 = $phitmp;
       break;
      } else {
       $$0 = 1;
       STACKTOP = sp;return ($$0|0);
      }
     }
    } else {
     $335 = 0;
    }
   }
  } while(0);
  $331 = (($this) + 20|0);
  $332 = HEAP32[$331>>2]|0;
  $333 = (($332) + 1)|0;
  HEAP32[$331>>2] = $333;
  $334 = $335&1;
  $336 = ((($this) + (($333*36)|0)|0) + 3128|0);
  HEAP32[$336>>2] = $334;
  $337 = ((($this) + (($333*36)|0)|0) + 3136|0);
  HEAP32[$337>>2] = -1;
  $338 = ((($this) + (($333*36)|0)|0) + 3140|0);
  HEAP32[$338>>2] = -1;
  $339 = ((($this) + (($333*36)|0)|0) + 3132|0);
  HEAP32[$339>>2] = -1;
  $340 = (($ev) + 12|0);
  $341 = HEAP32[$340>>2]|0;
  $342 = ((($this) + (($333*36)|0)|0) + 3160|0);
  HEAP32[$342>>2] = $341;
  $343 = (($ev) + 8|0);
  $344 = HEAP32[$343>>2]|0;
  $345 = $344 & 1;
  $346 = $345 ^ 1;
  $$0$i4 = (($346) + ($344))|0;
  $347 = ((($this) + (($333*36)|0)|0) + 3156|0);
  HEAP32[$347>>2] = $$0$i4;
  $348 = ((($this) + (($333*36)|0)|0) + 3152|0);
  HEAP32[$348>>2] = 0;
  $349 = $345 ^ 1;
  $350 = ((($this) + (($333*36)|0)|0) + 3148|0);
  HEAP32[$350>>2] = $349;
  $351 = HEAP32[$257>>2]|0;
  $352 = (($351) + 4|0);
  $353 = HEAP32[$352>>2]|0;
  $354 = ($353|0)==(0);
  if ($354) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $355 = (($351) + 2100|0);
  $356 = HEAP32[$355>>2]|0;
  $357 = ($356|0)==(6);
  if (!($357)) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $358 = HEAP32[$331>>2]|0;
  __ZN8UkEngine10markChangeEi($this,$358);
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 } else {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __Z18tripleVowelComparePKvS0_($p1,$p2) {
 $p1 = $p1|0;
 $p2 = $p2|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $i$01 = 0;
 while(1) {
  $2 = (($p1) + ($i$01<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = (($p2) + ($i$01<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($3|0)<($5|0);
  if ($6) {
   $$0 = -1;
   break;
  }
  $7 = ($3|0)>($5|0);
  $1 = (($i$01) + 1)|0;
  if ($7) {
   $$0 = 1;
   break;
  }
  $0 = ($1|0)<(3);
  if ($0) {
   $i$01 = $1;
  } else {
   $$0 = 0;
   break;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __Z16tripleConComparePKvS0_($p1,$p2) {
 $p1 = $p1|0;
 $p2 = $p2|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $i$01 = 0;
 while(1) {
  $2 = (($p1) + ($i$01<<2)|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = (($p2) + ($i$01<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($3|0)<($5|0);
  if ($6) {
   $$0 = -1;
   break;
  }
  $7 = ($3|0)>($5|0);
  $1 = (($i$01) + 1)|0;
  if ($7) {
   $$0 = 1;
   break;
  }
  $0 = ($1|0)<(3);
  if ($0) {
   $i$01 = $1;
  } else {
   $$0 = 0;
   break;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __Z13VCPairComparePKvS0_($p1,$p2) {
 $p1 = $p1|0;
 $p2 = $p2|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$p1>>2]|0;
 $1 = HEAP32[$p2>>2]|0;
 $2 = ($0|0)<($1|0);
 if ($2) {
  $$0 = -1;
 } else {
  $3 = ($0|0)>($1|0);
  if ($3) {
   $$0 = 1;
  } else {
   $4 = (($p1) + 4|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = (($p2) + 4|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($5|0)<($7|0);
   if ($8) {
    $$0 = -1;
   } else {
    $9 = ($5|0)>($7|0);
    $$ = $9&1;
    $$0 = $$;
   }
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __Z10isValidCVC6ConSeq8VowelSeqS_($c1,$v,$c2) {
 $c1 = $c1|0;
 $v = $v|0;
 $c2 = $c2|0;
 var $$ = 0, $$$i$i = 0, $$$i$i9 = 0, $$$i1$i = 0, $$$i1$i6 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i11 = 0, $$0$i2$i21 = 0, $$0$i2$i722 = 0, $$01$$i$i = 0, $$01$$i$i10 = 0, $$014$i$i = 0, $$014$i$i3 = 0, $$023$i$i = 0, $$023$i$i4 = 0, $$sum19 = 0, $$sum20 = 0, $0 = 0, $1 = 0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $brmerge$demorgan = 0, $c2$off = 0;
 var $i$0$lcssa$i = 0, $i$04$i = 0, $not$$i = 0, $not$$i12 = 0, $not$$i17 = 0, $not$3$i = 0, $or$cond = 0, $or$cond10 = 0, $or$cond12 = 0, $v$off = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($v|0)==(-1);
 $1 = ($c1|0)==(-1);
 if ($0) {
  $2 = ($c2|0)!=(-1);
  $$ = $1 | $2;
  $$0 = $$;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = ($c2|0)==(-1);
 if ($1) {
  if ($3) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
  $4 = ((13896 + (($v*52)|0)|0) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)==(0);
  if ($6) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $7 = ((17536 + (($c2*20)|0)|0) + 16|0);
  $8 = HEAP8[$7>>0]|0;
  $9 = ($8<<24>>24)==(0);
  if ($9) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$014$i$i = 19736;$$023$i$i = 153;
  }
  while(1) {
   $10 = $$023$i$i >>> 1;
   $11 = $10 << 3;
   $12 = (($$014$i$i) + ($11)|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ($13|0)>($v|0);
   if ($14) {
    $$0$i2$i21 = -1;
   } else {
    $15 = ($13|0)<($v|0);
    if ($15) {
     $$0$i2$i21 = 1;
    } else {
     $$sum20 = $11 | 4;
     $16 = (($$014$i$i) + ($$sum20)|0);
     $17 = HEAP32[$16>>2]|0;
     $18 = ($17|0)>($c2|0);
     if ($18) {
      $$0$i2$i21 = -1;
     } else {
      $19 = ($17|0)<($c2|0);
      $$$i1$i = $19&1;
      if ($19) {
       $$0$i2$i21 = $$$i1$i;
      } else {
       $$0$i$i = $12;
       break;
      }
     }
    }
   }
   $20 = ($$023$i$i|0)==(1);
   if ($20) {
    $$0$i$i = 0;
    break;
   }
   $21 = ($$0$i2$i21|0)<(0);
   $22 = (($$023$i$i) - ($10))|0;
   $$$i$i = $21 ? $10 : $22;
   $$01$$i$i = $21 ? $$014$i$i : $12;
   $23 = ($$$i$i|0)==(0);
   if ($23) {
    $$0$i$i = 0;
    break;
   } else {
    $$014$i$i = $$01$$i$i;$$023$i$i = $$$i$i;
   }
  }
  $not$$i = ($$0$i$i|0)!=(0|0);
  $$0 = $not$$i;
  STACKTOP = sp;return ($$0|0);
 }
 if ((($c1|0) == 8)) {
  $24 = ((13896 + (($v*52)|0)|0) + 12|0);
  $25 = HEAP32[$24>>2]|0;
  $not$3$i = ($25|0)!=(75);
  $54 = $not$3$i;
 } else if ((($c1|0) == 11)) {
  $i$04$i = 0;
  while(1) {
   $30 = (21128 + ($i$04$i<<2)|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ($31|0)==($v|0);
   $29 = (($i$04$i) + 1)|0;
   if ($32) {
    $i$0$lcssa$i = $i$04$i;
    break;
   }
   $28 = ($29|0)==(12);
   if ($28) {
    $i$0$lcssa$i = 12;
    break;
   } else {
    $i$04$i = $29;
   }
  }
  $33 = ($i$0$lcssa$i|0)!=(12);
  $54 = $33;
 } else if ((($c1|0) == 22)) {
  $26 = ((13896 + (($v*52)|0)|0) + 12|0);
  $27 = HEAP32[$26>>2]|0;
  $not$$i17 = ($27|0)!=(143);
  $54 = $not$$i17;
 } else {
  $54 = 1;
 }
 if ($3) {
  $$0 = $54;
  STACKTOP = sp;return ($$0|0);
 }
 $34 = ((13896 + (($v*52)|0)|0) + 8|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = ($35|0)==(0);
 L37: do {
  if ($36) {
   label = 31;
  } else {
   $37 = ((17536 + (($c2*20)|0)|0) + 16|0);
   $38 = HEAP8[$37>>0]|0;
   $39 = ($38<<24>>24)==(0);
   if ($39) {
    label = 31;
   } else {
    $$014$i$i3 = 19736;$$023$i$i4 = 153;
    while(1) {
     $40 = $$023$i$i4 >>> 1;
     $41 = $40 << 3;
     $42 = (($$014$i$i3) + ($41)|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = ($43|0)>($v|0);
     if ($44) {
      $$0$i2$i722 = -1;
     } else {
      $45 = ($43|0)<($v|0);
      if ($45) {
       $$0$i2$i722 = 1;
      } else {
       $$sum19 = $41 | 4;
       $46 = (($$014$i$i3) + ($$sum19)|0);
       $47 = HEAP32[$46>>2]|0;
       $48 = ($47|0)>($c2|0);
       if ($48) {
        $$0$i2$i722 = -1;
       } else {
        $49 = ($47|0)<($c2|0);
        $$$i1$i6 = $49&1;
        if ($49) {
         $$0$i2$i722 = $$$i1$i6;
        } else {
         $$0$i$i11 = $42;
         break;
        }
       }
      }
     }
     $50 = ($$023$i$i4|0)==(1);
     if ($50) {
      label = 31;
      break L37;
     }
     $51 = ($$0$i2$i722|0)<(0);
     $52 = (($$023$i$i4) - ($40))|0;
     $$$i$i9 = $51 ? $40 : $52;
     $$01$$i$i10 = $51 ? $$014$i$i3 : $42;
     $53 = ($$$i$i9|0)==(0);
     if ($53) {
      label = 31;
      break L37;
     } else {
      $$014$i$i3 = $$01$$i$i10;$$023$i$i4 = $$$i$i9;
     }
    }
    $not$$i12 = ($$0$i$i11|0)!=(0|0);
    $brmerge$demorgan = $54 & $not$$i12;
    if ($brmerge$demorgan) {
     $$0 = 1;
     STACKTOP = sp;return ($$0|0);
    } else {
     if ($not$$i12) {
      break;
     } else {
      label = 31;
      break;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 31) {
  $55 = ($c1|0)==(22);
  $56 = ($v|0)==(11);
  $or$cond = $55 & $56;
  if ($or$cond) {
   if ((($c2|0) == 15) | (($c2|0) == 18)) {
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
  }
  $57 = ($c1|0)==(8);
  $v$off = (($v) + -3)|0;
  $58 = ($v$off>>>0)<(2);
  $or$cond10 = $57 & $58;
  $c2$off = (($c2) + -15)|0;
  $59 = ($c2$off>>>0)<(2);
  $or$cond12 = $or$cond10 & $59;
  if ($or$cond12) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function __ZN8UkEngine10markChangeEi($this,$pos) {
 $this = $this|0;
 $pos = $pos|0;
 var $$$i = 0, $$$v$i = 0, $$0$i = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $bytesWritten$i = 0, $i$01$i = 0, $os$i = 0, $stdChar$1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $os$i = sp + 8|0;
 $bytesWritten$i = sp;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)>($pos|0);
 if (!($2)) {
  STACKTOP = sp;return;
 }
 $3 = (($1) + -1)|0;
 $4 = (($this) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + 2100|0);
 $7 = HEAP32[$6>>2]|0;
 if ((($7|0) == 0) | (($7|0) == 12)) {
  $8 = (1 - ($pos))|0;
  $9 = (($8) + ($3))|0;
  $$0$i = $9;
 } else {
  HEAP32[$os$i>>2] = ((64 + 8|0));
  $10 = (($os$i) + 4|0);
  $11 = (($os$i) + 12|0);
  ;HEAP32[$10+0>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;HEAP32[$10+12>>2]=0|0;HEAP32[$10+16>>2]=0|0;
  $12 = (__ZN13CVnCharsetLib12getVnCharsetEi($7)|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($13) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  FUNCTION_TABLE_vi[$15 & 255]($12);
  $i$01$i = $pos;
  while(1) {
   $16 = ((($this) + (($i$01$i*36)|0)|0) + 3156|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($17|0)==(-1);
   if ($18) {
    $27 = ((($this) + (($i$01$i*36)|0)|0) + 3160|0);
    $28 = HEAP32[$27>>2]|0;
    $stdChar$1$i = $28;
   } else {
    $19 = ((($this) + (($i$01$i*36)|0)|0) + 3148|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==(0);
    $$$v$i = $21 ? 65536 : 65535;
    $$$i = (($$$v$i) + ($17))|0;
    $22 = ((($this) + (($i$01$i*36)|0)|0) + 3152|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = ($23|0)==(0);
    if ($24) {
     $stdChar$1$i = $$$i;
    } else {
     $25 = $23 << 1;
     $26 = (($$$i) + ($25))|0;
     $stdChar$1$i = $26;
    }
   }
   $29 = ($stdChar$1$i|0)==(-1);
   if (!($29)) {
    $30 = HEAP32[$12>>2]|0;
    $31 = (($30) + 12|0);
    $32 = HEAP32[$31>>2]|0;
    (FUNCTION_TABLE_iiiii[$32 & 31]($12,$os$i,$stdChar$1$i,$bytesWritten$i)|0);
   }
   $33 = (($i$01$i) + 1)|0;
   $34 = ($i$01$i|0)<($3|0);
   if ($34) {
    $i$01$i = $33;
   } else {
    break;
   }
  }
  $$pre = HEAP32[$11>>2]|0;
  $35 = HEAP32[$4>>2]|0;
  $36 = (($35) + 2100|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ($37|0)==(4);
  if ($38) {
   $39 = (($$pre|0) / 2)&-1;
   $$0$i = $39;
  } else {
   $$0$i = $$pre;
  }
 }
 $40 = (($this) + 12|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = (($41) + ($$0$i))|0;
 HEAP32[$40>>2] = $42;
 HEAP32[$0>>2] = $pos;
 STACKTOP = sp;return;
}
function __ZN8UkEngine16appendConsonnantER10UkKeyEvent($this,$ev$0$2$val,$ev$0$3$val) {
 $this = $this|0;
 $ev$0$2$val = $ev$0$2$val|0;
 $ev$0$3$val = $ev$0$3$val|0;
 var $$ = 0, $$$i$i = 0, $$$i$i22 = 0, $$$i$i35 = 0, $$$i$i48 = 0, $$$i$i9 = 0, $$0 = 0, $$0$i = 0, $$0$i1 = 0, $$0$i1$i$ph = 0, $$0$i1$i20$ph = 0, $$0$i1$i33$ph = 0, $$0$i1$i46$ph = 0, $$0$i1$i7$ph = 0, $$0$i13 = 0, $$0$i26 = 0, $$0$i54 = 0, $$0$i55 = 0, $$01$$i$i = 0, $$01$$i$i10 = 0;
 var $$01$$i$i23 = 0, $$01$$i$i36 = 0, $$01$$i$i49 = 0, $$014$i$i = 0, $$014$i$i16 = 0, $$014$i$i29 = 0, $$014$i$i3 = 0, $$014$i$i42 = 0, $$023$i$i = 0, $$023$i$i17 = 0, $$023$i$i30 = 0, $$023$i$i4 = 0, $$023$i$i43 = 0, $$neg6 = 0, $$off = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum15 = 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $c1$0 = 0, $c1$1 = 0, $complexEvent$0 = 0, $extract$t2 = 0, $i$01$i$i = 0, $i$01$i$i19 = 0, $i$01$i$i32 = 0, $i$01$i$i45 = 0, $i$01$i$i6 = 0, $key$i28 = 0, $key$i41 = 0, $newCs$0 = 0, $or$cond = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $key$i41 = sp + 16|0;
 $key$i28 = sp;
 $0 = (($this) + 20|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 1)|0;
 HEAP32[$0>>2] = $2;
 $3 = ((($this) + (($2*36)|0)|0) + 3128|0);
 $4 = $ev$0$2$val & 1;
 $5 = $4 ^ 1;
 $$0$i = (($5) + ($ev$0$2$val))|0;
 $6 = ((($this) + (($2*36)|0)|0) + 3156|0);
 HEAP32[$6>>2] = $$0$i;
 $7 = ((($this) + (($2*36)|0)|0) + 3148|0);
 HEAP32[$7>>2] = $5;
 $8 = ((($this) + (($2*36)|0)|0) + 3160|0);
 HEAP32[$8>>2] = $ev$0$3$val;
 $9 = ((($this) + (($2*36)|0)|0) + 3152|0);
 HEAP32[$9>>2] = 0;
 $10 = HEAP32[$0>>2]|0;
 $11 = ($10|0)==(0);
 if (!($11)) {
  $12 = (($this) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($13) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ($15|0)==(0);
  if (!($16)) {
   $50 = (($10) + -1)|0;
   $51 = ((($this) + (($50*36)|0)|0) + 3128|0);
   $52 = HEAP32[$51>>2]|0;
   switch ($52|0) {
   case 1:  {
    HEAP32[$3>>2] = 2;
    $61 = ((($this) + (($2*36)|0)|0) + 3132|0);
    HEAP32[$61>>2] = 0;
    $62 = ((($this) + (($2*36)|0)|0) + 3140|0);
    HEAP32[$62>>2] = -1;
    $63 = ((($this) + (($2*36)|0)|0) + 3136|0);
    HEAP32[$63>>2] = -1;
    HEAP32[$key$i41>>2] = $$0$i;
    $64 = (($key$i41) + 4|0);
    HEAP32[$64>>2] = -1;
    $65 = (($key$i41) + 8|0);
    HEAP32[$65>>2] = -1;
    $$014$i$i3 = 19256;$$023$i$i4 = 30;
    L6: while(1) {
     $66 = $$023$i$i4 >>> 1;
     $67 = $66 << 4;
     $68 = (($$014$i$i3) + ($67)|0);
     $i$01$i$i6 = 0;
     while(1) {
      $71 = (($key$i41) + ($i$01$i$i6<<2)|0);
      $72 = HEAP32[$71>>2]|0;
      $73 = (($68) + ($i$01$i$i6<<2)|0);
      $74 = HEAP32[$73>>2]|0;
      $75 = ($72|0)<($74|0);
      if ($75) {
       $$0$i1$i7$ph = -1;
       break;
      }
      $76 = ($72|0)>($74|0);
      $70 = (($i$01$i$i6) + 1)|0;
      if ($76) {
       $$0$i1$i7$ph = 1;
       break;
      }
      $69 = ($70|0)<(3);
      if ($69) {
       $i$01$i$i6 = $70;
      } else {
       label = 25;
       break L6;
      }
     }
     $77 = ($$023$i$i4|0)==(1);
     if ($77) {
      $$0$i13 = -1;
      break;
     }
     $78 = ($$0$i1$i7$ph|0)<(0);
     $79 = (($$023$i$i4) - ($66))|0;
     $$$i$i9 = $78 ? $66 : $79;
     $$01$$i$i10 = $78 ? $$014$i$i3 : $68;
     $80 = ($$$i$i9|0)==(0);
     if ($80) {
      $$0$i13 = -1;
      break;
     } else {
      $$014$i$i3 = $$01$$i$i10;$$023$i$i4 = $$$i$i9;
     }
    }
    if ((label|0) == 25) {
     $81 = ($68|0)==(0|0);
     if ($81) {
      $$0$i13 = -1;
     } else {
      $$sum14 = $67 | 12;
      $82 = (($$014$i$i3) + ($$sum14)|0);
      $83 = HEAP32[$82>>2]|0;
      $$0$i13 = $83;
     }
    }
    $84 = ((($this) + (($2*36)|0)|0) + 3144|0);
    HEAP32[$84>>2] = $$0$i13;
    $85 = HEAP32[$12>>2]|0;
    $86 = (($85) + 2100|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==(6);
    if (!($88)) {
     $$0 = 0;
     STACKTOP = sp;return ($$0|0);
    }
    $89 = HEAP32[$0>>2]|0;
    __ZN8UkEngine10markChangeEi($this,$89);
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 0:  {
    HEAP32[$3>>2] = 0;
    $53 = ((($this) + (($2*36)|0)|0) + 3136|0);
    HEAP32[$53>>2] = -1;
    $54 = ((($this) + (($2*36)|0)|0) + 3140|0);
    HEAP32[$54>>2] = -1;
    $55 = ((($this) + (($2*36)|0)|0) + 3132|0);
    HEAP32[$55>>2] = -1;
    $56 = HEAP32[$12>>2]|0;
    $57 = (($56) + 2100|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = ($58|0)==(6);
    if (!($59)) {
     $$0 = 0;
     STACKTOP = sp;return ($$0|0);
    }
    $60 = HEAP32[$0>>2]|0;
    __ZN8UkEngine10markChangeEi($this,$60);
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 6: case 5: case 2:  {
    $185 = ((($this) + (($50*36)|0)|0) + 3144|0);
    $186 = HEAP32[$185>>2]|0;
    $187 = (17536 + (($186*20)|0)|0);
    $188 = HEAP32[$187>>2]|0;
    $189 = ($188|0)==(3);
    do {
     if ($189) {
      label = 94;
     } else {
      $190 = ($188|0)==(2);
      $191 = ((17536 + (($186*20)|0)|0) + 4|0);
      $192 = HEAP32[$191>>2]|0;
      L30: do {
       if ($190) {
        $193 = ((17536 + (($186*20)|0)|0) + 8|0);
        $194 = HEAP32[$193>>2]|0;
        HEAP32[$key$i41>>2] = $192;
        $195 = (($key$i41) + 4|0);
        HEAP32[$195>>2] = $194;
        $196 = (($key$i41) + 8|0);
        HEAP32[$196>>2] = $$0$i;
        $$014$i$i42 = 19256;$$023$i$i43 = 30;
        L43: while(1) {
         $197 = $$023$i$i43 >>> 1;
         $198 = $197 << 4;
         $199 = (($$014$i$i42) + ($198)|0);
         $i$01$i$i45 = 0;
         while(1) {
          $202 = (($key$i41) + ($i$01$i$i45<<2)|0);
          $203 = HEAP32[$202>>2]|0;
          $204 = (($199) + ($i$01$i$i45<<2)|0);
          $205 = HEAP32[$204>>2]|0;
          $206 = ($203|0)<($205|0);
          if ($206) {
           $$0$i1$i46$ph = -1;
           break;
          }
          $207 = ($203|0)>($205|0);
          $201 = (($i$01$i$i45) + 1)|0;
          if ($207) {
           $$0$i1$i46$ph = 1;
           break;
          }
          $200 = ($201|0)<(3);
          if ($200) {
           $i$01$i$i45 = $201;
          } else {
           break L43;
          }
         }
         $208 = ($$023$i$i43|0)==(1);
         if ($208) {
          $newCs$0 = -1;
          break L30;
         }
         $209 = ($$0$i1$i46$ph|0)<(0);
         $210 = (($$023$i$i43) - ($197))|0;
         $$$i$i48 = $209 ? $197 : $210;
         $$01$$i$i49 = $209 ? $$014$i$i42 : $199;
         $211 = ($$$i$i48|0)==(0);
         if ($211) {
          $newCs$0 = -1;
          break L30;
         } else {
          $$014$i$i42 = $$01$$i$i49;$$023$i$i43 = $$$i$i48;
         }
        }
        $212 = ($199|0)==(0|0);
        if ($212) {
         $newCs$0 = -1;
        } else {
         $$sum12 = $198 | 12;
         $213 = (($$014$i$i42) + ($$sum12)|0);
         $214 = HEAP32[$213>>2]|0;
         $newCs$0 = $214;
        }
       } else {
        HEAP32[$key$i28>>2] = $192;
        $215 = (($key$i28) + 4|0);
        HEAP32[$215>>2] = $$0$i;
        $216 = (($key$i28) + 8|0);
        HEAP32[$216>>2] = -1;
        $$014$i$i29 = 19256;$$023$i$i30 = 30;
        L32: while(1) {
         $217 = $$023$i$i30 >>> 1;
         $218 = $217 << 4;
         $219 = (($$014$i$i29) + ($218)|0);
         $i$01$i$i32 = 0;
         while(1) {
          $222 = (($key$i28) + ($i$01$i$i32<<2)|0);
          $223 = HEAP32[$222>>2]|0;
          $224 = (($219) + ($i$01$i$i32<<2)|0);
          $225 = HEAP32[$224>>2]|0;
          $226 = ($223|0)<($225|0);
          if ($226) {
           $$0$i1$i33$ph = -1;
           break;
          }
          $227 = ($223|0)>($225|0);
          $221 = (($i$01$i$i32) + 1)|0;
          if ($227) {
           $$0$i1$i33$ph = 1;
           break;
          }
          $220 = ($221|0)<(3);
          if ($220) {
           $i$01$i$i32 = $221;
          } else {
           break L32;
          }
         }
         $228 = ($$023$i$i30|0)==(1);
         if ($228) {
          $newCs$0 = -1;
          break L30;
         }
         $229 = ($$0$i1$i33$ph|0)<(0);
         $230 = (($$023$i$i30) - ($217))|0;
         $$$i$i35 = $229 ? $217 : $230;
         $$01$$i$i36 = $229 ? $$014$i$i29 : $219;
         $231 = ($$$i$i35|0)==(0);
         if ($231) {
          $newCs$0 = -1;
          break L30;
         } else {
          $$014$i$i29 = $$01$$i$i36;$$023$i$i30 = $$$i$i35;
         }
        }
        $232 = ($219|0)==(0|0);
        if ($232) {
         $newCs$0 = -1;
        } else {
         $$sum11 = $218 | 12;
         $233 = (($$014$i$i29) + ($$sum11)|0);
         $234 = HEAP32[$233>>2]|0;
         $newCs$0 = $234;
        }
       }
      } while(0);
      $235 = ($newCs$0|0)==(-1);
      if ($235) {
       label = 94;
      } else {
       $$off = (($52) + -5)|0;
       $switch = ($$off>>>0)<(2);
       if ($switch) {
        $236 = ((($this) + (($50*36)|0)|0) + 3132|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = ($237|0)==(-1);
        if ($238) {
         $c1$1 = -1;
        } else {
         $239 = $237 ^ -1;
         $240 = (($10) + ($239))|0;
         $241 = ((($this) + (($240*36)|0)|0) + 3144|0);
         $242 = HEAP32[$241>>2]|0;
         $c1$1 = $242;
        }
        $243 = ((($this) + (($50*36)|0)|0) + 3136|0);
        $244 = HEAP32[$243>>2]|0;
        $245 = (($50) - ($244))|0;
        $246 = ((($this) + (($245*36)|0)|0) + 3144|0);
        $247 = HEAP32[$246>>2]|0;
        $248 = (__Z10isValidCVC6ConSeq8VowelSeqS_($c1$1,$247,$newCs$0)|0);
        if (!($248)) {
         label = 94;
         break;
        }
       }
       $252 = ($52|0)==(2);
       do {
        if ($252) {
         HEAP32[$3>>2] = 2;
         $253 = ((($this) + (($2*36)|0)|0) + 3132|0);
         HEAP32[$253>>2] = 0;
         $254 = ((($this) + (($2*36)|0)|0) + 3140|0);
         HEAP32[$254>>2] = -1;
         $255 = ((($this) + (($2*36)|0)|0) + 3136|0);
         HEAP32[$255>>2] = -1;
        } else {
         $256 = ($52|0)==(5);
         if ($256) {
          HEAP32[$3>>2] = 5;
          $257 = ((($this) + (($2*36)|0)|0) + 3132|0);
          HEAP32[$257>>2] = -1;
          $258 = ((($this) + (($2*36)|0)|0) + 3140|0);
          HEAP32[$258>>2] = 0;
          $259 = ((($this) + (($50*36)|0)|0) + 3136|0);
          $260 = HEAP32[$259>>2]|0;
          $261 = (($260) + 1)|0;
          $262 = ((($this) + (($2*36)|0)|0) + 3136|0);
          HEAP32[$262>>2] = $261;
          break;
         } else {
          HEAP32[$3>>2] = 6;
          $263 = ((($this) + (($50*36)|0)|0) + 3132|0);
          $264 = HEAP32[$263>>2]|0;
          $265 = (($264) + 1)|0;
          $266 = ((($this) + (($2*36)|0)|0) + 3132|0);
          HEAP32[$266>>2] = $265;
          $267 = ((($this) + (($2*36)|0)|0) + 3140|0);
          HEAP32[$267>>2] = 0;
          $268 = ((($this) + (($50*36)|0)|0) + 3136|0);
          $269 = HEAP32[$268>>2]|0;
          $270 = (($269) + 1)|0;
          $271 = ((($this) + (($2*36)|0)|0) + 3136|0);
          HEAP32[$271>>2] = $270;
          break;
         }
        }
       } while(0);
       $272 = ((($this) + (($2*36)|0)|0) + 3144|0);
       HEAP32[$272>>2] = $newCs$0;
      }
     }
    } while(0);
    if ((label|0) == 94) {
     HEAP32[$3>>2] = 0;
     $249 = ((($this) + (($2*36)|0)|0) + 3136|0);
     HEAP32[$249>>2] = -1;
     $250 = ((($this) + (($2*36)|0)|0) + 3140|0);
     HEAP32[$250>>2] = -1;
     $251 = ((($this) + (($2*36)|0)|0) + 3132|0);
     HEAP32[$251>>2] = -1;
    }
    $273 = HEAP32[$12>>2]|0;
    $274 = (($273) + 2100|0);
    $275 = HEAP32[$274>>2]|0;
    $276 = ($275|0)==(6);
    if (!($276)) {
     $$0 = 0;
     STACKTOP = sp;return ($$0|0);
    }
    $277 = HEAP32[$0>>2]|0;
    __ZN8UkEngine10markChangeEi($this,$277);
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 4: case 3:  {
    $90 = ((($this) + (($50*36)|0)|0) + 3144|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(38);
    $93 = ($91|0)==(43);
    $or$cond = $92 | $93;
    $$ = $or$cond ? 44 : $91;
    $94 = ((($this) + (($50*36)|0)|0) + 3132|0);
    $95 = HEAP32[$94>>2]|0;
    $96 = ($95|0)==(-1);
    if ($96) {
     $c1$0 = -1;
    } else {
     $97 = $95 ^ -1;
     $98 = (($10) + ($97))|0;
     $99 = ((($this) + (($98*36)|0)|0) + 3144|0);
     $100 = HEAP32[$99>>2]|0;
     $c1$0 = $100;
    }
    HEAP32[$key$i41>>2] = $$0$i;
    $101 = (($key$i41) + 4|0);
    HEAP32[$101>>2] = -1;
    $102 = (($key$i41) + 8|0);
    HEAP32[$102>>2] = -1;
    $$014$i$i16 = 19256;$$023$i$i17 = 30;
    L79: while(1) {
     $103 = $$023$i$i17 >>> 1;
     $104 = $103 << 4;
     $105 = (($$014$i$i16) + ($104)|0);
     $i$01$i$i19 = 0;
     while(1) {
      $108 = (($key$i41) + ($i$01$i$i19<<2)|0);
      $109 = HEAP32[$108>>2]|0;
      $110 = (($105) + ($i$01$i$i19<<2)|0);
      $111 = HEAP32[$110>>2]|0;
      $112 = ($109|0)<($111|0);
      if ($112) {
       $$0$i1$i20$ph = -1;
       break;
      }
      $113 = ($109|0)>($111|0);
      $107 = (($i$01$i$i19) + 1)|0;
      if ($113) {
       $$0$i1$i20$ph = 1;
       break;
      }
      $106 = ($107|0)<(3);
      if ($106) {
       $i$01$i$i19 = $107;
      } else {
       label = 38;
       break L79;
      }
     }
     $114 = ($$023$i$i17|0)==(1);
     if ($114) {
      $$0$i26 = -1;
      break;
     }
     $115 = ($$0$i1$i20$ph|0)<(0);
     $116 = (($$023$i$i17) - ($103))|0;
     $$$i$i22 = $115 ? $103 : $116;
     $$01$$i$i23 = $115 ? $$014$i$i16 : $105;
     $117 = ($$$i$i22|0)==(0);
     if ($117) {
      $$0$i26 = -1;
      break;
     } else {
      $$014$i$i16 = $$01$$i$i23;$$023$i$i17 = $$$i$i22;
     }
    }
    if ((label|0) == 38) {
     $118 = ($105|0)==(0|0);
     if ($118) {
      $$0$i26 = -1;
     } else {
      $$sum13 = $104 | 12;
      $119 = (($$014$i$i16) + ($$sum13)|0);
      $120 = HEAP32[$119>>2]|0;
      $$0$i26 = $120;
     }
    }
    $121 = (__Z10isValidCVC6ConSeq8VowelSeqS_($c1$0,$$,$$0$i26)|0);
    if ($121) {
     if ($93) {
      __ZN8UkEngine10markChangeEi($this,$50);
      $122 = ((($this) + (($50*36)|0)|0) + 3156|0);
      HEAP32[$122>>2] = 121;
      HEAP32[$90>>2] = 44;
      $complexEvent$0 = 1;
     } else {
      if ($92) {
       $123 = (($10) + -2)|0;
       __ZN8UkEngine10markChangeEi($this,$123);
       $124 = HEAP32[$0>>2]|0;
       $125 = (($124) + -2)|0;
       $126 = ((($this) + (($125*36)|0)|0) + 3156|0);
       HEAP32[$126>>2] = 155;
       $127 = HEAP32[$0>>2]|0;
       $128 = (($127) + -2)|0;
       $129 = ((($this) + (($128*36)|0)|0) + 3144|0);
       HEAP32[$129>>2] = 10;
       HEAP32[$90>>2] = 44;
       $complexEvent$0 = 1;
      } else {
       $complexEvent$0 = 0;
      }
     }
     $130 = HEAP32[$51>>2]|0;
     $131 = ($130|0)==(3);
     if ($131) {
      HEAP32[$3>>2] = 5;
      $132 = ((($this) + (($2*36)|0)|0) + 3132|0);
      HEAP32[$132>>2] = -1;
      $133 = ((($this) + (($2*36)|0)|0) + 3140|0);
      HEAP32[$133>>2] = 0;
      $134 = ((($this) + (($2*36)|0)|0) + 3136|0);
      HEAP32[$134>>2] = 1;
     } else {
      HEAP32[$3>>2] = 6;
      $135 = HEAP32[$94>>2]|0;
      $136 = (($135) + 1)|0;
      $137 = ((($this) + (($2*36)|0)|0) + 3132|0);
      HEAP32[$137>>2] = $136;
      $138 = ((($this) + (($2*36)|0)|0) + 3140|0);
      HEAP32[$138>>2] = 0;
      $139 = ((($this) + (($2*36)|0)|0) + 3136|0);
      HEAP32[$139>>2] = 1;
     }
     $140 = ((($this) + (($2*36)|0)|0) + 3144|0);
     HEAP32[$140>>2] = $$0$i26;
     $141 = HEAP32[$0>>2]|0;
     $142 = (($141) + -1)|0;
     $143 = (13896 + (($91*52)|0)|0);
     $144 = HEAP32[$143>>2]|0;
     $$neg6 = (1 - ($144))|0;
     $145 = (($$neg6) + ($142))|0;
     $146 = ($91>>>0)<(12);
     do {
      if ($146) {
       $$0$i54 = 0;
      } else {
       $147 = ((13896 + (($91*52)|0)|0) + 36|0);
       $148 = HEAP32[$147>>2]|0;
       $149 = ($148|0)==(-1);
       if ($149) {
        $150 = ((13896 + (($91*52)|0)|0) + 44|0);
        $151 = HEAP32[$150>>2]|0;
        $152 = ($151|0)==(-1);
        if (!($152)) {
         if ((($91|0) == 44) | (($91|0) == 66) | (($91|0) == 67)) {
          $$0$i54 = 1;
          break;
         }
         $$0$i54 = $151;
         break;
        }
        $153 = (($91) + -48)|0;
        $154 = ($153>>>0)<(22);
        if ($154) {
         $$0$i54 = 1;
        } else {
         $155 = HEAP32[$12>>2]|0;
         $156 = (($155) + 12|0);
         $157 = HEAP32[$156>>2]|0;
         $158 = ($157|0)==(0);
         if (!($158)) {
          if ((($91|0) == 25) | (($91|0) == 27) | (($91|0) == 40)) {
           $$0$i54 = 1;
           break;
          }
         }
         $$0$i54 = 0;
        }
       } else {
        $$0$i54 = $148;
       }
      }
     } while(0);
     $159 = (($145) + ($$0$i54))|0;
     $160 = ((($this) + (($159*36)|0)|0) + 3152|0);
     $161 = HEAP32[$160>>2]|0;
     $162 = ($161|0)==(0);
     $extract$t2 = ($complexEvent$0<<24>>24)==(0);
     if (!($162)) {
      $163 = (13896 + (($$*52)|0)|0);
      $164 = HEAP32[$163>>2]|0;
      $165 = ($$>>>0)<(12);
      if ($165) {
       $$0$i55 = 0;
      } else {
       $166 = ((13896 + (($$*52)|0)|0) + 36|0);
       $167 = HEAP32[$166>>2]|0;
       $168 = ($167|0)==(-1);
       if ($168) {
        $169 = ((13896 + (($$*52)|0)|0) + 44|0);
        $170 = HEAP32[$169>>2]|0;
        $171 = ($170|0)==(-1);
        if ($171) {
         $$0$i55 = 1;
        } else {
         if ((($$|0) == 44) | (($$|0) == 66) | (($$|0) == 67)) {
          $$0$i55 = 1;
         } else {
          $$0$i55 = $170;
         }
        }
       } else {
        $$0$i55 = $167;
       }
      }
      $172 = (($141) - ($164))|0;
      $173 = (($172) + ($$0$i55))|0;
      $174 = ($173|0)==($159|0);
      if (!($174)) {
       __ZN8UkEngine10markChangeEi($this,$173);
       $175 = HEAP32[$160>>2]|0;
       $176 = ((($this) + (($173*36)|0)|0) + 3152|0);
       HEAP32[$176>>2] = $175;
       __ZN8UkEngine10markChangeEi($this,$159);
       HEAP32[$160>>2] = 0;
       $$0 = 1;
       STACKTOP = sp;return ($$0|0);
      }
     }
     if (!($extract$t2)) {
      $$0 = 1;
      STACKTOP = sp;return ($$0|0);
     }
    } else {
     HEAP32[$3>>2] = 0;
     $177 = ((($this) + (($2*36)|0)|0) + 3136|0);
     HEAP32[$177>>2] = -1;
     $178 = ((($this) + (($2*36)|0)|0) + 3140|0);
     HEAP32[$178>>2] = -1;
     $179 = ((($this) + (($2*36)|0)|0) + 3132|0);
     HEAP32[$179>>2] = -1;
    }
    $180 = HEAP32[$12>>2]|0;
    $181 = (($180) + 2100|0);
    $182 = HEAP32[$181>>2]|0;
    $183 = ($182|0)==(6);
    if (!($183)) {
     $$0 = 0;
     STACKTOP = sp;return ($$0|0);
    }
    $184 = HEAP32[$0>>2]|0;
    __ZN8UkEngine10markChangeEi($this,$184);
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   default: {
    $278 = (($13) + 2100|0);
    $279 = HEAP32[$278>>2]|0;
    $280 = ($279|0)==(6);
    if (!($280)) {
     $$0 = 0;
     STACKTOP = sp;return ($$0|0);
    }
    __ZN8UkEngine10markChangeEi($this,$10);
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
   }
  }
 }
 HEAP32[$3>>2] = 2;
 $17 = ((($this) + (($2*36)|0)|0) + 3132|0);
 HEAP32[$17>>2] = 0;
 $18 = ((($this) + (($2*36)|0)|0) + 3140|0);
 HEAP32[$18>>2] = -1;
 $19 = ((($this) + (($2*36)|0)|0) + 3136|0);
 HEAP32[$19>>2] = -1;
 HEAP32[$key$i41>>2] = $$0$i;
 $20 = (($key$i41) + 4|0);
 HEAP32[$20>>2] = -1;
 $21 = (($key$i41) + 8|0);
 HEAP32[$21>>2] = -1;
 $$014$i$i = 19256;$$023$i$i = 30;
 L138: while(1) {
  $22 = $$023$i$i >>> 1;
  $23 = $22 << 4;
  $24 = (($$014$i$i) + ($23)|0);
  $i$01$i$i = 0;
  while(1) {
   $27 = (($key$i41) + ($i$01$i$i<<2)|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (($24) + ($i$01$i$i<<2)|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ($28|0)<($30|0);
   if ($31) {
    $$0$i1$i$ph = -1;
    break;
   }
   $32 = ($28|0)>($30|0);
   $26 = (($i$01$i$i) + 1)|0;
   if ($32) {
    $$0$i1$i$ph = 1;
    break;
   }
   $25 = ($26|0)<(3);
   if ($25) {
    $i$01$i$i = $26;
   } else {
    label = 10;
    break L138;
   }
  }
  $33 = ($$023$i$i|0)==(1);
  if ($33) {
   $$0$i1 = -1;
   break;
  }
  $34 = ($$0$i1$i$ph|0)<(0);
  $35 = (($$023$i$i) - ($22))|0;
  $$$i$i = $34 ? $22 : $35;
  $$01$$i$i = $34 ? $$014$i$i : $24;
  $36 = ($$$i$i|0)==(0);
  if ($36) {
   $$0$i1 = -1;
   break;
  } else {
   $$014$i$i = $$01$$i$i;$$023$i$i = $$$i$i;
  }
 }
 if ((label|0) == 10) {
  $37 = ($24|0)==(0|0);
  if ($37) {
   $$0$i1 = -1;
  } else {
   $$sum15 = $23 | 12;
   $38 = (($$014$i$i) + ($$sum15)|0);
   $39 = HEAP32[$38>>2]|0;
   $$0$i1 = $39;
  }
 }
 $40 = ((($this) + (($2*36)|0)|0) + 3144|0);
 HEAP32[$40>>2] = $$0$i1;
 $41 = (($this) + 4|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = (($42) + 4|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = ($44|0)==(0);
 if ($45) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $46 = (($42) + 2100|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = ($47|0)==(6);
 if (!($48)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $49 = HEAP32[$0>>2]|0;
 __ZN8UkEngine10markChangeEi($this,$49);
 $$0 = 1;
 STACKTOP = sp;return ($$0|0);
}
function __ZN8UkEngine11writeOutputEPhRi() {
 var $$ = 0, $$$v = 0, $$pre = 0, $$pre2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $bytesWritten = 0, $i$02 = 0, $os = 0, $stdChar$1 = 0, $stdChar$11 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $bytesWritten = sp + 24|0;
 $os = sp;
 $0 = HEAP32[34088>>2]|0;
 HEAP32[$os>>2] = ((64 + 8|0));
 $1 = (($os) + 4|0);
 HEAP32[$1>>2] = 33056;
 $2 = (($os) + 8|0);
 HEAP32[$2>>2] = 33056;
 $3 = (($os) + 16|0);
 HEAP32[$3>>2] = $0;
 $4 = (($os) + 12|0);
 HEAP32[$4>>2] = 0;
 $5 = (($os) + 20|0);
 HEAP32[$5>>2] = 0;
 $6 = HEAP32[((25304 + 4|0))>>2]|0;
 $7 = (($6) + 2100|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZN13CVnCharsetLib12getVnCharsetEi($8)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($10) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vi[$12 & 255]($9);
 $13 = HEAP32[((25304 + 8|0))>>2]|0;
 $14 = HEAP32[((25304 + 20|0))>>2]|0;
 $15 = ($13|0)>($14|0);
 if ($15) {
  $39 = 0;
  HEAP32[34088>>2] = $39;
  STACKTOP = sp;return;
 }
 $40 = $14;$i$02 = $13;
 while(1) {
  $16 = ((25304 + (($i$02*36)|0)|0) + 3156|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)==(-1);
  if ($18) {
   $27 = ((25304 + (($i$02*36)|0)|0) + 3160|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($28|0)<(256);
   if ($29) {
    $30 = (12872 + ($28<<2)|0);
    $31 = HEAP32[$30>>2]|0;
    $stdChar$1 = $31;
    label = 8;
   } else {
    $stdChar$11 = $28;
    label = 9;
   }
  } else {
   $19 = ((25304 + (($i$02*36)|0)|0) + 3148|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ($20|0)==(0);
   $$$v = $21 ? 65536 : 65535;
   $$ = (($$$v) + ($17))|0;
   $22 = ((25304 + (($i$02*36)|0)|0) + 3152|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = ($23|0)==(0);
   if ($24) {
    $stdChar$1 = $$;
    label = 8;
   } else {
    $25 = $23 << 1;
    $26 = (($$) + ($25))|0;
    $stdChar$1 = $26;
    label = 8;
   }
  }
  if ((label|0) == 8) {
   label = 0;
   $32 = ($stdChar$1|0)==(-1);
   if ($32) {
    $38 = $40;
   } else {
    $stdChar$11 = $stdChar$1;
    label = 9;
   }
  }
  if ((label|0) == 9) {
   label = 0;
   $33 = HEAP32[$9>>2]|0;
   $34 = (($33) + 12|0);
   $35 = HEAP32[$34>>2]|0;
   (FUNCTION_TABLE_iiiii[$35 & 31]($9,$os,$stdChar$11,$bytesWritten)|0);
   $$pre2 = HEAP32[((25304 + 20|0))>>2]|0;
   $38 = $$pre2;
  }
  $36 = (($i$02) + 1)|0;
  $37 = ($i$02|0)<($38|0);
  if ($37) {
   $40 = $38;$i$02 = $36;
  } else {
   break;
  }
 }
 $$pre = HEAP32[$4>>2]|0;
 $39 = $$pre;
 HEAP32[34088>>2] = $39;
 STACKTOP = sp;return;
}
function __ZN8UkEngine17restoreKeyStrokesERiPhS0_R12UkOutputType($this,$backs,$outBuf,$outSize,$outType) {
 $this = $this|0;
 $backs = $backs|0;
 $outBuf = $outBuf|0;
 $outSize = $outSize|0;
 $outType = $outType|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $converted$0$off0$ = 0, $converted$0$off0$lcssa = 0, $converted$0$off07 = 0, $count$0$lcssa = 0, $count$03 = 0, $count$1 = 0, $ev = 0, $i$01$i = 0, $i$04 = 0, $i$04$in = 0, $keyStart$0$lcssa = 0, $keyStart$06 = 0, $not$ = 0, $storemerge = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $ev = sp;
 HEAP32[$outType>>2] = 1;
 $0 = (($this) + 20|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)>(-1);
 L1: do {
  if ($2) {
   $i$01$i = $1;
   while(1) {
    $3 = ((($this) + (($i$01$i*36)|0)|0) + 3128|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = ($4|0)==(1);
    if ($5) {
     break L1;
    }
    $6 = ((($this) + (($i$01$i*36)|0)|0) + 3156|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(-1);
    if (!($8)) {
     $9 = (12648 + ($7)|0);
     $10 = HEAP8[$9>>0]|0;
     $11 = ($10<<24>>24)==(0);
     if (!($11)) {
      $12 = ((($this) + (($i$01$i*36)|0)|0) + 3152|0);
      $13 = HEAP32[$12>>2]|0;
      $14 = ($13|0)==(0);
      if (!($14)) {
       break;
      }
     }
     $15 = (7656 + ($7<<2)|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = ($7|0)==($16|0);
     if (!($17)) {
      break;
     }
    }
    $18 = (($i$01$i) + -1)|0;
    $19 = ($i$01$i|0)>(0);
    if ($19) {
     $i$01$i = $18;
    } else {
     break L1;
    }
   }
   $20 = (($this) + 12|0);
   HEAP32[$20>>2] = 0;
   $21 = (($1) + 1)|0;
   $22 = (($this) + 8|0);
   HEAP32[$22>>2] = $21;
   $23 = (($this) + 3104|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = ($24|0)>(-1);
   if ($25) {
    $converted$0$off07 = 0;$keyStart$06 = $24;
    while(1) {
     $26 = ((($this) + (($keyStart$06*24)|0)|0) + 36|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = ($27|0)==(1);
     if ($28) {
      $converted$0$off0$lcssa = $converted$0$off07;$keyStart$0$lcssa = $keyStart$06;
      break;
     }
     $29 = ((($this) + (($keyStart$06*24)|0)|0) + 52|0);
     $30 = HEAP8[$29>>0]|0;
     $not$ = ($30<<24>>24)!=(0);
     $converted$0$off0$ = $converted$0$off07 | $not$;
     $31 = (($keyStart$06) + -1)|0;
     $32 = ($keyStart$06|0)>(0);
     if ($32) {
      $converted$0$off07 = $converted$0$off0$;$keyStart$06 = $31;
     } else {
      $converted$0$off0$lcssa = $converted$0$off0$;$keyStart$0$lcssa = $31;
      break;
     }
    }
    if ($converted$0$off0$lcssa) {
     $34 = $1;
     while(1) {
      $33 = ((($this) + (($34*36)|0)|0) + 3128|0);
      $35 = HEAP32[$33>>2]|0;
      $36 = ($35|0)==(1);
      if ($36) {
       $40 = $34;
       break;
      }
      $37 = (($34) + -1)|0;
      HEAP32[$0>>2] = $37;
      $38 = ($34|0)>(0);
      if ($38) {
       $34 = $37;
      } else {
       $40 = $37;
       break;
      }
     }
     $39 = (($40) + 1)|0;
     __ZN8UkEngine10markChangeEi($this,$39);
     $41 = HEAP32[$20>>2]|0;
     HEAP32[$backs>>2] = $41;
     $42 = (($this) + 3123|0);
     HEAP8[$42>>0] = 1;
     $43 = HEAP32[$23>>2]|0;
     $44 = ($keyStart$0$lcssa|0)<($43|0);
     if ($44) {
      $45 = (($ev) + 12|0);
      $46 = (($ev) + 8|0);
      $47 = (($ev) + 4|0);
      $count$03 = 0;$i$04$in = $keyStart$0$lcssa;
      while(1) {
       $i$04 = (($i$04$in) + 1)|0;
       $48 = HEAP32[$outSize>>2]|0;
       $49 = ($count$03|0)<($48|0);
       $50 = ((($this) + (($i$04*24)|0)|0) + 44|0);
       if ($49) {
        $51 = HEAP32[$50>>2]|0;
        $52 = $51&255;
        $53 = (($count$03) + 1)|0;
        $54 = (($outBuf) + ($count$03)|0);
        HEAP8[$54>>0] = $52;
        $count$1 = $53;
       } else {
        $count$1 = $count$03;
       }
       $55 = HEAP32[$50>>2]|0;
       HEAP32[$45>>2] = $55;
       HEAP32[$ev>>2] = 19;
       $56 = ($55>>>0)>(255);
       if ($56) {
        HEAP32[$46>>2] = -1;
        $storemerge = 2;
       } else {
        $57 = (10896 + ($55<<2)|0);
        $58 = HEAP32[$57>>2]|0;
        HEAP32[$46>>2] = $58;
        $59 = (9608 + ($55<<2)|0);
        $60 = HEAP32[$59>>2]|0;
        $storemerge = $60;
       }
       HEAP32[$47>>2] = $storemerge;
       $61 = ((($this) + (($i$04*24)|0)|0) + 52|0);
       HEAP8[$61>>0] = 0;
       (__ZN8UkEngine13processAppendER10UkKeyEvent($this,$ev)|0);
       $62 = HEAP32[$23>>2]|0;
       $63 = ($i$04|0)<($62|0);
       if ($63) {
        $count$03 = $count$1;$i$04$in = $i$04;
       } else {
        $count$0$lcssa = $count$1;
        break;
       }
      }
     } else {
      $count$0$lcssa = 0;
     }
     HEAP32[$outSize>>2] = $count$0$lcssa;
     HEAP8[$42>>0] = 0;
     $$0 = 1;
     STACKTOP = sp;return ($$0|0);
    }
   }
   HEAP32[$backs>>2] = 0;
   HEAP32[$outSize>>2] = 0;
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 HEAP32[$backs>>2] = 0;
 HEAP32[$outSize>>2] = 0;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _UnikeySetInputMethod($im) {
 $im = $im|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $i$01$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($im|0) {
 case 0: case 1: case 5: case 6:  {
  $0 = HEAP32[25296>>2]|0;
  $1 = (($0) + 44|0);
  __ZN16UkInputProcessor5setIME13UkInputMethod($1,$im);
  HEAP32[((25304 + 20|0))>>2] = -1;
  HEAP32[((25304 + 3104|0))>>2] = -1;
  HEAP32[((25304 + 24|0))>>2] = 0;
  HEAP8[((25304 + 3108|0))>>0] = 0;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $2 = HEAP32[25296>>2]|0;
  $3 = (($2) + 1072|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)==(0);
  if ($5) {
   STACKTOP = sp;return;
  }
  $6 = (($2) + 44|0);
  HEAP32[$6>>2] = 4;
  $i$01$i = 0;
  while(1) {
   $7 = ((($2) + ($i$01$i<<2)|0) + 1076|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ((($2) + ($i$01$i<<2)|0) + 48|0);
   HEAP32[$9>>2] = $8;
   $10 = (($i$01$i) + 1)|0;
   $exitcond$i = ($10|0)==(256);
   if ($exitcond$i) {
    break;
   } else {
    $i$01$i = $10;
   }
  }
  HEAP32[((25304 + 20|0))>>2] = -1;
  HEAP32[((25304 + 3104|0))>>2] = -1;
  HEAP32[((25304 + 24|0))>>2] = 0;
  HEAP8[((25304 + 3108|0))>>0] = 0;
  STACKTOP = sp;return;
  break;
 }
 default: {
  STACKTOP = sp;return;
 }
 }
}
function _UnikeySetCapsState($shiftPressed,$CapsLockOn) {
 $shiftPressed = $shiftPressed|0;
 $CapsLockOn = $CapsLockOn|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[33040>>2] = $CapsLockOn;
 HEAP32[33048>>2] = $shiftPressed;
 STACKTOP = sp;return;
}
function __Z17UnikeyCheckKbCasePiS_($pShiftPressed,$pCapsLockOn) {
 $pShiftPressed = $pShiftPressed|0;
 $pCapsLockOn = $pCapsLockOn|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[33048>>2]|0;
 HEAP32[$pShiftPressed>>2] = $0;
 $1 = HEAP32[33040>>2]|0;
 HEAP32[$pCapsLockOn>>2] = $1;
 STACKTOP = sp;return;
}
function _UnikeySetup() {
 var $$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $exitcond$i = 0, $exitcond5$i = 0, $i$04$i = 0, $i$13$i = 0, $i$21$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __Z25SetupInputClassifierTablev();
 $i$04$i = 0;
 while(1) {
  $0 = (12872 + ($i$04$i<<2)|0);
  HEAP32[$0>>2] = $i$04$i;
  $1 = (($i$04$i) + 1)|0;
  $exitcond5$i = ($1|0)==(256);
  if ($exitcond5$i) {
   $4 = -128;$i$13$i = 0;
   break;
  } else {
   $i$04$i = $1;
  }
 }
 while(1) {
  $2 = (($i$13$i) + 65722)|0;
  $3 = $4&255;
  $5 = (12872 + ($3<<2)|0);
  HEAP32[$5>>2] = $2;
  $6 = (($i$13$i) + 1)|0;
  $7 = (12840 + ($6)|0);
  $8 = HEAP8[$7>>0]|0;
  $9 = ($6|0)==(27);
  if ($9) {
   $i$21$i = 0;
   break;
  } else {
   $4 = $8;$i$13$i = $6;
  }
 }
 while(1) {
  $10 = ($i$21$i>>>0)>(255);
  if (!($10)) {
   $11 = (10896 + ($i$21$i<<2)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==(-1);
   if (!($13)) {
    $14 = (($12) + 65536)|0;
    $15 = (12872 + ($i$21$i<<2)|0);
    HEAP32[$15>>2] = $14;
   }
  }
  $16 = (($i$21$i) + 1)|0;
  $exitcond$i = ($16|0)==(256);
  if ($exitcond$i) {
   break;
  } else {
   $i$21$i = $16;
  }
 }
 $17 = (_malloc(141380)|0);
 $18 = ($17|0)==(0|0);
 L12: do {
  if ($18) {
   while(1) {
    $19 = HEAP32[51536>>2]|0;HEAP32[51536>>2] = (($19+0)|0);
    $20 = ($19|0)==(0);
    if ($20) {
     break;
    }
    $21 = $19;
    FUNCTION_TABLE_v[$21 & 15]();
    $22 = (_malloc(141380)|0);
    $23 = ($22|0)==(0|0);
    if (!($23)) {
     $$lcssa$i = $22;
     break L12;
    }
   }
   $24 = (___cxa_allocate_exception(4)|0);
   HEAP32[$24>>2] = ((51368 + 8|0));
   ___cxa_throw(($24|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $$lcssa$i = $17;
  }
 } while(0);
 HEAP32[25296>>2] = $$lcssa$i;
 $25 = (($$lcssa$i) + 44|0);
 $26 = HEAP8[11920>>0]|0;
 $27 = ($26<<24>>24)==(0);
 if ($27) {
  __Z25SetupInputClassifierTablev();
  HEAP8[11920>>0] = 1;
 }
 HEAP32[$25>>2] = 0;
 __ZN16UkInputProcessor10useBuiltInEP12UkKeyMapping($25,11928);
 $28 = (($$lcssa$i) + 141372|0);
 HEAP32[$28>>2] = 131072;
 $29 = (($$lcssa$i) + 141368|0);
 HEAP32[$29>>2] = 0;
 $30 = (($$lcssa$i) + 141376|0);
 HEAP32[$30>>2] = 0;
 $31 = (($$lcssa$i) + 4|0);
 HEAP32[$31>>2] = 1;
 $32 = (($$lcssa$i) + 1072|0);
 HEAP32[$32>>2] = 0;
 HEAP32[((25304 + 4|0))>>2] = $$lcssa$i;
 HEAP32[25304>>2] = 39;
 $33 = (($$lcssa$i) + 44|0);
 HEAP32[$33>>2] = 0;
 __ZN16UkInputProcessor10useBuiltInEP12UkKeyMapping($33,11928);
 $34 = (($$lcssa$i) + 2100|0);
 HEAP32[$34>>2] = 12;
 HEAP32[((25304 + 20|0))>>2] = -1;
 HEAP32[((25304 + 3104|0))>>2] = -1;
 HEAP32[((25304 + 24|0))>>2] = 0;
 HEAP8[((25304 + 3108|0))>>0] = 0;
 HEAP32[$$lcssa$i>>2] = 1;
 $35 = (($$lcssa$i) + 8|0);
 HEAP32[$35>>2] = 1;
 $36 = (($$lcssa$i) + 12|0);
 $37 = (($$lcssa$i) + 36|0);
 ;HEAP32[$36+0>>2]=0|0;HEAP32[$36+4>>2]=0|0;HEAP32[$36+8>>2]=0|0;HEAP32[$36+12>>2]=0|0;
 HEAP32[$37>>2] = 1;
 $38 = (($$lcssa$i) + 40|0);
 HEAP32[$38>>2] = 0;
 STACKTOP = sp;return;
}
function _UnikeyCleanup() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[25296>>2]|0;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  _free($0);
 }
 STACKTOP = sp;return;
}
function _UnikeyFilter($ch) {
 $ch = $ch|0;
 var $$$i$i$i$i = 0, $$$i$i7$i$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i1$i$i$i$ph = 0, $$0$i1$i6$i$i$ph = 0, $$0$i11$i$i = 0, $$01$$i$i$i$i = 0, $$01$$i$i8$i$i = 0, $$014$i$i$i$i = 0, $$014$i$i2$i$i = 0, $$023$i$i$i$i = 0, $$023$i$i3$i$i = 0, $$field = 0, $$field2 = 0, $$index1 = 0, $$off$i$i = 0, $$off$i2$i = 0, $$off2$i$i = 0, $$pr$i = 0;
 var $$sum6 = 0, $$sum7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ev$i = 0, $i$01$i$i$i$i = 0, $i$01$i$i5$i$i = 0, $key$i1$i$i = 0, $or$cond = 0, $or$cond$i$i = 0, $or$cond9 = 0, $phitmp$i = 0;
 var $ret$0$i = 0, $ret$1$ph$i = 0, $ret$11$i = 0, $rid$0$lcssa$i$i = 0, $rid$01$i$i = 0, $storemerge$i = 0, $switch$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $key$i1$i$i = sp + 24|0;
 $ev$i = sp;
 HEAP32[34088>>2] = 1024;
 $0 = HEAP32[((25304 + 20|0))>>2]|0;
 $1 = ($0|0)>(-1);
 do {
  if ($1) {
   $2 = (($0) + 10)|0;
   $3 = HEAP32[((25304 + 16|0))>>2]|0;
   $4 = ($2|0)<($3|0);
   if ($4) {
    $33 = $0;
   } else {
    $5 = (($0|0) / 2)&-1;
    $6 = ((25304 + (($5*36)|0)|0) + 3128|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ($7|0)==(1);
    L4: do {
     if ($8) {
      $rid$0$lcssa$i$i = $5;
     } else {
      $rid$01$i$i = $5;
      while(1) {
       $13 = ($rid$01$i$i|0)<($0|0);
       $10 = (($rid$01$i$i) + 1)|0;
       if (!($13)) {
        $rid$0$lcssa$i$i = $rid$01$i$i;
        break L4;
       }
       $9 = ((25304 + (($10*36)|0)|0) + 3128|0);
       $11 = HEAP32[$9>>2]|0;
       $12 = ($11|0)==(1);
       if ($12) {
        $rid$0$lcssa$i$i = $10;
        break;
       } else {
        $rid$01$i$i = $10;
       }
      }
     }
    } while(0);
    $14 = ($rid$0$lcssa$i$i|0)==($0|0);
    if ($14) {
     HEAP32[((25304 + 20|0))>>2] = -1;
     $33 = -1;
     break;
    } else {
     $15 = (($rid$0$lcssa$i$i) + 1)|0;
     $16 = ((25304 + (($15*36)|0)|0) + 3128|0);
     $17 = (($0) - ($15))|0;
     $18 = ($17*36)|0;
     $19 = (($18) + 36)|0;
     _memmove((((25304 + 3128|0))|0),($16|0),($19|0))|0;
     HEAP32[((25304 + 20|0))>>2] = $17;
     $33 = $17;
     break;
    }
   }
  } else {
   $33 = $0;
  }
 } while(0);
 $20 = HEAP32[((25304 + 3104|0))>>2]|0;
 $21 = ($20|0)>(0);
 if ($21) {
  $22 = (($20) + 1)|0;
  $23 = HEAP32[((25304 + 28|0))>>2]|0;
  $24 = ($22|0)<($23|0);
  if (!($24)) {
   $25 = (($20|0) / 2)&-1;
   $26 = ((25304 + (($25*24)|0)|0) + 32|0);
   $27 = (($20) - ($25))|0;
   $28 = ($27*24)|0;
   $29 = (($28) + 24)|0;
   _memmove((((25304 + 32|0))|0),($26|0),($29|0))|0;
   $30 = HEAP32[((25304 + 3104|0))>>2]|0;
   $31 = (($30) - ($25))|0;
   HEAP32[((25304 + 3104|0))>>2] = $31;
  }
 }
 HEAP32[((25304 + 12|0))>>2] = 0;
 $32 = (($33) + 1)|0;
 HEAP32[((25304 + 8|0))>>2] = $32;
 HEAP32[((25304 + 3112|0))>>2] = 33056;
 HEAP32[((25304 + 3116|0))>>2] = 34088;
 $34 = ((25304 + 3120|0));
 $35 = $34;
 HEAP32[$35>>2] = 0;
 $36 = (($34) + 4)|0;
 $37 = $36;
 HEAP32[$37>>2] = 0;
 $38 = HEAP32[((25304 + 4|0))>>2]|0;
 $39 = (($ev$i) + 12|0);
 HEAP32[$39>>2] = $ch;
 $40 = ($ch>>>0)>(255);
 do {
  if ($40) {
   HEAP32[$ev$i>>2] = 19;
   $41 = (($ev$i) + 8|0);
   HEAP32[$41>>2] = -1;
   $42 = (($ev$i) + 4|0);
   HEAP32[$42>>2] = 2;
   $59 = 19;
  } else {
   $43 = (9608 + ($ch<<2)|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (($ev$i) + 4|0);
   HEAP32[$45>>2] = $44;
   $46 = ((($38) + ($ch<<2)|0) + 48|0);
   $47 = HEAP32[$46>>2]|0;
   HEAP32[$ev$i>>2] = $47;
   $$off$i$i = (($47) + -10)|0;
   $48 = ($$off$i$i>>>0)<(6);
   if ($48) {
    $49 = (($ev$i) + 16|0);
    HEAP32[$49>>2] = $$off$i$i;
   } else {
    $50 = ($47|0)>(19);
    if ($50) {
     HEAP32[$45>>2] = 0;
     $51 = (($47) + -20)|0;
     $52 = (($ev$i) + 8|0);
     HEAP32[$52>>2] = $51;
     HEAP32[$ev$i>>2] = 17;
     $59 = 17;
     break;
    }
   }
   $53 = (10896 + ($ch<<2)|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = (($ev$i) + 8|0);
   HEAP32[$55>>2] = $54;
   $59 = $47;
  }
 } while(0);
 $56 = HEAP8[((25304 + 3108|0))>>0]|0;
 $57 = ($56<<24>>24)==(0);
 do {
  if ($57) {
   $58 = (20960 + ($59<<3)|0);
   $$field = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
   $$index1 = (($58) + 4|0);
   $$field2 = HEAPU8[$$index1>>0]|(HEAPU8[$$index1+1>>0]<<8)|(HEAPU8[$$index1+2>>0]<<16)|(HEAPU8[$$index1+3>>0]<<24);
   $60 = $$field2 >> 1;
   $61 = (25304 + ($60)|0);
   $62 = $$field2 & 1;
   $63 = ($62|0)==(0);
   if ($63) {
    $67 = $$field;
    $68 = $67;
   } else {
    $64 = HEAP32[$61>>2]|0;
    $65 = (($64) + ($$field)|0);
    $66 = HEAP32[$65>>2]|0;
    $68 = $66;
   }
   $69 = (FUNCTION_TABLE_iii[$68 & 63]($61,$ev$i)|0);
   $ret$0$i = $69;
  } else {
   HEAP8[((25304 + 3108|0))>>0] = 0;
   $70 = ($33|0)<(0);
   $71 = $59 & -2;
   $switch$i = ($71|0)==(18);
   $or$cond = $70 | $switch$i;
   if ($or$cond) {
    $72 = (__ZN8UkEngine13processAppendER10UkKeyEvent(25304,$ev$i)|0);
    $ret$0$i = $72;
    break;
   } else {
    $73 = (($33) + -1)|0;
    HEAP32[((25304 + 20|0))>>2] = $73;
    (__ZN8UkEngine13processAppendER10UkKeyEvent(25304,$ev$i)|0);
    $74 = HEAP32[((25304 + 20|0))>>2]|0;
    __ZN8UkEngine10markChangeEi(25304,$74);
    $ret$0$i = 1;
    break;
   }
  }
 } while(0);
 $75 = HEAP32[((25304 + 4|0))>>2]|0;
 $76 = (($75) + 4|0);
 $77 = HEAP32[$76>>2]|0;
 $78 = ($77|0)==(0);
 do {
  if ($78) {
   $ret$1$ph$i = $ret$0$i;
   label = 56;
  } else {
   $79 = HEAP32[((25304 + 20|0))>>2]|0;
   $80 = ($79|0)>(-1);
   if ($80) {
    $81 = ((25304 + (($79*36)|0)|0) + 3128|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==(0);
    if ($83) {
     $84 = (($ev$i) + 4|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = ($85|0)==(0);
     if ($86) {
      $87 = (($75) + 36|0);
      $88 = HEAP32[$87>>2]|0;
      $89 = ($88|0)!=(0);
      $90 = HEAP32[((25304 + 24|0))>>2]|0;
      $91 = ($90|0)==(0);
      $or$cond9 = $89 & $91;
      if ($or$cond9) {
       $ret$1$ph$i = $ret$0$i;
       label = 56;
      } else {
       $92 = ((25304 + (($79*36)|0)|0) + 3156|0);
       $93 = HEAP32[$92>>2]|0;
       $94 = (12648 + ($93)|0);
       $95 = HEAP8[$94>>0]|0;
       $96 = ($95<<24>>24)==(0);
       if ($96) {
        HEAP32[$81>>2] = 2;
        $121 = ((25304 + (($79*36)|0)|0) + 3132|0);
        HEAP32[$121>>2] = 0;
        $122 = ((25304 + (($79*36)|0)|0) + 3140|0);
        HEAP32[$122>>2] = -1;
        $123 = ((25304 + (($79*36)|0)|0) + 3136|0);
        HEAP32[$123>>2] = -1;
        HEAP32[$key$i1$i$i>>2] = $93;
        $124 = (($key$i1$i$i) + 4|0);
        HEAP32[$124>>2] = -1;
        $125 = (($key$i1$i$i) + 8|0);
        HEAP32[$125>>2] = -1;
        $$014$i$i2$i$i = 19256;$$023$i$i3$i$i = 30;
        L45: while(1) {
         $126 = $$023$i$i3$i$i >>> 1;
         $127 = $126 << 4;
         $128 = (($$014$i$i2$i$i) + ($127)|0);
         $i$01$i$i5$i$i = 0;
         while(1) {
          $131 = (($key$i1$i$i) + ($i$01$i$i5$i$i<<2)|0);
          $132 = HEAP32[$131>>2]|0;
          $133 = (($128) + ($i$01$i$i5$i$i<<2)|0);
          $134 = HEAP32[$133>>2]|0;
          $135 = ($132|0)<($134|0);
          if ($135) {
           $$0$i1$i6$i$i$ph = -1;
           break;
          }
          $136 = ($132|0)>($134|0);
          $130 = (($i$01$i$i5$i$i) + 1)|0;
          if ($136) {
           $$0$i1$i6$i$i$ph = 1;
           break;
          }
          $129 = ($130|0)<(3);
          if ($129) {
           $i$01$i$i5$i$i = $130;
          } else {
           label = 50;
           break L45;
          }
         }
         $137 = ($$023$i$i3$i$i|0)==(1);
         if ($137) {
          $$0$i11$i$i = -1;
          break;
         }
         $138 = ($$0$i1$i6$i$i$ph|0)<(0);
         $139 = (($$023$i$i3$i$i) - ($126))|0;
         $$$i$i7$i$i = $138 ? $126 : $139;
         $$01$$i$i8$i$i = $138 ? $$014$i$i2$i$i : $128;
         $140 = ($$$i$i7$i$i|0)==(0);
         if ($140) {
          $$0$i11$i$i = -1;
          break;
         } else {
          $$014$i$i2$i$i = $$01$$i$i8$i$i;$$023$i$i3$i$i = $$$i$i7$i$i;
         }
        }
        if ((label|0) == 50) {
         $141 = ($128|0)==(0|0);
         if ($141) {
          $$0$i11$i$i = -1;
         } else {
          $$sum7 = $127 | 12;
          $142 = (($$014$i$i2$i$i) + ($$sum7)|0);
          $143 = HEAP32[$142>>2]|0;
          $$0$i11$i$i = $143;
         }
        }
        $144 = ((25304 + (($79*36)|0)|0) + 3144|0);
        HEAP32[$144>>2] = $$0$i11$i$i;
       } else {
        HEAP32[$81>>2] = 3;
        $97 = ((25304 + (($79*36)|0)|0) + 3136|0);
        HEAP32[$97>>2] = 0;
        HEAP32[$key$i1$i$i>>2] = $93;
        $98 = (($key$i1$i$i) + 4|0);
        HEAP32[$98>>2] = -1;
        $99 = (($key$i1$i$i) + 8|0);
        HEAP32[$99>>2] = -1;
        $$014$i$i$i$i = 18136;$$023$i$i$i$i = 70;
        L58: while(1) {
         $100 = $$023$i$i$i$i >>> 1;
         $101 = $100 << 4;
         $102 = (($$014$i$i$i$i) + ($101)|0);
         $i$01$i$i$i$i = 0;
         while(1) {
          $105 = (($key$i1$i$i) + ($i$01$i$i$i$i<<2)|0);
          $106 = HEAP32[$105>>2]|0;
          $107 = (($102) + ($i$01$i$i$i$i<<2)|0);
          $108 = HEAP32[$107>>2]|0;
          $109 = ($106|0)<($108|0);
          if ($109) {
           $$0$i1$i$i$i$ph = -1;
           break;
          }
          $110 = ($106|0)>($108|0);
          $104 = (($i$01$i$i$i$i) + 1)|0;
          if ($110) {
           $$0$i1$i$i$i$ph = 1;
           break;
          }
          $103 = ($104|0)<(3);
          if ($103) {
           $i$01$i$i$i$i = $104;
          } else {
           label = 40;
           break L58;
          }
         }
         $111 = ($$023$i$i$i$i|0)==(1);
         if ($111) {
          $$0$i$i$i = -1;
          break;
         }
         $112 = ($$0$i1$i$i$i$ph|0)<(0);
         $113 = (($$023$i$i$i$i) - ($100))|0;
         $$$i$i$i$i = $112 ? $100 : $113;
         $$01$$i$i$i$i = $112 ? $$014$i$i$i$i : $102;
         $114 = ($$$i$i$i$i|0)==(0);
         if ($114) {
          $$0$i$i$i = -1;
          break;
         } else {
          $$014$i$i$i$i = $$01$$i$i$i$i;$$023$i$i$i$i = $$$i$i$i$i;
         }
        }
        if ((label|0) == 40) {
         $115 = ($102|0)==(0|0);
         if ($115) {
          $$0$i$i$i = -1;
         } else {
          $$sum6 = $101 | 12;
          $116 = (($$014$i$i$i$i) + ($$sum6)|0);
          $117 = HEAP32[$116>>2]|0;
          $$0$i$i$i = $117;
         }
        }
        $118 = ((25304 + (($79*36)|0)|0) + 3144|0);
        HEAP32[$118>>2] = $$0$i$i$i;
        $119 = ((25304 + (($79*36)|0)|0) + 3140|0);
        HEAP32[$119>>2] = -1;
        $120 = ((25304 + (($79*36)|0)|0) + 3132|0);
        HEAP32[$120>>2] = -1;
       }
       $145 = HEAP32[$ev$i>>2]|0;
       $146 = ($145|0)==(19);
       if ($146) {
        $147 = ((25304 + (($79*36)|0)|0) + 3160|0);
        $148 = HEAP32[$147>>2]|0;
        $$off$i2$i = (($148) + -97)|0;
        $149 = ($$off$i2$i>>>0)<(26);
        $$off2$i$i = (($148) + -65)|0;
        $150 = ($$off2$i$i>>>0)<(26);
        $or$cond$i$i = $149 | $150;
        if ($or$cond$i$i) {
         $ret$1$ph$i = 0;
         label = 56;
         break;
        }
       }
       $151 = HEAP32[((25304 + 20|0))>>2]|0;
       __ZN8UkEngine10markChangeEi(25304,$151);
       $ret$1$ph$i = 1;
       label = 56;
      }
     } else {
      $ret$1$ph$i = $ret$0$i;
      label = 56;
     }
    } else {
     $ret$1$ph$i = $ret$0$i;
     label = 56;
    }
   } else {
    $ret$11$i = $ret$0$i;
   }
  }
 } while(0);
 if ((label|0) == 56) {
  $$pr$i = HEAP32[((25304 + 20|0))>>2]|0;
  $152 = ($$pr$i|0)>(-1);
  if ($152) {
   $153 = HEAP32[$39>>2]|0;
   $154 = ($153>>>0)>(255);
   if ($154) {
    $$0$i$i = 2;
   } else {
    $155 = (9608 + ($153<<2)|0);
    $156 = HEAP32[$155>>2]|0;
    $$0$i$i = $156;
   }
   $157 = (($ev$i) + 4|0);
   HEAP32[$157>>2] = $$0$i$i;
   $158 = HEAP32[((25304 + 3104|0))>>2]|0;
   $159 = (($158) + 1)|0;
   HEAP32[((25304 + 3104|0))>>2] = $159;
   $160 = ((25304 + (($159*24)|0)|0) + 32|0);
   ;HEAP32[$160+0>>2]=HEAP32[$ev$i+0>>2]|0;HEAP32[$160+4>>2]=HEAP32[$ev$i+4>>2]|0;HEAP32[$160+8>>2]=HEAP32[$ev$i+8>>2]|0;HEAP32[$160+12>>2]=HEAP32[$ev$i+12>>2]|0;HEAP32[$160+16>>2]=HEAP32[$ev$i+16>>2]|0;
   $161 = ($ret$1$ph$i|0)==(0);
   if ($161) {
    $165 = 0;
   } else {
    $162 = HEAP8[((25304 + 3122|0))>>0]|0;
    $phitmp$i = $162 ^ 1;
    $165 = $phitmp$i;
   }
   $163 = HEAP32[((25304 + 3104|0))>>2]|0;
   $164 = ((25304 + (($163*24)|0)|0) + 52|0);
   HEAP8[$164>>0] = $165;
   $ret$11$i = $ret$1$ph$i;
  } else {
   $ret$11$i = $ret$1$ph$i;
  }
 }
 $166 = ($ret$11$i|0)==(0);
 if ($166) {
  HEAP32[34080>>2] = 0;
  HEAP32[34088>>2] = 0;
  $storemerge$i = HEAP32[((25304 + 3124|0))>>2]|0;
  HEAP32[34096>>2] = $storemerge$i;
  STACKTOP = sp;return;
 }
 $167 = HEAP32[((25304 + 12|0))>>2]|0;
 HEAP32[34080>>2] = $167;
 $168 = HEAP8[((25304 + 3120|0))>>0]|0;
 $169 = ($168<<24>>24)==(0);
 if (!($169)) {
  $storemerge$i = HEAP32[((25304 + 3124|0))>>2]|0;
  HEAP32[34096>>2] = $storemerge$i;
  STACKTOP = sp;return;
 }
 __ZN8UkEngine11writeOutputEPhRi();
 $storemerge$i = HEAP32[((25304 + 3124|0))>>2]|0;
 HEAP32[34096>>2] = $storemerge$i;
 STACKTOP = sp;return;
}
function _UnikeyPutChar($ch) {
 $ch = $ch|0;
 var $$off$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ev$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $ev$i = sp;
 $0 = HEAP32[((25304 + 4|0))>>2]|0;
 $1 = (($ev$i) + 12|0);
 HEAP32[$1>>2] = $ch;
 $2 = ($ch>>>0)>(255);
 do {
  if ($2) {
   HEAP32[$ev$i>>2] = 19;
   $3 = (($ev$i) + 8|0);
   HEAP32[$3>>2] = -1;
   $4 = (($ev$i) + 4|0);
   HEAP32[$4>>2] = 2;
  } else {
   $5 = (9608 + ($ch<<2)|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = (($ev$i) + 4|0);
   HEAP32[$7>>2] = $6;
   $8 = ((($0) + ($ch<<2)|0) + 48|0);
   $9 = HEAP32[$8>>2]|0;
   HEAP32[$ev$i>>2] = $9;
   $$off$i$i = (($9) + -10)|0;
   $10 = ($$off$i$i>>>0)<(6);
   if ($10) {
    $11 = (($ev$i) + 16|0);
    HEAP32[$11>>2] = $$off$i$i;
   } else {
    $12 = ($9|0)>(19);
    if ($12) {
     HEAP32[$7>>2] = 0;
     $13 = (($9) + -20)|0;
     $14 = (($ev$i) + 8|0);
     HEAP32[$14>>2] = $13;
     HEAP32[$ev$i>>2] = 17;
     break;
    }
   }
   $15 = (10896 + ($ch<<2)|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($ev$i) + 8|0);
   HEAP32[$17>>2] = $16;
  }
 } while(0);
 (__ZN8UkEngine13processAppendER10UkKeyEvent(25304,$ev$i)|0);
 HEAP32[34088>>2] = 0;
 HEAP32[34080>>2] = 0;
 STACKTOP = sp;return;
}
function _UnikeyResetBuf() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[((25304 + 20|0))>>2] = -1;
 HEAP32[((25304 + 3104|0))>>2] = -1;
 HEAP32[((25304 + 24|0))>>2] = 0;
 HEAP8[((25304 + 3108|0))>>0] = 0;
 STACKTOP = sp;return;
}
function _UnikeySetSingleMode() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[((25304 + 24|0))>>2] = 1;
 STACKTOP = sp;return;
}
function _UnikeyBackspacePress() {
 var $$0$i$i = 0, $$0$i5$i = 0, $$pr$i$i = 0, $$pr$i1$i = 0, $$pr$i7$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond5 = 0, $or$cond6 = 0;
 var $switch$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[34088>>2] = 1024;
 HEAP32[34096>>2] = 0;
 $0 = HEAP32[((25304 + 4|0))>>2]|0;
 $1 = (($0) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = HEAP32[((25304 + 20|0))>>2]|0;
  $5 = ($4|0)<(0);
  if (!($5)) {
   HEAP32[((25304 + 12|0))>>2] = 0;
   $6 = (($4) + 1)|0;
   HEAP32[((25304 + 8|0))>>2] = $6;
   __ZN8UkEngine10markChangeEi(25304,$4);
   $7 = HEAP32[((25304 + 20|0))>>2]|0;
   $8 = ($7|0)==(0);
   if (!($8)) {
    $9 = ((25304 + (($7*36)|0)|0) + 3128|0);
    $10 = HEAP32[$9>>2]|0;
    $switch$i = ($10>>>0)<(3);
    if (!($switch$i)) {
     $11 = (($7) + -1)|0;
     $12 = ((25304 + (($11*36)|0)|0) + 3128|0);
     $13 = HEAP32[$12>>2]|0;
     if (!((($13|0) == 5) | (($13|0) == 6) | (($13|0) == 2))) {
      $30 = ((25304 + (($7*36)|0)|0) + 3136|0);
      $31 = HEAP32[$30>>2]|0;
      $32 = (($7) - ($31))|0;
      $33 = ((25304 + (($32*36)|0)|0) + 3144|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = (13896 + (($34*52)|0)|0);
      $36 = HEAP32[$35>>2]|0;
      $37 = (($32) - ($36))|0;
      $38 = (($37) + 1)|0;
      $39 = ((25304 + (($11*36)|0)|0) + 3144|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($31|0)!=(0);
      $42 = ($34>>>0)<(12);
      do {
       if ($42) {
        $$0$i$i = 0;
       } else {
        $43 = ((13896 + (($34*52)|0)|0) + 36|0);
        $44 = HEAP32[$43>>2]|0;
        $45 = ($44|0)==(-1);
        if ($45) {
         $46 = ((13896 + (($34*52)|0)|0) + 44|0);
         $47 = HEAP32[$46>>2]|0;
         $48 = ($47|0)==(-1);
         if (!($48)) {
          if ((($34|0) == 44) | (($34|0) == 66) | (($34|0) == 67)) {
           $$0$i$i = 1;
           break;
          }
          $$0$i$i = $47;
          break;
         }
         $49 = (($34) + -48)|0;
         $50 = ($49>>>0)<(22);
         if ($50) {
          $$0$i$i = 1;
         } else {
          $51 = HEAP32[((25304 + 4|0))>>2]|0;
          $52 = (($51) + 12|0);
          $53 = HEAP32[$52>>2]|0;
          $54 = ($53|0)==(0);
          if (!($54)) {
           if ((($34|0) == 25) | (($34|0) == 27) | (($34|0) == 40)) {
            $$0$i$i = 1;
            break;
           }
          }
          $55 = $41&1;
          $$0$i$i = $55;
         }
        } else {
         $$0$i$i = $44;
        }
       }
      } while(0);
      $56 = (($38) + ($$0$i$i))|0;
      $57 = ($40>>>0)<(12);
      do {
       if ($57) {
        $$0$i5$i = 0;
       } else {
        $58 = ((13896 + (($40*52)|0)|0) + 36|0);
        $59 = HEAP32[$58>>2]|0;
        $60 = ($59|0)==(-1);
        if ($60) {
         $61 = ((13896 + (($40*52)|0)|0) + 44|0);
         $62 = HEAP32[$61>>2]|0;
         $63 = ($62|0)==(-1);
         if (!($63)) {
          if ((($40|0) == 44) | (($40|0) == 66) | (($40|0) == 67)) {
           $$0$i5$i = 1;
           break;
          }
          $$0$i5$i = $62;
          break;
         }
         $64 = (($40) + -48)|0;
         $65 = ($64>>>0)<(22);
         if ($65) {
          $$0$i5$i = 1;
         } else {
          $66 = HEAP32[((25304 + 4|0))>>2]|0;
          $67 = (($66) + 12|0);
          $68 = HEAP32[$67>>2]|0;
          $69 = ($68|0)==(0);
          if (!($69)) {
           if ((($40|0) == 25) | (($40|0) == 27) | (($40|0) == 40)) {
            $$0$i5$i = 1;
            break;
           }
          }
          $$0$i5$i = 0;
         }
        } else {
         $$0$i5$i = $59;
        }
       }
      } while(0);
      $70 = (($$0$i5$i) + ($38))|0;
      $71 = ((25304 + (($56*36)|0)|0) + 3152|0);
      $72 = HEAP32[$71>>2]|0;
      $73 = ($72|0)==(0);
      $74 = ($56|0)==($70|0);
      $or$cond$i = $73 | $74;
      do {
       if (!($or$cond$i)) {
        $75 = ($56|0)==($7|0);
        if ($75) {
         $76 = ((25304 + (($7*36)|0)|0) + 3152|0);
         $77 = HEAP32[$76>>2]|0;
         $78 = ($77|0)==(0);
         if (!($78)) {
          break;
         }
        }
        __ZN8UkEngine10markChangeEi(25304,$70);
        $93 = ((25304 + (($70*36)|0)|0) + 3152|0);
        HEAP32[$93>>2] = $72;
        __ZN8UkEngine10markChangeEi(25304,$56);
        HEAP32[$71>>2] = 0;
        $94 = HEAP32[((25304 + 20|0))>>2]|0;
        $95 = (($94) + -1)|0;
        HEAP32[((25304 + 20|0))>>2] = $95;
        $96 = HEAP32[((25304 + 3104|0))>>2]|0;
        $97 = ($96|0)>(-1);
        if ($97) {
         $98 = (($96) + -1)|0;
         HEAP32[((25304 + 3104|0))>>2] = $98;
         $$pr$i1$i = $98;
        } else {
         $$pr$i1$i = $96;
        }
        $99 = ($94|0)>(0);
        L40: do {
         if ($99) {
          $100 = ((25304 + (($95*36)|0)|0) + 3128|0);
          $101 = HEAP32[$100>>2]|0;
          $102 = ($101|0)==(1);
          $103 = ($$pr$i1$i|0)>(-1);
          $or$cond6 = $102 & $103;
          if ($or$cond6) {
           $105 = $$pr$i1$i;
           while(1) {
            $104 = ((25304 + (($105*24)|0)|0) + 36|0);
            $106 = HEAP32[$104>>2]|0;
            $107 = ($106|0)==(1);
            if ($107) {
             break L40;
            }
            $108 = (($105) + -1)|0;
            HEAP32[((25304 + 3104|0))>>2] = $108;
            $109 = ($105|0)>(0);
            if ($109) {
             $105 = $108;
            } else {
             break;
            }
           }
          }
         }
        } while(0);
        $110 = HEAP32[((25304 + 12|0))>>2]|0;
        HEAP32[34080>>2] = $110;
        __ZN8UkEngine11writeOutputEPhRi();
        STACKTOP = sp;return;
       }
      } while(0);
      HEAP32[((25304 + 20|0))>>2] = $11;
      $79 = HEAP32[((25304 + 12|0))>>2]|0;
      HEAP32[34080>>2] = $79;
      HEAP32[34088>>2] = 0;
      $80 = HEAP32[((25304 + 3104|0))>>2]|0;
      $81 = ($80|0)>(-1);
      if ($81) {
       $82 = (($80) + -1)|0;
       HEAP32[((25304 + 3104|0))>>2] = $82;
       $$pr$i7$i = $82;
      } else {
       $$pr$i7$i = $80;
      }
      $83 = ($7|0)>(0);
      if (!($83)) {
       STACKTOP = sp;return;
      }
      $84 = HEAP32[$12>>2]|0;
      $85 = ($84|0)==(1);
      $86 = ($$pr$i7$i|0)>(-1);
      $or$cond5 = $85 & $86;
      if ($or$cond5) {
       $88 = $$pr$i7$i;
      } else {
       STACKTOP = sp;return;
      }
      while(1) {
       $87 = ((25304 + (($88*24)|0)|0) + 36|0);
       $89 = HEAP32[$87>>2]|0;
       $90 = ($89|0)==(1);
       if ($90) {
        label = 47;
        break;
       }
       $91 = (($88) + -1)|0;
       HEAP32[((25304 + 3104|0))>>2] = $91;
       $92 = ($88|0)>(0);
       if ($92) {
        $88 = $91;
       } else {
        label = 47;
        break;
       }
      }
      if ((label|0) == 47) {
       STACKTOP = sp;return;
      }
     }
    }
   }
   $14 = (($7) + -1)|0;
   HEAP32[((25304 + 20|0))>>2] = $14;
   $15 = HEAP32[((25304 + 12|0))>>2]|0;
   HEAP32[34080>>2] = $15;
   HEAP32[34088>>2] = 0;
   $16 = HEAP32[((25304 + 3104|0))>>2]|0;
   $17 = ($16|0)>(-1);
   if ($17) {
    $18 = (($16) + -1)|0;
    HEAP32[((25304 + 3104|0))>>2] = $18;
    $$pr$i$i = $18;
   } else {
    $$pr$i$i = $16;
   }
   $19 = ($7|0)>(0);
   if (!($19)) {
    STACKTOP = sp;return;
   }
   $20 = ((25304 + (($14*36)|0)|0) + 3128|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ($21|0)==(1);
   $23 = ($$pr$i$i|0)>(-1);
   $or$cond = $22 & $23;
   if ($or$cond) {
    $25 = $$pr$i$i;
   } else {
    STACKTOP = sp;return;
   }
   while(1) {
    $24 = ((25304 + (($25*24)|0)|0) + 36|0);
    $26 = HEAP32[$24>>2]|0;
    $27 = ($26|0)==(1);
    if ($27) {
     label = 47;
     break;
    }
    $28 = (($25) + -1)|0;
    HEAP32[((25304 + 3104|0))>>2] = $28;
    $29 = ($25|0)>(0);
    if ($29) {
     $25 = $28;
    } else {
     label = 47;
     break;
    }
   }
   if ((label|0) == 47) {
    STACKTOP = sp;return;
   }
  }
 }
 HEAP32[34080>>2] = 0;
 HEAP32[34088>>2] = 0;
 STACKTOP = sp;return;
}
function _UnikeyRestoreKeyStrokes() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[34088>>2] = 1024;
 (__ZN8UkEngine17restoreKeyStrokesERiPhS0_R12UkOutputType(25304,34080,33056,34088,34096)|0);
 STACKTOP = sp;return;
}
function __GLOBAL__I_a60() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i$i$i = 0, $exitcond15$i$i$i = 0, $exitcond21$i$i$i = 0, $i$09$i$i$i = 0, $i$16$i$i$i = 0, $indvars$iv$i$i$i = 0;
 var $indvars$iv$next$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep13$i$i$i = 0, $scevgep17$i$i$i = 0, $scevgep19$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[21120>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $i$09$i$i$i = 0;
 } else {
  HEAP32[((25304 + 4|0))>>2] = 0;
  HEAP32[((25304 + 16|0))>>2] = 128;
  HEAP32[((25304 + 28|0))>>2] = 128;
  HEAP32[((25304 + 20|0))>>2] = -1;
  HEAP32[((25304 + 3104|0))>>2] = -1;
  HEAP32[((25304 + 24|0))>>2] = 0;
  HEAP32[25304>>2] = 0;
  HEAP8[((25304 + 3121|0))>>0] = 0;
  HEAP8[((25304 + 3108|0))>>0] = 0;
  HEAP8[((25304 + 3122|0))>>0] = 0;
  STACKTOP = sp;return;
 }
 while(1) {
  $scevgep17$i$i$i = (18136 + ($i$09$i$i$i<<4)|0);
  $scevgep19$i$i$i = ((13896 + (($i$09$i$i$i*52)|0)|0) + 12|0);
  ;HEAP32[$scevgep17$i$i$i+0>>2]=HEAP32[$scevgep19$i$i$i+0>>2]|0;HEAP32[$scevgep17$i$i$i+4>>2]=HEAP32[$scevgep19$i$i$i+4>>2]|0;HEAP32[$scevgep17$i$i$i+8>>2]=HEAP32[$scevgep19$i$i$i+8>>2]|0;
  $2 = ((18136 + ($i$09$i$i$i<<4)|0) + 12|0);
  HEAP32[$2>>2] = $i$09$i$i$i;
  $3 = (($i$09$i$i$i) + 1)|0;
  $exitcond21$i$i$i = ($3|0)==(70);
  if ($exitcond21$i$i$i) {
   $i$16$i$i$i = 0;
   break;
  } else {
   $i$09$i$i$i = $3;
  }
 }
 while(1) {
  $scevgep$i$i$i = (19256 + ($i$16$i$i$i<<4)|0);
  $scevgep13$i$i$i = ((17536 + (($i$16$i$i$i*20)|0)|0) + 4|0);
  ;HEAP32[$scevgep$i$i$i+0>>2]=HEAP32[$scevgep13$i$i$i+0>>2]|0;HEAP32[$scevgep$i$i$i+4>>2]=HEAP32[$scevgep13$i$i$i+4>>2]|0;HEAP32[$scevgep$i$i$i+8>>2]=HEAP32[$scevgep13$i$i$i+8>>2]|0;
  $4 = ((19256 + ($i$16$i$i$i<<4)|0) + 12|0);
  HEAP32[$4>>2] = $i$16$i$i$i;
  $5 = (($i$16$i$i$i) + 1)|0;
  $exitcond15$i$i$i = ($5|0)==(30);
  if ($exitcond15$i$i$i) {
   break;
  } else {
   $i$16$i$i$i = $5;
  }
 }
 _qsort(18136,70,16,33);
 _qsort(19256,30,16,34);
 _qsort(19736,153,8,35);
 _memset((12648|0),1,186)|0;
 $indvars$iv$i$i$i = 97;
 while(1) {
  $6 = $indvars$iv$i$i$i&255;
  switch ($6<<24>>24) {
  case 121: case 117: case 111: case 105: case 101: case 97:  {
   break;
  }
  default: {
   $7 = (($indvars$iv$i$i$i) + -97)|0;
   $8 = (9504 + ($7<<2)|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = (12648 + ($9)|0);
   HEAP8[$10>>0] = 0;
   $11 = (9400 + ($7<<2)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = (12648 + ($12)|0);
   HEAP8[$13>>0] = 0;
  }
  }
  $indvars$iv$next$i$i$i = (($indvars$iv$i$i$i) + 1)|0;
  $exitcond$i$i$i = ($indvars$iv$next$i$i$i|0)==(123);
  if ($exitcond$i$i$i) {
   break;
  } else {
   $indvars$iv$i$i$i = $indvars$iv$next$i$i$i;
  }
 }
 HEAP8[((12648 + 43|0))>>0] = 0;
 HEAP8[((12648 + 42|0))>>0] = 0;
 HEAP8[21120>>0] = 1;
 HEAP32[((25304 + 4|0))>>2] = 0;
 HEAP32[((25304 + 16|0))>>2] = 128;
 HEAP32[((25304 + 28|0))>>2] = 128;
 HEAP32[((25304 + 20|0))>>2] = -1;
 HEAP32[((25304 + 3104|0))>>2] = -1;
 HEAP32[((25304 + 24|0))>>2] = 0;
 HEAP32[25304>>2] = 0;
 HEAP8[((25304 + 3121|0))>>0] = 0;
 HEAP8[((25304 + 3108|0))>>0] = 0;
 HEAP8[((25304 + 3122|0))>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$__s$0,$__ob,$__op,$__oe,$__iob,$__fl) {
 $agg$result = $agg$result|0;
 $__s$0 = $__s$0|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $$lcssa$i = 0, $$pre$phiZ2D = 0, $$size$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $__ns$0 = 0, $__p$0$i = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__sp = sp;
 $0 = ($__s$0|0)==(0|0);
 if ($0) {
  HEAP32[$agg$result>>2] = 0;
  STACKTOP = sp;return;
 }
 $1 = $__oe;
 $2 = $__ob;
 $3 = (($1) - ($2))|0;
 $4 = (($__iob) + 12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)>($3|0);
 $7 = (($5) - ($3))|0;
 $__ns$0 = $6 ? $7 : 0;
 $8 = $__op;
 $9 = (($8) - ($2))|0;
 $10 = ($9|0)>(0);
 if ($10) {
  $11 = HEAP32[$__s$0>>2]|0;
  $12 = (($11) + 48|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (FUNCTION_TABLE_iiii[$13 & 31]($__s$0,$__ob,$9)|0);
  $15 = ($14|0)==($9|0);
  if (!($15)) {
   HEAP32[$agg$result>>2] = 0;
   STACKTOP = sp;return;
  }
 }
 $16 = ($__ns$0|0)>(0);
 do {
  if ($16) {
   $17 = ($__ns$0>>>0)<(11);
   if ($17) {
    $18 = $__ns$0 << 1;
    $19 = $18&255;
    HEAP8[$__sp>>0] = $19;
    $20 = (($__sp) + 1|0);
    $$pre$phiZ2D = $__sp;$__p$0$i = $20;
   } else {
    $21 = (($__ns$0) + 16)|0;
    $22 = $21 & -16;
    $23 = ($22|0)==(0);
    $$size$i = $23 ? 1 : $22;
    $24 = (_malloc($$size$i)|0);
    $25 = ($24|0)==(0|0);
    L14: do {
     if ($25) {
      while(1) {
       $26 = HEAP32[51536>>2]|0;HEAP32[51536>>2] = (($26+0)|0);
       $27 = ($26|0)==(0);
       if ($27) {
        break;
       }
       $28 = $26;
       FUNCTION_TABLE_v[$28 & 15]();
       $29 = (_malloc($$size$i)|0);
       $30 = ($29|0)==(0|0);
       if (!($30)) {
        $$lcssa$i = $29;
        break L14;
       }
      }
      $31 = (___cxa_allocate_exception(4)|0);
      HEAP32[$31>>2] = ((51368 + 8|0));
      ___cxa_throw(($31|0),(51424|0),(117|0));
      // unreachable;
     } else {
      $$lcssa$i = $24;
     }
    } while(0);
    $32 = (($__sp) + 8|0);
    HEAP32[$32>>2] = $$lcssa$i;
    $33 = $22 | 1;
    HEAP32[$__sp>>2] = $33;
    $34 = (($__sp) + 4|0);
    HEAP32[$34>>2] = $__ns$0;
    $$pre$phiZ2D = $__sp;$__p$0$i = $$lcssa$i;
   }
   _memset(($__p$0$i|0),($__fl|0),($__ns$0|0))|0;
   $35 = (($__p$0$i) + ($__ns$0)|0);
   HEAP8[$35>>0] = 0;
   $36 = HEAP8[$$pre$phiZ2D>>0]|0;
   $37 = $36 & 1;
   $38 = ($37<<24>>24)==(0);
   if ($38) {
    $41 = (($__sp) + 1|0);
    $45 = $41;
   } else {
    $39 = (($__sp) + 8|0);
    $40 = HEAP32[$39>>2]|0;
    $45 = $40;
   }
   $42 = HEAP32[$__s$0>>2]|0;
   $43 = (($42) + 48|0);
   $44 = HEAP32[$43>>2]|0;
   $46 = (FUNCTION_TABLE_iiii[$44 & 31]($__s$0,$45,$__ns$0)|0);
   $47 = ($46|0)==($__ns$0|0);
   if ($47) {
    $53 = HEAP8[$$pre$phiZ2D>>0]|0;
    $54 = $53 & 1;
    $55 = ($54<<24>>24)==(0);
    if ($55) {
     break;
    }
    $56 = (($__sp) + 8|0);
    $57 = HEAP32[$56>>2]|0;
    _free($57);
    break;
   }
   HEAP32[$agg$result>>2] = 0;
   $48 = HEAP8[$$pre$phiZ2D>>0]|0;
   $49 = $48 & 1;
   $50 = ($49<<24>>24)==(0);
   if ($50) {
    STACKTOP = sp;return;
   }
   $51 = (($__sp) + 8|0);
   $52 = HEAP32[$51>>2]|0;
   _free($52);
   STACKTOP = sp;return;
  }
 } while(0);
 $58 = (($1) - ($8))|0;
 $59 = ($58|0)>(0);
 if ($59) {
  $60 = HEAP32[$__s$0>>2]|0;
  $61 = (($60) + 48|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = (FUNCTION_TABLE_iiii[$62 & 31]($__s$0,$__op,$58)|0);
  $64 = ($63|0)==($58|0);
  if (!($64)) {
   HEAP32[$agg$result>>2] = 0;
   STACKTOP = sp;return;
  }
 }
 HEAP32[$4>>2] = 0;
 HEAP32[$agg$result>>2] = $__s$0;
 STACKTOP = sp;return;
}
function __Z19getUnikeyBackspacesv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[34080>>2]|0;
 STACKTOP = sp;return ($0|0);
}
function __Z17getUnikeyBufCharsv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[34088>>2]|0;
 STACKTOP = sp;return ($0|0);
}
function __Z12getUnikeyBufv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return ((33056)|0);
}
function _main() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 _UnikeySetup();
 STACKTOP = sp;return 0;
}
function __ZN35EmscriptenBindingInitializer_unikeyC2Ev() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __embind_register_function((34104|0),1,(34512|0),(34504|0),(136|0),(2|0));
 __embind_register_function((34120|0),2,(34496|0),(34488|0),(40|0),(137|0));
 __embind_register_function((34144|0),1,(34512|0),(34504|0),(136|0),(3|0));
 __embind_register_function((34160|0),2,(34480|0),(34472|0),(41|0),(138|0));
 __embind_register_function((34176|0),1,(34512|0),(34504|0),(136|0),(4|0));
 __embind_register_function((34192|0),1,(34512|0),(34504|0),(136|0),(5|0));
 __embind_register_function((34216|0),3,(34456|0),(34448|0),(3|0),(42|0));
 __embind_register_function((34240|0),1,(34512|0),(34504|0),(136|0),(6|0));
 __embind_register_function((34264|0),1,(34512|0),(34504|0),(136|0),(7|0));
 __embind_register_function((34288|0),1,(34440|0),(34432|0),(74|0),(1|0));
 __embind_register_function((34304|0),2,(34480|0),(34472|0),(41|0),(139|0));
 __embind_register_function((34320|0),1,(34440|0),(34432|0),(74|0),(2|0));
 __embind_register_function((34344|0),1,(34440|0),(34432|0),(74|0),(3|0));
 __embind_register_enum((34424|0),(34368|0),4,0);
 __embind_register_enum_value((34424|0),(34384|0),0);
 __embind_register_enum_value((34424|0),(34392|0),1);
 __embind_register_enum_value((34424|0),(34400|0),2);
 STACKTOP = sp;return;
}
function __GLOBAL__I_a90() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN35EmscriptenBindingInitializer_unikeyC2Ev();
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal7InvokerIvJEE6invokeEPFvvE($fn) {
 $fn = $fn|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 FUNCTION_TABLE_v[$fn & 15]();
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal7InvokerIvJ13UkInputMethodEE6invokeEPFvS2_ES2_($fn,$args) {
 $fn = $fn|0;
 $args = $args|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 FUNCTION_TABLE_vi[$fn & 255]($args);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal7InvokerIvJjEE6invokeEPFvjEj($fn,$args) {
 $fn = $fn|0;
 $args = $args|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 FUNCTION_TABLE_vi[$fn & 255]($args);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal7InvokerIvJiiEE6invokeEPFviiEii($fn,$args,$args1) {
 $fn = $fn|0;
 $args = $args|0;
 $args1 = $args1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 FUNCTION_TABLE_vii[$fn & 63]($args,$args1);
 STACKTOP = sp;return;
}
function __ZN10emscripten8internal7InvokerIiJEE6invokeEPFivE($fn) {
 $fn = $fn|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (FUNCTION_TABLE_i[$fn & 3]()|0);
 STACKTOP = sp;return ($0|0);
}
function ___getTypeName($ti) {
 $ti = $ti|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($ti) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_strlen(($1|0))|0);
 $3 = (($2) + 1)|0;
 $4 = (_malloc($3)|0);
 $5 = ($4|0)==(0|0);
 if ($5) {
  $$0$i = 0;
  STACKTOP = sp;return ($$0$i|0);
 }
 _memcpy(($4|0),($1|0),($3|0))|0;
 $$0$i = $4;
 STACKTOP = sp;return ($$0$i|0);
}
function __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __embind_register_void((52272|0),(34520|0));
 __embind_register_bool((52288|0),(34528|0),1,1,0);
 __embind_register_integer((52304|0),(50352|0),1,0,255);
 __embind_register_integer((52336|0),(50360|0),1,-128,127);
 __embind_register_integer((52320|0),(50376|0),1,0,255);
 __embind_register_integer((52352|0),(50392|0),2,-32768,32767);
 __embind_register_integer((52368|0),(50400|0),2,0,65535);
 __embind_register_integer((52384|0),(50664|0),4,-2147483648,2147483647);
 __embind_register_integer((52400|0),(50672|0),4,0,-1);
 __embind_register_integer((52408|0),(34536|0),4,-2147483648,2147483647);
 __embind_register_integer((52424|0),(50688|0),4,0,-1);
 __embind_register_float((52440|0),(50744|0),4);
 __embind_register_float((52456|0),(50752|0),8);
 __embind_register_std_string((36080|0),(49904|0));
 __embind_register_std_string((35992|0),(34544|0));
 __embind_register_std_wstring((35904|0),4,(34584|0));
 __embind_register_emval((35784|0),(34600|0));
 __embind_register_memory_view((35752|0),1,(34616|0));
 __embind_register_memory_view((35712|0),0,(34648|0));
 __embind_register_memory_view((35672|0),1,(34688|0));
 __embind_register_memory_view((35632|0),2,(34728|0));
 __embind_register_memory_view((35592|0),3,(34760|0));
 __embind_register_memory_view((35552|0),4,(34800|0));
 __embind_register_memory_view((35512|0),5,(34832|0));
 __embind_register_memory_view((35472|0),4,(34872|0));
 __embind_register_memory_view((35432|0),5,(34904|0));
 __embind_register_memory_view((35712|0),0,(34944|0));
 __embind_register_memory_view((35672|0),1,(34976|0));
 __embind_register_memory_view((35632|0),2,(35016|0));
 __embind_register_memory_view((35592|0),3,(35056|0));
 __embind_register_memory_view((35552|0),4,(35096|0));
 __embind_register_memory_view((35512|0),5,(35136|0));
 __embind_register_memory_view((35392|0),6,(35176|0));
 __embind_register_memory_view((35352|0),7,(35208|0));
 __embind_register_memory_view((35312|0),7,(35240|0));
 STACKTOP = sp;return;
}
function __GLOBAL__I_a114() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev();
 STACKTOP = sp;return;
}
function __ZNSt3__18ios_base4InitC2Ev() {
 var $$sum = 0, $$sum19 = 0, $$sum20 = 0, $$sum21 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $not$$i = 0, $not$$i2 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 $1 = HEAP32[_stdin>>2]|0;
 HEAP32[36816>>2] = ((37904 + 8|0));
 __ZNSt3__16localeC2Ev(((36816 + 4|0)));
 ;HEAP32[((36816 + 8|0))+0>>2]=0|0;HEAP32[((36816 + 8|0))+4>>2]=0|0;HEAP32[((36816 + 8|0))+8>>2]=0|0;HEAP32[((36816 + 8|0))+12>>2]=0|0;HEAP32[((36816 + 8|0))+16>>2]=0|0;HEAP32[((36816 + 8|0))+20>>2]=0|0;
 HEAP32[36816>>2] = ((37536 + 8|0));
 HEAP32[((36816 + 32|0))>>2] = $1;
 HEAP32[((36816 + 40|0))>>2] = 36872;
 HEAP32[((36816 + 48|0))>>2] = -1;
 HEAP8[((36816 + 52|0))>>0] = 0;
 $2 = HEAP32[((36816 + 4|0))>>2]|0;
 HEAP32[$0>>2] = $2;
 $3 = (($2) + 4|0);
 $4 = HEAP32[$3>>2]|0;HEAP32[$3>>2] = (($4+1)|0);
 __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE(36816,$0);
 $5 = HEAP32[$0>>2]|0;
 $6 = (($5) + 4|0);
 $7 = HEAP32[$6>>2]|0;HEAP32[$6>>2] = (($7+-1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = HEAP32[$5>>2]|0;
  $10 = (($9) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_vi[$11 & 255]($5);
 }
 HEAP32[36104>>2] = ((38032 + 12|0));
 HEAP32[((36104 + 8|0))>>2] = ((38032 + 32|0));
 HEAP32[((36104 + 4|0))>>2] = 0;
 HEAP32[((36104 + 32|0))>>2] = 36816;
 HEAP32[((36104 + 24|0))>>2] = 0;
 HEAP32[((36104 + 28|0))>>2] = 0;
 HEAP32[((36104 + 12|0))>>2] = 4098;
 HEAP32[((36104 + 20|0))>>2] = 0;
 HEAP32[((36104 + 16|0))>>2] = 6;
 dest=((36104 + 40|0))+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev(((36104 + 36|0)));
 HEAP32[((36104 + 80|0))>>2] = 0;
 HEAP32[((36104 + 84|0))>>2] = -1;
 $12 = HEAP32[_stdout>>2]|0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(36920,$12,((36872 + 8|0)));
 HEAP32[36192>>2] = ((38112 + 12|0));
 HEAP32[((36192 + 4|0))>>2] = ((38112 + 32|0));
 HEAP32[((36192 + 28|0))>>2] = 36920;
 HEAP32[((36192 + 20|0))>>2] = 0;
 HEAP32[((36192 + 24|0))>>2] = 0;
 HEAP32[((36192 + 8|0))>>2] = 4098;
 HEAP32[((36192 + 16|0))>>2] = 0;
 HEAP32[((36192 + 12|0))>>2] = 6;
 dest=((36192 + 36|0))+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev(((36192 + 32|0)));
 HEAP32[((36192 + 76|0))>>2] = 0;
 HEAP32[((36192 + 80|0))>>2] = -1;
 $13 = HEAP32[_stderr>>2]|0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(36968,$13,((36872 + 16|0)));
 HEAP32[36280>>2] = ((38112 + 12|0));
 HEAP32[((36280 + 4|0))>>2] = ((38112 + 32|0));
 HEAP32[((36280 + 28|0))>>2] = 36968;
 HEAP32[((36280 + 20|0))>>2] = 0;
 HEAP32[((36280 + 24|0))>>2] = 0;
 HEAP32[((36280 + 8|0))>>2] = 4098;
 HEAP32[((36280 + 16|0))>>2] = 0;
 HEAP32[((36280 + 12|0))>>2] = 6;
 dest=((36280 + 36|0))+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev(((36280 + 32|0)));
 HEAP32[((36280 + 76|0))>>2] = 0;
 HEAP32[((36280 + 80|0))>>2] = -1;
 $14 = HEAP32[36280>>2]|0;
 $15 = (($14) + -12|0);
 $16 = HEAP32[$15>>2]|0;
 $$sum = (($16) + 24)|0;
 $17 = (36280 + ($$sum)|0);
 $18 = HEAP32[$17>>2]|0;
 HEAP32[36368>>2] = ((38112 + 12|0));
 HEAP32[((36368 + 4|0))>>2] = ((38112 + 32|0));
 HEAP32[((36368 + 28|0))>>2] = $18;
 $not$$i = ($18|0)==(0|0);
 $19 = $not$$i&1;
 HEAP32[((36368 + 20|0))>>2] = $19;
 HEAP32[((36368 + 24|0))>>2] = 0;
 HEAP32[((36368 + 8|0))>>2] = 4098;
 HEAP32[((36368 + 16|0))>>2] = 0;
 HEAP32[((36368 + 12|0))>>2] = 6;
 dest=((36368 + 36|0))+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev(((36368 + 32|0)));
 HEAP32[((36368 + 76|0))>>2] = 0;
 HEAP32[((36368 + 80|0))>>2] = -1;
 $20 = HEAP32[36104>>2]|0;
 $21 = (($20) + -12|0);
 $22 = HEAP32[$21>>2]|0;
 $$sum19 = (($22) + 72)|0;
 $23 = (36104 + ($$sum19)|0);
 HEAP32[$23>>2] = 36192;
 $24 = HEAP32[36280>>2]|0;
 $25 = (($24) + -12|0);
 $26 = HEAP32[$25>>2]|0;
 $$sum20 = (($26) + 4)|0;
 $27 = (36280 + ($$sum20)|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = $28 | 8192;
 HEAP32[$27>>2] = $29;
 $30 = HEAP32[36280>>2]|0;
 $31 = (($30) + -12|0);
 $32 = HEAP32[$31>>2]|0;
 $$sum21 = (($32) + 72)|0;
 $33 = (36280 + ($$sum21)|0);
 HEAP32[$33>>2] = 36192;
 HEAP32[37016>>2] = ((37968 + 8|0));
 __ZNSt3__16localeC2Ev(((37016 + 4|0)));
 ;HEAP32[((37016 + 8|0))+0>>2]=0|0;HEAP32[((37016 + 8|0))+4>>2]=0|0;HEAP32[((37016 + 8|0))+8>>2]=0|0;HEAP32[((37016 + 8|0))+12>>2]=0|0;HEAP32[((37016 + 8|0))+16>>2]=0|0;HEAP32[((37016 + 8|0))+20>>2]=0|0;
 HEAP32[37016>>2] = ((37280 + 8|0));
 HEAP32[((37016 + 32|0))>>2] = $1;
 HEAP32[((37016 + 40|0))>>2] = ((36872 + 24|0));
 HEAP32[((37016 + 48|0))>>2] = -1;
 HEAP8[((37016 + 52|0))>>0] = 0;
 $34 = HEAP32[((37016 + 4|0))>>2]|0;
 HEAP32[$0>>2] = $34;
 $35 = (($34) + 4|0);
 $36 = HEAP32[$35>>2]|0;HEAP32[$35>>2] = (($36+1)|0);
 __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE(37016,$0);
 $37 = HEAP32[$0>>2]|0;
 $38 = (($37) + 4|0);
 $39 = HEAP32[$38>>2]|0;HEAP32[$38>>2] = (($39+-1)|0);
 $40 = ($39|0)==(0);
 if ($40) {
  $41 = HEAP32[$37>>2]|0;
  $42 = (($41) + 8|0);
  $43 = HEAP32[$42>>2]|0;
  FUNCTION_TABLE_vi[$43 & 255]($37);
 }
 HEAP32[36456>>2] = ((38072 + 12|0));
 HEAP32[((36456 + 8|0))>>2] = ((38072 + 32|0));
 HEAP32[((36456 + 4|0))>>2] = 0;
 HEAP32[((36456 + 32|0))>>2] = 37016;
 HEAP32[((36456 + 24|0))>>2] = 0;
 HEAP32[((36456 + 28|0))>>2] = 0;
 HEAP32[((36456 + 12|0))>>2] = 4098;
 HEAP32[((36456 + 20|0))>>2] = 0;
 HEAP32[((36456 + 16|0))>>2] = 6;
 dest=((36456 + 40|0))+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev(((36456 + 36|0)));
 HEAP32[((36456 + 80|0))>>2] = 0;
 HEAP32[((36456 + 84|0))>>2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(37072,$12,((36872 + 32|0)));
 HEAP32[36544>>2] = ((38152 + 12|0));
 HEAP32[((36544 + 4|0))>>2] = ((38152 + 32|0));
 HEAP32[((36544 + 28|0))>>2] = 37072;
 HEAP32[((36544 + 20|0))>>2] = 0;
 HEAP32[((36544 + 24|0))>>2] = 0;
 HEAP32[((36544 + 8|0))>>2] = 4098;
 HEAP32[((36544 + 16|0))>>2] = 0;
 HEAP32[((36544 + 12|0))>>2] = 6;
 dest=((36544 + 36|0))+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev(((36544 + 32|0)));
 HEAP32[((36544 + 76|0))>>2] = 0;
 HEAP32[((36544 + 80|0))>>2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(37120,$13,((36872 + 40|0)));
 HEAP32[36632>>2] = ((38152 + 12|0));
 HEAP32[((36632 + 4|0))>>2] = ((38152 + 32|0));
 HEAP32[((36632 + 28|0))>>2] = 37120;
 HEAP32[((36632 + 20|0))>>2] = 0;
 HEAP32[((36632 + 24|0))>>2] = 0;
 HEAP32[((36632 + 8|0))>>2] = 4098;
 HEAP32[((36632 + 16|0))>>2] = 0;
 HEAP32[((36632 + 12|0))>>2] = 6;
 dest=((36632 + 36|0))+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev(((36632 + 32|0)));
 HEAP32[((36632 + 76|0))>>2] = 0;
 HEAP32[((36632 + 80|0))>>2] = -1;
 $44 = HEAP32[36632>>2]|0;
 $45 = (($44) + -12|0);
 $46 = HEAP32[$45>>2]|0;
 $$sum22 = (($46) + 24)|0;
 $47 = (36632 + ($$sum22)|0);
 $48 = HEAP32[$47>>2]|0;
 HEAP32[36720>>2] = ((38152 + 12|0));
 HEAP32[((36720 + 4|0))>>2] = ((38152 + 32|0));
 HEAP32[((36720 + 28|0))>>2] = $48;
 $not$$i2 = ($48|0)==(0|0);
 $49 = $not$$i2&1;
 HEAP32[((36720 + 20|0))>>2] = $49;
 HEAP32[((36720 + 24|0))>>2] = 0;
 HEAP32[((36720 + 8|0))>>2] = 4098;
 HEAP32[((36720 + 16|0))>>2] = 0;
 HEAP32[((36720 + 12|0))>>2] = 6;
 dest=((36720 + 36|0))+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 __ZNSt3__16localeC2Ev(((36720 + 32|0)));
 HEAP32[((36720 + 76|0))>>2] = 0;
 HEAP32[((36720 + 80|0))>>2] = -1;
 $50 = HEAP32[36456>>2]|0;
 $51 = (($50) + -12|0);
 $52 = HEAP32[$51>>2]|0;
 $$sum23 = (($52) + 72)|0;
 $53 = (36456 + ($$sum23)|0);
 HEAP32[$53>>2] = 36544;
 $54 = HEAP32[36632>>2]|0;
 $55 = (($54) + -12|0);
 $56 = HEAP32[$55>>2]|0;
 $$sum24 = (($56) + 4)|0;
 $57 = (36632 + ($$sum24)|0);
 $58 = HEAP32[$57>>2]|0;
 $59 = $58 | 8192;
 HEAP32[$57>>2] = $59;
 $60 = HEAP32[36632>>2]|0;
 $61 = (($60) + -12|0);
 $62 = HEAP32[$61>>2]|0;
 $$sum25 = (($62) + 72)|0;
 $63 = (36632 + ($$sum25)|0);
 HEAP32[$63>>2] = 36544;
 STACKTOP = sp;return;
}
function __ZNSt3__18ios_base4InitD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(36192);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(36368);
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(36544);
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(36720);
 STACKTOP = sp;return;
}
function __ZNKSt3__114error_category23default_error_conditionEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$agg$result>>2] = $ev;
 $0 = (($agg$result) + 4|0);
 HEAP32[$0>>2] = $this;
 STACKTOP = sp;return;
}
function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 $1 = HEAP32[$this>>2]|0;
 $2 = (($1) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 FUNCTION_TABLE_viii[$3 & 3]($0,$this,$code);
 $4 = (($0) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($condition) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5|0)==($7|0);
 if (!($8)) {
  $12 = 0;
  STACKTOP = sp;return ($12|0);
 }
 $9 = HEAP32[$0>>2]|0;
 $10 = HEAP32[$condition>>2]|0;
 $11 = ($9|0)==($10|0);
 $12 = $11;
 STACKTOP = sp;return ($12|0);
}
function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this,$code,$condition) {
 $this = $this|0;
 $code = $code|0;
 $condition = $condition|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($code) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==($this|0);
 if (!($2)) {
  $5 = 0;
  STACKTOP = sp;return ($5|0);
 }
 $3 = HEAP32[$code>>2]|0;
 $4 = ($3|0)==($condition|0);
 $5 = $4;
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$ec,$what_arg) {
 $agg$result = $agg$result|0;
 $ec = $ec|0;
 $what_arg = $what_arg|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 $1 = HEAP32[$ec>>2]|0;
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = HEAP8[$what_arg>>0]|0;
  $4 = $3 & 1;
  $5 = ($4<<24>>24)==(0);
  if ($5) {
   $8 = $3&255;
   $9 = $8 >>> 1;
   $11 = $9;
  } else {
   $6 = (($what_arg) + 4|0);
   $7 = HEAP32[$6>>2]|0;
   $11 = $7;
  }
  $10 = ($11|0)==(0);
  if ($10) {
   $17 = $1;
  } else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($what_arg,37680,2);
   $$pre = HEAP32[$ec>>2]|0;
   $17 = $$pre;
  }
  $12 = (($ec) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) + 24|0);
  $16 = HEAP32[$15>>2]|0;
  FUNCTION_TABLE_viii[$16 & 3]($0,$13,$17);
  $18 = HEAP8[$0>>0]|0;
  $19 = $18 & 1;
  $20 = ($19<<24>>24)==(0);
  if ($20) {
   $25 = (($0) + 1|0);
   $26 = $18&255;
   $27 = $26 >>> 1;
   $28 = $25;$29 = $27;
  } else {
   $21 = (($0) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = (($0) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $28 = $22;$29 = $24;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($what_arg,$28,$29);
  $30 = HEAP8[$0>>0]|0;
  $31 = $30 & 1;
  $32 = ($31<<24>>24)==(0);
  if (!($32)) {
   $33 = (($0) + 8|0);
   $34 = HEAP32[$33>>2]|0;
   _free($34);
  }
 }
 ;HEAP32[$agg$result+0>>2]=HEAP32[$what_arg+0>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$what_arg+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$what_arg+8>>2]|0;
 ;HEAP32[$what_arg+0>>2]=0|0;HEAP32[$what_arg+4>>2]=0|0;HEAP32[$what_arg+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this,$ec$0,$ec$1,$what_arg) {
 $this = $this|0;
 $ec$0 = $ec$0|0;
 $ec$1 = $ec$1|0;
 $what_arg = $what_arg|0;
 var $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ec = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $ec = sp;
 HEAP32[$ec>>2] = $ec$0;
 $$1 = (($ec) + 4|0);
 HEAP32[$$1>>2] = $ec$1;
 $0 = sp + 20|0;
 $1 = sp + 8|0;
 $2 = (_strlen(($what_arg|0))|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1,$what_arg,$2);
 __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($0,$ec,$1);
 HEAP32[$this>>2] = ((51592 + 8|0));
 $3 = HEAP8[$0>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $8 = (($0) + 1|0);
  $9 = $8;
 } else {
  $6 = (($0) + 8|0);
  $7 = HEAP32[$6>>2]|0;
  $9 = $7;
 }
 $10 = (_strlen(($9|0))|0);
 $11 = (($10) + 13)|0;
 $12 = (__Znwj($11)|0);
 HEAP32[$12>>2] = $10;
 $13 = (($12) + 4|0);
 HEAP32[$13>>2] = $10;
 $14 = (($12) + 8|0);
 HEAP32[$14>>2] = 0;
 $15 = (($12) + 12|0);
 $16 = (($10) + 1)|0;
 _memcpy(($15|0),($9|0),($16|0))|0;
 $17 = (($this) + 4|0);
 HEAP32[$17>>2] = $15;
 if (!($5)) {
  $18 = (($0) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  _free($19);
 }
 $20 = HEAP8[$1>>0]|0;
 $21 = $20 & 1;
 $22 = ($21<<24>>24)==(0);
 if (!($22)) {
  $23 = (($1) + 8|0);
  $24 = HEAP32[$23>>2]|0;
  _free($24);
 }
 HEAP32[$this>>2] = ((37688 + 8|0));
 $25 = (($this) + 8|0);
 $26 = $ec;
 $27 = $26;
 $28 = HEAP32[$27>>2]|0;
 $29 = (($26) + 4)|0;
 $30 = $29;
 $31 = HEAP32[$30>>2]|0;
 $32 = $25;
 $33 = $32;
 HEAP32[$33>>2] = $28;
 $34 = (($32) + 4)|0;
 $35 = $34;
 HEAP32[$35>>2] = $31;
 STACKTOP = sp;return;
}
function __ZNSt3__112system_errorD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((51592 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = (($3) + -1)|0;
 $5 = ($4|0)<(0);
 if (!($5)) {
  _free($this);
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$0>>2]|0;
 $7 = (($6) + -12|0);
 _free($7);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__112system_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((51592 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = (($3) + -1)|0;
 $5 = ($4|0)<(0);
 if (!($5)) {
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$0>>2]|0;
 $7 = (($6) + -12|0);
 _free($7);
 STACKTOP = sp;return;
}
function __ZNSt3__114error_categoryD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 HEAP32[$0>>2] = ((51568 + 8|0));
 $1 = (__Znwj(25)|0);
 $2 = (($0) + 4|0);
 HEAP32[$1>>2] = 12;
 $3 = (($1) + 4|0);
 HEAP32[$3>>2] = 12;
 $4 = (($1) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = (($1) + 12|0);
 dest=$5+0|0; src=49992+0|0; stop=dest+13|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 HEAP32[$2>>2] = $5;
 HEAP32[$0>>2] = ((51648 + 8|0));
 ___cxa_throw(($0|0),(51696|0),(119|0));
 // unreachable;
}
function __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 HEAP32[$0>>2] = ((51568 + 8|0));
 $1 = (__Znwj(25)|0);
 $2 = (($0) + 4|0);
 HEAP32[$1>>2] = 12;
 $3 = (($1) + 4|0);
 HEAP32[$3>>2] = 12;
 $4 = (($1) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = (($1) + 12|0);
 dest=$5+0|0; src=49992+0|0; stop=dest+13|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 HEAP32[$2>>2] = $5;
 HEAP32[$0>>2] = ((51712 + 8|0));
 ___cxa_throw(($0|0),(51760|0),(119|0));
 // unreachable;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  ;HEAP32[$this+0>>2]=HEAP32[$__str+0>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
  STACKTOP = sp;return;
 } else {
  $3 = (($__str) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($__str) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$4,$6);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $1 = ($__sz>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 16)|0;
  $6 = $5 & -16;
  $7 = (__Znwj($6)|0);
  $8 = (($this) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = (($this) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  STACKTOP = sp;return;
 }
 $3 = (($this) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 _free($4);
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen(($__s|0))|0);
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $10 = $1;$8 = 10;
 } else {
  $4 = HEAP32[$this>>2]|0;
  $5 = $4 & -2;
  $phitmp$i$i = (($5) + -1)|0;
  $6 = $4&255;
  $10 = $6;$8 = $phitmp$i$i;
 }
 $7 = ($0>>>0)>($8>>>0);
 $9 = $10 & 1;
 $11 = ($9<<24>>24)==(0);
 if ($7) {
  if ($11) {
   $25 = $10&255;
   $26 = $25 >>> 1;
   $28 = $26;
  } else {
   $23 = (($this) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $28 = $24;
  }
  $27 = (($0) - ($8))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$8,$27,$28,0,$28,$0,$__s);
  STACKTOP = sp;return;
 }
 if ($11) {
  $14 = (($this) + 1|0);
  $15 = $14;
 } else {
  $12 = (($this) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $15 = $13;
 }
 _memmove(($15|0),($__s|0),($0|0))|0;
 $16 = (($15) + ($0)|0);
 HEAP8[$16>>0] = 0;
 $17 = HEAP8[$this>>0]|0;
 $18 = $17 & 1;
 $19 = ($18<<24>>24)==(0);
 if ($19) {
  $21 = $0 << 1;
  $22 = $21&255;
  HEAP8[$this>>0] = $22;
  STACKTOP = sp;return;
 } else {
  $20 = (($this) + 4|0);
  HEAP32[$20>>2] = $0;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $8 = $6;
 } else {
  $3 = (($this) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $8 = $4;
 }
 $7 = ($8>>>0)<($__n>>>0);
 if (!($7)) {
  if ($2) {
   $47 = ((($this) + ($__n)|0) + 1|0);
   HEAP8[$47>>0] = 0;
   $48 = $__n << 1;
   $49 = $48&255;
   HEAP8[$this>>0] = $49;
   STACKTOP = sp;return;
  } else {
   $43 = (($this) + 8|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (($44) + ($__n)|0);
   HEAP8[$45>>0] = 0;
   $46 = (($this) + 4|0);
   HEAP32[$46>>2] = $__n;
   STACKTOP = sp;return;
  }
 }
 $9 = (($__n) - ($8))|0;
 $10 = ($8|0)==($__n|0);
 if ($10) {
  STACKTOP = sp;return;
 }
 if ($2) {
  $15 = $0;$22 = 10;
 } else {
  $11 = HEAP32[$this>>2]|0;
  $12 = $11 & -2;
  $phitmp$i$i = (($12) + -1)|0;
  $13 = $11&255;
  $15 = $13;$22 = $phitmp$i$i;
 }
 $14 = $15 & 1;
 $16 = ($14<<24>>24)==(0);
 if ($16) {
  $19 = $15&255;
  $20 = $19 >>> 1;
  $23 = $20;
 } else {
  $17 = (($this) + 4|0);
  $18 = HEAP32[$17>>2]|0;
  $23 = $18;
 }
 $21 = (($22) - ($23))|0;
 $24 = ($21>>>0)<($9>>>0);
 if ($24) {
  $25 = (($9) - ($22))|0;
  $26 = (($25) + ($23))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$22,$26,$23,$23,0);
  $$pre$i = HEAP8[$this>>0]|0;
  $28 = $$pre$i;
 } else {
  $28 = $15;
 }
 $27 = $28 & 1;
 $29 = ($27<<24>>24)==(0);
 if ($29) {
  $32 = (($this) + 1|0);
  $34 = $32;
 } else {
  $30 = (($this) + 8|0);
  $31 = HEAP32[$30>>2]|0;
  $34 = $31;
 }
 $33 = (($34) + ($23)|0);
 _memset(($33|0),0,($9|0))|0;
 $35 = (($23) + ($9))|0;
 $36 = HEAP8[$this>>0]|0;
 $37 = $36 & 1;
 $38 = ($37<<24>>24)==(0);
 if ($38) {
  $40 = $35 << 1;
  $41 = $40&255;
  HEAP8[$this>>0] = $41;
 } else {
  $39 = (($this) + 4|0);
  HEAP32[$39>>2] = $35;
 }
 $42 = (($34) + ($35)|0);
 HEAP8[$42>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_data$0 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0, $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $19 = 10;$7 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $19 = $phitmp$i;$7 = $5;
 }
 $6 = $7 & 1;
 $8 = ($6<<24>>24)==(0);
 if ($8) {
  $11 = $7&255;
  $12 = $11 >>> 1;
  $14 = $12;
 } else {
  $9 = (($this) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $14 = $10;
 }
 $13 = ($14>>>0)<(11);
 if ($13) {
  $18 = 10;
 } else {
  $15 = (($14) + 16)|0;
  $16 = $15 & -16;
  $phitmp$i2 = (($16) + -1)|0;
  $18 = $phitmp$i2;
 }
 $17 = ($18|0)==($19|0);
 if ($17) {
  STACKTOP = sp;return;
 }
 $20 = ($18|0)==(10);
 do {
  if ($20) {
   $21 = (($this) + 1|0);
   $22 = (($this) + 8|0);
   $23 = HEAP32[$22>>2]|0;
   $35 = $7;$__new_data$1 = $21;$__now_long$0$off0 = 0;$__p$0 = $23;$__was_long$0$off0 = 1;
  } else {
   $24 = ($18>>>0)>($19>>>0);
   $25 = (($18) + 1)|0;
   if ($24) {
    $26 = (__Znwj($25)|0);
    $__new_data$0 = $26;
   } else {
    $27 = (__Znwj($25)|0);
    $__new_data$0 = $27;
   }
   $28 = HEAP8[$this>>0]|0;
   $29 = $28 & 1;
   $30 = ($29<<24>>24)==(0);
   if ($30) {
    $33 = (($this) + 1|0);
    $35 = $28;$__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $33;$__was_long$0$off0 = 0;
    break;
   } else {
    $31 = (($this) + 8|0);
    $32 = HEAP32[$31>>2]|0;
    $35 = $28;$__new_data$1 = $__new_data$0;$__now_long$0$off0 = 1;$__p$0 = $32;$__was_long$0$off0 = 1;
    break;
   }
  }
 } while(0);
 $34 = $35 & 1;
 $36 = ($34<<24>>24)==(0);
 if ($36) {
  $39 = $35&255;
  $40 = $39 >>> 1;
  $42 = $40;
 } else {
  $37 = (($this) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  $42 = $38;
 }
 $41 = (($42) + 1)|0;
 _memcpy(($__new_data$1|0),($__p$0|0),($41|0))|0;
 if ($__was_long$0$off0) {
  _free($__p$0);
 }
 if ($__now_long$0$off0) {
  $43 = (($18) + 1)|0;
  $44 = $43 | 1;
  HEAP32[$this>>2] = $44;
  $45 = (($this) + 4|0);
  HEAP32[$45>>2] = $14;
  $46 = (($this) + 8|0);
  HEAP32[$46>>2] = $__new_data$1;
  STACKTOP = sp;return;
 } else {
  $47 = $14 << 1;
  $48 = $47&255;
  HEAP8[$this>>0] = $48;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = (($this) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 10;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = (($this) + 1|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $__p$0$sum$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $__p$0$sum$pre;
  $__p$0 = (($$pn) + ($__sz$0)|0);
  HEAP8[$__p$0>>0] = $__c;
  $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
  HEAP8[$22>>0] = 0;
  STACKTOP = sp;return;
 }
 else if ((label|0) == 8) {
  $18 = (($this) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = (($this) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
  $__p$0 = (($$pn) + ($__sz$0)|0);
  HEAP8[$__p$0>>0] = $__c;
  $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
  HEAP8[$22>>0] = 0;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $14 = 10;$7 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $14 = $phitmp$i;$7 = $5;
 }
 $6 = $7 & 1;
 $8 = ($6<<24>>24)==(0);
 if ($8) {
  $11 = $7&255;
  $12 = $11 >>> 1;
  $15 = $12;
 } else {
  $9 = (($this) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $15 = $10;
 }
 $13 = (($14) - ($15))|0;
 $16 = ($13>>>0)<($__n>>>0);
 if ($16) {
  $31 = (($__n) - ($14))|0;
  $32 = (($31) + ($15))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$14,$32,$15,$15,0,$__n,$__s);
  STACKTOP = sp;return;
 }
 $17 = ($__n|0)==(0);
 if ($17) {
  STACKTOP = sp;return;
 }
 if ($8) {
  $20 = (($this) + 1|0);
  $22 = $20;
 } else {
  $18 = (($this) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $22 = $19;
 }
 $21 = (($22) + ($15)|0);
 _memcpy(($21|0),($__s|0),($__n|0))|0;
 $23 = (($15) + ($__n))|0;
 $24 = HEAP8[$this>>0]|0;
 $25 = $24 & 1;
 $26 = ($25<<24>>24)==(0);
 if ($26) {
  $28 = $23 << 1;
  $29 = $28&255;
  HEAP8[$this>>0] = $29;
 } else {
  $27 = (($this) + 4|0);
  HEAP32[$27>>2] = $23;
 }
 $30 = (($22) + ($23)|0);
 HEAP8[$30>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-18 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 1|0);
  $19 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $19 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  if ($13) {
   $16 = 11;
  } else {
   $14 = (($12) + 16)|0;
   $15 = $14 & -16;
   $16 = $15;
  }
 } else {
  $16 = -17;
 }
 $17 = (__Znwj($16)|0);
 $18 = ($__n_copy|0)==(0);
 if (!($18)) {
  _memcpy(($17|0),($19|0),($__n_copy|0))|0;
 }
 $20 = ($__n_add|0)==(0);
 if (!($20)) {
  $21 = (($17) + ($__n_copy)|0);
  _memcpy(($21|0),($__p_new_stuff|0),($__n_add|0))|0;
 }
 $22 = (($__old_sz) - ($__n_del))|0;
 $23 = ($22|0)==($__n_copy|0);
 if (!($23)) {
  $24 = (($22) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $25 = (($17) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $26 = (($19) + ($$sum1)|0);
  _memcpy(($25|0),($26|0),($24|0))|0;
 }
 $27 = ($__old_cap|0)==(10);
 if ($27) {
  $28 = (($this) + 8|0);
  HEAP32[$28>>2] = $17;
  $29 = $16 | 1;
  HEAP32[$this>>2] = $29;
  $30 = (($22) + ($__n_add))|0;
  $31 = (($this) + 4|0);
  HEAP32[$31>>2] = $30;
  $32 = (($17) + ($30)|0);
  HEAP8[$32>>0] = 0;
  STACKTOP = sp;return;
 }
 _free($19);
 $28 = (($this) + 8|0);
 HEAP32[$28>>2] = $17;
 $29 = $16 | 1;
 HEAP32[$this>>2] = $29;
 $30 = (($22) + ($__n_add))|0;
 $31 = (($this) + 4|0);
 HEAP32[$31>>2] = $30;
 $32 = (($17) + ($30)|0);
 HEAP8[$32>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-17 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 1|0);
  $19 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $19 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  if ($13) {
   $16 = 11;
  } else {
   $14 = (($12) + 16)|0;
   $15 = $14 & -16;
   $16 = $15;
  }
 } else {
  $16 = -17;
 }
 $17 = (__Znwj($16)|0);
 $18 = ($__n_copy|0)==(0);
 if (!($18)) {
  _memcpy(($17|0),($19|0),($__n_copy|0))|0;
 }
 $20 = ($__old_sz|0)==($__n_copy|0);
 if (!($20)) {
  $21 = (($__old_sz) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $22 = (($17) + ($$sum)|0);
  $23 = (($19) + ($__n_copy)|0);
  _memcpy(($22|0),($23|0),($21|0))|0;
 }
 $24 = ($__old_cap|0)==(10);
 if ($24) {
  $25 = (($this) + 8|0);
  HEAP32[$25>>2] = $17;
  $26 = $16 | 1;
  HEAP32[$this>>2] = $26;
  STACKTOP = sp;return;
 }
 _free($19);
 $25 = (($this) + 8|0);
 HEAP32[$25>>2] = $17;
 $26 = $16 | 1;
 HEAP32[$this>>2] = $26;
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $$014$i = 0, $$023$i = 0, $$05$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $1 = ($__sz>>>0)<(2);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = (($this) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = (($this) + 4|0);
  HEAP32[$11>>2] = $__sz;
  $__p$0 = $8;
 }
 $12 = ($__sz|0)==(0);
 if ($12) {
  $18 = (($__p$0) + ($__sz<<2)|0);
  HEAP32[$18>>2] = 0;
  STACKTOP = sp;return;
 } else {
  $$014$i = $__sz;$$023$i = $__s;$$05$i = $__p$0;
 }
 while(1) {
  $13 = (($$014$i) + -1)|0;
  $14 = (($$023$i) + 4|0);
  $15 = HEAP32[$$023$i>>2]|0;
  $16 = (($$05$i) + 4|0);
  HEAP32[$$05$i>>2] = $15;
  $17 = ($13|0)==(0);
  if ($17) {
   break;
  } else {
   $$014$i = $13;$$023$i = $14;$$05$i = $16;
  }
 }
 $18 = (($__p$0) + ($__sz<<2)|0);
 HEAP32[$18>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this,$__n,$__c) {
 $this = $this|0;
 $__n = $__n|0;
 $__c = $__c|0;
 var $$012$i = 0, $$03$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741807);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $1 = ($__n>>>0)<(2);
 if ($1) {
  $2 = $__n << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 4|0);
  $__p$0 = $4;
 } else {
  $5 = (($__n) + 4)|0;
  $6 = $5 & -4;
  $7 = $6 << 2;
  $8 = (__Znwj($7)|0);
  $9 = (($this) + 8|0);
  HEAP32[$9>>2] = $8;
  $10 = $6 | 1;
  HEAP32[$this>>2] = $10;
  $11 = (($this) + 4|0);
  HEAP32[$11>>2] = $__n;
  $__p$0 = $8;
 }
 $12 = ($__n|0)==(0);
 if ($12) {
  $16 = (($__p$0) + ($__n<<2)|0);
  HEAP32[$16>>2] = 0;
  STACKTOP = sp;return;
 } else {
  $$012$i = $__n;$$03$i = $__p$0;
 }
 while(1) {
  $13 = (($$012$i) + -1)|0;
  $14 = (($$03$i) + 4|0);
  HEAP32[$$03$i>>2] = $__c;
  $15 = ($13|0)==(0);
  if ($15) {
   break;
  } else {
   $$012$i = $13;$$03$i = $14;
  }
 }
 $16 = (($__p$0) + ($__n<<2)|0);
 HEAP32[$16>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  STACKTOP = sp;return;
 }
 $3 = (($this) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 _free($4);
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this,$__s) {
 $this = $this|0;
 $__s = $__s|0;
 var $$0$i = 0, $$014$i$i$i = 0, $$023$i$i$i = 0, $$05$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $phitmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0$i = $__s;
 while(1) {
  $0 = HEAP32[$$0$i>>2]|0;
  $1 = ($0|0)==(0);
  $2 = (($$0$i) + 4|0);
  if ($1) {
   break;
  } else {
   $$0$i = $2;
  }
 }
 $3 = $$0$i;
 $4 = $__s;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = HEAP8[$this>>0]|0;
 $8 = $7 & 1;
 $9 = ($8<<24>>24)==(0);
 if ($9) {
  $14 = 1;$16 = $7;
 } else {
  $10 = HEAP32[$this>>2]|0;
  $11 = $10 & -2;
  $phitmp$i$i = (($11) + -1)|0;
  $12 = $10&255;
  $14 = $phitmp$i$i;$16 = $12;
 }
 $13 = ($6>>>0)>($14>>>0);
 if (!($13)) {
  $15 = $16 & 1;
  $17 = ($15<<24>>24)==(0);
  if ($17) {
   $20 = (($this) + 4|0);
   $21 = $20;
  } else {
   $18 = (($this) + 8|0);
   $19 = HEAP32[$18>>2]|0;
   $21 = $19;
  }
  _wmemmove($21,$__s,$6);
  $22 = (($21) + ($6<<2)|0);
  HEAP32[$22>>2] = 0;
  $23 = HEAP8[$this>>0]|0;
  $24 = $23 & 1;
  $25 = ($24<<24>>24)==(0);
  if ($25) {
   $27 = $5 >>> 1;
   $28 = $27&255;
   HEAP8[$this>>0] = $28;
   STACKTOP = sp;return;
  } else {
   $26 = (($this) + 4|0);
   HEAP32[$26>>2] = $6;
   STACKTOP = sp;return;
  }
 }
 $29 = (($6) - ($14))|0;
 $30 = (1073741806 - ($14))|0;
 $31 = ($30>>>0)<($29>>>0);
 if ($31) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $32 = $16 & 1;
 $33 = ($32<<24>>24)==(0);
 if ($33) {
  $36 = (($this) + 4|0);
  $54 = $36;
 } else {
  $34 = (($this) + 8|0);
  $35 = HEAP32[$34>>2]|0;
  $54 = $35;
 }
 $37 = ($14>>>0)<(536870887);
 if ($37) {
  $38 = $14 << 1;
  $39 = ($6>>>0)<($38>>>0);
  $40 = $39 ? $38 : $6;
  $41 = ($40>>>0)<(2);
  if ($41) {
   $45 = 2;
  } else {
   $42 = (($40) + 4)|0;
   $43 = $42 & -4;
   $45 = $43;
  }
 } else {
  $45 = 1073741807;
 }
 $44 = $45 << 2;
 $46 = (__Znwj($44)|0);
 $47 = ($6|0)==(0);
 if (!($47)) {
  $$014$i$i$i = $6;$$023$i$i$i = $__s;$$05$i$i$i = $46;
  while(1) {
   $48 = (($$014$i$i$i) + -1)|0;
   $49 = (($$023$i$i$i) + 4|0);
   $50 = HEAP32[$$023$i$i$i>>2]|0;
   $51 = (($$05$i$i$i) + 4|0);
   HEAP32[$$05$i$i$i>>2] = $50;
   $52 = ($48|0)==(0);
   if ($52) {
    break;
   } else {
    $$014$i$i$i = $48;$$023$i$i$i = $49;$$05$i$i$i = $51;
   }
  }
 }
 $53 = ($14|0)==(1);
 if (!($53)) {
  _free($54);
 }
 $55 = (($this) + 8|0);
 HEAP32[$55>>2] = $46;
 $56 = $45 | 1;
 HEAP32[$this>>2] = $56;
 $57 = (($this) + 4|0);
 HEAP32[$57>>2] = $6;
 $58 = (($46) + ($6<<2)|0);
 HEAP32[$58>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this) {
 $this = $this|0;
 var $$014$i = 0, $$023$i = 0, $$05$i = 0, $$sink = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0, $phitmp$i = 0, $phitmp$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $19 = 1;$7 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $19 = $phitmp$i;$7 = $5;
 }
 $6 = $7 & 1;
 $8 = ($6<<24>>24)==(0);
 if ($8) {
  $11 = $7&255;
  $12 = $11 >>> 1;
  $14 = $12;
 } else {
  $9 = (($this) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $14 = $10;
 }
 $13 = ($14>>>0)<(2);
 if ($13) {
  $18 = 1;
 } else {
  $15 = (($14) + 4)|0;
  $16 = $15 & -4;
  $phitmp$i2 = (($16) + -1)|0;
  $18 = $phitmp$i2;
 }
 $17 = ($18|0)==($19|0);
 if ($17) {
  STACKTOP = sp;return;
 }
 $20 = ($18|0)==(1);
 do {
  if ($20) {
   $21 = (($this) + 4|0);
   $22 = (($this) + 8|0);
   $23 = HEAP32[$22>>2]|0;
   $36 = $7;$__new_data$1 = $21;$__now_long$0$off0 = 0;$__p$0 = $23;$__was_long$0$off0 = 1;
  } else {
   $24 = ($18>>>0)>($19>>>0);
   $25 = $18 << 2;
   $26 = (($25) + 4)|0;
   if ($24) {
    $27 = (__Znwj($26)|0);
    $$sink = $27;
   } else {
    $28 = (__Znwj($26)|0);
    $$sink = $28;
   }
   $29 = HEAP8[$this>>0]|0;
   $30 = $29 & 1;
   $31 = ($30<<24>>24)==(0);
   if ($31) {
    $34 = (($this) + 4|0);
    $36 = $29;$__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $34;$__was_long$0$off0 = 0;
    break;
   } else {
    $32 = (($this) + 8|0);
    $33 = HEAP32[$32>>2]|0;
    $36 = $29;$__new_data$1 = $$sink;$__now_long$0$off0 = 1;$__p$0 = $33;$__was_long$0$off0 = 1;
    break;
   }
  }
 } while(0);
 $35 = $36 & 1;
 $37 = ($35<<24>>24)==(0);
 if ($37) {
  $40 = $36&255;
  $41 = $40 >>> 1;
  $43 = $41;
 } else {
  $38 = (($this) + 4|0);
  $39 = HEAP32[$38>>2]|0;
  $43 = $39;
 }
 $42 = (($43) + 1)|0;
 $44 = ($42|0)==(0);
 if (!($44)) {
  $$014$i = $42;$$023$i = $__p$0;$$05$i = $__new_data$1;
  while(1) {
   $45 = (($$014$i) + -1)|0;
   $46 = (($$023$i) + 4|0);
   $47 = HEAP32[$$023$i>>2]|0;
   $48 = (($$05$i) + 4|0);
   HEAP32[$$05$i>>2] = $47;
   $49 = ($45|0)==(0);
   if ($49) {
    break;
   } else {
    $$014$i = $45;$$023$i = $46;$$05$i = $48;
   }
  }
 }
 if ($__was_long$0$off0) {
  _free($__p$0);
 }
 if ($__now_long$0$off0) {
  $50 = (($18) + 1)|0;
  $51 = $50 | 1;
  HEAP32[$this>>2] = $51;
  $52 = (($this) + 4|0);
  HEAP32[$52>>2] = $14;
  $53 = (($this) + 8|0);
  HEAP32[$53>>2] = $__new_data$1;
  STACKTOP = sp;return;
 } else {
  $54 = $14 << 1;
  $55 = $54&255;
  HEAP8[$this>>0] = $55;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = (($this) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 1;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = (($this) + 4|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $__p$0$sum$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $__p$0$sum$pre;
  $__p$0 = (($$pn) + ($__sz$0<<2)|0);
  HEAP32[$__p$0>>2] = $__c;
  $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D<<2)|0);
  HEAP32[$22>>2] = 0;
  STACKTOP = sp;return;
 }
 else if ((label|0) == 8) {
  $18 = (($this) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = (($this) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
  $__p$0 = (($$pn) + ($__sz$0<<2)|0);
  HEAP32[$__p$0>>2] = $__c;
  $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D<<2)|0);
  HEAP32[$22>>2] = 0;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 var $$014$i = 0, $$014$i2 = 0, $$023$i = 0, $$023$i3 = 0, $$05$i = 0, $$05$i1 = 0, $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (1073741807 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 4|0);
  $28 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $28 = $6;
 }
 $8 = ($__old_cap>>>0)<(536870887);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(2);
  if ($13) {
   $17 = 2;
  } else {
   $14 = (($12) + 4)|0;
   $15 = $14 & -4;
   $17 = $15;
  }
 } else {
  $17 = 1073741807;
 }
 $16 = $17 << 2;
 $18 = (__Znwj($16)|0);
 $19 = ($__n_copy|0)==(0);
 if (!($19)) {
  $$014$i = $__n_copy;$$023$i = $28;$$05$i = $18;
  while(1) {
   $20 = (($$014$i) + -1)|0;
   $21 = (($$023$i) + 4|0);
   $22 = HEAP32[$$023$i>>2]|0;
   $23 = (($$05$i) + 4|0);
   HEAP32[$$05$i>>2] = $22;
   $24 = ($20|0)==(0);
   if ($24) {
    break;
   } else {
    $$014$i = $20;$$023$i = $21;$$05$i = $23;
   }
  }
 }
 $25 = (($__old_sz) - ($__n_del))|0;
 $26 = ($25|0)==($__n_copy|0);
 if (!($26)) {
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $27 = (($28) + ($$sum1<<2)|0);
  $29 = (($18) + ($$sum<<2)|0);
  $30 = (($25) - ($__n_copy))|0;
  $$014$i2 = $30;$$023$i3 = $27;$$05$i1 = $29;
  while(1) {
   $31 = (($$014$i2) + -1)|0;
   $32 = (($$023$i3) + 4|0);
   $33 = HEAP32[$$023$i3>>2]|0;
   $34 = (($$05$i1) + 4|0);
   HEAP32[$$05$i1>>2] = $33;
   $35 = ($31|0)==(0);
   if ($35) {
    break;
   } else {
    $$014$i2 = $31;$$023$i3 = $32;$$05$i1 = $34;
   }
  }
 }
 $36 = ($__old_cap|0)==(1);
 if ($36) {
  $37 = (($this) + 8|0);
  HEAP32[$37>>2] = $18;
  $38 = $17 | 1;
  HEAP32[$this>>2] = $38;
  STACKTOP = sp;return;
 }
 _free($28);
 $37 = (($this) + 8|0);
 HEAP32[$37>>2] = $18;
 $38 = $17 | 1;
 HEAP32[$this>>2] = $38;
 STACKTOP = sp;return;
}
function __ZNSt3__18ios_base5clearEj($this,$state) {
 $this = $this|0;
 $state = $state|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 24|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $4 = $state | 1;
  $5 = (($this) + 16|0);
  HEAP32[$5>>2] = $4;
 } else {
  $3 = (($this) + 16|0);
  HEAP32[$3>>2] = $state;
 }
 $6 = $2&1;
 $7 = $6 | $state;
 $8 = (($this) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $7 & $9;
 $11 = ($10|0)==(0);
 if ($11) {
  STACKTOP = sp;return;
 }
 $12 = (___cxa_allocate_exception(16)|0);
 $13 = HEAP8[38256>>0]|0;
 $14 = ($13<<24>>24)==(0);
 if ($14) {
  $15 = (___cxa_guard_acquire((38256|0))|0);
  $16 = ($15|0)==(0);
  if (!($16)) {
   HEAP32[38248>>2] = ((38944 + 8|0));
   ___cxa_guard_release((38256|0));
  }
 }
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($12,1,38248,38304);
 HEAP32[$12>>2] = ((38264 + 8|0));
 ___cxa_throw(($12|0),(38352|0),(52|0));
 // unreachable;
}
function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((38288 + 8|0));
 $0 = (($this) + 40|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (($this) + 32|0);
  $4 = (($this) + 36|0);
  $i$01$i = $1;
  while(1) {
   $5 = (($i$01$i) + -1)|0;
   $6 = HEAP32[$3>>2]|0;
   $7 = (($6) + ($5<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$4>>2]|0;
   $10 = (($9) + ($5<<2)|0);
   $11 = HEAP32[$10>>2]|0;
   FUNCTION_TABLE_viii[$8 & 3](0,$this,$11);
   $12 = ($5|0)==(0);
   if ($12) {
    break;
   } else {
    $i$01$i = $5;
   }
  }
 }
 $13 = (($this) + 28|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($14) + 4|0);
 $16 = HEAP32[$15>>2]|0;HEAP32[$15>>2] = (($16+-1)|0);
 $17 = ($16|0)==(0);
 if ($17) {
  $18 = HEAP32[$14>>2]|0;
  $19 = (($18) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  FUNCTION_TABLE_vi[$20 & 255]($14);
 }
 $21 = (($this) + 32|0);
 $22 = HEAP32[$21>>2]|0;
 _free($22);
 $23 = (($this) + 36|0);
 $24 = HEAP32[$23>>2]|0;
 _free($24);
 $25 = (($this) + 48|0);
 $26 = HEAP32[$25>>2]|0;
 _free($26);
 $27 = (($this) + 60|0);
 $28 = HEAP32[$27>>2]|0;
 _free($28);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((37904 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  _free($this);
  STACKTOP = sp;return;
 }
 $5 = HEAP32[$1>>2]|0;
 $6 = (($5) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vi[$7 & 255]($1);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((37904 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  STACKTOP = sp;return;
 }
 $5 = HEAP32[$1>>2]|0;
 $6 = (($5) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vi[$7 & 255]($1);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((37904 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  STACKTOP = sp;return;
 }
 $5 = HEAP32[$1>>2]|0;
 $6 = (($5) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vi[$7 & 255]($1);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($agg$result) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($agg$result) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0, $__i$02 = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)>(0);
 if (!($0)) {
  $__i$0$lcssa = 0;
  STACKTOP = sp;return ($__i$0$lcssa|0);
 }
 $1 = (($this) + 12|0);
 $2 = (($this) + 16|0);
 $$01 = $__s;$__i$02 = 0;
 while(1) {
  $3 = HEAP32[$1>>2]|0;
  $4 = HEAP32[$2>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = (($3) + 1|0);
   HEAP32[$1>>2] = $6;
   $7 = HEAP8[$3>>0]|0;
   $storemerge = $7;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = (($8) + 40|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (FUNCTION_TABLE_ii[$10 & 127]($this)|0);
   $12 = ($11|0)==(-1);
   if ($12) {
    $__i$0$lcssa = $__i$02;
    label = 8;
    break;
   }
   $13 = $11&255;
   $storemerge = $13;
  }
  HEAP8[$$01>>0] = $storemerge;
  $14 = (($__i$02) + 1)|0;
  $15 = (($$01) + 1|0);
  $16 = ($14|0)<($__n|0);
  if ($16) {
   $$01 = $15;$__i$02 = $14;
  } else {
   $__i$0$lcssa = $14;
   label = 8;
   break;
  }
 }
 if ((label|0) == 8) {
  STACKTOP = sp;return ($__i$0$lcssa|0);
 }
 return (0)|0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 127]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $5 = (($this) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 1|0);
 HEAP32[$5>>2] = $7;
 $8 = HEAP8[$6>>0]|0;
 $9 = $8&255;
 $$0 = $9;
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return -1;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0;
 var $__i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)>(0);
 if (!($0)) {
  $__i$0$lcssa = 0;
  STACKTOP = sp;return ($__i$0$lcssa|0);
 }
 $1 = (($this) + 24|0);
 $2 = (($this) + 28|0);
 $$02 = $__s;$__i$01 = 0;
 while(1) {
  $3 = HEAP32[$1>>2]|0;
  $4 = HEAP32[$2>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = HEAP8[$$02>>0]|0;
   $7 = (($3) + 1|0);
   HEAP32[$1>>2] = $7;
   HEAP8[$3>>0] = $6;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = (($8) + 52|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = HEAP8[$$02>>0]|0;
   $12 = $11&255;
   $13 = (FUNCTION_TABLE_iii[$10 & 63]($this,$12)|0);
   $14 = ($13|0)==(-1);
   if ($14) {
    $__i$0$lcssa = $__i$01;
    label = 7;
    break;
   }
  }
  $15 = (($$02) + 1|0);
  $16 = (($__i$01) + 1)|0;
  $17 = ($16|0)<($__n|0);
  if ($17) {
   $$02 = $15;$__i$01 = $16;
  } else {
   $__i$0$lcssa = $16;
   label = 7;
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return ($__i$0$lcssa|0);
 }
 return (0)|0;
}
function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((37968 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  _free($this);
  STACKTOP = sp;return;
 }
 $5 = HEAP32[$1>>2]|0;
 $6 = (($5) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vi[$7 & 255]($1);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((37968 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  STACKTOP = sp;return;
 }
 $5 = HEAP32[$1>>2]|0;
 $6 = (($5) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vi[$7 & 255]($1);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((37968 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  STACKTOP = sp;return;
 }
 $5 = HEAP32[$1>>2]|0;
 $6 = (($5) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vi[$7 & 255]($1);
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi($this,$0,$1) {
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return ($this|0);
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($agg$result,$this,$0,$1,$2,$3) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $agg$result;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($agg$result) + 8|0);
 $9 = $8;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result,$this,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $agg$result;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($agg$result) + 8|0);
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = -1;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = -1;
 STACKTOP = sp;return;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0, $__i$02 = 0, $storemerge = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)>(0);
 if (!($0)) {
  $__i$0$lcssa = 0;
  STACKTOP = sp;return ($__i$0$lcssa|0);
 }
 $1 = (($this) + 12|0);
 $2 = (($this) + 16|0);
 $$01 = $__s;$__i$02 = 0;
 while(1) {
  $3 = HEAP32[$1>>2]|0;
  $4 = HEAP32[$2>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = (($3) + 4|0);
   HEAP32[$1>>2] = $6;
   $7 = HEAP32[$3>>2]|0;
   $storemerge = $7;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = (($8) + 40|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (FUNCTION_TABLE_ii[$10 & 127]($this)|0);
   $12 = ($11|0)==(-1);
   if ($12) {
    $__i$0$lcssa = $__i$02;
    label = 7;
    break;
   } else {
    $storemerge = $11;
   }
  }
  HEAP32[$$01>>2] = $storemerge;
  $13 = (($__i$02) + 1)|0;
  $14 = (($$01) + 4|0);
  $15 = ($13|0)<($__n|0);
  if ($15) {
   $$01 = $14;$__i$02 = $13;
  } else {
   $__i$0$lcssa = $13;
   label = 7;
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return ($__i$0$lcssa|0);
 }
 return (0)|0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + 36|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 127]($this)|0);
 $4 = ($3|0)==(-1);
 if ($4) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $5 = (($this) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 4|0);
 HEAP32[$5>>2] = $7;
 $8 = HEAP32[$6>>2]|0;
 $$0 = $8;
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return -1;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$0$lcssa = 0, $__i$01 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n|0)>(0);
 if (!($0)) {
  $__i$0$lcssa = 0;
  STACKTOP = sp;return ($__i$0$lcssa|0);
 }
 $1 = (($this) + 24|0);
 $2 = (($this) + 28|0);
 $$02 = $__s;$__i$01 = 0;
 while(1) {
  $3 = HEAP32[$1>>2]|0;
  $4 = HEAP32[$2>>2]|0;
  $5 = ($3>>>0)<($4>>>0);
  if ($5) {
   $6 = HEAP32[$$02>>2]|0;
   $7 = (($3) + 4|0);
   HEAP32[$1>>2] = $7;
   HEAP32[$3>>2] = $6;
  } else {
   $8 = HEAP32[$this>>2]|0;
   $9 = (($8) + 52|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = HEAP32[$$02>>2]|0;
   $12 = (FUNCTION_TABLE_iii[$10 & 63]($this,$11)|0);
   $13 = ($12|0)==(-1);
   if ($13) {
    $__i$0$lcssa = $__i$01;
    label = 7;
    break;
   }
  }
  $14 = (($$02) + 4|0);
  $15 = (($__i$01) + 1)|0;
  $16 = ($15|0)<($__n|0);
  if ($16) {
   $$02 = $14;$__i$01 = $15;
  } else {
   $__i$0$lcssa = $15;
   label = 7;
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return ($__i$0$lcssa|0);
 }
 return (0)|0;
}
function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return -1;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 $$sum = (($2) + 8)|0;
 $4 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($4);
 _free($3);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 8)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 STACKTOP = sp;return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this|0;
 var $$sum = 0, $$sum$i = 0, $$sum1 = 0, $$sum1$i = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 24)|0;
 $3 = (($this) + ($$sum)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  STACKTOP = sp;return;
 }
 HEAP8[$__s>>0] = 0;
 $6 = (($__s) + 4|0);
 HEAP32[$6>>2] = $this;
 $$sum$i = (($2) + 16)|0;
 $7 = (($this) + ($$sum$i)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0);
 if ($9) {
  $$sum1$i = (($2) + 72)|0;
  $10 = (($this) + ($$sum1$i)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0|0);
  if (!($12)) {
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11);
  }
  HEAP8[$__s>>0] = 1;
  $13 = HEAP32[$this>>2]|0;
  $14 = (($13) + -12|0);
  $15 = HEAP32[$14>>2]|0;
  $$sum1 = (($15) + 24)|0;
  $16 = (($this) + ($$sum1)|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = HEAP32[$17>>2]|0;
  $19 = (($18) + 24|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (FUNCTION_TABLE_ii[$20 & 127]($17)|0);
  $22 = ($21|0)==(-1);
  if ($22) {
   $23 = HEAP32[$this>>2]|0;
   $24 = (($23) + -12|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (($this) + ($25)|0);
   $$sum2 = (($25) + 16)|0;
   $27 = (($this) + ($$sum2)|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = $28 | 1;
   __ZNSt3__18ios_base5clearEj($26,$29);
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 STACKTOP = sp;return;
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__18ios_baseD2Ev($0);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 $$sum = (($2) + 8)|0;
 $4 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($4);
 _free($3);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 8)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 STACKTOP = sp;return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($this) {
 $this = $this|0;
 var $$sum = 0, $$sum$i = 0, $$sum1 = 0, $$sum1$i = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__s = sp;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 24)|0;
 $3 = (($this) + ($$sum)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  STACKTOP = sp;return;
 }
 HEAP8[$__s>>0] = 0;
 $6 = (($__s) + 4|0);
 HEAP32[$6>>2] = $this;
 $$sum$i = (($2) + 16)|0;
 $7 = (($this) + ($$sum$i)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0);
 if ($9) {
  $$sum1$i = (($2) + 72)|0;
  $10 = (($this) + ($$sum1$i)|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0|0);
  if (!($12)) {
   __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($11);
  }
  HEAP8[$__s>>0] = 1;
  $13 = HEAP32[$this>>2]|0;
  $14 = (($13) + -12|0);
  $15 = HEAP32[$14>>2]|0;
  $$sum1 = (($15) + 24)|0;
  $16 = (($this) + ($$sum1)|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = HEAP32[$17>>2]|0;
  $19 = (($18) + 24|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (FUNCTION_TABLE_ii[$20 & 127]($17)|0);
  $22 = ($21|0)==(-1);
  if ($22) {
   $23 = HEAP32[$this>>2]|0;
   $24 = (($23) + -12|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (($this) + ($25)|0);
   $$sum2 = (($25) + 16)|0;
   $27 = (($this) + ($$sum2)|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = $28 | 1;
   __ZNSt3__18ios_base5clearEj($26,$29);
  }
 }
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
 STACKTOP = sp;return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 $$sum = (($2) + 4)|0;
 $4 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($4);
 _free($3);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 4)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 STACKTOP = sp;return;
}
function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $$sum3 = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $$sum = (($4) + 24)|0;
 $5 = (($1) + ($$sum)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  STACKTOP = sp;return;
 }
 $$sum1 = (($4) + 16)|0;
 $8 = (($1) + ($$sum1)|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0);
 if (!($10)) {
  STACKTOP = sp;return;
 }
 $$sum2 = (($4) + 4)|0;
 $11 = (($1) + ($$sum2)|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $12 & 8192;
 $14 = ($13|0)==(0);
 if ($14) {
  STACKTOP = sp;return;
 }
 $15 = (__ZSt18uncaught_exceptionv()|0);
 if ($15) {
  STACKTOP = sp;return;
 }
 $16 = HEAP32[$0>>2]|0;
 $17 = HEAP32[$16>>2]|0;
 $18 = (($17) + -12|0);
 $19 = HEAP32[$18>>2]|0;
 $$sum3 = (($19) + 24)|0;
 $20 = (($16) + ($$sum3)|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = HEAP32[$21>>2]|0;
 $23 = (($22) + 24|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (FUNCTION_TABLE_ii[$24 & 127]($21)|0);
 $26 = ($25|0)==(-1);
 if (!($26)) {
  STACKTOP = sp;return;
 }
 $27 = HEAP32[$0>>2]|0;
 $28 = HEAP32[$27>>2]|0;
 $29 = (($28) + -12|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = (($27) + ($30)|0);
 $$sum4 = (($30) + 16)|0;
 $32 = (($27) + ($$sum4)|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = $33 | 1;
 __ZNSt3__18ios_base5clearEj($31,$34);
 STACKTOP = sp;return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 __ZNSt3__18ios_baseD2Ev($0);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($this) + ($2)|0);
 $$sum = (($2) + 4)|0;
 $4 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($4);
 _free($3);
 STACKTOP = sp;return;
}
function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this|0;
 var $$sum = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + -12|0);
 $2 = HEAP32[$1>>2]|0;
 $$sum = (($2) + 4)|0;
 $3 = (($this) + ($$sum)|0);
 __ZNSt3__18ios_baseD2Ev($3);
 STACKTOP = sp;return;
}
function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($this) {
 $this = $this|0;
 var $$sum = 0, $$sum1 = 0, $$sum2 = 0, $$sum3 = 0, $$sum4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($2) + -12|0);
 $4 = HEAP32[$3>>2]|0;
 $$sum = (($4) + 24)|0;
 $5 = (($1) + ($$sum)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  STACKTOP = sp;return;
 }
 $$sum1 = (($4) + 16)|0;
 $8 = (($1) + ($$sum1)|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0);
 if (!($10)) {
  STACKTOP = sp;return;
 }
 $$sum2 = (($4) + 4)|0;
 $11 = (($1) + ($$sum2)|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $12 & 8192;
 $14 = ($13|0)==(0);
 if ($14) {
  STACKTOP = sp;return;
 }
 $15 = (__ZSt18uncaught_exceptionv()|0);
 if ($15) {
  STACKTOP = sp;return;
 }
 $16 = HEAP32[$0>>2]|0;
 $17 = HEAP32[$16>>2]|0;
 $18 = (($17) + -12|0);
 $19 = HEAP32[$18>>2]|0;
 $$sum3 = (($19) + 24)|0;
 $20 = (($16) + ($$sum3)|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = HEAP32[$21>>2]|0;
 $23 = (($22) + 24|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = (FUNCTION_TABLE_ii[$24 & 127]($21)|0);
 $26 = ($25|0)==(-1);
 if (!($26)) {
  STACKTOP = sp;return;
 }
 $27 = HEAP32[$0>>2]|0;
 $28 = HEAP32[$27>>2]|0;
 $29 = (($28) + -12|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = (($27) + ($30)|0);
 $$sum4 = (($30) + 16)|0;
 $32 = (($27) + ($$sum4)|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = $33 | 1;
 __ZNSt3__18ios_base5clearEj($31,$34);
 STACKTOP = sp;return;
}
function __ZNKSt3__119__iostream_category4nameEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return (38192|0);
}
function __ZNKSt3__119__iostream_category7messageEi($agg$result,$this,$ev) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $ev = $ev|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $or$cond = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $0 = ($ev|0)!=(1);
 $1 = ($ev|0)<(257);
 $or$cond = $0 & $1;
 if ($or$cond) {
  $2 = (_strerror(($ev|0))|0);
  $3 = (_strlen(($2|0))|0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result,$2,$3);
  STACKTOP = sp;return;
 } else {
  $4 = (__Znwj(48)|0);
  $5 = (($agg$result) + 8|0);
  HEAP32[$5>>2] = $4;
  HEAP32[$agg$result>>2] = 49;
  $6 = (($agg$result) + 4|0);
  HEAP32[$6>>2] = 35;
  dest=$4+0|0; src=38208+0|0; stop=dest+35|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $7 = (($4) + 35|0);
  HEAP8[$7>>0] = 0;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__18ios_base7failureD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((51592 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = (($3) + -1)|0;
 $5 = ($4|0)<(0);
 if (!($5)) {
  _free($this);
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$0>>2]|0;
 $7 = (($6) + -12|0);
 _free($7);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__18ios_base7failureD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((51592 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = (($3) + -1)|0;
 $5 = ($4|0)<(0);
 if (!($5)) {
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$0>>2]|0;
 $7 = (($6) + -12|0);
 _free($7);
 STACKTOP = sp;return;
}
function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_baseD2Ev($this);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__17collateIcED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$015 = 0, $$02$lcssa = 0, $$024 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$015 = $__lo2;$$024 = $__lo1;
   while(1) {
    $1 = ($$024|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP8[$$024>>0]|0;
    $3 = HEAP8[$$015>>0]|0;
    $4 = ($2<<24>>24)<($3<<24>>24);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3<<24>>24)<($2<<24>>24);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = (($$024) + 1|0);
    $7 = (($$015) + 1|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$015 = $7;$$024 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 STACKTOP = sp;return;
}
function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
  STACKTOP = sp;return ($__h$0$lcssa|0);
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
 }
 while(1) {
  $1 = $__h$02 << 4;
  $2 = HEAP8[$__p$01>>0]|0;
  $3 = $2 << 24 >> 24;
  $4 = (($3) + ($1))|0;
  $5 = $4 & -268435456;
  $6 = $5 >>> 24;
  $7 = $6 | $5;
  $8 = $7 ^ $4;
  $9 = (($__p$01) + 1|0);
  $10 = ($9|0)==($__hi|0);
  if ($10) {
   $__h$0$lcssa = $8;
   break;
  } else {
   $__h$02 = $8;$__p$01 = $9;
  }
 }
 STACKTOP = sp;return ($__h$0$lcssa|0);
}
function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__17collateIwED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this,$__lo1,$__hi1,$__lo2,$__hi2) {
 $this = $this|0;
 $__lo1 = $__lo1|0;
 $__hi1 = $__hi1|0;
 $__lo2 = $__lo2|0;
 $__hi2 = $__hi2|0;
 var $$0 = 0, $$015 = 0, $$02$lcssa = 0, $$024 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo2|0)==($__hi2|0);
 L1: do {
  if ($0) {
   $$02$lcssa = $__lo1;
   label = 6;
  } else {
   $$015 = $__lo2;$$024 = $__lo1;
   while(1) {
    $1 = ($$024|0)==($__hi1|0);
    if ($1) {
     $$0 = -1;
     break L1;
    }
    $2 = HEAP32[$$024>>2]|0;
    $3 = HEAP32[$$015>>2]|0;
    $4 = ($2|0)<($3|0);
    if ($4) {
     $$0 = -1;
     break L1;
    }
    $5 = ($3|0)<($2|0);
    if ($5) {
     $$0 = 1;
     break L1;
    }
    $6 = (($$024) + 4|0);
    $7 = (($$015) + 4|0);
    $8 = ($7|0)==($__hi2|0);
    if ($8) {
     $$02$lcssa = $6;
     label = 6;
     break;
    } else {
     $$015 = $7;$$024 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $9 = ($$02$lcssa|0)!=($__hi1|0);
  $10 = $9&1;
  $$0 = $10;
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result,$this,$__lo,$__hi) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result,$__lo,$__hi);
 STACKTOP = sp;return;
}
function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this,$__lo,$__hi) {
 $this = $this|0;
 $__lo = $__lo|0;
 $__hi = $__hi|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__lo|0)==($__hi|0);
 if ($0) {
  $__h$0$lcssa = 0;
  STACKTOP = sp;return ($__h$0$lcssa|0);
 } else {
  $__h$02 = 0;$__p$01 = $__lo;
 }
 while(1) {
  $1 = $__h$02 << 4;
  $2 = HEAP32[$__p$01>>2]|0;
  $3 = (($2) + ($1))|0;
  $4 = $3 & -268435456;
  $5 = $4 >>> 24;
  $6 = $5 | $4;
  $7 = $6 ^ $3;
  $8 = (($__p$01) + 4|0);
  $9 = ($8|0)==($__hi|0);
  if ($9) {
   $__h$0$lcssa = $7;
   break;
  } else {
   $__h$02 = $7;$__p$01 = $8;
  }
 }
 STACKTOP = sp;return ($__h$0$lcssa|0);
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$idx = 0, $$idx$val = 0, $$idx12 = 0, $$idx12$val = 0, $$idx13 = 0, $$idx13$val = 0, $$idx14 = 0, $$idx14$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy1 = sp + 8|0;
 $$byval_copy = sp + 40|0;
 $__lv = sp + 44|0;
 $0 = sp + 48|0;
 $1 = sp + 4|0;
 $2 = sp;
 $__names = sp + 16|0;
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 if ($6) {
  HEAP32[$__lv>>2] = -1;
  $7 = HEAP32[$this>>2]|0;
  $8 = (($7) + 16|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = HEAP32[$__b>>2]|0;
  HEAP32[$1>>2] = $10;
  $11 = HEAP32[$__e>>2]|0;
  HEAP32[$2>>2] = $11;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$2+0>>2]|0;
  FUNCTION_TABLE_viiiiiii[$9 & 63]($0,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv);
  $12 = HEAP32[$0>>2]|0;
  HEAP32[$__b>>2] = $12;
  $13 = HEAP32[$__lv>>2]|0;
  if ((($13|0) == 1)) {
   HEAP8[$__v>>0] = 1;
  } else if ((($13|0) == 0)) {
   HEAP8[$__v>>0] = 0;
  } else {
   HEAP8[$__v>>0] = 1;
   HEAP32[$__err>>2] = 4;
  }
  HEAP32[$agg$result>>2] = $12;
  STACKTOP = sp;return;
 }
 $14 = (($__iob) + 28|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($15) + 4|0);
 $17 = HEAP32[$16>>2]|0;HEAP32[$16>>2] = (($17+1)|0);
 $18 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx13 = (($15) + 8|0);
 $$idx13$val = HEAP32[$$idx13>>2]|0;
 $$idx14 = (($15) + 12|0);
 $$idx14$val = HEAP32[$$idx14>>2]|0;
 $19 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx13$val,$$idx14$val,$18)|0);
 $20 = (($15) + 4|0);
 $21 = HEAP32[$20>>2]|0;HEAP32[$20>>2] = (($21+-1)|0);
 $22 = ($21|0)==(0);
 if ($22) {
  $23 = HEAP32[$15>>2]|0;
  $24 = (($23) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  FUNCTION_TABLE_vi[$25 & 255]($15);
 }
 $26 = HEAP32[$14>>2]|0;
 $27 = (($26) + 4|0);
 $28 = HEAP32[$27>>2]|0;HEAP32[$27>>2] = (($28+1)|0);
 $29 = (__ZNSt3__16locale2id5__getEv(40784)|0);
 $$idx = (($26) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx12 = (($26) + 12|0);
 $$idx12$val = HEAP32[$$idx12>>2]|0;
 $30 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx12$val,$29)|0);
 $31 = (($26) + 4|0);
 $32 = HEAP32[$31>>2]|0;HEAP32[$31>>2] = (($32+-1)|0);
 $33 = ($32|0)==(0);
 if ($33) {
  $34 = HEAP32[$26>>2]|0;
  $35 = (($34) + 8|0);
  $36 = HEAP32[$35>>2]|0;
  FUNCTION_TABLE_vi[$36 & 255]($26);
 }
 $37 = HEAP32[$30>>2]|0;
 $38 = (($37) + 24|0);
 $39 = HEAP32[$38>>2]|0;
 FUNCTION_TABLE_vii[$39 & 63]($__names,$30);
 $40 = (($__names) + 12|0);
 $41 = HEAP32[$30>>2]|0;
 $42 = (($41) + 28|0);
 $43 = HEAP32[$42>>2]|0;
 FUNCTION_TABLE_vii[$43 & 63]($40,$30);
 $44 = HEAP32[$__e>>2]|0;
 $45 = (($__names) + 24|0);
 $46 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$44,$__names,$45,$19,$__err,1)|0);
 $47 = ($46|0)==($__names|0);
 $48 = $47&1;
 HEAP8[$__v>>0] = $48;
 $49 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $49;
 $50 = HEAP8[$40>>0]|0;
 $51 = $50 & 1;
 $52 = ($51<<24>>24)==(0);
 if (!($52)) {
  $53 = (($__names) + 20|0);
  $54 = HEAP32[$53>>2]|0;
  _free($54);
 }
 $55 = HEAP8[$__names>>0]|0;
 $56 = $55 & 1;
 $57 = ($56<<24>>24)==(0);
 if ($57) {
  STACKTOP = sp;return;
 }
 $58 = (($__names) + 8|0);
 $59 = HEAP32[$58>>2]|0;
 _free($59);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i4$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$pre$i$i$i4$i = 0, $$pre$i2$i$i$i = 0, $$pre$phi30$iZ2D = 0, $$pre$phi32$iZ2D = 0, $$pre29$i = 0, $$pre31$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__g$i = 0;
 var $__g_end$i = 0, $__grouping$i = 0, $__thousands_sep$i = 0, $phitmp$i19$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms$i = sp + 198|0;
 $__thousands_sep$i = sp + 196|0;
 $__grouping$i = sp + 16|0;
 $__buf$i = sp + 4|0;
 $__a_end$i = sp + 192|0;
 $__g$i = sp + 32|0;
 $__g_end$i = sp;
 $__dc$i = sp + 28|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 74;
 if ((($4|0) == 8)) {
  $$0$i$i = 16;
 } else if ((($4|0) == 64)) {
  $$0$i$i = 8;
 } else if ((($4|0) == 0)) {
  $$0$i$i = 0;
 } else {
  $$0$i$i = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping$i,$__iob,$__atoms$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $5 = HEAP8[$__buf$i>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = (($__buf$i) + 1|0);
  $$pre31$i = (($__buf$i) + 8|0);
  $$pre$phi30$iZ2D = $10;$$pre$phi32$iZ2D = $$pre31$i;$11 = $10;
 } else {
  $8 = (($__buf$i) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $$pre29$i = (($__buf$i) + 1|0);
  $$pre$phi30$iZ2D = $$pre29$i;$$pre$phi32$iZ2D = $8;$11 = $9;
 }
 HEAP32[$__a_end$i>>2] = $11;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 $12 = (($__buf$i) + 4|0);
 $13 = HEAP8[$__thousands_sep$i>>0]|0;
 $$pre$i$i$i4$i = $0;$$sroa$06$0 = $1;$__a$0$i = $11;
 L10: while(1) {
  $14 = ($$pre$i$i$i4$i|0)==(0|0);
  if ($14) {
   $26 = 0;
  } else {
   $15 = (($$pre$i$i$i4$i) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($$pre$i$i$i4$i) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$$pre$i$i$i4$i>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($$pre$i$i$i4$i)|0);
    $24 = ($23|0)==(-1);
    $$$pre$i$i$i4$i = $24 ? 0 : $$pre$i$i$i4$i;
    $26 = $$$pre$i$i$i4$i;
   } else {
    $26 = $$pre$i$i$i4$i;
   }
  }
  $25 = ($26|0)==(0|0);
  $27 = ($$sroa$06$0|0)==(0|0);
  do {
   if ($27) {
    label = 16;
   } else {
    $28 = (($$sroa$06$0) + 12|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = (($$sroa$06$0) + 16|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = ($29|0)==($31|0);
    if (!($32)) {
     if ($25) {
      $$sroa$06$2 = $$sroa$06$0;
      break;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L10;
     }
    }
    $33 = HEAP32[$$sroa$06$0>>2]|0;
    $34 = (($33) + 36|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = (FUNCTION_TABLE_ii[$35 & 127]($$sroa$06$0)|0);
    $37 = ($36|0)==(-1);
    if ($37) {
     label = 16;
    } else {
     if ($25) {
      $$sroa$06$2 = $$sroa$06$0;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L10;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($25) {
    $$pre$i2$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $38 = HEAP32[$__a_end$i>>2]|0;
  $39 = HEAP8[$__buf$i>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $43 = $39&255;
   $44 = $43 >>> 1;
   $46 = $44;
  } else {
   $42 = HEAP32[$12>>2]|0;
   $46 = $42;
  }
  $45 = (($__a$0$i) + ($46)|0);
  $47 = ($38|0)==($45|0);
  if ($47) {
   if ($41) {
    $49 = $39&255;
    $50 = $49 >>> 1;
    $52 = $50;
   } else {
    $48 = HEAP32[$12>>2]|0;
    $52 = $48;
   }
   $51 = $52 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$51);
   $53 = HEAP8[$__buf$i>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf$i>>2]|0;
    $57 = $56 & -2;
    $phitmp$i19$i = (($57) + -1)|0;
    $58 = $phitmp$i19$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$58);
   $59 = HEAP8[$__buf$i>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = $$pre$phi30$iZ2D;
   } else {
    $62 = HEAP32[$$pre$phi32$iZ2D>>2]|0;
    $64 = $62;
   }
   $63 = (($64) + ($52)|0);
   HEAP32[$__a_end$i>>2] = $63;
   $__a$1$i = $64;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $65 = (($26) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (($26) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$26>>2]|0;
   $71 = (($70) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 127]($26)|0);
   $$0$i$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i$i = $75;
  }
  $76 = $$0$i$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$$0$i$i,$__a$1$i,$__a_end$i,$__dc$i,$13,$__grouping$i,$__g$i,$__g_end$i,$__atoms$i)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i2$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$26>>2]|0;
   $83 = (($82) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 127]($26)|0);
   $$pre$i$i$i4$i = $26;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $85 = (($79) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i4$i = $26;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $86 = HEAP8[$__grouping$i>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 if ($88) {
  $91 = $86&255;
  $92 = $91 >>> 1;
  $94 = $92;
 } else {
  $89 = (($__grouping$i) + 4|0);
  $90 = HEAP32[$89>>2]|0;
  $94 = $90;
 }
 $93 = ($94|0)==(0);
 if (!($93)) {
  $95 = HEAP32[$__g_end$i>>2]|0;
  $96 = $95;
  $97 = $__g$i;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc$i>>2]|0;
   $101 = (($95) + 4|0);
   HEAP32[$__g_end$i>>2] = $101;
   HEAP32[$95>>2] = $100;
  }
 }
 $102 = HEAP32[$__a_end$i>>2]|0;
 $103 = (__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a$2$i,$102,$__err,$$0$i$i)|0);
 HEAP32[$__v>>2] = $103;
 $104 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$104,$__err);
 if ($25) {
  $116 = 0;
 } else {
  $105 = (($26) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($26) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$26>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($26)|0);
   $114 = ($113|0)==(-1);
   $$ = $114 ? 0 : $26;
   $116 = $$;
  } else {
   $116 = $26;
  }
 }
 $115 = ($116|0)==(0|0);
 $117 = ($$pre$i2$i$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 50;
  } else {
   $118 = (($$pre$i2$i$i$i) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = (($$pre$i2$i$i$i) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if (!($122)) {
    if ($115) {
     break;
    } else {
     label = 52;
     break;
    }
   }
   $123 = HEAP32[$$pre$i2$i$i$i>>2]|0;
   $124 = (($123) + 36|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = (FUNCTION_TABLE_ii[$125 & 127]($$pre$i2$i$i$i)|0);
   $127 = ($126|0)==(-1);
   if ($127) {
    label = 50;
   } else {
    if (!($115)) {
     label = 52;
    }
   }
  }
 } while(0);
 if ((label|0) == 50) {
  if ($115) {
   label = 52;
  }
 }
 if ((label|0) == 52) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $116;
 $130 = HEAP8[$__buf$i>>0]|0;
 $131 = $130 & 1;
 $132 = ($131<<24>>24)==(0);
 if (!($132)) {
  $133 = (($__buf$i) + 8|0);
  $134 = HEAP32[$133>>2]|0;
  _free($134);
 }
 $135 = HEAP8[$__grouping$i>>0]|0;
 $136 = $135 & 1;
 $137 = ($136<<24>>24)==(0);
 if ($137) {
  STACKTOP = sp;return;
 }
 $138 = (($__grouping$i) + 8|0);
 $139 = HEAP32[$138>>2]|0;
 _free($139);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i4$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$pre$i$i$i4$i = 0, $$pre$i2$i$i$i = 0, $$pre$phi30$iZ2D = 0, $$pre$phi32$iZ2D = 0, $$pre29$i = 0, $$pre31$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0;
 var $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__thousands_sep$i = 0, $phitmp$i19$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms$i = sp + 198|0;
 $__thousands_sep$i = sp + 196|0;
 $__grouping$i = sp + 16|0;
 $__buf$i = sp + 4|0;
 $__a_end$i = sp + 192|0;
 $__g$i = sp + 32|0;
 $__g_end$i = sp;
 $__dc$i = sp + 28|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 74;
 if ((($4|0) == 8)) {
  $$0$i$i = 16;
 } else if ((($4|0) == 64)) {
  $$0$i$i = 8;
 } else if ((($4|0) == 0)) {
  $$0$i$i = 0;
 } else {
  $$0$i$i = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping$i,$__iob,$__atoms$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $5 = HEAP8[$__buf$i>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = (($__buf$i) + 1|0);
  $$pre31$i = (($__buf$i) + 8|0);
  $$pre$phi30$iZ2D = $10;$$pre$phi32$iZ2D = $$pre31$i;$11 = $10;
 } else {
  $8 = (($__buf$i) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $$pre29$i = (($__buf$i) + 1|0);
  $$pre$phi30$iZ2D = $$pre29$i;$$pre$phi32$iZ2D = $8;$11 = $9;
 }
 HEAP32[$__a_end$i>>2] = $11;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 $12 = (($__buf$i) + 4|0);
 $13 = HEAP8[$__thousands_sep$i>>0]|0;
 $$pre$i$i$i4$i = $0;$$sroa$06$0 = $1;$__a$0$i = $11;
 L10: while(1) {
  $14 = ($$pre$i$i$i4$i|0)==(0|0);
  if ($14) {
   $26 = 0;
  } else {
   $15 = (($$pre$i$i$i4$i) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($$pre$i$i$i4$i) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$$pre$i$i$i4$i>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($$pre$i$i$i4$i)|0);
    $24 = ($23|0)==(-1);
    $$$pre$i$i$i4$i = $24 ? 0 : $$pre$i$i$i4$i;
    $26 = $$$pre$i$i$i4$i;
   } else {
    $26 = $$pre$i$i$i4$i;
   }
  }
  $25 = ($26|0)==(0|0);
  $27 = ($$sroa$06$0|0)==(0|0);
  do {
   if ($27) {
    label = 16;
   } else {
    $28 = (($$sroa$06$0) + 12|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = (($$sroa$06$0) + 16|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = ($29|0)==($31|0);
    if (!($32)) {
     if ($25) {
      $$sroa$06$2 = $$sroa$06$0;
      break;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L10;
     }
    }
    $33 = HEAP32[$$sroa$06$0>>2]|0;
    $34 = (($33) + 36|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = (FUNCTION_TABLE_ii[$35 & 127]($$sroa$06$0)|0);
    $37 = ($36|0)==(-1);
    if ($37) {
     label = 16;
    } else {
     if ($25) {
      $$sroa$06$2 = $$sroa$06$0;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L10;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($25) {
    $$pre$i2$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $38 = HEAP32[$__a_end$i>>2]|0;
  $39 = HEAP8[$__buf$i>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $43 = $39&255;
   $44 = $43 >>> 1;
   $46 = $44;
  } else {
   $42 = HEAP32[$12>>2]|0;
   $46 = $42;
  }
  $45 = (($__a$0$i) + ($46)|0);
  $47 = ($38|0)==($45|0);
  if ($47) {
   if ($41) {
    $49 = $39&255;
    $50 = $49 >>> 1;
    $52 = $50;
   } else {
    $48 = HEAP32[$12>>2]|0;
    $52 = $48;
   }
   $51 = $52 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$51);
   $53 = HEAP8[$__buf$i>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf$i>>2]|0;
    $57 = $56 & -2;
    $phitmp$i19$i = (($57) + -1)|0;
    $58 = $phitmp$i19$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$58);
   $59 = HEAP8[$__buf$i>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = $$pre$phi30$iZ2D;
   } else {
    $62 = HEAP32[$$pre$phi32$iZ2D>>2]|0;
    $64 = $62;
   }
   $63 = (($64) + ($52)|0);
   HEAP32[$__a_end$i>>2] = $63;
   $__a$1$i = $64;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $65 = (($26) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (($26) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$26>>2]|0;
   $71 = (($70) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 127]($26)|0);
   $$0$i$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i$i = $75;
  }
  $76 = $$0$i$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$$0$i$i,$__a$1$i,$__a_end$i,$__dc$i,$13,$__grouping$i,$__g$i,$__g_end$i,$__atoms$i)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i2$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$26>>2]|0;
   $83 = (($82) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 127]($26)|0);
   $$pre$i$i$i4$i = $26;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $85 = (($79) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i4$i = $26;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $86 = HEAP8[$__grouping$i>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 if ($88) {
  $91 = $86&255;
  $92 = $91 >>> 1;
  $94 = $92;
 } else {
  $89 = (($__grouping$i) + 4|0);
  $90 = HEAP32[$89>>2]|0;
  $94 = $90;
 }
 $93 = ($94|0)==(0);
 if (!($93)) {
  $95 = HEAP32[$__g_end$i>>2]|0;
  $96 = $95;
  $97 = $__g$i;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc$i>>2]|0;
   $101 = (($95) + 4|0);
   HEAP32[$__g_end$i>>2] = $101;
   HEAP32[$95>>2] = $100;
  }
 }
 $102 = HEAP32[$__a_end$i>>2]|0;
 $103 = (__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a$2$i,$102,$__err,$$0$i$i)|0);
 $104 = tempRet0;
 $105 = $__v;
 $106 = $105;
 HEAP32[$106>>2] = $103;
 $107 = (($105) + 4)|0;
 $108 = $107;
 HEAP32[$108>>2] = $104;
 $109 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$109,$__err);
 if ($25) {
  $121 = 0;
 } else {
  $110 = (($26) + 12|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = (($26) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ($111|0)==($113|0);
  if ($114) {
   $115 = HEAP32[$26>>2]|0;
   $116 = (($115) + 36|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = (FUNCTION_TABLE_ii[$117 & 127]($26)|0);
   $119 = ($118|0)==(-1);
   $$ = $119 ? 0 : $26;
   $121 = $$;
  } else {
   $121 = $26;
  }
 }
 $120 = ($121|0)==(0|0);
 $122 = ($$pre$i2$i$i$i|0)==(0|0);
 do {
  if ($122) {
   label = 50;
  } else {
   $123 = (($$pre$i2$i$i$i) + 12|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = (($$pre$i2$i$i$i) + 16|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = ($124|0)==($126|0);
   if (!($127)) {
    if ($120) {
     break;
    } else {
     label = 52;
     break;
    }
   }
   $128 = HEAP32[$$pre$i2$i$i$i>>2]|0;
   $129 = (($128) + 36|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = (FUNCTION_TABLE_ii[$130 & 127]($$pre$i2$i$i$i)|0);
   $132 = ($131|0)==(-1);
   if ($132) {
    label = 50;
   } else {
    if (!($120)) {
     label = 52;
    }
   }
  }
 } while(0);
 if ((label|0) == 50) {
  if ($120) {
   label = 52;
  }
 }
 if ((label|0) == 52) {
  $133 = HEAP32[$__err>>2]|0;
  $134 = $133 | 2;
  HEAP32[$__err>>2] = $134;
 }
 HEAP32[$agg$result>>2] = $121;
 $135 = HEAP8[$__buf$i>>0]|0;
 $136 = $135 & 1;
 $137 = ($136<<24>>24)==(0);
 if (!($137)) {
  $138 = (($__buf$i) + 8|0);
  $139 = HEAP32[$138>>2]|0;
  _free($139);
 }
 $140 = HEAP8[$__grouping$i>>0]|0;
 $141 = $140 & 1;
 $142 = ($141<<24>>24)==(0);
 if ($142) {
  STACKTOP = sp;return;
 }
 $143 = (($__grouping$i) + 8|0);
 $144 = HEAP32[$143>>2]|0;
 _free($144);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i4$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$pre$i$i$i4$i = 0, $$pre$i2$i$i$i = 0, $$pre$phi30$iZ2D = 0, $$pre$phi32$iZ2D = 0, $$pre29$i = 0, $$pre31$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__g$i = 0;
 var $__g_end$i = 0, $__grouping$i = 0, $__thousands_sep$i = 0, $phitmp$i19$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms$i = sp + 198|0;
 $__thousands_sep$i = sp + 196|0;
 $__grouping$i = sp + 16|0;
 $__buf$i = sp + 4|0;
 $__a_end$i = sp + 192|0;
 $__g$i = sp + 32|0;
 $__g_end$i = sp;
 $__dc$i = sp + 28|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 74;
 if ((($4|0) == 0)) {
  $$0$i$i = 0;
 } else if ((($4|0) == 8)) {
  $$0$i$i = 16;
 } else if ((($4|0) == 64)) {
  $$0$i$i = 8;
 } else {
  $$0$i$i = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping$i,$__iob,$__atoms$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $5 = HEAP8[$__buf$i>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = (($__buf$i) + 1|0);
  $$pre31$i = (($__buf$i) + 8|0);
  $$pre$phi30$iZ2D = $10;$$pre$phi32$iZ2D = $$pre31$i;$11 = $10;
 } else {
  $8 = (($__buf$i) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $$pre29$i = (($__buf$i) + 1|0);
  $$pre$phi30$iZ2D = $$pre29$i;$$pre$phi32$iZ2D = $8;$11 = $9;
 }
 HEAP32[$__a_end$i>>2] = $11;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 $12 = (($__buf$i) + 4|0);
 $13 = HEAP8[$__thousands_sep$i>>0]|0;
 $$pre$i$i$i4$i = $0;$$sroa$06$0 = $1;$__a$0$i = $11;
 L10: while(1) {
  $14 = ($$pre$i$i$i4$i|0)==(0|0);
  if ($14) {
   $26 = 0;
  } else {
   $15 = (($$pre$i$i$i4$i) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($$pre$i$i$i4$i) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$$pre$i$i$i4$i>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($$pre$i$i$i4$i)|0);
    $24 = ($23|0)==(-1);
    $$$pre$i$i$i4$i = $24 ? 0 : $$pre$i$i$i4$i;
    $26 = $$$pre$i$i$i4$i;
   } else {
    $26 = $$pre$i$i$i4$i;
   }
  }
  $25 = ($26|0)==(0|0);
  $27 = ($$sroa$06$0|0)==(0|0);
  do {
   if ($27) {
    label = 16;
   } else {
    $28 = (($$sroa$06$0) + 12|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = (($$sroa$06$0) + 16|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = ($29|0)==($31|0);
    if (!($32)) {
     if ($25) {
      $$sroa$06$2 = $$sroa$06$0;
      break;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L10;
     }
    }
    $33 = HEAP32[$$sroa$06$0>>2]|0;
    $34 = (($33) + 36|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = (FUNCTION_TABLE_ii[$35 & 127]($$sroa$06$0)|0);
    $37 = ($36|0)==(-1);
    if ($37) {
     label = 16;
    } else {
     if ($25) {
      $$sroa$06$2 = $$sroa$06$0;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L10;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($25) {
    $$pre$i2$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $38 = HEAP32[$__a_end$i>>2]|0;
  $39 = HEAP8[$__buf$i>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $43 = $39&255;
   $44 = $43 >>> 1;
   $46 = $44;
  } else {
   $42 = HEAP32[$12>>2]|0;
   $46 = $42;
  }
  $45 = (($__a$0$i) + ($46)|0);
  $47 = ($38|0)==($45|0);
  if ($47) {
   if ($41) {
    $49 = $39&255;
    $50 = $49 >>> 1;
    $52 = $50;
   } else {
    $48 = HEAP32[$12>>2]|0;
    $52 = $48;
   }
   $51 = $52 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$51);
   $53 = HEAP8[$__buf$i>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf$i>>2]|0;
    $57 = $56 & -2;
    $phitmp$i19$i = (($57) + -1)|0;
    $58 = $phitmp$i19$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$58);
   $59 = HEAP8[$__buf$i>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = $$pre$phi30$iZ2D;
   } else {
    $62 = HEAP32[$$pre$phi32$iZ2D>>2]|0;
    $64 = $62;
   }
   $63 = (($64) + ($52)|0);
   HEAP32[$__a_end$i>>2] = $63;
   $__a$1$i = $64;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $65 = (($26) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (($26) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$26>>2]|0;
   $71 = (($70) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 127]($26)|0);
   $$0$i$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i$i = $75;
  }
  $76 = $$0$i$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$$0$i$i,$__a$1$i,$__a_end$i,$__dc$i,$13,$__grouping$i,$__g$i,$__g_end$i,$__atoms$i)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i2$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$26>>2]|0;
   $83 = (($82) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 127]($26)|0);
   $$pre$i$i$i4$i = $26;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $85 = (($79) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i4$i = $26;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $86 = HEAP8[$__grouping$i>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 if ($88) {
  $91 = $86&255;
  $92 = $91 >>> 1;
  $94 = $92;
 } else {
  $89 = (($__grouping$i) + 4|0);
  $90 = HEAP32[$89>>2]|0;
  $94 = $90;
 }
 $93 = ($94|0)==(0);
 if (!($93)) {
  $95 = HEAP32[$__g_end$i>>2]|0;
  $96 = $95;
  $97 = $__g$i;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc$i>>2]|0;
   $101 = (($95) + 4|0);
   HEAP32[$__g_end$i>>2] = $101;
   HEAP32[$95>>2] = $100;
  }
 }
 $102 = HEAP32[$__a_end$i>>2]|0;
 $103 = (__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a$2$i,$102,$__err,$$0$i$i)|0);
 HEAP16[$__v>>1] = $103;
 $104 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$104,$__err);
 if ($25) {
  $116 = 0;
 } else {
  $105 = (($26) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($26) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$26>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($26)|0);
   $114 = ($113|0)==(-1);
   $$ = $114 ? 0 : $26;
   $116 = $$;
  } else {
   $116 = $26;
  }
 }
 $115 = ($116|0)==(0|0);
 $117 = ($$pre$i2$i$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 50;
  } else {
   $118 = (($$pre$i2$i$i$i) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = (($$pre$i2$i$i$i) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if (!($122)) {
    if ($115) {
     break;
    } else {
     label = 52;
     break;
    }
   }
   $123 = HEAP32[$$pre$i2$i$i$i>>2]|0;
   $124 = (($123) + 36|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = (FUNCTION_TABLE_ii[$125 & 127]($$pre$i2$i$i$i)|0);
   $127 = ($126|0)==(-1);
   if ($127) {
    label = 50;
   } else {
    if (!($115)) {
     label = 52;
    }
   }
  }
 } while(0);
 if ((label|0) == 50) {
  if ($115) {
   label = 52;
  }
 }
 if ((label|0) == 52) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $116;
 $130 = HEAP8[$__buf$i>>0]|0;
 $131 = $130 & 1;
 $132 = ($131<<24>>24)==(0);
 if (!($132)) {
  $133 = (($__buf$i) + 8|0);
  $134 = HEAP32[$133>>2]|0;
  _free($134);
 }
 $135 = HEAP8[$__grouping$i>>0]|0;
 $136 = $135 & 1;
 $137 = ($136<<24>>24)==(0);
 if ($137) {
  STACKTOP = sp;return;
 }
 $138 = (($__grouping$i) + 8|0);
 $139 = HEAP32[$138>>2]|0;
 _free($139);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i4$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$pre$i$i$i4$i = 0, $$pre$i2$i$i$i = 0, $$pre$phi30$iZ2D = 0, $$pre$phi32$iZ2D = 0, $$pre29$i = 0, $$pre31$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__g$i = 0;
 var $__g_end$i = 0, $__grouping$i = 0, $__thousands_sep$i = 0, $phitmp$i19$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms$i = sp + 198|0;
 $__thousands_sep$i = sp + 196|0;
 $__grouping$i = sp + 16|0;
 $__buf$i = sp + 4|0;
 $__a_end$i = sp + 192|0;
 $__g$i = sp + 32|0;
 $__g_end$i = sp;
 $__dc$i = sp + 28|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 74;
 if ((($4|0) == 64)) {
  $$0$i$i = 8;
 } else if ((($4|0) == 8)) {
  $$0$i$i = 16;
 } else if ((($4|0) == 0)) {
  $$0$i$i = 0;
 } else {
  $$0$i$i = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping$i,$__iob,$__atoms$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $5 = HEAP8[$__buf$i>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = (($__buf$i) + 1|0);
  $$pre31$i = (($__buf$i) + 8|0);
  $$pre$phi30$iZ2D = $10;$$pre$phi32$iZ2D = $$pre31$i;$11 = $10;
 } else {
  $8 = (($__buf$i) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $$pre29$i = (($__buf$i) + 1|0);
  $$pre$phi30$iZ2D = $$pre29$i;$$pre$phi32$iZ2D = $8;$11 = $9;
 }
 HEAP32[$__a_end$i>>2] = $11;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 $12 = (($__buf$i) + 4|0);
 $13 = HEAP8[$__thousands_sep$i>>0]|0;
 $$pre$i$i$i4$i = $0;$$sroa$06$0 = $1;$__a$0$i = $11;
 L10: while(1) {
  $14 = ($$pre$i$i$i4$i|0)==(0|0);
  if ($14) {
   $26 = 0;
  } else {
   $15 = (($$pre$i$i$i4$i) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($$pre$i$i$i4$i) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$$pre$i$i$i4$i>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($$pre$i$i$i4$i)|0);
    $24 = ($23|0)==(-1);
    $$$pre$i$i$i4$i = $24 ? 0 : $$pre$i$i$i4$i;
    $26 = $$$pre$i$i$i4$i;
   } else {
    $26 = $$pre$i$i$i4$i;
   }
  }
  $25 = ($26|0)==(0|0);
  $27 = ($$sroa$06$0|0)==(0|0);
  do {
   if ($27) {
    label = 16;
   } else {
    $28 = (($$sroa$06$0) + 12|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = (($$sroa$06$0) + 16|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = ($29|0)==($31|0);
    if (!($32)) {
     if ($25) {
      $$sroa$06$2 = $$sroa$06$0;
      break;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L10;
     }
    }
    $33 = HEAP32[$$sroa$06$0>>2]|0;
    $34 = (($33) + 36|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = (FUNCTION_TABLE_ii[$35 & 127]($$sroa$06$0)|0);
    $37 = ($36|0)==(-1);
    if ($37) {
     label = 16;
    } else {
     if ($25) {
      $$sroa$06$2 = $$sroa$06$0;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L10;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($25) {
    $$pre$i2$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $38 = HEAP32[$__a_end$i>>2]|0;
  $39 = HEAP8[$__buf$i>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $43 = $39&255;
   $44 = $43 >>> 1;
   $46 = $44;
  } else {
   $42 = HEAP32[$12>>2]|0;
   $46 = $42;
  }
  $45 = (($__a$0$i) + ($46)|0);
  $47 = ($38|0)==($45|0);
  if ($47) {
   if ($41) {
    $49 = $39&255;
    $50 = $49 >>> 1;
    $52 = $50;
   } else {
    $48 = HEAP32[$12>>2]|0;
    $52 = $48;
   }
   $51 = $52 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$51);
   $53 = HEAP8[$__buf$i>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf$i>>2]|0;
    $57 = $56 & -2;
    $phitmp$i19$i = (($57) + -1)|0;
    $58 = $phitmp$i19$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$58);
   $59 = HEAP8[$__buf$i>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = $$pre$phi30$iZ2D;
   } else {
    $62 = HEAP32[$$pre$phi32$iZ2D>>2]|0;
    $64 = $62;
   }
   $63 = (($64) + ($52)|0);
   HEAP32[$__a_end$i>>2] = $63;
   $__a$1$i = $64;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $65 = (($26) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (($26) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$26>>2]|0;
   $71 = (($70) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 127]($26)|0);
   $$0$i$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i$i = $75;
  }
  $76 = $$0$i$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$$0$i$i,$__a$1$i,$__a_end$i,$__dc$i,$13,$__grouping$i,$__g$i,$__g_end$i,$__atoms$i)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i2$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$26>>2]|0;
   $83 = (($82) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 127]($26)|0);
   $$pre$i$i$i4$i = $26;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $85 = (($79) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i4$i = $26;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $86 = HEAP8[$__grouping$i>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 if ($88) {
  $91 = $86&255;
  $92 = $91 >>> 1;
  $94 = $92;
 } else {
  $89 = (($__grouping$i) + 4|0);
  $90 = HEAP32[$89>>2]|0;
  $94 = $90;
 }
 $93 = ($94|0)==(0);
 if (!($93)) {
  $95 = HEAP32[$__g_end$i>>2]|0;
  $96 = $95;
  $97 = $__g$i;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc$i>>2]|0;
   $101 = (($95) + 4|0);
   HEAP32[$__g_end$i>>2] = $101;
   HEAP32[$95>>2] = $100;
  }
 }
 $102 = HEAP32[$__a_end$i>>2]|0;
 $103 = (__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a$2$i,$102,$__err,$$0$i$i)|0);
 HEAP32[$__v>>2] = $103;
 $104 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$104,$__err);
 if ($25) {
  $116 = 0;
 } else {
  $105 = (($26) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($26) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$26>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($26)|0);
   $114 = ($113|0)==(-1);
   $$ = $114 ? 0 : $26;
   $116 = $$;
  } else {
   $116 = $26;
  }
 }
 $115 = ($116|0)==(0|0);
 $117 = ($$pre$i2$i$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 50;
  } else {
   $118 = (($$pre$i2$i$i$i) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = (($$pre$i2$i$i$i) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if (!($122)) {
    if ($115) {
     break;
    } else {
     label = 52;
     break;
    }
   }
   $123 = HEAP32[$$pre$i2$i$i$i>>2]|0;
   $124 = (($123) + 36|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = (FUNCTION_TABLE_ii[$125 & 127]($$pre$i2$i$i$i)|0);
   $127 = ($126|0)==(-1);
   if ($127) {
    label = 50;
   } else {
    if (!($115)) {
     label = 52;
    }
   }
  }
 } while(0);
 if ((label|0) == 50) {
  if ($115) {
   label = 52;
  }
 }
 if ((label|0) == 52) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $116;
 $130 = HEAP8[$__buf$i>>0]|0;
 $131 = $130 & 1;
 $132 = ($131<<24>>24)==(0);
 if (!($132)) {
  $133 = (($__buf$i) + 8|0);
  $134 = HEAP32[$133>>2]|0;
  _free($134);
 }
 $135 = HEAP8[$__grouping$i>>0]|0;
 $136 = $135 & 1;
 $137 = ($136<<24>>24)==(0);
 if ($137) {
  STACKTOP = sp;return;
 }
 $138 = (($__grouping$i) + 8|0);
 $139 = HEAP32[$138>>2]|0;
 _free($139);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i4$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$pre$i$i$i4$i = 0, $$pre$i2$i$i$i = 0, $$pre$phi30$iZ2D = 0, $$pre$phi32$iZ2D = 0, $$pre29$i = 0, $$pre31$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__g$i = 0;
 var $__g_end$i = 0, $__grouping$i = 0, $__thousands_sep$i = 0, $phitmp$i19$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms$i = sp + 198|0;
 $__thousands_sep$i = sp + 196|0;
 $__grouping$i = sp + 16|0;
 $__buf$i = sp + 4|0;
 $__a_end$i = sp + 192|0;
 $__g$i = sp + 32|0;
 $__g_end$i = sp;
 $__dc$i = sp + 28|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 74;
 if ((($4|0) == 8)) {
  $$0$i$i = 16;
 } else if ((($4|0) == 64)) {
  $$0$i$i = 8;
 } else if ((($4|0) == 0)) {
  $$0$i$i = 0;
 } else {
  $$0$i$i = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping$i,$__iob,$__atoms$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $5 = HEAP8[$__buf$i>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = (($__buf$i) + 1|0);
  $$pre31$i = (($__buf$i) + 8|0);
  $$pre$phi30$iZ2D = $10;$$pre$phi32$iZ2D = $$pre31$i;$11 = $10;
 } else {
  $8 = (($__buf$i) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $$pre29$i = (($__buf$i) + 1|0);
  $$pre$phi30$iZ2D = $$pre29$i;$$pre$phi32$iZ2D = $8;$11 = $9;
 }
 HEAP32[$__a_end$i>>2] = $11;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 $12 = (($__buf$i) + 4|0);
 $13 = HEAP8[$__thousands_sep$i>>0]|0;
 $$pre$i$i$i4$i = $0;$$sroa$06$0 = $1;$__a$0$i = $11;
 L10: while(1) {
  $14 = ($$pre$i$i$i4$i|0)==(0|0);
  if ($14) {
   $26 = 0;
  } else {
   $15 = (($$pre$i$i$i4$i) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($$pre$i$i$i4$i) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$$pre$i$i$i4$i>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($$pre$i$i$i4$i)|0);
    $24 = ($23|0)==(-1);
    $$$pre$i$i$i4$i = $24 ? 0 : $$pre$i$i$i4$i;
    $26 = $$$pre$i$i$i4$i;
   } else {
    $26 = $$pre$i$i$i4$i;
   }
  }
  $25 = ($26|0)==(0|0);
  $27 = ($$sroa$06$0|0)==(0|0);
  do {
   if ($27) {
    label = 16;
   } else {
    $28 = (($$sroa$06$0) + 12|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = (($$sroa$06$0) + 16|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = ($29|0)==($31|0);
    if (!($32)) {
     if ($25) {
      $$sroa$06$2 = $$sroa$06$0;
      break;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L10;
     }
    }
    $33 = HEAP32[$$sroa$06$0>>2]|0;
    $34 = (($33) + 36|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = (FUNCTION_TABLE_ii[$35 & 127]($$sroa$06$0)|0);
    $37 = ($36|0)==(-1);
    if ($37) {
     label = 16;
    } else {
     if ($25) {
      $$sroa$06$2 = $$sroa$06$0;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L10;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($25) {
    $$pre$i2$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $38 = HEAP32[$__a_end$i>>2]|0;
  $39 = HEAP8[$__buf$i>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $43 = $39&255;
   $44 = $43 >>> 1;
   $46 = $44;
  } else {
   $42 = HEAP32[$12>>2]|0;
   $46 = $42;
  }
  $45 = (($__a$0$i) + ($46)|0);
  $47 = ($38|0)==($45|0);
  if ($47) {
   if ($41) {
    $49 = $39&255;
    $50 = $49 >>> 1;
    $52 = $50;
   } else {
    $48 = HEAP32[$12>>2]|0;
    $52 = $48;
   }
   $51 = $52 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$51);
   $53 = HEAP8[$__buf$i>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf$i>>2]|0;
    $57 = $56 & -2;
    $phitmp$i19$i = (($57) + -1)|0;
    $58 = $phitmp$i19$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$58);
   $59 = HEAP8[$__buf$i>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = $$pre$phi30$iZ2D;
   } else {
    $62 = HEAP32[$$pre$phi32$iZ2D>>2]|0;
    $64 = $62;
   }
   $63 = (($64) + ($52)|0);
   HEAP32[$__a_end$i>>2] = $63;
   $__a$1$i = $64;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $65 = (($26) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (($26) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$26>>2]|0;
   $71 = (($70) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 127]($26)|0);
   $$0$i$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i$i = $75;
  }
  $76 = $$0$i$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$$0$i$i,$__a$1$i,$__a_end$i,$__dc$i,$13,$__grouping$i,$__g$i,$__g_end$i,$__atoms$i)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i2$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$26>>2]|0;
   $83 = (($82) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 127]($26)|0);
   $$pre$i$i$i4$i = $26;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $85 = (($79) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i4$i = $26;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $86 = HEAP8[$__grouping$i>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 if ($88) {
  $91 = $86&255;
  $92 = $91 >>> 1;
  $94 = $92;
 } else {
  $89 = (($__grouping$i) + 4|0);
  $90 = HEAP32[$89>>2]|0;
  $94 = $90;
 }
 $93 = ($94|0)==(0);
 if (!($93)) {
  $95 = HEAP32[$__g_end$i>>2]|0;
  $96 = $95;
  $97 = $__g$i;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc$i>>2]|0;
   $101 = (($95) + 4|0);
   HEAP32[$__g_end$i>>2] = $101;
   HEAP32[$95>>2] = $100;
  }
 }
 $102 = HEAP32[$__a_end$i>>2]|0;
 $103 = (__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a$2$i,$102,$__err,$$0$i$i)|0);
 HEAP32[$__v>>2] = $103;
 $104 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$104,$__err);
 if ($25) {
  $116 = 0;
 } else {
  $105 = (($26) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($26) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$26>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($26)|0);
   $114 = ($113|0)==(-1);
   $$ = $114 ? 0 : $26;
   $116 = $$;
  } else {
   $116 = $26;
  }
 }
 $115 = ($116|0)==(0|0);
 $117 = ($$pre$i2$i$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 50;
  } else {
   $118 = (($$pre$i2$i$i$i) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = (($$pre$i2$i$i$i) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if (!($122)) {
    if ($115) {
     break;
    } else {
     label = 52;
     break;
    }
   }
   $123 = HEAP32[$$pre$i2$i$i$i>>2]|0;
   $124 = (($123) + 36|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = (FUNCTION_TABLE_ii[$125 & 127]($$pre$i2$i$i$i)|0);
   $127 = ($126|0)==(-1);
   if ($127) {
    label = 50;
   } else {
    if (!($115)) {
     label = 52;
    }
   }
  }
 } while(0);
 if ((label|0) == 50) {
  if ($115) {
   label = 52;
  }
 }
 if ((label|0) == 52) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $116;
 $130 = HEAP8[$__buf$i>>0]|0;
 $131 = $130 & 1;
 $132 = ($131<<24>>24)==(0);
 if (!($132)) {
  $133 = (($__buf$i) + 8|0);
  $134 = HEAP32[$133>>2]|0;
  _free($134);
 }
 $135 = HEAP8[$__grouping$i>>0]|0;
 $136 = $135 & 1;
 $137 = ($136<<24>>24)==(0);
 if ($137) {
  STACKTOP = sp;return;
 }
 $138 = (($__grouping$i) + 8|0);
 $139 = HEAP32[$138>>2]|0;
 _free($139);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i4$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$pre$i$i$i4$i = 0, $$pre$i2$i$i$i = 0, $$pre$phi30$iZ2D = 0, $$pre$phi32$iZ2D = 0, $$pre29$i = 0, $$pre31$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0;
 var $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__thousands_sep$i = 0, $phitmp$i19$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $__atoms$i = sp + 198|0;
 $__thousands_sep$i = sp + 196|0;
 $__grouping$i = sp + 16|0;
 $__buf$i = sp + 4|0;
 $__a_end$i = sp + 192|0;
 $__g$i = sp + 32|0;
 $__g_end$i = sp;
 $__dc$i = sp + 28|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 74;
 if ((($4|0) == 64)) {
  $$0$i$i = 8;
 } else if ((($4|0) == 0)) {
  $$0$i$i = 0;
 } else if ((($4|0) == 8)) {
  $$0$i$i = 16;
 } else {
  $$0$i$i = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping$i,$__iob,$__atoms$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $5 = HEAP8[$__buf$i>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = (($__buf$i) + 1|0);
  $$pre31$i = (($__buf$i) + 8|0);
  $$pre$phi30$iZ2D = $10;$$pre$phi32$iZ2D = $$pre31$i;$11 = $10;
 } else {
  $8 = (($__buf$i) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $$pre29$i = (($__buf$i) + 1|0);
  $$pre$phi30$iZ2D = $$pre29$i;$$pre$phi32$iZ2D = $8;$11 = $9;
 }
 HEAP32[$__a_end$i>>2] = $11;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 $12 = (($__buf$i) + 4|0);
 $13 = HEAP8[$__thousands_sep$i>>0]|0;
 $$pre$i$i$i4$i = $0;$$sroa$06$0 = $1;$__a$0$i = $11;
 L10: while(1) {
  $14 = ($$pre$i$i$i4$i|0)==(0|0);
  if ($14) {
   $26 = 0;
  } else {
   $15 = (($$pre$i$i$i4$i) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($$pre$i$i$i4$i) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$$pre$i$i$i4$i>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($$pre$i$i$i4$i)|0);
    $24 = ($23|0)==(-1);
    $$$pre$i$i$i4$i = $24 ? 0 : $$pre$i$i$i4$i;
    $26 = $$$pre$i$i$i4$i;
   } else {
    $26 = $$pre$i$i$i4$i;
   }
  }
  $25 = ($26|0)==(0|0);
  $27 = ($$sroa$06$0|0)==(0|0);
  do {
   if ($27) {
    label = 16;
   } else {
    $28 = (($$sroa$06$0) + 12|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = (($$sroa$06$0) + 16|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = ($29|0)==($31|0);
    if (!($32)) {
     if ($25) {
      $$sroa$06$2 = $$sroa$06$0;
      break;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L10;
     }
    }
    $33 = HEAP32[$$sroa$06$0>>2]|0;
    $34 = (($33) + 36|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = (FUNCTION_TABLE_ii[$35 & 127]($$sroa$06$0)|0);
    $37 = ($36|0)==(-1);
    if ($37) {
     label = 16;
    } else {
     if ($25) {
      $$sroa$06$2 = $$sroa$06$0;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L10;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($25) {
    $$pre$i2$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $38 = HEAP32[$__a_end$i>>2]|0;
  $39 = HEAP8[$__buf$i>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $43 = $39&255;
   $44 = $43 >>> 1;
   $46 = $44;
  } else {
   $42 = HEAP32[$12>>2]|0;
   $46 = $42;
  }
  $45 = (($__a$0$i) + ($46)|0);
  $47 = ($38|0)==($45|0);
  if ($47) {
   if ($41) {
    $49 = $39&255;
    $50 = $49 >>> 1;
    $52 = $50;
   } else {
    $48 = HEAP32[$12>>2]|0;
    $52 = $48;
   }
   $51 = $52 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$51);
   $53 = HEAP8[$__buf$i>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf$i>>2]|0;
    $57 = $56 & -2;
    $phitmp$i19$i = (($57) + -1)|0;
    $58 = $phitmp$i19$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$58);
   $59 = HEAP8[$__buf$i>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = $$pre$phi30$iZ2D;
   } else {
    $62 = HEAP32[$$pre$phi32$iZ2D>>2]|0;
    $64 = $62;
   }
   $63 = (($64) + ($52)|0);
   HEAP32[$__a_end$i>>2] = $63;
   $__a$1$i = $64;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $65 = (($26) + 12|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (($26) + 16|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ($66|0)==($68|0);
  if ($69) {
   $70 = HEAP32[$26>>2]|0;
   $71 = (($70) + 36|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (FUNCTION_TABLE_ii[$72 & 127]($26)|0);
   $$0$i$i$i = $73;
  } else {
   $74 = HEAP8[$66>>0]|0;
   $75 = $74&255;
   $$0$i$i$i = $75;
  }
  $76 = $$0$i$i$i&255;
  $77 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($76,$$0$i$i,$__a$1$i,$__a_end$i,$__dc$i,$13,$__grouping$i,$__g$i,$__g_end$i,$__atoms$i)|0);
  $78 = ($77|0)==(0);
  if (!($78)) {
   $$pre$i2$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $79 = HEAP32[$65>>2]|0;
  $80 = HEAP32[$67>>2]|0;
  $81 = ($79|0)==($80|0);
  if ($81) {
   $82 = HEAP32[$26>>2]|0;
   $83 = (($82) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   (FUNCTION_TABLE_ii[$84 & 127]($26)|0);
   $$pre$i$i$i4$i = $26;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $85 = (($79) + 1|0);
   HEAP32[$65>>2] = $85;
   $$pre$i$i$i4$i = $26;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $86 = HEAP8[$__grouping$i>>0]|0;
 $87 = $86 & 1;
 $88 = ($87<<24>>24)==(0);
 if ($88) {
  $91 = $86&255;
  $92 = $91 >>> 1;
  $94 = $92;
 } else {
  $89 = (($__grouping$i) + 4|0);
  $90 = HEAP32[$89>>2]|0;
  $94 = $90;
 }
 $93 = ($94|0)==(0);
 if (!($93)) {
  $95 = HEAP32[$__g_end$i>>2]|0;
  $96 = $95;
  $97 = $__g$i;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc$i>>2]|0;
   $101 = (($95) + 4|0);
   HEAP32[$__g_end$i>>2] = $101;
   HEAP32[$95>>2] = $100;
  }
 }
 $102 = HEAP32[$__a_end$i>>2]|0;
 $103 = (__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a$2$i,$102,$__err,$$0$i$i)|0);
 $104 = tempRet0;
 $105 = $__v;
 $106 = $105;
 HEAP32[$106>>2] = $103;
 $107 = (($105) + 4)|0;
 $108 = $107;
 HEAP32[$108>>2] = $104;
 $109 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$109,$__err);
 if ($25) {
  $121 = 0;
 } else {
  $110 = (($26) + 12|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = (($26) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ($111|0)==($113|0);
  if ($114) {
   $115 = HEAP32[$26>>2]|0;
   $116 = (($115) + 36|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = (FUNCTION_TABLE_ii[$117 & 127]($26)|0);
   $119 = ($118|0)==(-1);
   $$ = $119 ? 0 : $26;
   $121 = $$;
  } else {
   $121 = $26;
  }
 }
 $120 = ($121|0)==(0|0);
 $122 = ($$pre$i2$i$i$i|0)==(0|0);
 do {
  if ($122) {
   label = 50;
  } else {
   $123 = (($$pre$i2$i$i$i) + 12|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = (($$pre$i2$i$i$i) + 16|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = ($124|0)==($126|0);
   if (!($127)) {
    if ($120) {
     break;
    } else {
     label = 52;
     break;
    }
   }
   $128 = HEAP32[$$pre$i2$i$i$i>>2]|0;
   $129 = (($128) + 36|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = (FUNCTION_TABLE_ii[$130 & 127]($$pre$i2$i$i$i)|0);
   $132 = ($131|0)==(-1);
   if ($132) {
    label = 50;
   } else {
    if (!($120)) {
     label = 52;
    }
   }
  }
 } while(0);
 if ((label|0) == 50) {
  if ($120) {
   label = 52;
  }
 }
 if ((label|0) == 52) {
  $133 = HEAP32[$__err>>2]|0;
  $134 = $133 | 2;
  HEAP32[$__err>>2] = $134;
 }
 HEAP32[$agg$result>>2] = $121;
 $135 = HEAP8[$__buf$i>>0]|0;
 $136 = $135 & 1;
 $137 = ($136<<24>>24)==(0);
 if (!($137)) {
  $138 = (($__buf$i) + 8|0);
  $139 = HEAP32[$138>>2]|0;
  _free($139);
 }
 $140 = HEAP8[$__grouping$i>>0]|0;
 $141 = $140 & 1;
 $142 = ($141<<24>>24)==(0);
 if ($142) {
  STACKTOP = sp;return;
 }
 $143 = (($__grouping$i) + 8|0);
 $144 = HEAP32[$143>>2]|0;
 _free($144);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i5$i = 0, $$0$i$i$i = 0, $$pre$i$i$i5$i = 0, $$pre$i2$i$i$i = 0, $$pre$phi31$iZ2D = 0, $$pre$phi33$iZ2D = 0, $$pre30$i = 0, $$pre32$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__decimal_point$i = 0, $__exp$i = 0;
 var $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__in_units$i = 0, $__thousands_sep$i = 0, $or$cond$i = 0, $phitmp$i20$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $__atoms$i = sp + 208|0;
 $__decimal_point$i = sp + 200|0;
 $__thousands_sep$i = sp + 240|0;
 $__grouping$i = sp;
 $__buf$i = sp + 188|0;
 $__a_end$i = sp + 184|0;
 $__g$i = sp + 16|0;
 $__g_end$i = sp + 176|0;
 $__dc$i = sp + 180|0;
 $__in_units$i = sp + 241|0;
 $__exp$i = sp + 242|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping$i,$__iob,$__atoms$i,$__decimal_point$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $2 = HEAP8[$__buf$i>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($__buf$i) + 1|0);
  $$pre32$i = (($__buf$i) + 8|0);
  $$pre$phi31$iZ2D = $7;$$pre$phi33$iZ2D = $$pre32$i;$8 = $7;
 } else {
  $5 = (($__buf$i) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $$pre30$i = (($__buf$i) + 1|0);
  $$pre$phi31$iZ2D = $$pre30$i;$$pre$phi33$iZ2D = $5;$8 = $6;
 }
 HEAP32[$__a_end$i>>2] = $8;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 HEAP8[$__in_units$i>>0] = 1;
 HEAP8[$__exp$i>>0] = 69;
 $9 = (($__buf$i) + 4|0);
 $10 = HEAP8[$__decimal_point$i>>0]|0;
 $11 = HEAP8[$__thousands_sep$i>>0]|0;
 $$pre$i$i$i5$i = $0;$$sroa$06$0 = $1;$__a$0$i = $8;
 L5: while(1) {
  $12 = ($$pre$i$i$i5$i|0)==(0|0);
  if ($12) {
   $24 = 0;
  } else {
   $13 = (($$pre$i$i$i5$i) + 12|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = (($$pre$i$i$i5$i) + 16|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ($14|0)==($16|0);
   if ($17) {
    $18 = HEAP32[$$pre$i$i$i5$i>>2]|0;
    $19 = (($18) + 36|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = (FUNCTION_TABLE_ii[$20 & 127]($$pre$i$i$i5$i)|0);
    $22 = ($21|0)==(-1);
    $$$pre$i$i$i5$i = $22 ? 0 : $$pre$i$i$i5$i;
    $24 = $$$pre$i$i$i5$i;
   } else {
    $24 = $$pre$i$i$i5$i;
   }
  }
  $23 = ($24|0)==(0|0);
  $25 = ($$sroa$06$0|0)==(0|0);
  do {
   if ($25) {
    label = 12;
   } else {
    $26 = (($$sroa$06$0) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = (($$sroa$06$0) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27|0)==($29|0);
    if (!($30)) {
     if ($23) {
      $$sroa$06$2 = $$sroa$06$0;
      break;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L5;
     }
    }
    $31 = HEAP32[$$sroa$06$0>>2]|0;
    $32 = (($31) + 36|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = (FUNCTION_TABLE_ii[$33 & 127]($$sroa$06$0)|0);
    $35 = ($34|0)==(-1);
    if ($35) {
     label = 12;
    } else {
     if ($23) {
      $$sroa$06$2 = $$sroa$06$0;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L5;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($23) {
    $$pre$i2$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $36 = HEAP32[$__a_end$i>>2]|0;
  $37 = HEAP8[$__buf$i>>0]|0;
  $38 = $37 & 1;
  $39 = ($38<<24>>24)==(0);
  if ($39) {
   $41 = $37&255;
   $42 = $41 >>> 1;
   $44 = $42;
  } else {
   $40 = HEAP32[$9>>2]|0;
   $44 = $40;
  }
  $43 = (($__a$0$i) + ($44)|0);
  $45 = ($36|0)==($43|0);
  if ($45) {
   if ($39) {
    $47 = $37&255;
    $48 = $47 >>> 1;
    $50 = $48;
   } else {
    $46 = HEAP32[$9>>2]|0;
    $50 = $46;
   }
   $49 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$49);
   $51 = HEAP8[$__buf$i>>0]|0;
   $52 = $51 & 1;
   $53 = ($52<<24>>24)==(0);
   if ($53) {
    $56 = 10;
   } else {
    $54 = HEAP32[$__buf$i>>2]|0;
    $55 = $54 & -2;
    $phitmp$i20$i = (($55) + -1)|0;
    $56 = $phitmp$i20$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$56);
   $57 = HEAP8[$__buf$i>>0]|0;
   $58 = $57 & 1;
   $59 = ($58<<24>>24)==(0);
   if ($59) {
    $62 = $$pre$phi31$iZ2D;
   } else {
    $60 = HEAP32[$$pre$phi33$iZ2D>>2]|0;
    $62 = $60;
   }
   $61 = (($62) + ($50)|0);
   HEAP32[$__a_end$i>>2] = $61;
   $__a$1$i = $62;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $63 = (($24) + 12|0);
  $64 = HEAP32[$63>>2]|0;
  $65 = (($24) + 16|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ($64|0)==($66|0);
  if ($67) {
   $68 = HEAP32[$24>>2]|0;
   $69 = (($68) + 36|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = (FUNCTION_TABLE_ii[$70 & 127]($24)|0);
   $$0$i$i$i = $71;
  } else {
   $72 = HEAP8[$64>>0]|0;
   $73 = $72&255;
   $$0$i$i$i = $73;
  }
  $74 = $$0$i$i$i&255;
  $75 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($74,$__in_units$i,$__exp$i,$__a$1$i,$__a_end$i,$10,$11,$__grouping$i,$__g$i,$__g_end$i,$__dc$i,$__atoms$i)|0);
  $76 = ($75|0)==(0);
  if (!($76)) {
   $$pre$i2$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $77 = HEAP32[$63>>2]|0;
  $78 = HEAP32[$65>>2]|0;
  $79 = ($77|0)==($78|0);
  if ($79) {
   $80 = HEAP32[$24>>2]|0;
   $81 = (($80) + 40|0);
   $82 = HEAP32[$81>>2]|0;
   (FUNCTION_TABLE_ii[$82 & 127]($24)|0);
   $$pre$i$i$i5$i = $24;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $83 = (($77) + 1|0);
   HEAP32[$63>>2] = $83;
   $$pre$i$i$i5$i = $24;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $84 = HEAP8[$__grouping$i>>0]|0;
 $85 = $84 & 1;
 $86 = ($85<<24>>24)==(0);
 if ($86) {
  $89 = $84&255;
  $90 = $89 >>> 1;
  $92 = $90;
 } else {
  $87 = (($__grouping$i) + 4|0);
  $88 = HEAP32[$87>>2]|0;
  $92 = $88;
 }
 $91 = ($92|0)==(0);
 $93 = HEAP8[$__in_units$i>>0]|0;
 $94 = ($93<<24>>24)==(0);
 $or$cond$i = $91 | $94;
 if (!($or$cond$i)) {
  $95 = HEAP32[$__g_end$i>>2]|0;
  $96 = $95;
  $97 = $__g$i;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc$i>>2]|0;
   $101 = (($95) + 4|0);
   HEAP32[$__g_end$i>>2] = $101;
   HEAP32[$95>>2] = $100;
  }
 }
 $102 = HEAP32[$__a_end$i>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a$2$i,$102,$__err));
 HEAPF32[$__v>>2] = $103;
 $104 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$104,$__err);
 if ($23) {
  $116 = 0;
 } else {
  $105 = (($24) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($24) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$24>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($24)|0);
   $114 = ($113|0)==(-1);
   $$ = $114 ? 0 : $24;
   $116 = $$;
  } else {
   $116 = $24;
  }
 }
 $115 = ($116|0)==(0|0);
 $117 = ($$pre$i2$i$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 46;
  } else {
   $118 = (($$pre$i2$i$i$i) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = (($$pre$i2$i$i$i) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if (!($122)) {
    if ($115) {
     break;
    } else {
     label = 48;
     break;
    }
   }
   $123 = HEAP32[$$pre$i2$i$i$i>>2]|0;
   $124 = (($123) + 36|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = (FUNCTION_TABLE_ii[$125 & 127]($$pre$i2$i$i$i)|0);
   $127 = ($126|0)==(-1);
   if ($127) {
    label = 46;
   } else {
    if (!($115)) {
     label = 48;
    }
   }
  }
 } while(0);
 if ((label|0) == 46) {
  if ($115) {
   label = 48;
  }
 }
 if ((label|0) == 48) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $116;
 $130 = HEAP8[$__buf$i>>0]|0;
 $131 = $130 & 1;
 $132 = ($131<<24>>24)==(0);
 if (!($132)) {
  $133 = (($__buf$i) + 8|0);
  $134 = HEAP32[$133>>2]|0;
  _free($134);
 }
 $135 = HEAP8[$__grouping$i>>0]|0;
 $136 = $135 & 1;
 $137 = ($136<<24>>24)==(0);
 if ($137) {
  STACKTOP = sp;return;
 }
 $138 = (($__grouping$i) + 8|0);
 $139 = HEAP32[$138>>2]|0;
 _free($139);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i5$i = 0, $$0$i$i$i = 0, $$pre$i$i$i5$i = 0, $$pre$i2$i$i$i = 0, $$pre$phi31$iZ2D = 0, $$pre$phi33$iZ2D = 0, $$pre30$i = 0, $$pre32$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__decimal_point$i = 0, $__exp$i = 0;
 var $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__in_units$i = 0, $__thousands_sep$i = 0, $or$cond$i = 0, $phitmp$i20$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $__atoms$i = sp + 208|0;
 $__decimal_point$i = sp + 200|0;
 $__thousands_sep$i = sp + 240|0;
 $__grouping$i = sp;
 $__buf$i = sp + 188|0;
 $__a_end$i = sp + 184|0;
 $__g$i = sp + 16|0;
 $__g_end$i = sp + 176|0;
 $__dc$i = sp + 180|0;
 $__in_units$i = sp + 241|0;
 $__exp$i = sp + 242|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping$i,$__iob,$__atoms$i,$__decimal_point$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $2 = HEAP8[$__buf$i>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($__buf$i) + 1|0);
  $$pre32$i = (($__buf$i) + 8|0);
  $$pre$phi31$iZ2D = $7;$$pre$phi33$iZ2D = $$pre32$i;$8 = $7;
 } else {
  $5 = (($__buf$i) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $$pre30$i = (($__buf$i) + 1|0);
  $$pre$phi31$iZ2D = $$pre30$i;$$pre$phi33$iZ2D = $5;$8 = $6;
 }
 HEAP32[$__a_end$i>>2] = $8;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 HEAP8[$__in_units$i>>0] = 1;
 HEAP8[$__exp$i>>0] = 69;
 $9 = (($__buf$i) + 4|0);
 $10 = HEAP8[$__decimal_point$i>>0]|0;
 $11 = HEAP8[$__thousands_sep$i>>0]|0;
 $$pre$i$i$i5$i = $0;$$sroa$06$0 = $1;$__a$0$i = $8;
 L5: while(1) {
  $12 = ($$pre$i$i$i5$i|0)==(0|0);
  if ($12) {
   $24 = 0;
  } else {
   $13 = (($$pre$i$i$i5$i) + 12|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = (($$pre$i$i$i5$i) + 16|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ($14|0)==($16|0);
   if ($17) {
    $18 = HEAP32[$$pre$i$i$i5$i>>2]|0;
    $19 = (($18) + 36|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = (FUNCTION_TABLE_ii[$20 & 127]($$pre$i$i$i5$i)|0);
    $22 = ($21|0)==(-1);
    $$$pre$i$i$i5$i = $22 ? 0 : $$pre$i$i$i5$i;
    $24 = $$$pre$i$i$i5$i;
   } else {
    $24 = $$pre$i$i$i5$i;
   }
  }
  $23 = ($24|0)==(0|0);
  $25 = ($$sroa$06$0|0)==(0|0);
  do {
   if ($25) {
    label = 12;
   } else {
    $26 = (($$sroa$06$0) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = (($$sroa$06$0) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27|0)==($29|0);
    if (!($30)) {
     if ($23) {
      $$sroa$06$2 = $$sroa$06$0;
      break;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L5;
     }
    }
    $31 = HEAP32[$$sroa$06$0>>2]|0;
    $32 = (($31) + 36|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = (FUNCTION_TABLE_ii[$33 & 127]($$sroa$06$0)|0);
    $35 = ($34|0)==(-1);
    if ($35) {
     label = 12;
    } else {
     if ($23) {
      $$sroa$06$2 = $$sroa$06$0;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L5;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($23) {
    $$pre$i2$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $36 = HEAP32[$__a_end$i>>2]|0;
  $37 = HEAP8[$__buf$i>>0]|0;
  $38 = $37 & 1;
  $39 = ($38<<24>>24)==(0);
  if ($39) {
   $41 = $37&255;
   $42 = $41 >>> 1;
   $44 = $42;
  } else {
   $40 = HEAP32[$9>>2]|0;
   $44 = $40;
  }
  $43 = (($__a$0$i) + ($44)|0);
  $45 = ($36|0)==($43|0);
  if ($45) {
   if ($39) {
    $47 = $37&255;
    $48 = $47 >>> 1;
    $50 = $48;
   } else {
    $46 = HEAP32[$9>>2]|0;
    $50 = $46;
   }
   $49 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$49);
   $51 = HEAP8[$__buf$i>>0]|0;
   $52 = $51 & 1;
   $53 = ($52<<24>>24)==(0);
   if ($53) {
    $56 = 10;
   } else {
    $54 = HEAP32[$__buf$i>>2]|0;
    $55 = $54 & -2;
    $phitmp$i20$i = (($55) + -1)|0;
    $56 = $phitmp$i20$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$56);
   $57 = HEAP8[$__buf$i>>0]|0;
   $58 = $57 & 1;
   $59 = ($58<<24>>24)==(0);
   if ($59) {
    $62 = $$pre$phi31$iZ2D;
   } else {
    $60 = HEAP32[$$pre$phi33$iZ2D>>2]|0;
    $62 = $60;
   }
   $61 = (($62) + ($50)|0);
   HEAP32[$__a_end$i>>2] = $61;
   $__a$1$i = $62;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $63 = (($24) + 12|0);
  $64 = HEAP32[$63>>2]|0;
  $65 = (($24) + 16|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ($64|0)==($66|0);
  if ($67) {
   $68 = HEAP32[$24>>2]|0;
   $69 = (($68) + 36|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = (FUNCTION_TABLE_ii[$70 & 127]($24)|0);
   $$0$i$i$i = $71;
  } else {
   $72 = HEAP8[$64>>0]|0;
   $73 = $72&255;
   $$0$i$i$i = $73;
  }
  $74 = $$0$i$i$i&255;
  $75 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($74,$__in_units$i,$__exp$i,$__a$1$i,$__a_end$i,$10,$11,$__grouping$i,$__g$i,$__g_end$i,$__dc$i,$__atoms$i)|0);
  $76 = ($75|0)==(0);
  if (!($76)) {
   $$pre$i2$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $77 = HEAP32[$63>>2]|0;
  $78 = HEAP32[$65>>2]|0;
  $79 = ($77|0)==($78|0);
  if ($79) {
   $80 = HEAP32[$24>>2]|0;
   $81 = (($80) + 40|0);
   $82 = HEAP32[$81>>2]|0;
   (FUNCTION_TABLE_ii[$82 & 127]($24)|0);
   $$pre$i$i$i5$i = $24;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $83 = (($77) + 1|0);
   HEAP32[$63>>2] = $83;
   $$pre$i$i$i5$i = $24;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $84 = HEAP8[$__grouping$i>>0]|0;
 $85 = $84 & 1;
 $86 = ($85<<24>>24)==(0);
 if ($86) {
  $89 = $84&255;
  $90 = $89 >>> 1;
  $92 = $90;
 } else {
  $87 = (($__grouping$i) + 4|0);
  $88 = HEAP32[$87>>2]|0;
  $92 = $88;
 }
 $91 = ($92|0)==(0);
 $93 = HEAP8[$__in_units$i>>0]|0;
 $94 = ($93<<24>>24)==(0);
 $or$cond$i = $91 | $94;
 if (!($or$cond$i)) {
  $95 = HEAP32[$__g_end$i>>2]|0;
  $96 = $95;
  $97 = $__g$i;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc$i>>2]|0;
   $101 = (($95) + 4|0);
   HEAP32[$__g_end$i>>2] = $101;
   HEAP32[$95>>2] = $100;
  }
 }
 $102 = HEAP32[$__a_end$i>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a$2$i,$102,$__err));
 HEAPF64[$__v>>3] = $103;
 $104 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$104,$__err);
 if ($23) {
  $116 = 0;
 } else {
  $105 = (($24) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($24) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$24>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($24)|0);
   $114 = ($113|0)==(-1);
   $$ = $114 ? 0 : $24;
   $116 = $$;
  } else {
   $116 = $24;
  }
 }
 $115 = ($116|0)==(0|0);
 $117 = ($$pre$i2$i$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 46;
  } else {
   $118 = (($$pre$i2$i$i$i) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = (($$pre$i2$i$i$i) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if (!($122)) {
    if ($115) {
     break;
    } else {
     label = 48;
     break;
    }
   }
   $123 = HEAP32[$$pre$i2$i$i$i>>2]|0;
   $124 = (($123) + 36|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = (FUNCTION_TABLE_ii[$125 & 127]($$pre$i2$i$i$i)|0);
   $127 = ($126|0)==(-1);
   if ($127) {
    label = 46;
   } else {
    if (!($115)) {
     label = 48;
    }
   }
  }
 } while(0);
 if ((label|0) == 46) {
  if ($115) {
   label = 48;
  }
 }
 if ((label|0) == 48) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $116;
 $130 = HEAP8[$__buf$i>>0]|0;
 $131 = $130 & 1;
 $132 = ($131<<24>>24)==(0);
 if (!($132)) {
  $133 = (($__buf$i) + 8|0);
  $134 = HEAP32[$133>>2]|0;
  _free($134);
 }
 $135 = HEAP8[$__grouping$i>>0]|0;
 $136 = $135 & 1;
 $137 = ($136<<24>>24)==(0);
 if ($137) {
  STACKTOP = sp;return;
 }
 $138 = (($__grouping$i) + 8|0);
 $139 = HEAP32[$138>>2]|0;
 _free($139);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i5$i = 0, $$0$i$i$i = 0, $$pre$i$i$i5$i = 0, $$pre$i2$i$i$i = 0, $$pre$phi31$iZ2D = 0, $$pre$phi33$iZ2D = 0, $$pre30$i = 0, $$pre32$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__decimal_point$i = 0, $__exp$i = 0;
 var $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__in_units$i = 0, $__thousands_sep$i = 0, $or$cond$i = 0, $phitmp$i20$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $__atoms$i = sp + 208|0;
 $__decimal_point$i = sp + 200|0;
 $__thousands_sep$i = sp + 240|0;
 $__grouping$i = sp;
 $__buf$i = sp + 188|0;
 $__a_end$i = sp + 184|0;
 $__g$i = sp + 16|0;
 $__g_end$i = sp + 176|0;
 $__dc$i = sp + 180|0;
 $__in_units$i = sp + 241|0;
 $__exp$i = sp + 242|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping$i,$__iob,$__atoms$i,$__decimal_point$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $2 = HEAP8[$__buf$i>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($__buf$i) + 1|0);
  $$pre32$i = (($__buf$i) + 8|0);
  $$pre$phi31$iZ2D = $7;$$pre$phi33$iZ2D = $$pre32$i;$8 = $7;
 } else {
  $5 = (($__buf$i) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $$pre30$i = (($__buf$i) + 1|0);
  $$pre$phi31$iZ2D = $$pre30$i;$$pre$phi33$iZ2D = $5;$8 = $6;
 }
 HEAP32[$__a_end$i>>2] = $8;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 HEAP8[$__in_units$i>>0] = 1;
 HEAP8[$__exp$i>>0] = 69;
 $9 = (($__buf$i) + 4|0);
 $10 = HEAP8[$__decimal_point$i>>0]|0;
 $11 = HEAP8[$__thousands_sep$i>>0]|0;
 $$pre$i$i$i5$i = $0;$$sroa$06$0 = $1;$__a$0$i = $8;
 L5: while(1) {
  $12 = ($$pre$i$i$i5$i|0)==(0|0);
  if ($12) {
   $24 = 0;
  } else {
   $13 = (($$pre$i$i$i5$i) + 12|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = (($$pre$i$i$i5$i) + 16|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ($14|0)==($16|0);
   if ($17) {
    $18 = HEAP32[$$pre$i$i$i5$i>>2]|0;
    $19 = (($18) + 36|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = (FUNCTION_TABLE_ii[$20 & 127]($$pre$i$i$i5$i)|0);
    $22 = ($21|0)==(-1);
    $$$pre$i$i$i5$i = $22 ? 0 : $$pre$i$i$i5$i;
    $24 = $$$pre$i$i$i5$i;
   } else {
    $24 = $$pre$i$i$i5$i;
   }
  }
  $23 = ($24|0)==(0|0);
  $25 = ($$sroa$06$0|0)==(0|0);
  do {
   if ($25) {
    label = 12;
   } else {
    $26 = (($$sroa$06$0) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = (($$sroa$06$0) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($27|0)==($29|0);
    if (!($30)) {
     if ($23) {
      $$sroa$06$2 = $$sroa$06$0;
      break;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L5;
     }
    }
    $31 = HEAP32[$$sroa$06$0>>2]|0;
    $32 = (($31) + 36|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = (FUNCTION_TABLE_ii[$33 & 127]($$sroa$06$0)|0);
    $35 = ($34|0)==(-1);
    if ($35) {
     label = 12;
    } else {
     if ($23) {
      $$sroa$06$2 = $$sroa$06$0;
     } else {
      $$pre$i2$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
      break L5;
     }
    }
   }
  } while(0);
  if ((label|0) == 12) {
   label = 0;
   if ($23) {
    $$pre$i2$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $36 = HEAP32[$__a_end$i>>2]|0;
  $37 = HEAP8[$__buf$i>>0]|0;
  $38 = $37 & 1;
  $39 = ($38<<24>>24)==(0);
  if ($39) {
   $41 = $37&255;
   $42 = $41 >>> 1;
   $44 = $42;
  } else {
   $40 = HEAP32[$9>>2]|0;
   $44 = $40;
  }
  $43 = (($__a$0$i) + ($44)|0);
  $45 = ($36|0)==($43|0);
  if ($45) {
   if ($39) {
    $47 = $37&255;
    $48 = $47 >>> 1;
    $50 = $48;
   } else {
    $46 = HEAP32[$9>>2]|0;
    $50 = $46;
   }
   $49 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$49);
   $51 = HEAP8[$__buf$i>>0]|0;
   $52 = $51 & 1;
   $53 = ($52<<24>>24)==(0);
   if ($53) {
    $56 = 10;
   } else {
    $54 = HEAP32[$__buf$i>>2]|0;
    $55 = $54 & -2;
    $phitmp$i20$i = (($55) + -1)|0;
    $56 = $phitmp$i20$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$56);
   $57 = HEAP8[$__buf$i>>0]|0;
   $58 = $57 & 1;
   $59 = ($58<<24>>24)==(0);
   if ($59) {
    $62 = $$pre$phi31$iZ2D;
   } else {
    $60 = HEAP32[$$pre$phi33$iZ2D>>2]|0;
    $62 = $60;
   }
   $61 = (($62) + ($50)|0);
   HEAP32[$__a_end$i>>2] = $61;
   $__a$1$i = $62;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $63 = (($24) + 12|0);
  $64 = HEAP32[$63>>2]|0;
  $65 = (($24) + 16|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = ($64|0)==($66|0);
  if ($67) {
   $68 = HEAP32[$24>>2]|0;
   $69 = (($68) + 36|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = (FUNCTION_TABLE_ii[$70 & 127]($24)|0);
   $$0$i$i$i = $71;
  } else {
   $72 = HEAP8[$64>>0]|0;
   $73 = $72&255;
   $$0$i$i$i = $73;
  }
  $74 = $$0$i$i$i&255;
  $75 = (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($74,$__in_units$i,$__exp$i,$__a$1$i,$__a_end$i,$10,$11,$__grouping$i,$__g$i,$__g_end$i,$__dc$i,$__atoms$i)|0);
  $76 = ($75|0)==(0);
  if (!($76)) {
   $$pre$i2$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $77 = HEAP32[$63>>2]|0;
  $78 = HEAP32[$65>>2]|0;
  $79 = ($77|0)==($78|0);
  if ($79) {
   $80 = HEAP32[$24>>2]|0;
   $81 = (($80) + 40|0);
   $82 = HEAP32[$81>>2]|0;
   (FUNCTION_TABLE_ii[$82 & 127]($24)|0);
   $$pre$i$i$i5$i = $24;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $83 = (($77) + 1|0);
   HEAP32[$63>>2] = $83;
   $$pre$i$i$i5$i = $24;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $84 = HEAP8[$__grouping$i>>0]|0;
 $85 = $84 & 1;
 $86 = ($85<<24>>24)==(0);
 if ($86) {
  $89 = $84&255;
  $90 = $89 >>> 1;
  $92 = $90;
 } else {
  $87 = (($__grouping$i) + 4|0);
  $88 = HEAP32[$87>>2]|0;
  $92 = $88;
 }
 $91 = ($92|0)==(0);
 $93 = HEAP8[$__in_units$i>>0]|0;
 $94 = ($93<<24>>24)==(0);
 $or$cond$i = $91 | $94;
 if (!($or$cond$i)) {
  $95 = HEAP32[$__g_end$i>>2]|0;
  $96 = $95;
  $97 = $__g$i;
  $98 = (($96) - ($97))|0;
  $99 = ($98|0)<(160);
  if ($99) {
   $100 = HEAP32[$__dc$i>>2]|0;
   $101 = (($95) + 4|0);
   HEAP32[$__g_end$i>>2] = $101;
   HEAP32[$95>>2] = $100;
  }
 }
 $102 = HEAP32[$__a_end$i>>2]|0;
 $103 = (+__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a$2$i,$102,$__err));
 HEAPF64[$__v>>3] = $103;
 $104 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$104,$__err);
 if ($23) {
  $116 = 0;
 } else {
  $105 = (($24) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($24) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$24>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($24)|0);
   $114 = ($113|0)==(-1);
   $$ = $114 ? 0 : $24;
   $116 = $$;
  } else {
   $116 = $24;
  }
 }
 $115 = ($116|0)==(0|0);
 $117 = ($$pre$i2$i$i$i|0)==(0|0);
 do {
  if ($117) {
   label = 46;
  } else {
   $118 = (($$pre$i2$i$i$i) + 12|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = (($$pre$i2$i$i$i) + 16|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = ($119|0)==($121|0);
   if (!($122)) {
    if ($115) {
     break;
    } else {
     label = 48;
     break;
    }
   }
   $123 = HEAP32[$$pre$i2$i$i$i>>2]|0;
   $124 = (($123) + 36|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = (FUNCTION_TABLE_ii[$125 & 127]($$pre$i2$i$i$i)|0);
   $127 = ($126|0)==(-1);
   if ($127) {
    label = 46;
   } else {
    if (!($115)) {
     label = 48;
    }
   }
  }
 } while(0);
 if ((label|0) == 46) {
  if ($115) {
   label = 48;
  }
 }
 if ((label|0) == 48) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $116;
 $130 = HEAP8[$__buf$i>>0]|0;
 $131 = $130 & 1;
 $132 = ($131<<24>>24)==(0);
 if (!($132)) {
  $133 = (($__buf$i) + 8|0);
  $134 = HEAP32[$133>>2]|0;
  _free($134);
 }
 $135 = HEAP8[$__grouping$i>>0]|0;
 $136 = $135 & 1;
 $137 = ($136<<24>>24)==(0);
 if ($137) {
  STACKTOP = sp;return;
 }
 $138 = (($__grouping$i) + 8|0);
 $139 = HEAP32[$138>>2]|0;
 _free($139);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$idx = 0, $$idx$val = 0, $$idx8 = 0, $$idx8$val = 0, $$pre = 0, $$pre$i$i$i8 = 0, $$pre$i2$i$i = 0, $$pre$phi35Z2D = 0, $$pre$phi37Z2D = 0, $$pre34 = 0, $$pre36 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0;
 var $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $phitmp$i24 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $vararg_buffer = sp;
 $__atoms = sp + 204|0;
 $__grouping = sp + 184|0;
 $__buf = sp + 172|0;
 $__a_end = sp + 168|0;
 $__g = sp + 8|0;
 $__g_end = sp + 196|0;
 $__dc = sp + 200|0;
 ;HEAP32[$__grouping+0>>2]=0|0;HEAP32[$__grouping+4>>2]=0|0;HEAP32[$__grouping+8>>2]=0|0;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx = (($1) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx8 = (($1) + 12|0);
 $$idx8$val = HEAP32[$$idx8>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx8$val,$4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 (FUNCTION_TABLE_iiiii[$8 & 31]($5,39184,((39184 + 26|0)),$__atoms)|0);
 $9 = (($1) + 4|0);
 $10 = HEAP32[$9>>2]|0;HEAP32[$9>>2] = (($10+-1)|0);
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = HEAP32[$1>>2]|0;
  $13 = (($12) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  FUNCTION_TABLE_vi[$14 & 255]($1);
 }
 ;HEAP32[$__buf+0>>2]=0|0;HEAP32[$__buf+4>>2]=0|0;HEAP32[$__buf+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10);
 $15 = HEAP8[$__buf>>0]|0;
 $16 = $15 & 1;
 $17 = ($16<<24>>24)==(0);
 if ($17) {
  $20 = (($__buf) + 1|0);
  $$pre36 = (($__buf) + 8|0);
  $$pre$phi35Z2D = $20;$$pre$phi37Z2D = $$pre36;$21 = $20;
 } else {
  $18 = (($__buf) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $$pre34 = (($__buf) + 1|0);
  $$pre$phi35Z2D = $$pre34;$$pre$phi37Z2D = $18;$21 = $19;
 }
 HEAP32[$__a_end>>2] = $21;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $22 = (($__buf) + 4|0);
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i8 = $$pre;$__a$0 = $21;
 L8: while(1) {
  $23 = ($$pre$i$i$i8|0)==(0|0);
  if ($23) {
   $35 = 0;
  } else {
   $24 = (($$pre$i$i$i8) + 12|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (($$pre$i$i$i8) + 16|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = ($25|0)==($27|0);
   if ($28) {
    $29 = HEAP32[$$pre$i$i$i8>>2]|0;
    $30 = (($29) + 36|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = (FUNCTION_TABLE_ii[$31 & 127]($$pre$i$i$i8)|0);
    $33 = ($32|0)==(-1);
    if ($33) {
     HEAP32[$__b>>2] = 0;
     $35 = 0;
    } else {
     $35 = $$pre$i$i$i8;
    }
   } else {
    $35 = $$pre$i$i$i8;
   }
  }
  $34 = ($35|0)==(0|0);
  $36 = HEAP32[$__e>>2]|0;
  $37 = ($36|0)==(0|0);
  do {
   if ($37) {
    label = 16;
   } else {
    $38 = (($36) + 12|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (($36) + 16|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = ($39|0)==($41|0);
    if (!($42)) {
     if ($34) {
      $143 = $36;
      break;
     } else {
      $$pre$i2$i$i = $36;$__a$2 = $__a$0;
      break L8;
     }
    }
    $43 = HEAP32[$36>>2]|0;
    $44 = (($43) + 36|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (FUNCTION_TABLE_ii[$45 & 127]($36)|0);
    $47 = ($46|0)==(-1);
    if ($47) {
     HEAP32[$__e>>2] = 0;
     label = 16;
     break;
    } else {
     if ($34) {
      $143 = $36;
      break;
     } else {
      $$pre$i2$i$i = $36;$__a$2 = $__a$0;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 16) {
   label = 0;
   if ($34) {
    $$pre$i2$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $143 = 0;
   }
  }
  $48 = HEAP32[$__a_end>>2]|0;
  $49 = HEAP8[$__buf>>0]|0;
  $50 = $49 & 1;
  $51 = ($50<<24>>24)==(0);
  if ($51) {
   $53 = $49&255;
   $54 = $53 >>> 1;
   $56 = $54;
  } else {
   $52 = HEAP32[$22>>2]|0;
   $56 = $52;
  }
  $55 = (($__a$0) + ($56)|0);
  $57 = ($48|0)==($55|0);
  if ($57) {
   if ($51) {
    $59 = $49&255;
    $60 = $59 >>> 1;
    $62 = $60;
   } else {
    $58 = HEAP32[$22>>2]|0;
    $62 = $58;
   }
   $61 = $62 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$61);
   $63 = HEAP8[$__buf>>0]|0;
   $64 = $63 & 1;
   $65 = ($64<<24>>24)==(0);
   if ($65) {
    $68 = 10;
   } else {
    $66 = HEAP32[$__buf>>2]|0;
    $67 = $66 & -2;
    $phitmp$i24 = (($67) + -1)|0;
    $68 = $phitmp$i24;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$68);
   $69 = HEAP8[$__buf>>0]|0;
   $70 = $69 & 1;
   $71 = ($70<<24>>24)==(0);
   if ($71) {
    $74 = $$pre$phi35Z2D;
   } else {
    $72 = HEAP32[$$pre$phi37Z2D>>2]|0;
    $74 = $72;
   }
   $73 = (($74) + ($62)|0);
   HEAP32[$__a_end>>2] = $73;
   $__a$1 = $74;
  } else {
   $__a$1 = $__a$0;
  }
  $75 = (($35) + 12|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = (($35) + 16|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = ($76|0)==($78|0);
  if ($79) {
   $80 = HEAP32[$35>>2]|0;
   $81 = (($80) + 36|0);
   $82 = HEAP32[$81>>2]|0;
   $83 = (FUNCTION_TABLE_ii[$82 & 127]($35)|0);
   $$0$i$i = $83;
  } else {
   $84 = HEAP8[$76>>0]|0;
   $85 = $84&255;
   $$0$i$i = $85;
  }
  $86 = $$0$i$i&255;
  $87 = (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($86,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
  $88 = ($87|0)==(0);
  if (!($88)) {
   $$pre$i2$i$i = $143;$__a$2 = $__a$1;
   break;
  }
  $89 = HEAP32[$75>>2]|0;
  $90 = HEAP32[$77>>2]|0;
  $91 = ($89|0)==($90|0);
  if ($91) {
   $92 = HEAP32[$35>>2]|0;
   $93 = (($92) + 40|0);
   $94 = HEAP32[$93>>2]|0;
   (FUNCTION_TABLE_ii[$94 & 127]($35)|0);
   $$pre$i$i$i8 = $35;$__a$0 = $__a$1;
   continue;
  } else {
   $95 = (($89) + 1|0);
   HEAP32[$75>>2] = $95;
   $$pre$i$i$i8 = $35;$__a$0 = $__a$1;
   continue;
  }
 }
 $96 = HEAP32[$__a_end>>2]|0;
 $97 = $96;
 $98 = $__a$2;
 $99 = (($97) - ($98))|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$99);
 $100 = HEAP8[$__buf>>0]|0;
 $101 = $100 & 1;
 $102 = ($101<<24>>24)==(0);
 if ($102) {
  $105 = $$pre$phi35Z2D;
 } else {
  $103 = HEAP32[$$pre$phi37Z2D>>2]|0;
  $105 = $103;
 }
 $104 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $106 = (__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($105,$104,$vararg_buffer)|0);
 $107 = ($106|0)==(1);
 if (!($107)) {
  HEAP32[$__err>>2] = 4;
 }
 if ($34) {
  $119 = 0;
 } else {
  $108 = (($35) + 12|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = (($35) + 16|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = ($109|0)==($111|0);
  if ($112) {
   $113 = HEAP32[$35>>2]|0;
   $114 = (($113) + 36|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = (FUNCTION_TABLE_ii[$115 & 127]($35)|0);
   $117 = ($116|0)==(-1);
   if ($117) {
    HEAP32[$__b>>2] = 0;
    $119 = 0;
   } else {
    $119 = $35;
   }
  } else {
   $119 = $35;
  }
 }
 $118 = ($119|0)==(0|0);
 $120 = ($$pre$i2$i$i|0)==(0|0);
 do {
  if ($120) {
   label = 50;
  } else {
   $121 = (($$pre$i2$i$i) + 12|0);
   $122 = HEAP32[$121>>2]|0;
   $123 = (($$pre$i2$i$i) + 16|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ($122|0)==($124|0);
   if (!($125)) {
    if ($118) {
     break;
    } else {
     label = 52;
     break;
    }
   }
   $126 = HEAP32[$$pre$i2$i$i>>2]|0;
   $127 = (($126) + 36|0);
   $128 = HEAP32[$127>>2]|0;
   $129 = (FUNCTION_TABLE_ii[$128 & 127]($$pre$i2$i$i)|0);
   $130 = ($129|0)==(-1);
   if ($130) {
    HEAP32[$__e>>2] = 0;
    label = 50;
    break;
   } else {
    if ($118) {
     break;
    } else {
     label = 52;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 50) {
  if ($118) {
   label = 52;
  }
 }
 if ((label|0) == 52) {
  $131 = HEAP32[$__err>>2]|0;
  $132 = $131 | 2;
  HEAP32[$__err>>2] = $132;
 }
 HEAP32[$agg$result>>2] = $119;
 $133 = HEAP8[$__buf>>0]|0;
 $134 = $133 & 1;
 $135 = ($134<<24>>24)==(0);
 if (!($135)) {
  $136 = (($__buf) + 8|0);
  $137 = HEAP32[$136>>2]|0;
  _free($137);
 }
 $138 = HEAP8[$__grouping>>0]|0;
 $139 = $138 & 1;
 $140 = ($139<<24>>24)==(0);
 if ($140) {
  STACKTOP = sp;return;
 }
 $141 = (($__grouping) + 8|0);
 $142 = HEAP32[$141>>2]|0;
 _free($142);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$lcssa$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = (($__atoms) + 24|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==($__ct<<24>>24);
   if (!($4)) {
    $5 = (($__atoms) + 25|0);
    $6 = HEAP8[$5>>0]|0;
    $7 = ($6<<24>>24)==($__ct<<24>>24);
    if (!($7)) {
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = (($__a) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 $10 = HEAP8[$__grouping>>0]|0;
 $11 = $10 & 1;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $15 = $10&255;
  $16 = $15 >>> 1;
  $18 = $16;
 } else {
  $13 = (($__grouping) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $18 = $14;
 }
 $17 = ($18|0)!=(0);
 $19 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
 $or$cond = $17 & $19;
 if ($or$cond) {
  $20 = HEAP32[$__g_end>>2]|0;
  $21 = $20;
  $22 = $__g;
  $23 = (($21) - ($22))|0;
  $24 = ($23|0)<(160);
  if (!($24)) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $25 = HEAP32[$__dc>>2]|0;
  $26 = (($20) + 4|0);
  HEAP32[$__g_end>>2] = $26;
  HEAP32[$20>>2] = $25;
  HEAP32[$__dc>>2] = 0;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $27 = (($__atoms) + 26|0);
 $$01$i = $__atoms;
 while(1) {
  $30 = HEAP8[$$01$i>>0]|0;
  $31 = ($30<<24>>24)==($__ct<<24>>24);
  $29 = (($$01$i) + 1|0);
  if ($31) {
   $$0$lcssa$i = $$01$i;
   break;
  }
  $28 = ($29|0)==($27|0);
  if ($28) {
   $$0$lcssa$i = $27;
   break;
  } else {
   $$01$i = $29;
  }
 }
 $32 = $$0$lcssa$i;
 $33 = $__atoms;
 $34 = (($32) - ($33))|0;
 $35 = ($34|0)>(23);
 if ($35) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 if ((($__base|0) == 16)) {
  $37 = ($34|0)<(22);
  if (!($37)) {
   if ($1) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
   $38 = $0;
   $39 = $__a;
   $40 = (($38) - ($39))|0;
   $41 = ($40|0)<(3);
   if (!($41)) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
   $42 = (($0) + -1|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(48);
   if (!($44)) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
   HEAP32[$__dc>>2] = 0;
   $45 = (39184 + ($34)|0);
   $46 = HEAP8[$45>>0]|0;
   $47 = (($0) + 1|0);
   HEAP32[$__a_end>>2] = $47;
   HEAP8[$0>>0] = $46;
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 } else if ((($__base|0) == 10) | (($__base|0) == 8)) {
  $36 = ($34|0)<($__base|0);
  if (!($36)) {
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $48 = (39184 + ($34)|0);
 $49 = HEAP8[$48>>0]|0;
 $50 = (($0) + 1|0);
 HEAP32[$__a_end>>2] = $50;
 HEAP8[$0>>0] = $49;
 $51 = HEAP32[$__dc>>2]|0;
 $52 = (($51) + 1)|0;
 HEAP32[$__dc>>2] = $52;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__16__clocEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[40544>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((40544|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (_newlocale(2147483647,(40552|0),(0|0))|0);
   HEAP32[40536>>2] = $4;
   ___cxa_guard_release((40544|0));
  }
 }
 $5 = HEAP32[40536>>2]|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$idx = 0, $$idx$val = 0, $$idx12 = 0, $$idx12$val = 0, $$idx13 = 0, $$idx13$val = 0, $$idx14 = 0, $$idx14$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lv = 0, $__names = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $$byval_copy1 = sp + 8|0;
 $$byval_copy = sp + 40|0;
 $__lv = sp + 44|0;
 $0 = sp + 48|0;
 $1 = sp + 4|0;
 $2 = sp;
 $__names = sp + 16|0;
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 if ($6) {
  HEAP32[$__lv>>2] = -1;
  $7 = HEAP32[$this>>2]|0;
  $8 = (($7) + 16|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = HEAP32[$__b>>2]|0;
  HEAP32[$1>>2] = $10;
  $11 = HEAP32[$__e>>2]|0;
  HEAP32[$2>>2] = $11;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
  ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$2+0>>2]|0;
  FUNCTION_TABLE_viiiiiii[$9 & 63]($0,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__lv);
  $12 = HEAP32[$0>>2]|0;
  HEAP32[$__b>>2] = $12;
  $13 = HEAP32[$__lv>>2]|0;
  if ((($13|0) == 1)) {
   HEAP8[$__v>>0] = 1;
  } else if ((($13|0) == 0)) {
   HEAP8[$__v>>0] = 0;
  } else {
   HEAP8[$__v>>0] = 1;
   HEAP32[$__err>>2] = 4;
  }
  HEAP32[$agg$result>>2] = $12;
  STACKTOP = sp;return;
 }
 $14 = (($__iob) + 28|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($15) + 4|0);
 $17 = HEAP32[$16>>2]|0;HEAP32[$16>>2] = (($17+1)|0);
 $18 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx13 = (($15) + 8|0);
 $$idx13$val = HEAP32[$$idx13>>2]|0;
 $$idx14 = (($15) + 12|0);
 $$idx14$val = HEAP32[$$idx14>>2]|0;
 $19 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx13$val,$$idx14$val,$18)|0);
 $20 = (($15) + 4|0);
 $21 = HEAP32[$20>>2]|0;HEAP32[$20>>2] = (($21+-1)|0);
 $22 = ($21|0)==(0);
 if ($22) {
  $23 = HEAP32[$15>>2]|0;
  $24 = (($23) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  FUNCTION_TABLE_vi[$25 & 255]($15);
 }
 $26 = HEAP32[$14>>2]|0;
 $27 = (($26) + 4|0);
 $28 = HEAP32[$27>>2]|0;HEAP32[$27>>2] = (($28+1)|0);
 $29 = (__ZNSt3__16locale2id5__getEv(40792)|0);
 $$idx = (($26) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx12 = (($26) + 12|0);
 $$idx12$val = HEAP32[$$idx12>>2]|0;
 $30 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx12$val,$29)|0);
 $31 = (($26) + 4|0);
 $32 = HEAP32[$31>>2]|0;HEAP32[$31>>2] = (($32+-1)|0);
 $33 = ($32|0)==(0);
 if ($33) {
  $34 = HEAP32[$26>>2]|0;
  $35 = (($34) + 8|0);
  $36 = HEAP32[$35>>2]|0;
  FUNCTION_TABLE_vi[$36 & 255]($26);
 }
 $37 = HEAP32[$30>>2]|0;
 $38 = (($37) + 24|0);
 $39 = HEAP32[$38>>2]|0;
 FUNCTION_TABLE_vii[$39 & 63]($__names,$30);
 $40 = (($__names) + 12|0);
 $41 = HEAP32[$30>>2]|0;
 $42 = (($41) + 28|0);
 $43 = HEAP32[$42>>2]|0;
 FUNCTION_TABLE_vii[$43 & 63]($40,$30);
 $44 = HEAP32[$__e>>2]|0;
 $45 = (($__names) + 24|0);
 $46 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$44,$__names,$45,$19,$__err,1)|0);
 $47 = ($46|0)==($__names|0);
 $48 = $47&1;
 HEAP8[$__v>>0] = $48;
 $49 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $49;
 $50 = HEAP8[$40>>0]|0;
 $51 = $50 & 1;
 $52 = ($51<<24>>24)==(0);
 if (!($52)) {
  $53 = (($__names) + 20|0);
  $54 = HEAP32[$53>>2]|0;
  _free($54);
 }
 $55 = HEAP8[$__names>>0]|0;
 $56 = $55 & 1;
 $57 = ($56<<24>>24)==(0);
 if ($57) {
  STACKTOP = sp;return;
 }
 $58 = (($__names) + 8|0);
 $59 = HEAP32[$58>>2]|0;
 _free($59);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i5$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i3$i = 0, $$0$i$i1$i$i$i = 0, $$0$i$i1$i$i9$i = 0, $$7 = 0, $$8 = 0, $$pre$i$i$i5$i = 0, $$pre$i3$i$i$i = 0, $$pre$phi33$iZ2D = 0, $$pre$phi35$iZ2D = 0, $$pre32$i = 0, $$pre34$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__thousands_sep$i = 0, $phitmp$i23$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms$i = sp + 160|0;
 $__thousands_sep$i = sp + 280|0;
 $__grouping$i = sp + 264|0;
 $__buf$i = sp + 284|0;
 $__a_end$i = sp + 300|0;
 $__g$i = sp;
 $__g_end$i = sp + 276|0;
 $__dc$i = sp + 296|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 74;
 if ((($4|0) == 64)) {
  $$0$i$i = 8;
 } else if ((($4|0) == 0)) {
  $$0$i$i = 0;
 } else if ((($4|0) == 8)) {
  $$0$i$i = 16;
 } else {
  $$0$i$i = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping$i,$__iob,$__atoms$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $5 = HEAP8[$__buf$i>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = (($__buf$i) + 1|0);
  $$pre34$i = (($__buf$i) + 8|0);
  $$pre$phi33$iZ2D = $10;$$pre$phi35$iZ2D = $$pre34$i;$11 = $10;
 } else {
  $8 = (($__buf$i) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $$pre32$i = (($__buf$i) + 1|0);
  $$pre$phi33$iZ2D = $$pre32$i;$$pre$phi35$iZ2D = $8;$11 = $9;
 }
 HEAP32[$__a_end$i>>2] = $11;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 $12 = (($__buf$i) + 4|0);
 $13 = HEAP32[$__thousands_sep$i>>2]|0;
 $$pre$i$i$i5$i = $0;$$sroa$06$0 = $1;$__a$0$i = $11;
 while(1) {
  $14 = ($$pre$i$i$i5$i|0)==(0|0);
  if ($14) {
   $141 = 1;$66 = 0;
  } else {
   $15 = (($$pre$i$i$i5$i) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($$pre$i$i$i5$i) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$$pre$i$i$i5$i>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($$pre$i$i$i5$i)|0);
    $$0$i$i$i$i3$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i$i$i3$i = $24;
   }
   $25 = ($$0$i$i$i$i3$i|0)==(-1);
   $$$pre$i$i$i5$i = $25 ? 0 : $$pre$i$i$i5$i;
   $$ = $25 ? 1 : 0;
   $141 = $$;$66 = $$$pre$i$i$i5$i;
  }
  $26 = ($$sroa$06$0|0)==(0|0);
  if ($26) {
   label = 19;
  } else {
   $27 = (($$sroa$06$0) + 12|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (($$sroa$06$0) + 16|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ($28|0)==($30|0);
   if ($31) {
    $32 = HEAP32[$$sroa$06$0>>2]|0;
    $33 = (($32) + 36|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (FUNCTION_TABLE_ii[$34 & 127]($$sroa$06$0)|0);
    $$0$i$i1$i$i9$i = $35;
   } else {
    $36 = HEAP32[$28>>2]|0;
    $$0$i$i1$i$i9$i = $36;
   }
   $37 = ($$0$i$i1$i$i9$i|0)==(-1);
   if ($37) {
    label = 19;
   } else {
    if ($141) {
     $$sroa$06$2 = $$sroa$06$0;
    } else {
     $$pre$i3$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
     break;
    }
   }
  }
  if ((label|0) == 19) {
   label = 0;
   if ($141) {
    $$pre$i3$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $38 = HEAP32[$__a_end$i>>2]|0;
  $39 = HEAP8[$__buf$i>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $43 = $39&255;
   $44 = $43 >>> 1;
   $46 = $44;
  } else {
   $42 = HEAP32[$12>>2]|0;
   $46 = $42;
  }
  $45 = (($__a$0$i) + ($46)|0);
  $47 = ($38|0)==($45|0);
  if ($47) {
   if ($41) {
    $49 = $39&255;
    $50 = $49 >>> 1;
    $52 = $50;
   } else {
    $48 = HEAP32[$12>>2]|0;
    $52 = $48;
   }
   $51 = $52 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$51);
   $53 = HEAP8[$__buf$i>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf$i>>2]|0;
    $57 = $56 & -2;
    $phitmp$i23$i = (($57) + -1)|0;
    $58 = $phitmp$i23$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$58);
   $59 = HEAP8[$__buf$i>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = $$pre$phi33$iZ2D;
   } else {
    $62 = HEAP32[$$pre$phi35$iZ2D>>2]|0;
    $64 = $62;
   }
   $63 = (($64) + ($52)|0);
   HEAP32[$__a_end$i>>2] = $63;
   $__a$1$i = $64;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $65 = (($66) + 12|0);
  $67 = HEAP32[$65>>2]|0;
  $68 = (($66) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$66>>2]|0;
   $72 = (($71) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 127]($66)|0);
   $$0$i$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i$i,$$0$i$i,$__a$1$i,$__a_end$i,$__dc$i,$13,$__grouping$i,$__g$i,$__g_end$i,$__atoms$i)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i3$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $78 = HEAP32[$65>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$66>>2]|0;
   $82 = (($81) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 127]($66)|0);
   $$pre$i$i$i5$i = $66;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $84 = (($78) + 4|0);
   HEAP32[$65>>2] = $84;
   $$pre$i$i$i5$i = $66;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $85 = HEAP8[$__grouping$i>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 if ($87) {
  $90 = $85&255;
  $91 = $90 >>> 1;
  $93 = $91;
 } else {
  $88 = (($__grouping$i) + 4|0);
  $89 = HEAP32[$88>>2]|0;
  $93 = $89;
 }
 $92 = ($93|0)==(0);
 if (!($92)) {
  $94 = HEAP32[$__g_end$i>>2]|0;
  $95 = $94;
  $96 = $__g$i;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc$i>>2]|0;
   $100 = (($94) + 4|0);
   HEAP32[$__g_end$i>>2] = $100;
   HEAP32[$94>>2] = $99;
  }
 }
 $101 = HEAP32[$__a_end$i>>2]|0;
 $102 = (__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a$2$i,$101,$__err,$$0$i$i)|0);
 HEAP32[$__v>>2] = $102;
 $103 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$103,$__err);
 $104 = ($66|0)==(0|0);
 if ($104) {
  $130 = 0;$142 = 1;
 } else {
  $105 = (($66) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($66) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$66>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($66)|0);
   $$0$i$i$i$i$i = $113;
  } else {
   $114 = HEAP32[$106>>2]|0;
   $$0$i$i$i$i$i = $114;
  }
  $115 = ($$0$i$i$i$i$i|0)==(-1);
  $$7 = $115 ? 0 : $66;
  $$8 = $115 ? 1 : 0;
  $130 = $$7;$142 = $$8;
 }
 $116 = ($$pre$i3$i$i$i|0)==(0|0);
 if ($116) {
  label = 56;
 } else {
  $117 = (($$pre$i3$i$i$i) + 12|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (($$pre$i3$i$i$i) + 16|0);
  $120 = HEAP32[$119>>2]|0;
  $121 = ($118|0)==($120|0);
  if ($121) {
   $122 = HEAP32[$$pre$i3$i$i$i>>2]|0;
   $123 = (($122) + 36|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = (FUNCTION_TABLE_ii[$124 & 127]($$pre$i3$i$i$i)|0);
   $$0$i$i1$i$i$i = $125;
  } else {
   $126 = HEAP32[$118>>2]|0;
   $$0$i$i1$i$i$i = $126;
  }
  $127 = ($$0$i$i1$i$i$i|0)==(-1);
  if ($127) {
   label = 56;
  } else {
   if (!($142)) {
    label = 58;
   }
  }
 }
 if ((label|0) == 56) {
  if ($142) {
   label = 58;
  }
 }
 if ((label|0) == 58) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $130;
 $131 = HEAP8[$__buf$i>>0]|0;
 $132 = $131 & 1;
 $133 = ($132<<24>>24)==(0);
 if (!($133)) {
  $134 = (($__buf$i) + 8|0);
  $135 = HEAP32[$134>>2]|0;
  _free($135);
 }
 $136 = HEAP8[$__grouping$i>>0]|0;
 $137 = $136 & 1;
 $138 = ($137<<24>>24)==(0);
 if ($138) {
  STACKTOP = sp;return;
 }
 $139 = (($__grouping$i) + 8|0);
 $140 = HEAP32[$139>>2]|0;
 _free($140);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i5$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i3$i = 0, $$0$i$i1$i$i$i = 0, $$0$i$i1$i$i9$i = 0, $$7 = 0, $$8 = 0, $$pre$i$i$i5$i = 0, $$pre$i3$i$i$i = 0, $$pre$phi33$iZ2D = 0, $$pre$phi35$iZ2D = 0, $$pre32$i = 0, $$pre34$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__thousands_sep$i = 0, $phitmp$i23$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms$i = sp + 160|0;
 $__thousands_sep$i = sp + 280|0;
 $__grouping$i = sp + 264|0;
 $__buf$i = sp + 284|0;
 $__a_end$i = sp + 300|0;
 $__g$i = sp;
 $__g_end$i = sp + 276|0;
 $__dc$i = sp + 296|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 74;
 if ((($4|0) == 0)) {
  $$0$i$i = 0;
 } else if ((($4|0) == 8)) {
  $$0$i$i = 16;
 } else if ((($4|0) == 64)) {
  $$0$i$i = 8;
 } else {
  $$0$i$i = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping$i,$__iob,$__atoms$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $5 = HEAP8[$__buf$i>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = (($__buf$i) + 1|0);
  $$pre34$i = (($__buf$i) + 8|0);
  $$pre$phi33$iZ2D = $10;$$pre$phi35$iZ2D = $$pre34$i;$11 = $10;
 } else {
  $8 = (($__buf$i) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $$pre32$i = (($__buf$i) + 1|0);
  $$pre$phi33$iZ2D = $$pre32$i;$$pre$phi35$iZ2D = $8;$11 = $9;
 }
 HEAP32[$__a_end$i>>2] = $11;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 $12 = (($__buf$i) + 4|0);
 $13 = HEAP32[$__thousands_sep$i>>2]|0;
 $$pre$i$i$i5$i = $0;$$sroa$06$0 = $1;$__a$0$i = $11;
 while(1) {
  $14 = ($$pre$i$i$i5$i|0)==(0|0);
  if ($14) {
   $146 = 1;$66 = 0;
  } else {
   $15 = (($$pre$i$i$i5$i) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($$pre$i$i$i5$i) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$$pre$i$i$i5$i>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($$pre$i$i$i5$i)|0);
    $$0$i$i$i$i3$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i$i$i3$i = $24;
   }
   $25 = ($$0$i$i$i$i3$i|0)==(-1);
   $$$pre$i$i$i5$i = $25 ? 0 : $$pre$i$i$i5$i;
   $$ = $25 ? 1 : 0;
   $146 = $$;$66 = $$$pre$i$i$i5$i;
  }
  $26 = ($$sroa$06$0|0)==(0|0);
  if ($26) {
   label = 19;
  } else {
   $27 = (($$sroa$06$0) + 12|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (($$sroa$06$0) + 16|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ($28|0)==($30|0);
   if ($31) {
    $32 = HEAP32[$$sroa$06$0>>2]|0;
    $33 = (($32) + 36|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (FUNCTION_TABLE_ii[$34 & 127]($$sroa$06$0)|0);
    $$0$i$i1$i$i9$i = $35;
   } else {
    $36 = HEAP32[$28>>2]|0;
    $$0$i$i1$i$i9$i = $36;
   }
   $37 = ($$0$i$i1$i$i9$i|0)==(-1);
   if ($37) {
    label = 19;
   } else {
    if ($146) {
     $$sroa$06$2 = $$sroa$06$0;
    } else {
     $$pre$i3$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
     break;
    }
   }
  }
  if ((label|0) == 19) {
   label = 0;
   if ($146) {
    $$pre$i3$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $38 = HEAP32[$__a_end$i>>2]|0;
  $39 = HEAP8[$__buf$i>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $43 = $39&255;
   $44 = $43 >>> 1;
   $46 = $44;
  } else {
   $42 = HEAP32[$12>>2]|0;
   $46 = $42;
  }
  $45 = (($__a$0$i) + ($46)|0);
  $47 = ($38|0)==($45|0);
  if ($47) {
   if ($41) {
    $49 = $39&255;
    $50 = $49 >>> 1;
    $52 = $50;
   } else {
    $48 = HEAP32[$12>>2]|0;
    $52 = $48;
   }
   $51 = $52 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$51);
   $53 = HEAP8[$__buf$i>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf$i>>2]|0;
    $57 = $56 & -2;
    $phitmp$i23$i = (($57) + -1)|0;
    $58 = $phitmp$i23$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$58);
   $59 = HEAP8[$__buf$i>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = $$pre$phi33$iZ2D;
   } else {
    $62 = HEAP32[$$pre$phi35$iZ2D>>2]|0;
    $64 = $62;
   }
   $63 = (($64) + ($52)|0);
   HEAP32[$__a_end$i>>2] = $63;
   $__a$1$i = $64;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $65 = (($66) + 12|0);
  $67 = HEAP32[$65>>2]|0;
  $68 = (($66) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$66>>2]|0;
   $72 = (($71) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 127]($66)|0);
   $$0$i$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i$i,$$0$i$i,$__a$1$i,$__a_end$i,$__dc$i,$13,$__grouping$i,$__g$i,$__g_end$i,$__atoms$i)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i3$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $78 = HEAP32[$65>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$66>>2]|0;
   $82 = (($81) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 127]($66)|0);
   $$pre$i$i$i5$i = $66;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $84 = (($78) + 4|0);
   HEAP32[$65>>2] = $84;
   $$pre$i$i$i5$i = $66;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $85 = HEAP8[$__grouping$i>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 if ($87) {
  $90 = $85&255;
  $91 = $90 >>> 1;
  $93 = $91;
 } else {
  $88 = (($__grouping$i) + 4|0);
  $89 = HEAP32[$88>>2]|0;
  $93 = $89;
 }
 $92 = ($93|0)==(0);
 if (!($92)) {
  $94 = HEAP32[$__g_end$i>>2]|0;
  $95 = $94;
  $96 = $__g$i;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc$i>>2]|0;
   $100 = (($94) + 4|0);
   HEAP32[$__g_end$i>>2] = $100;
   HEAP32[$94>>2] = $99;
  }
 }
 $101 = HEAP32[$__a_end$i>>2]|0;
 $102 = (__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a$2$i,$101,$__err,$$0$i$i)|0);
 $103 = tempRet0;
 $104 = $__v;
 $105 = $104;
 HEAP32[$105>>2] = $102;
 $106 = (($104) + 4)|0;
 $107 = $106;
 HEAP32[$107>>2] = $103;
 $108 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$108,$__err);
 $109 = ($66|0)==(0|0);
 if ($109) {
  $135 = 0;$147 = 1;
 } else {
  $110 = (($66) + 12|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = (($66) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ($111|0)==($113|0);
  if ($114) {
   $115 = HEAP32[$66>>2]|0;
   $116 = (($115) + 36|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = (FUNCTION_TABLE_ii[$117 & 127]($66)|0);
   $$0$i$i$i$i$i = $118;
  } else {
   $119 = HEAP32[$111>>2]|0;
   $$0$i$i$i$i$i = $119;
  }
  $120 = ($$0$i$i$i$i$i|0)==(-1);
  $$7 = $120 ? 0 : $66;
  $$8 = $120 ? 1 : 0;
  $135 = $$7;$147 = $$8;
 }
 $121 = ($$pre$i3$i$i$i|0)==(0|0);
 if ($121) {
  label = 56;
 } else {
  $122 = (($$pre$i3$i$i$i) + 12|0);
  $123 = HEAP32[$122>>2]|0;
  $124 = (($$pre$i3$i$i$i) + 16|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = ($123|0)==($125|0);
  if ($126) {
   $127 = HEAP32[$$pre$i3$i$i$i>>2]|0;
   $128 = (($127) + 36|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = (FUNCTION_TABLE_ii[$129 & 127]($$pre$i3$i$i$i)|0);
   $$0$i$i1$i$i$i = $130;
  } else {
   $131 = HEAP32[$123>>2]|0;
   $$0$i$i1$i$i$i = $131;
  }
  $132 = ($$0$i$i1$i$i$i|0)==(-1);
  if ($132) {
   label = 56;
  } else {
   if (!($147)) {
    label = 58;
   }
  }
 }
 if ((label|0) == 56) {
  if ($147) {
   label = 58;
  }
 }
 if ((label|0) == 58) {
  $133 = HEAP32[$__err>>2]|0;
  $134 = $133 | 2;
  HEAP32[$__err>>2] = $134;
 }
 HEAP32[$agg$result>>2] = $135;
 $136 = HEAP8[$__buf$i>>0]|0;
 $137 = $136 & 1;
 $138 = ($137<<24>>24)==(0);
 if (!($138)) {
  $139 = (($__buf$i) + 8|0);
  $140 = HEAP32[$139>>2]|0;
  _free($140);
 }
 $141 = HEAP8[$__grouping$i>>0]|0;
 $142 = $141 & 1;
 $143 = ($142<<24>>24)==(0);
 if ($143) {
  STACKTOP = sp;return;
 }
 $144 = (($__grouping$i) + 8|0);
 $145 = HEAP32[$144>>2]|0;
 _free($145);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i5$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i3$i = 0, $$0$i$i1$i$i$i = 0, $$0$i$i1$i$i9$i = 0, $$7 = 0, $$8 = 0, $$pre$i$i$i5$i = 0, $$pre$i3$i$i$i = 0, $$pre$phi33$iZ2D = 0, $$pre$phi35$iZ2D = 0, $$pre32$i = 0, $$pre34$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__thousands_sep$i = 0, $phitmp$i23$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms$i = sp + 160|0;
 $__thousands_sep$i = sp + 280|0;
 $__grouping$i = sp + 264|0;
 $__buf$i = sp + 284|0;
 $__a_end$i = sp + 300|0;
 $__g$i = sp;
 $__g_end$i = sp + 276|0;
 $__dc$i = sp + 296|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 74;
 if ((($4|0) == 64)) {
  $$0$i$i = 8;
 } else if ((($4|0) == 0)) {
  $$0$i$i = 0;
 } else if ((($4|0) == 8)) {
  $$0$i$i = 16;
 } else {
  $$0$i$i = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping$i,$__iob,$__atoms$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $5 = HEAP8[$__buf$i>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = (($__buf$i) + 1|0);
  $$pre34$i = (($__buf$i) + 8|0);
  $$pre$phi33$iZ2D = $10;$$pre$phi35$iZ2D = $$pre34$i;$11 = $10;
 } else {
  $8 = (($__buf$i) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $$pre32$i = (($__buf$i) + 1|0);
  $$pre$phi33$iZ2D = $$pre32$i;$$pre$phi35$iZ2D = $8;$11 = $9;
 }
 HEAP32[$__a_end$i>>2] = $11;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 $12 = (($__buf$i) + 4|0);
 $13 = HEAP32[$__thousands_sep$i>>2]|0;
 $$pre$i$i$i5$i = $0;$$sroa$06$0 = $1;$__a$0$i = $11;
 while(1) {
  $14 = ($$pre$i$i$i5$i|0)==(0|0);
  if ($14) {
   $141 = 1;$66 = 0;
  } else {
   $15 = (($$pre$i$i$i5$i) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($$pre$i$i$i5$i) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$$pre$i$i$i5$i>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($$pre$i$i$i5$i)|0);
    $$0$i$i$i$i3$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i$i$i3$i = $24;
   }
   $25 = ($$0$i$i$i$i3$i|0)==(-1);
   $$$pre$i$i$i5$i = $25 ? 0 : $$pre$i$i$i5$i;
   $$ = $25 ? 1 : 0;
   $141 = $$;$66 = $$$pre$i$i$i5$i;
  }
  $26 = ($$sroa$06$0|0)==(0|0);
  if ($26) {
   label = 19;
  } else {
   $27 = (($$sroa$06$0) + 12|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (($$sroa$06$0) + 16|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ($28|0)==($30|0);
   if ($31) {
    $32 = HEAP32[$$sroa$06$0>>2]|0;
    $33 = (($32) + 36|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (FUNCTION_TABLE_ii[$34 & 127]($$sroa$06$0)|0);
    $$0$i$i1$i$i9$i = $35;
   } else {
    $36 = HEAP32[$28>>2]|0;
    $$0$i$i1$i$i9$i = $36;
   }
   $37 = ($$0$i$i1$i$i9$i|0)==(-1);
   if ($37) {
    label = 19;
   } else {
    if ($141) {
     $$sroa$06$2 = $$sroa$06$0;
    } else {
     $$pre$i3$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
     break;
    }
   }
  }
  if ((label|0) == 19) {
   label = 0;
   if ($141) {
    $$pre$i3$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $38 = HEAP32[$__a_end$i>>2]|0;
  $39 = HEAP8[$__buf$i>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $43 = $39&255;
   $44 = $43 >>> 1;
   $46 = $44;
  } else {
   $42 = HEAP32[$12>>2]|0;
   $46 = $42;
  }
  $45 = (($__a$0$i) + ($46)|0);
  $47 = ($38|0)==($45|0);
  if ($47) {
   if ($41) {
    $49 = $39&255;
    $50 = $49 >>> 1;
    $52 = $50;
   } else {
    $48 = HEAP32[$12>>2]|0;
    $52 = $48;
   }
   $51 = $52 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$51);
   $53 = HEAP8[$__buf$i>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf$i>>2]|0;
    $57 = $56 & -2;
    $phitmp$i23$i = (($57) + -1)|0;
    $58 = $phitmp$i23$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$58);
   $59 = HEAP8[$__buf$i>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = $$pre$phi33$iZ2D;
   } else {
    $62 = HEAP32[$$pre$phi35$iZ2D>>2]|0;
    $64 = $62;
   }
   $63 = (($64) + ($52)|0);
   HEAP32[$__a_end$i>>2] = $63;
   $__a$1$i = $64;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $65 = (($66) + 12|0);
  $67 = HEAP32[$65>>2]|0;
  $68 = (($66) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$66>>2]|0;
   $72 = (($71) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 127]($66)|0);
   $$0$i$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i$i,$$0$i$i,$__a$1$i,$__a_end$i,$__dc$i,$13,$__grouping$i,$__g$i,$__g_end$i,$__atoms$i)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i3$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $78 = HEAP32[$65>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$66>>2]|0;
   $82 = (($81) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 127]($66)|0);
   $$pre$i$i$i5$i = $66;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $84 = (($78) + 4|0);
   HEAP32[$65>>2] = $84;
   $$pre$i$i$i5$i = $66;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $85 = HEAP8[$__grouping$i>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 if ($87) {
  $90 = $85&255;
  $91 = $90 >>> 1;
  $93 = $91;
 } else {
  $88 = (($__grouping$i) + 4|0);
  $89 = HEAP32[$88>>2]|0;
  $93 = $89;
 }
 $92 = ($93|0)==(0);
 if (!($92)) {
  $94 = HEAP32[$__g_end$i>>2]|0;
  $95 = $94;
  $96 = $__g$i;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc$i>>2]|0;
   $100 = (($94) + 4|0);
   HEAP32[$__g_end$i>>2] = $100;
   HEAP32[$94>>2] = $99;
  }
 }
 $101 = HEAP32[$__a_end$i>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a$2$i,$101,$__err,$$0$i$i)|0);
 HEAP16[$__v>>1] = $102;
 $103 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$103,$__err);
 $104 = ($66|0)==(0|0);
 if ($104) {
  $130 = 0;$142 = 1;
 } else {
  $105 = (($66) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($66) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$66>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($66)|0);
   $$0$i$i$i$i$i = $113;
  } else {
   $114 = HEAP32[$106>>2]|0;
   $$0$i$i$i$i$i = $114;
  }
  $115 = ($$0$i$i$i$i$i|0)==(-1);
  $$7 = $115 ? 0 : $66;
  $$8 = $115 ? 1 : 0;
  $130 = $$7;$142 = $$8;
 }
 $116 = ($$pre$i3$i$i$i|0)==(0|0);
 if ($116) {
  label = 56;
 } else {
  $117 = (($$pre$i3$i$i$i) + 12|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (($$pre$i3$i$i$i) + 16|0);
  $120 = HEAP32[$119>>2]|0;
  $121 = ($118|0)==($120|0);
  if ($121) {
   $122 = HEAP32[$$pre$i3$i$i$i>>2]|0;
   $123 = (($122) + 36|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = (FUNCTION_TABLE_ii[$124 & 127]($$pre$i3$i$i$i)|0);
   $$0$i$i1$i$i$i = $125;
  } else {
   $126 = HEAP32[$118>>2]|0;
   $$0$i$i1$i$i$i = $126;
  }
  $127 = ($$0$i$i1$i$i$i|0)==(-1);
  if ($127) {
   label = 56;
  } else {
   if (!($142)) {
    label = 58;
   }
  }
 }
 if ((label|0) == 56) {
  if ($142) {
   label = 58;
  }
 }
 if ((label|0) == 58) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $130;
 $131 = HEAP8[$__buf$i>>0]|0;
 $132 = $131 & 1;
 $133 = ($132<<24>>24)==(0);
 if (!($133)) {
  $134 = (($__buf$i) + 8|0);
  $135 = HEAP32[$134>>2]|0;
  _free($135);
 }
 $136 = HEAP8[$__grouping$i>>0]|0;
 $137 = $136 & 1;
 $138 = ($137<<24>>24)==(0);
 if ($138) {
  STACKTOP = sp;return;
 }
 $139 = (($__grouping$i) + 8|0);
 $140 = HEAP32[$139>>2]|0;
 _free($140);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i5$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i3$i = 0, $$0$i$i1$i$i$i = 0, $$0$i$i1$i$i9$i = 0, $$7 = 0, $$8 = 0, $$pre$i$i$i5$i = 0, $$pre$i3$i$i$i = 0, $$pre$phi33$iZ2D = 0, $$pre$phi35$iZ2D = 0, $$pre32$i = 0, $$pre34$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__thousands_sep$i = 0, $phitmp$i23$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms$i = sp + 160|0;
 $__thousands_sep$i = sp + 280|0;
 $__grouping$i = sp + 264|0;
 $__buf$i = sp + 284|0;
 $__a_end$i = sp + 300|0;
 $__g$i = sp;
 $__g_end$i = sp + 276|0;
 $__dc$i = sp + 296|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 74;
 if ((($4|0) == 8)) {
  $$0$i$i = 16;
 } else if ((($4|0) == 0)) {
  $$0$i$i = 0;
 } else if ((($4|0) == 64)) {
  $$0$i$i = 8;
 } else {
  $$0$i$i = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping$i,$__iob,$__atoms$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $5 = HEAP8[$__buf$i>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = (($__buf$i) + 1|0);
  $$pre34$i = (($__buf$i) + 8|0);
  $$pre$phi33$iZ2D = $10;$$pre$phi35$iZ2D = $$pre34$i;$11 = $10;
 } else {
  $8 = (($__buf$i) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $$pre32$i = (($__buf$i) + 1|0);
  $$pre$phi33$iZ2D = $$pre32$i;$$pre$phi35$iZ2D = $8;$11 = $9;
 }
 HEAP32[$__a_end$i>>2] = $11;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 $12 = (($__buf$i) + 4|0);
 $13 = HEAP32[$__thousands_sep$i>>2]|0;
 $$pre$i$i$i5$i = $0;$$sroa$06$0 = $1;$__a$0$i = $11;
 while(1) {
  $14 = ($$pre$i$i$i5$i|0)==(0|0);
  if ($14) {
   $141 = 1;$66 = 0;
  } else {
   $15 = (($$pre$i$i$i5$i) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($$pre$i$i$i5$i) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$$pre$i$i$i5$i>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($$pre$i$i$i5$i)|0);
    $$0$i$i$i$i3$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i$i$i3$i = $24;
   }
   $25 = ($$0$i$i$i$i3$i|0)==(-1);
   $$$pre$i$i$i5$i = $25 ? 0 : $$pre$i$i$i5$i;
   $$ = $25 ? 1 : 0;
   $141 = $$;$66 = $$$pre$i$i$i5$i;
  }
  $26 = ($$sroa$06$0|0)==(0|0);
  if ($26) {
   label = 19;
  } else {
   $27 = (($$sroa$06$0) + 12|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (($$sroa$06$0) + 16|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ($28|0)==($30|0);
   if ($31) {
    $32 = HEAP32[$$sroa$06$0>>2]|0;
    $33 = (($32) + 36|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (FUNCTION_TABLE_ii[$34 & 127]($$sroa$06$0)|0);
    $$0$i$i1$i$i9$i = $35;
   } else {
    $36 = HEAP32[$28>>2]|0;
    $$0$i$i1$i$i9$i = $36;
   }
   $37 = ($$0$i$i1$i$i9$i|0)==(-1);
   if ($37) {
    label = 19;
   } else {
    if ($141) {
     $$sroa$06$2 = $$sroa$06$0;
    } else {
     $$pre$i3$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
     break;
    }
   }
  }
  if ((label|0) == 19) {
   label = 0;
   if ($141) {
    $$pre$i3$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $38 = HEAP32[$__a_end$i>>2]|0;
  $39 = HEAP8[$__buf$i>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $43 = $39&255;
   $44 = $43 >>> 1;
   $46 = $44;
  } else {
   $42 = HEAP32[$12>>2]|0;
   $46 = $42;
  }
  $45 = (($__a$0$i) + ($46)|0);
  $47 = ($38|0)==($45|0);
  if ($47) {
   if ($41) {
    $49 = $39&255;
    $50 = $49 >>> 1;
    $52 = $50;
   } else {
    $48 = HEAP32[$12>>2]|0;
    $52 = $48;
   }
   $51 = $52 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$51);
   $53 = HEAP8[$__buf$i>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf$i>>2]|0;
    $57 = $56 & -2;
    $phitmp$i23$i = (($57) + -1)|0;
    $58 = $phitmp$i23$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$58);
   $59 = HEAP8[$__buf$i>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = $$pre$phi33$iZ2D;
   } else {
    $62 = HEAP32[$$pre$phi35$iZ2D>>2]|0;
    $64 = $62;
   }
   $63 = (($64) + ($52)|0);
   HEAP32[$__a_end$i>>2] = $63;
   $__a$1$i = $64;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $65 = (($66) + 12|0);
  $67 = HEAP32[$65>>2]|0;
  $68 = (($66) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$66>>2]|0;
   $72 = (($71) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 127]($66)|0);
   $$0$i$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i$i,$$0$i$i,$__a$1$i,$__a_end$i,$__dc$i,$13,$__grouping$i,$__g$i,$__g_end$i,$__atoms$i)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i3$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $78 = HEAP32[$65>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$66>>2]|0;
   $82 = (($81) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 127]($66)|0);
   $$pre$i$i$i5$i = $66;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $84 = (($78) + 4|0);
   HEAP32[$65>>2] = $84;
   $$pre$i$i$i5$i = $66;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $85 = HEAP8[$__grouping$i>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 if ($87) {
  $90 = $85&255;
  $91 = $90 >>> 1;
  $93 = $91;
 } else {
  $88 = (($__grouping$i) + 4|0);
  $89 = HEAP32[$88>>2]|0;
  $93 = $89;
 }
 $92 = ($93|0)==(0);
 if (!($92)) {
  $94 = HEAP32[$__g_end$i>>2]|0;
  $95 = $94;
  $96 = $__g$i;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc$i>>2]|0;
   $100 = (($94) + 4|0);
   HEAP32[$__g_end$i>>2] = $100;
   HEAP32[$94>>2] = $99;
  }
 }
 $101 = HEAP32[$__a_end$i>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a$2$i,$101,$__err,$$0$i$i)|0);
 HEAP32[$__v>>2] = $102;
 $103 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$103,$__err);
 $104 = ($66|0)==(0|0);
 if ($104) {
  $130 = 0;$142 = 1;
 } else {
  $105 = (($66) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($66) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$66>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($66)|0);
   $$0$i$i$i$i$i = $113;
  } else {
   $114 = HEAP32[$106>>2]|0;
   $$0$i$i$i$i$i = $114;
  }
  $115 = ($$0$i$i$i$i$i|0)==(-1);
  $$7 = $115 ? 0 : $66;
  $$8 = $115 ? 1 : 0;
  $130 = $$7;$142 = $$8;
 }
 $116 = ($$pre$i3$i$i$i|0)==(0|0);
 if ($116) {
  label = 56;
 } else {
  $117 = (($$pre$i3$i$i$i) + 12|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (($$pre$i3$i$i$i) + 16|0);
  $120 = HEAP32[$119>>2]|0;
  $121 = ($118|0)==($120|0);
  if ($121) {
   $122 = HEAP32[$$pre$i3$i$i$i>>2]|0;
   $123 = (($122) + 36|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = (FUNCTION_TABLE_ii[$124 & 127]($$pre$i3$i$i$i)|0);
   $$0$i$i1$i$i$i = $125;
  } else {
   $126 = HEAP32[$118>>2]|0;
   $$0$i$i1$i$i$i = $126;
  }
  $127 = ($$0$i$i1$i$i$i|0)==(-1);
  if ($127) {
   label = 56;
  } else {
   if (!($142)) {
    label = 58;
   }
  }
 }
 if ((label|0) == 56) {
  if ($142) {
   label = 58;
  }
 }
 if ((label|0) == 58) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $130;
 $131 = HEAP8[$__buf$i>>0]|0;
 $132 = $131 & 1;
 $133 = ($132<<24>>24)==(0);
 if (!($133)) {
  $134 = (($__buf$i) + 8|0);
  $135 = HEAP32[$134>>2]|0;
  _free($135);
 }
 $136 = HEAP8[$__grouping$i>>0]|0;
 $137 = $136 & 1;
 $138 = ($137<<24>>24)==(0);
 if ($138) {
  STACKTOP = sp;return;
 }
 $139 = (($__grouping$i) + 8|0);
 $140 = HEAP32[$139>>2]|0;
 _free($140);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i5$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i3$i = 0, $$0$i$i1$i$i$i = 0, $$0$i$i1$i$i9$i = 0, $$7 = 0, $$8 = 0, $$pre$i$i$i5$i = 0, $$pre$i3$i$i$i = 0, $$pre$phi33$iZ2D = 0, $$pre$phi35$iZ2D = 0, $$pre32$i = 0, $$pre34$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__thousands_sep$i = 0, $phitmp$i23$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms$i = sp + 160|0;
 $__thousands_sep$i = sp + 280|0;
 $__grouping$i = sp + 264|0;
 $__buf$i = sp + 284|0;
 $__a_end$i = sp + 300|0;
 $__g$i = sp;
 $__g_end$i = sp + 276|0;
 $__dc$i = sp + 296|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 74;
 if ((($4|0) == 8)) {
  $$0$i$i = 16;
 } else if ((($4|0) == 0)) {
  $$0$i$i = 0;
 } else if ((($4|0) == 64)) {
  $$0$i$i = 8;
 } else {
  $$0$i$i = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping$i,$__iob,$__atoms$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $5 = HEAP8[$__buf$i>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = (($__buf$i) + 1|0);
  $$pre34$i = (($__buf$i) + 8|0);
  $$pre$phi33$iZ2D = $10;$$pre$phi35$iZ2D = $$pre34$i;$11 = $10;
 } else {
  $8 = (($__buf$i) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $$pre32$i = (($__buf$i) + 1|0);
  $$pre$phi33$iZ2D = $$pre32$i;$$pre$phi35$iZ2D = $8;$11 = $9;
 }
 HEAP32[$__a_end$i>>2] = $11;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 $12 = (($__buf$i) + 4|0);
 $13 = HEAP32[$__thousands_sep$i>>2]|0;
 $$pre$i$i$i5$i = $0;$$sroa$06$0 = $1;$__a$0$i = $11;
 while(1) {
  $14 = ($$pre$i$i$i5$i|0)==(0|0);
  if ($14) {
   $141 = 1;$66 = 0;
  } else {
   $15 = (($$pre$i$i$i5$i) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($$pre$i$i$i5$i) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$$pre$i$i$i5$i>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($$pre$i$i$i5$i)|0);
    $$0$i$i$i$i3$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i$i$i3$i = $24;
   }
   $25 = ($$0$i$i$i$i3$i|0)==(-1);
   $$$pre$i$i$i5$i = $25 ? 0 : $$pre$i$i$i5$i;
   $$ = $25 ? 1 : 0;
   $141 = $$;$66 = $$$pre$i$i$i5$i;
  }
  $26 = ($$sroa$06$0|0)==(0|0);
  if ($26) {
   label = 19;
  } else {
   $27 = (($$sroa$06$0) + 12|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (($$sroa$06$0) + 16|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ($28|0)==($30|0);
   if ($31) {
    $32 = HEAP32[$$sroa$06$0>>2]|0;
    $33 = (($32) + 36|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (FUNCTION_TABLE_ii[$34 & 127]($$sroa$06$0)|0);
    $$0$i$i1$i$i9$i = $35;
   } else {
    $36 = HEAP32[$28>>2]|0;
    $$0$i$i1$i$i9$i = $36;
   }
   $37 = ($$0$i$i1$i$i9$i|0)==(-1);
   if ($37) {
    label = 19;
   } else {
    if ($141) {
     $$sroa$06$2 = $$sroa$06$0;
    } else {
     $$pre$i3$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
     break;
    }
   }
  }
  if ((label|0) == 19) {
   label = 0;
   if ($141) {
    $$pre$i3$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $38 = HEAP32[$__a_end$i>>2]|0;
  $39 = HEAP8[$__buf$i>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $43 = $39&255;
   $44 = $43 >>> 1;
   $46 = $44;
  } else {
   $42 = HEAP32[$12>>2]|0;
   $46 = $42;
  }
  $45 = (($__a$0$i) + ($46)|0);
  $47 = ($38|0)==($45|0);
  if ($47) {
   if ($41) {
    $49 = $39&255;
    $50 = $49 >>> 1;
    $52 = $50;
   } else {
    $48 = HEAP32[$12>>2]|0;
    $52 = $48;
   }
   $51 = $52 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$51);
   $53 = HEAP8[$__buf$i>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf$i>>2]|0;
    $57 = $56 & -2;
    $phitmp$i23$i = (($57) + -1)|0;
    $58 = $phitmp$i23$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$58);
   $59 = HEAP8[$__buf$i>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = $$pre$phi33$iZ2D;
   } else {
    $62 = HEAP32[$$pre$phi35$iZ2D>>2]|0;
    $64 = $62;
   }
   $63 = (($64) + ($52)|0);
   HEAP32[$__a_end$i>>2] = $63;
   $__a$1$i = $64;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $65 = (($66) + 12|0);
  $67 = HEAP32[$65>>2]|0;
  $68 = (($66) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$66>>2]|0;
   $72 = (($71) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 127]($66)|0);
   $$0$i$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i$i,$$0$i$i,$__a$1$i,$__a_end$i,$__dc$i,$13,$__grouping$i,$__g$i,$__g_end$i,$__atoms$i)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i3$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $78 = HEAP32[$65>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$66>>2]|0;
   $82 = (($81) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 127]($66)|0);
   $$pre$i$i$i5$i = $66;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $84 = (($78) + 4|0);
   HEAP32[$65>>2] = $84;
   $$pre$i$i$i5$i = $66;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $85 = HEAP8[$__grouping$i>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 if ($87) {
  $90 = $85&255;
  $91 = $90 >>> 1;
  $93 = $91;
 } else {
  $88 = (($__grouping$i) + 4|0);
  $89 = HEAP32[$88>>2]|0;
  $93 = $89;
 }
 $92 = ($93|0)==(0);
 if (!($92)) {
  $94 = HEAP32[$__g_end$i>>2]|0;
  $95 = $94;
  $96 = $__g$i;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc$i>>2]|0;
   $100 = (($94) + 4|0);
   HEAP32[$__g_end$i>>2] = $100;
   HEAP32[$94>>2] = $99;
  }
 }
 $101 = HEAP32[$__a_end$i>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a$2$i,$101,$__err,$$0$i$i)|0);
 HEAP32[$__v>>2] = $102;
 $103 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$103,$__err);
 $104 = ($66|0)==(0|0);
 if ($104) {
  $130 = 0;$142 = 1;
 } else {
  $105 = (($66) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($66) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$66>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($66)|0);
   $$0$i$i$i$i$i = $113;
  } else {
   $114 = HEAP32[$106>>2]|0;
   $$0$i$i$i$i$i = $114;
  }
  $115 = ($$0$i$i$i$i$i|0)==(-1);
  $$7 = $115 ? 0 : $66;
  $$8 = $115 ? 1 : 0;
  $130 = $$7;$142 = $$8;
 }
 $116 = ($$pre$i3$i$i$i|0)==(0|0);
 if ($116) {
  label = 56;
 } else {
  $117 = (($$pre$i3$i$i$i) + 12|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (($$pre$i3$i$i$i) + 16|0);
  $120 = HEAP32[$119>>2]|0;
  $121 = ($118|0)==($120|0);
  if ($121) {
   $122 = HEAP32[$$pre$i3$i$i$i>>2]|0;
   $123 = (($122) + 36|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = (FUNCTION_TABLE_ii[$124 & 127]($$pre$i3$i$i$i)|0);
   $$0$i$i1$i$i$i = $125;
  } else {
   $126 = HEAP32[$118>>2]|0;
   $$0$i$i1$i$i$i = $126;
  }
  $127 = ($$0$i$i1$i$i$i|0)==(-1);
  if ($127) {
   label = 56;
  } else {
   if (!($142)) {
    label = 58;
   }
  }
 }
 if ((label|0) == 56) {
  if ($142) {
   label = 58;
  }
 }
 if ((label|0) == 58) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $130;
 $131 = HEAP8[$__buf$i>>0]|0;
 $132 = $131 & 1;
 $133 = ($132<<24>>24)==(0);
 if (!($133)) {
  $134 = (($__buf$i) + 8|0);
  $135 = HEAP32[$134>>2]|0;
  _free($135);
 }
 $136 = HEAP8[$__grouping$i>>0]|0;
 $137 = $136 & 1;
 $138 = ($137<<24>>24)==(0);
 if ($138) {
  STACKTOP = sp;return;
 }
 $139 = (($__grouping$i) + 8|0);
 $140 = HEAP32[$139>>2]|0;
 _free($140);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i5$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i3$i = 0, $$0$i$i1$i$i$i = 0, $$0$i$i1$i$i9$i = 0, $$7 = 0, $$8 = 0, $$pre$i$i$i5$i = 0, $$pre$i3$i$i$i = 0, $$pre$phi33$iZ2D = 0, $$pre$phi35$iZ2D = 0, $$pre32$i = 0, $$pre34$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__thousands_sep$i = 0, $phitmp$i23$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $__atoms$i = sp + 160|0;
 $__thousands_sep$i = sp + 280|0;
 $__grouping$i = sp + 264|0;
 $__buf$i = sp + 284|0;
 $__a_end$i = sp + 300|0;
 $__g$i = sp;
 $__g_end$i = sp + 276|0;
 $__dc$i = sp + 296|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 74;
 if ((($4|0) == 8)) {
  $$0$i$i = 16;
 } else if ((($4|0) == 0)) {
  $$0$i$i = 0;
 } else if ((($4|0) == 64)) {
  $$0$i$i = 8;
 } else {
  $$0$i$i = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping$i,$__iob,$__atoms$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $5 = HEAP8[$__buf$i>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $10 = (($__buf$i) + 1|0);
  $$pre34$i = (($__buf$i) + 8|0);
  $$pre$phi33$iZ2D = $10;$$pre$phi35$iZ2D = $$pre34$i;$11 = $10;
 } else {
  $8 = (($__buf$i) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $$pre32$i = (($__buf$i) + 1|0);
  $$pre$phi33$iZ2D = $$pre32$i;$$pre$phi35$iZ2D = $8;$11 = $9;
 }
 HEAP32[$__a_end$i>>2] = $11;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 $12 = (($__buf$i) + 4|0);
 $13 = HEAP32[$__thousands_sep$i>>2]|0;
 $$pre$i$i$i5$i = $0;$$sroa$06$0 = $1;$__a$0$i = $11;
 while(1) {
  $14 = ($$pre$i$i$i5$i|0)==(0|0);
  if ($14) {
   $146 = 1;$66 = 0;
  } else {
   $15 = (($$pre$i$i$i5$i) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($$pre$i$i$i5$i) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$$pre$i$i$i5$i>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($$pre$i$i$i5$i)|0);
    $$0$i$i$i$i3$i = $23;
   } else {
    $24 = HEAP32[$16>>2]|0;
    $$0$i$i$i$i3$i = $24;
   }
   $25 = ($$0$i$i$i$i3$i|0)==(-1);
   $$$pre$i$i$i5$i = $25 ? 0 : $$pre$i$i$i5$i;
   $$ = $25 ? 1 : 0;
   $146 = $$;$66 = $$$pre$i$i$i5$i;
  }
  $26 = ($$sroa$06$0|0)==(0|0);
  if ($26) {
   label = 19;
  } else {
   $27 = (($$sroa$06$0) + 12|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (($$sroa$06$0) + 16|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ($28|0)==($30|0);
   if ($31) {
    $32 = HEAP32[$$sroa$06$0>>2]|0;
    $33 = (($32) + 36|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (FUNCTION_TABLE_ii[$34 & 127]($$sroa$06$0)|0);
    $$0$i$i1$i$i9$i = $35;
   } else {
    $36 = HEAP32[$28>>2]|0;
    $$0$i$i1$i$i9$i = $36;
   }
   $37 = ($$0$i$i1$i$i9$i|0)==(-1);
   if ($37) {
    label = 19;
   } else {
    if ($146) {
     $$sroa$06$2 = $$sroa$06$0;
    } else {
     $$pre$i3$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
     break;
    }
   }
  }
  if ((label|0) == 19) {
   label = 0;
   if ($146) {
    $$pre$i3$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $38 = HEAP32[$__a_end$i>>2]|0;
  $39 = HEAP8[$__buf$i>>0]|0;
  $40 = $39 & 1;
  $41 = ($40<<24>>24)==(0);
  if ($41) {
   $43 = $39&255;
   $44 = $43 >>> 1;
   $46 = $44;
  } else {
   $42 = HEAP32[$12>>2]|0;
   $46 = $42;
  }
  $45 = (($__a$0$i) + ($46)|0);
  $47 = ($38|0)==($45|0);
  if ($47) {
   if ($41) {
    $49 = $39&255;
    $50 = $49 >>> 1;
    $52 = $50;
   } else {
    $48 = HEAP32[$12>>2]|0;
    $52 = $48;
   }
   $51 = $52 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$51);
   $53 = HEAP8[$__buf$i>>0]|0;
   $54 = $53 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $58 = 10;
   } else {
    $56 = HEAP32[$__buf$i>>2]|0;
    $57 = $56 & -2;
    $phitmp$i23$i = (($57) + -1)|0;
    $58 = $phitmp$i23$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$58);
   $59 = HEAP8[$__buf$i>>0]|0;
   $60 = $59 & 1;
   $61 = ($60<<24>>24)==(0);
   if ($61) {
    $64 = $$pre$phi33$iZ2D;
   } else {
    $62 = HEAP32[$$pre$phi35$iZ2D>>2]|0;
    $64 = $62;
   }
   $63 = (($64) + ($52)|0);
   HEAP32[$__a_end$i>>2] = $63;
   $__a$1$i = $64;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $65 = (($66) + 12|0);
  $67 = HEAP32[$65>>2]|0;
  $68 = (($66) + 16|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67|0)==($69|0);
  if ($70) {
   $71 = HEAP32[$66>>2]|0;
   $72 = (($71) + 36|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = (FUNCTION_TABLE_ii[$73 & 127]($66)|0);
   $$0$i$i$i = $74;
  } else {
   $75 = HEAP32[$67>>2]|0;
   $$0$i$i$i = $75;
  }
  $76 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i$i,$$0$i$i,$__a$1$i,$__a_end$i,$__dc$i,$13,$__grouping$i,$__g$i,$__g_end$i,$__atoms$i)|0);
  $77 = ($76|0)==(0);
  if (!($77)) {
   $$pre$i3$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $78 = HEAP32[$65>>2]|0;
  $79 = HEAP32[$68>>2]|0;
  $80 = ($78|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$66>>2]|0;
   $82 = (($81) + 40|0);
   $83 = HEAP32[$82>>2]|0;
   (FUNCTION_TABLE_ii[$83 & 127]($66)|0);
   $$pre$i$i$i5$i = $66;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $84 = (($78) + 4|0);
   HEAP32[$65>>2] = $84;
   $$pre$i$i$i5$i = $66;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $85 = HEAP8[$__grouping$i>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 if ($87) {
  $90 = $85&255;
  $91 = $90 >>> 1;
  $93 = $91;
 } else {
  $88 = (($__grouping$i) + 4|0);
  $89 = HEAP32[$88>>2]|0;
  $93 = $89;
 }
 $92 = ($93|0)==(0);
 if (!($92)) {
  $94 = HEAP32[$__g_end$i>>2]|0;
  $95 = $94;
  $96 = $__g$i;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc$i>>2]|0;
   $100 = (($94) + 4|0);
   HEAP32[$__g_end$i>>2] = $100;
   HEAP32[$94>>2] = $99;
  }
 }
 $101 = HEAP32[$__a_end$i>>2]|0;
 $102 = (__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a$2$i,$101,$__err,$$0$i$i)|0);
 $103 = tempRet0;
 $104 = $__v;
 $105 = $104;
 HEAP32[$105>>2] = $102;
 $106 = (($104) + 4)|0;
 $107 = $106;
 HEAP32[$107>>2] = $103;
 $108 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$108,$__err);
 $109 = ($66|0)==(0|0);
 if ($109) {
  $135 = 0;$147 = 1;
 } else {
  $110 = (($66) + 12|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = (($66) + 16|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ($111|0)==($113|0);
  if ($114) {
   $115 = HEAP32[$66>>2]|0;
   $116 = (($115) + 36|0);
   $117 = HEAP32[$116>>2]|0;
   $118 = (FUNCTION_TABLE_ii[$117 & 127]($66)|0);
   $$0$i$i$i$i$i = $118;
  } else {
   $119 = HEAP32[$111>>2]|0;
   $$0$i$i$i$i$i = $119;
  }
  $120 = ($$0$i$i$i$i$i|0)==(-1);
  $$7 = $120 ? 0 : $66;
  $$8 = $120 ? 1 : 0;
  $135 = $$7;$147 = $$8;
 }
 $121 = ($$pre$i3$i$i$i|0)==(0|0);
 if ($121) {
  label = 56;
 } else {
  $122 = (($$pre$i3$i$i$i) + 12|0);
  $123 = HEAP32[$122>>2]|0;
  $124 = (($$pre$i3$i$i$i) + 16|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = ($123|0)==($125|0);
  if ($126) {
   $127 = HEAP32[$$pre$i3$i$i$i>>2]|0;
   $128 = (($127) + 36|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = (FUNCTION_TABLE_ii[$129 & 127]($$pre$i3$i$i$i)|0);
   $$0$i$i1$i$i$i = $130;
  } else {
   $131 = HEAP32[$123>>2]|0;
   $$0$i$i1$i$i$i = $131;
  }
  $132 = ($$0$i$i1$i$i$i|0)==(-1);
  if ($132) {
   label = 56;
  } else {
   if (!($147)) {
    label = 58;
   }
  }
 }
 if ((label|0) == 56) {
  if ($147) {
   label = 58;
  }
 }
 if ((label|0) == 58) {
  $133 = HEAP32[$__err>>2]|0;
  $134 = $133 | 2;
  HEAP32[$__err>>2] = $134;
 }
 HEAP32[$agg$result>>2] = $135;
 $136 = HEAP8[$__buf$i>>0]|0;
 $137 = $136 & 1;
 $138 = ($137<<24>>24)==(0);
 if (!($138)) {
  $139 = (($__buf$i) + 8|0);
  $140 = HEAP32[$139>>2]|0;
  _free($140);
 }
 $141 = HEAP8[$__grouping$i>>0]|0;
 $142 = $141 & 1;
 $143 = ($142<<24>>24)==(0);
 if ($143) {
  STACKTOP = sp;return;
 }
 $144 = (($__grouping$i) + 8|0);
 $145 = HEAP32[$144>>2]|0;
 _free($145);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i6$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i4$i = 0, $$0$i$i1$i$i$i = 0, $$0$i$i1$i$i10$i = 0, $$7 = 0, $$8 = 0, $$pre$i$i$i6$i = 0, $$pre$i3$i$i$i = 0, $$pre$phi34$iZ2D = 0, $$pre$phi36$iZ2D = 0, $$pre33$i = 0, $$pre35$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0.0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__decimal_point$i = 0, $__exp$i = 0, $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__in_units$i = 0, $__thousands_sep$i = 0, $or$cond$i = 0, $phitmp$i24$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms$i = sp + 208|0;
 $__decimal_point$i = sp + 184|0;
 $__thousands_sep$i = sp + 4|0;
 $__grouping$i = sp + 8|0;
 $__buf$i = sp + 196|0;
 $__a_end$i = sp;
 $__g$i = sp + 24|0;
 $__g_end$i = sp + 192|0;
 $__dc$i = sp + 188|0;
 $__in_units$i = sp + 337|0;
 $__exp$i = sp + 336|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping$i,$__iob,$__atoms$i,$__decimal_point$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $2 = HEAP8[$__buf$i>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($__buf$i) + 1|0);
  $$pre35$i = (($__buf$i) + 8|0);
  $$pre$phi34$iZ2D = $7;$$pre$phi36$iZ2D = $$pre35$i;$8 = $7;
 } else {
  $5 = (($__buf$i) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $$pre33$i = (($__buf$i) + 1|0);
  $$pre$phi34$iZ2D = $$pre33$i;$$pre$phi36$iZ2D = $5;$8 = $6;
 }
 HEAP32[$__a_end$i>>2] = $8;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 HEAP8[$__in_units$i>>0] = 1;
 HEAP8[$__exp$i>>0] = 69;
 $9 = (($__buf$i) + 4|0);
 $10 = HEAP32[$__decimal_point$i>>2]|0;
 $11 = HEAP32[$__thousands_sep$i>>2]|0;
 $$pre$i$i$i6$i = $0;$$sroa$06$0 = $1;$__a$0$i = $8;
 while(1) {
  $12 = ($$pre$i$i$i6$i|0)==(0|0);
  if ($12) {
   $141 = 1;$64 = 0;
  } else {
   $13 = (($$pre$i$i$i6$i) + 12|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = (($$pre$i$i$i6$i) + 16|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ($14|0)==($16|0);
   if ($17) {
    $18 = HEAP32[$$pre$i$i$i6$i>>2]|0;
    $19 = (($18) + 36|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = (FUNCTION_TABLE_ii[$20 & 127]($$pre$i$i$i6$i)|0);
    $$0$i$i$i$i4$i = $21;
   } else {
    $22 = HEAP32[$14>>2]|0;
    $$0$i$i$i$i4$i = $22;
   }
   $23 = ($$0$i$i$i$i4$i|0)==(-1);
   $$$pre$i$i$i6$i = $23 ? 0 : $$pre$i$i$i6$i;
   $$ = $23 ? 1 : 0;
   $141 = $$;$64 = $$$pre$i$i$i6$i;
  }
  $24 = ($$sroa$06$0|0)==(0|0);
  if ($24) {
   label = 15;
  } else {
   $25 = (($$sroa$06$0) + 12|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = (($$sroa$06$0) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($26|0)==($28|0);
   if ($29) {
    $30 = HEAP32[$$sroa$06$0>>2]|0;
    $31 = (($30) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 127]($$sroa$06$0)|0);
    $$0$i$i1$i$i10$i = $33;
   } else {
    $34 = HEAP32[$26>>2]|0;
    $$0$i$i1$i$i10$i = $34;
   }
   $35 = ($$0$i$i1$i$i10$i|0)==(-1);
   if ($35) {
    label = 15;
   } else {
    if ($141) {
     $$sroa$06$2 = $$sroa$06$0;
    } else {
     $$pre$i3$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
     break;
    }
   }
  }
  if ((label|0) == 15) {
   label = 0;
   if ($141) {
    $$pre$i3$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $36 = HEAP32[$__a_end$i>>2]|0;
  $37 = HEAP8[$__buf$i>>0]|0;
  $38 = $37 & 1;
  $39 = ($38<<24>>24)==(0);
  if ($39) {
   $41 = $37&255;
   $42 = $41 >>> 1;
   $44 = $42;
  } else {
   $40 = HEAP32[$9>>2]|0;
   $44 = $40;
  }
  $43 = (($__a$0$i) + ($44)|0);
  $45 = ($36|0)==($43|0);
  if ($45) {
   if ($39) {
    $47 = $37&255;
    $48 = $47 >>> 1;
    $50 = $48;
   } else {
    $46 = HEAP32[$9>>2]|0;
    $50 = $46;
   }
   $49 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$49);
   $51 = HEAP8[$__buf$i>>0]|0;
   $52 = $51 & 1;
   $53 = ($52<<24>>24)==(0);
   if ($53) {
    $56 = 10;
   } else {
    $54 = HEAP32[$__buf$i>>2]|0;
    $55 = $54 & -2;
    $phitmp$i24$i = (($55) + -1)|0;
    $56 = $phitmp$i24$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$56);
   $57 = HEAP8[$__buf$i>>0]|0;
   $58 = $57 & 1;
   $59 = ($58<<24>>24)==(0);
   if ($59) {
    $62 = $$pre$phi34$iZ2D;
   } else {
    $60 = HEAP32[$$pre$phi36$iZ2D>>2]|0;
    $62 = $60;
   }
   $61 = (($62) + ($50)|0);
   HEAP32[$__a_end$i>>2] = $61;
   $__a$1$i = $62;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $63 = (($64) + 12|0);
  $65 = HEAP32[$63>>2]|0;
  $66 = (($64) + 16|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ($65|0)==($67|0);
  if ($68) {
   $69 = HEAP32[$64>>2]|0;
   $70 = (($69) + 36|0);
   $71 = HEAP32[$70>>2]|0;
   $72 = (FUNCTION_TABLE_ii[$71 & 127]($64)|0);
   $$0$i$i$i = $72;
  } else {
   $73 = HEAP32[$65>>2]|0;
   $$0$i$i$i = $73;
  }
  $74 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i$i,$__in_units$i,$__exp$i,$__a$1$i,$__a_end$i,$10,$11,$__grouping$i,$__g$i,$__g_end$i,$__dc$i,$__atoms$i)|0);
  $75 = ($74|0)==(0);
  if (!($75)) {
   $$pre$i3$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $76 = HEAP32[$63>>2]|0;
  $77 = HEAP32[$66>>2]|0;
  $78 = ($76|0)==($77|0);
  if ($78) {
   $79 = HEAP32[$64>>2]|0;
   $80 = (($79) + 40|0);
   $81 = HEAP32[$80>>2]|0;
   (FUNCTION_TABLE_ii[$81 & 127]($64)|0);
   $$pre$i$i$i6$i = $64;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $82 = (($76) + 4|0);
   HEAP32[$63>>2] = $82;
   $$pre$i$i$i6$i = $64;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $83 = HEAP8[$__grouping$i>>0]|0;
 $84 = $83 & 1;
 $85 = ($84<<24>>24)==(0);
 if ($85) {
  $88 = $83&255;
  $89 = $88 >>> 1;
  $91 = $89;
 } else {
  $86 = (($__grouping$i) + 4|0);
  $87 = HEAP32[$86>>2]|0;
  $91 = $87;
 }
 $90 = ($91|0)==(0);
 $92 = HEAP8[$__in_units$i>>0]|0;
 $93 = ($92<<24>>24)==(0);
 $or$cond$i = $90 | $93;
 if (!($or$cond$i)) {
  $94 = HEAP32[$__g_end$i>>2]|0;
  $95 = $94;
  $96 = $__g$i;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc$i>>2]|0;
   $100 = (($94) + 4|0);
   HEAP32[$__g_end$i>>2] = $100;
   HEAP32[$94>>2] = $99;
  }
 }
 $101 = HEAP32[$__a_end$i>>2]|0;
 $102 = (+__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a$2$i,$101,$__err));
 HEAPF32[$__v>>2] = $102;
 $103 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$103,$__err);
 $104 = ($64|0)==(0|0);
 if ($104) {
  $130 = 0;$142 = 1;
 } else {
  $105 = (($64) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($64) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$64>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($64)|0);
   $$0$i$i$i$i$i = $113;
  } else {
   $114 = HEAP32[$106>>2]|0;
   $$0$i$i$i$i$i = $114;
  }
  $115 = ($$0$i$i$i$i$i|0)==(-1);
  $$7 = $115 ? 0 : $64;
  $$8 = $115 ? 1 : 0;
  $130 = $$7;$142 = $$8;
 }
 $116 = ($$pre$i3$i$i$i|0)==(0|0);
 if ($116) {
  label = 52;
 } else {
  $117 = (($$pre$i3$i$i$i) + 12|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (($$pre$i3$i$i$i) + 16|0);
  $120 = HEAP32[$119>>2]|0;
  $121 = ($118|0)==($120|0);
  if ($121) {
   $122 = HEAP32[$$pre$i3$i$i$i>>2]|0;
   $123 = (($122) + 36|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = (FUNCTION_TABLE_ii[$124 & 127]($$pre$i3$i$i$i)|0);
   $$0$i$i1$i$i$i = $125;
  } else {
   $126 = HEAP32[$118>>2]|0;
   $$0$i$i1$i$i$i = $126;
  }
  $127 = ($$0$i$i1$i$i$i|0)==(-1);
  if ($127) {
   label = 52;
  } else {
   if (!($142)) {
    label = 54;
   }
  }
 }
 if ((label|0) == 52) {
  if ($142) {
   label = 54;
  }
 }
 if ((label|0) == 54) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $130;
 $131 = HEAP8[$__buf$i>>0]|0;
 $132 = $131 & 1;
 $133 = ($132<<24>>24)==(0);
 if (!($133)) {
  $134 = (($__buf$i) + 8|0);
  $135 = HEAP32[$134>>2]|0;
  _free($135);
 }
 $136 = HEAP8[$__grouping$i>>0]|0;
 $137 = $136 & 1;
 $138 = ($137<<24>>24)==(0);
 if ($138) {
  STACKTOP = sp;return;
 }
 $139 = (($__grouping$i) + 8|0);
 $140 = HEAP32[$139>>2]|0;
 _free($140);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i6$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i4$i = 0, $$0$i$i1$i$i$i = 0, $$0$i$i1$i$i10$i = 0, $$7 = 0, $$8 = 0, $$pre$i$i$i6$i = 0, $$pre$i3$i$i$i = 0, $$pre$phi34$iZ2D = 0, $$pre$phi36$iZ2D = 0, $$pre33$i = 0, $$pre35$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0.0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__decimal_point$i = 0, $__exp$i = 0, $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__in_units$i = 0, $__thousands_sep$i = 0, $or$cond$i = 0, $phitmp$i24$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms$i = sp + 208|0;
 $__decimal_point$i = sp + 184|0;
 $__thousands_sep$i = sp + 4|0;
 $__grouping$i = sp + 8|0;
 $__buf$i = sp + 196|0;
 $__a_end$i = sp;
 $__g$i = sp + 24|0;
 $__g_end$i = sp + 192|0;
 $__dc$i = sp + 188|0;
 $__in_units$i = sp + 337|0;
 $__exp$i = sp + 336|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping$i,$__iob,$__atoms$i,$__decimal_point$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $2 = HEAP8[$__buf$i>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($__buf$i) + 1|0);
  $$pre35$i = (($__buf$i) + 8|0);
  $$pre$phi34$iZ2D = $7;$$pre$phi36$iZ2D = $$pre35$i;$8 = $7;
 } else {
  $5 = (($__buf$i) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $$pre33$i = (($__buf$i) + 1|0);
  $$pre$phi34$iZ2D = $$pre33$i;$$pre$phi36$iZ2D = $5;$8 = $6;
 }
 HEAP32[$__a_end$i>>2] = $8;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 HEAP8[$__in_units$i>>0] = 1;
 HEAP8[$__exp$i>>0] = 69;
 $9 = (($__buf$i) + 4|0);
 $10 = HEAP32[$__decimal_point$i>>2]|0;
 $11 = HEAP32[$__thousands_sep$i>>2]|0;
 $$pre$i$i$i6$i = $0;$$sroa$06$0 = $1;$__a$0$i = $8;
 while(1) {
  $12 = ($$pre$i$i$i6$i|0)==(0|0);
  if ($12) {
   $141 = 1;$64 = 0;
  } else {
   $13 = (($$pre$i$i$i6$i) + 12|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = (($$pre$i$i$i6$i) + 16|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ($14|0)==($16|0);
   if ($17) {
    $18 = HEAP32[$$pre$i$i$i6$i>>2]|0;
    $19 = (($18) + 36|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = (FUNCTION_TABLE_ii[$20 & 127]($$pre$i$i$i6$i)|0);
    $$0$i$i$i$i4$i = $21;
   } else {
    $22 = HEAP32[$14>>2]|0;
    $$0$i$i$i$i4$i = $22;
   }
   $23 = ($$0$i$i$i$i4$i|0)==(-1);
   $$$pre$i$i$i6$i = $23 ? 0 : $$pre$i$i$i6$i;
   $$ = $23 ? 1 : 0;
   $141 = $$;$64 = $$$pre$i$i$i6$i;
  }
  $24 = ($$sroa$06$0|0)==(0|0);
  if ($24) {
   label = 15;
  } else {
   $25 = (($$sroa$06$0) + 12|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = (($$sroa$06$0) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($26|0)==($28|0);
   if ($29) {
    $30 = HEAP32[$$sroa$06$0>>2]|0;
    $31 = (($30) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 127]($$sroa$06$0)|0);
    $$0$i$i1$i$i10$i = $33;
   } else {
    $34 = HEAP32[$26>>2]|0;
    $$0$i$i1$i$i10$i = $34;
   }
   $35 = ($$0$i$i1$i$i10$i|0)==(-1);
   if ($35) {
    label = 15;
   } else {
    if ($141) {
     $$sroa$06$2 = $$sroa$06$0;
    } else {
     $$pre$i3$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
     break;
    }
   }
  }
  if ((label|0) == 15) {
   label = 0;
   if ($141) {
    $$pre$i3$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $36 = HEAP32[$__a_end$i>>2]|0;
  $37 = HEAP8[$__buf$i>>0]|0;
  $38 = $37 & 1;
  $39 = ($38<<24>>24)==(0);
  if ($39) {
   $41 = $37&255;
   $42 = $41 >>> 1;
   $44 = $42;
  } else {
   $40 = HEAP32[$9>>2]|0;
   $44 = $40;
  }
  $43 = (($__a$0$i) + ($44)|0);
  $45 = ($36|0)==($43|0);
  if ($45) {
   if ($39) {
    $47 = $37&255;
    $48 = $47 >>> 1;
    $50 = $48;
   } else {
    $46 = HEAP32[$9>>2]|0;
    $50 = $46;
   }
   $49 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$49);
   $51 = HEAP8[$__buf$i>>0]|0;
   $52 = $51 & 1;
   $53 = ($52<<24>>24)==(0);
   if ($53) {
    $56 = 10;
   } else {
    $54 = HEAP32[$__buf$i>>2]|0;
    $55 = $54 & -2;
    $phitmp$i24$i = (($55) + -1)|0;
    $56 = $phitmp$i24$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$56);
   $57 = HEAP8[$__buf$i>>0]|0;
   $58 = $57 & 1;
   $59 = ($58<<24>>24)==(0);
   if ($59) {
    $62 = $$pre$phi34$iZ2D;
   } else {
    $60 = HEAP32[$$pre$phi36$iZ2D>>2]|0;
    $62 = $60;
   }
   $61 = (($62) + ($50)|0);
   HEAP32[$__a_end$i>>2] = $61;
   $__a$1$i = $62;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $63 = (($64) + 12|0);
  $65 = HEAP32[$63>>2]|0;
  $66 = (($64) + 16|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ($65|0)==($67|0);
  if ($68) {
   $69 = HEAP32[$64>>2]|0;
   $70 = (($69) + 36|0);
   $71 = HEAP32[$70>>2]|0;
   $72 = (FUNCTION_TABLE_ii[$71 & 127]($64)|0);
   $$0$i$i$i = $72;
  } else {
   $73 = HEAP32[$65>>2]|0;
   $$0$i$i$i = $73;
  }
  $74 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i$i,$__in_units$i,$__exp$i,$__a$1$i,$__a_end$i,$10,$11,$__grouping$i,$__g$i,$__g_end$i,$__dc$i,$__atoms$i)|0);
  $75 = ($74|0)==(0);
  if (!($75)) {
   $$pre$i3$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $76 = HEAP32[$63>>2]|0;
  $77 = HEAP32[$66>>2]|0;
  $78 = ($76|0)==($77|0);
  if ($78) {
   $79 = HEAP32[$64>>2]|0;
   $80 = (($79) + 40|0);
   $81 = HEAP32[$80>>2]|0;
   (FUNCTION_TABLE_ii[$81 & 127]($64)|0);
   $$pre$i$i$i6$i = $64;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $82 = (($76) + 4|0);
   HEAP32[$63>>2] = $82;
   $$pre$i$i$i6$i = $64;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $83 = HEAP8[$__grouping$i>>0]|0;
 $84 = $83 & 1;
 $85 = ($84<<24>>24)==(0);
 if ($85) {
  $88 = $83&255;
  $89 = $88 >>> 1;
  $91 = $89;
 } else {
  $86 = (($__grouping$i) + 4|0);
  $87 = HEAP32[$86>>2]|0;
  $91 = $87;
 }
 $90 = ($91|0)==(0);
 $92 = HEAP8[$__in_units$i>>0]|0;
 $93 = ($92<<24>>24)==(0);
 $or$cond$i = $90 | $93;
 if (!($or$cond$i)) {
  $94 = HEAP32[$__g_end$i>>2]|0;
  $95 = $94;
  $96 = $__g$i;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc$i>>2]|0;
   $100 = (($94) + 4|0);
   HEAP32[$__g_end$i>>2] = $100;
   HEAP32[$94>>2] = $99;
  }
 }
 $101 = HEAP32[$__a_end$i>>2]|0;
 $102 = (+__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a$2$i,$101,$__err));
 HEAPF64[$__v>>3] = $102;
 $103 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$103,$__err);
 $104 = ($64|0)==(0|0);
 if ($104) {
  $130 = 0;$142 = 1;
 } else {
  $105 = (($64) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($64) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$64>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($64)|0);
   $$0$i$i$i$i$i = $113;
  } else {
   $114 = HEAP32[$106>>2]|0;
   $$0$i$i$i$i$i = $114;
  }
  $115 = ($$0$i$i$i$i$i|0)==(-1);
  $$7 = $115 ? 0 : $64;
  $$8 = $115 ? 1 : 0;
  $130 = $$7;$142 = $$8;
 }
 $116 = ($$pre$i3$i$i$i|0)==(0|0);
 if ($116) {
  label = 52;
 } else {
  $117 = (($$pre$i3$i$i$i) + 12|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (($$pre$i3$i$i$i) + 16|0);
  $120 = HEAP32[$119>>2]|0;
  $121 = ($118|0)==($120|0);
  if ($121) {
   $122 = HEAP32[$$pre$i3$i$i$i>>2]|0;
   $123 = (($122) + 36|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = (FUNCTION_TABLE_ii[$124 & 127]($$pre$i3$i$i$i)|0);
   $$0$i$i1$i$i$i = $125;
  } else {
   $126 = HEAP32[$118>>2]|0;
   $$0$i$i1$i$i$i = $126;
  }
  $127 = ($$0$i$i1$i$i$i|0)==(-1);
  if ($127) {
   label = 52;
  } else {
   if (!($142)) {
    label = 54;
   }
  }
 }
 if ((label|0) == 52) {
  if ($142) {
   label = 54;
  }
 }
 if ((label|0) == 54) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $130;
 $131 = HEAP8[$__buf$i>>0]|0;
 $132 = $131 & 1;
 $133 = ($132<<24>>24)==(0);
 if (!($133)) {
  $134 = (($__buf$i) + 8|0);
  $135 = HEAP32[$134>>2]|0;
  _free($135);
 }
 $136 = HEAP8[$__grouping$i>>0]|0;
 $137 = $136 & 1;
 $138 = ($137<<24>>24)==(0);
 if ($138) {
  STACKTOP = sp;return;
 }
 $139 = (($__grouping$i) + 8|0);
 $140 = HEAP32[$139>>2]|0;
 _free($140);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$ = 0, $$$pre$i$i$i6$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i4$i = 0, $$0$i$i1$i$i$i = 0, $$0$i$i1$i$i10$i = 0, $$7 = 0, $$8 = 0, $$pre$i$i$i6$i = 0, $$pre$i3$i$i$i = 0, $$pre$phi34$iZ2D = 0, $$pre$phi36$iZ2D = 0, $$pre33$i = 0, $$pre35$i = 0, $$sroa$06$0 = 0, $$sroa$06$2 = 0, $0 = 0, $1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0.0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__a$0$i = 0, $__a$1$i = 0, $__a$2$i = 0, $__a_end$i = 0, $__atoms$i = 0, $__buf$i = 0, $__dc$i = 0, $__decimal_point$i = 0, $__exp$i = 0, $__g$i = 0, $__g_end$i = 0, $__grouping$i = 0, $__in_units$i = 0, $__thousands_sep$i = 0, $or$cond$i = 0, $phitmp$i24$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0;
 $__atoms$i = sp + 208|0;
 $__decimal_point$i = sp + 184|0;
 $__thousands_sep$i = sp + 4|0;
 $__grouping$i = sp + 8|0;
 $__buf$i = sp + 196|0;
 $__a_end$i = sp;
 $__g$i = sp + 24|0;
 $__g_end$i = sp + 192|0;
 $__dc$i = sp + 188|0;
 $__in_units$i = sp + 337|0;
 $__exp$i = sp + 336|0;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping$i,$__iob,$__atoms$i,$__decimal_point$i,$__thousands_sep$i);
 ;HEAP32[$__buf$i+0>>2]=0|0;HEAP32[$__buf$i+4>>2]=0|0;HEAP32[$__buf$i+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,10);
 $2 = HEAP8[$__buf$i>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($__buf$i) + 1|0);
  $$pre35$i = (($__buf$i) + 8|0);
  $$pre$phi34$iZ2D = $7;$$pre$phi36$iZ2D = $$pre35$i;$8 = $7;
 } else {
  $5 = (($__buf$i) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $$pre33$i = (($__buf$i) + 1|0);
  $$pre$phi34$iZ2D = $$pre33$i;$$pre$phi36$iZ2D = $5;$8 = $6;
 }
 HEAP32[$__a_end$i>>2] = $8;
 HEAP32[$__g_end$i>>2] = $__g$i;
 HEAP32[$__dc$i>>2] = 0;
 HEAP8[$__in_units$i>>0] = 1;
 HEAP8[$__exp$i>>0] = 69;
 $9 = (($__buf$i) + 4|0);
 $10 = HEAP32[$__decimal_point$i>>2]|0;
 $11 = HEAP32[$__thousands_sep$i>>2]|0;
 $$pre$i$i$i6$i = $0;$$sroa$06$0 = $1;$__a$0$i = $8;
 while(1) {
  $12 = ($$pre$i$i$i6$i|0)==(0|0);
  if ($12) {
   $141 = 1;$64 = 0;
  } else {
   $13 = (($$pre$i$i$i6$i) + 12|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = (($$pre$i$i$i6$i) + 16|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ($14|0)==($16|0);
   if ($17) {
    $18 = HEAP32[$$pre$i$i$i6$i>>2]|0;
    $19 = (($18) + 36|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = (FUNCTION_TABLE_ii[$20 & 127]($$pre$i$i$i6$i)|0);
    $$0$i$i$i$i4$i = $21;
   } else {
    $22 = HEAP32[$14>>2]|0;
    $$0$i$i$i$i4$i = $22;
   }
   $23 = ($$0$i$i$i$i4$i|0)==(-1);
   $$$pre$i$i$i6$i = $23 ? 0 : $$pre$i$i$i6$i;
   $$ = $23 ? 1 : 0;
   $141 = $$;$64 = $$$pre$i$i$i6$i;
  }
  $24 = ($$sroa$06$0|0)==(0|0);
  if ($24) {
   label = 15;
  } else {
   $25 = (($$sroa$06$0) + 12|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = (($$sroa$06$0) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = ($26|0)==($28|0);
   if ($29) {
    $30 = HEAP32[$$sroa$06$0>>2]|0;
    $31 = (($30) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (FUNCTION_TABLE_ii[$32 & 127]($$sroa$06$0)|0);
    $$0$i$i1$i$i10$i = $33;
   } else {
    $34 = HEAP32[$26>>2]|0;
    $$0$i$i1$i$i10$i = $34;
   }
   $35 = ($$0$i$i1$i$i10$i|0)==(-1);
   if ($35) {
    label = 15;
   } else {
    if ($141) {
     $$sroa$06$2 = $$sroa$06$0;
    } else {
     $$pre$i3$i$i$i = $$sroa$06$0;$__a$2$i = $__a$0$i;
     break;
    }
   }
  }
  if ((label|0) == 15) {
   label = 0;
   if ($141) {
    $$pre$i3$i$i$i = 0;$__a$2$i = $__a$0$i;
    break;
   } else {
    $$sroa$06$2 = 0;
   }
  }
  $36 = HEAP32[$__a_end$i>>2]|0;
  $37 = HEAP8[$__buf$i>>0]|0;
  $38 = $37 & 1;
  $39 = ($38<<24>>24)==(0);
  if ($39) {
   $41 = $37&255;
   $42 = $41 >>> 1;
   $44 = $42;
  } else {
   $40 = HEAP32[$9>>2]|0;
   $44 = $40;
  }
  $43 = (($__a$0$i) + ($44)|0);
  $45 = ($36|0)==($43|0);
  if ($45) {
   if ($39) {
    $47 = $37&255;
    $48 = $47 >>> 1;
    $50 = $48;
   } else {
    $46 = HEAP32[$9>>2]|0;
    $50 = $46;
   }
   $49 = $50 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$49);
   $51 = HEAP8[$__buf$i>>0]|0;
   $52 = $51 & 1;
   $53 = ($52<<24>>24)==(0);
   if ($53) {
    $56 = 10;
   } else {
    $54 = HEAP32[$__buf$i>>2]|0;
    $55 = $54 & -2;
    $phitmp$i24$i = (($55) + -1)|0;
    $56 = $phitmp$i24$i;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf$i,$56);
   $57 = HEAP8[$__buf$i>>0]|0;
   $58 = $57 & 1;
   $59 = ($58<<24>>24)==(0);
   if ($59) {
    $62 = $$pre$phi34$iZ2D;
   } else {
    $60 = HEAP32[$$pre$phi36$iZ2D>>2]|0;
    $62 = $60;
   }
   $61 = (($62) + ($50)|0);
   HEAP32[$__a_end$i>>2] = $61;
   $__a$1$i = $62;
  } else {
   $__a$1$i = $__a$0$i;
  }
  $63 = (($64) + 12|0);
  $65 = HEAP32[$63>>2]|0;
  $66 = (($64) + 16|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ($65|0)==($67|0);
  if ($68) {
   $69 = HEAP32[$64>>2]|0;
   $70 = (($69) + 36|0);
   $71 = HEAP32[$70>>2]|0;
   $72 = (FUNCTION_TABLE_ii[$71 & 127]($64)|0);
   $$0$i$i$i = $72;
  } else {
   $73 = HEAP32[$65>>2]|0;
   $$0$i$i$i = $73;
  }
  $74 = (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i$i,$__in_units$i,$__exp$i,$__a$1$i,$__a_end$i,$10,$11,$__grouping$i,$__g$i,$__g_end$i,$__dc$i,$__atoms$i)|0);
  $75 = ($74|0)==(0);
  if (!($75)) {
   $$pre$i3$i$i$i = $$sroa$06$2;$__a$2$i = $__a$1$i;
   break;
  }
  $76 = HEAP32[$63>>2]|0;
  $77 = HEAP32[$66>>2]|0;
  $78 = ($76|0)==($77|0);
  if ($78) {
   $79 = HEAP32[$64>>2]|0;
   $80 = (($79) + 40|0);
   $81 = HEAP32[$80>>2]|0;
   (FUNCTION_TABLE_ii[$81 & 127]($64)|0);
   $$pre$i$i$i6$i = $64;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  } else {
   $82 = (($76) + 4|0);
   HEAP32[$63>>2] = $82;
   $$pre$i$i$i6$i = $64;$$sroa$06$0 = $$sroa$06$2;$__a$0$i = $__a$1$i;
   continue;
  }
 }
 $83 = HEAP8[$__grouping$i>>0]|0;
 $84 = $83 & 1;
 $85 = ($84<<24>>24)==(0);
 if ($85) {
  $88 = $83&255;
  $89 = $88 >>> 1;
  $91 = $89;
 } else {
  $86 = (($__grouping$i) + 4|0);
  $87 = HEAP32[$86>>2]|0;
  $91 = $87;
 }
 $90 = ($91|0)==(0);
 $92 = HEAP8[$__in_units$i>>0]|0;
 $93 = ($92<<24>>24)==(0);
 $or$cond$i = $90 | $93;
 if (!($or$cond$i)) {
  $94 = HEAP32[$__g_end$i>>2]|0;
  $95 = $94;
  $96 = $__g$i;
  $97 = (($95) - ($96))|0;
  $98 = ($97|0)<(160);
  if ($98) {
   $99 = HEAP32[$__dc$i>>2]|0;
   $100 = (($94) + 4|0);
   HEAP32[$__g_end$i>>2] = $100;
   HEAP32[$94>>2] = $99;
  }
 }
 $101 = HEAP32[$__a_end$i>>2]|0;
 $102 = (+__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a$2$i,$101,$__err));
 HEAPF64[$__v>>3] = $102;
 $103 = HEAP32[$__g_end$i>>2]|0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping$i,$__g$i,$103,$__err);
 $104 = ($64|0)==(0|0);
 if ($104) {
  $130 = 0;$142 = 1;
 } else {
  $105 = (($64) + 12|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($64) + 16|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = ($106|0)==($108|0);
  if ($109) {
   $110 = HEAP32[$64>>2]|0;
   $111 = (($110) + 36|0);
   $112 = HEAP32[$111>>2]|0;
   $113 = (FUNCTION_TABLE_ii[$112 & 127]($64)|0);
   $$0$i$i$i$i$i = $113;
  } else {
   $114 = HEAP32[$106>>2]|0;
   $$0$i$i$i$i$i = $114;
  }
  $115 = ($$0$i$i$i$i$i|0)==(-1);
  $$7 = $115 ? 0 : $64;
  $$8 = $115 ? 1 : 0;
  $130 = $$7;$142 = $$8;
 }
 $116 = ($$pre$i3$i$i$i|0)==(0|0);
 if ($116) {
  label = 52;
 } else {
  $117 = (($$pre$i3$i$i$i) + 12|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (($$pre$i3$i$i$i) + 16|0);
  $120 = HEAP32[$119>>2]|0;
  $121 = ($118|0)==($120|0);
  if ($121) {
   $122 = HEAP32[$$pre$i3$i$i$i>>2]|0;
   $123 = (($122) + 36|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = (FUNCTION_TABLE_ii[$124 & 127]($$pre$i3$i$i$i)|0);
   $$0$i$i1$i$i$i = $125;
  } else {
   $126 = HEAP32[$118>>2]|0;
   $$0$i$i1$i$i$i = $126;
  }
  $127 = ($$0$i$i1$i$i$i|0)==(-1);
  if ($127) {
   label = 52;
  } else {
   if (!($142)) {
    label = 54;
   }
  }
 }
 if ((label|0) == 52) {
  if ($142) {
   label = 54;
  }
 }
 if ((label|0) == 54) {
  $128 = HEAP32[$__err>>2]|0;
  $129 = $128 | 2;
  HEAP32[$__err>>2] = $129;
 }
 HEAP32[$agg$result>>2] = $130;
 $131 = HEAP8[$__buf$i>>0]|0;
 $132 = $131 & 1;
 $133 = ($132<<24>>24)==(0);
 if (!($133)) {
  $134 = (($__buf$i) + 8|0);
  $135 = HEAP32[$134>>2]|0;
  _free($135);
 }
 $136 = HEAP8[$__grouping$i>>0]|0;
 $137 = $136 & 1;
 $138 = ($137<<24>>24)==(0);
 if ($138) {
  STACKTOP = sp;return;
 }
 $139 = (($__grouping$i) + 8|0);
 $140 = HEAP32[$139>>2]|0;
 _free($140);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($agg$result,$this,$__b,$__e,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i7 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i13 = 0, $$idx = 0, $$idx$val = 0, $$idx6 = 0, $$idx6$val = 0, $$pre = 0, $$pre$i$i$i9 = 0, $$pre$i3$i$i = 0, $$pre$phi38Z2D = 0, $$pre$phi40Z2D = 0, $$pre37 = 0, $$pre39 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $phitmp$i28 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320|0;
 $vararg_buffer = sp;
 $__atoms = sp + 168|0;
 $__grouping = sp + 288|0;
 $__buf = sp + 276|0;
 $__a_end = sp + 300|0;
 $__g = sp + 8|0;
 $__g_end = sp + 272|0;
 $__dc = sp + 304|0;
 ;HEAP32[$__grouping+0>>2]=0|0;HEAP32[$__grouping+4>>2]=0|0;HEAP32[$__grouping+8>>2]=0|0;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx = (($1) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx6 = (($1) + 12|0);
 $$idx6$val = HEAP32[$$idx6>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx6$val,$4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 48|0);
 $8 = HEAP32[$7>>2]|0;
 (FUNCTION_TABLE_iiiii[$8 & 31]($5,39184,((39184 + 26|0)),$__atoms)|0);
 $9 = (($1) + 4|0);
 $10 = HEAP32[$9>>2]|0;HEAP32[$9>>2] = (($10+-1)|0);
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = HEAP32[$1>>2]|0;
  $13 = (($12) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  FUNCTION_TABLE_vi[$14 & 255]($1);
 }
 ;HEAP32[$__buf+0>>2]=0|0;HEAP32[$__buf+4>>2]=0|0;HEAP32[$__buf+8>>2]=0|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,10);
 $15 = HEAP8[$__buf>>0]|0;
 $16 = $15 & 1;
 $17 = ($16<<24>>24)==(0);
 if ($17) {
  $20 = (($__buf) + 1|0);
  $$pre39 = (($__buf) + 8|0);
  $$pre$phi38Z2D = $20;$$pre$phi40Z2D = $$pre39;$21 = $20;
 } else {
  $18 = (($__buf) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $$pre37 = (($__buf) + 1|0);
  $$pre$phi38Z2D = $$pre37;$$pre$phi40Z2D = $18;$21 = $19;
 }
 HEAP32[$__a_end>>2] = $21;
 HEAP32[$__g_end>>2] = $__g;
 HEAP32[$__dc>>2] = 0;
 $22 = (($__buf) + 4|0);
 $$pre = HEAP32[$__b>>2]|0;
 $$pre$i$i$i9 = $$pre;$__a$0 = $21;
 L8: while(1) {
  $23 = ($$pre$i$i$i9|0)==(0|0);
  if ($23) {
   $144 = 1;$76 = 0;
  } else {
   $24 = (($$pre$i$i$i9) + 12|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (($$pre$i$i$i9) + 16|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = ($25|0)==($27|0);
   if ($28) {
    $29 = HEAP32[$$pre$i$i$i9>>2]|0;
    $30 = (($29) + 36|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = (FUNCTION_TABLE_ii[$31 & 127]($$pre$i$i$i9)|0);
    $$0$i$i$i$i7 = $32;
   } else {
    $33 = HEAP32[$25>>2]|0;
    $$0$i$i$i$i7 = $33;
   }
   $34 = ($$0$i$i$i$i7|0)==(-1);
   if ($34) {
    HEAP32[$__b>>2] = 0;
    $144 = 1;$76 = 0;
   } else {
    $144 = 0;$76 = $$pre$i$i$i9;
   }
  }
  $35 = HEAP32[$__e>>2]|0;
  $36 = ($35|0)==(0|0);
  do {
   if ($36) {
    label = 19;
   } else {
    $37 = (($35) + 12|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = (($35) + 16|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = ($38|0)==($40|0);
    if ($41) {
     $42 = HEAP32[$35>>2]|0;
     $43 = (($42) + 36|0);
     $44 = HEAP32[$43>>2]|0;
     $45 = (FUNCTION_TABLE_ii[$44 & 127]($35)|0);
     $$0$i$i1$i$i13 = $45;
    } else {
     $46 = HEAP32[$38>>2]|0;
     $$0$i$i1$i$i13 = $46;
    }
    $47 = ($$0$i$i1$i$i13|0)==(-1);
    if ($47) {
     HEAP32[$__e>>2] = 0;
     label = 19;
     break;
    } else {
     if ($144) {
      $145 = $35;
      break;
     } else {
      $$pre$i3$i$i = $35;$__a$2 = $__a$0;
      break L8;
     }
    }
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   if ($144) {
    $$pre$i3$i$i = 0;$__a$2 = $__a$0;
    break;
   } else {
    $145 = 0;
   }
  }
  $48 = HEAP32[$__a_end>>2]|0;
  $49 = HEAP8[$__buf>>0]|0;
  $50 = $49 & 1;
  $51 = ($50<<24>>24)==(0);
  if ($51) {
   $53 = $49&255;
   $54 = $53 >>> 1;
   $56 = $54;
  } else {
   $52 = HEAP32[$22>>2]|0;
   $56 = $52;
  }
  $55 = (($__a$0) + ($56)|0);
  $57 = ($48|0)==($55|0);
  if ($57) {
   if ($51) {
    $59 = $49&255;
    $60 = $59 >>> 1;
    $62 = $60;
   } else {
    $58 = HEAP32[$22>>2]|0;
    $62 = $58;
   }
   $61 = $62 << 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$61);
   $63 = HEAP8[$__buf>>0]|0;
   $64 = $63 & 1;
   $65 = ($64<<24>>24)==(0);
   if ($65) {
    $68 = 10;
   } else {
    $66 = HEAP32[$__buf>>2]|0;
    $67 = $66 & -2;
    $phitmp$i28 = (($67) + -1)|0;
    $68 = $phitmp$i28;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$68);
   $69 = HEAP8[$__buf>>0]|0;
   $70 = $69 & 1;
   $71 = ($70<<24>>24)==(0);
   if ($71) {
    $74 = $$pre$phi38Z2D;
   } else {
    $72 = HEAP32[$$pre$phi40Z2D>>2]|0;
    $74 = $72;
   }
   $73 = (($74) + ($62)|0);
   HEAP32[$__a_end>>2] = $73;
   $__a$1 = $74;
  } else {
   $__a$1 = $__a$0;
  }
  $75 = (($76) + 12|0);
  $77 = HEAP32[$75>>2]|0;
  $78 = (($76) + 16|0);
  $79 = HEAP32[$78>>2]|0;
  $80 = ($77|0)==($79|0);
  if ($80) {
   $81 = HEAP32[$76>>2]|0;
   $82 = (($81) + 36|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = (FUNCTION_TABLE_ii[$83 & 127]($76)|0);
   $$0$i$i = $84;
  } else {
   $85 = HEAP32[$77>>2]|0;
   $$0$i$i = $85;
  }
  $86 = (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i,16,$__a$1,$__a_end,$__dc,0,$__grouping,$__g,$__g_end,$__atoms)|0);
  $87 = ($86|0)==(0);
  if (!($87)) {
   $$pre$i3$i$i = $145;$__a$2 = $__a$1;
   break;
  }
  $88 = HEAP32[$75>>2]|0;
  $89 = HEAP32[$78>>2]|0;
  $90 = ($88|0)==($89|0);
  if ($90) {
   $91 = HEAP32[$76>>2]|0;
   $92 = (($91) + 40|0);
   $93 = HEAP32[$92>>2]|0;
   (FUNCTION_TABLE_ii[$93 & 127]($76)|0);
   $$pre$i$i$i9 = $76;$__a$0 = $__a$1;
   continue;
  } else {
   $94 = (($88) + 4|0);
   HEAP32[$75>>2] = $94;
   $$pre$i$i$i9 = $76;$__a$0 = $__a$1;
   continue;
  }
 }
 $95 = HEAP32[$__a_end>>2]|0;
 $96 = $95;
 $97 = $__a$2;
 $98 = (($96) - ($97))|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($__buf,$98);
 $99 = HEAP8[$__buf>>0]|0;
 $100 = $99 & 1;
 $101 = ($100<<24>>24)==(0);
 if ($101) {
  $104 = $$pre$phi38Z2D;
 } else {
  $102 = HEAP32[$$pre$phi40Z2D>>2]|0;
  $104 = $102;
 }
 $103 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $105 = (__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($104,$103,$vararg_buffer)|0);
 $106 = ($105|0)==(1);
 if (!($106)) {
  HEAP32[$__err>>2] = 4;
 }
 $107 = ($76|0)==(0|0);
 if ($107) {
  $133 = 0;$146 = 1;
 } else {
  $108 = (($76) + 12|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = (($76) + 16|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = ($109|0)==($111|0);
  if ($112) {
   $113 = HEAP32[$76>>2]|0;
   $114 = (($113) + 36|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = (FUNCTION_TABLE_ii[$115 & 127]($76)|0);
   $$0$i$i$i$i = $116;
  } else {
   $117 = HEAP32[$109>>2]|0;
   $$0$i$i$i$i = $117;
  }
  $118 = ($$0$i$i$i$i|0)==(-1);
  if ($118) {
   HEAP32[$__b>>2] = 0;
   $133 = 0;$146 = 1;
  } else {
   $133 = $76;$146 = 0;
  }
 }
 $119 = ($$pre$i3$i$i|0)==(0|0);
 do {
  if ($119) {
   label = 56;
  } else {
   $120 = (($$pre$i3$i$i) + 12|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = (($$pre$i3$i$i) + 16|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($121|0)==($123|0);
   if ($124) {
    $125 = HEAP32[$$pre$i3$i$i>>2]|0;
    $126 = (($125) + 36|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = (FUNCTION_TABLE_ii[$127 & 127]($$pre$i3$i$i)|0);
    $$0$i$i1$i$i = $128;
   } else {
    $129 = HEAP32[$121>>2]|0;
    $$0$i$i1$i$i = $129;
   }
   $130 = ($$0$i$i1$i$i|0)==(-1);
   if ($130) {
    HEAP32[$__e>>2] = 0;
    label = 56;
    break;
   } else {
    if ($146) {
     break;
    } else {
     label = 58;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 56) {
  if ($146) {
   label = 58;
  }
 }
 if ((label|0) == 58) {
  $131 = HEAP32[$__err>>2]|0;
  $132 = $131 | 2;
  HEAP32[$__err>>2] = $132;
 }
 HEAP32[$agg$result>>2] = $133;
 $134 = HEAP8[$__buf>>0]|0;
 $135 = $134 & 1;
 $136 = ($135<<24>>24)==(0);
 if (!($136)) {
  $137 = (($__buf) + 8|0);
  $138 = HEAP32[$137>>2]|0;
  _free($138);
 }
 $139 = HEAP8[$__grouping>>0]|0;
 $140 = $139 & 1;
 $141 = ($140<<24>>24)==(0);
 if ($141) {
  STACKTOP = sp;return;
 }
 $142 = (($__grouping) + 8|0);
 $143 = HEAP32[$142>>2]|0;
 _free($143);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct,$__base,$__a,$__a_end,$__dc,$__thousands_sep,$__grouping,$__g,$__g_end,$__atoms) {
 $__ct = $__ct|0;
 $__base = $__base|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__dc = $__dc|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$lcssa$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__a_end>>2]|0;
 $1 = ($0|0)==($__a|0);
 do {
  if ($1) {
   $2 = (($__atoms) + 96|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)==($__ct|0);
   if (!($4)) {
    $5 = (($__atoms) + 100|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = ($6|0)==($__ct|0);
    if (!($7)) {
     break;
    }
   }
   $8 = $4 ? 43 : 45;
   $9 = (($__a) + 1|0);
   HEAP32[$__a_end>>2] = $9;
   HEAP8[$__a>>0] = $8;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 $10 = HEAP8[$__grouping>>0]|0;
 $11 = $10 & 1;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $15 = $10&255;
  $16 = $15 >>> 1;
  $18 = $16;
 } else {
  $13 = (($__grouping) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $18 = $14;
 }
 $17 = ($18|0)!=(0);
 $19 = ($__ct|0)==($__thousands_sep|0);
 $or$cond = $17 & $19;
 if ($or$cond) {
  $20 = HEAP32[$__g_end>>2]|0;
  $21 = $20;
  $22 = $__g;
  $23 = (($21) - ($22))|0;
  $24 = ($23|0)<(160);
  if (!($24)) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $25 = HEAP32[$__dc>>2]|0;
  $26 = (($20) + 4|0);
  HEAP32[$__g_end>>2] = $26;
  HEAP32[$20>>2] = $25;
  HEAP32[$__dc>>2] = 0;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $27 = (($__atoms) + 104|0);
 $$01$i = $__atoms;
 while(1) {
  $30 = HEAP32[$$01$i>>2]|0;
  $31 = ($30|0)==($__ct|0);
  $29 = (($$01$i) + 4|0);
  if ($31) {
   $$0$lcssa$i = $$01$i;
   break;
  }
  $28 = ($29|0)==($27|0);
  if ($28) {
   $$0$lcssa$i = $27;
   break;
  } else {
   $$01$i = $29;
  }
 }
 $32 = $$0$lcssa$i;
 $33 = $__atoms;
 $34 = (($32) - ($33))|0;
 $35 = $34 >> 2;
 $36 = ($34|0)>(92);
 if ($36) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 if ((($__base|0) == 10) | (($__base|0) == 8)) {
  $37 = ($35|0)<($__base|0);
  if (!($37)) {
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 } else if ((($__base|0) == 16)) {
  $38 = ($34|0)<(88);
  if (!($38)) {
   if ($1) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
   $39 = $0;
   $40 = $__a;
   $41 = (($39) - ($40))|0;
   $42 = ($41|0)<(3);
   if (!($42)) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
   $43 = (($0) + -1|0);
   $44 = HEAP8[$43>>0]|0;
   $45 = ($44<<24>>24)==(48);
   if (!($45)) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
   HEAP32[$__dc>>2] = 0;
   $46 = (39184 + ($35)|0);
   $47 = HEAP8[$46>>0]|0;
   $48 = (($0) + 1|0);
   HEAP32[$__a_end>>2] = $48;
   HEAP8[$0>>0] = $47;
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $49 = (39184 + ($35)|0);
 $50 = HEAP8[$49>>0]|0;
 $51 = (($0) + 1|0);
 HEAP32[$__a_end>>2] = $51;
 HEAP8[$0>>0] = $50;
 $52 = HEAP32[$__dc>>2]|0;
 $53 = (($52) + 1)|0;
 HEAP32[$__dc>>2] = $53;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $$idx$val = 0, $$idx6$val = 0, $$idx7 = 0, $$idx7$val = 0, $$idx8 = 0, $$idx8$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx7 = (($1) + 8|0);
 $$idx7$val = HEAP32[$$idx7>>2]|0;
 $$idx8 = (($1) + 12|0);
 $$idx8$val = HEAP32[$$idx8>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx7$val,$$idx8$val,$4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 (FUNCTION_TABLE_iiiii[$8 & 31]($5,39184,((39184 + 26|0)),$__atoms)|0);
 $9 = (__ZNSt3__16locale2id5__getEv(40784)|0);
 $$idx$val = HEAP32[$$idx7>>2]|0;
 $$idx6$val = HEAP32[$$idx8>>2]|0;
 $10 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx6$val,$9)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (FUNCTION_TABLE_ii[$13 & 127]($10)|0);
 HEAP8[$__thousands_sep>>0] = $14;
 $15 = HEAP32[$10>>2]|0;
 $16 = (($15) + 20|0);
 $17 = HEAP32[$16>>2]|0;
 FUNCTION_TABLE_vii[$17 & 63]($agg$result,$10);
 $18 = (($1) + 4|0);
 $19 = HEAP32[$18>>2]|0;HEAP32[$18>>2] = (($19+-1)|0);
 $20 = ($19|0)==(0);
 if (!($20)) {
  STACKTOP = sp;return;
 }
 $21 = HEAP32[$1>>2]|0;
 $22 = (($21) + 8|0);
 $23 = HEAP32[$22>>2]|0;
 FUNCTION_TABLE_vi[$23 & 255]($1);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $$idx$val = 0, $$idx6$val = 0, $$idx7 = 0, $$idx7$val = 0, $$idx8 = 0, $$idx8$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx7 = (($1) + 8|0);
 $$idx7$val = HEAP32[$$idx7>>2]|0;
 $$idx8 = (($1) + 12|0);
 $$idx8$val = HEAP32[$$idx8>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx7$val,$$idx8$val,$4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 (FUNCTION_TABLE_iiiii[$8 & 31]($5,39184,((39184 + 32|0)),$__atoms)|0);
 $9 = (__ZNSt3__16locale2id5__getEv(40784)|0);
 $$idx$val = HEAP32[$$idx7>>2]|0;
 $$idx6$val = HEAP32[$$idx8>>2]|0;
 $10 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx6$val,$9)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (FUNCTION_TABLE_ii[$13 & 127]($10)|0);
 HEAP8[$__decimal_point>>0] = $14;
 $15 = HEAP32[$10>>2]|0;
 $16 = (($15) + 16|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (FUNCTION_TABLE_ii[$17 & 127]($10)|0);
 HEAP8[$__thousands_sep>>0] = $18;
 $19 = HEAP32[$10>>2]|0;
 $20 = (($19) + 20|0);
 $21 = HEAP32[$20>>2]|0;
 FUNCTION_TABLE_vii[$21 & 63]($agg$result,$10);
 $22 = (($1) + 4|0);
 $23 = HEAP32[$22>>2]|0;HEAP32[$22>>2] = (($23+-1)|0);
 $24 = ($23|0)==(0);
 if (!($24)) {
  STACKTOP = sp;return;
 }
 $25 = HEAP32[$1>>2]|0;
 $26 = (($25) + 8|0);
 $27 = HEAP32[$26>>2]|0;
 FUNCTION_TABLE_vi[$27 & 255]($1);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$lcssa$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct<<24>>24)==($__decimal_point<<24>>24);
 if ($0) {
  $1 = HEAP8[$__in_units>>0]|0;
  $2 = ($1<<24>>24)==(0);
  if ($2) {
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
  HEAP8[$__in_units>>0] = 0;
  $3 = HEAP32[$__a_end>>2]|0;
  $4 = (($3) + 1|0);
  HEAP32[$__a_end>>2] = $4;
  HEAP8[$3>>0] = 46;
  $5 = HEAP8[$__grouping>>0]|0;
  $6 = $5 & 1;
  $7 = ($6<<24>>24)==(0);
  if ($7) {
   $10 = $5&255;
   $11 = $10 >>> 1;
   $13 = $11;
  } else {
   $8 = (($__grouping) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $13 = $9;
  }
  $12 = ($13|0)==(0);
  if ($12) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $14 = HEAP32[$__g_end>>2]|0;
  $15 = $14;
  $16 = $__g;
  $17 = (($15) - ($16))|0;
  $18 = ($17|0)<(160);
  if (!($18)) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $19 = HEAP32[$__dc>>2]|0;
  $20 = (($14) + 4|0);
  HEAP32[$__g_end>>2] = $20;
  HEAP32[$14>>2] = $19;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $21 = ($__ct<<24>>24)==($__thousands_sep<<24>>24);
 if ($21) {
  $22 = HEAP8[$__grouping>>0]|0;
  $23 = $22 & 1;
  $24 = ($23<<24>>24)==(0);
  if ($24) {
   $27 = $22&255;
   $28 = $27 >>> 1;
   $30 = $28;
  } else {
   $25 = (($__grouping) + 4|0);
   $26 = HEAP32[$25>>2]|0;
   $30 = $26;
  }
  $29 = ($30|0)==(0);
  if (!($29)) {
   $31 = HEAP8[$__in_units>>0]|0;
   $32 = ($31<<24>>24)==(0);
   if ($32) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
   $33 = HEAP32[$__g_end>>2]|0;
   $34 = $33;
   $35 = $__g;
   $36 = (($34) - ($35))|0;
   $37 = ($36|0)<(160);
   if (!($37)) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
   $38 = HEAP32[$__dc>>2]|0;
   $39 = (($33) + 4|0);
   HEAP32[$__g_end>>2] = $39;
   HEAP32[$33>>2] = $38;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $40 = (($__atoms) + 32|0);
 $$01$i = $__atoms;
 while(1) {
  $43 = HEAP8[$$01$i>>0]|0;
  $44 = ($43<<24>>24)==($__ct<<24>>24);
  $42 = (($$01$i) + 1|0);
  if ($44) {
   $$0$lcssa$i = $$01$i;
   break;
  }
  $41 = ($42|0)==($40|0);
  if ($41) {
   $$0$lcssa$i = $40;
   break;
  } else {
   $$01$i = $42;
  }
 }
 $45 = $$0$lcssa$i;
 $46 = $__atoms;
 $47 = (($45) - ($46))|0;
 $48 = ($47|0)>(31);
 if ($48) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $49 = (39184 + ($47)|0);
 $50 = HEAP8[$49>>0]|0;
 if ((($47|0) == 23) | (($47|0) == 22)) {
  HEAP8[$__exp>>0] = 80;
  $62 = HEAP32[$__a_end>>2]|0;
  $63 = (($62) + 1|0);
  HEAP32[$__a_end>>2] = $63;
  HEAP8[$62>>0] = $50;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else if ((($47|0) == 24) | (($47|0) == 25)) {
  $51 = HEAP32[$__a_end>>2]|0;
  $52 = ($51|0)==($__a|0);
  if (!($52)) {
   $53 = (($51) + -1|0);
   $54 = HEAP8[$53>>0]|0;
   $55 = $54&255;
   $56 = $55 & 95;
   $57 = HEAP8[$__exp>>0]|0;
   $58 = $57&255;
   $59 = $58 & 127;
   $60 = ($56|0)==($59|0);
   if (!($60)) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
  }
  $61 = (($51) + 1|0);
  HEAP32[$__a_end>>2] = $61;
  HEAP8[$51>>0] = $50;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else {
  $64 = $50&255;
  $65 = $64 & 95;
  $66 = HEAP8[$__exp>>0]|0;
  $67 = $66 << 24 >> 24;
  $68 = ($65|0)==($67|0);
  if ($68) {
   $69 = $65 | 128;
   $70 = $69&255;
   HEAP8[$__exp>>0] = $70;
   $71 = HEAP8[$__in_units>>0]|0;
   $72 = ($71<<24>>24)==(0);
   if (!($72)) {
    HEAP8[$__in_units>>0] = 0;
    $73 = HEAP8[$__grouping>>0]|0;
    $74 = $73 & 1;
    $75 = ($74<<24>>24)==(0);
    if ($75) {
     $78 = $73&255;
     $79 = $78 >>> 1;
     $81 = $79;
    } else {
     $76 = (($__grouping) + 4|0);
     $77 = HEAP32[$76>>2]|0;
     $81 = $77;
    }
    $80 = ($81|0)==(0);
    if (!($80)) {
     $82 = HEAP32[$__g_end>>2]|0;
     $83 = $82;
     $84 = $__g;
     $85 = (($83) - ($84))|0;
     $86 = ($85|0)<(160);
     if ($86) {
      $87 = HEAP32[$__dc>>2]|0;
      $88 = (($82) + 4|0);
      HEAP32[$__g_end>>2] = $88;
      HEAP32[$82>>2] = $87;
     }
    }
   }
  }
  $89 = HEAP32[$__a_end>>2]|0;
  $90 = (($89) + 1|0);
  HEAP32[$__a_end>>2] = $90;
  HEAP8[$89>>0] = $50;
  $91 = ($47|0)>(21);
  if ($91) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $92 = HEAP32[$__dc>>2]|0;
  $93 = (($92) + 1)|0;
  HEAP32[$__dc>>2] = $93;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result,$__iob,$__atoms,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__thousands_sep = $__thousands_sep|0;
 var $$idx$val = 0, $$idx6$val = 0, $$idx7 = 0, $$idx7$val = 0, $$idx8 = 0, $$idx8$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx7 = (($1) + 8|0);
 $$idx7$val = HEAP32[$$idx7>>2]|0;
 $$idx8 = (($1) + 12|0);
 $$idx8$val = HEAP32[$$idx8>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx7$val,$$idx8$val,$4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 48|0);
 $8 = HEAP32[$7>>2]|0;
 (FUNCTION_TABLE_iiiii[$8 & 31]($5,39184,((39184 + 26|0)),$__atoms)|0);
 $9 = (__ZNSt3__16locale2id5__getEv(40792)|0);
 $$idx$val = HEAP32[$$idx7>>2]|0;
 $$idx6$val = HEAP32[$$idx8>>2]|0;
 $10 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx6$val,$9)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (FUNCTION_TABLE_ii[$13 & 127]($10)|0);
 HEAP32[$__thousands_sep>>2] = $14;
 $15 = HEAP32[$10>>2]|0;
 $16 = (($15) + 20|0);
 $17 = HEAP32[$16>>2]|0;
 FUNCTION_TABLE_vii[$17 & 63]($agg$result,$10);
 $18 = (($1) + 4|0);
 $19 = HEAP32[$18>>2]|0;HEAP32[$18>>2] = (($19+-1)|0);
 $20 = ($19|0)==(0);
 if (!($20)) {
  STACKTOP = sp;return;
 }
 $21 = HEAP32[$1>>2]|0;
 $22 = (($21) + 8|0);
 $23 = HEAP32[$22>>2]|0;
 FUNCTION_TABLE_vi[$23 & 255]($1);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result,$__iob,$__atoms,$__decimal_point,$__thousands_sep) {
 $agg$result = $agg$result|0;
 $__iob = $__iob|0;
 $__atoms = $__atoms|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 var $$idx$val = 0, $$idx6$val = 0, $$idx7 = 0, $$idx7$val = 0, $$idx8 = 0, $$idx8$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx7 = (($1) + 8|0);
 $$idx7$val = HEAP32[$$idx7>>2]|0;
 $$idx8 = (($1) + 12|0);
 $$idx8$val = HEAP32[$$idx8>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx7$val,$$idx8$val,$4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 48|0);
 $8 = HEAP32[$7>>2]|0;
 (FUNCTION_TABLE_iiiii[$8 & 31]($5,39184,((39184 + 32|0)),$__atoms)|0);
 $9 = (__ZNSt3__16locale2id5__getEv(40792)|0);
 $$idx$val = HEAP32[$$idx7>>2]|0;
 $$idx6$val = HEAP32[$$idx8>>2]|0;
 $10 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx6$val,$9)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (FUNCTION_TABLE_ii[$13 & 127]($10)|0);
 HEAP32[$__decimal_point>>2] = $14;
 $15 = HEAP32[$10>>2]|0;
 $16 = (($15) + 16|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (FUNCTION_TABLE_ii[$17 & 127]($10)|0);
 HEAP32[$__thousands_sep>>2] = $18;
 $19 = HEAP32[$10>>2]|0;
 $20 = (($19) + 20|0);
 $21 = HEAP32[$20>>2]|0;
 FUNCTION_TABLE_vii[$21 & 63]($agg$result,$10);
 $22 = (($1) + 4|0);
 $23 = HEAP32[$22>>2]|0;HEAP32[$22>>2] = (($23+-1)|0);
 $24 = ($23|0)==(0);
 if (!($24)) {
  STACKTOP = sp;return;
 }
 $25 = HEAP32[$1>>2]|0;
 $26 = (($25) + 8|0);
 $27 = HEAP32[$26>>2]|0;
 FUNCTION_TABLE_vi[$27 & 255]($1);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct,$__in_units,$__exp,$__a,$__a_end,$__decimal_point,$__thousands_sep,$__grouping,$__g,$__g_end,$__dc,$__atoms) {
 $__ct = $__ct|0;
 $__in_units = $__in_units|0;
 $__exp = $__exp|0;
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__decimal_point = $__decimal_point|0;
 $__thousands_sep = $__thousands_sep|0;
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__dc = $__dc|0;
 $__atoms = $__atoms|0;
 var $$0 = 0, $$0$lcssa$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__ct|0)==($__decimal_point|0);
 if ($0) {
  $1 = HEAP8[$__in_units>>0]|0;
  $2 = ($1<<24>>24)==(0);
  if ($2) {
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
  HEAP8[$__in_units>>0] = 0;
  $3 = HEAP32[$__a_end>>2]|0;
  $4 = (($3) + 1|0);
  HEAP32[$__a_end>>2] = $4;
  HEAP8[$3>>0] = 46;
  $5 = HEAP8[$__grouping>>0]|0;
  $6 = $5 & 1;
  $7 = ($6<<24>>24)==(0);
  if ($7) {
   $10 = $5&255;
   $11 = $10 >>> 1;
   $13 = $11;
  } else {
   $8 = (($__grouping) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $13 = $9;
  }
  $12 = ($13|0)==(0);
  if ($12) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $14 = HEAP32[$__g_end>>2]|0;
  $15 = $14;
  $16 = $__g;
  $17 = (($15) - ($16))|0;
  $18 = ($17|0)<(160);
  if (!($18)) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $19 = HEAP32[$__dc>>2]|0;
  $20 = (($14) + 4|0);
  HEAP32[$__g_end>>2] = $20;
  HEAP32[$14>>2] = $19;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $21 = ($__ct|0)==($__thousands_sep|0);
 if ($21) {
  $22 = HEAP8[$__grouping>>0]|0;
  $23 = $22 & 1;
  $24 = ($23<<24>>24)==(0);
  if ($24) {
   $27 = $22&255;
   $28 = $27 >>> 1;
   $30 = $28;
  } else {
   $25 = (($__grouping) + 4|0);
   $26 = HEAP32[$25>>2]|0;
   $30 = $26;
  }
  $29 = ($30|0)==(0);
  if (!($29)) {
   $31 = HEAP8[$__in_units>>0]|0;
   $32 = ($31<<24>>24)==(0);
   if ($32) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
   $33 = HEAP32[$__g_end>>2]|0;
   $34 = $33;
   $35 = $__g;
   $36 = (($34) - ($35))|0;
   $37 = ($36|0)<(160);
   if (!($37)) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
   $38 = HEAP32[$__dc>>2]|0;
   $39 = (($33) + 4|0);
   HEAP32[$__g_end>>2] = $39;
   HEAP32[$33>>2] = $38;
   HEAP32[$__dc>>2] = 0;
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $40 = (($__atoms) + 128|0);
 $$01$i = $__atoms;
 while(1) {
  $43 = HEAP32[$$01$i>>2]|0;
  $44 = ($43|0)==($__ct|0);
  $42 = (($$01$i) + 4|0);
  if ($44) {
   $$0$lcssa$i = $$01$i;
   break;
  }
  $41 = ($42|0)==($40|0);
  if ($41) {
   $$0$lcssa$i = $40;
   break;
  } else {
   $$01$i = $42;
  }
 }
 $45 = $$0$lcssa$i;
 $46 = $__atoms;
 $47 = (($45) - ($46))|0;
 $48 = $47 >> 2;
 $49 = ($47|0)>(124);
 if ($49) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $50 = (39184 + ($48)|0);
 $51 = HEAP8[$50>>0]|0;
 if ((($48|0) == 24) | (($48|0) == 25)) {
  $52 = HEAP32[$__a_end>>2]|0;
  $53 = ($52|0)==($__a|0);
  if (!($53)) {
   $54 = (($52) + -1|0);
   $55 = HEAP8[$54>>0]|0;
   $56 = $55&255;
   $57 = $56 & 95;
   $58 = HEAP8[$__exp>>0]|0;
   $59 = $58&255;
   $60 = $59 & 127;
   $61 = ($57|0)==($60|0);
   if (!($61)) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
  }
  $62 = (($52) + 1|0);
  HEAP32[$__a_end>>2] = $62;
  HEAP8[$52>>0] = $51;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else if ((($48|0) == 23) | (($48|0) == 22)) {
  HEAP8[$__exp>>0] = 80;
 } else {
  $63 = $51&255;
  $64 = $63 & 95;
  $65 = HEAP8[$__exp>>0]|0;
  $66 = $65 << 24 >> 24;
  $67 = ($64|0)==($66|0);
  if ($67) {
   $68 = $64 | 128;
   $69 = $68&255;
   HEAP8[$__exp>>0] = $69;
   $70 = HEAP8[$__in_units>>0]|0;
   $71 = ($70<<24>>24)==(0);
   if (!($71)) {
    HEAP8[$__in_units>>0] = 0;
    $72 = HEAP8[$__grouping>>0]|0;
    $73 = $72 & 1;
    $74 = ($73<<24>>24)==(0);
    if ($74) {
     $77 = $72&255;
     $78 = $77 >>> 1;
     $80 = $78;
    } else {
     $75 = (($__grouping) + 4|0);
     $76 = HEAP32[$75>>2]|0;
     $80 = $76;
    }
    $79 = ($80|0)==(0);
    if (!($79)) {
     $81 = HEAP32[$__g_end>>2]|0;
     $82 = $81;
     $83 = $__g;
     $84 = (($82) - ($83))|0;
     $85 = ($84|0)<(160);
     if ($85) {
      $86 = HEAP32[$__dc>>2]|0;
      $87 = (($81) + 4|0);
      HEAP32[$__g_end>>2] = $87;
      HEAP32[$81>>2] = $86;
     }
    }
   }
  }
 }
 $88 = HEAP32[$__a_end>>2]|0;
 $89 = (($88) + 1|0);
 HEAP32[$__a_end>>2] = $89;
 HEAP8[$88>>0] = $51;
 $90 = ($47|0)>(84);
 if ($90) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $91 = HEAP32[$__dc>>2]|0;
 $92 = (($91) + 1)|0;
 HEAP32[$__dc>>2] = $92;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$byval_copy = 0, $$idx = 0, $$idx$val = 0, $$idx5 = 0, $$idx5$val = 0, $$ph = 0, $$pre = 0, $$pre$phi4Z2D = 0, $$pre$phi6Z2D = 0, $$pre3 = 0, $$pre5 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 16|0;
 $0 = sp + 12|0;
 $__nm = sp;
 $1 = (($__iob) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = (($5) + 24|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$__s>>2]|0;
  HEAP32[$0>>2] = $8;
  $9 = $__v&1;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 15]($agg$result,$this,$$byval_copy,$__iob,$__fl,$9);
  STACKTOP = sp;return;
 }
 $10 = (($__iob) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 4|0);
 $13 = HEAP32[$12>>2]|0;HEAP32[$12>>2] = (($13+1)|0);
 $14 = (__ZNSt3__16locale2id5__getEv(40784)|0);
 $$idx = (($11) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx5 = (($11) + 12|0);
 $$idx5$val = HEAP32[$$idx5>>2]|0;
 $15 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx5$val,$14)|0);
 $16 = (($11) + 4|0);
 $17 = HEAP32[$16>>2]|0;HEAP32[$16>>2] = (($17+-1)|0);
 $18 = ($17|0)==(0);
 if ($18) {
  $19 = HEAP32[$11>>2]|0;
  $20 = (($19) + 8|0);
  $21 = HEAP32[$20>>2]|0;
  FUNCTION_TABLE_vi[$21 & 255]($11);
 }
 $22 = HEAP32[$15>>2]|0;
 if ($__v) {
  $23 = (($22) + 24|0);
  $24 = HEAP32[$23>>2]|0;
  FUNCTION_TABLE_vii[$24 & 63]($__nm,$15);
 } else {
  $25 = (($22) + 28|0);
  $26 = HEAP32[$25>>2]|0;
  FUNCTION_TABLE_vii[$26 & 63]($__nm,$15);
 }
 $27 = HEAP8[$__nm>>0]|0;
 $28 = $27 & 1;
 $29 = ($28<<24>>24)==(0);
 if ($29) {
  $32 = (($__nm) + 1|0);
  $$pre5 = (($__nm) + 8|0);
  $$ph = $32;$$pre$phi4Z2D = $32;$$pre$phi6Z2D = $$pre5;
 } else {
  $30 = (($__nm) + 8|0);
  $31 = HEAP32[$30>>2]|0;
  $$pre3 = (($__nm) + 1|0);
  $$ph = $31;$$pre$phi4Z2D = $$pre3;$$pre$phi6Z2D = $30;
 }
 $33 = (($__nm) + 4|0);
 $35 = $27;$45 = $$ph;
 while(1) {
  $34 = $35 & 1;
  $36 = ($34<<24>>24)==(0);
  if ($36) {
   $39 = $35&255;
   $40 = $39 >>> 1;
   $42 = $$pre$phi4Z2D;$43 = $40;
  } else {
   $37 = HEAP32[$$pre$phi6Z2D>>2]|0;
   $38 = HEAP32[$33>>2]|0;
   $42 = $37;$43 = $38;
  }
  $41 = (($42) + ($43)|0);
  $44 = ($45|0)==($41|0);
  if ($44) {
   break;
  }
  $46 = HEAP8[$45>>0]|0;
  $47 = HEAP32[$__s>>2]|0;
  $48 = ($47|0)==(0|0);
  do {
   if (!($48)) {
    $49 = (($47) + 24|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = (($47) + 28|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = ($50|0)==($52|0);
    if (!($53)) {
     $54 = (($50) + 1|0);
     HEAP32[$49>>2] = $54;
     HEAP8[$50>>0] = $46;
     break;
    }
    $55 = HEAP32[$47>>2]|0;
    $56 = (($55) + 52|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = $46&255;
    $59 = (FUNCTION_TABLE_iii[$57 & 63]($47,$58)|0);
    $60 = ($59|0)==(-1);
    if ($60) {
     HEAP32[$__s>>2] = 0;
    }
   }
  } while(0);
  $61 = (($45) + 1|0);
  $$pre = HEAP8[$__nm>>0]|0;
  $35 = $$pre;$45 = $61;
 }
 $62 = HEAP32[$__s>>2]|0;
 HEAP32[$agg$result>>2] = $62;
 if ($36) {
  STACKTOP = sp;return;
 }
 $63 = (($__nm) + 8|0);
 $64 = HEAP32[$63>>2]|0;
 _free($64);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $or$cond$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer = sp;
 $__fmt = sp + 16|0;
 $__nar = sp + 24|0;
 $__o = sp + 36|0;
 $__op = sp + 8|0;
 $__oe = sp + 4|0;
 $0 = sp + 12|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[39440+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[39440+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[39440+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[39440+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[39440+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[39440+5>>0]|0;
 $1 = (($__fmt) + 1|0);
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($1,50424,1,$3);
 $4 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $5 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$4,$__fmt,$vararg_buffer)|0);
 $6 = (($__nar) + ($5)|0);
 $7 = HEAP32[$2>>2]|0;
 $8 = $7 & 176;
 do {
  if ((($8|0) == 32)) {
   $$0$i = $6;
  } else if ((($8|0) == 16)) {
   $9 = HEAP8[$__nar>>0]|0;
   if ((($9<<24>>24) == 43) | (($9<<24>>24) == 45)) {
    $10 = (($__nar) + 1|0);
    $$0$i = $10;
    break;
   }
   $11 = ($5|0)>(1);
   $12 = ($9<<24>>24)==(48);
   $or$cond$i = $11 & $12;
   if ($or$cond$i) {
    $13 = (($__nar) + 1|0);
    $14 = HEAP8[$13>>0]|0;
    if ((($14<<24>>24) == 88) | (($14<<24>>24) == 120)) {
     $15 = (($__nar) + 2|0);
     $$0$i = $15;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0$i = $__nar;
 }
 $16 = (($__iob) + 28|0);
 $17 = HEAP32[$16>>2]|0;
 HEAP32[$0>>2] = $17;
 $18 = (($17) + 4|0);
 $19 = HEAP32[$18>>2]|0;HEAP32[$18>>2] = (($19+1)|0);
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$$0$i,$6,$__o,$__op,$__oe,$0);
 $20 = HEAP32[$0>>2]|0;
 $21 = (($20) + 4|0);
 $22 = HEAP32[$21>>2]|0;HEAP32[$21>>2] = (($22+-1)|0);
 $23 = ($22|0)==(0);
 if (!($23)) {
  $27 = HEAP32[$__s>>2]|0;
  $28 = HEAP32[$__op>>2]|0;
  $29 = HEAP32[$__oe>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$27,$__o,$28,$29,$__iob,$__fl);
  STACKTOP = sp;return;
 }
 $24 = HEAP32[$20>>2]|0;
 $25 = (($24) + 8|0);
 $26 = HEAP32[$25>>2]|0;
 FUNCTION_TABLE_vi[$26 & 255]($20);
 $27 = HEAP32[$__s>>2]|0;
 $28 = HEAP32[$__op>>2]|0;
 $29 = HEAP32[$__oe>>2]|0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$27,$__o,$28,$29,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp,$__len,$__signd,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__signd = $__signd|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1$lcssa = 0, $$1$ph = 0, $$13 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = (($__fmtp) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1$ph = $$0;
 } else {
  $5 = (($$0) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1$ph = $5;
 }
 $6 = HEAP8[$__len>>0]|0;
 $7 = ($6<<24>>24)==(0);
 if ($7) {
  $$1$lcssa = $$1$ph;
 } else {
  $$012 = $__len;$$13 = $$1$ph;$10 = $6;
  while(1) {
   $8 = (($$012) + 1|0);
   $9 = (($$13) + 1|0);
   HEAP8[$$13>>0] = $10;
   $11 = HEAP8[$8>>0]|0;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    $$1$lcssa = $9;
    break;
   } else {
    $$012 = $8;$$13 = $9;$10 = $11;
   }
  }
 }
 $13 = $__flags & 74;
 if ((($13|0) == 8)) {
  $14 = $__flags & 16384;
  $15 = ($14|0)==(0);
  if ($15) {
   HEAP8[$$1$lcssa>>0] = 120;
   STACKTOP = sp;return;
  } else {
   HEAP8[$$1$lcssa>>0] = 88;
   STACKTOP = sp;return;
  }
 } else if ((($13|0) == 64)) {
  HEAP8[$$1$lcssa>>0] = 111;
  STACKTOP = sp;return;
 } else {
  if ($__signd) {
   HEAP8[$$1$lcssa>>0] = 100;
   STACKTOP = sp;return;
  } else {
   HEAP8[$$1$lcssa>>0] = 117;
   STACKTOP = sp;return;
  }
 }
}
function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$012$i$i = 0, $$012$i$i5 = 0, $$__dg$0 = 0, $$idx = 0, $$idx$val = 0, $$idx2 = 0, $$idx2$val = 0, $$idx3 = 0, $$idx3$val = 0, $$idx4 = 0, $$idx4$val = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__dc$09 = 0, $__dc$1 = 0, $__dg$010 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$011 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = HEAP32[$__loc>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx3 = (($0) + 8|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $$idx4 = (($0) + 12|0);
 $$idx4$val = HEAP32[$$idx4>>2]|0;
 $2 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx3$val,$$idx4$val,$1)|0);
 $3 = HEAP32[$__loc>>2]|0;
 $4 = (__ZNSt3__16locale2id5__getEv(40784)|0);
 $$idx = (($3) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx2 = (($3) + 12|0);
 $$idx2$val = HEAP32[$$idx2>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx2$val,$4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 FUNCTION_TABLE_vii[$8 & 63]($__grouping,$5);
 $9 = HEAP8[$__grouping>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if ($11) {
  $14 = $9&255;
  $15 = $14 >>> 1;
  $17 = $15;
 } else {
  $12 = (($__grouping) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $17 = $13;
 }
 $16 = ($17|0)==(0);
 if ($16) {
  $18 = HEAP32[$2>>2]|0;
  $19 = (($18) + 32|0);
  $20 = HEAP32[$19>>2]|0;
  (FUNCTION_TABLE_iiiii[$20 & 31]($2,$__nb,$__ne,$__ob)|0);
  $21 = $__ne;
  $22 = $__nb;
  $23 = (($21) - ($22))|0;
  $24 = (($__ob) + ($23)|0);
  HEAP32[$__oe>>2] = $24;
 } else {
  HEAP32[$__oe>>2] = $__ob;
  $25 = HEAP8[$__nb>>0]|0;
  if ((($25<<24>>24) == 43) | (($25<<24>>24) == 45)) {
   $26 = HEAP32[$2>>2]|0;
   $27 = (($26) + 28|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (FUNCTION_TABLE_iii[$28 & 63]($2,$25)|0);
   $30 = (($__nb) + 1|0);
   $31 = HEAP32[$__oe>>2]|0;
   $32 = (($31) + 1|0);
   HEAP32[$__oe>>2] = $32;
   HEAP8[$31>>0] = $29;
   $__nf$0 = $30;
  } else {
   $__nf$0 = $__nb;
  }
  $33 = $__ne;
  $34 = $__nf$0;
  $35 = (($33) - ($34))|0;
  $36 = ($35|0)>(1);
  if ($36) {
   $37 = HEAP8[$__nf$0>>0]|0;
   $38 = ($37<<24>>24)==(48);
   if ($38) {
    $39 = (($__nf$0) + 1|0);
    $40 = HEAP8[$39>>0]|0;
    if ((($40<<24>>24) == 88) | (($40<<24>>24) == 120)) {
     $41 = HEAP32[$2>>2]|0;
     $42 = (($41) + 28|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = (FUNCTION_TABLE_iii[$43 & 63]($2,48)|0);
     $45 = HEAP32[$__oe>>2]|0;
     $46 = (($45) + 1|0);
     HEAP32[$__oe>>2] = $46;
     HEAP8[$45>>0] = $44;
     $47 = HEAP8[$39>>0]|0;
     $48 = HEAP32[$2>>2]|0;
     $49 = (($48) + 28|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = (FUNCTION_TABLE_iii[$50 & 63]($2,$47)|0);
     $52 = (($__nf$0) + 2|0);
     $53 = HEAP32[$__oe>>2]|0;
     $54 = (($53) + 1|0);
     HEAP32[$__oe>>2] = $54;
     HEAP8[$53>>0] = $51;
     $__nf$1 = $52;
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
  } else {
   $__nf$1 = $__nf$0;
  }
  $55 = ($__nf$1|0)==($__ne|0);
  if (!($55)) {
   $56 = (($__ne) + -1|0);
   $57 = ($56>>>0)>($__nf$1>>>0);
   if ($57) {
    $$012$i$i5 = $__nf$1;$60 = $56;
    while(1) {
     $58 = HEAP8[$$012$i$i5>>0]|0;
     $59 = HEAP8[$60>>0]|0;
     HEAP8[$$012$i$i5>>0] = $59;
     HEAP8[$60>>0] = $58;
     $61 = (($$012$i$i5) + 1|0);
     $62 = (($60) + -1|0);
     $63 = ($61>>>0)<($62>>>0);
     if ($63) {
      $$012$i$i5 = $61;$60 = $62;
     } else {
      break;
     }
    }
   }
  }
  $64 = HEAP32[$5>>2]|0;
  $65 = (($64) + 16|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (FUNCTION_TABLE_ii[$66 & 127]($5)|0);
  $68 = ($__nf$1>>>0)<($__ne>>>0);
  if ($68) {
   $69 = (($__grouping) + 1|0);
   $70 = (($__grouping) + 4|0);
   $71 = (($__grouping) + 8|0);
   $__dc$09 = 0;$__dg$010 = 0;$__p$011 = $__nf$1;
   while(1) {
    $72 = HEAP8[$__grouping>>0]|0;
    $73 = $72 & 1;
    $74 = ($73<<24>>24)==(0);
    $75 = HEAP32[$71>>2]|0;
    $$ = $74 ? $69 : $75;
    $76 = (($$) + ($__dg$010)|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = ($77<<24>>24)!=(0);
    $79 = $77 << 24 >> 24;
    $80 = ($__dc$09|0)==($79|0);
    $or$cond = $78 & $80;
    if ($or$cond) {
     $81 = HEAP32[$__oe>>2]|0;
     $82 = (($81) + 1|0);
     HEAP32[$__oe>>2] = $82;
     HEAP8[$81>>0] = $67;
     $83 = HEAP8[$__grouping>>0]|0;
     $84 = $83 & 1;
     $85 = ($84<<24>>24)==(0);
     if ($85) {
      $87 = $83&255;
      $88 = $87 >>> 1;
      $90 = $88;
     } else {
      $86 = HEAP32[$70>>2]|0;
      $90 = $86;
     }
     $89 = (($90) + -1)|0;
     $91 = ($__dg$010>>>0)<($89>>>0);
     $92 = $91&1;
     $$__dg$0 = (($92) + ($__dg$010))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$09;$__dg$1 = $__dg$010;
    }
    $93 = HEAP8[$__p$011>>0]|0;
    $94 = HEAP32[$2>>2]|0;
    $95 = (($94) + 28|0);
    $96 = HEAP32[$95>>2]|0;
    $97 = (FUNCTION_TABLE_iii[$96 & 63]($2,$93)|0);
    $98 = HEAP32[$__oe>>2]|0;
    $99 = (($98) + 1|0);
    HEAP32[$__oe>>2] = $99;
    HEAP8[$98>>0] = $97;
    $100 = (($__dc$1) + 1)|0;
    $101 = (($__p$011) + 1|0);
    $102 = ($101>>>0)<($__ne>>>0);
    if ($102) {
     $__dc$09 = $100;$__dg$010 = $__dg$1;$__p$011 = $101;
    } else {
     break;
    }
   }
  }
  $103 = $__nf$1;
  $104 = $__nb;
  $105 = (($103) - ($104))|0;
  $106 = (($__ob) + ($105)|0);
  $107 = HEAP32[$__oe>>2]|0;
  $108 = ($106|0)==($107|0);
  if (!($108)) {
   $109 = (($107) + -1|0);
   $110 = ($109>>>0)>($106>>>0);
   if ($110) {
    $$012$i$i = $106;$113 = $109;
    while(1) {
     $111 = HEAP8[$$012$i$i>>0]|0;
     $112 = HEAP8[$113>>0]|0;
     HEAP8[$$012$i$i>>0] = $112;
     HEAP8[$113>>0] = $111;
     $114 = (($$012$i$i) + 1|0);
     $115 = (($113) + -1|0);
     $116 = ($114>>>0)<($115>>>0);
     if ($116) {
      $$012$i$i = $114;$113 = $115;
     } else {
      break;
     }
    }
   }
  }
 }
 $117 = ($__np|0)==($__ne|0);
 if ($117) {
  $118 = HEAP32[$__oe>>2]|0;
  $storemerge = $118;
 } else {
  $119 = $__np;
  $120 = $__nb;
  $121 = (($119) - ($120))|0;
  $122 = (($__ob) + ($121)|0);
  $storemerge = $122;
 }
 HEAP32[$__op>>2] = $storemerge;
 $123 = HEAP8[$__grouping>>0]|0;
 $124 = $123 & 1;
 $125 = ($124<<24>>24)==(0);
 if ($125) {
  STACKTOP = sp;return;
 }
 $126 = (($__grouping) + 8|0);
 $127 = HEAP32[$126>>2]|0;
 _free($127);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__oe = 0, $__op = 0, $or$cond$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 64|0;
 $__op = sp + 60|0;
 $__oe = sp + 56|0;
 $2 = sp + 52|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($7,50432,1,$9);
 $10 = (__ZNSt3__16__clocEv()|0);
 $11 = $vararg_buffer;
 $12 = $11;
 HEAP32[$12>>2] = $0;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $1;
 $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$10,$__fmt,$vararg_buffer)|0);
 $16 = (($__nar) + ($15)|0);
 $17 = HEAP32[$8>>2]|0;
 $18 = $17 & 176;
 do {
  if ((($18|0) == 32)) {
   $$0$i = $16;
  } else if ((($18|0) == 16)) {
   $19 = HEAP8[$__nar>>0]|0;
   if ((($19<<24>>24) == 43) | (($19<<24>>24) == 45)) {
    $20 = (($__nar) + 1|0);
    $$0$i = $20;
    break;
   }
   $21 = ($15|0)>(1);
   $22 = ($19<<24>>24)==(48);
   $or$cond$i = $21 & $22;
   if ($or$cond$i) {
    $23 = (($__nar) + 1|0);
    $24 = HEAP8[$23>>0]|0;
    if ((($24<<24>>24) == 88) | (($24<<24>>24) == 120)) {
     $25 = (($__nar) + 2|0);
     $$0$i = $25;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0$i = $__nar;
 }
 $26 = (($__iob) + 28|0);
 $27 = HEAP32[$26>>2]|0;
 HEAP32[$2>>2] = $27;
 $28 = (($27) + 4|0);
 $29 = HEAP32[$28>>2]|0;HEAP32[$28>>2] = (($29+1)|0);
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$$0$i,$16,$vararg_buffer,$__op,$__oe,$2);
 $30 = HEAP32[$2>>2]|0;
 $31 = (($30) + 4|0);
 $32 = HEAP32[$31>>2]|0;HEAP32[$31>>2] = (($32+-1)|0);
 $33 = ($32|0)==(0);
 if (!($33)) {
  $37 = HEAP32[$__s>>2]|0;
  $38 = HEAP32[$__op>>2]|0;
  $39 = HEAP32[$__oe>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$37,$vararg_buffer,$38,$39,$__iob,$__fl);
  STACKTOP = sp;return;
 }
 $34 = HEAP32[$30>>2]|0;
 $35 = (($34) + 8|0);
 $36 = HEAP32[$35>>2]|0;
 FUNCTION_TABLE_vi[$36 & 255]($30);
 $37 = HEAP32[$__s>>2]|0;
 $38 = HEAP32[$__op>>2]|0;
 $39 = HEAP32[$__oe>>2]|0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$37,$vararg_buffer,$38,$39,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, $or$cond$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer = sp;
 $__fmt = sp + 16|0;
 $__nar = sp + 24|0;
 $__o = sp + 36|0;
 $__op = sp + 8|0;
 $__oe = sp + 4|0;
 $0 = sp + 12|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[39440+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[39440+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[39440+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[39440+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[39440+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[39440+5>>0]|0;
 $1 = (($__fmt) + 1|0);
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($1,50424,0,$3);
 $4 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $5 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$4,$__fmt,$vararg_buffer)|0);
 $6 = (($__nar) + ($5)|0);
 $7 = HEAP32[$2>>2]|0;
 $8 = $7 & 176;
 do {
  if ((($8|0) == 32)) {
   $$0$i = $6;
  } else if ((($8|0) == 16)) {
   $9 = HEAP8[$__nar>>0]|0;
   if ((($9<<24>>24) == 43) | (($9<<24>>24) == 45)) {
    $10 = (($__nar) + 1|0);
    $$0$i = $10;
    break;
   }
   $11 = ($5|0)>(1);
   $12 = ($9<<24>>24)==(48);
   $or$cond$i = $11 & $12;
   if ($or$cond$i) {
    $13 = (($__nar) + 1|0);
    $14 = HEAP8[$13>>0]|0;
    if ((($14<<24>>24) == 88) | (($14<<24>>24) == 120)) {
     $15 = (($__nar) + 2|0);
     $$0$i = $15;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0$i = $__nar;
 }
 $16 = (($__iob) + 28|0);
 $17 = HEAP32[$16>>2]|0;
 HEAP32[$0>>2] = $17;
 $18 = (($17) + 4|0);
 $19 = HEAP32[$18>>2]|0;HEAP32[$18>>2] = (($19+1)|0);
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$$0$i,$6,$__o,$__op,$__oe,$0);
 $20 = HEAP32[$0>>2]|0;
 $21 = (($20) + 4|0);
 $22 = HEAP32[$21>>2]|0;HEAP32[$21>>2] = (($22+-1)|0);
 $23 = ($22|0)==(0);
 if (!($23)) {
  $27 = HEAP32[$__s>>2]|0;
  $28 = HEAP32[$__op>>2]|0;
  $29 = HEAP32[$__oe>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$27,$__o,$28,$29,$__iob,$__fl);
  STACKTOP = sp;return;
 }
 $24 = HEAP32[$20>>2]|0;
 $25 = (($24) + 8|0);
 $26 = HEAP32[$25>>2]|0;
 FUNCTION_TABLE_vi[$26 & 255]($20);
 $27 = HEAP32[$__s>>2]|0;
 $28 = HEAP32[$__op>>2]|0;
 $29 = HEAP32[$__oe>>2]|0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$27,$__o,$28,$29,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__oe = 0, $__op = 0, $or$cond$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 64|0;
 $__op = sp + 60|0;
 $__oe = sp + 56|0;
 $2 = sp + 52|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($7,50432,0,$9);
 $10 = (__ZNSt3__16__clocEv()|0);
 $11 = $vararg_buffer;
 $12 = $11;
 HEAP32[$12>>2] = $0;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $1;
 $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$10,$__fmt,$vararg_buffer)|0);
 $16 = (($__nar) + ($15)|0);
 $17 = HEAP32[$8>>2]|0;
 $18 = $17 & 176;
 do {
  if ((($18|0) == 32)) {
   $$0$i = $16;
  } else if ((($18|0) == 16)) {
   $19 = HEAP8[$__nar>>0]|0;
   if ((($19<<24>>24) == 43) | (($19<<24>>24) == 45)) {
    $20 = (($__nar) + 1|0);
    $$0$i = $20;
    break;
   }
   $21 = ($15|0)>(1);
   $22 = ($19<<24>>24)==(48);
   $or$cond$i = $21 & $22;
   if ($or$cond$i) {
    $23 = (($__nar) + 1|0);
    $24 = HEAP8[$23>>0]|0;
    if ((($24<<24>>24) == 88) | (($24<<24>>24) == 120)) {
     $25 = (($__nar) + 2|0);
     $$0$i = $25;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0$i = $__nar;
 }
 $26 = (($__iob) + 28|0);
 $27 = HEAP32[$26>>2]|0;
 HEAP32[$2>>2] = $27;
 $28 = (($27) + 4|0);
 $29 = HEAP32[$28>>2]|0;HEAP32[$28>>2] = (($29+1)|0);
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nar,$$0$i,$16,$vararg_buffer,$__op,$__oe,$2);
 $30 = HEAP32[$2>>2]|0;
 $31 = (($30) + 4|0);
 $32 = HEAP32[$31>>2]|0;HEAP32[$31>>2] = (($32+-1)|0);
 $33 = ($32|0)==(0);
 if (!($33)) {
  $37 = HEAP32[$__s>>2]|0;
  $38 = HEAP32[$__op>>2]|0;
  $39 = HEAP32[$__oe>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$37,$vararg_buffer,$38,$39,$__iob,$__fl);
  STACKTOP = sp;return;
 }
 $34 = HEAP32[$30>>2]|0;
 $35 = (($34) + 8|0);
 $36 = HEAP32[$35>>2]|0;
 FUNCTION_TABLE_vi[$36 & 255]($30);
 $37 = HEAP32[$__s>>2]|0;
 $38 = HEAP32[$__op>>2]|0;
 $39 = HEAP32[$__oe>>2]|0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$37,$vararg_buffer,$38,$39,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$2 = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $or$cond$i = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $vararg_buffer5 = sp;
 $__fmt = sp + 64|0;
 $__nar = sp + 92|0;
 $__nb = sp + 80|0;
 $__op = sp + 76|0;
 $__oe = sp + 72|0;
 $0 = sp + 84|0;
 $1 = sp + 88|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($__fmt) + 1|0);
 $7 = (($__iob) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,50416,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = (($__iob) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer5>>2] = $12;
  $vararg_ptr1 = (($vararg_buffer5) + 4|0);
  HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_ptr1>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_ptr1+4>>2]=HEAP32[tempDoublePtr+4>>2];
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer5)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_buffer5>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_buffer5+4>>2]=HEAP32[tempDoublePtr+4>>2];
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer5)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  $17 = (($__iob) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$vararg_buffer5>>2] = $18;
  $vararg_ptr8 = (($vararg_buffer5) + 4|0);
  HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_ptr8>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_ptr8+4>>2]=HEAP32[tempDoublePtr+4>>2];
  $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
  $20 = HEAP32[$__nb>>2]|0;
  $21 = ($20|0)==(0|0);
  if ($21) {
   $22 = (___cxa_allocate_exception(4)|0);
   HEAP32[$22>>2] = ((51368 + 8|0));
   ___cxa_throw(($22|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $24 = $20;$58 = $20;$__nc$2 = $19;
  }
 } else {
  $24 = $__nar;$58 = 0;$__nc$2 = $__nc$0;
 }
 $23 = (($24) + ($__nc$2)|0);
 $25 = HEAP32[$7>>2]|0;
 $26 = $25 & 176;
 do {
  if ((($26|0) == 16)) {
   $27 = HEAP8[$24>>0]|0;
   if ((($27<<24>>24) == 43) | (($27<<24>>24) == 45)) {
    $28 = (($24) + 1|0);
    $$0$i = $28;
    break;
   }
   $29 = ($__nc$2|0)>(1);
   $30 = ($27<<24>>24)==(48);
   $or$cond$i = $29 & $30;
   if ($or$cond$i) {
    $31 = (($24) + 1|0);
    $32 = HEAP8[$31>>0]|0;
    if ((($32<<24>>24) == 88) | (($32<<24>>24) == 120)) {
     $33 = (($24) + 2|0);
     $$0$i = $33;
    } else {
     label = 13;
    }
   } else {
    label = 13;
   }
  } else if ((($26|0) == 32)) {
   $$0$i = $23;
  } else {
   label = 13;
  }
 } while(0);
 if ((label|0) == 13) {
  $$0$i = $24;
 }
 $34 = ($24|0)==($__nar|0);
 if ($34) {
  $43 = $__nar;$56 = 0;$__ob$0 = $vararg_buffer5;
 } else {
  $35 = $__nc$2 << 1;
  $36 = (_malloc($35)|0);
  $37 = ($36|0)==(0|0);
  if ($37) {
   $38 = (___cxa_allocate_exception(4)|0);
   HEAP32[$38>>2] = ((51368 + 8|0));
   ___cxa_throw(($38|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $43 = $24;$56 = $36;$__ob$0 = $36;
  }
 }
 $39 = (($__iob) + 28|0);
 $40 = HEAP32[$39>>2]|0;
 HEAP32[$0>>2] = $40;
 $41 = (($40) + 4|0);
 $42 = HEAP32[$41>>2]|0;HEAP32[$41>>2] = (($42+1)|0);
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($43,$$0$i,$23,$__ob$0,$__op,$__oe,$0);
 $44 = HEAP32[$0>>2]|0;
 $45 = (($44) + 4|0);
 $46 = HEAP32[$45>>2]|0;HEAP32[$45>>2] = (($46+-1)|0);
 $47 = ($46|0)==(0);
 if ($47) {
  $48 = HEAP32[$44>>2]|0;
  $49 = (($48) + 8|0);
  $50 = HEAP32[$49>>2]|0;
  FUNCTION_TABLE_vi[$50 & 255]($44);
 }
 $51 = HEAP32[$__s>>2]|0;
 $52 = HEAP32[$__op>>2]|0;
 $53 = HEAP32[$__oe>>2]|0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($1,$51,$__ob$0,$52,$53,$__iob,$__fl);
 $54 = HEAP32[$1>>2]|0;
 HEAP32[$__s>>2] = $54;
 HEAP32[$agg$result>>2] = $54;
 $55 = ($56|0)==(0|0);
 if (!($55)) {
  _free($56);
 }
 $57 = ($58|0)==(0|0);
 if ($57) {
  STACKTOP = sp;return;
 }
 _free($58);
 STACKTOP = sp;return;
}
function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp,$__len,$__flags) {
 $__fmtp = $__fmtp|0;
 $__len = $__len|0;
 $__flags = $__flags|0;
 var $$0 = 0, $$012 = 0, $$1 = 0, $$2$lcssa = 0, $$2$ph = 0, $$23 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $specify_precision$0$off0$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__flags & 2048;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = $__fmtp;
 } else {
  $2 = (($__fmtp) + 1|0);
  HEAP8[$__fmtp>>0] = 43;
  $$0 = $2;
 }
 $3 = $__flags & 1024;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1 = $$0;
 } else {
  $5 = (($$0) + 1|0);
  HEAP8[$$0>>0] = 35;
  $$1 = $5;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6|0)==(260);
 if ($8) {
  $$2$ph = $$1;$specify_precision$0$off0$ph = 0;
 } else {
  $9 = (($$1) + 1|0);
  HEAP8[$$1>>0] = 46;
  $10 = (($$1) + 2|0);
  HEAP8[$9>>0] = 42;
  $$2$ph = $10;$specify_precision$0$off0$ph = 1;
 }
 $11 = HEAP8[$__len>>0]|0;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $$2$lcssa = $$2$ph;
 } else {
  $$012 = $__len;$$23 = $$2$ph;$15 = $11;
  while(1) {
   $13 = (($$012) + 1|0);
   $14 = (($$23) + 1|0);
   HEAP8[$$23>>0] = $15;
   $16 = HEAP8[$13>>0]|0;
   $17 = ($16<<24>>24)==(0);
   if ($17) {
    $$2$lcssa = $14;
    break;
   } else {
    $$012 = $13;$$23 = $14;$15 = $16;
   }
  }
 }
 do {
  if ((($6|0) == 4)) {
   $18 = $7 & 1;
   $19 = ($18|0)==(0);
   if ($19) {
    HEAP8[$$2$lcssa>>0] = 102;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 70;
    break;
   }
  } else if ((($6|0) == 256)) {
   $20 = $7 & 1;
   $21 = ($20|0)==(0);
   if ($21) {
    HEAP8[$$2$lcssa>>0] = 101;
    break;
   } else {
    HEAP8[$$2$lcssa>>0] = 69;
    break;
   }
  } else {
   $22 = $7 & 1;
   $23 = ($22|0)!=(0);
   if ($8) {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 65;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 97;
     break;
    }
   } else {
    if ($23) {
     HEAP8[$$2$lcssa>>0] = 71;
     break;
    } else {
     HEAP8[$$2$lcssa>>0] = 103;
     break;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($specify_precision$0$off0$ph|0);
}
function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$012$i$i = 0, $$012$i$i7 = 0, $$__dg$0 = 0, $$idx = 0, $$idx$val = 0, $$idx2 = 0, $$idx2$val = 0, $$idx3 = 0, $$idx3$val = 0, $$idx4 = 0, $$idx4$val = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__dc$018 = 0, $__dc$1 = 0, $__dg$019 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$214 = 0, $__nf$3 = 0, $__ns$034 = 0, $__ns$126 = 0, $__ns$2 = 0, $__p$020 = 0, $isdigit$i = 0, $isdigit$i$i = 0, $isdigittmp$i = 0, $isdigittmp$i$i = 0, $or$cond = 0, $storemerge = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = HEAP32[$__loc>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx3 = (($0) + 8|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $$idx4 = (($0) + 12|0);
 $$idx4$val = HEAP32[$$idx4>>2]|0;
 $2 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx3$val,$$idx4$val,$1)|0);
 $3 = HEAP32[$__loc>>2]|0;
 $4 = (__ZNSt3__16locale2id5__getEv(40784)|0);
 $$idx = (($3) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx2 = (($3) + 12|0);
 $$idx2$val = HEAP32[$$idx2>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx2$val,$4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 FUNCTION_TABLE_vii[$8 & 63]($__grouping,$5);
 HEAP32[$__oe>>2] = $__ob;
 $9 = HEAP8[$__nb>>0]|0;
 if ((($9<<24>>24) == 43) | (($9<<24>>24) == 45)) {
  $10 = HEAP32[$2>>2]|0;
  $11 = (($10) + 28|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (FUNCTION_TABLE_iii[$12 & 63]($2,$9)|0);
  $14 = (($__nb) + 1|0);
  $15 = HEAP32[$__oe>>2]|0;
  $16 = (($15) + 1|0);
  HEAP32[$__oe>>2] = $16;
  HEAP8[$15>>0] = $13;
  $__nf$0 = $14;
 } else {
  $__nf$0 = $__nb;
 }
 $17 = $__ne;
 $18 = $__nf$0;
 $19 = (($17) - ($18))|0;
 $20 = ($19|0)>(1);
 L4: do {
  if ($20) {
   $22 = HEAP8[$__nf$0>>0]|0;
   $23 = ($22<<24>>24)==(48);
   if ($23) {
    $24 = (($__nf$0) + 1|0);
    $25 = HEAP8[$24>>0]|0;
    if ((($25<<24>>24) == 88) | (($25<<24>>24) == 120)) {
     $26 = HEAP32[$2>>2]|0;
     $27 = (($26) + 28|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = (FUNCTION_TABLE_iii[$28 & 63]($2,48)|0);
     $30 = HEAP32[$__oe>>2]|0;
     $31 = (($30) + 1|0);
     HEAP32[$__oe>>2] = $31;
     HEAP8[$30>>0] = $29;
     $32 = (($__nf$0) + 2|0);
     $33 = HEAP8[$24>>0]|0;
     $34 = HEAP32[$2>>2]|0;
     $35 = (($34) + 28|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = (FUNCTION_TABLE_iii[$36 & 63]($2,$33)|0);
     $38 = HEAP32[$__oe>>2]|0;
     $39 = (($38) + 1|0);
     HEAP32[$__oe>>2] = $39;
     HEAP8[$38>>0] = $37;
     $40 = ($32>>>0)<($__ne>>>0);
     if ($40) {
      $__ns$034 = $32;
      while(1) {
       $43 = HEAP8[$__ns$034>>0]|0;
       (__ZNSt3__16__clocEv()|0);
       $44 = $43 << 24 >> 24;
       $isdigittmp$i$i = (($44) + -48)|0;
       $isdigit$i$i = ($isdigittmp$i$i>>>0)<(10);
       if (!($isdigit$i$i)) {
        $45 = $44 | 32;
        $46 = (($45) + -97)|0;
        $47 = ($46>>>0)<(6);
        if (!($47)) {
         $__nf$1 = $32;$__ns$2 = $__ns$034;
         break L4;
        }
       }
       $41 = (($__ns$034) + 1|0);
       $42 = ($41>>>0)<($__ne>>>0);
       if ($42) {
        $__ns$034 = $41;
       } else {
        $__nf$1 = $32;$__ns$2 = $41;
        break;
       }
      }
     } else {
      $__nf$1 = $32;$__ns$2 = $32;
     }
    } else {
     label = 4;
    }
   } else {
    label = 4;
   }
  } else {
   label = 4;
  }
 } while(0);
 L13: do {
  if ((label|0) == 4) {
   $21 = ($__nf$0>>>0)<($__ne>>>0);
   if ($21) {
    $__ns$126 = $__nf$0;
    while(1) {
     $50 = HEAP8[$__ns$126>>0]|0;
     (__ZNSt3__16__clocEv()|0);
     $51 = $50 << 24 >> 24;
     $isdigittmp$i = (($51) + -48)|0;
     $isdigit$i = ($isdigittmp$i>>>0)<(10);
     $49 = (($__ns$126) + 1|0);
     if (!($isdigit$i)) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$126;
      break L13;
     }
     $48 = ($49>>>0)<($__ne>>>0);
     if ($48) {
      $__ns$126 = $49;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $49;
      break;
     }
    }
   } else {
    $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
   }
  }
 } while(0);
 $52 = HEAP8[$__grouping>>0]|0;
 $53 = $52 & 1;
 $54 = ($53<<24>>24)==(0);
 if ($54) {
  $57 = $52&255;
  $58 = $57 >>> 1;
  $60 = $58;
 } else {
  $55 = (($__grouping) + 4|0);
  $56 = HEAP32[$55>>2]|0;
  $60 = $56;
 }
 $59 = ($60|0)==(0);
 if ($59) {
  $61 = HEAP32[$__oe>>2]|0;
  $62 = HEAP32[$2>>2]|0;
  $63 = (($62) + 32|0);
  $64 = HEAP32[$63>>2]|0;
  (FUNCTION_TABLE_iiiii[$64 & 31]($2,$__nf$1,$__ns$2,$61)|0);
  $65 = $__ns$2;
  $66 = $__nf$1;
  $67 = (($65) - ($66))|0;
  $68 = HEAP32[$__oe>>2]|0;
  $69 = (($68) + ($67)|0);
  HEAP32[$__oe>>2] = $69;
 } else {
  $70 = ($__nf$1|0)==($__ns$2|0);
  if (!($70)) {
   $71 = (($__ns$2) + -1|0);
   $72 = ($71>>>0)>($__nf$1>>>0);
   if ($72) {
    $$012$i$i = $__nf$1;$75 = $71;
    while(1) {
     $73 = HEAP8[$$012$i$i>>0]|0;
     $74 = HEAP8[$75>>0]|0;
     HEAP8[$$012$i$i>>0] = $74;
     HEAP8[$75>>0] = $73;
     $76 = (($$012$i$i) + 1|0);
     $77 = (($75) + -1|0);
     $78 = ($76>>>0)<($77>>>0);
     if ($78) {
      $$012$i$i = $76;$75 = $77;
     } else {
      break;
     }
    }
   }
  }
  $79 = HEAP32[$5>>2]|0;
  $80 = (($79) + 16|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = (FUNCTION_TABLE_ii[$81 & 127]($5)|0);
  $83 = ($__nf$1>>>0)<($__ns$2>>>0);
  if ($83) {
   $84 = (($__grouping) + 1|0);
   $85 = (($__grouping) + 4|0);
   $86 = (($__grouping) + 8|0);
   $__dc$018 = 0;$__dg$019 = 0;$__p$020 = $__nf$1;
   while(1) {
    $87 = HEAP8[$__grouping>>0]|0;
    $88 = $87 & 1;
    $89 = ($88<<24>>24)==(0);
    $90 = HEAP32[$86>>2]|0;
    $$ = $89 ? $84 : $90;
    $91 = (($$) + ($__dg$019)|0);
    $92 = HEAP8[$91>>0]|0;
    $93 = ($92<<24>>24)>(0);
    $94 = $92 << 24 >> 24;
    $95 = ($__dc$018|0)==($94|0);
    $or$cond = $93 & $95;
    if ($or$cond) {
     $96 = HEAP32[$__oe>>2]|0;
     $97 = (($96) + 1|0);
     HEAP32[$__oe>>2] = $97;
     HEAP8[$96>>0] = $82;
     $98 = HEAP8[$__grouping>>0]|0;
     $99 = $98 & 1;
     $100 = ($99<<24>>24)==(0);
     if ($100) {
      $102 = $98&255;
      $103 = $102 >>> 1;
      $105 = $103;
     } else {
      $101 = HEAP32[$85>>2]|0;
      $105 = $101;
     }
     $104 = (($105) + -1)|0;
     $106 = ($__dg$019>>>0)<($104>>>0);
     $107 = $106&1;
     $$__dg$0 = (($107) + ($__dg$019))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$018;$__dg$1 = $__dg$019;
    }
    $108 = HEAP8[$__p$020>>0]|0;
    $109 = HEAP32[$2>>2]|0;
    $110 = (($109) + 28|0);
    $111 = HEAP32[$110>>2]|0;
    $112 = (FUNCTION_TABLE_iii[$111 & 63]($2,$108)|0);
    $113 = HEAP32[$__oe>>2]|0;
    $114 = (($113) + 1|0);
    HEAP32[$__oe>>2] = $114;
    HEAP8[$113>>0] = $112;
    $115 = (($__dc$1) + 1)|0;
    $116 = (($__p$020) + 1|0);
    $117 = ($116>>>0)<($__ns$2>>>0);
    if ($117) {
     $__dc$018 = $115;$__dg$019 = $__dg$1;$__p$020 = $116;
    } else {
     break;
    }
   }
  }
  $118 = $__nf$1;
  $119 = $__nb;
  $120 = (($118) - ($119))|0;
  $121 = (($__ob) + ($120)|0);
  $122 = HEAP32[$__oe>>2]|0;
  $123 = ($121|0)==($122|0);
  if (!($123)) {
   $124 = (($122) + -1|0);
   $125 = ($124>>>0)>($121>>>0);
   if ($125) {
    $$012$i$i7 = $121;$128 = $124;
    while(1) {
     $126 = HEAP8[$$012$i$i7>>0]|0;
     $127 = HEAP8[$128>>0]|0;
     HEAP8[$$012$i$i7>>0] = $127;
     HEAP8[$128>>0] = $126;
     $129 = (($$012$i$i7) + 1|0);
     $130 = (($128) + -1|0);
     $131 = ($129>>>0)<($130>>>0);
     if ($131) {
      $$012$i$i7 = $129;$128 = $130;
     } else {
      break;
     }
    }
   }
  }
 }
 $132 = ($__ns$2>>>0)<($__ne>>>0);
 L47: do {
  if ($132) {
   $__nf$214 = $__ns$2;
   while(1) {
    $133 = HEAP8[$__nf$214>>0]|0;
    $134 = ($133<<24>>24)==(46);
    if ($134) {
     break;
    }
    $142 = HEAP32[$2>>2]|0;
    $143 = (($142) + 28|0);
    $144 = HEAP32[$143>>2]|0;
    $145 = (FUNCTION_TABLE_iii[$144 & 63]($2,$133)|0);
    $146 = HEAP32[$__oe>>2]|0;
    $147 = (($146) + 1|0);
    HEAP32[$__oe>>2] = $147;
    HEAP8[$146>>0] = $145;
    $148 = (($__nf$214) + 1|0);
    $149 = ($148>>>0)<($__ne>>>0);
    if ($149) {
     $__nf$214 = $148;
    } else {
     $__nf$3 = $148;
     break L47;
    }
   }
   $135 = HEAP32[$5>>2]|0;
   $136 = (($135) + 12|0);
   $137 = HEAP32[$136>>2]|0;
   $138 = (FUNCTION_TABLE_ii[$137 & 127]($5)|0);
   $139 = HEAP32[$__oe>>2]|0;
   $140 = (($139) + 1|0);
   HEAP32[$__oe>>2] = $140;
   HEAP8[$139>>0] = $138;
   $141 = (($__nf$214) + 1|0);
   $__nf$3 = $141;
  } else {
   $__nf$3 = $__ns$2;
  }
 } while(0);
 $150 = HEAP32[$__oe>>2]|0;
 $151 = HEAP32[$2>>2]|0;
 $152 = (($151) + 32|0);
 $153 = HEAP32[$152>>2]|0;
 (FUNCTION_TABLE_iiiii[$153 & 31]($2,$__nf$3,$__ne,$150)|0);
 $154 = $__nf$3;
 $155 = (($17) - ($154))|0;
 $156 = HEAP32[$__oe>>2]|0;
 $157 = (($156) + ($155)|0);
 HEAP32[$__oe>>2] = $157;
 $158 = ($__np|0)==($__ne|0);
 if ($158) {
  $storemerge = $157;
 } else {
  $159 = $__np;
  $160 = $__nb;
  $161 = (($159) - ($160))|0;
  $162 = (($__ob) + ($161)|0);
  $storemerge = $162;
 }
 HEAP32[$__op>>2] = $storemerge;
 $163 = HEAP8[$__grouping>>0]|0;
 $164 = $163 & 1;
 $165 = ($164<<24>>24)==(0);
 if ($165) {
  STACKTOP = sp;return;
 }
 $166 = (($__grouping) + 8|0);
 $167 = HEAP32[$166>>2]|0;
 _free($167);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $or$cond$i = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $vararg_buffer9 = sp;
 $__fmt = sp + 64|0;
 $__nar = sp + 92|0;
 $__nb = sp + 80|0;
 $__op = sp + 76|0;
 $__oe = sp + 72|0;
 $0 = sp + 84|0;
 $1 = sp + 88|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($__fmt) + 1|0);
 $7 = (($__iob) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,39368,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = (($__iob) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer9>>2] = $12;
  $vararg_ptr1 = (($vararg_buffer9) + 4|0);
  HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_ptr1>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_ptr1+4>>2]=HEAP32[tempDoublePtr+4>>2];
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer9)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_buffer9>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_buffer9+4>>2]=HEAP32[tempDoublePtr+4>>2];
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer9)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  if ($9) {
   $17 = (($__iob) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   HEAP32[$vararg_buffer9>>2] = $18;
   $vararg_ptr8 = (($vararg_buffer9) + 4|0);
   HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_ptr8>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_ptr8+4>>2]=HEAP32[tempDoublePtr+4>>2];
   $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer9)|0);
   $__nc$1 = $19;
  } else {
   HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_buffer9>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_buffer9+4>>2]=HEAP32[tempDoublePtr+4>>2];
   $20 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer9)|0);
   $__nc$1 = $20;
  }
  $21 = HEAP32[$__nb>>2]|0;
  $22 = ($21|0)==(0|0);
  if ($22) {
   $23 = (___cxa_allocate_exception(4)|0);
   HEAP32[$23>>2] = ((51368 + 8|0));
   ___cxa_throw(($23|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $25 = $21;$57 = $21;$__nc$2 = $__nc$1;
  }
 } else {
  $25 = $__nar;$57 = 0;$__nc$2 = $__nc$0;
 }
 $24 = (($25) + ($__nc$2)|0);
 $26 = HEAP32[$7>>2]|0;
 $27 = $26 & 176;
 do {
  if ((($27|0) == 16)) {
   $28 = HEAP8[$25>>0]|0;
   if ((($28<<24>>24) == 43) | (($28<<24>>24) == 45)) {
    $29 = (($25) + 1|0);
    $$0$i = $29;
    break;
   }
   $30 = ($__nc$2|0)>(1);
   $31 = ($28<<24>>24)==(48);
   $or$cond$i = $30 & $31;
   if ($or$cond$i) {
    $32 = (($25) + 1|0);
    $33 = HEAP8[$32>>0]|0;
    if ((($33<<24>>24) == 88) | (($33<<24>>24) == 120)) {
     $34 = (($25) + 2|0);
     $$0$i = $34;
    } else {
     label = 16;
    }
   } else {
    label = 16;
   }
  } else if ((($27|0) == 32)) {
   $$0$i = $24;
  } else {
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $$0$i = $25;
 }
 $35 = ($25|0)==($__nar|0);
 if ($35) {
  $44 = $__nar;$56 = 0;$__ob$0 = $vararg_buffer9;
 } else {
  $36 = $__nc$2 << 1;
  $37 = (_malloc($36)|0);
  $38 = ($37|0)==(0|0);
  if ($38) {
   $39 = (___cxa_allocate_exception(4)|0);
   HEAP32[$39>>2] = ((51368 + 8|0));
   ___cxa_throw(($39|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $44 = $25;$56 = $37;$__ob$0 = $37;
  }
 }
 $40 = (($__iob) + 28|0);
 $41 = HEAP32[$40>>2]|0;
 HEAP32[$0>>2] = $41;
 $42 = (($41) + 4|0);
 $43 = HEAP32[$42>>2]|0;HEAP32[$42>>2] = (($43+1)|0);
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($44,$$0$i,$24,$__ob$0,$__op,$__oe,$0);
 $45 = HEAP32[$0>>2]|0;
 $46 = (($45) + 4|0);
 $47 = HEAP32[$46>>2]|0;HEAP32[$46>>2] = (($47+-1)|0);
 $48 = ($47|0)==(0);
 if (!($48)) {
  $52 = HEAP32[$__s>>2]|0;
  $53 = HEAP32[$__op>>2]|0;
  $54 = HEAP32[$__oe>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($1,$52,$__ob$0,$53,$54,$__iob,$__fl);
  $55 = HEAP32[$1>>2]|0;
  HEAP32[$agg$result>>2] = $55;
  _free($56);
  _free($57);
  STACKTOP = sp;return;
 }
 $49 = HEAP32[$45>>2]|0;
 $50 = (($49) + 8|0);
 $51 = HEAP32[$50>>2]|0;
 FUNCTION_TABLE_vi[$51 & 255]($45);
 $52 = HEAP32[$__s>>2]|0;
 $53 = HEAP32[$__op>>2]|0;
 $54 = HEAP32[$__oe>>2]|0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($1,$52,$__ob$0,$53,$54,$__iob,$__fl);
 $55 = HEAP32[$1>>2]|0;
 HEAP32[$agg$result>>2] = $55;
 _free($56);
 _free($57);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0$i = 0, $$idx = 0, $$idx$val = 0, $$idx3 = 0, $$idx3$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__op$0 = 0, $or$cond$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer = sp;
 $__fmt = sp + 60|0;
 $__nar = sp + 40|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[39448+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[39448+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[39448+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[39448+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[39448+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[39448+5>>0]|0;
 $0 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $1 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$0,$__fmt,$vararg_buffer)|0);
 $2 = (($__nar) + ($1)|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 176;
 do {
  if ((($5|0) == 32)) {
   $$0$i = $2;
  } else if ((($5|0) == 16)) {
   $6 = HEAP8[$__nar>>0]|0;
   if ((($6<<24>>24) == 43) | (($6<<24>>24) == 45)) {
    $7 = (($__nar) + 1|0);
    $$0$i = $7;
    break;
   }
   $8 = ($1|0)>(1);
   $9 = ($6<<24>>24)==(48);
   $or$cond$i = $8 & $9;
   if ($or$cond$i) {
    $10 = (($__nar) + 1|0);
    $11 = HEAP8[$10>>0]|0;
    if ((($11<<24>>24) == 88) | (($11<<24>>24) == 120)) {
     $12 = (($__nar) + 2|0);
     $$0$i = $12;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0$i = $__nar;
 }
 $13 = (($__iob) + 28|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($14) + 4|0);
 $16 = HEAP32[$15>>2]|0;HEAP32[$15>>2] = (($16+1)|0);
 $17 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx = (($14) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx3 = (($14) + 12|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $18 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx3$val,$17)|0);
 $19 = (($14) + 4|0);
 $20 = HEAP32[$19>>2]|0;HEAP32[$19>>2] = (($20+-1)|0);
 $21 = ($20|0)==(0);
 if ($21) {
  $22 = HEAP32[$14>>2]|0;
  $23 = (($22) + 8|0);
  $24 = HEAP32[$23>>2]|0;
  FUNCTION_TABLE_vi[$24 & 255]($14);
 }
 $25 = HEAP32[$18>>2]|0;
 $26 = (($25) + 32|0);
 $27 = HEAP32[$26>>2]|0;
 (FUNCTION_TABLE_iiiii[$27 & 31]($18,$__nar,$2,$vararg_buffer)|0);
 $28 = (($vararg_buffer) + ($1)|0);
 $29 = ($$0$i|0)==($2|0);
 if ($29) {
  $__op$0 = $28;
  $34 = HEAP32[$__s>>2]|0;
  __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$34,$vararg_buffer,$__op$0,$28,$__iob,$__fl);
  STACKTOP = sp;return;
 }
 $30 = $__nar;
 $31 = $$0$i;
 $32 = (($31) - ($30))|0;
 $33 = (($vararg_buffer) + ($32)|0);
 $__op$0 = $33;
 $34 = HEAP32[$__s>>2]|0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$34,$vararg_buffer,$__op$0,$28,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0$i$i = 0, $$byval_copy = 0, $$idx = 0, $$idx$val = 0, $$idx4 = 0, $$idx4$val = 0, $$ph = 0, $$pre = 0, $$pre$phi4Z2D = 0, $$pre$phiZ2D = 0, $$pre2 = 0, $$pre3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, $__nm = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy = sp + 16|0;
 $0 = sp + 12|0;
 $__nm = sp;
 $1 = (($__iob) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $5 = HEAP32[$this>>2]|0;
  $6 = (($5) + 24|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$__s>>2]|0;
  HEAP32[$0>>2] = $8;
  $9 = $__v&1;
  ;HEAP32[$$byval_copy+0>>2]=HEAP32[$0+0>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 15]($agg$result,$this,$$byval_copy,$__iob,$__fl,$9);
  STACKTOP = sp;return;
 }
 $10 = (($__iob) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 4|0);
 $13 = HEAP32[$12>>2]|0;HEAP32[$12>>2] = (($13+1)|0);
 $14 = (__ZNSt3__16locale2id5__getEv(40792)|0);
 $$idx = (($11) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx4 = (($11) + 12|0);
 $$idx4$val = HEAP32[$$idx4>>2]|0;
 $15 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx4$val,$14)|0);
 $16 = (($11) + 4|0);
 $17 = HEAP32[$16>>2]|0;HEAP32[$16>>2] = (($17+-1)|0);
 $18 = ($17|0)==(0);
 if ($18) {
  $19 = HEAP32[$11>>2]|0;
  $20 = (($19) + 8|0);
  $21 = HEAP32[$20>>2]|0;
  FUNCTION_TABLE_vi[$21 & 255]($11);
 }
 $22 = HEAP32[$15>>2]|0;
 if ($__v) {
  $23 = (($22) + 24|0);
  $24 = HEAP32[$23>>2]|0;
  FUNCTION_TABLE_vii[$24 & 63]($__nm,$15);
 } else {
  $25 = (($22) + 28|0);
  $26 = HEAP32[$25>>2]|0;
  FUNCTION_TABLE_vii[$26 & 63]($__nm,$15);
 }
 $27 = HEAP8[$__nm>>0]|0;
 $28 = $27 & 1;
 $29 = ($28<<24>>24)==(0);
 if ($29) {
  $32 = (($__nm) + 4|0);
  $$pre3 = (($__nm) + 8|0);
  $$ph = $32;$$pre$phi4Z2D = $$pre3;$$pre$phiZ2D = $32;
 } else {
  $30 = (($__nm) + 8|0);
  $31 = HEAP32[$30>>2]|0;
  $$pre2 = (($__nm) + 4|0);
  $$ph = $31;$$pre$phi4Z2D = $30;$$pre$phiZ2D = $$pre2;
 }
 $34 = $27;$44 = $$ph;
 while(1) {
  $33 = $34 & 1;
  $35 = ($33<<24>>24)==(0);
  if ($35) {
   $38 = $34&255;
   $39 = $38 >>> 1;
   $41 = $$pre$phiZ2D;$42 = $39;
  } else {
   $36 = HEAP32[$$pre$phi4Z2D>>2]|0;
   $37 = HEAP32[$$pre$phiZ2D>>2]|0;
   $41 = $36;$42 = $37;
  }
  $40 = (($41) + ($42<<2)|0);
  $43 = ($44|0)==($40|0);
  if ($43) {
   break;
  }
  $45 = HEAP32[$44>>2]|0;
  $46 = HEAP32[$__s>>2]|0;
  $47 = ($46|0)==(0|0);
  if (!($47)) {
   $48 = (($46) + 24|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = (($46) + 28|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ($49|0)==($51|0);
   if ($52) {
    $53 = HEAP32[$46>>2]|0;
    $54 = (($53) + 52|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (FUNCTION_TABLE_iii[$55 & 63]($46,$45)|0);
    $$0$i$i = $56;
   } else {
    $57 = (($49) + 4|0);
    HEAP32[$48>>2] = $57;
    HEAP32[$49>>2] = $45;
    $$0$i$i = $45;
   }
   $58 = ($$0$i$i|0)==(-1);
   if ($58) {
    HEAP32[$__s>>2] = 0;
   }
  }
  $59 = (($44) + 4|0);
  $$pre = HEAP8[$__nm>>0]|0;
  $34 = $$pre;$44 = $59;
 }
 $60 = HEAP32[$__s>>2]|0;
 HEAP32[$agg$result>>2] = $60;
 if ($35) {
  STACKTOP = sp;return;
 }
 $61 = (($__nm) + 8|0);
 $62 = HEAP32[$61>>2]|0;
 _free($62);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__oe = 0, $__op = 0, $or$cond$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $vararg_buffer = sp;
 $__fmt = sp + 108|0;
 $__nar = sp + 96|0;
 $__op = sp + 92|0;
 $__oe = sp + 88|0;
 $0 = sp + 84|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[39440+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[39440+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[39440+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[39440+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[39440+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[39440+5>>0]|0;
 $1 = (($__fmt) + 1|0);
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($1,50424,1,$3);
 $4 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $5 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$4,$__fmt,$vararg_buffer)|0);
 $6 = (($__nar) + ($5)|0);
 $7 = HEAP32[$2>>2]|0;
 $8 = $7 & 176;
 do {
  if ((($8|0) == 16)) {
   $9 = HEAP8[$__nar>>0]|0;
   if ((($9<<24>>24) == 43) | (($9<<24>>24) == 45)) {
    $10 = (($__nar) + 1|0);
    $$0$i = $10;
    break;
   }
   $11 = ($5|0)>(1);
   $12 = ($9<<24>>24)==(48);
   $or$cond$i = $11 & $12;
   if ($or$cond$i) {
    $13 = (($__nar) + 1|0);
    $14 = HEAP8[$13>>0]|0;
    if ((($14<<24>>24) == 88) | (($14<<24>>24) == 120)) {
     $15 = (($__nar) + 2|0);
     $$0$i = $15;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else if ((($8|0) == 32)) {
   $$0$i = $6;
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0$i = $__nar;
 }
 $16 = (($__iob) + 28|0);
 $17 = HEAP32[$16>>2]|0;
 HEAP32[$0>>2] = $17;
 $18 = (($17) + 4|0);
 $19 = HEAP32[$18>>2]|0;HEAP32[$18>>2] = (($19+1)|0);
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$$0$i,$6,$vararg_buffer,$__op,$__oe,$0);
 $20 = HEAP32[$0>>2]|0;
 $21 = (($20) + 4|0);
 $22 = HEAP32[$21>>2]|0;HEAP32[$21>>2] = (($22+-1)|0);
 $23 = ($22|0)==(0);
 if (!($23)) {
  $27 = HEAP32[$__s>>2]|0;
  $28 = HEAP32[$__op>>2]|0;
  $29 = HEAP32[$__oe>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$27,$vararg_buffer,$28,$29,$__iob,$__fl);
  STACKTOP = sp;return;
 }
 $24 = HEAP32[$20>>2]|0;
 $25 = (($24) + 8|0);
 $26 = HEAP32[$25>>2]|0;
 FUNCTION_TABLE_vi[$26 & 255]($20);
 $27 = HEAP32[$__s>>2]|0;
 $28 = HEAP32[$__op>>2]|0;
 $29 = HEAP32[$__oe>>2]|0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$27,$vararg_buffer,$28,$29,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$012$i$i = 0, $$012$i$i5 = 0, $$__dg$0 = 0, $$idx = 0, $$idx$val = 0, $$idx2 = 0, $$idx2$val = 0, $$idx3 = 0, $$idx3$val = 0, $$idx4 = 0, $$idx4$val = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__dc$08 = 0, $__dc$1 = 0, $__dg$09 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$010 = 0, $or$cond = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = HEAP32[$__loc>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx3 = (($0) + 8|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $$idx4 = (($0) + 12|0);
 $$idx4$val = HEAP32[$$idx4>>2]|0;
 $2 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx3$val,$$idx4$val,$1)|0);
 $3 = HEAP32[$__loc>>2]|0;
 $4 = (__ZNSt3__16locale2id5__getEv(40792)|0);
 $$idx = (($3) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx2 = (($3) + 12|0);
 $$idx2$val = HEAP32[$$idx2>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx2$val,$4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 FUNCTION_TABLE_vii[$8 & 63]($__grouping,$5);
 $9 = HEAP8[$__grouping>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if ($11) {
  $14 = $9&255;
  $15 = $14 >>> 1;
  $17 = $15;
 } else {
  $12 = (($__grouping) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $17 = $13;
 }
 $16 = ($17|0)==(0);
 if ($16) {
  $18 = HEAP32[$2>>2]|0;
  $19 = (($18) + 48|0);
  $20 = HEAP32[$19>>2]|0;
  (FUNCTION_TABLE_iiiii[$20 & 31]($2,$__nb,$__ne,$__ob)|0);
  $21 = $__ne;
  $22 = $__nb;
  $23 = (($21) - ($22))|0;
  $24 = (($__ob) + ($23<<2)|0);
  HEAP32[$__oe>>2] = $24;
  $127 = $24;
 } else {
  HEAP32[$__oe>>2] = $__ob;
  $25 = HEAP8[$__nb>>0]|0;
  if ((($25<<24>>24) == 43) | (($25<<24>>24) == 45)) {
   $26 = HEAP32[$2>>2]|0;
   $27 = (($26) + 44|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (FUNCTION_TABLE_iii[$28 & 63]($2,$25)|0);
   $30 = (($__nb) + 1|0);
   $31 = HEAP32[$__oe>>2]|0;
   $32 = (($31) + 4|0);
   HEAP32[$__oe>>2] = $32;
   HEAP32[$31>>2] = $29;
   $__nf$0 = $30;
  } else {
   $__nf$0 = $__nb;
  }
  $33 = $__ne;
  $34 = $__nf$0;
  $35 = (($33) - ($34))|0;
  $36 = ($35|0)>(1);
  if ($36) {
   $37 = HEAP8[$__nf$0>>0]|0;
   $38 = ($37<<24>>24)==(48);
   if ($38) {
    $39 = (($__nf$0) + 1|0);
    $40 = HEAP8[$39>>0]|0;
    if ((($40<<24>>24) == 88) | (($40<<24>>24) == 120)) {
     $41 = HEAP32[$2>>2]|0;
     $42 = (($41) + 44|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = (FUNCTION_TABLE_iii[$43 & 63]($2,48)|0);
     $45 = HEAP32[$__oe>>2]|0;
     $46 = (($45) + 4|0);
     HEAP32[$__oe>>2] = $46;
     HEAP32[$45>>2] = $44;
     $47 = HEAP8[$39>>0]|0;
     $48 = HEAP32[$2>>2]|0;
     $49 = (($48) + 44|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = (FUNCTION_TABLE_iii[$50 & 63]($2,$47)|0);
     $52 = (($__nf$0) + 2|0);
     $53 = HEAP32[$__oe>>2]|0;
     $54 = (($53) + 4|0);
     HEAP32[$__oe>>2] = $54;
     HEAP32[$53>>2] = $51;
     $__nf$1 = $52;
    } else {
     $__nf$1 = $__nf$0;
    }
   } else {
    $__nf$1 = $__nf$0;
   }
  } else {
   $__nf$1 = $__nf$0;
  }
  $55 = ($__nf$1|0)==($__ne|0);
  if (!($55)) {
   $56 = (($__ne) + -1|0);
   $57 = ($56>>>0)>($__nf$1>>>0);
   if ($57) {
    $$012$i$i5 = $__nf$1;$60 = $56;
    while(1) {
     $58 = HEAP8[$$012$i$i5>>0]|0;
     $59 = HEAP8[$60>>0]|0;
     HEAP8[$$012$i$i5>>0] = $59;
     HEAP8[$60>>0] = $58;
     $61 = (($$012$i$i5) + 1|0);
     $62 = (($60) + -1|0);
     $63 = ($61>>>0)<($62>>>0);
     if ($63) {
      $$012$i$i5 = $61;$60 = $62;
     } else {
      break;
     }
    }
   }
  }
  $64 = HEAP32[$5>>2]|0;
  $65 = (($64) + 16|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = (FUNCTION_TABLE_ii[$66 & 127]($5)|0);
  $68 = ($__nf$1>>>0)<($__ne>>>0);
  if ($68) {
   $69 = (($__grouping) + 1|0);
   $70 = (($__grouping) + 4|0);
   $71 = (($__grouping) + 8|0);
   $__dc$08 = 0;$__dg$09 = 0;$__p$010 = $__nf$1;
   while(1) {
    $72 = HEAP8[$__grouping>>0]|0;
    $73 = $72 & 1;
    $74 = ($73<<24>>24)==(0);
    $75 = HEAP32[$71>>2]|0;
    $$ = $74 ? $69 : $75;
    $76 = (($$) + ($__dg$09)|0);
    $77 = HEAP8[$76>>0]|0;
    $78 = ($77<<24>>24)!=(0);
    $79 = $77 << 24 >> 24;
    $80 = ($__dc$08|0)==($79|0);
    $or$cond = $78 & $80;
    if ($or$cond) {
     $81 = HEAP32[$__oe>>2]|0;
     $82 = (($81) + 4|0);
     HEAP32[$__oe>>2] = $82;
     HEAP32[$81>>2] = $67;
     $83 = HEAP8[$__grouping>>0]|0;
     $84 = $83 & 1;
     $85 = ($84<<24>>24)==(0);
     if ($85) {
      $87 = $83&255;
      $88 = $87 >>> 1;
      $90 = $88;
     } else {
      $86 = HEAP32[$70>>2]|0;
      $90 = $86;
     }
     $89 = (($90) + -1)|0;
     $91 = ($__dg$09>>>0)<($89>>>0);
     $92 = $91&1;
     $$__dg$0 = (($92) + ($__dg$09))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$08;$__dg$1 = $__dg$09;
    }
    $93 = HEAP8[$__p$010>>0]|0;
    $94 = HEAP32[$2>>2]|0;
    $95 = (($94) + 44|0);
    $96 = HEAP32[$95>>2]|0;
    $97 = (FUNCTION_TABLE_iii[$96 & 63]($2,$93)|0);
    $98 = HEAP32[$__oe>>2]|0;
    $99 = (($98) + 4|0);
    HEAP32[$__oe>>2] = $99;
    HEAP32[$98>>2] = $97;
    $100 = (($__dc$1) + 1)|0;
    $101 = (($__p$010) + 1|0);
    $102 = ($101>>>0)<($__ne>>>0);
    if ($102) {
     $__dc$08 = $100;$__dg$09 = $__dg$1;$__p$010 = $101;
    } else {
     $108 = $99;
     break;
    }
   }
  } else {
   $$pre = HEAP32[$__oe>>2]|0;
   $108 = $$pre;
  }
  $103 = $__nf$1;
  $104 = $__nb;
  $105 = (($103) - ($104))|0;
  $106 = (($__ob) + ($105<<2)|0);
  $107 = ($106|0)==($108|0);
  if ($107) {
   $127 = $108;
  } else {
   $109 = (($108) + -4|0);
   $110 = ($109>>>0)>($106>>>0);
   if ($110) {
    $$012$i$i = $106;$113 = $109;
    while(1) {
     $111 = HEAP32[$$012$i$i>>2]|0;
     $112 = HEAP32[$113>>2]|0;
     HEAP32[$$012$i$i>>2] = $112;
     HEAP32[$113>>2] = $111;
     $114 = (($$012$i$i) + 4|0);
     $115 = (($113) + -4|0);
     $116 = ($114>>>0)<($115>>>0);
     if ($116) {
      $$012$i$i = $114;$113 = $115;
     } else {
      $127 = $108;
      break;
     }
    }
   } else {
    $127 = $108;
   }
  }
 }
 $117 = ($__np|0)==($__ne|0);
 if ($117) {
  $storemerge = $127;
 } else {
  $118 = $__np;
  $119 = $__nb;
  $120 = (($118) - ($119))|0;
  $121 = (($__ob) + ($120<<2)|0);
  $storemerge = $121;
 }
 HEAP32[$__op>>2] = $storemerge;
 $122 = HEAP8[$__grouping>>0]|0;
 $123 = $122 & 1;
 $124 = ($123<<24>>24)==(0);
 if ($124) {
  STACKTOP = sp;return;
 }
 $125 = (($__grouping) + 8|0);
 $126 = HEAP32[$125>>2]|0;
 _free($126);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__oe = 0, $__op = 0, $or$cond$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 184|0;
 $__op = sp + 180|0;
 $__oe = sp + 176|0;
 $2 = sp + 172|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($7,50432,1,$9);
 $10 = (__ZNSt3__16__clocEv()|0);
 $11 = $vararg_buffer;
 $12 = $11;
 HEAP32[$12>>2] = $0;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $1;
 $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,22,$10,$__fmt,$vararg_buffer)|0);
 $16 = (($__nar) + ($15)|0);
 $17 = HEAP32[$8>>2]|0;
 $18 = $17 & 176;
 do {
  if ((($18|0) == 16)) {
   $19 = HEAP8[$__nar>>0]|0;
   if ((($19<<24>>24) == 43) | (($19<<24>>24) == 45)) {
    $20 = (($__nar) + 1|0);
    $$0$i = $20;
    break;
   }
   $21 = ($15|0)>(1);
   $22 = ($19<<24>>24)==(48);
   $or$cond$i = $21 & $22;
   if ($or$cond$i) {
    $23 = (($__nar) + 1|0);
    $24 = HEAP8[$23>>0]|0;
    if ((($24<<24>>24) == 88) | (($24<<24>>24) == 120)) {
     $25 = (($__nar) + 2|0);
     $$0$i = $25;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else if ((($18|0) == 32)) {
   $$0$i = $16;
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0$i = $__nar;
 }
 $26 = (($__iob) + 28|0);
 $27 = HEAP32[$26>>2]|0;
 HEAP32[$2>>2] = $27;
 $28 = (($27) + 4|0);
 $29 = HEAP32[$28>>2]|0;HEAP32[$28>>2] = (($29+1)|0);
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$$0$i,$16,$vararg_buffer,$__op,$__oe,$2);
 $30 = HEAP32[$2>>2]|0;
 $31 = (($30) + 4|0);
 $32 = HEAP32[$31>>2]|0;HEAP32[$31>>2] = (($32+-1)|0);
 $33 = ($32|0)==(0);
 if (!($33)) {
  $37 = HEAP32[$__s>>2]|0;
  $38 = HEAP32[$__op>>2]|0;
  $39 = HEAP32[$__oe>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$37,$vararg_buffer,$38,$39,$__iob,$__fl);
  STACKTOP = sp;return;
 }
 $34 = HEAP32[$30>>2]|0;
 $35 = (($34) + 8|0);
 $36 = HEAP32[$35>>2]|0;
 FUNCTION_TABLE_vi[$36 & 255]($30);
 $37 = HEAP32[$__s>>2]|0;
 $38 = HEAP32[$__op>>2]|0;
 $39 = HEAP32[$__oe>>2]|0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$37,$vararg_buffer,$38,$39,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__oe = 0, $__op = 0, $or$cond$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $vararg_buffer = sp;
 $__fmt = sp + 108|0;
 $__nar = sp + 96|0;
 $__op = sp + 92|0;
 $__oe = sp + 88|0;
 $0 = sp + 84|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[39440+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[39440+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[39440+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[39440+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[39440+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[39440+5>>0]|0;
 $1 = (($__fmt) + 1|0);
 $2 = (($__iob) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($1,50424,0,$3);
 $4 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $5 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,12,$4,$__fmt,$vararg_buffer)|0);
 $6 = (($__nar) + ($5)|0);
 $7 = HEAP32[$2>>2]|0;
 $8 = $7 & 176;
 do {
  if ((($8|0) == 16)) {
   $9 = HEAP8[$__nar>>0]|0;
   if ((($9<<24>>24) == 43) | (($9<<24>>24) == 45)) {
    $10 = (($__nar) + 1|0);
    $$0$i = $10;
    break;
   }
   $11 = ($5|0)>(1);
   $12 = ($9<<24>>24)==(48);
   $or$cond$i = $11 & $12;
   if ($or$cond$i) {
    $13 = (($__nar) + 1|0);
    $14 = HEAP8[$13>>0]|0;
    if ((($14<<24>>24) == 88) | (($14<<24>>24) == 120)) {
     $15 = (($__nar) + 2|0);
     $$0$i = $15;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else if ((($8|0) == 32)) {
   $$0$i = $6;
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0$i = $__nar;
 }
 $16 = (($__iob) + 28|0);
 $17 = HEAP32[$16>>2]|0;
 HEAP32[$0>>2] = $17;
 $18 = (($17) + 4|0);
 $19 = HEAP32[$18>>2]|0;HEAP32[$18>>2] = (($19+1)|0);
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$$0$i,$6,$vararg_buffer,$__op,$__oe,$0);
 $20 = HEAP32[$0>>2]|0;
 $21 = (($20) + 4|0);
 $22 = HEAP32[$21>>2]|0;HEAP32[$21>>2] = (($22+-1)|0);
 $23 = ($22|0)==(0);
 if (!($23)) {
  $27 = HEAP32[$__s>>2]|0;
  $28 = HEAP32[$__op>>2]|0;
  $29 = HEAP32[$__oe>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$27,$vararg_buffer,$28,$29,$__iob,$__fl);
  STACKTOP = sp;return;
 }
 $24 = HEAP32[$20>>2]|0;
 $25 = (($24) + 8|0);
 $26 = HEAP32[$25>>2]|0;
 FUNCTION_TABLE_vi[$26 & 255]($20);
 $27 = HEAP32[$__s>>2]|0;
 $28 = HEAP32[$__op>>2]|0;
 $29 = HEAP32[$__oe>>2]|0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$27,$vararg_buffer,$28,$29,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($agg$result,$this,$__s,$__iob,$__fl,$0,$1) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__oe = 0, $__op = 0, $or$cond$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $vararg_buffer = sp + 8|0;
 $__fmt = sp;
 $__nar = sp + 192|0;
 $__op = sp + 188|0;
 $__oe = sp + 184|0;
 $2 = sp + 180|0;
 $3 = $__fmt;
 $4 = $3;
 HEAP32[$4>>2] = 37;
 $5 = (($3) + 4)|0;
 $6 = $5;
 HEAP32[$6>>2] = 0;
 $7 = (($__fmt) + 1|0);
 $8 = (($__iob) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($7,50432,0,$9);
 $10 = (__ZNSt3__16__clocEv()|0);
 $11 = $vararg_buffer;
 $12 = $11;
 HEAP32[$12>>2] = $0;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $1;
 $15 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,23,$10,$__fmt,$vararg_buffer)|0);
 $16 = (($__nar) + ($15)|0);
 $17 = HEAP32[$8>>2]|0;
 $18 = $17 & 176;
 do {
  if ((($18|0) == 16)) {
   $19 = HEAP8[$__nar>>0]|0;
   if ((($19<<24>>24) == 43) | (($19<<24>>24) == 45)) {
    $20 = (($__nar) + 1|0);
    $$0$i = $20;
    break;
   }
   $21 = ($15|0)>(1);
   $22 = ($19<<24>>24)==(48);
   $or$cond$i = $21 & $22;
   if ($or$cond$i) {
    $23 = (($__nar) + 1|0);
    $24 = HEAP8[$23>>0]|0;
    if ((($24<<24>>24) == 88) | (($24<<24>>24) == 120)) {
     $25 = (($__nar) + 2|0);
     $$0$i = $25;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else if ((($18|0) == 32)) {
   $$0$i = $16;
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0$i = $__nar;
 }
 $26 = (($__iob) + 28|0);
 $27 = HEAP32[$26>>2]|0;
 HEAP32[$2>>2] = $27;
 $28 = (($27) + 4|0);
 $29 = HEAP32[$28>>2]|0;HEAP32[$28>>2] = (($29+1)|0);
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nar,$$0$i,$16,$vararg_buffer,$__op,$__oe,$2);
 $30 = HEAP32[$2>>2]|0;
 $31 = (($30) + 4|0);
 $32 = HEAP32[$31>>2]|0;HEAP32[$31>>2] = (($32+-1)|0);
 $33 = ($32|0)==(0);
 if (!($33)) {
  $37 = HEAP32[$__s>>2]|0;
  $38 = HEAP32[$__op>>2]|0;
  $39 = HEAP32[$__oe>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$37,$vararg_buffer,$38,$39,$__iob,$__fl);
  STACKTOP = sp;return;
 }
 $34 = HEAP32[$30>>2]|0;
 $35 = (($34) + 8|0);
 $36 = HEAP32[$35>>2]|0;
 FUNCTION_TABLE_vi[$36 & 255]($30);
 $37 = HEAP32[$__s>>2]|0;
 $38 = HEAP32[$__op>>2]|0;
 $39 = HEAP32[$__oe>>2]|0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$37,$vararg_buffer,$38,$39,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0;
 var $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$2 = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $or$cond$i = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $vararg_buffer5 = sp;
 $__fmt = sp + 232|0;
 $__nar = sp + 260|0;
 $__nb = sp + 248|0;
 $__op = sp + 244|0;
 $__oe = sp + 240|0;
 $0 = sp + 252|0;
 $1 = sp + 256|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($__fmt) + 1|0);
 $7 = (($__iob) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,50416,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = (($__iob) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer5>>2] = $12;
  $vararg_ptr1 = (($vararg_buffer5) + 4|0);
  HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_ptr1>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_ptr1+4>>2]=HEAP32[tempDoublePtr+4>>2];
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer5)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_buffer5>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_buffer5+4>>2]=HEAP32[tempDoublePtr+4>>2];
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer5)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  $17 = (($__iob) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$vararg_buffer5>>2] = $18;
  $vararg_ptr8 = (($vararg_buffer5) + 4|0);
  HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_ptr8>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_ptr8+4>>2]=HEAP32[tempDoublePtr+4>>2];
  $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer5)|0);
  $20 = HEAP32[$__nb>>2]|0;
  $21 = ($20|0)==(0|0);
  if ($21) {
   $22 = (___cxa_allocate_exception(4)|0);
   HEAP32[$22>>2] = ((51368 + 8|0));
   ___cxa_throw(($22|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $24 = $20;$57 = $20;$__nc$2 = $19;
  }
 } else {
  $24 = $__nar;$57 = 0;$__nc$2 = $__nc$0;
 }
 $23 = (($24) + ($__nc$2)|0);
 $25 = HEAP32[$7>>2]|0;
 $26 = $25 & 176;
 do {
  if ((($26|0) == 32)) {
   $$0$i = $23;
  } else if ((($26|0) == 16)) {
   $27 = HEAP8[$24>>0]|0;
   if ((($27<<24>>24) == 43) | (($27<<24>>24) == 45)) {
    $28 = (($24) + 1|0);
    $$0$i = $28;
    break;
   }
   $29 = ($__nc$2|0)>(1);
   $30 = ($27<<24>>24)==(48);
   $or$cond$i = $29 & $30;
   if ($or$cond$i) {
    $31 = (($24) + 1|0);
    $32 = HEAP8[$31>>0]|0;
    if ((($32<<24>>24) == 88) | (($32<<24>>24) == 120)) {
     $33 = (($24) + 2|0);
     $$0$i = $33;
    } else {
     label = 13;
    }
   } else {
    label = 13;
   }
  } else {
   label = 13;
  }
 } while(0);
 if ((label|0) == 13) {
  $$0$i = $24;
 }
 $34 = ($24|0)==($__nar|0);
 if ($34) {
  $43 = $__nar;$56 = 0;$__ob$0 = $vararg_buffer5;
 } else {
  $35 = $__nc$2 << 3;
  $36 = (_malloc($35)|0);
  $37 = ($36|0)==(0|0);
  if ($37) {
   $38 = (___cxa_allocate_exception(4)|0);
   HEAP32[$38>>2] = ((51368 + 8|0));
   ___cxa_throw(($38|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $43 = $24;$56 = $36;$__ob$0 = $36;
  }
 }
 $39 = (($__iob) + 28|0);
 $40 = HEAP32[$39>>2]|0;
 HEAP32[$0>>2] = $40;
 $41 = (($40) + 4|0);
 $42 = HEAP32[$41>>2]|0;HEAP32[$41>>2] = (($42+1)|0);
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($43,$$0$i,$23,$__ob$0,$__op,$__oe,$0);
 $44 = HEAP32[$0>>2]|0;
 $45 = (($44) + 4|0);
 $46 = HEAP32[$45>>2]|0;HEAP32[$45>>2] = (($46+-1)|0);
 $47 = ($46|0)==(0);
 if ($47) {
  $48 = HEAP32[$44>>2]|0;
  $49 = (($48) + 8|0);
  $50 = HEAP32[$49>>2]|0;
  FUNCTION_TABLE_vi[$50 & 255]($44);
 }
 $51 = HEAP32[$__s>>2]|0;
 $52 = HEAP32[$__op>>2]|0;
 $53 = HEAP32[$__oe>>2]|0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($1,$51,$__ob$0,$52,$53,$__iob,$__fl);
 $54 = HEAP32[$1>>2]|0;
 HEAP32[$__s>>2] = $54;
 HEAP32[$agg$result>>2] = $54;
 $55 = ($56|0)==(0|0);
 if ($55) {
  _free($57);
  STACKTOP = sp;return;
 }
 _free($56);
 _free($57);
 STACKTOP = sp;return;
}
function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb,$__np,$__ne,$__ob,$__op,$__oe,$__loc) {
 $__nb = $__nb|0;
 $__np = $__np|0;
 $__ne = $__ne|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__loc = $__loc|0;
 var $$ = 0, $$012$i$i = 0, $$012$i$i7 = 0, $$__dg$0 = 0, $$idx = 0, $$idx$val = 0, $$idx2 = 0, $$idx2$val = 0, $$idx3 = 0, $$idx3$val = 0, $$idx4 = 0, $$idx4$val = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__dc$017 = 0, $__dc$1 = 0, $__dg$018 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$213 = 0, $__nf$3 = 0, $__ns$033 = 0, $__ns$125 = 0, $__ns$2 = 0, $__p$019 = 0, $isdigit$i = 0, $isdigit$i$i = 0, $isdigittmp$i = 0, $isdigittmp$i$i = 0, $or$cond = 0;
 var $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__grouping = sp;
 $0 = HEAP32[$__loc>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx3 = (($0) + 8|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $$idx4 = (($0) + 12|0);
 $$idx4$val = HEAP32[$$idx4>>2]|0;
 $2 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx3$val,$$idx4$val,$1)|0);
 $3 = HEAP32[$__loc>>2]|0;
 $4 = (__ZNSt3__16locale2id5__getEv(40792)|0);
 $$idx = (($3) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx2 = (($3) + 12|0);
 $$idx2$val = HEAP32[$$idx2>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx2$val,$4)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 FUNCTION_TABLE_vii[$8 & 63]($__grouping,$5);
 HEAP32[$__oe>>2] = $__ob;
 $9 = HEAP8[$__nb>>0]|0;
 if ((($9<<24>>24) == 43) | (($9<<24>>24) == 45)) {
  $10 = HEAP32[$2>>2]|0;
  $11 = (($10) + 44|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (FUNCTION_TABLE_iii[$12 & 63]($2,$9)|0);
  $14 = (($__nb) + 1|0);
  $15 = HEAP32[$__oe>>2]|0;
  $16 = (($15) + 4|0);
  HEAP32[$__oe>>2] = $16;
  HEAP32[$15>>2] = $13;
  $__nf$0 = $14;
 } else {
  $__nf$0 = $__nb;
 }
 $17 = $__ne;
 $18 = $__nf$0;
 $19 = (($17) - ($18))|0;
 $20 = ($19|0)>(1);
 L4: do {
  if ($20) {
   $22 = HEAP8[$__nf$0>>0]|0;
   $23 = ($22<<24>>24)==(48);
   if ($23) {
    $24 = (($__nf$0) + 1|0);
    $25 = HEAP8[$24>>0]|0;
    if ((($25<<24>>24) == 88) | (($25<<24>>24) == 120)) {
     $26 = HEAP32[$2>>2]|0;
     $27 = (($26) + 44|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = (FUNCTION_TABLE_iii[$28 & 63]($2,48)|0);
     $30 = HEAP32[$__oe>>2]|0;
     $31 = (($30) + 4|0);
     HEAP32[$__oe>>2] = $31;
     HEAP32[$30>>2] = $29;
     $32 = (($__nf$0) + 2|0);
     $33 = HEAP8[$24>>0]|0;
     $34 = HEAP32[$2>>2]|0;
     $35 = (($34) + 44|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = (FUNCTION_TABLE_iii[$36 & 63]($2,$33)|0);
     $38 = HEAP32[$__oe>>2]|0;
     $39 = (($38) + 4|0);
     HEAP32[$__oe>>2] = $39;
     HEAP32[$38>>2] = $37;
     $40 = ($32>>>0)<($__ne>>>0);
     if ($40) {
      $__ns$033 = $32;
      while(1) {
       $43 = HEAP8[$__ns$033>>0]|0;
       (__ZNSt3__16__clocEv()|0);
       $44 = $43 << 24 >> 24;
       $isdigittmp$i$i = (($44) + -48)|0;
       $isdigit$i$i = ($isdigittmp$i$i>>>0)<(10);
       if (!($isdigit$i$i)) {
        $45 = $44 | 32;
        $46 = (($45) + -97)|0;
        $47 = ($46>>>0)<(6);
        if (!($47)) {
         $__nf$1 = $32;$__ns$2 = $__ns$033;
         break L4;
        }
       }
       $41 = (($__ns$033) + 1|0);
       $42 = ($41>>>0)<($__ne>>>0);
       if ($42) {
        $__ns$033 = $41;
       } else {
        $__nf$1 = $32;$__ns$2 = $41;
        break;
       }
      }
     } else {
      $__nf$1 = $32;$__ns$2 = $32;
     }
    } else {
     label = 4;
    }
   } else {
    label = 4;
   }
  } else {
   label = 4;
  }
 } while(0);
 L13: do {
  if ((label|0) == 4) {
   $21 = ($__nf$0>>>0)<($__ne>>>0);
   if ($21) {
    $__ns$125 = $__nf$0;
    while(1) {
     $50 = HEAP8[$__ns$125>>0]|0;
     (__ZNSt3__16__clocEv()|0);
     $51 = $50 << 24 >> 24;
     $isdigittmp$i = (($51) + -48)|0;
     $isdigit$i = ($isdigittmp$i>>>0)<(10);
     $49 = (($__ns$125) + 1|0);
     if (!($isdigit$i)) {
      $__nf$1 = $__nf$0;$__ns$2 = $__ns$125;
      break L13;
     }
     $48 = ($49>>>0)<($__ne>>>0);
     if ($48) {
      $__ns$125 = $49;
     } else {
      $__nf$1 = $__nf$0;$__ns$2 = $49;
      break;
     }
    }
   } else {
    $__nf$1 = $__nf$0;$__ns$2 = $__nf$0;
   }
  }
 } while(0);
 $52 = HEAP8[$__grouping>>0]|0;
 $53 = $52 & 1;
 $54 = ($53<<24>>24)==(0);
 if ($54) {
  $57 = $52&255;
  $58 = $57 >>> 1;
  $60 = $58;
 } else {
  $55 = (($__grouping) + 4|0);
  $56 = HEAP32[$55>>2]|0;
  $60 = $56;
 }
 $59 = ($60|0)==(0);
 if ($59) {
  $61 = HEAP32[$__oe>>2]|0;
  $62 = HEAP32[$2>>2]|0;
  $63 = (($62) + 48|0);
  $64 = HEAP32[$63>>2]|0;
  (FUNCTION_TABLE_iiiii[$64 & 31]($2,$__nf$1,$__ns$2,$61)|0);
  $65 = $__ns$2;
  $66 = $__nf$1;
  $67 = (($65) - ($66))|0;
  $68 = HEAP32[$__oe>>2]|0;
  $69 = (($68) + ($67<<2)|0);
  HEAP32[$__oe>>2] = $69;
  $168 = $69;
 } else {
  $70 = ($__nf$1|0)==($__ns$2|0);
  if (!($70)) {
   $71 = (($__ns$2) + -1|0);
   $72 = ($71>>>0)>($__nf$1>>>0);
   if ($72) {
    $$012$i$i = $__nf$1;$75 = $71;
    while(1) {
     $73 = HEAP8[$$012$i$i>>0]|0;
     $74 = HEAP8[$75>>0]|0;
     HEAP8[$$012$i$i>>0] = $74;
     HEAP8[$75>>0] = $73;
     $76 = (($$012$i$i) + 1|0);
     $77 = (($75) + -1|0);
     $78 = ($76>>>0)<($77>>>0);
     if ($78) {
      $$012$i$i = $76;$75 = $77;
     } else {
      break;
     }
    }
   }
  }
  $79 = HEAP32[$5>>2]|0;
  $80 = (($79) + 16|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = (FUNCTION_TABLE_ii[$81 & 127]($5)|0);
  $83 = ($__nf$1>>>0)<($__ns$2>>>0);
  if ($83) {
   $84 = (($__grouping) + 1|0);
   $85 = (($__grouping) + 4|0);
   $86 = (($__grouping) + 8|0);
   $__dc$017 = 0;$__dg$018 = 0;$__p$019 = $__nf$1;
   while(1) {
    $87 = HEAP8[$__grouping>>0]|0;
    $88 = $87 & 1;
    $89 = ($88<<24>>24)==(0);
    $90 = HEAP32[$86>>2]|0;
    $$ = $89 ? $84 : $90;
    $91 = (($$) + ($__dg$018)|0);
    $92 = HEAP8[$91>>0]|0;
    $93 = ($92<<24>>24)>(0);
    $94 = $92 << 24 >> 24;
    $95 = ($__dc$017|0)==($94|0);
    $or$cond = $93 & $95;
    if ($or$cond) {
     $96 = HEAP32[$__oe>>2]|0;
     $97 = (($96) + 4|0);
     HEAP32[$__oe>>2] = $97;
     HEAP32[$96>>2] = $82;
     $98 = HEAP8[$__grouping>>0]|0;
     $99 = $98 & 1;
     $100 = ($99<<24>>24)==(0);
     if ($100) {
      $102 = $98&255;
      $103 = $102 >>> 1;
      $105 = $103;
     } else {
      $101 = HEAP32[$85>>2]|0;
      $105 = $101;
     }
     $104 = (($105) + -1)|0;
     $106 = ($__dg$018>>>0)<($104>>>0);
     $107 = $106&1;
     $$__dg$0 = (($107) + ($__dg$018))|0;
     $__dc$1 = 0;$__dg$1 = $$__dg$0;
    } else {
     $__dc$1 = $__dc$017;$__dg$1 = $__dg$018;
    }
    $108 = HEAP8[$__p$019>>0]|0;
    $109 = HEAP32[$2>>2]|0;
    $110 = (($109) + 44|0);
    $111 = HEAP32[$110>>2]|0;
    $112 = (FUNCTION_TABLE_iii[$111 & 63]($2,$108)|0);
    $113 = HEAP32[$__oe>>2]|0;
    $114 = (($113) + 4|0);
    HEAP32[$__oe>>2] = $114;
    HEAP32[$113>>2] = $112;
    $115 = (($__dc$1) + 1)|0;
    $116 = (($__p$019) + 1|0);
    $117 = ($116>>>0)<($__ns$2>>>0);
    if ($117) {
     $__dc$017 = $115;$__dg$018 = $__dg$1;$__p$019 = $116;
    } else {
     $123 = $114;
     break;
    }
   }
  } else {
   $$pre = HEAP32[$__oe>>2]|0;
   $123 = $$pre;
  }
  $118 = $__nf$1;
  $119 = $__nb;
  $120 = (($118) - ($119))|0;
  $121 = (($__ob) + ($120<<2)|0);
  $122 = ($121|0)==($123|0);
  if ($122) {
   $168 = $123;
  } else {
   $124 = (($123) + -4|0);
   $125 = ($124>>>0)>($121>>>0);
   if ($125) {
    $$012$i$i7 = $121;$128 = $124;
    while(1) {
     $126 = HEAP32[$$012$i$i7>>2]|0;
     $127 = HEAP32[$128>>2]|0;
     HEAP32[$$012$i$i7>>2] = $127;
     HEAP32[$128>>2] = $126;
     $129 = (($$012$i$i7) + 4|0);
     $130 = (($128) + -4|0);
     $131 = ($129>>>0)<($130>>>0);
     if ($131) {
      $$012$i$i7 = $129;$128 = $130;
     } else {
      $168 = $123;
      break;
     }
    }
   } else {
    $168 = $123;
   }
  }
 }
 $132 = ($__ns$2>>>0)<($__ne>>>0);
 L48: do {
  if ($132) {
   $__nf$213 = $__ns$2;
   while(1) {
    $133 = HEAP8[$__nf$213>>0]|0;
    $134 = ($133<<24>>24)==(46);
    if ($134) {
     break;
    }
    $142 = HEAP32[$2>>2]|0;
    $143 = (($142) + 44|0);
    $144 = HEAP32[$143>>2]|0;
    $145 = (FUNCTION_TABLE_iii[$144 & 63]($2,$133)|0);
    $146 = HEAP32[$__oe>>2]|0;
    $147 = (($146) + 4|0);
    HEAP32[$__oe>>2] = $147;
    HEAP32[$146>>2] = $145;
    $148 = (($__nf$213) + 1|0);
    $149 = ($148>>>0)<($__ne>>>0);
    if ($149) {
     $__nf$213 = $148;
    } else {
     $153 = $147;$__nf$3 = $148;
     break L48;
    }
   }
   $135 = HEAP32[$5>>2]|0;
   $136 = (($135) + 12|0);
   $137 = HEAP32[$136>>2]|0;
   $138 = (FUNCTION_TABLE_ii[$137 & 127]($5)|0);
   $139 = HEAP32[$__oe>>2]|0;
   $140 = (($139) + 4|0);
   HEAP32[$__oe>>2] = $140;
   HEAP32[$139>>2] = $138;
   $141 = (($__nf$213) + 1|0);
   $153 = $140;$__nf$3 = $141;
  } else {
   $153 = $168;$__nf$3 = $__ns$2;
  }
 } while(0);
 $150 = HEAP32[$2>>2]|0;
 $151 = (($150) + 48|0);
 $152 = HEAP32[$151>>2]|0;
 (FUNCTION_TABLE_iiiii[$152 & 31]($2,$__nf$3,$__ne,$153)|0);
 $154 = $__nf$3;
 $155 = (($17) - ($154))|0;
 $156 = HEAP32[$__oe>>2]|0;
 $157 = (($156) + ($155<<2)|0);
 HEAP32[$__oe>>2] = $157;
 $158 = ($__np|0)==($__ne|0);
 if ($158) {
  $storemerge = $157;
 } else {
  $159 = $__np;
  $160 = $__nb;
  $161 = (($159) - ($160))|0;
  $162 = (($__ob) + ($161<<2)|0);
  $storemerge = $162;
 }
 HEAP32[$__op>>2] = $storemerge;
 $163 = HEAP8[$__grouping>>0]|0;
 $164 = $163 & 1;
 $165 = ($164<<24>>24)==(0);
 if ($165) {
  STACKTOP = sp;return;
 }
 $166 = (($__grouping) + 8|0);
 $167 = HEAP32[$166>>2]|0;
 _free($167);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = +$__v;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $or$cond$i = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0;
 $vararg_buffer9 = sp;
 $__fmt = sp + 232|0;
 $__nar = sp + 260|0;
 $__nb = sp + 248|0;
 $__op = sp + 244|0;
 $__oe = sp + 240|0;
 $0 = sp + 252|0;
 $1 = sp + 256|0;
 $2 = $__fmt;
 $3 = $2;
 HEAP32[$3>>2] = 37;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($__fmt) + 1|0);
 $7 = (($__iob) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (__ZNSt3__114__num_put_base14__format_floatEPcPKcj($6,39368,$8)|0);
 HEAP32[$__nb>>2] = $__nar;
 $10 = (__ZNSt3__16__clocEv()|0);
 if ($9) {
  $11 = (($__iob) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer9>>2] = $12;
  $vararg_ptr1 = (($vararg_buffer9) + 4|0);
  HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_ptr1>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_ptr1+4>>2]=HEAP32[tempDoublePtr+4>>2];
  $13 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer9)|0);
  $__nc$0 = $13;
 } else {
  HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_buffer9>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_buffer9+4>>2]=HEAP32[tempDoublePtr+4>>2];
  $14 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,30,$10,$__fmt,$vararg_buffer9)|0);
  $__nc$0 = $14;
 }
 $15 = ($__nc$0|0)>(29);
 if ($15) {
  $16 = (__ZNSt3__16__clocEv()|0);
  if ($9) {
   $17 = (($__iob) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   HEAP32[$vararg_buffer9>>2] = $18;
   $vararg_ptr8 = (($vararg_buffer9) + 4|0);
   HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_ptr8>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_ptr8+4>>2]=HEAP32[tempDoublePtr+4>>2];
   $19 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer9)|0);
   $__nc$1 = $19;
  } else {
   HEAPF64[tempDoublePtr>>3]=$__v;HEAP32[$vararg_buffer9>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_buffer9+4>>2]=HEAP32[tempDoublePtr+4>>2];
   $20 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__nb,$16,$__fmt,$vararg_buffer9)|0);
   $__nc$1 = $20;
  }
  $21 = HEAP32[$__nb>>2]|0;
  $22 = ($21|0)==(0|0);
  if ($22) {
   $23 = (___cxa_allocate_exception(4)|0);
   HEAP32[$23>>2] = ((51368 + 8|0));
   ___cxa_throw(($23|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $25 = $21;$58 = $21;$__nc$2 = $__nc$1;
  }
 } else {
  $25 = $__nar;$58 = 0;$__nc$2 = $__nc$0;
 }
 $24 = (($25) + ($__nc$2)|0);
 $26 = HEAP32[$7>>2]|0;
 $27 = $26 & 176;
 do {
  if ((($27|0) == 16)) {
   $28 = HEAP8[$25>>0]|0;
   if ((($28<<24>>24) == 43) | (($28<<24>>24) == 45)) {
    $29 = (($25) + 1|0);
    $$0$i = $29;
    break;
   }
   $30 = ($__nc$2|0)>(1);
   $31 = ($28<<24>>24)==(48);
   $or$cond$i = $30 & $31;
   if ($or$cond$i) {
    $32 = (($25) + 1|0);
    $33 = HEAP8[$32>>0]|0;
    if ((($33<<24>>24) == 88) | (($33<<24>>24) == 120)) {
     $34 = (($25) + 2|0);
     $$0$i = $34;
    } else {
     label = 16;
    }
   } else {
    label = 16;
   }
  } else if ((($27|0) == 32)) {
   $$0$i = $24;
  } else {
   label = 16;
  }
 } while(0);
 if ((label|0) == 16) {
  $$0$i = $25;
 }
 $35 = ($25|0)==($__nar|0);
 if ($35) {
  $44 = $__nar;$57 = 0;$__ob$0 = $vararg_buffer9;
 } else {
  $36 = $__nc$2 << 3;
  $37 = (_malloc($36)|0);
  $38 = ($37|0)==(0|0);
  if ($38) {
   $39 = (___cxa_allocate_exception(4)|0);
   HEAP32[$39>>2] = ((51368 + 8|0));
   ___cxa_throw(($39|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $44 = $25;$57 = $37;$__ob$0 = $37;
  }
 }
 $40 = (($__iob) + 28|0);
 $41 = HEAP32[$40>>2]|0;
 HEAP32[$0>>2] = $41;
 $42 = (($41) + 4|0);
 $43 = HEAP32[$42>>2]|0;HEAP32[$42>>2] = (($43+1)|0);
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($44,$$0$i,$24,$__ob$0,$__op,$__oe,$0);
 $45 = HEAP32[$0>>2]|0;
 $46 = (($45) + 4|0);
 $47 = HEAP32[$46>>2]|0;HEAP32[$46>>2] = (($47+-1)|0);
 $48 = ($47|0)==(0);
 if ($48) {
  $49 = HEAP32[$45>>2]|0;
  $50 = (($49) + 8|0);
  $51 = HEAP32[$50>>2]|0;
  FUNCTION_TABLE_vi[$51 & 255]($45);
 }
 $52 = HEAP32[$__s>>2]|0;
 $53 = HEAP32[$__op>>2]|0;
 $54 = HEAP32[$__oe>>2]|0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($1,$52,$__ob$0,$53,$54,$__iob,$__fl);
 $55 = HEAP32[$1>>2]|0;
 HEAP32[$__s>>2] = $55;
 HEAP32[$agg$result>>2] = $55;
 $56 = ($57|0)==(0|0);
 if ($56) {
  _free($58);
  STACKTOP = sp;return;
 }
 _free($57);
 _free($58);
 STACKTOP = sp;return;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($agg$result,$this,$__s,$__iob,$__fl,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__v = $__v|0;
 var $$0$i = 0, $$idx = 0, $$idx$val = 0, $$idx3 = 0, $$idx3$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__fmt = 0, $__nar = 0, $__op$0 = 0, $or$cond$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $vararg_buffer = sp;
 $__fmt = sp + 168|0;
 $__nar = sp + 148|0;
 ;HEAP8[$__fmt+0>>0]=HEAP8[39448+0>>0]|0;HEAP8[$__fmt+1>>0]=HEAP8[39448+1>>0]|0;HEAP8[$__fmt+2>>0]=HEAP8[39448+2>>0]|0;HEAP8[$__fmt+3>>0]=HEAP8[39448+3>>0]|0;HEAP8[$__fmt+4>>0]=HEAP8[39448+4>>0]|0;HEAP8[$__fmt+5>>0]=HEAP8[39448+5>>0]|0;
 $0 = (__ZNSt3__16__clocEv()|0);
 HEAP32[$vararg_buffer>>2] = $__v;
 $1 = (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar,20,$0,$__fmt,$vararg_buffer)|0);
 $2 = (($__nar) + ($1)|0);
 $3 = (($__iob) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 176;
 do {
  if ((($5|0) == 32)) {
   $$0$i = $2;
  } else if ((($5|0) == 16)) {
   $6 = HEAP8[$__nar>>0]|0;
   if ((($6<<24>>24) == 43) | (($6<<24>>24) == 45)) {
    $7 = (($__nar) + 1|0);
    $$0$i = $7;
    break;
   }
   $8 = ($1|0)>(1);
   $9 = ($6<<24>>24)==(48);
   $or$cond$i = $8 & $9;
   if ($or$cond$i) {
    $10 = (($__nar) + 1|0);
    $11 = HEAP8[$10>>0]|0;
    if ((($11<<24>>24) == 88) | (($11<<24>>24) == 120)) {
     $12 = (($__nar) + 2|0);
     $$0$i = $12;
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else {
   label = 7;
  }
 } while(0);
 if ((label|0) == 7) {
  $$0$i = $__nar;
 }
 $13 = (($__iob) + 28|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($14) + 4|0);
 $16 = HEAP32[$15>>2]|0;HEAP32[$15>>2] = (($16+1)|0);
 $17 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx = (($14) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx3 = (($14) + 12|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $18 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx3$val,$17)|0);
 $19 = (($14) + 4|0);
 $20 = HEAP32[$19>>2]|0;HEAP32[$19>>2] = (($20+-1)|0);
 $21 = ($20|0)==(0);
 if ($21) {
  $22 = HEAP32[$14>>2]|0;
  $23 = (($22) + 8|0);
  $24 = HEAP32[$23>>2]|0;
  FUNCTION_TABLE_vi[$24 & 255]($14);
 }
 $25 = HEAP32[$18>>2]|0;
 $26 = (($25) + 48|0);
 $27 = HEAP32[$26>>2]|0;
 (FUNCTION_TABLE_iiiii[$27 & 31]($18,$__nar,$2,$vararg_buffer)|0);
 $28 = (($vararg_buffer) + ($1<<2)|0);
 $29 = ($$0$i|0)==($2|0);
 if ($29) {
  $__op$0 = $28;
  $34 = HEAP32[$__s>>2]|0;
  __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$34,$vararg_buffer,$__op$0,$28,$__iob,$__fl);
  STACKTOP = sp;return;
 }
 $30 = $__nar;
 $31 = $$0$i;
 $32 = (($31) - ($30))|0;
 $33 = (($vararg_buffer) + ($32<<2)|0);
 $__op$0 = $33;
 $34 = HEAP32[$__s>>2]|0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$34,$vararg_buffer,$__op$0,$28,$__iob,$__fl);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result,$this,$__b$0,$__e$0,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b$0 = $__b$0|0;
 $__e$0 = $__e$0|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$$pre$i$i$i13 = 0, $$$pre$i$i$i4 = 0, $$0$i$i = 0, $$0$i$i22 = 0, $$0$ph$be = 0, $$0$ph35 = 0, $$0$pn = 0, $$1 = 0, $$2 = 0, $$2$lcssa = 0, $$__b$sroa$0$1 = 0, $$__b$sroa$0$13 = 0, $$__b$sroa$0$4 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$idx = 0, $$idx$val = 0, $$idx3 = 0, $$idx3$val = 0, $$pre$i$i$i13 = 0;
 var $$pre$i$i$i4 = 0, $$pre$i2$i$i17 = 0, $$pre$i2$i$i1737 = 0, $$pre$i2$i$i1738 = 0, $$pre36 = 0, $$pre36$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__b$sroa$0$0 = 0, $__b$sroa$0$1 = 0, $__b$sroa$0$2 = 0;
 var $__b$sroa$0$3 = 0, $__b$sroa$0$4 = 0, $__b$sroa$0$5 = 0, $__cmd$0 = 0, $__e$sroa$0$0 = 0, $__e$sroa$0$1 = 0, $__e$sroa$0$10 = 0, $__e$sroa$0$3 = 0, $__e$sroa$0$4 = 0, $__e$sroa$0$5 = 0, $__e$sroa$0$6 = 0, $__e$sroa$0$7 = 0, $__e$sroa$0$8 = 0, $__opt$0 = 0, $isascii1$i = 0, $isascii1$i1 = 0, $isascii1$i20 = 0, $sext = 0, $tmp$i$i19 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (($__iob) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 4|0);
 $6 = HEAP32[$5>>2]|0;HEAP32[$5>>2] = (($6+1)|0);
 $7 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx = (($4) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx3 = (($4) + 12|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $8 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx3$val,$7)|0);
 $9 = (($4) + 4|0);
 $10 = HEAP32[$9>>2]|0;HEAP32[$9>>2] = (($10+-1)|0);
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = HEAP32[$4>>2]|0;
  $13 = (($12) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  FUNCTION_TABLE_vi[$14 & 255]($4);
 }
 HEAP32[$__err>>2] = 0;
 $15 = ($__fmtb|0)==($__fmte|0);
 L4: do {
  if ($15) {
   $$pre$i$i$i4 = $__b$0;$__e$sroa$0$10 = $__e$0;
  } else {
   $16 = (($8) + 8|0);
   $$0$ph35 = $__fmtb;$$pre36 = 0;$__b$sroa$0$0 = $__b$0;$__e$sroa$0$0 = $__e$0;
   L6: while(1) {
    $18 = $$pre36;$__b$sroa$0$1 = $__b$sroa$0$0;$__e$sroa$0$1 = $__e$sroa$0$0;
    while(1) {
     $17 = ($18|0)==(0);
     if (!($17)) {
      $$pre$i$i$i4 = $__b$sroa$0$1;$__e$sroa$0$10 = $__e$sroa$0$1;
      break L4;
     }
     $19 = ($__b$sroa$0$1|0)==(0|0);
     if ($19) {
      $31 = 0;$__b$sroa$0$2 = 0;
     } else {
      $20 = (($__b$sroa$0$1) + 12|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = (($__b$sroa$0$1) + 16|0);
      $23 = HEAP32[$22>>2]|0;
      $24 = ($21|0)==($23|0);
      if ($24) {
       $25 = HEAP32[$__b$sroa$0$1>>2]|0;
       $26 = (($25) + 36|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = (FUNCTION_TABLE_ii[$27 & 127]($__b$sroa$0$1)|0);
       $29 = ($28|0)==(-1);
       $$__b$sroa$0$1 = $29 ? 0 : $__b$sroa$0$1;
       $$__b$sroa$0$13 = $29 ? 0 : $__b$sroa$0$1;
       $31 = $$__b$sroa$0$13;$__b$sroa$0$2 = $$__b$sroa$0$1;
      } else {
       $31 = $__b$sroa$0$1;$__b$sroa$0$2 = $__b$sroa$0$1;
      }
     }
     $30 = ($31|0)==(0|0);
     $32 = ($__e$sroa$0$1|0)==(0|0);
     do {
      if ($32) {
       label = 14;
      } else {
       $33 = (($__e$sroa$0$1) + 12|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = (($__e$sroa$0$1) + 16|0);
       $36 = HEAP32[$35>>2]|0;
       $37 = ($34|0)==($36|0);
       if ($37) {
        $38 = HEAP32[$__e$sroa$0$1>>2]|0;
        $39 = (($38) + 36|0);
        $40 = HEAP32[$39>>2]|0;
        $41 = (FUNCTION_TABLE_ii[$40 & 127]($__e$sroa$0$1)|0);
        $42 = ($41|0)==(-1);
        if ($42) {
         label = 14;
         break;
        }
       }
       if ($30) {
        $__e$sroa$0$4 = $__e$sroa$0$1;
       } else {
        $__e$sroa$0$3 = $__e$sroa$0$1;
        label = 15;
        break L6;
       }
      }
     } while(0);
     if ((label|0) == 14) {
      label = 0;
      if ($30) {
       $__e$sroa$0$3 = 0;
       label = 15;
       break L6;
      } else {
       $__e$sroa$0$4 = 0;
      }
     }
     $43 = HEAP8[$$0$ph35>>0]|0;
     $44 = HEAP32[$8>>2]|0;
     $45 = (($44) + 36|0);
     $46 = HEAP32[$45>>2]|0;
     $47 = (FUNCTION_TABLE_iiii[$46 & 31]($8,$43,0)|0);
     $48 = ($47<<24>>24)==(37);
     if ($48) {
      label = 17;
      break;
     }
     $69 = HEAP8[$$0$ph35>>0]|0;
     $isascii1$i = ($69<<24>>24)>(-1);
     if ($isascii1$i) {
      $70 = $69 << 24 >> 24;
      $71 = HEAP32[$16>>2]|0;
      $72 = (($71) + ($70<<1)|0);
      $73 = HEAP16[$72>>1]|0;
      $74 = $73 & 8192;
      $75 = ($74<<16>>16)==(0);
      if (!($75)) {
       $$0$pn = $$0$ph35;
       label = 28;
       break;
      }
     }
     $134 = (($31) + 12|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = (($31) + 16|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($135|0)==($137|0);
     if ($138) {
      $139 = HEAP32[$31>>2]|0;
      $140 = (($139) + 36|0);
      $141 = HEAP32[$140>>2]|0;
      $142 = (FUNCTION_TABLE_ii[$141 & 127]($31)|0);
      $$0$i$i22 = $142;
     } else {
      $143 = HEAP8[$135>>0]|0;
      $144 = $143&255;
      $$0$i$i22 = $144;
     }
     $145 = $$0$i$i22&255;
     $146 = HEAP32[$8>>2]|0;
     $147 = (($146) + 12|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = (FUNCTION_TABLE_iii[$148 & 63]($8,$145)|0);
     $150 = HEAP8[$$0$ph35>>0]|0;
     $151 = HEAP32[$8>>2]|0;
     $152 = (($151) + 12|0);
     $153 = HEAP32[$152>>2]|0;
     $154 = (FUNCTION_TABLE_iii[$153 & 63]($8,$150)|0);
     $155 = ($149<<24>>24)==($154<<24>>24);
     if ($155) {
      label = 53;
      break;
     }
     HEAP32[$__err>>2] = 4;
     $18 = 4;$__b$sroa$0$1 = $__b$sroa$0$2;$__e$sroa$0$1 = $__e$sroa$0$4;
    }
    L32: do {
     if ((label|0) == 17) {
      label = 0;
      $49 = (($$0$ph35) + 1|0);
      $50 = ($49|0)==($__fmte|0);
      if ($50) {
       label = 18;
       break L6;
      }
      $51 = HEAP8[$49>>0]|0;
      $52 = HEAP32[$8>>2]|0;
      $53 = (($52) + 36|0);
      $54 = HEAP32[$53>>2]|0;
      $55 = (FUNCTION_TABLE_iiii[$54 & 31]($8,$51,0)|0);
      if ((($55<<24>>24) == 48) | (($55<<24>>24) == 69)) {
       $56 = (($$0$ph35) + 2|0);
       $57 = ($56|0)==($__fmte|0);
       if ($57) {
        label = 21;
        break L6;
       }
       $58 = HEAP8[$56>>0]|0;
       $59 = HEAP32[$8>>2]|0;
       $60 = (($59) + 36|0);
       $61 = HEAP32[$60>>2]|0;
       $62 = (FUNCTION_TABLE_iiii[$61 & 31]($8,$58,0)|0);
       $$1 = $56;$__cmd$0 = $62;$__opt$0 = $55;
      } else {
       $$1 = $49;$__cmd$0 = $55;$__opt$0 = 0;
      }
      $63 = HEAP32[$this>>2]|0;
      $64 = (($63) + 36|0);
      $65 = HEAP32[$64>>2]|0;
      HEAP32[$1>>2] = $31;
      HEAP32[$2>>2] = $__e$sroa$0$4;
      ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
      ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$2+0>>2]|0;
      FUNCTION_TABLE_viiiiiiiii[$65 & 3]($0,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0);
      $66 = HEAP32[$0>>2]|0;
      $67 = (($$1) + 1|0);
      $$0$ph$be = $67;$__b$sroa$0$3 = $66;$__e$sroa$0$5 = $__e$sroa$0$4;
     }
     else if ((label|0) == 28) {
      while(1) {
       label = 0;
       $$2 = (($$0$pn) + 1|0);
       $76 = ($$2|0)==($__fmte|0);
       if ($76) {
        $$2$lcssa = $__fmte;
        break;
       }
       $77 = HEAP8[$$2>>0]|0;
       $isascii1$i1 = ($77<<24>>24)>(-1);
       if (!($isascii1$i1)) {
        $$2$lcssa = $$2;
        break;
       }
       $78 = $77 << 24 >> 24;
       $79 = (($71) + ($78<<1)|0);
       $80 = HEAP16[$79>>1]|0;
       $81 = $80 & 8192;
       $82 = ($81<<16>>16)==(0);
       if ($82) {
        $$2$lcssa = $$2;
        break;
       } else {
        $$0$pn = $$2;
        label = 28;
       }
      }
      $$pre$i$i$i13 = $31;$$pre$i2$i$i17 = $__e$sroa$0$4;$97 = $__e$sroa$0$4;$__b$sroa$0$4 = $__b$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$4;
      while(1) {
       $83 = ($$pre$i$i$i13|0)==(0|0);
       if ($83) {
        $95 = 0;$__b$sroa$0$5 = $__b$sroa$0$4;
       } else {
        $84 = (($$pre$i$i$i13) + 12|0);
        $85 = HEAP32[$84>>2]|0;
        $86 = (($$pre$i$i$i13) + 16|0);
        $87 = HEAP32[$86>>2]|0;
        $88 = ($85|0)==($87|0);
        if ($88) {
         $89 = HEAP32[$$pre$i$i$i13>>2]|0;
         $90 = (($89) + 36|0);
         $91 = HEAP32[$90>>2]|0;
         $92 = (FUNCTION_TABLE_ii[$91 & 127]($$pre$i$i$i13)|0);
         $93 = ($92|0)==(-1);
         $$__b$sroa$0$4 = $93 ? 0 : $__b$sroa$0$4;
         $$$pre$i$i$i13 = $93 ? 0 : $$pre$i$i$i13;
         $95 = $$$pre$i$i$i13;$__b$sroa$0$5 = $$__b$sroa$0$4;
        } else {
         $95 = $$pre$i$i$i13;$__b$sroa$0$5 = $__b$sroa$0$4;
        }
       }
       $94 = ($95|0)==(0|0);
       $96 = ($97|0)==(0|0);
       do {
        if ($96) {
         $$pre$i2$i$i1738 = $$pre$i2$i$i17;$__e$sroa$0$7 = $__e$sroa$0$6;
         label = 39;
        } else {
         $98 = (($97) + 12|0);
         $99 = HEAP32[$98>>2]|0;
         $100 = (($97) + 16|0);
         $101 = HEAP32[$100>>2]|0;
         $102 = ($99|0)==($101|0);
         if (!($102)) {
          if ($94) {
           $$pre$i2$i$i1737 = $$pre$i2$i$i17;$190 = $97;$__e$sroa$0$8 = $__e$sroa$0$6;
           break;
          } else {
           $$0$ph$be = $$2$lcssa;$__b$sroa$0$3 = $__b$sroa$0$5;$__e$sroa$0$5 = $__e$sroa$0$6;
           break L32;
          }
         }
         $103 = HEAP32[$97>>2]|0;
         $104 = (($103) + 36|0);
         $105 = HEAP32[$104>>2]|0;
         $106 = (FUNCTION_TABLE_ii[$105 & 127]($97)|0);
         $107 = ($106|0)==(-1);
         if ($107) {
          $$pre$i2$i$i1738 = 0;$__e$sroa$0$7 = 0;
          label = 39;
         } else {
          $108 = ($$pre$i2$i$i17|0)==(0|0);
          $tmp$i$i19 = $94 ^ $108;
          if ($tmp$i$i19) {
           $$pre$i2$i$i1737 = $$pre$i2$i$i17;$190 = $$pre$i2$i$i17;$__e$sroa$0$8 = $__e$sroa$0$6;
          } else {
           $$0$ph$be = $$2$lcssa;$__b$sroa$0$3 = $__b$sroa$0$5;$__e$sroa$0$5 = $__e$sroa$0$6;
           break L32;
          }
         }
        }
       } while(0);
       if ((label|0) == 39) {
        label = 0;
        if ($94) {
         $$0$ph$be = $$2$lcssa;$__b$sroa$0$3 = $__b$sroa$0$5;$__e$sroa$0$5 = $__e$sroa$0$7;
         break L32;
        } else {
         $$pre$i2$i$i1737 = $$pre$i2$i$i1738;$190 = 0;$__e$sroa$0$8 = $__e$sroa$0$7;
        }
       }
       $109 = (($95) + 12|0);
       $110 = HEAP32[$109>>2]|0;
       $111 = (($95) + 16|0);
       $112 = HEAP32[$111>>2]|0;
       $113 = ($110|0)==($112|0);
       if ($113) {
        $114 = HEAP32[$95>>2]|0;
        $115 = (($114) + 36|0);
        $116 = HEAP32[$115>>2]|0;
        $117 = (FUNCTION_TABLE_ii[$116 & 127]($95)|0);
        $$0$i$i = $117;
       } else {
        $118 = HEAP8[$110>>0]|0;
        $119 = $118&255;
        $$0$i$i = $119;
       }
       $120 = $$0$i$i&255;
       $isascii1$i20 = ($120<<24>>24)>(-1);
       if (!($isascii1$i20)) {
        $$0$ph$be = $$2$lcssa;$__b$sroa$0$3 = $__b$sroa$0$5;$__e$sroa$0$5 = $__e$sroa$0$8;
        break L32;
       }
       $sext = $$0$i$i << 24;
       $121 = $sext >> 24;
       $122 = HEAP32[$16>>2]|0;
       $123 = (($122) + ($121<<1)|0);
       $124 = HEAP16[$123>>1]|0;
       $125 = $124 & 8192;
       $126 = ($125<<16>>16)==(0);
       if ($126) {
        $$0$ph$be = $$2$lcssa;$__b$sroa$0$3 = $__b$sroa$0$5;$__e$sroa$0$5 = $__e$sroa$0$8;
        break L32;
       }
       $127 = HEAP32[$109>>2]|0;
       $128 = HEAP32[$111>>2]|0;
       $129 = ($127|0)==($128|0);
       if ($129) {
        $130 = HEAP32[$95>>2]|0;
        $131 = (($130) + 40|0);
        $132 = HEAP32[$131>>2]|0;
        (FUNCTION_TABLE_ii[$132 & 127]($95)|0);
        $$pre$i$i$i13 = $95;$$pre$i2$i$i17 = $$pre$i2$i$i1737;$97 = $190;$__b$sroa$0$4 = $__b$sroa$0$5;$__e$sroa$0$6 = $__e$sroa$0$8;
        continue;
       } else {
        $133 = (($127) + 1|0);
        HEAP32[$109>>2] = $133;
        $$pre$i$i$i13 = $95;$$pre$i2$i$i17 = $$pre$i2$i$i1737;$97 = $190;$__b$sroa$0$4 = $__b$sroa$0$5;$__e$sroa$0$6 = $__e$sroa$0$8;
        continue;
       }
      }
     }
     else if ((label|0) == 53) {
      label = 0;
      $156 = HEAP32[$134>>2]|0;
      $157 = HEAP32[$136>>2]|0;
      $158 = ($156|0)==($157|0);
      if ($158) {
       $159 = HEAP32[$31>>2]|0;
       $160 = (($159) + 40|0);
       $161 = HEAP32[$160>>2]|0;
       (FUNCTION_TABLE_ii[$161 & 127]($31)|0);
      } else {
       $162 = (($156) + 1|0);
       HEAP32[$134>>2] = $162;
      }
      $163 = (($$0$ph35) + 1|0);
      $$0$ph$be = $163;$__b$sroa$0$3 = $__b$sroa$0$2;$__e$sroa$0$5 = $__e$sroa$0$4;
     }
    } while(0);
    $68 = ($$0$ph$be|0)==($__fmte|0);
    if ($68) {
     $$pre$i$i$i4 = $__b$sroa$0$3;$__e$sroa$0$10 = $__e$sroa$0$5;
     break L4;
    }
    $$pre36$pre = HEAP32[$__err>>2]|0;
    $$0$ph35 = $$0$ph$be;$$pre36 = $$pre36$pre;$__b$sroa$0$0 = $__b$sroa$0$3;$__e$sroa$0$0 = $__e$sroa$0$5;
   }
   if ((label|0) == 15) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i4 = $31;$__e$sroa$0$10 = $__e$sroa$0$3;
    break;
   }
   else if ((label|0) == 18) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i4 = $31;$__e$sroa$0$10 = $__e$sroa$0$4;
    break;
   }
   else if ((label|0) == 21) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i4 = $31;$__e$sroa$0$10 = $__e$sroa$0$4;
    break;
   }
  }
 } while(0);
 $164 = ($$pre$i$i$i4|0)==(0|0);
 if ($164) {
  $176 = 0;
 } else {
  $165 = (($$pre$i$i$i4) + 12|0);
  $166 = HEAP32[$165>>2]|0;
  $167 = (($$pre$i$i$i4) + 16|0);
  $168 = HEAP32[$167>>2]|0;
  $169 = ($166|0)==($168|0);
  if ($169) {
   $170 = HEAP32[$$pre$i$i$i4>>2]|0;
   $171 = (($170) + 36|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = (FUNCTION_TABLE_ii[$172 & 127]($$pre$i$i$i4)|0);
   $174 = ($173|0)==(-1);
   $$$pre$i$i$i4 = $174 ? 0 : $$pre$i$i$i4;
   $176 = $$$pre$i$i$i4;
  } else {
   $176 = $$pre$i$i$i4;
  }
 }
 $175 = ($176|0)==(0|0);
 $177 = ($__e$sroa$0$10|0)==(0|0);
 do {
  if ($177) {
   label = 65;
  } else {
   $178 = (($__e$sroa$0$10) + 12|0);
   $179 = HEAP32[$178>>2]|0;
   $180 = (($__e$sroa$0$10) + 16|0);
   $181 = HEAP32[$180>>2]|0;
   $182 = ($179|0)==($181|0);
   if ($182) {
    $183 = HEAP32[$__e$sroa$0$10>>2]|0;
    $184 = (($183) + 36|0);
    $185 = HEAP32[$184>>2]|0;
    $186 = (FUNCTION_TABLE_ii[$185 & 127]($__e$sroa$0$10)|0);
    $187 = ($186|0)==(-1);
    if ($187) {
     label = 65;
     break;
    }
   }
   if ($175) {
    HEAP32[$agg$result>>2] = $176;
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 65) {
  if (!($175)) {
   HEAP32[$agg$result>>2] = $176;
   STACKTOP = sp;return;
  }
 }
 $188 = HEAP32[$__err>>2]|0;
 $189 = $188 | 2;
 HEAP32[$__err>>2] = $189;
 HEAP32[$agg$result>>2] = $176;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 2;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result,$this,$0,$1,$__iob,$__err,$__tm,39552,((39552 + 8|0)));
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 127]($0)|0);
 $5 = HEAP32[$__b>>2]|0;
 $6 = HEAP32[$__e>>2]|0;
 $7 = HEAP8[$4>>0]|0;
 $8 = $7 & 1;
 $9 = ($8<<24>>24)==(0);
 if ($9) {
  $14 = (($4) + 1|0);
  $15 = $7&255;
  $16 = $15 >>> 1;
  $18 = $14;$19 = $16;
 } else {
  $10 = (($4) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($4) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $18 = $11;$19 = $13;
 }
 $17 = (($18) + ($19)|0);
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($agg$result,$this,$5,$6,$__iob,$__err,$__tm,$18,$17);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$idx = 0, $$idx$val = 0, $$idx3 = 0, $$idx3$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx = (($1) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx3 = (($1) + 12|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx3$val,$4)|0);
 $6 = (($1) + 4|0);
 $7 = HEAP32[$6>>2]|0;HEAP32[$6>>2] = (($7+-1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = HEAP32[$1>>2]|0;
  $10 = (($9) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_vi[$11 & 255]($1);
 }
 $12 = (($__tm) + 24|0);
 $13 = HEAP32[$__e>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$12,$__b,$13,$__err,$5);
 $14 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $14;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__w,$__b,$__e$0,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e$0 = $__e$0|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 127]($0)|0);
 $4 = (($3) + 168|0);
 $5 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e$0,$3,$4,$__ct,$__err,0)|0);
 $6 = $5;
 $7 = $3;
 $8 = (($6) - ($7))|0;
 $9 = ($8|0)<(168);
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = (($8|0) / 12)&-1;
 $11 = (($10|0) % 7)&-1;
 HEAP32[$__w>>2] = $11;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$idx = 0, $$idx$val = 0, $$idx3 = 0, $$idx3$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx = (($1) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx3 = (($1) + 12|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx3$val,$4)|0);
 $6 = (($1) + 4|0);
 $7 = HEAP32[$6>>2]|0;HEAP32[$6>>2] = (($7+-1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = HEAP32[$1>>2]|0;
  $10 = (($9) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_vi[$11 & 255]($1);
 }
 $12 = (($__tm) + 16|0);
 $13 = HEAP32[$__e>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$12,$__b,$13,$__err,$5);
 $14 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $14;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$__m,$__b,$__e$0,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e$0 = $__e$0|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 127]($0)|0);
 $5 = (($4) + 288|0);
 $6 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e$0,$4,$5,$__ct,$__err,0)|0);
 $7 = $6;
 $8 = $4;
 $9 = (($7) - ($8))|0;
 $10 = ($9|0)<(288);
 if (!($10)) {
  STACKTOP = sp;return;
 }
 $11 = (($9|0) / 12)&-1;
 $12 = (($11|0) % 12)&-1;
 HEAP32[$__m>>2] = $12;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$idx = 0, $$idx$val = 0, $$idx3 = 0, $$idx3$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx = (($1) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx3 = (($1) + 12|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx3$val,$4)|0);
 $6 = (($1) + 4|0);
 $7 = HEAP32[$6>>2]|0;HEAP32[$6>>2] = (($7+-1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = HEAP32[$1>>2]|0;
  $10 = (($9) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_vi[$11 & 255]($1);
 }
 $12 = (($__tm) + 20|0);
 $13 = HEAP32[$__e>>2]|0;
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($12,$__b,$13,$__err,$5);
 $14 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $14;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($__y,$__b,$__e$0,$__err,$__ct) {
 $__y = $__y|0;
 $__b = $__b|0;
 $__e$0 = $__e$0|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e$0,$__err,$__ct,4)|0);
 $1 = HEAP32[$__err>>2]|0;
 $2 = $1 & 4;
 $3 = ($2|0)==(0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = ($0|0)<(69);
 if ($4) {
  $5 = (($0) + 2000)|0;
  $__t$0 = $5;
 } else {
  $$off = (($0) + -69)|0;
  $6 = ($$off>>>0)<(31);
  $7 = (($0) + 1900)|0;
  $$ = $6 ? $7 : $0;
  $__t$0 = $$;
 }
 $8 = (($__t$0) + -1900)|0;
 HEAP32[$__y>>2] = $8;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$0$i$i$i = 0, $$0$i$i$i30 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$idx = 0, $$idx$val = 0, $$idx49 = 0, $$idx49$val = 0, $$pre$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i$i$i26 = 0, $$pre$i$i$i2$i = 0, $$pre$i$i$i2$i33 = 0, $$pre$i2$i$i6$i = 0, $$pre$i2$i$i611$i = 0, $$sroa$081$0 = 0, $$sroa$081$2 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $isascii1$i$i = 0, $or$cond$i = 0, $or$cond$i11 = 0, $or$cond$i15 = 0, $or$cond$i18 = 0, $or$cond$i21 = 0, $or$cond$i43 = 0, $or$cond$i46 = 0, $or$cond$i8 = 0;
 var $or$cond3$i = 0, $or$cond3$i12 = 0, $sext$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $$byval_copy1 = sp + 36|0;
 $$byval_copy = sp + 16|0;
 $1 = sp;
 $2 = sp + 28|0;
 $3 = sp + 32|0;
 $4 = sp + 40|0;
 $5 = sp + 12|0;
 $6 = sp + 24|0;
 $7 = sp + 20|0;
 $8 = sp + 8|0;
 $9 = sp + 4|0;
 HEAP32[$__err>>2] = 0;
 $10 = (($__iob) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 4|0);
 $13 = HEAP32[$12>>2]|0;HEAP32[$12>>2] = (($13+1)|0);
 $14 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx = (($11) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx49 = (($11) + 12|0);
 $$idx49$val = HEAP32[$$idx49>>2]|0;
 $15 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx49$val,$14)|0);
 $16 = (($11) + 4|0);
 $17 = HEAP32[$16>>2]|0;HEAP32[$16>>2] = (($17+-1)|0);
 $18 = ($17|0)==(0);
 if ($18) {
  $19 = HEAP32[$11>>2]|0;
  $20 = (($19) + 8|0);
  $21 = HEAP32[$20>>2]|0;
  FUNCTION_TABLE_vi[$21 & 255]($11);
 }
 $22 = $__fmt << 24 >> 24;
 L4: do {
  switch ($22|0) {
  case 68:  {
   $57 = HEAP32[$__b>>2]|0;
   $58 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($2,$this,$57,$58,$__iob,$__err,$__tm,39560,((39560 + 8|0)));
   $59 = HEAP32[$2>>2]|0;
   HEAP32[$__b>>2] = $59;
   break;
  }
  case 73:  {
   $71 = HEAP32[$__e>>2]|0;
   $72 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$71,$__err,$15,2)|0);
   $73 = HEAP32[$__err>>2]|0;
   $74 = $73 & 4;
   $75 = ($74|0)==(0);
   $76 = ($72|0)>(0);
   $or$cond$i11 = $75 & $76;
   $77 = ($72|0)<(13);
   $or$cond3$i12 = $or$cond$i11 & $77;
   if ($or$cond3$i12) {
    $78 = (($__tm) + 8|0);
    HEAP32[$78>>2] = $72;
    break L4;
   } else {
    $79 = $73 | 4;
    HEAP32[$__err>>2] = $79;
    break L4;
   }
   break;
  }
  case 72:  {
   $63 = HEAP32[$__e>>2]|0;
   $64 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$63,$__err,$15,2)|0);
   $65 = HEAP32[$__err>>2]|0;
   $66 = $65 & 4;
   $67 = ($66|0)==(0);
   $68 = ($64|0)<(24);
   $or$cond$i8 = $67 & $68;
   if ($or$cond$i8) {
    $69 = (($__tm) + 8|0);
    HEAP32[$69>>2] = $64;
    break L4;
   } else {
    $70 = $65 | 4;
    HEAP32[$__err>>2] = $70;
    break L4;
   }
   break;
  }
  case 99:  {
   $27 = (($this) + 8|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (FUNCTION_TABLE_ii[$30 & 127]($27)|0);
   $32 = HEAP32[$__b>>2]|0;
   $33 = HEAP32[$__e>>2]|0;
   $34 = HEAP8[$31>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $41 = (($31) + 1|0);
    $42 = $34&255;
    $43 = $42 >>> 1;
    $45 = $41;$46 = $43;
   } else {
    $37 = (($31) + 8|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = (($31) + 4|0);
    $40 = HEAP32[$39>>2]|0;
    $45 = $38;$46 = $40;
   }
   $44 = (($45) + ($46)|0);
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($1,$this,$32,$33,$__iob,$__err,$__tm,$45,$44);
   $47 = HEAP32[$1>>2]|0;
   HEAP32[$__b>>2] = $47;
   break;
  }
  case 109:  {
   $88 = HEAP32[$__e>>2]|0;
   $89 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$88,$__err,$15,2)|0);
   $90 = HEAP32[$__err>>2]|0;
   $91 = $90 & 4;
   $92 = ($91|0)==(0);
   $93 = ($89|0)<(13);
   $or$cond$i18 = $92 & $93;
   if ($or$cond$i18) {
    $94 = (($__tm) + 16|0);
    $95 = (($89) + -1)|0;
    HEAP32[$94>>2] = $95;
    break L4;
   } else {
    $96 = $90 | 4;
    HEAP32[$__err>>2] = $96;
    break L4;
   }
   break;
  }
  case 116: case 110:  {
   $105 = HEAP32[$__e>>2]|0;
   $106 = (($15) + 8|0);
   $$sroa$081$0 = $105;
   L24: while(1) {
    $107 = HEAP32[$__b>>2]|0;
    $108 = ($107|0)==(0|0);
    do {
     if ($108) {
      $120 = 0;
     } else {
      $109 = (($107) + 12|0);
      $110 = HEAP32[$109>>2]|0;
      $111 = (($107) + 16|0);
      $112 = HEAP32[$111>>2]|0;
      $113 = ($110|0)==($112|0);
      if ($113) {
       $114 = HEAP32[$107>>2]|0;
       $115 = (($114) + 36|0);
       $116 = HEAP32[$115>>2]|0;
       $117 = (FUNCTION_TABLE_ii[$116 & 127]($107)|0);
       $118 = ($117|0)==(-1);
       if ($118) {
        HEAP32[$__b>>2] = 0;
        $120 = 0;
        break;
       } else {
        $$pre$i$i$i$i26 = HEAP32[$__b>>2]|0;
        $120 = $$pre$i$i$i$i26;
        break;
       }
      } else {
       $120 = $107;
      }
     }
    } while(0);
    $119 = ($120|0)==(0|0);
    $121 = ($$sroa$081$0|0)==(0|0);
    do {
     if ($121) {
      label = 40;
     } else {
      $122 = (($$sroa$081$0) + 12|0);
      $123 = HEAP32[$122>>2]|0;
      $124 = (($$sroa$081$0) + 16|0);
      $125 = HEAP32[$124>>2]|0;
      $126 = ($123|0)==($125|0);
      if (!($126)) {
       if ($119) {
        $$sroa$081$2 = $$sroa$081$0;
        break;
       } else {
        $$pre$i2$i$i6$i = $$sroa$081$0;
        break L24;
       }
      }
      $127 = HEAP32[$$sroa$081$0>>2]|0;
      $128 = (($127) + 36|0);
      $129 = HEAP32[$128>>2]|0;
      $130 = (FUNCTION_TABLE_ii[$129 & 127]($$sroa$081$0)|0);
      $131 = ($130|0)==(-1);
      if ($131) {
       label = 40;
      } else {
       if ($119) {
        $$sroa$081$2 = $$sroa$081$0;
       } else {
        $$pre$i2$i$i6$i = $$sroa$081$0;
        break L24;
       }
      }
     }
    } while(0);
    if ((label|0) == 40) {
     label = 0;
     if ($119) {
      $$pre$i2$i$i6$i = 0;
      break;
     } else {
      $$sroa$081$2 = 0;
     }
    }
    $132 = HEAP32[$__b>>2]|0;
    $133 = (($132) + 12|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = (($132) + 16|0);
    $136 = HEAP32[$135>>2]|0;
    $137 = ($134|0)==($136|0);
    if ($137) {
     $138 = HEAP32[$132>>2]|0;
     $139 = (($138) + 36|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = (FUNCTION_TABLE_ii[$140 & 127]($132)|0);
     $$0$i$i$i30 = $141;
    } else {
     $142 = HEAP8[$134>>0]|0;
     $143 = $142&255;
     $$0$i$i$i30 = $143;
    }
    $144 = $$0$i$i$i30&255;
    $isascii1$i$i = ($144<<24>>24)>(-1);
    if (!($isascii1$i$i)) {
     $$pre$i2$i$i6$i = $$sroa$081$2;
     break;
    }
    $sext$i = $$0$i$i$i30 << 24;
    $145 = $sext$i >> 24;
    $146 = HEAP32[$106>>2]|0;
    $147 = (($146) + ($145<<1)|0);
    $148 = HEAP16[$147>>1]|0;
    $149 = $148 & 8192;
    $150 = ($149<<16>>16)==(0);
    if ($150) {
     $$pre$i2$i$i6$i = $$sroa$081$2;
     break;
    }
    $151 = HEAP32[$__b>>2]|0;
    $152 = (($151) + 12|0);
    $153 = HEAP32[$152>>2]|0;
    $154 = (($151) + 16|0);
    $155 = HEAP32[$154>>2]|0;
    $156 = ($153|0)==($155|0);
    if ($156) {
     $157 = HEAP32[$151>>2]|0;
     $158 = (($157) + 40|0);
     $159 = HEAP32[$158>>2]|0;
     (FUNCTION_TABLE_ii[$159 & 127]($151)|0);
     $$sroa$081$0 = $$sroa$081$2;
     continue;
    } else {
     $160 = (($153) + 1|0);
     HEAP32[$152>>2] = $160;
     $$sroa$081$0 = $$sroa$081$2;
     continue;
    }
   }
   $161 = HEAP32[$__b>>2]|0;
   $162 = ($161|0)==(0|0);
   do {
    if ($162) {
     $174 = 0;
    } else {
     $163 = (($161) + 12|0);
     $164 = HEAP32[$163>>2]|0;
     $165 = (($161) + 16|0);
     $166 = HEAP32[$165>>2]|0;
     $167 = ($164|0)==($166|0);
     if ($167) {
      $168 = HEAP32[$161>>2]|0;
      $169 = (($168) + 36|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = (FUNCTION_TABLE_ii[$170 & 127]($161)|0);
      $172 = ($171|0)==(-1);
      if ($172) {
       HEAP32[$__b>>2] = 0;
       $174 = 0;
       break;
      } else {
       $$pre$i$i$i2$i33 = HEAP32[$__b>>2]|0;
       $174 = $$pre$i$i$i2$i33;
       break;
      }
     } else {
      $174 = $161;
     }
    }
   } while(0);
   $173 = ($174|0)==(0|0);
   $175 = ($$pre$i2$i$i6$i|0)==(0|0);
   do {
    if ($175) {
     label = 59;
    } else {
     $176 = (($$pre$i2$i$i6$i) + 12|0);
     $177 = HEAP32[$176>>2]|0;
     $178 = (($$pre$i2$i$i6$i) + 16|0);
     $179 = HEAP32[$178>>2]|0;
     $180 = ($177|0)==($179|0);
     if ($180) {
      $181 = HEAP32[$$pre$i2$i$i6$i>>2]|0;
      $182 = (($181) + 36|0);
      $183 = HEAP32[$182>>2]|0;
      $184 = (FUNCTION_TABLE_ii[$183 & 127]($$pre$i2$i$i6$i)|0);
      $185 = ($184|0)==(-1);
      if ($185) {
       label = 59;
       break;
      }
     }
     if ($173) {
      break L4;
     }
    }
   } while(0);
   if ((label|0) == 59) {
    if (!($173)) {
     break L4;
    }
   }
   $186 = HEAP32[$__err>>2]|0;
   $187 = $186 | 2;
   HEAP32[$__err>>2] = $187;
   break;
  }
  case 104: case 66: case 98:  {
   $25 = (($__tm) + 16|0);
   $26 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$25,$__b,$26,$__err,$15);
   break;
  }
  case 70:  {
   $60 = HEAP32[$__b>>2]|0;
   $61 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($3,$this,$60,$61,$__iob,$__err,$__tm,39568,((39568 + 8|0)));
   $62 = HEAP32[$3>>2]|0;
   HEAP32[$__b>>2] = $62;
   break;
  }
  case 101: case 100:  {
   $48 = HEAP32[$__e>>2]|0;
   $49 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$48,$__err,$15,2)|0);
   $50 = HEAP32[$__err>>2]|0;
   $51 = $50 & 4;
   $52 = ($51|0)==(0);
   $53 = ($49|0)>(0);
   $or$cond$i = $52 & $53;
   $54 = ($49|0)<(32);
   $or$cond3$i = $or$cond$i & $54;
   if ($or$cond3$i) {
    $55 = (($__tm) + 12|0);
    HEAP32[$55>>2] = $49;
    break L4;
   } else {
    $56 = $50 | 4;
    HEAP32[$__err>>2] = $56;
    break L4;
   }
   break;
  }
  case 65: case 97:  {
   $23 = (($__tm) + 24|0);
   $24 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this,$23,$__b,$24,$__err,$15);
   break;
  }
  case 77:  {
   $97 = HEAP32[$__e>>2]|0;
   $98 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$97,$__err,$15,2)|0);
   $99 = HEAP32[$__err>>2]|0;
   $100 = $99 & 4;
   $101 = ($100|0)==(0);
   $102 = ($98|0)<(60);
   $or$cond$i21 = $101 & $102;
   if ($or$cond$i21) {
    $103 = (($__tm) + 4|0);
    HEAP32[$103>>2] = $98;
    break L4;
   } else {
    $104 = $99 | 4;
    HEAP32[$__err>>2] = $104;
    break L4;
   }
   break;
  }
  case 106:  {
   $80 = HEAP32[$__e>>2]|0;
   $81 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$80,$__err,$15,3)|0);
   $82 = HEAP32[$__err>>2]|0;
   $83 = $82 & 4;
   $84 = ($83|0)==(0);
   $85 = ($81|0)<(366);
   $or$cond$i15 = $84 & $85;
   if ($or$cond$i15) {
    $86 = (($__tm) + 28|0);
    HEAP32[$86>>2] = $81;
    break L4;
   } else {
    $87 = $82 | 4;
    HEAP32[$__err>>2] = $87;
    break L4;
   }
   break;
  }
  case 83:  {
   $234 = HEAP32[$__e>>2]|0;
   $235 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$234,$__err,$15,2)|0);
   $236 = HEAP32[$__err>>2]|0;
   $237 = $236 & 4;
   $238 = ($237|0)==(0);
   $239 = ($235|0)<(61);
   $or$cond$i43 = $238 & $239;
   if ($or$cond$i43) {
    HEAP32[$__tm>>2] = $235;
    break L4;
   } else {
    $240 = $236 | 4;
    HEAP32[$__err>>2] = $240;
    break L4;
   }
   break;
  }
  case 82:  {
   $231 = HEAP32[$__b>>2]|0;
   $232 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($5,$this,$231,$232,$__iob,$__err,$__tm,39592,((39592 + 5|0)));
   $233 = HEAP32[$5>>2]|0;
   HEAP32[$__b>>2] = $233;
   break;
  }
  case 114:  {
   $228 = HEAP32[$__b>>2]|0;
   $229 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($4,$this,$228,$229,$__iob,$__err,$__tm,39576,((39576 + 11|0)));
   $230 = HEAP32[$4>>2]|0;
   HEAP32[$__b>>2] = $230;
   break;
  }
  case 112:  {
   $188 = (($__tm) + 8|0);
   $189 = HEAP32[$__e>>2]|0;
   $190 = (($this) + 8|0);
   $191 = HEAP32[$190>>2]|0;
   $192 = (($191) + 8|0);
   $193 = HEAP32[$192>>2]|0;
   $194 = (FUNCTION_TABLE_ii[$193 & 127]($190)|0);
   $195 = HEAP8[$194>>0]|0;
   $196 = $195 & 1;
   $197 = ($196<<24>>24)==(0);
   if ($197) {
    $200 = $195&255;
    $201 = $200 >>> 1;
    $213 = $201;
   } else {
    $198 = (($194) + 4|0);
    $199 = HEAP32[$198>>2]|0;
    $213 = $199;
   }
   $202 = (($194) + 12|0);
   $203 = HEAP8[$202>>0]|0;
   $204 = $203 & 1;
   $205 = ($204<<24>>24)==(0);
   if ($205) {
    $208 = $203&255;
    $209 = $208 >>> 1;
    $211 = $209;
   } else {
    $206 = (($194) + 16|0);
    $207 = HEAP32[$206>>2]|0;
    $211 = $207;
   }
   $210 = (0 - ($211))|0;
   $212 = ($213|0)==($210|0);
   if ($212) {
    $214 = HEAP32[$__err>>2]|0;
    $215 = $214 | 4;
    HEAP32[$__err>>2] = $215;
    break L4;
   }
   $216 = (($194) + 24|0);
   $217 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$189,$194,$216,$15,$__err,0)|0);
   $218 = $217;
   $219 = $194;
   $220 = (($218) - ($219))|0;
   $221 = ($217|0)==($194|0);
   if ($221) {
    $222 = HEAP32[$188>>2]|0;
    $223 = ($222|0)==(12);
    if ($223) {
     HEAP32[$188>>2] = 0;
     break L4;
    }
   }
   $224 = ($220|0)==(12);
   if ($224) {
    $225 = HEAP32[$188>>2]|0;
    $226 = ($225|0)<(12);
    if ($226) {
     $227 = (($225) + 12)|0;
     HEAP32[$188>>2] = $227;
    }
   }
   break;
  }
  case 84:  {
   $241 = HEAP32[$__b>>2]|0;
   $242 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($6,$this,$241,$242,$__iob,$__err,$__tm,39600,((39600 + 8|0)));
   $243 = HEAP32[$6>>2]|0;
   HEAP32[$__b>>2] = $243;
   break;
  }
  case 119:  {
   $244 = HEAP32[$__e>>2]|0;
   $245 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$244,$__err,$15,1)|0);
   $246 = HEAP32[$__err>>2]|0;
   $247 = $246 & 4;
   $248 = ($247|0)==(0);
   $249 = ($245|0)<(7);
   $or$cond$i46 = $248 & $249;
   if ($or$cond$i46) {
    $250 = (($__tm) + 24|0);
    HEAP32[$250>>2] = $245;
    break L4;
   } else {
    $251 = $246 | 4;
    HEAP32[$__err>>2] = $251;
    break L4;
   }
   break;
  }
  case 120:  {
   $252 = HEAP32[$this>>2]|0;
   $253 = (($252) + 20|0);
   $254 = HEAP32[$253>>2]|0;
   $255 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $255;
   $256 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $256;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$7+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$8+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$254 & 63]($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm);
   STACKTOP = sp;return;
   break;
  }
  case 88:  {
   $257 = (($this) + 8|0);
   $258 = HEAP32[$257>>2]|0;
   $259 = (($258) + 24|0);
   $260 = HEAP32[$259>>2]|0;
   $261 = (FUNCTION_TABLE_ii[$260 & 127]($257)|0);
   $262 = HEAP32[$__b>>2]|0;
   $263 = HEAP32[$__e>>2]|0;
   $264 = HEAP8[$261>>0]|0;
   $265 = $264 & 1;
   $266 = ($265<<24>>24)==(0);
   if ($266) {
    $271 = (($261) + 1|0);
    $272 = $264&255;
    $273 = $272 >>> 1;
    $275 = $271;$276 = $273;
   } else {
    $267 = (($261) + 8|0);
    $268 = HEAP32[$267>>2]|0;
    $269 = (($261) + 4|0);
    $270 = HEAP32[$269>>2]|0;
    $275 = $268;$276 = $270;
   }
   $274 = (($275) + ($276)|0);
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($9,$this,$262,$263,$__iob,$__err,$__tm,$275,$274);
   $277 = HEAP32[$9>>2]|0;
   HEAP32[$__b>>2] = $277;
   break;
  }
  case 121:  {
   $278 = (($__tm) + 20|0);
   $279 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($278,$__b,$279,$__err,$15);
   break;
  }
  case 89:  {
   $280 = HEAP32[$__e>>2]|0;
   $281 = (__ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$280,$__err,$15,4)|0);
   $282 = HEAP32[$__err>>2]|0;
   $283 = $282 & 4;
   $284 = ($283|0)==(0);
   if ($284) {
    $285 = (($__tm) + 20|0);
    $286 = (($281) + -1900)|0;
    HEAP32[$285>>2] = $286;
   }
   break;
  }
  case 37:  {
   $287 = HEAP32[$__e>>2]|0;
   $288 = HEAP32[$__b>>2]|0;
   $289 = ($288|0)==(0|0);
   do {
    if ($289) {
     $301 = 0;
    } else {
     $290 = (($288) + 12|0);
     $291 = HEAP32[$290>>2]|0;
     $292 = (($288) + 16|0);
     $293 = HEAP32[$292>>2]|0;
     $294 = ($291|0)==($293|0);
     if ($294) {
      $295 = HEAP32[$288>>2]|0;
      $296 = (($295) + 36|0);
      $297 = HEAP32[$296>>2]|0;
      $298 = (FUNCTION_TABLE_ii[$297 & 127]($288)|0);
      $299 = ($298|0)==(-1);
      if ($299) {
       HEAP32[$__b>>2] = 0;
       $301 = 0;
       break;
      } else {
       $$pre$i$i$i$i = HEAP32[$__b>>2]|0;
       $301 = $$pre$i$i$i$i;
       break;
      }
     } else {
      $301 = $288;
     }
    }
   } while(0);
   $300 = ($301|0)==(0|0);
   $302 = ($287|0)==(0|0);
   do {
    if ($302) {
     label = 101;
    } else {
     $303 = (($287) + 12|0);
     $304 = HEAP32[$303>>2]|0;
     $305 = (($287) + 16|0);
     $306 = HEAP32[$305>>2]|0;
     $307 = ($304|0)==($306|0);
     if ($307) {
      $308 = HEAP32[$287>>2]|0;
      $309 = (($308) + 36|0);
      $310 = HEAP32[$309>>2]|0;
      $311 = (FUNCTION_TABLE_ii[$310 & 127]($287)|0);
      $312 = ($311|0)==(-1);
      if ($312) {
       label = 101;
       break;
      }
     }
     if ($300) {
      $$pre$i2$i$i611$i = $287;
     } else {
      label = 102;
     }
    }
   } while(0);
   if ((label|0) == 101) {
    if ($300) {
     label = 102;
    } else {
     $$pre$i2$i$i611$i = 0;
    }
   }
   if ((label|0) == 102) {
    $313 = HEAP32[$__err>>2]|0;
    $314 = $313 | 6;
    HEAP32[$__err>>2] = $314;
    break L4;
   }
   $315 = HEAP32[$__b>>2]|0;
   $316 = (($315) + 12|0);
   $317 = HEAP32[$316>>2]|0;
   $318 = (($315) + 16|0);
   $319 = HEAP32[$318>>2]|0;
   $320 = ($317|0)==($319|0);
   if ($320) {
    $321 = HEAP32[$315>>2]|0;
    $322 = (($321) + 36|0);
    $323 = HEAP32[$322>>2]|0;
    $324 = (FUNCTION_TABLE_ii[$323 & 127]($315)|0);
    $$0$i$i$i = $324;
   } else {
    $325 = HEAP8[$317>>0]|0;
    $326 = $325&255;
    $$0$i$i$i = $326;
   }
   $327 = $$0$i$i$i&255;
   $328 = HEAP32[$15>>2]|0;
   $329 = (($328) + 36|0);
   $330 = HEAP32[$329>>2]|0;
   $331 = (FUNCTION_TABLE_iiii[$330 & 31]($15,$327,0)|0);
   $332 = ($331<<24>>24)==(37);
   if (!($332)) {
    $333 = HEAP32[$__err>>2]|0;
    $334 = $333 | 4;
    HEAP32[$__err>>2] = $334;
    break L4;
   }
   $335 = HEAP32[$__b>>2]|0;
   $336 = (($335) + 12|0);
   $337 = HEAP32[$336>>2]|0;
   $338 = (($335) + 16|0);
   $339 = HEAP32[$338>>2]|0;
   $340 = ($337|0)==($339|0);
   if ($340) {
    $341 = HEAP32[$335>>2]|0;
    $342 = (($341) + 40|0);
    $343 = HEAP32[$342>>2]|0;
    (FUNCTION_TABLE_ii[$343 & 127]($335)|0);
    $$pre$i = HEAP32[$__b>>2]|0;
    $346 = $$pre$i;
   } else {
    $344 = (($337) + 1|0);
    HEAP32[$336>>2] = $344;
    $346 = $335;
   }
   $345 = ($346|0)==(0|0);
   do {
    if ($345) {
     $358 = 0;
    } else {
     $347 = (($346) + 12|0);
     $348 = HEAP32[$347>>2]|0;
     $349 = (($346) + 16|0);
     $350 = HEAP32[$349>>2]|0;
     $351 = ($348|0)==($350|0);
     if ($351) {
      $352 = HEAP32[$346>>2]|0;
      $353 = (($352) + 36|0);
      $354 = HEAP32[$353>>2]|0;
      $355 = (FUNCTION_TABLE_ii[$354 & 127]($346)|0);
      $356 = ($355|0)==(-1);
      if ($356) {
       HEAP32[$__b>>2] = 0;
       $358 = 0;
       break;
      } else {
       $$pre$i$i$i2$i = HEAP32[$__b>>2]|0;
       $358 = $$pre$i$i$i2$i;
       break;
      }
     } else {
      $358 = $346;
     }
    }
   } while(0);
   $357 = ($358|0)==(0|0);
   $359 = ($$pre$i2$i$i611$i|0)==(0|0);
   do {
    if ($359) {
     label = 120;
    } else {
     $360 = (($$pre$i2$i$i611$i) + 12|0);
     $361 = HEAP32[$360>>2]|0;
     $362 = (($$pre$i2$i$i611$i) + 16|0);
     $363 = HEAP32[$362>>2]|0;
     $364 = ($361|0)==($363|0);
     if ($364) {
      $365 = HEAP32[$$pre$i2$i$i611$i>>2]|0;
      $366 = (($365) + 36|0);
      $367 = HEAP32[$366>>2]|0;
      $368 = (FUNCTION_TABLE_ii[$367 & 127]($$pre$i2$i$i611$i)|0);
      $369 = ($368|0)==(-1);
      if ($369) {
       label = 120;
       break;
      }
     }
     if ($357) {
      break L4;
     }
    }
   } while(0);
   if ((label|0) == 120) {
    if (!($357)) {
     break L4;
    }
   }
   $370 = HEAP32[$__err>>2]|0;
   $371 = $370 | 2;
   HEAP32[$__err>>2] = $371;
   break;
  }
  default: {
   $372 = HEAP32[$__err>>2]|0;
   $373 = $372 | 4;
   HEAP32[$__err>>2] = $373;
  }
  }
 } while(0);
 $374 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $374;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result,$this,$__b$0,$__e$0,$__iob,$__err,$__tm,$__fmtb,$__fmte) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b$0 = $__b$0|0;
 $__e$0 = $__e$0|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmtb = $__fmtb|0;
 $__fmte = $__fmte|0;
 var $$ = 0, $$$pre$i$i$i18 = 0, $$$pre$i$i$i3 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i$i$i16 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i22 = 0, $$0$i$i1$i$i7 = 0, $$0$i$i13 = 0, $$0$ph$be = 0, $$0$ph40 = 0, $$0$pn = 0, $$1 = 0, $$2 = 0, $$2$lcssa = 0, $$4 = 0, $$5 = 0, $$__b$sroa$0$1 = 0;
 var $$__b$sroa$0$13 = 0, $$__b$sroa$0$4 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$idx = 0, $$idx$val = 0, $$idx3 = 0, $$idx3$val = 0, $$pre$i$i$i18 = 0, $$pre$i$i$i3 = 0, $$pre$i3$i$i9 = 0, $$pre$i3$i$i942 = 0, $$pre$i3$i$i943 = 0, $$pre41 = 0, $$pre41$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__b$sroa$0$0 = 0, $__b$sroa$0$1 = 0, $__b$sroa$0$2 = 0, $__b$sroa$0$3 = 0, $__b$sroa$0$4 = 0, $__b$sroa$0$5 = 0, $__cmd$0 = 0, $__e$sroa$0$0 = 0, $__e$sroa$0$1 = 0, $__e$sroa$0$10 = 0, $__e$sroa$0$3 = 0, $__e$sroa$0$4 = 0, $__e$sroa$0$5 = 0, $__e$sroa$0$6 = 0, $__e$sroa$0$7 = 0, $__e$sroa$0$8 = 0, $__opt$0 = 0, $phitmp$i4$i$i10 = 0, $tmp$i$i12 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $$byval_copy1 = sp + 16|0;
 $$byval_copy = sp + 12|0;
 $0 = sp + 8|0;
 $1 = sp + 4|0;
 $2 = sp;
 $3 = (($__iob) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 4|0);
 $6 = HEAP32[$5>>2]|0;HEAP32[$5>>2] = (($6+1)|0);
 $7 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx = (($4) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx3 = (($4) + 12|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $8 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx3$val,$7)|0);
 $9 = (($4) + 4|0);
 $10 = HEAP32[$9>>2]|0;HEAP32[$9>>2] = (($10+-1)|0);
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = HEAP32[$4>>2]|0;
  $13 = (($12) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  FUNCTION_TABLE_vi[$14 & 255]($4);
 }
 HEAP32[$__err>>2] = 0;
 $15 = ($__fmtb|0)==($__fmte|0);
 L4: do {
  if ($15) {
   $$pre$i$i$i18 = $__b$0;$__e$sroa$0$10 = $__e$0;
  } else {
   $$0$ph40 = $__fmtb;$$pre41 = 0;$__b$sroa$0$0 = $__b$0;$__e$sroa$0$0 = $__e$0;
   L6: while(1) {
    $17 = $$pre41;$__b$sroa$0$1 = $__b$sroa$0$0;$__e$sroa$0$1 = $__e$sroa$0$0;
    while(1) {
     $16 = ($17|0)==(0);
     if (!($16)) {
      $$pre$i$i$i18 = $__b$sroa$0$1;$__e$sroa$0$10 = $__e$sroa$0$1;
      break L4;
     }
     $18 = ($__b$sroa$0$1|0)==(0|0);
     if ($18) {
      $183 = 1;$65 = 0;$__b$sroa$0$2 = 0;
     } else {
      $19 = (($__b$sroa$0$1) + 12|0);
      $20 = HEAP32[$19>>2]|0;
      $21 = (($__b$sroa$0$1) + 16|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = ($20|0)==($22|0);
      if ($23) {
       $24 = HEAP32[$__b$sroa$0$1>>2]|0;
       $25 = (($24) + 36|0);
       $26 = HEAP32[$25>>2]|0;
       $27 = (FUNCTION_TABLE_ii[$26 & 127]($__b$sroa$0$1)|0);
       $$0$i$i$i$i = $27;
      } else {
       $28 = HEAP32[$20>>2]|0;
       $$0$i$i$i$i = $28;
      }
      $29 = ($$0$i$i$i$i|0)==(-1);
      $$__b$sroa$0$1 = $29 ? 0 : $__b$sroa$0$1;
      $$__b$sroa$0$13 = $29 ? 0 : $__b$sroa$0$1;
      $$ = $29 ? 1 : 0;
      $183 = $$;$65 = $$__b$sroa$0$13;$__b$sroa$0$2 = $$__b$sroa$0$1;
     }
     $30 = ($__e$sroa$0$1|0)==(0|0);
     if ($30) {
      label = 17;
     } else {
      $31 = (($__e$sroa$0$1) + 12|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = (($__e$sroa$0$1) + 16|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = ($32|0)==($34|0);
      if ($35) {
       $36 = HEAP32[$__e$sroa$0$1>>2]|0;
       $37 = (($36) + 36|0);
       $38 = HEAP32[$37>>2]|0;
       $39 = (FUNCTION_TABLE_ii[$38 & 127]($__e$sroa$0$1)|0);
       $$0$i$i1$i$i = $39;
      } else {
       $40 = HEAP32[$32>>2]|0;
       $$0$i$i1$i$i = $40;
      }
      $41 = ($$0$i$i1$i$i|0)==(-1);
      if ($41) {
       label = 17;
      } else {
       if ($183) {
        $__e$sroa$0$4 = $__e$sroa$0$1;
       } else {
        $__e$sroa$0$3 = $__e$sroa$0$1;
        label = 19;
        break L6;
       }
      }
     }
     if ((label|0) == 17) {
      label = 0;
      if ($183) {
       $__e$sroa$0$3 = 0;
       label = 19;
       break L6;
      } else {
       $__e$sroa$0$4 = 0;
      }
     }
     $42 = HEAP32[$$0$ph40>>2]|0;
     $43 = HEAP32[$8>>2]|0;
     $44 = (($43) + 52|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = (FUNCTION_TABLE_iiii[$45 & 31]($8,$42,0)|0);
     $47 = ($46<<24>>24)==(37);
     if ($47) {
      label = 21;
      break;
     }
     $69 = HEAP32[$$0$ph40>>2]|0;
     $70 = HEAP32[$8>>2]|0;
     $71 = (($70) + 12|0);
     $72 = HEAP32[$71>>2]|0;
     $73 = (FUNCTION_TABLE_iiii[$72 & 31]($8,8192,$69)|0);
     if ($73) {
      $$0$pn = $$0$ph40;
      label = 31;
      break;
     }
     $128 = (($65) + 12|0);
     $129 = HEAP32[$128>>2]|0;
     $130 = (($65) + 16|0);
     $131 = HEAP32[$130>>2]|0;
     $132 = ($129|0)==($131|0);
     if ($132) {
      $133 = HEAP32[$65>>2]|0;
      $134 = (($133) + 36|0);
      $135 = HEAP32[$134>>2]|0;
      $136 = (FUNCTION_TABLE_ii[$135 & 127]($65)|0);
      $$0$i$i13 = $136;
     } else {
      $137 = HEAP32[$129>>2]|0;
      $$0$i$i13 = $137;
     }
     $138 = HEAP32[$8>>2]|0;
     $139 = (($138) + 28|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = (FUNCTION_TABLE_iii[$140 & 63]($8,$$0$i$i13)|0);
     $142 = HEAP32[$$0$ph40>>2]|0;
     $143 = HEAP32[$8>>2]|0;
     $144 = (($143) + 28|0);
     $145 = HEAP32[$144>>2]|0;
     $146 = (FUNCTION_TABLE_iii[$145 & 63]($8,$142)|0);
     $147 = ($141|0)==($146|0);
     if ($147) {
      label = 57;
      break;
     }
     HEAP32[$__err>>2] = 4;
     $17 = 4;$__b$sroa$0$1 = $__b$sroa$0$2;$__e$sroa$0$1 = $__e$sroa$0$4;
    }
    L35: do {
     if ((label|0) == 21) {
      label = 0;
      $48 = (($$0$ph40) + 4|0);
      $49 = ($48|0)==($__fmte|0);
      if ($49) {
       label = 22;
       break L6;
      }
      $50 = HEAP32[$48>>2]|0;
      $51 = HEAP32[$8>>2]|0;
      $52 = (($51) + 52|0);
      $53 = HEAP32[$52>>2]|0;
      $54 = (FUNCTION_TABLE_iiii[$53 & 31]($8,$50,0)|0);
      if ((($54<<24>>24) == 48) | (($54<<24>>24) == 69)) {
       $55 = (($$0$ph40) + 8|0);
       $56 = ($55|0)==($__fmte|0);
       if ($56) {
        label = 25;
        break L6;
       }
       $57 = HEAP32[$55>>2]|0;
       $58 = HEAP32[$8>>2]|0;
       $59 = (($58) + 52|0);
       $60 = HEAP32[$59>>2]|0;
       $61 = (FUNCTION_TABLE_iiii[$60 & 31]($8,$57,0)|0);
       $$1 = $55;$__cmd$0 = $61;$__opt$0 = $54;
      } else {
       $$1 = $48;$__cmd$0 = $54;$__opt$0 = 0;
      }
      $62 = HEAP32[$this>>2]|0;
      $63 = (($62) + 36|0);
      $64 = HEAP32[$63>>2]|0;
      HEAP32[$1>>2] = $65;
      HEAP32[$2>>2] = $__e$sroa$0$4;
      ;HEAP32[$$byval_copy+0>>2]=HEAP32[$1+0>>2]|0;
      ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$2+0>>2]|0;
      FUNCTION_TABLE_viiiiiiiii[$64 & 3]($0,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm,$__cmd$0,$__opt$0);
      $66 = HEAP32[$0>>2]|0;
      $67 = (($$1) + 4|0);
      $$0$ph$be = $67;$__b$sroa$0$3 = $66;$__e$sroa$0$5 = $__e$sroa$0$4;
     }
     else if ((label|0) == 31) {
      while(1) {
       label = 0;
       $$2 = (($$0$pn) + 4|0);
       $74 = ($$2|0)==($__fmte|0);
       if ($74) {
        $$2$lcssa = $__fmte;
        break;
       }
       $75 = HEAP32[$$2>>2]|0;
       $76 = HEAP32[$8>>2]|0;
       $77 = (($76) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = (FUNCTION_TABLE_iiii[$78 & 31]($8,8192,$75)|0);
       if ($79) {
        $$0$pn = $$2;
        label = 31;
       } else {
        $$2$lcssa = $$2;
        break;
       }
      }
      $$pre$i$i$i3 = $65;$$pre$i3$i$i9 = $__e$sroa$0$4;$93 = $__e$sroa$0$4;$__b$sroa$0$4 = $__b$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$4;
      while(1) {
       $80 = ($$pre$i$i$i3|0)==(0|0);
       if ($80) {
        $105 = 1;$107 = 0;$__b$sroa$0$5 = $__b$sroa$0$4;
       } else {
        $81 = (($$pre$i$i$i3) + 12|0);
        $82 = HEAP32[$81>>2]|0;
        $83 = (($$pre$i$i$i3) + 16|0);
        $84 = HEAP32[$83>>2]|0;
        $85 = ($82|0)==($84|0);
        if ($85) {
         $86 = HEAP32[$$pre$i$i$i3>>2]|0;
         $87 = (($86) + 36|0);
         $88 = HEAP32[$87>>2]|0;
         $89 = (FUNCTION_TABLE_ii[$88 & 127]($$pre$i$i$i3)|0);
         $$0$i$i$i$i1 = $89;
        } else {
         $90 = HEAP32[$82>>2]|0;
         $$0$i$i$i$i1 = $90;
        }
        $91 = ($$0$i$i$i$i1|0)==(-1);
        $$__b$sroa$0$4 = $91 ? 0 : $__b$sroa$0$4;
        $$$pre$i$i$i3 = $91 ? 0 : $$pre$i$i$i3;
        $$4 = $91 ? 1 : 0;
        $105 = $$4;$107 = $$$pre$i$i$i3;$__b$sroa$0$5 = $$__b$sroa$0$4;
       }
       $92 = ($93|0)==(0|0);
       if ($92) {
        $$pre$i3$i$i943 = $$pre$i3$i$i9;$__e$sroa$0$7 = $__e$sroa$0$6;
        label = 44;
       } else {
        $94 = (($93) + 12|0);
        $95 = HEAP32[$94>>2]|0;
        $96 = (($93) + 16|0);
        $97 = HEAP32[$96>>2]|0;
        $98 = ($95|0)==($97|0);
        if ($98) {
         $99 = HEAP32[$93>>2]|0;
         $100 = (($99) + 36|0);
         $101 = HEAP32[$100>>2]|0;
         $102 = (FUNCTION_TABLE_ii[$101 & 127]($93)|0);
         $$0$i$i1$i$i7 = $102;
        } else {
         $103 = HEAP32[$95>>2]|0;
         $$0$i$i1$i$i7 = $103;
        }
        $104 = ($$0$i$i1$i$i7|0)==(-1);
        if ($104) {
         $$pre$i3$i$i943 = 0;$__e$sroa$0$7 = 0;
         label = 44;
        } else {
         $phitmp$i4$i$i10 = ($$pre$i3$i$i9|0)==(0|0);
         $tmp$i$i12 = $105 ^ $phitmp$i4$i$i10;
         if ($tmp$i$i12) {
          $$pre$i3$i$i942 = $$pre$i3$i$i9;$184 = $$pre$i3$i$i9;$__e$sroa$0$8 = $__e$sroa$0$6;
         } else {
          $$0$ph$be = $$2$lcssa;$__b$sroa$0$3 = $__b$sroa$0$5;$__e$sroa$0$5 = $__e$sroa$0$6;
          break L35;
         }
        }
       }
       if ((label|0) == 44) {
        label = 0;
        if ($105) {
         $$0$ph$be = $$2$lcssa;$__b$sroa$0$3 = $__b$sroa$0$5;$__e$sroa$0$5 = $__e$sroa$0$7;
         break L35;
        } else {
         $$pre$i3$i$i942 = $$pre$i3$i$i943;$184 = 0;$__e$sroa$0$8 = $__e$sroa$0$7;
        }
       }
       $106 = (($107) + 12|0);
       $108 = HEAP32[$106>>2]|0;
       $109 = (($107) + 16|0);
       $110 = HEAP32[$109>>2]|0;
       $111 = ($108|0)==($110|0);
       if ($111) {
        $112 = HEAP32[$107>>2]|0;
        $113 = (($112) + 36|0);
        $114 = HEAP32[$113>>2]|0;
        $115 = (FUNCTION_TABLE_ii[$114 & 127]($107)|0);
        $$0$i$i = $115;
       } else {
        $116 = HEAP32[$108>>2]|0;
        $$0$i$i = $116;
       }
       $117 = HEAP32[$8>>2]|0;
       $118 = (($117) + 12|0);
       $119 = HEAP32[$118>>2]|0;
       $120 = (FUNCTION_TABLE_iiii[$119 & 31]($8,8192,$$0$i$i)|0);
       if (!($120)) {
        $$0$ph$be = $$2$lcssa;$__b$sroa$0$3 = $__b$sroa$0$5;$__e$sroa$0$5 = $__e$sroa$0$8;
        break L35;
       }
       $121 = HEAP32[$106>>2]|0;
       $122 = HEAP32[$109>>2]|0;
       $123 = ($121|0)==($122|0);
       if ($123) {
        $124 = HEAP32[$107>>2]|0;
        $125 = (($124) + 40|0);
        $126 = HEAP32[$125>>2]|0;
        (FUNCTION_TABLE_ii[$126 & 127]($107)|0);
        $$pre$i$i$i3 = $107;$$pre$i3$i$i9 = $$pre$i3$i$i942;$93 = $184;$__b$sroa$0$4 = $__b$sroa$0$5;$__e$sroa$0$6 = $__e$sroa$0$8;
        continue;
       } else {
        $127 = (($121) + 4|0);
        HEAP32[$106>>2] = $127;
        $$pre$i$i$i3 = $107;$$pre$i3$i$i9 = $$pre$i3$i$i942;$93 = $184;$__b$sroa$0$4 = $__b$sroa$0$5;$__e$sroa$0$6 = $__e$sroa$0$8;
        continue;
       }
      }
     }
     else if ((label|0) == 57) {
      label = 0;
      $148 = HEAP32[$128>>2]|0;
      $149 = HEAP32[$130>>2]|0;
      $150 = ($148|0)==($149|0);
      if ($150) {
       $151 = HEAP32[$65>>2]|0;
       $152 = (($151) + 40|0);
       $153 = HEAP32[$152>>2]|0;
       (FUNCTION_TABLE_ii[$153 & 127]($65)|0);
      } else {
       $154 = (($148) + 4|0);
       HEAP32[$128>>2] = $154;
      }
      $155 = (($$0$ph40) + 4|0);
      $$0$ph$be = $155;$__b$sroa$0$3 = $__b$sroa$0$2;$__e$sroa$0$5 = $__e$sroa$0$4;
     }
    } while(0);
    $68 = ($$0$ph$be|0)==($__fmte|0);
    if ($68) {
     $$pre$i$i$i18 = $__b$sroa$0$3;$__e$sroa$0$10 = $__e$sroa$0$5;
     break L4;
    }
    $$pre41$pre = HEAP32[$__err>>2]|0;
    $$0$ph40 = $$0$ph$be;$$pre41 = $$pre41$pre;$__b$sroa$0$0 = $__b$sroa$0$3;$__e$sroa$0$0 = $__e$sroa$0$5;
   }
   if ((label|0) == 19) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i18 = $65;$__e$sroa$0$10 = $__e$sroa$0$3;
    break;
   }
   else if ((label|0) == 22) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i18 = $65;$__e$sroa$0$10 = $__e$sroa$0$4;
    break;
   }
   else if ((label|0) == 25) {
    HEAP32[$__err>>2] = 4;
    $$pre$i$i$i18 = $65;$__e$sroa$0$10 = $__e$sroa$0$4;
    break;
   }
  }
 } while(0);
 $156 = ($$pre$i$i$i18|0)==(0|0);
 if ($156) {
  $182 = 0;$185 = 1;
 } else {
  $157 = (($$pre$i$i$i18) + 12|0);
  $158 = HEAP32[$157>>2]|0;
  $159 = (($$pre$i$i$i18) + 16|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = ($158|0)==($160|0);
  if ($161) {
   $162 = HEAP32[$$pre$i$i$i18>>2]|0;
   $163 = (($162) + 36|0);
   $164 = HEAP32[$163>>2]|0;
   $165 = (FUNCTION_TABLE_ii[$164 & 127]($$pre$i$i$i18)|0);
   $$0$i$i$i$i16 = $165;
  } else {
   $166 = HEAP32[$158>>2]|0;
   $$0$i$i$i$i16 = $166;
  }
  $167 = ($$0$i$i$i$i16|0)==(-1);
  $$$pre$i$i$i18 = $167 ? 0 : $$pre$i$i$i18;
  $$5 = $167 ? 1 : 0;
  $182 = $$$pre$i$i$i18;$185 = $$5;
 }
 $168 = ($__e$sroa$0$10|0)==(0|0);
 if ($168) {
  label = 72;
 } else {
  $169 = (($__e$sroa$0$10) + 12|0);
  $170 = HEAP32[$169>>2]|0;
  $171 = (($__e$sroa$0$10) + 16|0);
  $172 = HEAP32[$171>>2]|0;
  $173 = ($170|0)==($172|0);
  if ($173) {
   $174 = HEAP32[$__e$sroa$0$10>>2]|0;
   $175 = (($174) + 36|0);
   $176 = HEAP32[$175>>2]|0;
   $177 = (FUNCTION_TABLE_ii[$176 & 127]($__e$sroa$0$10)|0);
   $$0$i$i1$i$i22 = $177;
  } else {
   $178 = HEAP32[$170>>2]|0;
   $$0$i$i1$i$i22 = $178;
  }
  $179 = ($$0$i$i1$i$i22|0)==(-1);
  if ($179) {
   label = 72;
  } else {
   if ($185) {
    HEAP32[$agg$result>>2] = $182;
    STACKTOP = sp;return;
   }
  }
 }
 if ((label|0) == 72) {
  if (!($185)) {
   HEAP32[$agg$result>>2] = $182;
   STACKTOP = sp;return;
  }
 }
 $180 = HEAP32[$__err>>2]|0;
 $181 = $180 | 2;
 HEAP32[$__err>>2] = $181;
 HEAP32[$agg$result>>2] = $182;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 2;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = HEAP32[$__e>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result,$this,$0,$1,$__iob,$__err,$__tm,39704,((39704 + 32|0)));
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 127]($0)|0);
 $5 = HEAP32[$__b>>2]|0;
 $6 = HEAP32[$__e>>2]|0;
 $7 = HEAP8[$4>>0]|0;
 $8 = $7 & 1;
 $9 = ($8<<24>>24)==(0);
 if ($9) {
  $14 = (($4) + 4|0);
  $15 = $7&255;
  $16 = $15 >>> 1;
  $18 = $14;$19 = $16;
 } else {
  $10 = (($4) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (($4) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $18 = $11;$19 = $13;
 }
 $17 = (($18) + ($19<<2)|0);
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($agg$result,$this,$5,$6,$__iob,$__err,$__tm,$18,$17);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$idx = 0, $$idx$val = 0, $$idx3 = 0, $$idx3$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx = (($1) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx3 = (($1) + 12|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx3$val,$4)|0);
 $6 = (($1) + 4|0);
 $7 = HEAP32[$6>>2]|0;HEAP32[$6>>2] = (($7+-1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = HEAP32[$1>>2]|0;
  $10 = (($9) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_vi[$11 & 255]($1);
 }
 $12 = (($__tm) + 24|0);
 $13 = HEAP32[$__e>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$12,$__b,$13,$__err,$5);
 $14 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $14;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__w,$__b,$__e$0,$__err,$__ct) {
 $this = $this|0;
 $__w = $__w|0;
 $__b = $__b|0;
 $__e$0 = $__e$0|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (FUNCTION_TABLE_ii[$2 & 127]($0)|0);
 $4 = (($3) + 168|0);
 $5 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e$0,$3,$4,$__ct,$__err,0)|0);
 $6 = $5;
 $7 = $3;
 $8 = (($6) - ($7))|0;
 $9 = ($8|0)<(168);
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = (($8|0) / 12)&-1;
 $11 = (($10|0) % 7)&-1;
 HEAP32[$__w>>2] = $11;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$idx = 0, $$idx$val = 0, $$idx3 = 0, $$idx3$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx = (($1) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx3 = (($1) + 12|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx3$val,$4)|0);
 $6 = (($1) + 4|0);
 $7 = HEAP32[$6>>2]|0;HEAP32[$6>>2] = (($7+-1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = HEAP32[$1>>2]|0;
  $10 = (($9) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_vi[$11 & 255]($1);
 }
 $12 = (($__tm) + 16|0);
 $13 = HEAP32[$__e>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$12,$__b,$13,$__err,$5);
 $14 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $14;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$__m,$__b,$__e$0,$__err,$__ct) {
 $this = $this|0;
 $__m = $__m|0;
 $__b = $__b|0;
 $__e$0 = $__e$0|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_ii[$3 & 127]($0)|0);
 $5 = (($4) + 288|0);
 $6 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e$0,$4,$5,$__ct,$__err,0)|0);
 $7 = $6;
 $8 = $4;
 $9 = (($7) - ($8))|0;
 $10 = ($9|0)<(288);
 if (!($10)) {
  STACKTOP = sp;return;
 }
 $11 = (($9|0) / 12)&-1;
 $12 = (($11|0) % 12)&-1;
 HEAP32[$__m>>2] = $12;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 var $$idx = 0, $$idx$val = 0, $$idx3 = 0, $$idx3$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx = (($1) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx3 = (($1) + 12|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx3$val,$4)|0);
 $6 = (($1) + 4|0);
 $7 = HEAP32[$6>>2]|0;HEAP32[$6>>2] = (($7+-1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = HEAP32[$1>>2]|0;
  $10 = (($9) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_vi[$11 & 255]($1);
 }
 $12 = (($__tm) + 20|0);
 $13 = HEAP32[$__e>>2]|0;
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($12,$__b,$13,$__err,$5);
 $14 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $14;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($__y,$__b,$__e$0,$__err,$__ct) {
 $__y = $__y|0;
 $__b = $__b|0;
 $__e$0 = $__e$0|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 var $$ = 0, $$off = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e$0,$__err,$__ct,4)|0);
 $1 = HEAP32[$__err>>2]|0;
 $2 = $1 & 4;
 $3 = ($2|0)==(0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = ($0|0)<(69);
 if ($4) {
  $5 = (($0) + 2000)|0;
  $__t$0 = $5;
 } else {
  $$off = (($0) + -69)|0;
  $6 = ($$off>>>0)<(31);
  $7 = (($0) + 1900)|0;
  $$ = $6 ? $7 : $0;
  $__t$0 = $$;
 }
 $8 = (($__t$0) + -1900)|0;
 HEAP32[$__y>>2] = $8;
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($agg$result,$this,$__b,$__e,$__iob,$__err,$__tm,$__fmt,$0) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $0 = $0|0;
 var $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i25 = 0, $$0$i$i$i$i1$i = 0, $$0$i$i$i$i1$i35 = 0, $$0$i$i$i33 = 0, $$0$i$i1$i$i$i = 0, $$0$i$i1$i$i$i31 = 0, $$0$i$i1$i$i7$i = 0, $$0$i$i1$i$i7$i41 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$idx = 0, $$idx$val = 0, $$idx55 = 0, $$idx55$val = 0, $$pre$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i$i$i27 = 0, $$pre$i$i$i3$i = 0;
 var $$pre$i$i$i3$i37 = 0, $$pre$i3$i$i9$i = 0, $$pre$i3$i$i915$i = 0, $$sroa$087$0 = 0, $$sroa$087$2 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0;
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i = 0, $or$cond$i11 = 0, $or$cond$i15 = 0, $or$cond$i18 = 0;
 var $or$cond$i21 = 0, $or$cond$i49 = 0, $or$cond$i52 = 0, $or$cond$i8 = 0, $or$cond3$i = 0, $or$cond3$i12 = 0, $phitmp$i$i$i$i = 0, $phitmp$i$i$i$i28 = 0, $phitmp$i$i$i4$i = 0, $phitmp$i$i$i4$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $$byval_copy1 = sp + 36|0;
 $$byval_copy = sp + 16|0;
 $1 = sp;
 $2 = sp + 28|0;
 $3 = sp + 32|0;
 $4 = sp + 40|0;
 $5 = sp + 12|0;
 $6 = sp + 24|0;
 $7 = sp + 20|0;
 $8 = sp + 8|0;
 $9 = sp + 4|0;
 HEAP32[$__err>>2] = 0;
 $10 = (($__iob) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 4|0);
 $13 = HEAP32[$12>>2]|0;HEAP32[$12>>2] = (($13+1)|0);
 $14 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx = (($11) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx55 = (($11) + 12|0);
 $$idx55$val = HEAP32[$$idx55>>2]|0;
 $15 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx55$val,$14)|0);
 $16 = (($11) + 4|0);
 $17 = HEAP32[$16>>2]|0;HEAP32[$16>>2] = (($17+-1)|0);
 $18 = ($17|0)==(0);
 if ($18) {
  $19 = HEAP32[$11>>2]|0;
  $20 = (($19) + 8|0);
  $21 = HEAP32[$20>>2]|0;
  FUNCTION_TABLE_vi[$21 & 255]($11);
 }
 $22 = $__fmt << 24 >> 24;
 L4: do {
  switch ($22|0) {
  case 68:  {
   $57 = HEAP32[$__b>>2]|0;
   $58 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($2,$this,$57,$58,$__iob,$__err,$__tm,39736,((39736 + 32|0)));
   $59 = HEAP32[$2>>2]|0;
   HEAP32[$__b>>2] = $59;
   break;
  }
  case 109:  {
   $88 = HEAP32[$__e>>2]|0;
   $89 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$88,$__err,$15,2)|0);
   $90 = HEAP32[$__err>>2]|0;
   $91 = $90 & 4;
   $92 = ($91|0)==(0);
   $93 = ($89|0)<(13);
   $or$cond$i18 = $92 & $93;
   if ($or$cond$i18) {
    $94 = (($__tm) + 16|0);
    $95 = (($89) + -1)|0;
    HEAP32[$94>>2] = $95;
    break L4;
   } else {
    $96 = $90 | 4;
    HEAP32[$__err>>2] = $96;
    break L4;
   }
   break;
  }
  case 77:  {
   $97 = HEAP32[$__e>>2]|0;
   $98 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$97,$__err,$15,2)|0);
   $99 = HEAP32[$__err>>2]|0;
   $100 = $99 & 4;
   $101 = ($100|0)==(0);
   $102 = ($98|0)<(60);
   $or$cond$i21 = $101 & $102;
   if ($or$cond$i21) {
    $103 = (($__tm) + 4|0);
    HEAP32[$103>>2] = $98;
    break L4;
   } else {
    $104 = $99 | 4;
    HEAP32[$__err>>2] = $104;
    break L4;
   }
   break;
  }
  case 73:  {
   $71 = HEAP32[$__e>>2]|0;
   $72 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$71,$__err,$15,2)|0);
   $73 = HEAP32[$__err>>2]|0;
   $74 = $73 & 4;
   $75 = ($74|0)==(0);
   $76 = ($72|0)>(0);
   $or$cond$i11 = $75 & $76;
   $77 = ($72|0)<(13);
   $or$cond3$i12 = $or$cond$i11 & $77;
   if ($or$cond3$i12) {
    $78 = (($__tm) + 8|0);
    HEAP32[$78>>2] = $72;
    break L4;
   } else {
    $79 = $73 | 4;
    HEAP32[$__err>>2] = $79;
    break L4;
   }
   break;
  }
  case 72:  {
   $63 = HEAP32[$__e>>2]|0;
   $64 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$63,$__err,$15,2)|0);
   $65 = HEAP32[$__err>>2]|0;
   $66 = $65 & 4;
   $67 = ($66|0)==(0);
   $68 = ($64|0)<(24);
   $or$cond$i8 = $67 & $68;
   if ($or$cond$i8) {
    $69 = (($__tm) + 8|0);
    HEAP32[$69>>2] = $64;
    break L4;
   } else {
    $70 = $65 | 4;
    HEAP32[$__err>>2] = $70;
    break L4;
   }
   break;
  }
  case 104: case 66: case 98:  {
   $25 = (($__tm) + 16|0);
   $26 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$25,$__b,$26,$__err,$15);
   break;
  }
  case 70:  {
   $60 = HEAP32[$__b>>2]|0;
   $61 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($3,$this,$60,$61,$__iob,$__err,$__tm,39768,((39768 + 32|0)));
   $62 = HEAP32[$3>>2]|0;
   HEAP32[$__b>>2] = $62;
   break;
  }
  case 106:  {
   $80 = HEAP32[$__e>>2]|0;
   $81 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$80,$__err,$15,3)|0);
   $82 = HEAP32[$__err>>2]|0;
   $83 = $82 & 4;
   $84 = ($83|0)==(0);
   $85 = ($81|0)<(366);
   $or$cond$i15 = $84 & $85;
   if ($or$cond$i15) {
    $86 = (($__tm) + 28|0);
    HEAP32[$86>>2] = $81;
    break L4;
   } else {
    $87 = $82 | 4;
    HEAP32[$__err>>2] = $87;
    break L4;
   }
   break;
  }
  case 101: case 100:  {
   $48 = HEAP32[$__e>>2]|0;
   $49 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$48,$__err,$15,2)|0);
   $50 = HEAP32[$__err>>2]|0;
   $51 = $50 & 4;
   $52 = ($51|0)==(0);
   $53 = ($49|0)>(0);
   $or$cond$i = $52 & $53;
   $54 = ($49|0)<(32);
   $or$cond3$i = $or$cond$i & $54;
   if ($or$cond3$i) {
    $55 = (($__tm) + 12|0);
    HEAP32[$55>>2] = $49;
    break L4;
   } else {
    $56 = $50 | 4;
    HEAP32[$__err>>2] = $56;
    break L4;
   }
   break;
  }
  case 65: case 97:  {
   $23 = (($__tm) + 24|0);
   $24 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this,$23,$__b,$24,$__err,$15);
   break;
  }
  case 99:  {
   $27 = (($this) + 8|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (($28) + 12|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (FUNCTION_TABLE_ii[$30 & 127]($27)|0);
   $32 = HEAP32[$__b>>2]|0;
   $33 = HEAP32[$__e>>2]|0;
   $34 = HEAP8[$31>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $41 = (($31) + 4|0);
    $42 = $34&255;
    $43 = $42 >>> 1;
    $45 = $41;$46 = $43;
   } else {
    $37 = (($31) + 8|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = (($31) + 4|0);
    $40 = HEAP32[$39>>2]|0;
    $45 = $38;$46 = $40;
   }
   $44 = (($45) + ($46<<2)|0);
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($1,$this,$32,$33,$__iob,$__err,$__tm,$45,$44);
   $47 = HEAP32[$1>>2]|0;
   HEAP32[$__b>>2] = $47;
   break;
  }
  case 120:  {
   $247 = HEAP32[$this>>2]|0;
   $248 = (($247) + 20|0);
   $249 = HEAP32[$248>>2]|0;
   $250 = HEAP32[$__b>>2]|0;
   HEAP32[$7>>2] = $250;
   $251 = HEAP32[$__e>>2]|0;
   HEAP32[$8>>2] = $251;
   ;HEAP32[$$byval_copy+0>>2]=HEAP32[$7+0>>2]|0;
   ;HEAP32[$$byval_copy1+0>>2]=HEAP32[$8+0>>2]|0;
   FUNCTION_TABLE_viiiiiii[$249 & 63]($agg$result,$this,$$byval_copy,$$byval_copy1,$__iob,$__err,$__tm);
   STACKTOP = sp;return;
   break;
  }
  case 88:  {
   $252 = (($this) + 8|0);
   $253 = HEAP32[$252>>2]|0;
   $254 = (($253) + 24|0);
   $255 = HEAP32[$254>>2]|0;
   $256 = (FUNCTION_TABLE_ii[$255 & 127]($252)|0);
   $257 = HEAP32[$__b>>2]|0;
   $258 = HEAP32[$__e>>2]|0;
   $259 = HEAP8[$256>>0]|0;
   $260 = $259 & 1;
   $261 = ($260<<24>>24)==(0);
   if ($261) {
    $266 = (($256) + 4|0);
    $267 = $259&255;
    $268 = $267 >>> 1;
    $270 = $266;$271 = $268;
   } else {
    $262 = (($256) + 8|0);
    $263 = HEAP32[$262>>2]|0;
    $264 = (($256) + 4|0);
    $265 = HEAP32[$264>>2]|0;
    $270 = $263;$271 = $265;
   }
   $269 = (($270) + ($271<<2)|0);
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($9,$this,$257,$258,$__iob,$__err,$__tm,$270,$269);
   $272 = HEAP32[$9>>2]|0;
   HEAP32[$__b>>2] = $272;
   break;
  }
  case 121:  {
   $273 = (($__tm) + 20|0);
   $274 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($273,$__b,$274,$__err,$15);
   break;
  }
  case 89:  {
   $275 = HEAP32[$__e>>2]|0;
   $276 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$275,$__err,$15,4)|0);
   $277 = HEAP32[$__err>>2]|0;
   $278 = $277 & 4;
   $279 = ($278|0)==(0);
   if ($279) {
    $280 = (($__tm) + 20|0);
    $281 = (($276) + -1900)|0;
    HEAP32[$280>>2] = $281;
   }
   break;
  }
  case 37:  {
   $282 = HEAP32[$__e>>2]|0;
   $283 = HEAP32[$__b>>2]|0;
   $284 = ($283|0)==(0|0);
   do {
    if ($284) {
     $370 = 1;
    } else {
     $285 = (($283) + 12|0);
     $286 = HEAP32[$285>>2]|0;
     $287 = (($283) + 16|0);
     $288 = HEAP32[$287>>2]|0;
     $289 = ($286|0)==($288|0);
     if ($289) {
      $290 = HEAP32[$283>>2]|0;
      $291 = (($290) + 36|0);
      $292 = HEAP32[$291>>2]|0;
      $293 = (FUNCTION_TABLE_ii[$292 & 127]($283)|0);
      $$0$i$i$i$i$i = $293;
     } else {
      $294 = HEAP32[$286>>2]|0;
      $$0$i$i$i$i$i = $294;
     }
     $295 = ($$0$i$i$i$i$i|0)==(-1);
     if ($295) {
      HEAP32[$__b>>2] = 0;
      $370 = 1;
      break;
     } else {
      $$pre$i$i$i$i = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i$i = ($$pre$i$i$i$i|0)==(0|0);
      $370 = $phitmp$i$i$i$i;
      break;
     }
    }
   } while(0);
   $296 = ($282|0)==(0|0);
   if ($296) {
    label = 110;
   } else {
    $297 = (($282) + 12|0);
    $298 = HEAP32[$297>>2]|0;
    $299 = (($282) + 16|0);
    $300 = HEAP32[$299>>2]|0;
    $301 = ($298|0)==($300|0);
    if ($301) {
     $302 = HEAP32[$282>>2]|0;
     $303 = (($302) + 36|0);
     $304 = HEAP32[$303>>2]|0;
     $305 = (FUNCTION_TABLE_ii[$304 & 127]($282)|0);
     $$0$i$i1$i$i$i = $305;
    } else {
     $306 = HEAP32[$298>>2]|0;
     $$0$i$i1$i$i$i = $306;
    }
    $307 = ($$0$i$i1$i$i$i|0)==(-1);
    if ($307) {
     label = 110;
    } else {
     if ($370) {
      $$pre$i3$i$i915$i = $282;
     } else {
      label = 112;
     }
    }
   }
   if ((label|0) == 110) {
    if ($370) {
     label = 112;
    } else {
     $$pre$i3$i$i915$i = 0;
    }
   }
   if ((label|0) == 112) {
    $308 = HEAP32[$__err>>2]|0;
    $309 = $308 | 6;
    HEAP32[$__err>>2] = $309;
    break L4;
   }
   $310 = HEAP32[$__b>>2]|0;
   $311 = (($310) + 12|0);
   $312 = HEAP32[$311>>2]|0;
   $313 = (($310) + 16|0);
   $314 = HEAP32[$313>>2]|0;
   $315 = ($312|0)==($314|0);
   if ($315) {
    $316 = HEAP32[$310>>2]|0;
    $317 = (($316) + 36|0);
    $318 = HEAP32[$317>>2]|0;
    $319 = (FUNCTION_TABLE_ii[$318 & 127]($310)|0);
    $$0$i$i$i = $319;
   } else {
    $320 = HEAP32[$312>>2]|0;
    $$0$i$i$i = $320;
   }
   $321 = HEAP32[$15>>2]|0;
   $322 = (($321) + 52|0);
   $323 = HEAP32[$322>>2]|0;
   $324 = (FUNCTION_TABLE_iiii[$323 & 31]($15,$$0$i$i$i,0)|0);
   $325 = ($324<<24>>24)==(37);
   if (!($325)) {
    $326 = HEAP32[$__err>>2]|0;
    $327 = $326 | 4;
    HEAP32[$__err>>2] = $327;
    break L4;
   }
   $328 = HEAP32[$__b>>2]|0;
   $329 = (($328) + 12|0);
   $330 = HEAP32[$329>>2]|0;
   $331 = (($328) + 16|0);
   $332 = HEAP32[$331>>2]|0;
   $333 = ($330|0)==($332|0);
   if ($333) {
    $334 = HEAP32[$328>>2]|0;
    $335 = (($334) + 40|0);
    $336 = HEAP32[$335>>2]|0;
    (FUNCTION_TABLE_ii[$336 & 127]($328)|0);
    $$pre$i = HEAP32[$__b>>2]|0;
    $339 = $$pre$i;
   } else {
    $337 = (($330) + 4|0);
    HEAP32[$329>>2] = $337;
    $339 = $328;
   }
   $338 = ($339|0)==(0|0);
   do {
    if ($338) {
     $371 = 1;
    } else {
     $340 = (($339) + 12|0);
     $341 = HEAP32[$340>>2]|0;
     $342 = (($339) + 16|0);
     $343 = HEAP32[$342>>2]|0;
     $344 = ($341|0)==($343|0);
     if ($344) {
      $345 = HEAP32[$339>>2]|0;
      $346 = (($345) + 36|0);
      $347 = HEAP32[$346>>2]|0;
      $348 = (FUNCTION_TABLE_ii[$347 & 127]($339)|0);
      $$0$i$i$i$i1$i = $348;
     } else {
      $349 = HEAP32[$341>>2]|0;
      $$0$i$i$i$i1$i = $349;
     }
     $350 = ($$0$i$i$i$i1$i|0)==(-1);
     if ($350) {
      HEAP32[$__b>>2] = 0;
      $371 = 1;
      break;
     } else {
      $$pre$i$i$i3$i = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i4$i = ($$pre$i$i$i3$i|0)==(0|0);
      $371 = $phitmp$i$i$i4$i;
      break;
     }
    }
   } while(0);
   $351 = ($$pre$i3$i$i915$i|0)==(0|0);
   if ($351) {
    label = 133;
   } else {
    $352 = (($$pre$i3$i$i915$i) + 12|0);
    $353 = HEAP32[$352>>2]|0;
    $354 = (($$pre$i3$i$i915$i) + 16|0);
    $355 = HEAP32[$354>>2]|0;
    $356 = ($353|0)==($355|0);
    if ($356) {
     $357 = HEAP32[$$pre$i3$i$i915$i>>2]|0;
     $358 = (($357) + 36|0);
     $359 = HEAP32[$358>>2]|0;
     $360 = (FUNCTION_TABLE_ii[$359 & 127]($$pre$i3$i$i915$i)|0);
     $$0$i$i1$i$i7$i = $360;
    } else {
     $361 = HEAP32[$353>>2]|0;
     $$0$i$i1$i$i7$i = $361;
    }
    $362 = ($$0$i$i1$i$i7$i|0)==(-1);
    if ($362) {
     label = 133;
    } else {
     if ($371) {
      break L4;
     }
    }
   }
   if ((label|0) == 133) {
    if (!($371)) {
     break L4;
    }
   }
   $363 = HEAP32[$__err>>2]|0;
   $364 = $363 | 2;
   HEAP32[$__err>>2] = $364;
   break;
  }
  case 114:  {
   $223 = HEAP32[$__b>>2]|0;
   $224 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($4,$this,$223,$224,$__iob,$__err,$__tm,39800,((39800 + 44|0)));
   $225 = HEAP32[$4>>2]|0;
   HEAP32[$__b>>2] = $225;
   break;
  }
  case 82:  {
   $226 = HEAP32[$__b>>2]|0;
   $227 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($5,$this,$226,$227,$__iob,$__err,$__tm,39848,((39848 + 20|0)));
   $228 = HEAP32[$5>>2]|0;
   HEAP32[$__b>>2] = $228;
   break;
  }
  case 83:  {
   $229 = HEAP32[$__e>>2]|0;
   $230 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$229,$__err,$15,2)|0);
   $231 = HEAP32[$__err>>2]|0;
   $232 = $231 & 4;
   $233 = ($232|0)==(0);
   $234 = ($230|0)<(61);
   $or$cond$i49 = $233 & $234;
   if ($or$cond$i49) {
    HEAP32[$__tm>>2] = $230;
    break L4;
   } else {
    $235 = $231 | 4;
    HEAP32[$__err>>2] = $235;
    break L4;
   }
   break;
  }
  case 116: case 110:  {
   $105 = HEAP32[$__e>>2]|0;
   $$sroa$087$0 = $105;
   while(1) {
    $106 = HEAP32[$__b>>2]|0;
    $107 = ($106|0)==(0|0);
    do {
     if ($107) {
      $368 = 1;
     } else {
      $108 = (($106) + 12|0);
      $109 = HEAP32[$108>>2]|0;
      $110 = (($106) + 16|0);
      $111 = HEAP32[$110>>2]|0;
      $112 = ($109|0)==($111|0);
      if ($112) {
       $113 = HEAP32[$106>>2]|0;
       $114 = (($113) + 36|0);
       $115 = HEAP32[$114>>2]|0;
       $116 = (FUNCTION_TABLE_ii[$115 & 127]($106)|0);
       $$0$i$i$i$i$i25 = $116;
      } else {
       $117 = HEAP32[$109>>2]|0;
       $$0$i$i$i$i$i25 = $117;
      }
      $118 = ($$0$i$i$i$i$i25|0)==(-1);
      if ($118) {
       HEAP32[$__b>>2] = 0;
       $368 = 1;
       break;
      } else {
       $$pre$i$i$i$i27 = HEAP32[$__b>>2]|0;
       $phitmp$i$i$i$i28 = ($$pre$i$i$i$i27|0)==(0|0);
       $368 = $phitmp$i$i$i$i28;
       break;
      }
     }
    } while(0);
    $119 = ($$sroa$087$0|0)==(0|0);
    if ($119) {
     label = 43;
    } else {
     $120 = (($$sroa$087$0) + 12|0);
     $121 = HEAP32[$120>>2]|0;
     $122 = (($$sroa$087$0) + 16|0);
     $123 = HEAP32[$122>>2]|0;
     $124 = ($121|0)==($123|0);
     if ($124) {
      $125 = HEAP32[$$sroa$087$0>>2]|0;
      $126 = (($125) + 36|0);
      $127 = HEAP32[$126>>2]|0;
      $128 = (FUNCTION_TABLE_ii[$127 & 127]($$sroa$087$0)|0);
      $$0$i$i1$i$i$i31 = $128;
     } else {
      $129 = HEAP32[$121>>2]|0;
      $$0$i$i1$i$i$i31 = $129;
     }
     $130 = ($$0$i$i1$i$i$i31|0)==(-1);
     if ($130) {
      label = 43;
     } else {
      if ($368) {
       $$sroa$087$2 = $$sroa$087$0;
      } else {
       $$pre$i3$i$i9$i = $$sroa$087$0;
       break;
      }
     }
    }
    if ((label|0) == 43) {
     label = 0;
     if ($368) {
      $$pre$i3$i$i9$i = 0;
      break;
     } else {
      $$sroa$087$2 = 0;
     }
    }
    $131 = HEAP32[$__b>>2]|0;
    $132 = (($131) + 12|0);
    $133 = HEAP32[$132>>2]|0;
    $134 = (($131) + 16|0);
    $135 = HEAP32[$134>>2]|0;
    $136 = ($133|0)==($135|0);
    if ($136) {
     $137 = HEAP32[$131>>2]|0;
     $138 = (($137) + 36|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = (FUNCTION_TABLE_ii[$139 & 127]($131)|0);
     $$0$i$i$i33 = $140;
    } else {
     $141 = HEAP32[$133>>2]|0;
     $$0$i$i$i33 = $141;
    }
    $142 = HEAP32[$15>>2]|0;
    $143 = (($142) + 12|0);
    $144 = HEAP32[$143>>2]|0;
    $145 = (FUNCTION_TABLE_iiii[$144 & 31]($15,8192,$$0$i$i$i33)|0);
    if (!($145)) {
     $$pre$i3$i$i9$i = $$sroa$087$2;
     break;
    }
    $146 = HEAP32[$__b>>2]|0;
    $147 = (($146) + 12|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = (($146) + 16|0);
    $150 = HEAP32[$149>>2]|0;
    $151 = ($148|0)==($150|0);
    if ($151) {
     $152 = HEAP32[$146>>2]|0;
     $153 = (($152) + 40|0);
     $154 = HEAP32[$153>>2]|0;
     (FUNCTION_TABLE_ii[$154 & 127]($146)|0);
     $$sroa$087$0 = $$sroa$087$2;
     continue;
    } else {
     $155 = (($148) + 4|0);
     HEAP32[$147>>2] = $155;
     $$sroa$087$0 = $$sroa$087$2;
     continue;
    }
   }
   $156 = HEAP32[$__b>>2]|0;
   $157 = ($156|0)==(0|0);
   do {
    if ($157) {
     $369 = 1;
    } else {
     $158 = (($156) + 12|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = (($156) + 16|0);
     $161 = HEAP32[$160>>2]|0;
     $162 = ($159|0)==($161|0);
     if ($162) {
      $163 = HEAP32[$156>>2]|0;
      $164 = (($163) + 36|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = (FUNCTION_TABLE_ii[$165 & 127]($156)|0);
      $$0$i$i$i$i1$i35 = $166;
     } else {
      $167 = HEAP32[$159>>2]|0;
      $$0$i$i$i$i1$i35 = $167;
     }
     $168 = ($$0$i$i$i$i1$i35|0)==(-1);
     if ($168) {
      HEAP32[$__b>>2] = 0;
      $369 = 1;
      break;
     } else {
      $$pre$i$i$i3$i37 = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i4$i38 = ($$pre$i$i$i3$i37|0)==(0|0);
      $369 = $phitmp$i$i$i4$i38;
      break;
     }
    }
   } while(0);
   $169 = ($$pre$i3$i$i9$i|0)==(0|0);
   if ($169) {
    label = 64;
   } else {
    $170 = (($$pre$i3$i$i9$i) + 12|0);
    $171 = HEAP32[$170>>2]|0;
    $172 = (($$pre$i3$i$i9$i) + 16|0);
    $173 = HEAP32[$172>>2]|0;
    $174 = ($171|0)==($173|0);
    if ($174) {
     $175 = HEAP32[$$pre$i3$i$i9$i>>2]|0;
     $176 = (($175) + 36|0);
     $177 = HEAP32[$176>>2]|0;
     $178 = (FUNCTION_TABLE_ii[$177 & 127]($$pre$i3$i$i9$i)|0);
     $$0$i$i1$i$i7$i41 = $178;
    } else {
     $179 = HEAP32[$171>>2]|0;
     $$0$i$i1$i$i7$i41 = $179;
    }
    $180 = ($$0$i$i1$i$i7$i41|0)==(-1);
    if ($180) {
     label = 64;
    } else {
     if ($369) {
      break L4;
     }
    }
   }
   if ((label|0) == 64) {
    if (!($369)) {
     break L4;
    }
   }
   $181 = HEAP32[$__err>>2]|0;
   $182 = $181 | 2;
   HEAP32[$__err>>2] = $182;
   break;
  }
  case 84:  {
   $236 = HEAP32[$__b>>2]|0;
   $237 = HEAP32[$__e>>2]|0;
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($6,$this,$236,$237,$__iob,$__err,$__tm,39872,((39872 + 32|0)));
   $238 = HEAP32[$6>>2]|0;
   HEAP32[$__b>>2] = $238;
   break;
  }
  case 119:  {
   $239 = HEAP32[$__e>>2]|0;
   $240 = (__ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$239,$__err,$15,1)|0);
   $241 = HEAP32[$__err>>2]|0;
   $242 = $241 & 4;
   $243 = ($242|0)==(0);
   $244 = ($240|0)<(7);
   $or$cond$i52 = $243 & $244;
   if ($or$cond$i52) {
    $245 = (($__tm) + 24|0);
    HEAP32[$245>>2] = $240;
    break L4;
   } else {
    $246 = $241 | 4;
    HEAP32[$__err>>2] = $246;
    break L4;
   }
   break;
  }
  case 112:  {
   $183 = (($__tm) + 8|0);
   $184 = HEAP32[$__e>>2]|0;
   $185 = (($this) + 8|0);
   $186 = HEAP32[$185>>2]|0;
   $187 = (($186) + 8|0);
   $188 = HEAP32[$187>>2]|0;
   $189 = (FUNCTION_TABLE_ii[$188 & 127]($185)|0);
   $190 = HEAP8[$189>>0]|0;
   $191 = $190 & 1;
   $192 = ($191<<24>>24)==(0);
   if ($192) {
    $195 = $190&255;
    $196 = $195 >>> 1;
    $208 = $196;
   } else {
    $193 = (($189) + 4|0);
    $194 = HEAP32[$193>>2]|0;
    $208 = $194;
   }
   $197 = (($189) + 12|0);
   $198 = HEAP8[$197>>0]|0;
   $199 = $198 & 1;
   $200 = ($199<<24>>24)==(0);
   if ($200) {
    $203 = $198&255;
    $204 = $203 >>> 1;
    $206 = $204;
   } else {
    $201 = (($189) + 16|0);
    $202 = HEAP32[$201>>2]|0;
    $206 = $202;
   }
   $205 = (0 - ($206))|0;
   $207 = ($208|0)==($205|0);
   if ($207) {
    $209 = HEAP32[$__err>>2]|0;
    $210 = $209 | 4;
    HEAP32[$__err>>2] = $210;
    break L4;
   }
   $211 = (($189) + 24|0);
   $212 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$184,$189,$211,$15,$__err,0)|0);
   $213 = $212;
   $214 = $189;
   $215 = (($213) - ($214))|0;
   $216 = ($212|0)==($189|0);
   if ($216) {
    $217 = HEAP32[$183>>2]|0;
    $218 = ($217|0)==(12);
    if ($218) {
     HEAP32[$183>>2] = 0;
     break L4;
    }
   }
   $219 = ($215|0)==(12);
   if ($219) {
    $220 = HEAP32[$183>>2]|0;
    $221 = ($220|0)<(12);
    if ($221) {
     $222 = (($220) + 12)|0;
     HEAP32[$183>>2] = $222;
    }
   }
   break;
  }
  default: {
   $365 = HEAP32[$__err>>2]|0;
   $366 = $365 | 4;
   HEAP32[$__err>>2] = $366;
  }
  }
 } while(0);
 $367 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $367;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 STACKTOP = sp;return;
}
function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (__ZNSt3__16__clocEv()|0);
 $2 = ($0|0)==($1|0);
 if ($2) {
  STACKTOP = sp;return;
 }
 $3 = HEAP32[$this>>2]|0;
 _freelocale(($3|0));
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($agg$result,$this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$01$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__ne = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__nar = sp + 4|0;
 $__ne = sp;
 $2 = (($__nar) + 100|0);
 HEAP32[$__ne>>2] = $2;
 $3 = (($this) + 8|0);
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($3,$__nar,$__ne,$__tm,$__fmt,$__mod);
 $4 = HEAP32[$__ne>>2]|0;
 $5 = HEAP32[$__s>>2]|0;
 $6 = ($__nar|0)==($4|0);
 if ($6) {
  $24 = $5;
  HEAP32[$agg$result>>2] = $24;
  STACKTOP = sp;return;
 } else {
  $$01$i$i = $__nar;$9 = $5;
 }
 while(1) {
  $7 = HEAP8[$$01$i$i>>0]|0;
  $8 = ($9|0)==(0|0);
  do {
   if ($8) {
    $25 = 0;
   } else {
    $10 = (($9) + 24|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = (($9) + 28|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ($11|0)==($13|0);
    if ($14) {
     $16 = HEAP32[$9>>2]|0;
     $17 = (($16) + 52|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = $7&255;
     $20 = (FUNCTION_TABLE_iii[$18 & 63]($9,$19)|0);
     $21 = ($20|0)==(-1);
     $$$i = $21 ? 0 : $9;
     $25 = $$$i;
     break;
    } else {
     $15 = (($11) + 1|0);
     HEAP32[$10>>2] = $15;
     HEAP8[$11>>0] = $7;
     $25 = $9;
     break;
    }
   }
  } while(0);
  $22 = (($$01$i$i) + 1|0);
  $23 = ($22|0)==($4|0);
  if ($23) {
   $24 = $25;
   break;
  } else {
   $$01$i$i = $22;$9 = $25;
  }
 }
 HEAP32[$agg$result>>2] = $24;
 STACKTOP = sp;return;
}
function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this,$__nb,$__ne,$__tm,$__fmt,$__mod) {
 $this = $this|0;
 $__nb = $__nb|0;
 $__ne = $__ne|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fmt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $fmt = sp;
 HEAP8[$fmt>>0] = 37;
 $0 = (($fmt) + 1|0);
 HEAP8[$0>>0] = $__fmt;
 $1 = (($fmt) + 2|0);
 HEAP8[$1>>0] = $__mod;
 $2 = (($fmt) + 3|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__mod<<24>>24)==(0);
 if (!($3)) {
  HEAP8[$0>>0] = $__mod;
  HEAP8[$1>>0] = $__fmt;
 }
 $4 = HEAP32[$__ne>>2]|0;
 $5 = $4;
 $6 = $__nb;
 $7 = (($5) - ($6))|0;
 $8 = HEAP32[$this>>2]|0;
 $9 = (_strftime_l(($__nb|0),($7|0),($fmt|0),($__tm|0),($8|0))|0);
 $10 = (($__nb) + ($9)|0);
 HEAP32[$__ne>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 __ZNSt3__110__time_putD2Ev($0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($agg$result,$this,$__s,$0,$1,$__tm,$__fmt,$__mod) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $0 = $0|0;
 $1 = $1|0;
 $__tm = $__tm|0;
 $__fmt = $__fmt|0;
 $__mod = $__mod|0;
 var $$$i = 0, $$0$i$i$i$i = 0, $$01$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__nar = 0, $__nar$i = 0, $__nb$i = 0, $__ne$i = 0, $mb$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 528|0;
 $__nar$i = sp + 416|0;
 $__ne$i = sp + 412|0;
 $mb$i = sp;
 $__nb$i = sp + 408|0;
 $__nar = sp + 8|0;
 $2 = (($this) + 8|0);
 $3 = (($__nar$i) + 100|0);
 HEAP32[$__ne$i>>2] = $3;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($2,$__nar$i,$__ne$i,$__tm,$__fmt,$__mod);
 $4 = $mb$i;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 HEAP32[$__nb$i>>2] = $__nar$i;
 $8 = HEAP32[$2>>2]|0;
 $9 = (_uselocale(($8|0))|0);
 $10 = (_mbsrtowcs($__nar,$__nb$i,100,$mb$i)|0);
 $11 = ($9|0)==(0|0);
 if (!($11)) {
  (_uselocale(($9|0))|0);
 }
 $12 = ($10|0)==(-1);
 if ($12) {
  __ZNSt3__121__throw_runtime_errorEPKc(41472);
  // unreachable;
 }
 $13 = (($__nar) + ($10<<2)|0);
 $14 = HEAP32[$__s>>2]|0;
 $15 = ($10|0)==(0);
 if ($15) {
  $32 = $14;
  HEAP32[$agg$result>>2] = $32;
  STACKTOP = sp;return;
 } else {
  $$01$i$i = $__nar;$18 = $14;
 }
 while(1) {
  $16 = HEAP32[$$01$i$i>>2]|0;
  $17 = ($18|0)==(0|0);
  if ($17) {
   $33 = 0;
  } else {
   $19 = (($18) + 24|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (($18) + 28|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20|0)==($22|0);
   if ($23) {
    $24 = HEAP32[$18>>2]|0;
    $25 = (($24) + 52|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (FUNCTION_TABLE_iii[$26 & 63]($18,$16)|0);
    $$0$i$i$i$i = $27;
   } else {
    $28 = (($20) + 4|0);
    HEAP32[$19>>2] = $28;
    HEAP32[$20>>2] = $16;
    $$0$i$i$i$i = $16;
   }
   $29 = ($$0$i$i$i$i|0)==(-1);
   $$$i = $29 ? 0 : $18;
   $33 = $$$i;
  }
  $30 = (($$01$i$i) + 4|0);
  $31 = ($30|0)==($13|0);
  if ($31) {
   $32 = $33;
   break;
  } else {
   $$01$i$i = $30;$18 = $33;
  }
 }
 HEAP32[$agg$result>>2] = $32;
 STACKTOP = sp;return;
}
function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__110moneypunctIcLb0EED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 127;
}
function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0] = 2;
 $0 = (($agg$result) + 1|0);
 HEAP8[$0>>0] = 45;
 $1 = (($agg$result) + 2|0);
 HEAP8[$1>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 0;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 STACKTOP = sp;return;
}
function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__110moneypunctIcLb1EED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 127;
}
function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0] = 2;
 $0 = (($agg$result) + 1|0);
 HEAP8[$0>>0] = 45;
 $1 = (($agg$result) + 2|0);
 HEAP8[$1>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 0;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 STACKTOP = sp;return;
}
function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__110moneypunctIwLb0EED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $$012$i$i = 0, $$03$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0] = 2;
 $0 = (($agg$result) + 4|0);
 $$012$i$i = 1;$$03$i$i = $0;
 while(1) {
  $1 = (($$012$i$i) + -1)|0;
  $2 = (($$03$i$i) + 4|0);
  HEAP32[$$03$i$i>>2] = 45;
  $3 = ($1|0)==(0);
  if ($3) {
   break;
  } else {
   $$012$i$i = $1;$$03$i$i = $2;
  }
 }
 $4 = (($0) + 4|0);
 HEAP32[$4>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 0;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 STACKTOP = sp;return;
}
function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__110moneypunctIwLb1EED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 2147483647;
}
function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $$012$i$i = 0, $$03$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0] = 2;
 $0 = (($agg$result) + 4|0);
 $$012$i$i = 1;$$03$i$i = $0;
 while(1) {
  $1 = (($$012$i$i) + -1)|0;
  $2 = (($$03$i$i) + 4|0);
  HEAP32[$$03$i$i>>2] = 45;
  $3 = ($1|0)==(0);
  if ($3) {
   break;
  } else {
   $$012$i$i = $1;$$03$i$i = $2;
  }
 }
 $4 = (($0) + 4|0);
 HEAP32[$4>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 0;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 STACKTOP = sp;return;
}
function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0]=67109634&255;HEAP8[$agg$result+1>>0]=(67109634>>8)&255;HEAP8[$agg$result+2>>0]=(67109634>>16)&255;HEAP8[$agg$result+3>>0]=67109634>>24;
 STACKTOP = sp;return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$lcssa$i = 0, $$01$i = 0, $$idx = 0, $$idx$val = 0, $$idx5 = 0, $$idx5$val = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $__atoms = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$27 = 0, $__neg = 0, $__w$08 = 0;
 var $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 132|0;
 $__wb = sp + 8|0;
 $__wn = sp + 16|0;
 $__neg = sp + 130|0;
 $__atoms = sp + 120|0;
 $__nbuf = sp + 20|0;
 HEAP32[$__wb>>2] = $__wbuf;
 $0 = (($__wb) + 4|0);
 HEAP32[$0>>2] = 140;
 $1 = (($__wbuf) + 100|0);
 $2 = (($__iob) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 4|0);
 $5 = HEAP32[$4>>2]|0;HEAP32[$4>>2] = (($5+1)|0);
 $6 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx = (($3) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx5 = (($3) + 12|0);
 $$idx5$val = HEAP32[$$idx5>>2]|0;
 $7 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx5$val,$6)|0);
 HEAP8[$__neg>>0] = 0;
 $8 = HEAP32[$__e>>2]|0;
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$8,$__intl,$3,$10,$__err,$__neg,$7,$__wb,$__wn,$1)|0);
 do {
  if ($11) {
   $12 = HEAP32[$7>>2]|0;
   $13 = (($12) + 32|0);
   $14 = HEAP32[$13>>2]|0;
   (FUNCTION_TABLE_iiiii[$14 & 31]($7,40264,((40264 + 10|0)),$__atoms)|0);
   $15 = HEAP32[$__wn>>2]|0;
   $16 = HEAP32[$__wb>>2]|0;
   $17 = $15;
   $18 = $16;
   $19 = (($17) - ($18))|0;
   $20 = ($19|0)>(98);
   if ($20) {
    $21 = (($19) + 2)|0;
    $22 = (_malloc($21)|0);
    $23 = ($22|0)==(0|0);
    if ($23) {
     $24 = (___cxa_allocate_exception(4)|0);
     HEAP32[$24>>2] = ((51368 + 8|0));
     ___cxa_throw(($24|0),(51424|0),(117|0));
     // unreachable;
    } else {
     $46 = $22;$__nc$0 = $22;
    }
   } else {
    $46 = 0;$__nc$0 = $__nbuf;
   }
   $25 = HEAP8[$__neg>>0]|0;
   $26 = ($25<<24>>24)==(0);
   if ($26) {
    $__nc$1 = $__nc$0;
   } else {
    $27 = (($__nc$0) + 1|0);
    HEAP8[$__nc$0>>0] = 45;
    $__nc$1 = $27;
   }
   $28 = ($16>>>0)<($15>>>0);
   if ($28) {
    $29 = (($__atoms) + 10|0);
    $30 = $__atoms;
    $__nc$27 = $__nc$1;$__w$08 = $16;
    while(1) {
     $31 = HEAP8[$__w$08>>0]|0;
     $$01$i = $__atoms;
     while(1) {
      $34 = HEAP8[$$01$i>>0]|0;
      $35 = ($34<<24>>24)==($31<<24>>24);
      $33 = (($$01$i) + 1|0);
      if ($35) {
       $$0$lcssa$i = $$01$i;
       break;
      }
      $32 = ($33|0)==($29|0);
      if ($32) {
       $$0$lcssa$i = $29;
       break;
      } else {
       $$01$i = $33;
      }
     }
     $36 = $$0$lcssa$i;
     $37 = (($36) - ($30))|0;
     $38 = (40264 + ($37)|0);
     $39 = HEAP8[$38>>0]|0;
     HEAP8[$__nc$27>>0] = $39;
     $40 = (($__w$08) + 1|0);
     $41 = (($__nc$27) + 1|0);
     $42 = HEAP32[$__wn>>2]|0;
     $43 = ($40>>>0)<($42>>>0);
     if ($43) {
      $__nc$27 = $41;$__w$08 = $40;
     } else {
      $__nc$2$lcssa = $41;
      break;
     }
    }
   } else {
    $__nc$2$lcssa = $__nc$1;
   }
   HEAP8[$__nc$2$lcssa>>0] = 0;
   HEAP32[$vararg_buffer>>2] = $__v;
   $44 = (_sscanf($__nbuf,40280,$vararg_buffer)|0);
   $45 = ($44|0)==(1);
   if ($45) {
    _free($46);
    break;
   } else {
    __ZNSt3__121__throw_runtime_errorEPKc(40288);
    // unreachable;
   }
  }
 } while(0);
 $47 = HEAP32[$__b>>2]|0;
 $48 = ($47|0)==(0|0);
 do {
  if ($48) {
   $60 = 0;
  } else {
   $49 = (($47) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = (($47) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($50|0)==($52|0);
   if ($53) {
    $54 = HEAP32[$47>>2]|0;
    $55 = (($54) + 36|0);
    $56 = HEAP32[$55>>2]|0;
    $57 = (FUNCTION_TABLE_ii[$56 & 127]($47)|0);
    $58 = ($57|0)==(-1);
    if ($58) {
     HEAP32[$__b>>2] = 0;
     $60 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $60 = $$pre$i$i$i;
     break;
    }
   } else {
    $60 = $47;
   }
  }
 } while(0);
 $59 = ($60|0)==(0|0);
 $61 = HEAP32[$__e>>2]|0;
 $62 = ($61|0)==(0|0);
 do {
  if ($62) {
   label = 26;
  } else {
   $63 = (($61) + 12|0);
   $64 = HEAP32[$63>>2]|0;
   $65 = (($61) + 16|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = ($64|0)==($66|0);
   if (!($67)) {
    if ($59) {
     break;
    } else {
     label = 28;
     break;
    }
   }
   $68 = HEAP32[$61>>2]|0;
   $69 = (($68) + 36|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = (FUNCTION_TABLE_ii[$70 & 127]($61)|0);
   $72 = ($71|0)==(-1);
   if ($72) {
    HEAP32[$__e>>2] = 0;
    label = 26;
    break;
   } else {
    if ($59) {
     break;
    } else {
     label = 28;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 26) {
  if ($59) {
   label = 28;
  }
 }
 if ((label|0) == 28) {
  $73 = HEAP32[$__err>>2]|0;
  $74 = $73 | 2;
  HEAP32[$__err>>2] = $74;
 }
 $75 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $75;
 $76 = (($3) + 4|0);
 $77 = HEAP32[$76>>2]|0;HEAP32[$76>>2] = (($77+-1)|0);
 $78 = ($77|0)==(0);
 if ($78) {
  $79 = HEAP32[$3>>2]|0;
  $80 = (($79) + 8|0);
  $81 = HEAP32[$80>>2]|0;
  FUNCTION_TABLE_vi[$81 & 255]($3);
 }
 $82 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $83 = ($82|0)==(0|0);
 if ($83) {
  STACKTOP = sp;return;
 }
 $84 = HEAP32[$0>>2]|0;
 FUNCTION_TABLE_vi[$84 & 255]($82);
 STACKTOP = sp;return;
}
function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$__e$0,$__intl,$__loc$0$0$val,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e$0 = $__e$0|0;
 $__intl = $__intl|0;
 $__loc$0$0$val = $__loc$0$0$val|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i104 = 0, $$0$i$i111 = 0, $$0$i$i120 = 0, $$0$i$i130 = 0, $$0$i$i147 = 0, $$0$i$i33 = 0, $$0$i$i36 = 0, $$0$i$i49 = 0, $$0$i$i55 = 0, $$0$i$i58 = 0, $$0$i$i65 = 0, $$0$i$i84 = 0, $$0$i$i87 = 0, $$271 = 0, $$272 = 0, $$273 = 0, $$274 = 0;
 var $$276 = 0, $$idx = 0, $$idx$val = 0, $$idx31 = 0, $$idx31$val = 0, $$idx32 = 0, $$idx32$val = 0, $$idx33 = 0, $$idx33$val = 0, $$phi$trans$insert = 0, $$phi$trans$insert10 = 0, $$phi$trans$insert14 = 0, $$phi$trans$insert17 = 0, $$phi$trans$insert19 = 0, $$phi$trans$insert22 = 0, $$phi$trans$insert26 = 0, $$phi$trans$insert29 = 0, $$phi$trans$insert33 = 0, $$phi$trans$insert7 = 0, $$pre = 0;
 var $$pre$i$i$i = 0, $$pre$i$i$i134 = 0, $$pre$i$i$i151 = 0, $$pre$i$i$i23 = 0, $$pre$i$i$i39 = 0, $$pre$i$i$i70 = 0, $$pre$i$i$i94 = 0, $$pre$i2$i$i = 0, $$pre$i2$i$i138 = 0, $$pre$i2$i$i155 = 0, $$pre$i2$i$i155249 = 0, $$pre$i2$i$i155250 = 0, $$pre$i2$i$i261$ph = 0, $$pre$i2$i$i261269 = 0, $$pre$i2$i$i43 = 0, $$pre$i2$i$i43240 = 0, $$pre$i2$i$i43242 = 0, $$pre$i2$i$i74 = 0, $$pre$i2$i$i74255$ph = 0, $$pre$i2$i$i74255266 = 0;
 var $$pre$i2$i$i98 = 0, $$pre11 = 0, $$pre13 = 0, $$pre15 = 0, $$pre16 = 0, $$pre18 = 0, $$pre20 = 0, $$pre21 = 0, $$pre23 = 0, $$pre245 = 0, $$pre247 = 0, $$pre248 = 0, $$pre25 = 0, $$pre253 = 0, $$pre257 = 0, $$pre259 = 0, $$pre27 = 0, $$pre28 = 0, $$pre3 = 0, $$pre30 = 0;
 var $$pre32 = 0, $$pre34 = 0, $$pre4 = 0, $$pre6 = 0, $$pre8 = 0, $$pre9 = 0, $$sum = 0, $$sum262 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0;
 var $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0;
 var $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0;
 var $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0;
 var $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0;
 var $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0;
 var $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0;
 var $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0;
 var $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0;
 var $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0;
 var $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0;
 var $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0;
 var $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0;
 var $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0;
 var $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0;
 var $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0;
 var $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0;
 var $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0;
 var $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0;
 var $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0;
 var $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0;
 var $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0;
 var $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0;
 var $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0;
 var $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0;
 var $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0;
 var $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0;
 var $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0;
 var $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0;
 var $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0;
 var $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0;
 var $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0;
 var $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0;
 var $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0;
 var $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__dp$0 = 0, $__e$sroa$0$0 = 0, $__e$sroa$0$10 = 0, $__e$sroa$0$11 = 0, $__e$sroa$0$12 = 0, $__e$sroa$0$13 = 0, $__e$sroa$0$14 = 0, $__e$sroa$0$15 = 0, $__e$sroa$0$16 = 0, $__e$sroa$0$17 = 0, $__e$sroa$0$18 = 0, $__e$sroa$0$19 = 0, $__e$sroa$0$2 = 0, $__e$sroa$0$20 = 0, $__e$sroa$0$3 = 0, $__e$sroa$0$4 = 0, $__e$sroa$0$5 = 0, $__e$sroa$0$6 = 0, $__e$sroa$0$7 = 0;
 var $__e$sroa$0$8 = 0, $__e$sroa$0$9 = 0, $__et = 0, $__fd$0 = 0, $__fd$1 = 0, $__fd$2 = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$1 = 0, $__nsn = 0, $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$010 = 0, $__p$0232 = 0, $__pat = 0, $__psn = 0;
 var $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$09 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0234 = 0, $__trailing_sign$1 = 0, $__ts$0 = 0, $brmerge = 0, $cond = 0, $isascii1$i = 0, $isascii1$i128 = 0, $isascii1$i161 = 0, $isascii1$i52 = 0, $isascii1$i63 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond6 = 0, $or$cond8 = 0, $sext = 0;
 var $sext199 = 0, $sext200 = 0, $sext201 = 0, $storemerge$i = 0, $switch = 0, $tmp$i$i = 0, $tmp$i$i140 = 0, $tmp$i$i157 = 0, $tmp$i$i45 = 0, $tmp$i$i76 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0;
 $0 = sp + 76|0;
 $1 = sp + 112|0;
 $2 = sp;
 $3 = sp + 176|0;
 $4 = sp + 64|0;
 $5 = sp + 24|0;
 $6 = sp + 28|0;
 $7 = sp + 124|0;
 $8 = sp + 148|0;
 $9 = sp + 164|0;
 $10 = sp + 188|0;
 $__gbuf = sp + 192|0;
 $__gb = sp + 80|0;
 $__gn = sp + 88|0;
 $__ge = sp + 104|0;
 $__pat = sp + 108|0;
 $__grp = sp + 92|0;
 $__sym = sp + 40|0;
 $__psn = sp + 136|0;
 $__nsn = sp + 12|0;
 $__spaces = sp + 52|0;
 $__et = sp + 160|0;
 HEAP32[$10>>2] = $__we;
 HEAP32[$__gb>>2] = $__gbuf;
 $11 = (($__gb) + 4|0);
 HEAP32[$11>>2] = 140;
 HEAP32[$__gn>>2] = $__gbuf;
 $12 = (($__gbuf) + 400|0);
 HEAP32[$__ge>>2] = $12;
 HEAP32[$__pat>>2] = 0;
 ;HEAP32[$__grp+0>>2]=0|0;HEAP32[$__grp+4>>2]=0|0;HEAP32[$__grp+8>>2]=0|0;
 ;HEAP32[$__sym+0>>2]=0|0;HEAP32[$__sym+4>>2]=0|0;HEAP32[$__sym+8>>2]=0|0;
 ;HEAP32[$__psn+0>>2]=0|0;HEAP32[$__psn+4>>2]=0|0;HEAP32[$__psn+8>>2]=0|0;
 ;HEAP32[$__nsn+0>>2]=0|0;HEAP32[$__nsn+4>>2]=0|0;HEAP32[$__nsn+8>>2]=0|0;
 ;HEAP32[$__spaces+0>>2]=0|0;HEAP32[$__spaces+4>>2]=0|0;HEAP32[$__spaces+8>>2]=0|0;
 if ($__intl) {
  $13 = (__ZNSt3__16locale2id5__getEv(40088)|0);
  $$idx32 = (($__loc$0$0$val) + 8|0);
  $$idx32$val = HEAP32[$$idx32>>2]|0;
  $$idx33 = (($__loc$0$0$val) + 12|0);
  $$idx33$val = HEAP32[$$idx33>>2]|0;
  $14 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx32$val,$$idx33$val,$13)|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($15) + 44|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 63]($0,$14);
  $18 = HEAP32[$0>>2]|0;
  HEAP32[$__pat>>2] = $18;
  $19 = HEAP32[$14>>2]|0;
  $20 = (($19) + 32|0);
  $21 = HEAP32[$20>>2]|0;
  FUNCTION_TABLE_vii[$21 & 63]($1,$14);
  $22 = HEAP8[$__nsn>>0]|0;
  $23 = $22 & 1;
  $24 = ($23<<24>>24)==(0);
  if ($24) {
   $28 = (($__nsn) + 1|0);
   HEAP8[$28>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $25 = (($__nsn) + 8|0);
   $26 = HEAP32[$25>>2]|0;
   HEAP8[$26>>0] = 0;
   $27 = (($__nsn) + 4|0);
   HEAP32[$27>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn);
  ;HEAP32[$__nsn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
  $$pre3 = HEAP32[$14>>2]|0;
  $$phi$trans$insert = (($$pre3) + 28|0);
  $$pre4 = HEAP32[$$phi$trans$insert>>2]|0;
  FUNCTION_TABLE_vii[$$pre4 & 63]($2,$14);
  $29 = HEAP8[$__psn>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $35 = (($__psn) + 1|0);
   HEAP8[$35>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $32 = (($__psn) + 8|0);
   $33 = HEAP32[$32>>2]|0;
   HEAP8[$33>>0] = 0;
   $34 = (($__psn) + 4|0);
   HEAP32[$34>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn);
  ;HEAP32[$__psn+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
  $$pre6 = HEAP32[$14>>2]|0;
  $$phi$trans$insert7 = (($$pre6) + 12|0);
  $$pre8 = HEAP32[$$phi$trans$insert7>>2]|0;
  $36 = (FUNCTION_TABLE_ii[$$pre8 & 127]($14)|0);
  $37 = HEAP32[$14>>2]|0;
  $38 = (($37) + 16|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_ii[$39 & 127]($14)|0);
  $41 = HEAP32[$14>>2]|0;
  $42 = (($41) + 20|0);
  $43 = HEAP32[$42>>2]|0;
  FUNCTION_TABLE_vii[$43 & 63]($3,$14);
  $44 = HEAP8[$__grp>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  if ($46) {
   $50 = (($__grp) + 1|0);
   HEAP8[$50>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $47 = (($__grp) + 8|0);
   $48 = HEAP32[$47>>2]|0;
   HEAP8[$48>>0] = 0;
   $49 = (($__grp) + 4|0);
   HEAP32[$49>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
  ;HEAP32[$__grp+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
  $$pre9 = HEAP32[$14>>2]|0;
  $$phi$trans$insert10 = (($$pre9) + 24|0);
  $$pre11 = HEAP32[$$phi$trans$insert10>>2]|0;
  FUNCTION_TABLE_vii[$$pre11 & 63]($4,$14);
  $51 = HEAP8[$__sym>>0]|0;
  $52 = $51 & 1;
  $53 = ($52<<24>>24)==(0);
  if ($53) {
   $57 = (($__sym) + 1|0);
   HEAP8[$57>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $54 = (($__sym) + 8|0);
   $55 = HEAP32[$54>>2]|0;
   HEAP8[$55>>0] = 0;
   $56 = (($__sym) + 4|0);
   HEAP32[$56>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym);
  ;HEAP32[$__sym+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  ;HEAP32[$4+0>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
  $$pre13 = HEAP32[$14>>2]|0;
  $$phi$trans$insert14 = (($$pre13) + 36|0);
  $$pre15 = HEAP32[$$phi$trans$insert14>>2]|0;
  $58 = (FUNCTION_TABLE_ii[$$pre15 & 127]($14)|0);
  $__dp$0 = $36;$__ts$0 = $40;$storemerge$i = $58;
 } else {
  $59 = (__ZNSt3__16locale2id5__getEv(40024)|0);
  $$idx = (($__loc$0$0$val) + 8|0);
  $$idx$val = HEAP32[$$idx>>2]|0;
  $$idx31 = (($__loc$0$0$val) + 12|0);
  $$idx31$val = HEAP32[$$idx31>>2]|0;
  $60 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx31$val,$59)|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = (($61) + 44|0);
  $63 = HEAP32[$62>>2]|0;
  FUNCTION_TABLE_vii[$63 & 63]($5,$60);
  $64 = HEAP32[$5>>2]|0;
  HEAP32[$__pat>>2] = $64;
  $65 = HEAP32[$60>>2]|0;
  $66 = (($65) + 32|0);
  $67 = HEAP32[$66>>2]|0;
  FUNCTION_TABLE_vii[$67 & 63]($6,$60);
  $68 = HEAP8[$__nsn>>0]|0;
  $69 = $68 & 1;
  $70 = ($69<<24>>24)==(0);
  if ($70) {
   $74 = (($__nsn) + 1|0);
   HEAP8[$74>>0] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $71 = (($__nsn) + 8|0);
   $72 = HEAP32[$71>>2]|0;
   HEAP8[$72>>0] = 0;
   $73 = (($__nsn) + 4|0);
   HEAP32[$73>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__nsn);
  ;HEAP32[$__nsn+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  ;HEAP32[$6+0>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;
  $$pre21 = HEAP32[$60>>2]|0;
  $$phi$trans$insert22 = (($$pre21) + 28|0);
  $$pre23 = HEAP32[$$phi$trans$insert22>>2]|0;
  FUNCTION_TABLE_vii[$$pre23 & 63]($7,$60);
  $75 = HEAP8[$__psn>>0]|0;
  $76 = $75 & 1;
  $77 = ($76<<24>>24)==(0);
  if ($77) {
   $81 = (($__psn) + 1|0);
   HEAP8[$81>>0] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $78 = (($__psn) + 8|0);
   $79 = HEAP32[$78>>2]|0;
   HEAP8[$79>>0] = 0;
   $80 = (($__psn) + 4|0);
   HEAP32[$80>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__psn);
  ;HEAP32[$__psn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  ;HEAP32[$7+0>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;
  $$pre25 = HEAP32[$60>>2]|0;
  $$phi$trans$insert26 = (($$pre25) + 12|0);
  $$pre27 = HEAP32[$$phi$trans$insert26>>2]|0;
  $82 = (FUNCTION_TABLE_ii[$$pre27 & 127]($60)|0);
  $83 = HEAP32[$60>>2]|0;
  $84 = (($83) + 16|0);
  $85 = HEAP32[$84>>2]|0;
  $86 = (FUNCTION_TABLE_ii[$85 & 127]($60)|0);
  $87 = HEAP32[$60>>2]|0;
  $88 = (($87) + 20|0);
  $89 = HEAP32[$88>>2]|0;
  FUNCTION_TABLE_vii[$89 & 63]($8,$60);
  $90 = HEAP8[$__grp>>0]|0;
  $91 = $90 & 1;
  $92 = ($91<<24>>24)==(0);
  if ($92) {
   $96 = (($__grp) + 1|0);
   HEAP8[$96>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $93 = (($__grp) + 8|0);
   $94 = HEAP32[$93>>2]|0;
   HEAP8[$94>>0] = 0;
   $95 = (($__grp) + 4|0);
   HEAP32[$95>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
  ;HEAP32[$__grp+0>>2]=HEAP32[$8+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  ;HEAP32[$8+0>>2]=0|0;HEAP32[$8+4>>2]=0|0;HEAP32[$8+8>>2]=0|0;
  $$pre28 = HEAP32[$60>>2]|0;
  $$phi$trans$insert29 = (($$pre28) + 24|0);
  $$pre30 = HEAP32[$$phi$trans$insert29>>2]|0;
  FUNCTION_TABLE_vii[$$pre30 & 63]($9,$60);
  $97 = HEAP8[$__sym>>0]|0;
  $98 = $97 & 1;
  $99 = ($98<<24>>24)==(0);
  if ($99) {
   $103 = (($__sym) + 1|0);
   HEAP8[$103>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $100 = (($__sym) + 8|0);
   $101 = HEAP32[$100>>2]|0;
   HEAP8[$101>>0] = 0;
   $102 = (($__sym) + 4|0);
   HEAP32[$102>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym);
  ;HEAP32[$__sym+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  ;HEAP32[$9+0>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
  $$pre32 = HEAP32[$60>>2]|0;
  $$phi$trans$insert33 = (($$pre32) + 36|0);
  $$pre34 = HEAP32[$$phi$trans$insert33>>2]|0;
  $104 = (FUNCTION_TABLE_ii[$$pre34 & 127]($60)|0);
  $__dp$0 = $82;$__ts$0 = $86;$storemerge$i = $104;
 }
 $105 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wn>>2] = $105;
 $106 = (($__ct) + 8|0);
 $107 = (($__nsn) + 1|0);
 $108 = (($__nsn) + 4|0);
 $109 = (($__nsn) + 8|0);
 $110 = (($__psn) + 1|0);
 $111 = (($__psn) + 4|0);
 $112 = (($__psn) + 8|0);
 $113 = $__flags & 512;
 $114 = ($113|0)!=(0);
 $115 = (($__sym) + 1|0);
 $116 = (($__sym) + 8|0);
 $117 = (($__sym) + 4|0);
 $118 = (($__spaces) + 1|0);
 $119 = (($__spaces) + 8|0);
 $120 = (($__spaces) + 4|0);
 $121 = (($__pat) + 3|0);
 $122 = (($__grp) + 4|0);
 $877 = $__gbuf;$__e$sroa$0$0 = $__e$0;$__fd$0 = $storemerge$i;$__p$0232 = 0;$__trailing_sign$0234 = 0;
 L37: while(1) {
  $123 = HEAP32[$__b>>2]|0;
  $124 = ($123|0)==(0|0);
  do {
   if ($124) {
    $136 = 0;
   } else {
    $125 = (($123) + 12|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = (($123) + 16|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = ($126|0)==($128|0);
    if ($129) {
     $130 = HEAP32[$123>>2]|0;
     $131 = (($130) + 36|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = (FUNCTION_TABLE_ii[$132 & 127]($123)|0);
     $134 = ($133|0)==(-1);
     if ($134) {
      HEAP32[$__b>>2] = 0;
      $136 = 0;
      break;
     } else {
      $$pre$i$i$i23 = HEAP32[$__b>>2]|0;
      $136 = $$pre$i$i$i23;
      break;
     }
    } else {
     $136 = $123;
    }
   }
  } while(0);
  $135 = ($136|0)==(0|0);
  $137 = ($__e$sroa$0$0|0)==(0|0);
  do {
   if ($137) {
    label = 38;
   } else {
    $138 = (($__e$sroa$0$0) + 12|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = (($__e$sroa$0$0) + 16|0);
    $141 = HEAP32[$140>>2]|0;
    $142 = ($139|0)==($141|0);
    if (!($142)) {
     if ($135) {
      $__e$sroa$0$2 = $__e$sroa$0$0;
      break;
     } else {
      $848 = $877;$878 = $__e$sroa$0$0;$__trailing_sign$0$lcssa = $__trailing_sign$0234;
      label = 269;
      break L37;
     }
    }
    $143 = HEAP32[$__e$sroa$0$0>>2]|0;
    $144 = (($143) + 36|0);
    $145 = HEAP32[$144>>2]|0;
    $146 = (FUNCTION_TABLE_ii[$145 & 127]($__e$sroa$0$0)|0);
    $147 = ($146|0)==(-1);
    if ($147) {
     label = 38;
    } else {
     if ($135) {
      $__e$sroa$0$2 = $__e$sroa$0$0;
     } else {
      $848 = $877;$878 = $__e$sroa$0$0;$__trailing_sign$0$lcssa = $__trailing_sign$0234;
      label = 269;
      break L37;
     }
    }
   }
  } while(0);
  if ((label|0) == 38) {
   label = 0;
   if ($135) {
    $848 = $877;$878 = 0;$__trailing_sign$0$lcssa = $__trailing_sign$0234;
    label = 269;
    break;
   } else {
    $__e$sroa$0$2 = 0;
   }
  }
  $148 = (($__pat) + ($__p$0232)|0);
  $149 = HEAP8[$148>>0]|0;
  $150 = $149 << 24 >> 24;
  L55: do {
   switch ($150|0) {
   case 1:  {
    $cond = ($__p$0232|0)==(3);
    if ($cond) {
     $848 = $877;$878 = $__e$sroa$0$2;$__trailing_sign$0$lcssa = $__trailing_sign$0234;
     label = 269;
     break L37;
    }
    $151 = HEAP32[$__b>>2]|0;
    $152 = (($151) + 12|0);
    $153 = HEAP32[$152>>2]|0;
    $154 = (($151) + 16|0);
    $155 = HEAP32[$154>>2]|0;
    $156 = ($153|0)==($155|0);
    if ($156) {
     $157 = HEAP32[$151>>2]|0;
     $158 = (($157) + 36|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = (FUNCTION_TABLE_ii[$159 & 127]($151)|0);
     $$0$i$i33 = $160;
    } else {
     $161 = HEAP8[$153>>0]|0;
     $162 = $161&255;
     $$0$i$i33 = $162;
    }
    $163 = $$0$i$i33&255;
    $isascii1$i = ($163<<24>>24)>(-1);
    if (!($isascii1$i)) {
     label = 51;
     break L37;
    }
    $sext201 = $$0$i$i33 << 24;
    $164 = $sext201 >> 24;
    $165 = HEAP32[$106>>2]|0;
    $166 = (($165) + ($164<<1)|0);
    $167 = HEAP16[$166>>1]|0;
    $168 = $167 & 8192;
    $169 = ($168<<16>>16)==(0);
    if ($169) {
     label = 51;
     break L37;
    }
    $170 = HEAP32[$__b>>2]|0;
    $171 = (($170) + 12|0);
    $172 = HEAP32[$171>>2]|0;
    $173 = (($170) + 16|0);
    $174 = HEAP32[$173>>2]|0;
    $175 = ($172|0)==($174|0);
    if ($175) {
     $176 = HEAP32[$170>>2]|0;
     $177 = (($176) + 40|0);
     $178 = HEAP32[$177>>2]|0;
     $179 = (FUNCTION_TABLE_ii[$178 & 127]($170)|0);
     $$0$i$i36 = $179;
    } else {
     $180 = (($172) + 1|0);
     HEAP32[$171>>2] = $180;
     $181 = HEAP8[$172>>0]|0;
     $182 = $181&255;
     $$0$i$i36 = $182;
    }
    $183 = $$0$i$i36&255;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces,$183);
    label = 52;
    break;
   }
   case 0:  {
    label = 52;
    break;
   }
   case 3:  {
    $247 = HEAP8[$__psn>>0]|0;
    $248 = $247 & 1;
    $249 = ($248<<24>>24)==(0);
    if ($249) {
     $251 = $247&255;
     $252 = $251 >>> 1;
     $262 = $252;
    } else {
     $250 = HEAP32[$111>>2]|0;
     $262 = $250;
    }
    $253 = HEAP8[$__nsn>>0]|0;
    $254 = $253 & 1;
    $255 = ($254<<24>>24)==(0);
    if ($255) {
     $257 = $253&255;
     $258 = $257 >>> 1;
     $260 = $258;
    } else {
     $256 = HEAP32[$108>>2]|0;
     $260 = $256;
    }
    $259 = (0 - ($260))|0;
    $261 = ($262|0)==($259|0);
    if ($261) {
     $879 = $__e$sroa$0$2;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0234;
    } else {
     if ($249) {
      $264 = $247&255;
      $265 = $264 >>> 1;
      $267 = $265;
     } else {
      $263 = HEAP32[$111>>2]|0;
      $267 = $263;
     }
     $266 = ($267|0)==(0);
     if (!($266)) {
      if ($255) {
       $269 = $253&255;
       $270 = $269 >>> 1;
       $272 = $270;
      } else {
       $268 = HEAP32[$108>>2]|0;
       $272 = $268;
      }
      $271 = ($272|0)==(0);
      if (!($271)) {
       $346 = HEAP32[$__b>>2]|0;
       $347 = (($346) + 12|0);
       $348 = HEAP32[$347>>2]|0;
       $349 = (($346) + 16|0);
       $350 = HEAP32[$349>>2]|0;
       $351 = ($348|0)==($350|0);
       if ($351) {
        $352 = HEAP32[$346>>2]|0;
        $353 = (($352) + 36|0);
        $354 = HEAP32[$353>>2]|0;
        $355 = (FUNCTION_TABLE_ii[$354 & 127]($346)|0);
        $$pre247 = HEAP8[$__psn>>0]|0;
        $$pre16 = HEAP32[$__b>>2]|0;
        $$phi$trans$insert17 = (($$pre16) + 12|0);
        $$pre18 = HEAP32[$$phi$trans$insert17>>2]|0;
        $$phi$trans$insert19 = (($$pre16) + 16|0);
        $$pre20 = HEAP32[$$phi$trans$insert19>>2]|0;
        $$0$i$i111 = $355;$360 = $$pre247;$366 = $$pre16;$368 = $$pre18;$369 = $$pre20;
       } else {
        $356 = HEAP8[$348>>0]|0;
        $357 = $356&255;
        $$0$i$i111 = $357;$360 = $247;$366 = $346;$368 = $348;$369 = $350;
       }
       $358 = $$0$i$i111&255;
       $359 = $360 & 1;
       $361 = ($359<<24>>24)==(0);
       $362 = HEAP32[$112>>2]|0;
       $$272 = $361 ? $110 : $362;
       $363 = HEAP8[$$272>>0]|0;
       $364 = ($358<<24>>24)==($363<<24>>24);
       $365 = (($366) + 12|0);
       $367 = ($368|0)==($369|0);
       if ($364) {
        if ($367) {
         $370 = HEAP32[$366>>2]|0;
         $371 = (($370) + 40|0);
         $372 = HEAP32[$371>>2]|0;
         (FUNCTION_TABLE_ii[$372 & 127]($366)|0);
        } else {
         $373 = (($368) + 1|0);
         HEAP32[$365>>2] = $373;
        }
        $374 = HEAP8[$__psn>>0]|0;
        $375 = $374 & 1;
        $376 = ($375<<24>>24)==(0);
        if ($376) {
         $378 = $374&255;
         $379 = $378 >>> 1;
         $381 = $379;
        } else {
         $377 = HEAP32[$111>>2]|0;
         $381 = $377;
        }
        $380 = ($381>>>0)>(1);
        $__psn$__trailing_sign$09 = $380 ? $__psn : $__trailing_sign$0234;
        $879 = $__e$sroa$0$2;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__psn$__trailing_sign$09;
        break L55;
       }
       if ($367) {
        $382 = HEAP32[$366>>2]|0;
        $383 = (($382) + 36|0);
        $384 = HEAP32[$383>>2]|0;
        $385 = (FUNCTION_TABLE_ii[$384 & 127]($366)|0);
        $$0$i$i120 = $385;
       } else {
        $386 = HEAP8[$368>>0]|0;
        $387 = $386&255;
        $$0$i$i120 = $387;
       }
       $388 = $$0$i$i120&255;
       $389 = HEAP8[$__nsn>>0]|0;
       $390 = $389 & 1;
       $391 = ($390<<24>>24)==(0);
       $392 = HEAP32[$109>>2]|0;
       $$273 = $391 ? $107 : $392;
       $393 = HEAP8[$$273>>0]|0;
       $394 = ($388<<24>>24)==($393<<24>>24);
       if (!($394)) {
        label = 137;
        break L37;
       }
       $395 = HEAP32[$__b>>2]|0;
       $396 = (($395) + 12|0);
       $397 = HEAP32[$396>>2]|0;
       $398 = (($395) + 16|0);
       $399 = HEAP32[$398>>2]|0;
       $400 = ($397|0)==($399|0);
       if ($400) {
        $401 = HEAP32[$395>>2]|0;
        $402 = (($401) + 40|0);
        $403 = HEAP32[$402>>2]|0;
        (FUNCTION_TABLE_ii[$403 & 127]($395)|0);
       } else {
        $404 = (($397) + 1|0);
        HEAP32[$396>>2] = $404;
       }
       HEAP8[$__neg>>0] = 1;
       $405 = HEAP8[$__nsn>>0]|0;
       $406 = $405 & 1;
       $407 = ($406<<24>>24)==(0);
       if ($407) {
        $409 = $405&255;
        $410 = $409 >>> 1;
        $412 = $410;
       } else {
        $408 = HEAP32[$108>>2]|0;
        $412 = $408;
       }
       $411 = ($412>>>0)>(1);
       $__nsn$__trailing_sign$010 = $411 ? $__nsn : $__trailing_sign$0234;
       $879 = $__e$sroa$0$2;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__nsn$__trailing_sign$010;
       break L55;
      }
     }
     if ($249) {
      $274 = $247&255;
      $275 = $274 >>> 1;
      $277 = $275;
     } else {
      $273 = HEAP32[$111>>2]|0;
      $277 = $273;
     }
     $276 = ($277|0)==(0);
     $278 = HEAP32[$__b>>2]|0;
     $279 = (($278) + 12|0);
     $280 = HEAP32[$279>>2]|0;
     $281 = (($278) + 16|0);
     $282 = HEAP32[$281>>2]|0;
     $283 = ($280|0)==($282|0);
     if ($276) {
      if ($283) {
       $315 = HEAP32[$278>>2]|0;
       $316 = (($315) + 36|0);
       $317 = HEAP32[$316>>2]|0;
       $318 = (FUNCTION_TABLE_ii[$317 & 127]($278)|0);
       $$pre = HEAP8[$__nsn>>0]|0;
       $$0$i$i104 = $318;$323 = $$pre;
      } else {
       $319 = HEAP8[$280>>0]|0;
       $320 = $319&255;
       $$0$i$i104 = $320;$323 = $253;
      }
      $321 = $$0$i$i104&255;
      $322 = $323 & 1;
      $324 = ($322<<24>>24)==(0);
      $325 = HEAP32[$109>>2]|0;
      $$271 = $324 ? $107 : $325;
      $326 = HEAP8[$$271>>0]|0;
      $327 = ($321<<24>>24)==($326<<24>>24);
      if (!($327)) {
       $879 = $__e$sroa$0$2;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0234;
       break L55;
      }
      $328 = HEAP32[$__b>>2]|0;
      $329 = (($328) + 12|0);
      $330 = HEAP32[$329>>2]|0;
      $331 = (($328) + 16|0);
      $332 = HEAP32[$331>>2]|0;
      $333 = ($330|0)==($332|0);
      if ($333) {
       $334 = HEAP32[$328>>2]|0;
       $335 = (($334) + 40|0);
       $336 = HEAP32[$335>>2]|0;
       (FUNCTION_TABLE_ii[$336 & 127]($328)|0);
      } else {
       $337 = (($330) + 1|0);
       HEAP32[$329>>2] = $337;
      }
      HEAP8[$__neg>>0] = 1;
      $338 = HEAP8[$__nsn>>0]|0;
      $339 = $338 & 1;
      $340 = ($339<<24>>24)==(0);
      if ($340) {
       $342 = $338&255;
       $343 = $342 >>> 1;
       $345 = $343;
      } else {
       $341 = HEAP32[$108>>2]|0;
       $345 = $341;
      }
      $344 = ($345>>>0)>(1);
      $__nsn$__trailing_sign$0 = $344 ? $__nsn : $__trailing_sign$0234;
      $879 = $__e$sroa$0$2;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
      break L55;
     }
     if ($283) {
      $284 = HEAP32[$278>>2]|0;
      $285 = (($284) + 36|0);
      $286 = HEAP32[$285>>2]|0;
      $287 = (FUNCTION_TABLE_ii[$286 & 127]($278)|0);
      $$pre245 = HEAP8[$__psn>>0]|0;
      $$0$i$i84 = $287;$292 = $$pre245;
     } else {
      $288 = HEAP8[$280>>0]|0;
      $289 = $288&255;
      $$0$i$i84 = $289;$292 = $247;
     }
     $290 = $$0$i$i84&255;
     $291 = $292 & 1;
     $293 = ($291<<24>>24)==(0);
     $294 = HEAP32[$112>>2]|0;
     $$ = $293 ? $110 : $294;
     $295 = HEAP8[$$>>0]|0;
     $296 = ($290<<24>>24)==($295<<24>>24);
     if (!($296)) {
      HEAP8[$__neg>>0] = 1;
      $879 = $__e$sroa$0$2;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0234;
      break L55;
     }
     $297 = HEAP32[$__b>>2]|0;
     $298 = (($297) + 12|0);
     $299 = HEAP32[$298>>2]|0;
     $300 = (($297) + 16|0);
     $301 = HEAP32[$300>>2]|0;
     $302 = ($299|0)==($301|0);
     if ($302) {
      $303 = HEAP32[$297>>2]|0;
      $304 = (($303) + 40|0);
      $305 = HEAP32[$304>>2]|0;
      (FUNCTION_TABLE_ii[$305 & 127]($297)|0);
     } else {
      $306 = (($299) + 1|0);
      HEAP32[$298>>2] = $306;
     }
     $307 = HEAP8[$__psn>>0]|0;
     $308 = $307 & 1;
     $309 = ($308<<24>>24)==(0);
     if ($309) {
      $311 = $307&255;
      $312 = $311 >>> 1;
      $314 = $312;
     } else {
      $310 = HEAP32[$111>>2]|0;
      $314 = $310;
     }
     $313 = ($314>>>0)>(1);
     $__psn$__trailing_sign$0 = $313 ? $__psn : $__trailing_sign$0234;
     $879 = $__e$sroa$0$2;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__psn$__trailing_sign$0;
    }
    break;
   }
   case 4:  {
    $$pre$i2$i$i138 = $__e$sroa$0$2;$566 = $__e$sroa$0$2;$615 = $877;$__e$sroa$0$10 = $__e$sroa$0$2;$__ng$0 = 0;
    L153: while(1) {
     $551 = HEAP32[$__b>>2]|0;
     $552 = ($551|0)==(0|0);
     do {
      if ($552) {
       $564 = 0;
      } else {
       $553 = (($551) + 12|0);
       $554 = HEAP32[$553>>2]|0;
       $555 = (($551) + 16|0);
       $556 = HEAP32[$555>>2]|0;
       $557 = ($554|0)==($556|0);
       if ($557) {
        $558 = HEAP32[$551>>2]|0;
        $559 = (($558) + 36|0);
        $560 = HEAP32[$559>>2]|0;
        $561 = (FUNCTION_TABLE_ii[$560 & 127]($551)|0);
        $562 = ($561|0)==(-1);
        if ($562) {
         HEAP32[$__b>>2] = 0;
         $564 = 0;
         break;
        } else {
         $$pre$i$i$i134 = HEAP32[$__b>>2]|0;
         $564 = $$pre$i$i$i134;
         break;
        }
       } else {
        $564 = $551;
       }
      }
     } while(0);
     $563 = ($564|0)==(0|0);
     $565 = ($566|0)==(0|0);
     do {
      if ($565) {
       $884 = $$pre$i2$i$i138;$__e$sroa$0$11 = $__e$sroa$0$10;
       label = 196;
      } else {
       $567 = (($566) + 12|0);
       $568 = HEAP32[$567>>2]|0;
       $569 = (($566) + 16|0);
       $570 = HEAP32[$569>>2]|0;
       $571 = ($568|0)==($570|0);
       if (!($571)) {
        if ($563) {
         $885 = $$pre$i2$i$i138;$886 = $566;$__e$sroa$0$12 = $__e$sroa$0$10;
         break;
        } else {
         $$pre$i2$i$i98 = $$pre$i2$i$i138;$__e$sroa$0$13 = $__e$sroa$0$10;
         break L153;
        }
       }
       $572 = HEAP32[$566>>2]|0;
       $573 = (($572) + 36|0);
       $574 = HEAP32[$573>>2]|0;
       $575 = (FUNCTION_TABLE_ii[$574 & 127]($566)|0);
       $576 = ($575|0)==(-1);
       if ($576) {
        $884 = 0;$__e$sroa$0$11 = 0;
        label = 196;
       } else {
        $577 = ($$pre$i2$i$i138|0)==(0|0);
        $tmp$i$i140 = $563 ^ $577;
        if ($tmp$i$i140) {
         $885 = $$pre$i2$i$i138;$886 = $$pre$i2$i$i138;$__e$sroa$0$12 = $__e$sroa$0$10;
        } else {
         $$pre$i2$i$i98 = $$pre$i2$i$i138;$__e$sroa$0$13 = $__e$sroa$0$10;
         break L153;
        }
       }
      }
     } while(0);
     if ((label|0) == 196) {
      label = 0;
      if ($563) {
       $$pre$i2$i$i98 = $884;$__e$sroa$0$13 = $__e$sroa$0$11;
       break;
      } else {
       $885 = $884;$886 = 0;$__e$sroa$0$12 = $__e$sroa$0$11;
      }
     }
     $578 = HEAP32[$__b>>2]|0;
     $579 = (($578) + 12|0);
     $580 = HEAP32[$579>>2]|0;
     $581 = (($578) + 16|0);
     $582 = HEAP32[$581>>2]|0;
     $583 = ($580|0)==($582|0);
     if ($583) {
      $584 = HEAP32[$578>>2]|0;
      $585 = (($584) + 36|0);
      $586 = HEAP32[$585>>2]|0;
      $587 = (FUNCTION_TABLE_ii[$586 & 127]($578)|0);
      $$0$i$i130 = $587;
     } else {
      $588 = HEAP8[$580>>0]|0;
      $589 = $588&255;
      $$0$i$i130 = $589;
     }
     $590 = $$0$i$i130&255;
     $isascii1$i128 = ($590<<24>>24)>(-1);
     if ($isascii1$i128) {
      $sext199 = $$0$i$i130 << 24;
      $591 = $sext199 >> 24;
      $592 = HEAP32[$106>>2]|0;
      $593 = (($592) + ($591<<1)|0);
      $594 = HEAP16[$593>>1]|0;
      $595 = $594 & 2048;
      $596 = ($595<<16>>16)==(0);
      if ($596) {
       label = 206;
      } else {
       $597 = HEAP32[$__wn>>2]|0;
       $598 = HEAP32[$10>>2]|0;
       $599 = ($597|0)==($598|0);
       if ($599) {
        __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$10);
        $$pre257 = HEAP32[$__wn>>2]|0;
        $601 = $$pre257;
       } else {
        $601 = $597;
       }
       $600 = (($601) + 1|0);
       HEAP32[$__wn>>2] = $600;
       HEAP8[$601>>0] = $590;
       $602 = (($__ng$0) + 1)|0;
       $887 = $615;$__ng$1 = $602;
      }
     } else {
      label = 206;
     }
     if ((label|0) == 206) {
      label = 0;
      $603 = HEAP8[$__grp>>0]|0;
      $604 = $603 & 1;
      $605 = ($604<<24>>24)==(0);
      if ($605) {
       $607 = $603&255;
       $608 = $607 >>> 1;
       $610 = $608;
      } else {
       $606 = HEAP32[$122>>2]|0;
       $610 = $606;
      }
      $609 = ($610|0)!=(0);
      $611 = ($__ng$0|0)!=(0);
      $or$cond6 = $609 & $611;
      $612 = ($590<<24>>24)==($__ts$0<<24>>24);
      $or$cond12 = $or$cond6 & $612;
      if (!($or$cond12)) {
       $$pre$i2$i$i98 = $885;$__e$sroa$0$13 = $__e$sroa$0$12;
       break;
      }
      $613 = HEAP32[$__ge>>2]|0;
      $614 = ($615|0)==($613|0);
      if ($614) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
       $$pre259 = HEAP32[$__gn>>2]|0;
       $617 = $$pre259;
      } else {
       $617 = $615;
      }
      $616 = (($617) + 4|0);
      HEAP32[$__gn>>2] = $616;
      HEAP32[$617>>2] = $__ng$0;
      $887 = $616;$__ng$1 = 0;
     }
     $618 = HEAP32[$__b>>2]|0;
     $619 = (($618) + 12|0);
     $620 = HEAP32[$619>>2]|0;
     $621 = (($618) + 16|0);
     $622 = HEAP32[$621>>2]|0;
     $623 = ($620|0)==($622|0);
     if ($623) {
      $624 = HEAP32[$618>>2]|0;
      $625 = (($624) + 40|0);
      $626 = HEAP32[$625>>2]|0;
      (FUNCTION_TABLE_ii[$626 & 127]($618)|0);
      $$pre$i2$i$i138 = $885;$566 = $886;$615 = $887;$__e$sroa$0$10 = $__e$sroa$0$12;$__ng$0 = $__ng$1;
      continue;
     } else {
      $627 = (($620) + 1|0);
      HEAP32[$619>>2] = $627;
      $$pre$i2$i$i138 = $885;$566 = $886;$615 = $887;$__e$sroa$0$10 = $__e$sroa$0$12;$__ng$0 = $__ng$1;
      continue;
     }
    }
    $628 = HEAP32[$__gb>>2]|0;
    $629 = ($628|0)!=($615|0);
    $630 = ($__ng$0|0)!=(0);
    $or$cond8 = $629 & $630;
    if ($or$cond8) {
     $631 = HEAP32[$__ge>>2]|0;
     $632 = ($615|0)==($631|0);
     if ($632) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
      $$pre253 = HEAP32[$__gn>>2]|0;
      $634 = $$pre253;
     } else {
      $634 = $615;
     }
     $633 = (($634) + 4|0);
     HEAP32[$__gn>>2] = $633;
     HEAP32[$634>>2] = $__ng$0;
     $888 = $633;
    } else {
     $888 = $615;
    }
    $635 = ($__fd$0|0)>(0);
    if ($635) {
     $636 = HEAP32[$__b>>2]|0;
     $637 = ($636|0)==(0|0);
     do {
      if ($637) {
       $649 = 0;
      } else {
       $638 = (($636) + 12|0);
       $639 = HEAP32[$638>>2]|0;
       $640 = (($636) + 16|0);
       $641 = HEAP32[$640>>2]|0;
       $642 = ($639|0)==($641|0);
       if ($642) {
        $643 = HEAP32[$636>>2]|0;
        $644 = (($643) + 36|0);
        $645 = HEAP32[$644>>2]|0;
        $646 = (FUNCTION_TABLE_ii[$645 & 127]($636)|0);
        $647 = ($646|0)==(-1);
        if ($647) {
         HEAP32[$__b>>2] = 0;
         $649 = 0;
         break;
        } else {
         $$pre$i$i$i94 = HEAP32[$__b>>2]|0;
         $649 = $$pre$i$i$i94;
         break;
        }
       } else {
        $649 = $636;
       }
      }
     } while(0);
     $648 = ($649|0)==(0|0);
     $650 = ($$pre$i2$i$i98|0)==(0|0);
     do {
      if ($650) {
       $__e$sroa$0$14 = $__e$sroa$0$13;
       label = 230;
      } else {
       $651 = (($$pre$i2$i$i98) + 12|0);
       $652 = HEAP32[$651>>2]|0;
       $653 = (($$pre$i2$i$i98) + 16|0);
       $654 = HEAP32[$653>>2]|0;
       $655 = ($652|0)==($654|0);
       if (!($655)) {
        if ($648) {
         $890 = $$pre$i2$i$i98;$__e$sroa$0$15 = $__e$sroa$0$13;
         break;
        } else {
         label = 236;
         break L37;
        }
       }
       $656 = HEAP32[$$pre$i2$i$i98>>2]|0;
       $657 = (($656) + 36|0);
       $658 = HEAP32[$657>>2]|0;
       $659 = (FUNCTION_TABLE_ii[$658 & 127]($$pre$i2$i$i98)|0);
       $660 = ($659|0)==(-1);
       if ($660) {
        $__e$sroa$0$14 = 0;
        label = 230;
       } else {
        if ($648) {
         $890 = $$pre$i2$i$i98;$__e$sroa$0$15 = $__e$sroa$0$13;
        } else {
         label = 236;
         break L37;
        }
       }
      }
     } while(0);
     if ((label|0) == 230) {
      label = 0;
      if ($648) {
       label = 236;
       break L37;
      } else {
       $890 = 0;$__e$sroa$0$15 = $__e$sroa$0$14;
      }
     }
     $661 = HEAP32[$__b>>2]|0;
     $662 = (($661) + 12|0);
     $663 = HEAP32[$662>>2]|0;
     $664 = (($661) + 16|0);
     $665 = HEAP32[$664>>2]|0;
     $666 = ($663|0)==($665|0);
     if ($666) {
      $667 = HEAP32[$661>>2]|0;
      $668 = (($667) + 36|0);
      $669 = HEAP32[$668>>2]|0;
      $670 = (FUNCTION_TABLE_ii[$669 & 127]($661)|0);
      $$0$i$i87 = $670;
     } else {
      $671 = HEAP8[$663>>0]|0;
      $672 = $671&255;
      $$0$i$i87 = $672;
     }
     $673 = $$0$i$i87&255;
     $674 = ($673<<24>>24)==($__dp$0<<24>>24);
     if (!($674)) {
      label = 236;
      break L37;
     }
     $677 = HEAP32[$__b>>2]|0;
     $678 = (($677) + 12|0);
     $679 = HEAP32[$678>>2]|0;
     $680 = (($677) + 16|0);
     $681 = HEAP32[$680>>2]|0;
     $682 = ($679|0)==($681|0);
     if ($682) {
      $683 = HEAP32[$677>>2]|0;
      $684 = (($683) + 40|0);
      $685 = HEAP32[$684>>2]|0;
      (FUNCTION_TABLE_ii[$685 & 127]($677)|0);
      $$pre$i2$i$i74 = $890;$702 = $890;$754 = $__fd$0;$__e$sroa$0$16 = $__e$sroa$0$15;
     } else {
      $686 = (($679) + 1|0);
      HEAP32[$678>>2] = $686;
      $$pre$i2$i$i74 = $890;$702 = $890;$754 = $__fd$0;$__e$sroa$0$16 = $__e$sroa$0$15;
     }
     while(1) {
      $687 = HEAP32[$__b>>2]|0;
      $688 = ($687|0)==(0|0);
      do {
       if ($688) {
        $700 = 0;
       } else {
        $689 = (($687) + 12|0);
        $690 = HEAP32[$689>>2]|0;
        $691 = (($687) + 16|0);
        $692 = HEAP32[$691>>2]|0;
        $693 = ($690|0)==($692|0);
        if ($693) {
         $694 = HEAP32[$687>>2]|0;
         $695 = (($694) + 36|0);
         $696 = HEAP32[$695>>2]|0;
         $697 = (FUNCTION_TABLE_ii[$696 & 127]($687)|0);
         $698 = ($697|0)==(-1);
         if ($698) {
          HEAP32[$__b>>2] = 0;
          $700 = 0;
          break;
         } else {
          $$pre$i$i$i70 = HEAP32[$__b>>2]|0;
          $700 = $$pre$i$i$i70;
          break;
         }
        } else {
         $700 = $687;
        }
       }
      } while(0);
      $699 = ($700|0)==(0|0);
      $701 = ($702|0)==(0|0);
      do {
       if ($701) {
        $$pre$i2$i$i74255$ph = $$pre$i2$i$i74;$__e$sroa$0$17 = $__e$sroa$0$16;
        label = 249;
       } else {
        $703 = (($702) + 12|0);
        $704 = HEAP32[$703>>2]|0;
        $705 = (($702) + 16|0);
        $706 = HEAP32[$705>>2]|0;
        $707 = ($704|0)==($706|0);
        if (!($707)) {
         if ($699) {
          $$pre$i2$i$i74255266 = $$pre$i2$i$i74;$891 = $702;$__e$sroa$0$18 = $__e$sroa$0$16;
          break;
         } else {
          label = 256;
          break L37;
         }
        }
        $708 = HEAP32[$702>>2]|0;
        $709 = (($708) + 36|0);
        $710 = HEAP32[$709>>2]|0;
        $711 = (FUNCTION_TABLE_ii[$710 & 127]($702)|0);
        $712 = ($711|0)==(-1);
        if ($712) {
         $$pre$i2$i$i74255$ph = 0;$__e$sroa$0$17 = 0;
         label = 249;
        } else {
         $713 = ($$pre$i2$i$i74|0)==(0|0);
         $tmp$i$i76 = $699 ^ $713;
         if ($tmp$i$i76) {
          $$pre$i2$i$i74255266 = $$pre$i2$i$i74;$891 = $$pre$i2$i$i74;$__e$sroa$0$18 = $__e$sroa$0$16;
         } else {
          label = 256;
          break L37;
         }
        }
       }
      } while(0);
      if ((label|0) == 249) {
       label = 0;
       if ($699) {
        label = 256;
        break L37;
       } else {
        $$pre$i2$i$i74255266 = $$pre$i2$i$i74255$ph;$891 = 0;$__e$sroa$0$18 = $__e$sroa$0$17;
       }
      }
      $714 = HEAP32[$__b>>2]|0;
      $715 = (($714) + 12|0);
      $716 = HEAP32[$715>>2]|0;
      $717 = (($714) + 16|0);
      $718 = HEAP32[$717>>2]|0;
      $719 = ($716|0)==($718|0);
      if ($719) {
       $720 = HEAP32[$714>>2]|0;
       $721 = (($720) + 36|0);
       $722 = HEAP32[$721>>2]|0;
       $723 = (FUNCTION_TABLE_ii[$722 & 127]($714)|0);
       $$0$i$i65 = $723;
      } else {
       $724 = HEAP8[$716>>0]|0;
       $725 = $724&255;
       $$0$i$i65 = $725;
      }
      $726 = $$0$i$i65&255;
      $isascii1$i63 = ($726<<24>>24)>(-1);
      if (!($isascii1$i63)) {
       label = 256;
       break L37;
      }
      $sext = $$0$i$i65 << 24;
      $727 = $sext >> 24;
      $728 = HEAP32[$106>>2]|0;
      $729 = (($728) + ($727<<1)|0);
      $730 = HEAP16[$729>>1]|0;
      $731 = $730 & 2048;
      $732 = ($731<<16>>16)==(0);
      if ($732) {
       label = 256;
       break L37;
      }
      $735 = HEAP32[$__wn>>2]|0;
      $736 = HEAP32[$10>>2]|0;
      $737 = ($735|0)==($736|0);
      if ($737) {
       __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$10);
      }
      $738 = HEAP32[$__b>>2]|0;
      $739 = (($738) + 12|0);
      $740 = HEAP32[$739>>2]|0;
      $741 = (($738) + 16|0);
      $742 = HEAP32[$741>>2]|0;
      $743 = ($740|0)==($742|0);
      if ($743) {
       $744 = HEAP32[$738>>2]|0;
       $745 = (($744) + 36|0);
       $746 = HEAP32[$745>>2]|0;
       $747 = (FUNCTION_TABLE_ii[$746 & 127]($738)|0);
       $$0$i$i58 = $747;
      } else {
       $748 = HEAP8[$740>>0]|0;
       $749 = $748&255;
       $$0$i$i58 = $749;
      }
      $750 = $$0$i$i58&255;
      $751 = HEAP32[$__wn>>2]|0;
      $752 = (($751) + 1|0);
      HEAP32[$__wn>>2] = $752;
      HEAP8[$751>>0] = $750;
      $753 = (($754) + -1)|0;
      $755 = HEAP32[$__b>>2]|0;
      $756 = (($755) + 12|0);
      $757 = HEAP32[$756>>2]|0;
      $758 = (($755) + 16|0);
      $759 = HEAP32[$758>>2]|0;
      $760 = ($757|0)==($759|0);
      if ($760) {
       $761 = HEAP32[$755>>2]|0;
       $762 = (($761) + 40|0);
       $763 = HEAP32[$762>>2]|0;
       (FUNCTION_TABLE_ii[$763 & 127]($755)|0);
      } else {
       $765 = (($757) + 1|0);
       HEAP32[$756>>2] = $765;
      }
      $764 = ($753|0)>(0);
      if ($764) {
       $$pre$i2$i$i74 = $$pre$i2$i$i74255266;$702 = $891;$754 = $753;$__e$sroa$0$16 = $__e$sroa$0$18;
      } else {
       $889 = $$pre$i2$i$i74255266;$__e$sroa$0$19 = $__e$sroa$0$18;$__fd$1 = $753;
       break;
      }
     }
    } else {
     $889 = $$pre$i2$i$i98;$__e$sroa$0$19 = $__e$sroa$0$13;$__fd$1 = $__fd$0;
    }
    $766 = HEAP32[$__wn>>2]|0;
    $767 = HEAP32[$__wb>>2]|0;
    $768 = ($766|0)==($767|0);
    if ($768) {
     label = 267;
     break L37;
    } else {
     $879 = $889;$880 = $888;$__e$sroa$0$20 = $__e$sroa$0$19;$__fd$2 = $__fd$1;$__trailing_sign$1 = $__trailing_sign$0234;
    }
    break;
   }
   case 2:  {
    $415 = ($__trailing_sign$0234|0)!=(0|0);
    $416 = ($__p$0232>>>0)<(2);
    $or$cond = $415 | $416;
    if (!($or$cond)) {
     $417 = ($__p$0232|0)==(2);
     if ($417) {
      $418 = HEAP8[$121>>0]|0;
      $419 = ($418<<24>>24)!=(0);
      $420 = $419;
     } else {
      $420 = 0;
     }
     $brmerge = $114 | $420;
     if (!($brmerge)) {
      $879 = $__e$sroa$0$2;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = 0;
      break L55;
     }
    }
    $421 = HEAP8[$__sym>>0]|0;
    $422 = $421 & 1;
    $423 = ($422<<24>>24)==(0);
    $424 = HEAP32[$116>>2]|0;
    $$274 = $423 ? $115 : $424;
    $425 = ($__p$0232|0)==(0);
    L271: do {
     if ($425) {
      $$pre$i2$i$i155 = $__e$sroa$0$2;$474 = $421;$484 = $$274;$500 = $__e$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$2;
     } else {
      $426 = (($__p$0232) + -1)|0;
      $427 = (($__pat) + ($426)|0);
      $428 = HEAP8[$427>>0]|0;
      $switch = ($428&255)<(2);
      if ($switch) {
       $429 = $421&255;
       $430 = $429 >>> 1;
       $431 = HEAP32[$117>>2]|0;
       $$276 = $423 ? $430 : $431;
       $432 = (($$274) + ($$276)|0);
       $434 = $$274;
       while(1) {
        $433 = ($434|0)==($432|0);
        if ($433) {
         break;
        }
        $435 = HEAP8[$434>>0]|0;
        $isascii1$i161 = ($435<<24>>24)>(-1);
        if (!($isascii1$i161)) {
         break;
        }
        $436 = $435 << 24 >> 24;
        $437 = HEAP32[$106>>2]|0;
        $438 = (($437) + ($436<<1)|0);
        $439 = HEAP16[$438>>1]|0;
        $440 = $439 & 8192;
        $441 = ($440<<16>>16)==(0);
        $442 = (($434) + 1|0);
        if ($441) {
         break;
        } else {
         $434 = $442;
        }
       }
       $443 = $434;
       $444 = $$274;
       $445 = (($443) - ($444))|0;
       $446 = HEAP8[$__spaces>>0]|0;
       $447 = $446 & 1;
       $448 = ($447<<24>>24)==(0);
       if ($448) {
        $450 = $446&255;
        $451 = $450 >>> 1;
        $453 = $451;
       } else {
        $449 = HEAP32[$120>>2]|0;
        $453 = $449;
       }
       $452 = ($445>>>0)>($453>>>0);
       if ($452) {
        $$pre$i2$i$i155 = $__e$sroa$0$2;$474 = $421;$484 = $$274;$500 = $__e$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$2;
       } else {
        if ($448) {
         $457 = $446&255;
         $458 = $457 >>> 1;
         $$sum262 = (($458) - ($445))|0;
         $459 = ((($__spaces) + ($$sum262)|0) + 1|0);
         $461 = $118;$462 = $458;$464 = $459;
        } else {
         $454 = HEAP32[$119>>2]|0;
         $455 = HEAP32[$120>>2]|0;
         $$sum = (($455) - ($445))|0;
         $456 = (($454) + ($$sum)|0);
         $461 = $454;$462 = $455;$464 = $456;
        }
        $460 = (($461) + ($462)|0);
        $463 = ($464|0)==($460|0);
        if ($463) {
         $$pre$i2$i$i155 = $__e$sroa$0$2;$474 = $421;$484 = $434;$500 = $__e$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$2;
        } else {
         $466 = $464;$468 = $$274;
         while(1) {
          $465 = HEAP8[$466>>0]|0;
          $467 = HEAP8[$468>>0]|0;
          $469 = ($465<<24>>24)==($467<<24>>24);
          if (!($469)) {
           $$pre$i2$i$i155 = $__e$sroa$0$2;$474 = $421;$484 = $$274;$500 = $__e$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$2;
           break L271;
          }
          $470 = (($466) + 1|0);
          $471 = (($468) + 1|0);
          $472 = ($470|0)==($460|0);
          if ($472) {
           $$pre$i2$i$i155 = $__e$sroa$0$2;$474 = $421;$484 = $434;$500 = $__e$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$2;
           break;
          } else {
           $466 = $470;$468 = $471;
          }
         }
        }
       }
      } else {
       $$pre$i2$i$i155 = $__e$sroa$0$2;$474 = $421;$484 = $$274;$500 = $__e$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$2;
      }
     }
    } while(0);
    L291: while(1) {
     $473 = $474 & 1;
     $475 = ($473<<24>>24)==(0);
     if ($475) {
      $478 = $474&255;
      $479 = $478 >>> 1;
      $481 = $115;$482 = $479;
     } else {
      $476 = HEAP32[$116>>2]|0;
      $477 = HEAP32[$117>>2]|0;
      $481 = $476;$482 = $477;
     }
     $480 = (($481) + ($482)|0);
     $483 = ($484|0)==($480|0);
     if ($483) {
      $882 = $$pre$i2$i$i155;$__e$sroa$0$9 = $__e$sroa$0$6;
      break;
     }
     $485 = HEAP32[$__b>>2]|0;
     $486 = ($485|0)==(0|0);
     do {
      if ($486) {
       $498 = 0;
      } else {
       $487 = (($485) + 12|0);
       $488 = HEAP32[$487>>2]|0;
       $489 = (($485) + 16|0);
       $490 = HEAP32[$489>>2]|0;
       $491 = ($488|0)==($490|0);
       if ($491) {
        $492 = HEAP32[$485>>2]|0;
        $493 = (($492) + 36|0);
        $494 = HEAP32[$493>>2]|0;
        $495 = (FUNCTION_TABLE_ii[$494 & 127]($485)|0);
        $496 = ($495|0)==(-1);
        if ($496) {
         HEAP32[$__b>>2] = 0;
         $498 = 0;
         break;
        } else {
         $$pre$i$i$i151 = HEAP32[$__b>>2]|0;
         $498 = $$pre$i$i$i151;
         break;
        }
       } else {
        $498 = $485;
       }
      }
     } while(0);
     $497 = ($498|0)==(0|0);
     $499 = ($500|0)==(0|0);
     do {
      if ($499) {
       $$pre$i2$i$i155250 = $$pre$i2$i$i155;$__e$sroa$0$7 = $__e$sroa$0$6;
       label = 171;
      } else {
       $501 = (($500) + 12|0);
       $502 = HEAP32[$501>>2]|0;
       $503 = (($500) + 16|0);
       $504 = HEAP32[$503>>2]|0;
       $505 = ($502|0)==($504|0);
       if (!($505)) {
        if ($497) {
         $$pre$i2$i$i155249 = $$pre$i2$i$i155;$883 = $500;$__e$sroa$0$8 = $__e$sroa$0$6;
         break;
        } else {
         $882 = $$pre$i2$i$i155;$__e$sroa$0$9 = $__e$sroa$0$6;
         break L291;
        }
       }
       $506 = HEAP32[$500>>2]|0;
       $507 = (($506) + 36|0);
       $508 = HEAP32[$507>>2]|0;
       $509 = (FUNCTION_TABLE_ii[$508 & 127]($500)|0);
       $510 = ($509|0)==(-1);
       if ($510) {
        $$pre$i2$i$i155250 = 0;$__e$sroa$0$7 = 0;
        label = 171;
       } else {
        $511 = ($$pre$i2$i$i155|0)==(0|0);
        $tmp$i$i157 = $497 ^ $511;
        if ($tmp$i$i157) {
         $$pre$i2$i$i155249 = $$pre$i2$i$i155;$883 = $$pre$i2$i$i155;$__e$sroa$0$8 = $__e$sroa$0$6;
        } else {
         $882 = $$pre$i2$i$i155;$__e$sroa$0$9 = $__e$sroa$0$6;
         break L291;
        }
       }
      }
     } while(0);
     if ((label|0) == 171) {
      label = 0;
      if ($497) {
       $882 = $$pre$i2$i$i155250;$__e$sroa$0$9 = $__e$sroa$0$7;
       break;
      } else {
       $$pre$i2$i$i155249 = $$pre$i2$i$i155250;$883 = 0;$__e$sroa$0$8 = $__e$sroa$0$7;
      }
     }
     $512 = HEAP32[$__b>>2]|0;
     $513 = (($512) + 12|0);
     $514 = HEAP32[$513>>2]|0;
     $515 = (($512) + 16|0);
     $516 = HEAP32[$515>>2]|0;
     $517 = ($514|0)==($516|0);
     if ($517) {
      $518 = HEAP32[$512>>2]|0;
      $519 = (($518) + 36|0);
      $520 = HEAP32[$519>>2]|0;
      $521 = (FUNCTION_TABLE_ii[$520 & 127]($512)|0);
      $$0$i$i147 = $521;
     } else {
      $522 = HEAP8[$514>>0]|0;
      $523 = $522&255;
      $$0$i$i147 = $523;
     }
     $524 = $$0$i$i147&255;
     $525 = HEAP8[$484>>0]|0;
     $526 = ($524<<24>>24)==($525<<24>>24);
     if (!($526)) {
      $882 = $$pre$i2$i$i155249;$__e$sroa$0$9 = $__e$sroa$0$8;
      break;
     }
     $527 = HEAP32[$__b>>2]|0;
     $528 = (($527) + 12|0);
     $529 = HEAP32[$528>>2]|0;
     $530 = (($527) + 16|0);
     $531 = HEAP32[$530>>2]|0;
     $532 = ($529|0)==($531|0);
     if ($532) {
      $533 = HEAP32[$527>>2]|0;
      $534 = (($533) + 40|0);
      $535 = HEAP32[$534>>2]|0;
      (FUNCTION_TABLE_ii[$535 & 127]($527)|0);
     } else {
      $536 = (($529) + 1|0);
      HEAP32[$528>>2] = $536;
     }
     $537 = (($484) + 1|0);
     $$pre248 = HEAP8[$__sym>>0]|0;
     $$pre$i2$i$i155 = $$pre$i2$i$i155249;$474 = $$pre248;$484 = $537;$500 = $883;$__e$sroa$0$6 = $__e$sroa$0$8;
    }
    if ($114) {
     $538 = HEAP8[$__sym>>0]|0;
     $539 = $538 & 1;
     $540 = ($539<<24>>24)==(0);
     if ($540) {
      $543 = $538&255;
      $544 = $543 >>> 1;
      $546 = $115;$547 = $544;
     } else {
      $541 = HEAP32[$116>>2]|0;
      $542 = HEAP32[$117>>2]|0;
      $546 = $541;$547 = $542;
     }
     $545 = (($546) + ($547)|0);
     $548 = ($484|0)==($545|0);
     if ($548) {
      $879 = $882;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$9;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0234;
     } else {
      label = 186;
      break L37;
     }
    } else {
     $879 = $882;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$9;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0234;
    }
    break;
   }
   default: {
    $879 = $__e$sroa$0$2;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0234;
   }
   }
  } while(0);
  L329: do {
   if ((label|0) == 52) {
    label = 0;
    $186 = ($__p$0232|0)==(3);
    if ($186) {
     $848 = $877;$878 = $__e$sroa$0$2;$__trailing_sign$0$lcssa = $__trailing_sign$0234;
     label = 269;
     break L37;
    } else {
     $$pre$i2$i$i43 = $__e$sroa$0$2;$202 = $__e$sroa$0$2;$__e$sroa$0$3 = $__e$sroa$0$2;
    }
    while(1) {
     $187 = HEAP32[$__b>>2]|0;
     $188 = ($187|0)==(0|0);
     do {
      if ($188) {
       $200 = 0;
      } else {
       $189 = (($187) + 12|0);
       $190 = HEAP32[$189>>2]|0;
       $191 = (($187) + 16|0);
       $192 = HEAP32[$191>>2]|0;
       $193 = ($190|0)==($192|0);
       if ($193) {
        $194 = HEAP32[$187>>2]|0;
        $195 = (($194) + 36|0);
        $196 = HEAP32[$195>>2]|0;
        $197 = (FUNCTION_TABLE_ii[$196 & 127]($187)|0);
        $198 = ($197|0)==(-1);
        if ($198) {
         HEAP32[$__b>>2] = 0;
         $200 = 0;
         break;
        } else {
         $$pre$i$i$i39 = HEAP32[$__b>>2]|0;
         $200 = $$pre$i$i$i39;
         break;
        }
       } else {
        $200 = $187;
       }
      }
     } while(0);
     $199 = ($200|0)==(0|0);
     $201 = ($202|0)==(0|0);
     do {
      if ($201) {
       $$pre$i2$i$i43240 = $$pre$i2$i$i43;$__e$sroa$0$4 = $__e$sroa$0$3;
       label = 62;
      } else {
       $203 = (($202) + 12|0);
       $204 = HEAP32[$203>>2]|0;
       $205 = (($202) + 16|0);
       $206 = HEAP32[$205>>2]|0;
       $207 = ($204|0)==($206|0);
       if (!($207)) {
        if ($199) {
         $$pre$i2$i$i43242 = $$pre$i2$i$i43;$881 = $202;$__e$sroa$0$5 = $__e$sroa$0$3;
         break;
        } else {
         $879 = $$pre$i2$i$i43;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$3;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0234;
         break L329;
        }
       }
       $208 = HEAP32[$202>>2]|0;
       $209 = (($208) + 36|0);
       $210 = HEAP32[$209>>2]|0;
       $211 = (FUNCTION_TABLE_ii[$210 & 127]($202)|0);
       $212 = ($211|0)==(-1);
       if ($212) {
        $$pre$i2$i$i43240 = 0;$__e$sroa$0$4 = 0;
        label = 62;
       } else {
        $213 = ($$pre$i2$i$i43|0)==(0|0);
        $tmp$i$i45 = $199 ^ $213;
        if ($tmp$i$i45) {
         $$pre$i2$i$i43242 = $$pre$i2$i$i43;$881 = $$pre$i2$i$i43;$__e$sroa$0$5 = $__e$sroa$0$3;
        } else {
         $879 = $$pre$i2$i$i43;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$3;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0234;
         break L329;
        }
       }
      }
     } while(0);
     if ((label|0) == 62) {
      label = 0;
      if ($199) {
       $879 = $$pre$i2$i$i43240;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$4;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0234;
       break L329;
      } else {
       $$pre$i2$i$i43242 = $$pre$i2$i$i43240;$881 = 0;$__e$sroa$0$5 = $__e$sroa$0$4;
      }
     }
     $214 = HEAP32[$__b>>2]|0;
     $215 = (($214) + 12|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = (($214) + 16|0);
     $218 = HEAP32[$217>>2]|0;
     $219 = ($216|0)==($218|0);
     if ($219) {
      $220 = HEAP32[$214>>2]|0;
      $221 = (($220) + 36|0);
      $222 = HEAP32[$221>>2]|0;
      $223 = (FUNCTION_TABLE_ii[$222 & 127]($214)|0);
      $$0$i$i49 = $223;
     } else {
      $224 = HEAP8[$216>>0]|0;
      $225 = $224&255;
      $$0$i$i49 = $225;
     }
     $226 = $$0$i$i49&255;
     $isascii1$i52 = ($226<<24>>24)>(-1);
     if (!($isascii1$i52)) {
      $879 = $$pre$i2$i$i43242;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$5;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0234;
      break L329;
     }
     $sext200 = $$0$i$i49 << 24;
     $227 = $sext200 >> 24;
     $228 = HEAP32[$106>>2]|0;
     $229 = (($228) + ($227<<1)|0);
     $230 = HEAP16[$229>>1]|0;
     $231 = $230 & 8192;
     $232 = ($231<<16>>16)==(0);
     if ($232) {
      $879 = $$pre$i2$i$i43242;$880 = $877;$__e$sroa$0$20 = $__e$sroa$0$5;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0234;
      break L329;
     }
     $233 = HEAP32[$__b>>2]|0;
     $234 = (($233) + 12|0);
     $235 = HEAP32[$234>>2]|0;
     $236 = (($233) + 16|0);
     $237 = HEAP32[$236>>2]|0;
     $238 = ($235|0)==($237|0);
     if ($238) {
      $239 = HEAP32[$233>>2]|0;
      $240 = (($239) + 40|0);
      $241 = HEAP32[$240>>2]|0;
      $242 = (FUNCTION_TABLE_ii[$241 & 127]($233)|0);
      $$0$i$i55 = $242;
     } else {
      $243 = (($235) + 1|0);
      HEAP32[$234>>2] = $243;
      $244 = HEAP8[$235>>0]|0;
      $245 = $244&255;
      $$0$i$i55 = $245;
     }
     $246 = $$0$i$i55&255;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__spaces,$246);
     $$pre$i2$i$i43 = $$pre$i2$i$i43242;$202 = $881;$__e$sroa$0$3 = $__e$sroa$0$5;
    }
   }
  } while(0);
  $771 = (($__p$0232) + 1)|0;
  $772 = ($771>>>0)<(4);
  if ($772) {
   $877 = $880;$__e$sroa$0$0 = $__e$sroa$0$20;$__fd$0 = $__fd$2;$__p$0232 = $771;$__trailing_sign$0234 = $__trailing_sign$1;
  } else {
   $848 = $880;$878 = $879;$__trailing_sign$0$lcssa = $__trailing_sign$1;
   label = 269;
   break;
  }
 }
 L360: do {
  if ((label|0) == 51) {
   $184 = HEAP32[$__err>>2]|0;
   $185 = $184 | 4;
   HEAP32[$__err>>2] = $185;
   $$0 = 0;
  }
  else if ((label|0) == 137) {
   $413 = HEAP32[$__err>>2]|0;
   $414 = $413 | 4;
   HEAP32[$__err>>2] = $414;
   $$0 = 0;
  }
  else if ((label|0) == 186) {
   $549 = HEAP32[$__err>>2]|0;
   $550 = $549 | 4;
   HEAP32[$__err>>2] = $550;
   $$0 = 0;
  }
  else if ((label|0) == 236) {
   $675 = HEAP32[$__err>>2]|0;
   $676 = $675 | 4;
   HEAP32[$__err>>2] = $676;
   $$0 = 0;
  }
  else if ((label|0) == 256) {
   $733 = HEAP32[$__err>>2]|0;
   $734 = $733 | 4;
   HEAP32[$__err>>2] = $734;
   $$0 = 0;
  }
  else if ((label|0) == 267) {
   $769 = HEAP32[$__err>>2]|0;
   $770 = $769 | 4;
   HEAP32[$__err>>2] = $770;
   $$0 = 0;
  }
  else if ((label|0) == 269) {
   $773 = ($__trailing_sign$0$lcssa|0)==(0|0);
   L368: do {
    if (!($773)) {
     $774 = (($__trailing_sign$0$lcssa) + 1|0);
     $775 = (($__trailing_sign$0$lcssa) + 8|0);
     $776 = (($__trailing_sign$0$lcssa) + 4|0);
     $$pre$i2$i$i = $878;$800 = $878;$__i$0 = 1;
     L370: while(1) {
      $777 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $778 = $777 & 1;
      $779 = ($778<<24>>24)==(0);
      if ($779) {
       $781 = $777&255;
       $782 = $781 >>> 1;
       $784 = $782;
      } else {
       $780 = HEAP32[$776>>2]|0;
       $784 = $780;
      }
      $783 = ($__i$0>>>0)<($784>>>0);
      if (!($783)) {
       break L368;
      }
      $785 = HEAP32[$__b>>2]|0;
      $786 = ($785|0)==(0|0);
      do {
       if ($786) {
        $798 = 0;
       } else {
        $787 = (($785) + 12|0);
        $788 = HEAP32[$787>>2]|0;
        $789 = (($785) + 16|0);
        $790 = HEAP32[$789>>2]|0;
        $791 = ($788|0)==($790|0);
        if ($791) {
         $792 = HEAP32[$785>>2]|0;
         $793 = (($792) + 36|0);
         $794 = HEAP32[$793>>2]|0;
         $795 = (FUNCTION_TABLE_ii[$794 & 127]($785)|0);
         $796 = ($795|0)==(-1);
         if ($796) {
          HEAP32[$__b>>2] = 0;
          $798 = 0;
          break;
         } else {
          $$pre$i$i$i = HEAP32[$__b>>2]|0;
          $798 = $$pre$i$i$i;
          break;
         }
        } else {
         $798 = $785;
        }
       }
      } while(0);
      $797 = ($798|0)==(0|0);
      $799 = ($800|0)==(0|0);
      do {
       if ($799) {
        $$pre$i2$i$i261$ph = $$pre$i2$i$i;
        label = 284;
       } else {
        $801 = (($800) + 12|0);
        $802 = HEAP32[$801>>2]|0;
        $803 = (($800) + 16|0);
        $804 = HEAP32[$803>>2]|0;
        $805 = ($802|0)==($804|0);
        if (!($805)) {
         if ($797) {
          $$pre$i2$i$i261269 = $$pre$i2$i$i;$892 = $800;
          break;
         } else {
          break L370;
         }
        }
        $806 = HEAP32[$800>>2]|0;
        $807 = (($806) + 36|0);
        $808 = HEAP32[$807>>2]|0;
        $809 = (FUNCTION_TABLE_ii[$808 & 127]($800)|0);
        $810 = ($809|0)==(-1);
        if ($810) {
         $$pre$i2$i$i261$ph = 0;
         label = 284;
        } else {
         $811 = ($$pre$i2$i$i|0)==(0|0);
         $tmp$i$i = $797 ^ $811;
         if ($tmp$i$i) {
          $$pre$i2$i$i261269 = $$pre$i2$i$i;$892 = $$pre$i2$i$i;
         } else {
          break L370;
         }
        }
       }
      } while(0);
      if ((label|0) == 284) {
       label = 0;
       if ($797) {
        break;
       } else {
        $$pre$i2$i$i261269 = $$pre$i2$i$i261$ph;$892 = 0;
       }
      }
      $812 = HEAP32[$__b>>2]|0;
      $813 = (($812) + 12|0);
      $814 = HEAP32[$813>>2]|0;
      $815 = (($812) + 16|0);
      $816 = HEAP32[$815>>2]|0;
      $817 = ($814|0)==($816|0);
      if ($817) {
       $818 = HEAP32[$812>>2]|0;
       $819 = (($818) + 36|0);
       $820 = HEAP32[$819>>2]|0;
       $821 = (FUNCTION_TABLE_ii[$820 & 127]($812)|0);
       $$0$i$i = $821;
      } else {
       $822 = HEAP8[$814>>0]|0;
       $823 = $822&255;
       $$0$i$i = $823;
      }
      $824 = $$0$i$i&255;
      $825 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $826 = $825 & 1;
      $827 = ($826<<24>>24)==(0);
      if ($827) {
       $830 = $774;
      } else {
       $828 = HEAP32[$775>>2]|0;
       $830 = $828;
      }
      $829 = (($830) + ($__i$0)|0);
      $831 = HEAP8[$829>>0]|0;
      $832 = ($824<<24>>24)==($831<<24>>24);
      if (!($832)) {
       break;
      }
      $835 = (($__i$0) + 1)|0;
      $836 = HEAP32[$__b>>2]|0;
      $837 = (($836) + 12|0);
      $838 = HEAP32[$837>>2]|0;
      $839 = (($836) + 16|0);
      $840 = HEAP32[$839>>2]|0;
      $841 = ($838|0)==($840|0);
      if ($841) {
       $842 = HEAP32[$836>>2]|0;
       $843 = (($842) + 40|0);
       $844 = HEAP32[$843>>2]|0;
       (FUNCTION_TABLE_ii[$844 & 127]($836)|0);
       $$pre$i2$i$i = $$pre$i2$i$i261269;$800 = $892;$__i$0 = $835;
       continue;
      } else {
       $845 = (($838) + 1|0);
       HEAP32[$837>>2] = $845;
       $$pre$i2$i$i = $$pre$i2$i$i261269;$800 = $892;$__i$0 = $835;
       continue;
      }
     }
     $833 = HEAP32[$__err>>2]|0;
     $834 = $833 | 4;
     HEAP32[$__err>>2] = $834;
     $$0 = 0;
     break L360;
    }
   } while(0);
   $846 = HEAP32[$__gb>>2]|0;
   $847 = ($846|0)==($848|0);
   if ($847) {
    $$0 = 1;
   } else {
    HEAP32[$__et>>2] = 0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$846,$848,$__et);
    $849 = HEAP32[$__et>>2]|0;
    $850 = ($849|0)==(0);
    if ($850) {
     $$0 = 1;
    } else {
     $851 = HEAP32[$__err>>2]|0;
     $852 = $851 | 4;
     HEAP32[$__err>>2] = $852;
     $$0 = 0;
    }
   }
  }
 } while(0);
 $853 = HEAP8[$__spaces>>0]|0;
 $854 = $853 & 1;
 $855 = ($854<<24>>24)==(0);
 if (!($855)) {
  $856 = HEAP32[$119>>2]|0;
  _free($856);
 }
 $857 = HEAP8[$__nsn>>0]|0;
 $858 = $857 & 1;
 $859 = ($858<<24>>24)==(0);
 if (!($859)) {
  $860 = HEAP32[$109>>2]|0;
  _free($860);
 }
 $861 = HEAP8[$__psn>>0]|0;
 $862 = $861 & 1;
 $863 = ($862<<24>>24)==(0);
 if (!($863)) {
  $864 = HEAP32[$112>>2]|0;
  _free($864);
 }
 $865 = HEAP8[$__sym>>0]|0;
 $866 = $865 & 1;
 $867 = ($866<<24>>24)==(0);
 if (!($867)) {
  $868 = HEAP32[$116>>2]|0;
  _free($868);
 }
 $869 = HEAP8[$__grp>>0]|0;
 $870 = $869 & 1;
 $871 = ($870<<24>>24)==(0);
 if (!($871)) {
  $872 = (($__grp) + 8|0);
  $873 = HEAP32[$872>>2]|0;
  _free($873);
 }
 $874 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $875 = ($874|0)==(0|0);
 if ($875) {
  STACKTOP = sp;return ($$0|0);
 }
 $876 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vi[$876 & 255]($874);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 HEAP32[$0>>2] = ((51592 + 8|0));
 $1 = (_strlen(($msg|0))|0);
 $2 = (($1) + 13)|0;
 $3 = (__Znwj($2)|0);
 $4 = (($0) + 4|0);
 HEAP32[$3>>2] = $1;
 $5 = (($3) + 4|0);
 HEAP32[$5>>2] = $1;
 $6 = (($3) + 8|0);
 HEAP32[$6>>2] = 0;
 $7 = (($3) + 12|0);
 $8 = (($1) + 1)|0;
 _memcpy(($7|0),($msg|0),($8|0))|0;
 HEAP32[$4>>2] = $7;
 ___cxa_throw(($0|0),(51800|0),(121|0));
 // unreachable;
}
function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$01$i = 0, $$idx = 0, $$idx$val = 0, $$idx5 = 0, $$idx5$val = 0, $$pre$i = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $__neg = 0, $__p$02$i = 0, $__w$0$lcssa = 0, $__w$05 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i = 0, $scevgep$i = 0, $scevgep3$i = 0, $scevgep4$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $__wbuf = sp + 20|0;
 $__wb = sp + 8|0;
 $__wn = sp;
 $__neg = sp + 16|0;
 HEAP32[$__wb>>2] = $__wbuf;
 $0 = (($__wb) + 4|0);
 HEAP32[$0>>2] = 140;
 $1 = (($__wbuf) + 100|0);
 $2 = (($__iob) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 4|0);
 $5 = HEAP32[$4>>2]|0;HEAP32[$4>>2] = (($5+1)|0);
 $6 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx = (($3) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx5 = (($3) + 12|0);
 $$idx5$val = HEAP32[$$idx5>>2]|0;
 $7 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx5$val,$6)|0);
 HEAP8[$__neg>>0] = 0;
 $8 = HEAP32[$__e>>2]|0;
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b,$8,$__intl,$3,$10,$__err,$__neg,$7,$__wb,$__wn,$1)|0);
 do {
  if ($11) {
   $12 = HEAP8[$__v>>0]|0;
   $13 = $12 & 1;
   $14 = ($13<<24>>24)==(0);
   if ($14) {
    $18 = (($__v) + 1|0);
    HEAP8[$18>>0] = 0;
    HEAP8[$__v>>0] = 0;
   } else {
    $15 = (($__v) + 8|0);
    $16 = HEAP32[$15>>2]|0;
    HEAP8[$16>>0] = 0;
    $17 = (($__v) + 4|0);
    HEAP32[$17>>2] = 0;
   }
   $19 = HEAP8[$__neg>>0]|0;
   $20 = ($19<<24>>24)==(0);
   if (!($20)) {
    $21 = HEAP32[$7>>2]|0;
    $22 = (($21) + 28|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_iii[$23 & 63]($7,45)|0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__v,$24);
   }
   $25 = HEAP32[$7>>2]|0;
   $26 = (($25) + 28|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (FUNCTION_TABLE_iii[$27 & 63]($7,48)|0);
   $29 = HEAP32[$__wb>>2]|0;
   $30 = HEAP32[$__wn>>2]|0;
   $31 = (($30) + -1|0);
   $32 = ($29>>>0)<($31>>>0);
   L10: do {
    if ($32) {
     $__w$05 = $29;
     while(1) {
      $35 = HEAP8[$__w$05>>0]|0;
      $36 = ($35<<24>>24)==($28<<24>>24);
      $34 = (($__w$05) + 1|0);
      if (!($36)) {
       $__w$0$lcssa = $__w$05;
       break L10;
      }
      $33 = ($34>>>0)<($31>>>0);
      if ($33) {
       $__w$05 = $34;
      } else {
       $__w$0$lcssa = $34;
       break;
      }
     }
    } else {
     $__w$0$lcssa = $29;
    }
   } while(0);
   $37 = $__w$0$lcssa;
   $38 = HEAP8[$__v>>0]|0;
   $39 = $38 & 1;
   $40 = ($39<<24>>24)==(0);
   if ($40) {
    $41 = $38&255;
    $42 = $41 >>> 1;
    $114 = $38;$52 = 10;$53 = $42;
   } else {
    $43 = (($__v) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$__v>>2]|0;
    $46 = $45 & -2;
    $phitmp$i$i = (($46) + -1)|0;
    $47 = $45&255;
    $114 = $47;$52 = $phitmp$i$i;$53 = $44;
   }
   $48 = $30;
   $49 = (($48) - ($37))|0;
   $50 = ($30|0)==($__w$0$lcssa|0);
   if (!($50)) {
    $51 = (($52) - ($53))|0;
    $54 = ($51>>>0)<($49>>>0);
    if ($54) {
     $55 = (($53) + ($49))|0;
     $56 = (($55) - ($52))|0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($__v,$52,$56,$53,$53,0);
     $$pre$i = HEAP8[$__v>>0]|0;
     $58 = $$pre$i;
    } else {
     $58 = $114;
    }
    $57 = $58 & 1;
    $59 = ($57<<24>>24)==(0);
    if ($59) {
     $62 = (($__v) + 1|0);
     $64 = $62;
    } else {
     $60 = (($__v) + 8|0);
     $61 = HEAP32[$60>>2]|0;
     $64 = $61;
    }
    $63 = (($64) + ($53)|0);
    $65 = (($53) - ($37))|0;
    $scevgep$i = (($30) + ($65)|0);
    $scevgep3$i = $scevgep$i;
    $$01$i = $__w$0$lcssa;$__p$02$i = $63;
    while(1) {
     $66 = HEAP8[$$01$i>>0]|0;
     HEAP8[$__p$02$i>>0] = $66;
     $67 = (($__p$02$i) + 1|0);
     $68 = (($$01$i) + 1|0);
     $69 = ($68|0)==($30|0);
     if ($69) {
      break;
     } else {
      $$01$i = $68;$__p$02$i = $67;
     }
    }
    $scevgep4$i = (($64) + ($scevgep3$i)|0);
    HEAP8[$scevgep4$i>>0] = 0;
    $70 = (($53) + ($49))|0;
    $71 = HEAP8[$__v>>0]|0;
    $72 = $71 & 1;
    $73 = ($72<<24>>24)==(0);
    if ($73) {
     $75 = $70 << 1;
     $76 = $75&255;
     HEAP8[$__v>>0] = $76;
     break;
    } else {
     $74 = (($__v) + 4|0);
     HEAP32[$74>>2] = $70;
     break;
    }
   }
  }
 } while(0);
 $77 = HEAP32[$__b>>2]|0;
 $78 = ($77|0)==(0|0);
 do {
  if ($78) {
   $90 = 0;
  } else {
   $79 = (($77) + 12|0);
   $80 = HEAP32[$79>>2]|0;
   $81 = (($77) + 16|0);
   $82 = HEAP32[$81>>2]|0;
   $83 = ($80|0)==($82|0);
   if ($83) {
    $84 = HEAP32[$77>>2]|0;
    $85 = (($84) + 36|0);
    $86 = HEAP32[$85>>2]|0;
    $87 = (FUNCTION_TABLE_ii[$86 & 127]($77)|0);
    $88 = ($87|0)==(-1);
    if ($88) {
     HEAP32[$__b>>2] = 0;
     $90 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $90 = $$pre$i$i$i;
     break;
    }
   } else {
    $90 = $77;
   }
  }
 } while(0);
 $89 = ($90|0)==(0|0);
 $91 = ($8|0)==(0|0);
 do {
  if ($91) {
   label = 34;
  } else {
   $92 = (($8) + 12|0);
   $93 = HEAP32[$92>>2]|0;
   $94 = (($8) + 16|0);
   $95 = HEAP32[$94>>2]|0;
   $96 = ($93|0)==($95|0);
   if (!($96)) {
    if ($89) {
     break;
    } else {
     label = 36;
     break;
    }
   }
   $97 = HEAP32[$8>>2]|0;
   $98 = (($97) + 36|0);
   $99 = HEAP32[$98>>2]|0;
   $100 = (FUNCTION_TABLE_ii[$99 & 127]($8)|0);
   $101 = ($100|0)==(-1);
   if ($101) {
    HEAP32[$__e>>2] = 0;
    label = 34;
    break;
   } else {
    if ($89) {
     break;
    } else {
     label = 36;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 34) {
  if ($89) {
   label = 36;
  }
 }
 if ((label|0) == 36) {
  $102 = HEAP32[$__err>>2]|0;
  $103 = $102 | 2;
  HEAP32[$__err>>2] = $103;
 }
 $104 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $104;
 $105 = (($3) + 4|0);
 $106 = HEAP32[$105>>2]|0;HEAP32[$105>>2] = (($106+-1)|0);
 $107 = ($106|0)==(0);
 if ($107) {
  $108 = HEAP32[$3>>2]|0;
  $109 = (($108) + 8|0);
  $110 = HEAP32[$109>>2]|0;
  FUNCTION_TABLE_vi[$110 & 255]($3);
 }
 $111 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $112 = ($111|0)==(0|0);
 if ($112) {
  STACKTOP = sp;return;
 }
 $113 = HEAP32[$0>>2]|0;
 FUNCTION_TABLE_vi[$113 & 255]($111);
 STACKTOP = sp;return;
}
function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping,$__g,$__g_end,$__err) {
 $__grouping = $__grouping|0;
 $__g = $__g|0;
 $__g_end = $__g_end|0;
 $__err = $__err|0;
 var $$012$i$i = 0, $$__ig$0 = 0, $$lcssa6 = 0, $$not = 0, $$not9 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ig$011 = 0, $__r$012 = 0;
 var $or$cond2 = 0, $or$cond2$lcssa = 0, $or$cond210 = 0, $or$cond213 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__grouping>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $8 = $6;
 } else {
  $3 = (($__grouping) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $8 = $4;
 }
 $7 = ($8|0)==(0);
 if ($7) {
  STACKTOP = sp;return;
 }
 $9 = ($__g|0)==($__g_end|0);
 if ($9) {
  $19 = $0;
 } else {
  $10 = (($__g_end) + -4|0);
  $11 = ($10>>>0)>($__g>>>0);
  if ($11) {
   $$012$i$i = $__g;$14 = $10;
   while(1) {
    $12 = HEAP32[$$012$i$i>>2]|0;
    $13 = HEAP32[$14>>2]|0;
    HEAP32[$$012$i$i>>2] = $13;
    HEAP32[$14>>2] = $12;
    $15 = (($$012$i$i) + 4|0);
    $16 = (($14) + -4|0);
    $17 = ($15>>>0)<($16>>>0);
    if ($17) {
     $$012$i$i = $15;$14 = $16;
    } else {
     break;
    }
   }
   $$pre = HEAP8[$__grouping>>0]|0;
   $19 = $$pre;
  } else {
   $19 = $0;
  }
 }
 $18 = $19 & 1;
 $20 = ($18<<24>>24)==(0);
 if ($20) {
  $25 = (($__grouping) + 1|0);
  $26 = $19&255;
  $27 = $26 >>> 1;
  $31 = $25;$34 = $27;
 } else {
  $21 = (($__grouping) + 8|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($__grouping) + 4|0);
  $24 = HEAP32[$23>>2]|0;
  $31 = $22;$34 = $24;
 }
 $28 = (($__g_end) + -4|0);
 $29 = ($28>>>0)>($__g>>>0);
 $30 = HEAP8[$31>>0]|0;
 $$not9 = ($30<<24>>24)<(1);
 $32 = ($30<<24>>24)==(127);
 $or$cond210 = $$not9 | $32;
 L18: do {
  if ($29) {
   $33 = (($31) + ($34)|0);
   $35 = $33;
   $37 = $30;$__ig$011 = $31;$__r$012 = $__g;$or$cond213 = $or$cond210;
   while(1) {
    if (!($or$cond213)) {
     $36 = $37 << 24 >> 24;
     $38 = HEAP32[$__r$012>>2]|0;
     $39 = ($36|0)==($38|0);
     if (!($39)) {
      break;
     }
    }
    $40 = $__ig$011;
    $41 = (($35) - ($40))|0;
    $42 = ($41|0)>(1);
    $43 = (($__ig$011) + 1|0);
    $$__ig$0 = $42 ? $43 : $__ig$011;
    $44 = (($__r$012) + 4|0);
    $45 = ($44>>>0)<($28>>>0);
    $46 = HEAP8[$$__ig$0>>0]|0;
    $$not = ($46<<24>>24)<(1);
    $47 = ($46<<24>>24)==(127);
    $or$cond2 = $$not | $47;
    if ($45) {
     $37 = $46;$__ig$011 = $$__ig$0;$__r$012 = $44;$or$cond213 = $or$cond2;
    } else {
     $$lcssa6 = $46;$or$cond2$lcssa = $or$cond2;
     break L18;
    }
   }
   HEAP32[$__err>>2] = 4;
   STACKTOP = sp;return;
  } else {
   $$lcssa6 = $30;$or$cond2$lcssa = $or$cond210;
  }
 } while(0);
 if ($or$cond2$lcssa) {
  STACKTOP = sp;return;
 }
 $48 = $$lcssa6 << 24 >> 24;
 $49 = HEAP32[$28>>2]|0;
 $50 = (($49) + -1)|0;
 $51 = ($50>>>0)<($48>>>0);
 if ($51) {
  STACKTOP = sp;return;
 }
 HEAP32[$__err>>2] = 4;
 STACKTOP = sp;return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$01$i = 0, $$idx = 0, $$idx$val = 0, $$idx4 = 0, $$idx4$val = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $__atoms = 0, $__nbuf = 0, $__nc$0 = 0;
 var $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$26 = 0, $__neg = 0, $__w$07 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576|0;
 $vararg_buffer = sp;
 $__wbuf = sp + 16|0;
 $__wb = sp + 8|0;
 $__wn = sp + 456|0;
 $__neg = sp + 560|0;
 $__atoms = sp + 416|0;
 $__nbuf = sp + 460|0;
 HEAP32[$__wb>>2] = $__wbuf;
 $0 = (($__wb) + 4|0);
 HEAP32[$0>>2] = 140;
 $1 = (($__wbuf) + 400|0);
 $2 = (($__iob) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 4|0);
 $5 = HEAP32[$4>>2]|0;HEAP32[$4>>2] = (($5+1)|0);
 $6 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx = (($3) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx4 = (($3) + 12|0);
 $$idx4$val = HEAP32[$$idx4>>2]|0;
 $7 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx4$val,$6)|0);
 HEAP8[$__neg>>0] = 0;
 $8 = HEAP32[$__e>>2]|0;
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$8,$__intl,$3,$10,$__err,$__neg,$7,$__wb,$__wn,$1)|0);
 do {
  if ($11) {
   $12 = HEAP32[$7>>2]|0;
   $13 = (($12) + 48|0);
   $14 = HEAP32[$13>>2]|0;
   (FUNCTION_TABLE_iiiii[$14 & 31]($7,40344,((40344 + 10|0)),$__atoms)|0);
   $15 = HEAP32[$__wn>>2]|0;
   $16 = HEAP32[$__wb>>2]|0;
   $17 = $15;
   $18 = $16;
   $19 = (($17) - ($18))|0;
   $20 = ($19|0)>(392);
   if ($20) {
    $21 = $19 >> 2;
    $22 = (($21) + 2)|0;
    $23 = (_malloc($22)|0);
    $24 = ($23|0)==(0|0);
    if ($24) {
     $25 = (___cxa_allocate_exception(4)|0);
     HEAP32[$25>>2] = ((51368 + 8|0));
     ___cxa_throw(($25|0),(51424|0),(117|0));
     // unreachable;
    } else {
     $48 = $23;$__nc$0 = $23;
    }
   } else {
    $48 = 0;$__nc$0 = $__nbuf;
   }
   $26 = HEAP8[$__neg>>0]|0;
   $27 = ($26<<24>>24)==(0);
   if ($27) {
    $__nc$1 = $__nc$0;
   } else {
    $28 = (($__nc$0) + 1|0);
    HEAP8[$__nc$0>>0] = 45;
    $__nc$1 = $28;
   }
   $29 = ($16>>>0)<($15>>>0);
   if ($29) {
    $30 = (($__atoms) + 40|0);
    $31 = $__atoms;
    $__nc$26 = $__nc$1;$__w$07 = $16;
    while(1) {
     $32 = HEAP32[$__w$07>>2]|0;
     $$01$i = $__atoms;
     while(1) {
      $35 = HEAP32[$$01$i>>2]|0;
      $36 = ($35|0)==($32|0);
      $34 = (($$01$i) + 4|0);
      if ($36) {
       $$0$lcssa$i = $$01$i;
       break;
      }
      $33 = ($34|0)==($30|0);
      if ($33) {
       $$0$lcssa$i = $30;
       break;
      } else {
       $$01$i = $34;
      }
     }
     $37 = $$0$lcssa$i;
     $38 = (($37) - ($31))|0;
     $39 = $38 >> 2;
     $40 = (40344 + ($39)|0);
     $41 = HEAP8[$40>>0]|0;
     HEAP8[$__nc$26>>0] = $41;
     $42 = (($__w$07) + 4|0);
     $43 = (($__nc$26) + 1|0);
     $44 = HEAP32[$__wn>>2]|0;
     $45 = ($42>>>0)<($44>>>0);
     if ($45) {
      $__nc$26 = $43;$__w$07 = $42;
     } else {
      $__nc$2$lcssa = $43;
      break;
     }
    }
   } else {
    $__nc$2$lcssa = $__nc$1;
   }
   HEAP8[$__nc$2$lcssa>>0] = 0;
   HEAP32[$vararg_buffer>>2] = $__v;
   $46 = (_sscanf($__nbuf,40280,$vararg_buffer)|0);
   $47 = ($46|0)==(1);
   if ($47) {
    _free($48);
    break;
   } else {
    __ZNSt3__121__throw_runtime_errorEPKc(40288);
    // unreachable;
   }
  }
 } while(0);
 $49 = HEAP32[$__b>>2]|0;
 $50 = ($49|0)==(0|0);
 do {
  if ($50) {
   $87 = 1;
  } else {
   $51 = (($49) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = (($49) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = HEAP32[$49>>2]|0;
    $57 = (($56) + 36|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = (FUNCTION_TABLE_ii[$58 & 127]($49)|0);
    $$0$i$i$i$i = $59;
   } else {
    $60 = HEAP32[$52>>2]|0;
    $$0$i$i$i$i = $60;
   }
   $61 = ($$0$i$i$i$i|0)==(-1);
   if ($61) {
    HEAP32[$__b>>2] = 0;
    $87 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $87 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $62 = HEAP32[$__e>>2]|0;
 $63 = ($62|0)==(0|0);
 do {
  if ($63) {
   label = 29;
  } else {
   $64 = (($62) + 12|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = (($62) + 16|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = ($65|0)==($67|0);
   if ($68) {
    $69 = HEAP32[$62>>2]|0;
    $70 = (($69) + 36|0);
    $71 = HEAP32[$70>>2]|0;
    $72 = (FUNCTION_TABLE_ii[$71 & 127]($62)|0);
    $$0$i$i1$i$i = $72;
   } else {
    $73 = HEAP32[$65>>2]|0;
    $$0$i$i1$i$i = $73;
   }
   $74 = ($$0$i$i1$i$i|0)==(-1);
   if ($74) {
    HEAP32[$__e>>2] = 0;
    label = 29;
    break;
   } else {
    if ($87) {
     break;
    } else {
     label = 31;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 29) {
  if ($87) {
   label = 31;
  }
 }
 if ((label|0) == 31) {
  $75 = HEAP32[$__err>>2]|0;
  $76 = $75 | 2;
  HEAP32[$__err>>2] = $76;
 }
 $77 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $77;
 $78 = (($3) + 4|0);
 $79 = HEAP32[$78>>2]|0;HEAP32[$78>>2] = (($79+-1)|0);
 $80 = ($79|0)==(0);
 if ($80) {
  $81 = HEAP32[$3>>2]|0;
  $82 = (($81) + 8|0);
  $83 = HEAP32[$82>>2]|0;
  FUNCTION_TABLE_vi[$83 & 255]($3);
 }
 $84 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $85 = ($84|0)==(0|0);
 if ($85) {
  STACKTOP = sp;return;
 }
 $86 = HEAP32[$0>>2]|0;
 FUNCTION_TABLE_vi[$86 & 255]($84);
 STACKTOP = sp;return;
}
function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$__e$0,$__intl,$__loc$0$0$val,$__flags,$__err,$__neg,$__ct,$__wb,$__wn,$__we) {
 $__b = $__b|0;
 $__e$0 = $__e$0|0;
 $__intl = $__intl|0;
 $__loc$0$0$val = $__loc$0$0$val|0;
 $__flags = $__flags|0;
 $__err = $__err|0;
 $__neg = $__neg|0;
 $__ct = $__ct|0;
 $__wb = $__wb|0;
 $__wn = $__wn|0;
 $__we = $__we|0;
 var $$ = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i117 = 0, $$0$i$i$i$i149 = 0, $$0$i$i$i$i174 = 0, $$0$i$i$i$i22 = 0, $$0$i$i$i$i43 = 0, $$0$i$i$i$i83 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i123 = 0, $$0$i$i1$i$i155 = 0, $$0$i$i1$i$i180 = 0, $$0$i$i1$i$i28 = 0, $$0$i$i1$i$i49 = 0, $$0$i$i1$i$i89 = 0, $$0$i$i101 = 0, $$0$i$i110 = 0, $$0$i$i113 = 0;
 var $$0$i$i135 = 0, $$0$i$i146 = 0, $$0$i$i170 = 0, $$0$i$i37 = 0, $$0$i$i41 = 0, $$0$i$i58 = 0, $$0$i$i64 = 0, $$0$i$i69 = 0, $$0$i$i77 = 0, $$0$i$i80 = 0, $$288 = 0, $$289 = 0, $$290 = 0, $$291 = 0, $$292 = 0, $$idx = 0, $$idx$val = 0, $$idx28 = 0, $$idx28$val = 0, $$idx29 = 0;
 var $$idx29$val = 0, $$idx30 = 0, $$idx30$val = 0, $$phi$trans$insert = 0, $$phi$trans$insert11 = 0, $$phi$trans$insert14 = 0, $$phi$trans$insert17 = 0, $$phi$trans$insert19 = 0, $$phi$trans$insert22 = 0, $$phi$trans$insert26 = 0, $$phi$trans$insert29 = 0, $$phi$trans$insert32 = 0, $$phi$trans$insert8 = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i119 = 0, $$pre$i$i$i151 = 0, $$pre$i$i$i176 = 0, $$pre$i$i$i24 = 0, $$pre$i$i$i45 = 0;
 var $$pre$i$i$i85 = 0, $$pre$i3$i$i = 0, $$pre$i3$i$i125 = 0, $$pre$i3$i$i157 = 0, $$pre$i3$i$i182 = 0, $$pre$i3$i$i182268 = 0, $$pre$i3$i$i182269 = 0, $$pre$i3$i$i279$ph = 0, $$pre$i3$i$i279287 = 0, $$pre$i3$i$i51 = 0, $$pre$i3$i$i51260 = 0, $$pre$i3$i$i51262 = 0, $$pre$i3$i$i91 = 0, $$pre$i3$i$i91273$ph = 0, $$pre$i3$i$i91273284 = 0, $$pre10 = 0, $$pre12 = 0, $$pre13 = 0, $$pre15 = 0, $$pre16 = 0;
 var $$pre18 = 0, $$pre20 = 0, $$pre21 = 0, $$pre23 = 0, $$pre25 = 0, $$pre263 = 0, $$pre264 = 0, $$pre265 = 0, $$pre266 = 0, $$pre267 = 0, $$pre27 = 0, $$pre271 = 0, $$pre275 = 0, $$pre277 = 0, $$pre28 = 0, $$pre30 = 0, $$pre31 = 0, $$pre33 = 0, $$pre4 = 0, $$pre5 = 0;
 var $$pre7 = 0, $$pre9 = 0, $$sum = 0, $$sum280 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0;
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0;
 var $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0;
 var $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0;
 var $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0;
 var $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0;
 var $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0;
 var $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0;
 var $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0;
 var $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0;
 var $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0;
 var $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0;
 var $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0;
 var $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0;
 var $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0;
 var $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0;
 var $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0;
 var $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0;
 var $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0;
 var $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0;
 var $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0;
 var $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0;
 var $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0;
 var $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0;
 var $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0;
 var $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0;
 var $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0;
 var $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0;
 var $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp$0 = 0, $__e$sroa$0$0 = 0, $__e$sroa$0$10 = 0, $__e$sroa$0$11 = 0, $__e$sroa$0$12 = 0, $__e$sroa$0$13 = 0, $__e$sroa$0$14 = 0, $__e$sroa$0$15 = 0, $__e$sroa$0$16 = 0, $__e$sroa$0$17 = 0, $__e$sroa$0$18 = 0, $__e$sroa$0$19 = 0, $__e$sroa$0$2 = 0, $__e$sroa$0$20 = 0;
 var $__e$sroa$0$3 = 0, $__e$sroa$0$4 = 0, $__e$sroa$0$5 = 0, $__e$sroa$0$6 = 0, $__e$sroa$0$7 = 0, $__e$sroa$0$8 = 0, $__e$sroa$0$9 = 0, $__et = 0, $__fd$0 = 0, $__fd$1 = 0, $__fd$2 = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$1 = 0, $__nsn = 0;
 var $__nsn$__trailing_sign$0 = 0, $__nsn$__trailing_sign$010 = 0, $__p$0250 = 0, $__pat = 0, $__psn = 0, $__psn$__trailing_sign$0 = 0, $__psn$__trailing_sign$09 = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0252 = 0, $__trailing_sign$1 = 0, $__ts$0 = 0, $brmerge = 0, $cond = 0, $or$cond = 0, $or$cond12 = 0, $or$cond6 = 0, $or$cond8 = 0, $phitmp$i$i$i = 0;
 var $phitmp$i$i$i120 = 0, $phitmp$i$i$i152 = 0, $phitmp$i$i$i177 = 0, $phitmp$i$i$i25 = 0, $phitmp$i$i$i46 = 0, $phitmp$i$i$i86 = 0, $phitmp$i4$i$i = 0, $phitmp$i4$i$i158 = 0, $phitmp$i4$i$i183 = 0, $phitmp$i4$i$i52 = 0, $phitmp$i4$i$i92 = 0, $storemerge$i = 0, $switch = 0, $tmp$i$i = 0, $tmp$i$i160 = 0, $tmp$i$i185 = 0, $tmp$i$i54 = 0, $tmp$i$i94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592|0;
 $0 = sp + 76|0;
 $1 = sp + 112|0;
 $2 = sp;
 $3 = sp + 176|0;
 $4 = sp + 64|0;
 $5 = sp + 24|0;
 $6 = sp + 28|0;
 $7 = sp + 124|0;
 $8 = sp + 148|0;
 $9 = sp + 164|0;
 $10 = sp + 188|0;
 $__gbuf = sp + 192|0;
 $__gb = sp + 80|0;
 $__gn = sp + 88|0;
 $__ge = sp + 104|0;
 $__pat = sp + 108|0;
 $__grp = sp + 92|0;
 $__sym = sp + 40|0;
 $__psn = sp + 136|0;
 $__nsn = sp + 12|0;
 $__spaces = sp + 52|0;
 $__et = sp + 160|0;
 HEAP32[$10>>2] = $__we;
 HEAP32[$__gb>>2] = $__gbuf;
 $11 = (($__gb) + 4|0);
 HEAP32[$11>>2] = 140;
 HEAP32[$__gn>>2] = $__gbuf;
 $12 = (($__gbuf) + 400|0);
 HEAP32[$__ge>>2] = $12;
 HEAP32[$__pat>>2] = 0;
 ;HEAP32[$__grp+0>>2]=0|0;HEAP32[$__grp+4>>2]=0|0;HEAP32[$__grp+8>>2]=0|0;
 ;HEAP32[$__sym+0>>2]=0|0;HEAP32[$__sym+4>>2]=0|0;HEAP32[$__sym+8>>2]=0|0;
 ;HEAP32[$__psn+0>>2]=0|0;HEAP32[$__psn+4>>2]=0|0;HEAP32[$__psn+8>>2]=0|0;
 ;HEAP32[$__nsn+0>>2]=0|0;HEAP32[$__nsn+4>>2]=0|0;HEAP32[$__nsn+8>>2]=0|0;
 ;HEAP32[$__spaces+0>>2]=0|0;HEAP32[$__spaces+4>>2]=0|0;HEAP32[$__spaces+8>>2]=0|0;
 if ($__intl) {
  $13 = (__ZNSt3__16locale2id5__getEv(40216)|0);
  $$idx29 = (($__loc$0$0$val) + 8|0);
  $$idx29$val = HEAP32[$$idx29>>2]|0;
  $$idx30 = (($__loc$0$0$val) + 12|0);
  $$idx30$val = HEAP32[$$idx30>>2]|0;
  $14 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx29$val,$$idx30$val,$13)|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($15) + 44|0);
  $17 = HEAP32[$16>>2]|0;
  FUNCTION_TABLE_vii[$17 & 63]($0,$14);
  $18 = HEAP32[$0>>2]|0;
  HEAP32[$__pat>>2] = $18;
  $19 = HEAP32[$14>>2]|0;
  $20 = (($19) + 32|0);
  $21 = HEAP32[$20>>2]|0;
  FUNCTION_TABLE_vii[$21 & 63]($1,$14);
  $22 = HEAP8[$__nsn>>0]|0;
  $23 = $22 & 1;
  $24 = ($23<<24>>24)==(0);
  if ($24) {
   $28 = (($__nsn) + 4|0);
   HEAP32[$28>>2] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $25 = (($__nsn) + 8|0);
   $26 = HEAP32[$25>>2]|0;
   HEAP32[$26>>2] = 0;
   $27 = (($__nsn) + 4|0);
   HEAP32[$27>>2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn);
  ;HEAP32[$__nsn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$1+8>>2]|0;
  ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
  $$pre4 = HEAP32[$14>>2]|0;
  $$phi$trans$insert = (($$pre4) + 28|0);
  $$pre5 = HEAP32[$$phi$trans$insert>>2]|0;
  FUNCTION_TABLE_vii[$$pre5 & 63]($2,$14);
  $29 = HEAP8[$__psn>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $35 = (($__psn) + 4|0);
   HEAP32[$35>>2] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $32 = (($__psn) + 8|0);
   $33 = HEAP32[$32>>2]|0;
   HEAP32[$33>>2] = 0;
   $34 = (($__psn) + 4|0);
   HEAP32[$34>>2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn);
  ;HEAP32[$__psn+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$2+8>>2]|0;
  ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
  $$pre7 = HEAP32[$14>>2]|0;
  $$phi$trans$insert8 = (($$pre7) + 12|0);
  $$pre9 = HEAP32[$$phi$trans$insert8>>2]|0;
  $36 = (FUNCTION_TABLE_ii[$$pre9 & 127]($14)|0);
  $37 = HEAP32[$14>>2]|0;
  $38 = (($37) + 16|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (FUNCTION_TABLE_ii[$39 & 127]($14)|0);
  $41 = HEAP32[$14>>2]|0;
  $42 = (($41) + 20|0);
  $43 = HEAP32[$42>>2]|0;
  FUNCTION_TABLE_vii[$43 & 63]($3,$14);
  $44 = HEAP8[$__grp>>0]|0;
  $45 = $44 & 1;
  $46 = ($45<<24>>24)==(0);
  if ($46) {
   $50 = (($__grp) + 1|0);
   HEAP8[$50>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $47 = (($__grp) + 8|0);
   $48 = HEAP32[$47>>2]|0;
   HEAP8[$48>>0] = 0;
   $49 = (($__grp) + 4|0);
   HEAP32[$49>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
  ;HEAP32[$__grp+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$3+8>>2]|0;
  ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
  $$pre10 = HEAP32[$14>>2]|0;
  $$phi$trans$insert11 = (($$pre10) + 24|0);
  $$pre12 = HEAP32[$$phi$trans$insert11>>2]|0;
  FUNCTION_TABLE_vii[$$pre12 & 63]($4,$14);
  $51 = HEAP8[$__sym>>0]|0;
  $52 = $51 & 1;
  $53 = ($52<<24>>24)==(0);
  if ($53) {
   $57 = (($__sym) + 4|0);
   HEAP32[$57>>2] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $54 = (($__sym) + 8|0);
   $55 = HEAP32[$54>>2]|0;
   HEAP32[$55>>2] = 0;
   $56 = (($__sym) + 4|0);
   HEAP32[$56>>2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym);
  ;HEAP32[$__sym+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$4+8>>2]|0;
  ;HEAP32[$4+0>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
  $$pre13 = HEAP32[$14>>2]|0;
  $$phi$trans$insert14 = (($$pre13) + 36|0);
  $$pre15 = HEAP32[$$phi$trans$insert14>>2]|0;
  $58 = (FUNCTION_TABLE_ii[$$pre15 & 127]($14)|0);
  $__dp$0 = $36;$__ts$0 = $40;$storemerge$i = $58;
 } else {
  $59 = (__ZNSt3__16locale2id5__getEv(40152)|0);
  $$idx = (($__loc$0$0$val) + 8|0);
  $$idx$val = HEAP32[$$idx>>2]|0;
  $$idx28 = (($__loc$0$0$val) + 12|0);
  $$idx28$val = HEAP32[$$idx28>>2]|0;
  $60 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx28$val,$59)|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = (($61) + 44|0);
  $63 = HEAP32[$62>>2]|0;
  FUNCTION_TABLE_vii[$63 & 63]($5,$60);
  $64 = HEAP32[$5>>2]|0;
  HEAP32[$__pat>>2] = $64;
  $65 = HEAP32[$60>>2]|0;
  $66 = (($65) + 32|0);
  $67 = HEAP32[$66>>2]|0;
  FUNCTION_TABLE_vii[$67 & 63]($6,$60);
  $68 = HEAP8[$__nsn>>0]|0;
  $69 = $68 & 1;
  $70 = ($69<<24>>24)==(0);
  if ($70) {
   $74 = (($__nsn) + 4|0);
   HEAP32[$74>>2] = 0;
   HEAP8[$__nsn>>0] = 0;
  } else {
   $71 = (($__nsn) + 8|0);
   $72 = HEAP32[$71>>2]|0;
   HEAP32[$72>>2] = 0;
   $73 = (($__nsn) + 4|0);
   HEAP32[$73>>2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__nsn);
  ;HEAP32[$__nsn+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$__nsn+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$__nsn+8>>2]=HEAP32[$6+8>>2]|0;
  ;HEAP32[$6+0>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;
  $$pre21 = HEAP32[$60>>2]|0;
  $$phi$trans$insert22 = (($$pre21) + 28|0);
  $$pre23 = HEAP32[$$phi$trans$insert22>>2]|0;
  FUNCTION_TABLE_vii[$$pre23 & 63]($7,$60);
  $75 = HEAP8[$__psn>>0]|0;
  $76 = $75 & 1;
  $77 = ($76<<24>>24)==(0);
  if ($77) {
   $81 = (($__psn) + 4|0);
   HEAP32[$81>>2] = 0;
   HEAP8[$__psn>>0] = 0;
  } else {
   $78 = (($__psn) + 8|0);
   $79 = HEAP32[$78>>2]|0;
   HEAP32[$79>>2] = 0;
   $80 = (($__psn) + 4|0);
   HEAP32[$80>>2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__psn);
  ;HEAP32[$__psn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__psn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__psn+8>>2]=HEAP32[$7+8>>2]|0;
  ;HEAP32[$7+0>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;
  $$pre25 = HEAP32[$60>>2]|0;
  $$phi$trans$insert26 = (($$pre25) + 12|0);
  $$pre27 = HEAP32[$$phi$trans$insert26>>2]|0;
  $82 = (FUNCTION_TABLE_ii[$$pre27 & 127]($60)|0);
  $83 = HEAP32[$60>>2]|0;
  $84 = (($83) + 16|0);
  $85 = HEAP32[$84>>2]|0;
  $86 = (FUNCTION_TABLE_ii[$85 & 127]($60)|0);
  $87 = HEAP32[$60>>2]|0;
  $88 = (($87) + 20|0);
  $89 = HEAP32[$88>>2]|0;
  FUNCTION_TABLE_vii[$89 & 63]($8,$60);
  $90 = HEAP8[$__grp>>0]|0;
  $91 = $90 & 1;
  $92 = ($91<<24>>24)==(0);
  if ($92) {
   $96 = (($__grp) + 1|0);
   HEAP8[$96>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $93 = (($__grp) + 8|0);
   $94 = HEAP32[$93>>2]|0;
   HEAP8[$94>>0] = 0;
   $95 = (($__grp) + 4|0);
   HEAP32[$95>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
  ;HEAP32[$__grp+0>>2]=HEAP32[$8+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$8+8>>2]|0;
  ;HEAP32[$8+0>>2]=0|0;HEAP32[$8+4>>2]=0|0;HEAP32[$8+8>>2]=0|0;
  $$pre28 = HEAP32[$60>>2]|0;
  $$phi$trans$insert29 = (($$pre28) + 24|0);
  $$pre30 = HEAP32[$$phi$trans$insert29>>2]|0;
  FUNCTION_TABLE_vii[$$pre30 & 63]($9,$60);
  $97 = HEAP8[$__sym>>0]|0;
  $98 = $97 & 1;
  $99 = ($98<<24>>24)==(0);
  if ($99) {
   $103 = (($__sym) + 4|0);
   HEAP32[$103>>2] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $100 = (($__sym) + 8|0);
   $101 = HEAP32[$100>>2]|0;
   HEAP32[$101>>2] = 0;
   $102 = (($__sym) + 4|0);
   HEAP32[$102>>2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym);
  ;HEAP32[$__sym+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$9+8>>2]|0;
  ;HEAP32[$9+0>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
  $$pre31 = HEAP32[$60>>2]|0;
  $$phi$trans$insert32 = (($$pre31) + 36|0);
  $$pre33 = HEAP32[$$phi$trans$insert32>>2]|0;
  $104 = (FUNCTION_TABLE_ii[$$pre33 & 127]($60)|0);
  $__dp$0 = $82;$__ts$0 = $86;$storemerge$i = $104;
 }
 $105 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wn>>2] = $105;
 $106 = (($__nsn) + 4|0);
 $107 = (($__nsn) + 8|0);
 $108 = (($__psn) + 4|0);
 $109 = (($__psn) + 8|0);
 $110 = $__flags & 512;
 $111 = ($110|0)!=(0);
 $112 = (($__sym) + 4|0);
 $113 = (($__sym) + 8|0);
 $114 = (($__spaces) + 4|0);
 $115 = (($__spaces) + 8|0);
 $116 = (($__pat) + 3|0);
 $117 = (($__grp) + 4|0);
 $844 = $__gbuf;$__e$sroa$0$0 = $__e$0;$__fd$0 = $storemerge$i;$__p$0250 = 0;$__trailing_sign$0252 = 0;
 L37: while(1) {
  $118 = HEAP32[$__b>>2]|0;
  $119 = ($118|0)==(0|0);
  do {
   if ($119) {
    $845 = 1;
   } else {
    $120 = (($118) + 12|0);
    $121 = HEAP32[$120>>2]|0;
    $122 = (($118) + 16|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = ($121|0)==($123|0);
    if ($124) {
     $125 = HEAP32[$118>>2]|0;
     $126 = (($125) + 36|0);
     $127 = HEAP32[$126>>2]|0;
     $128 = (FUNCTION_TABLE_ii[$127 & 127]($118)|0);
     $$0$i$i$i$i22 = $128;
    } else {
     $129 = HEAP32[$121>>2]|0;
     $$0$i$i$i$i22 = $129;
    }
    $130 = ($$0$i$i$i$i22|0)==(-1);
    if ($130) {
     HEAP32[$__b>>2] = 0;
     $845 = 1;
     break;
    } else {
     $$pre$i$i$i24 = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i25 = ($$pre$i$i$i24|0)==(0|0);
     $845 = $phitmp$i$i$i25;
     break;
    }
   }
  } while(0);
  $131 = ($__e$sroa$0$0|0)==(0|0);
  if ($131) {
   label = 41;
  } else {
   $132 = (($__e$sroa$0$0) + 12|0);
   $133 = HEAP32[$132>>2]|0;
   $134 = (($__e$sroa$0$0) + 16|0);
   $135 = HEAP32[$134>>2]|0;
   $136 = ($133|0)==($135|0);
   if ($136) {
    $137 = HEAP32[$__e$sroa$0$0>>2]|0;
    $138 = (($137) + 36|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = (FUNCTION_TABLE_ii[$139 & 127]($__e$sroa$0$0)|0);
    $$0$i$i1$i$i28 = $140;
   } else {
    $141 = HEAP32[$133>>2]|0;
    $$0$i$i1$i$i28 = $141;
   }
   $142 = ($$0$i$i1$i$i28|0)==(-1);
   if ($142) {
    label = 41;
   } else {
    if ($845) {
     $__e$sroa$0$2 = $__e$sroa$0$0;
    } else {
     $815 = $844;$846 = $__e$sroa$0$0;$__trailing_sign$0$lcssa = $__trailing_sign$0252;
     label = 286;
     break;
    }
   }
  }
  if ((label|0) == 41) {
   label = 0;
   if ($845) {
    $815 = $844;$846 = 0;$__trailing_sign$0$lcssa = $__trailing_sign$0252;
    label = 286;
    break;
   } else {
    $__e$sroa$0$2 = 0;
   }
  }
  $143 = (($__pat) + ($__p$0250)|0);
  $144 = HEAP8[$143>>0]|0;
  $145 = $144 << 24 >> 24;
  L59: do {
   switch ($145|0) {
   case 0:  {
    label = 54;
    break;
   }
   case 2:  {
    $390 = ($__trailing_sign$0252|0)!=(0|0);
    $391 = ($__p$0250>>>0)<(2);
    $or$cond = $390 | $391;
    if (!($or$cond)) {
     $392 = ($__p$0250|0)==(2);
     if ($392) {
      $393 = HEAP8[$116>>0]|0;
      $394 = ($393<<24>>24)!=(0);
      $395 = $394;
     } else {
      $395 = 0;
     }
     $brmerge = $111 | $395;
     if (!($brmerge)) {
      $847 = $__e$sroa$0$2;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = 0;
      break L59;
     }
    }
    $396 = HEAP8[$__sym>>0]|0;
    $397 = $396 & 1;
    $398 = ($397<<24>>24)==(0);
    $399 = HEAP32[$113>>2]|0;
    $$291 = $398 ? $112 : $399;
    $400 = ($__p$0250|0)==(0);
    L67: do {
     if ($400) {
      $$pre$i3$i$i182 = $__e$sroa$0$2;$458 = $396;$468 = $$291;$483 = $__e$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$2;
     } else {
      $401 = (($__p$0250) + -1)|0;
      $402 = (($__pat) + ($401)|0);
      $403 = HEAP8[$402>>0]|0;
      $switch = ($403&255)<(2);
      if ($switch) {
       $405 = $396;$415 = $$291;
       while(1) {
        $404 = $405 & 1;
        $406 = ($404<<24>>24)==(0);
        if ($406) {
         $409 = $405&255;
         $410 = $409 >>> 1;
         $412 = $112;$413 = $410;
        } else {
         $407 = HEAP32[$113>>2]|0;
         $408 = HEAP32[$112>>2]|0;
         $412 = $407;$413 = $408;
        }
        $411 = (($412) + ($413<<2)|0);
        $414 = ($415|0)==($411|0);
        if ($414) {
         $423 = $405;
         break;
        }
        $416 = HEAP32[$415>>2]|0;
        $417 = HEAP32[$__ct>>2]|0;
        $418 = (($417) + 12|0);
        $419 = HEAP32[$418>>2]|0;
        $420 = (FUNCTION_TABLE_iiii[$419 & 31]($__ct,8192,$416)|0);
        if (!($420)) {
         label = 153;
         break;
        }
        $421 = (($415) + 4|0);
        $$pre265 = HEAP8[$__sym>>0]|0;
        $405 = $$pre265;$415 = $421;
       }
       if ((label|0) == 153) {
        label = 0;
        $$pre266 = HEAP8[$__sym>>0]|0;
        $423 = $$pre266;
       }
       $422 = $423 & 1;
       $424 = ($422<<24>>24)==(0);
       $425 = HEAP32[$113>>2]|0;
       $$292 = $424 ? $112 : $425;
       $426 = $415;
       $427 = $$292;
       $428 = (($426) - ($427))|0;
       $429 = $428 >> 2;
       $430 = HEAP8[$__spaces>>0]|0;
       $431 = $430 & 1;
       $432 = ($431<<24>>24)==(0);
       if ($432) {
        $434 = $430&255;
        $435 = $434 >>> 1;
        $437 = $435;
       } else {
        $433 = HEAP32[$114>>2]|0;
        $437 = $433;
       }
       $436 = ($429>>>0)>($437>>>0);
       if ($436) {
        $$pre$i3$i$i182 = $__e$sroa$0$2;$458 = $423;$468 = $$292;$483 = $__e$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$2;
       } else {
        if ($432) {
         $441 = $430&255;
         $442 = $441 >>> 1;
         $$sum280 = (($442) - ($429))|0;
         $443 = (($114) + ($$sum280<<2)|0);
         $445 = $114;$446 = $442;$448 = $443;
        } else {
         $438 = HEAP32[$115>>2]|0;
         $439 = HEAP32[$114>>2]|0;
         $$sum = (($439) - ($429))|0;
         $440 = (($438) + ($$sum<<2)|0);
         $445 = $438;$446 = $439;$448 = $440;
        }
        $444 = (($445) + ($446<<2)|0);
        $447 = ($448|0)==($444|0);
        if ($447) {
         $$pre$i3$i$i182 = $__e$sroa$0$2;$458 = $423;$468 = $415;$483 = $__e$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$2;
        } else {
         $450 = $448;$452 = $$292;
         while(1) {
          $449 = HEAP32[$450>>2]|0;
          $451 = HEAP32[$452>>2]|0;
          $453 = ($449|0)==($451|0);
          if (!($453)) {
           $$pre$i3$i$i182 = $__e$sroa$0$2;$458 = $423;$468 = $$292;$483 = $__e$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$2;
           break L67;
          }
          $454 = (($450) + 4|0);
          $455 = (($452) + 4|0);
          $456 = ($454|0)==($444|0);
          if ($456) {
           $$pre$i3$i$i182 = $__e$sroa$0$2;$458 = $423;$468 = $415;$483 = $__e$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$2;
           break;
          } else {
           $450 = $454;$452 = $455;
          }
         }
        }
       }
      } else {
       $$pre$i3$i$i182 = $__e$sroa$0$2;$458 = $396;$468 = $$291;$483 = $__e$sroa$0$2;$__e$sroa$0$6 = $__e$sroa$0$2;
      }
     }
    } while(0);
    while(1) {
     $457 = $458 & 1;
     $459 = ($457<<24>>24)==(0);
     if ($459) {
      $462 = $458&255;
      $463 = $462 >>> 1;
      $465 = $112;$466 = $463;
     } else {
      $460 = HEAP32[$113>>2]|0;
      $461 = HEAP32[$112>>2]|0;
      $465 = $460;$466 = $461;
     }
     $464 = (($465) + ($466<<2)|0);
     $467 = ($468|0)==($464|0);
     if ($467) {
      $850 = $$pre$i3$i$i182;$__e$sroa$0$9 = $__e$sroa$0$6;
      break;
     }
     $469 = HEAP32[$__b>>2]|0;
     $470 = ($469|0)==(0|0);
     do {
      if ($470) {
       $495 = 1;
      } else {
       $471 = (($469) + 12|0);
       $472 = HEAP32[$471>>2]|0;
       $473 = (($469) + 16|0);
       $474 = HEAP32[$473>>2]|0;
       $475 = ($472|0)==($474|0);
       if ($475) {
        $476 = HEAP32[$469>>2]|0;
        $477 = (($476) + 36|0);
        $478 = HEAP32[$477>>2]|0;
        $479 = (FUNCTION_TABLE_ii[$478 & 127]($469)|0);
        $$0$i$i$i$i174 = $479;
       } else {
        $480 = HEAP32[$472>>2]|0;
        $$0$i$i$i$i174 = $480;
       }
       $481 = ($$0$i$i$i$i174|0)==(-1);
       if ($481) {
        HEAP32[$__b>>2] = 0;
        $495 = 1;
        break;
       } else {
        $$pre$i$i$i176 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i177 = ($$pre$i$i$i176|0)==(0|0);
        $495 = $phitmp$i$i$i177;
        break;
       }
      }
     } while(0);
     $482 = ($483|0)==(0|0);
     if ($482) {
      $$pre$i3$i$i182269 = $$pre$i3$i$i182;$__e$sroa$0$7 = $__e$sroa$0$6;
      label = 181;
     } else {
      $484 = (($483) + 12|0);
      $485 = HEAP32[$484>>2]|0;
      $486 = (($483) + 16|0);
      $487 = HEAP32[$486>>2]|0;
      $488 = ($485|0)==($487|0);
      if ($488) {
       $489 = HEAP32[$483>>2]|0;
       $490 = (($489) + 36|0);
       $491 = HEAP32[$490>>2]|0;
       $492 = (FUNCTION_TABLE_ii[$491 & 127]($483)|0);
       $$0$i$i1$i$i180 = $492;
      } else {
       $493 = HEAP32[$485>>2]|0;
       $$0$i$i1$i$i180 = $493;
      }
      $494 = ($$0$i$i1$i$i180|0)==(-1);
      if ($494) {
       $$pre$i3$i$i182269 = 0;$__e$sroa$0$7 = 0;
       label = 181;
      } else {
       $phitmp$i4$i$i183 = ($$pre$i3$i$i182|0)==(0|0);
       $tmp$i$i185 = $495 ^ $phitmp$i4$i$i183;
       if ($tmp$i$i185) {
        $$pre$i3$i$i182268 = $$pre$i3$i$i182;$851 = $$pre$i3$i$i182;$__e$sroa$0$8 = $__e$sroa$0$6;
       } else {
        $850 = $$pre$i3$i$i182;$__e$sroa$0$9 = $__e$sroa$0$6;
        break;
       }
      }
     }
     if ((label|0) == 181) {
      label = 0;
      if ($495) {
       $850 = $$pre$i3$i$i182269;$__e$sroa$0$9 = $__e$sroa$0$7;
       break;
      } else {
       $$pre$i3$i$i182268 = $$pre$i3$i$i182269;$851 = 0;$__e$sroa$0$8 = $__e$sroa$0$7;
      }
     }
     $496 = HEAP32[$__b>>2]|0;
     $497 = (($496) + 12|0);
     $498 = HEAP32[$497>>2]|0;
     $499 = (($496) + 16|0);
     $500 = HEAP32[$499>>2]|0;
     $501 = ($498|0)==($500|0);
     if ($501) {
      $502 = HEAP32[$496>>2]|0;
      $503 = (($502) + 36|0);
      $504 = HEAP32[$503>>2]|0;
      $505 = (FUNCTION_TABLE_ii[$504 & 127]($496)|0);
      $$0$i$i170 = $505;
     } else {
      $506 = HEAP32[$498>>2]|0;
      $$0$i$i170 = $506;
     }
     $507 = HEAP32[$468>>2]|0;
     $508 = ($$0$i$i170|0)==($507|0);
     if (!($508)) {
      $850 = $$pre$i3$i$i182268;$__e$sroa$0$9 = $__e$sroa$0$8;
      break;
     }
     $509 = HEAP32[$__b>>2]|0;
     $510 = (($509) + 12|0);
     $511 = HEAP32[$510>>2]|0;
     $512 = (($509) + 16|0);
     $513 = HEAP32[$512>>2]|0;
     $514 = ($511|0)==($513|0);
     if ($514) {
      $515 = HEAP32[$509>>2]|0;
      $516 = (($515) + 40|0);
      $517 = HEAP32[$516>>2]|0;
      (FUNCTION_TABLE_ii[$517 & 127]($509)|0);
     } else {
      $518 = (($511) + 4|0);
      HEAP32[$510>>2] = $518;
     }
     $519 = (($468) + 4|0);
     $$pre267 = HEAP8[$__sym>>0]|0;
     $$pre$i3$i$i182 = $$pre$i3$i$i182268;$458 = $$pre267;$468 = $519;$483 = $851;$__e$sroa$0$6 = $__e$sroa$0$8;
    }
    if ($111) {
     $520 = HEAP8[$__sym>>0]|0;
     $521 = $520 & 1;
     $522 = ($521<<24>>24)==(0);
     if ($522) {
      $525 = $520&255;
      $526 = $525 >>> 1;
      $528 = $112;$529 = $526;
     } else {
      $523 = HEAP32[$113>>2]|0;
      $524 = HEAP32[$112>>2]|0;
      $528 = $523;$529 = $524;
     }
     $527 = (($528) + ($529<<2)|0);
     $530 = ($468|0)==($527|0);
     if ($530) {
      $847 = $850;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$9;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0252;
     } else {
      label = 196;
      break L37;
     }
    } else {
     $847 = $850;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$9;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0252;
    }
    break;
   }
   case 1:  {
    $cond = ($__p$0250|0)==(3);
    if ($cond) {
     $815 = $844;$846 = $__e$sroa$0$2;$__trailing_sign$0$lcssa = $__trailing_sign$0252;
     label = 286;
     break L37;
    }
    $146 = HEAP32[$__b>>2]|0;
    $147 = (($146) + 12|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = (($146) + 16|0);
    $150 = HEAP32[$149>>2]|0;
    $151 = ($148|0)==($150|0);
    if ($151) {
     $152 = HEAP32[$146>>2]|0;
     $153 = (($152) + 36|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = (FUNCTION_TABLE_ii[$154 & 127]($146)|0);
     $$0$i$i37 = $155;
    } else {
     $156 = HEAP32[$148>>2]|0;
     $$0$i$i37 = $156;
    }
    $157 = HEAP32[$__ct>>2]|0;
    $158 = (($157) + 12|0);
    $159 = HEAP32[$158>>2]|0;
    $160 = (FUNCTION_TABLE_iiii[$159 & 31]($__ct,8192,$$0$i$i37)|0);
    if (!($160)) {
     label = 53;
     break L37;
    }
    $161 = HEAP32[$__b>>2]|0;
    $162 = (($161) + 12|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = (($161) + 16|0);
    $165 = HEAP32[$164>>2]|0;
    $166 = ($163|0)==($165|0);
    if ($166) {
     $167 = HEAP32[$161>>2]|0;
     $168 = (($167) + 40|0);
     $169 = HEAP32[$168>>2]|0;
     $170 = (FUNCTION_TABLE_ii[$169 & 127]($161)|0);
     $$0$i$i41 = $170;
    } else {
     $171 = (($163) + 4|0);
     HEAP32[$162>>2] = $171;
     $172 = HEAP32[$163>>2]|0;
     $$0$i$i41 = $172;
    }
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces,$$0$i$i41);
    label = 54;
    break;
   }
   case 4:  {
    $$pre$i3$i$i157 = $__e$sroa$0$2;$547 = $__e$sroa$0$2;$593 = $844;$__e$sroa$0$10 = $__e$sroa$0$2;$__ng$0 = 0;
    while(1) {
     $533 = HEAP32[$__b>>2]|0;
     $534 = ($533|0)==(0|0);
     do {
      if ($534) {
       $559 = 1;
      } else {
       $535 = (($533) + 12|0);
       $536 = HEAP32[$535>>2]|0;
       $537 = (($533) + 16|0);
       $538 = HEAP32[$537>>2]|0;
       $539 = ($536|0)==($538|0);
       if ($539) {
        $540 = HEAP32[$533>>2]|0;
        $541 = (($540) + 36|0);
        $542 = HEAP32[$541>>2]|0;
        $543 = (FUNCTION_TABLE_ii[$542 & 127]($533)|0);
        $$0$i$i$i$i149 = $543;
       } else {
        $544 = HEAP32[$536>>2]|0;
        $$0$i$i$i$i149 = $544;
       }
       $545 = ($$0$i$i$i$i149|0)==(-1);
       if ($545) {
        HEAP32[$__b>>2] = 0;
        $559 = 1;
        break;
       } else {
        $$pre$i$i$i151 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i152 = ($$pre$i$i$i151|0)==(0|0);
        $559 = $phitmp$i$i$i152;
        break;
       }
      }
     } while(0);
     $546 = ($547|0)==(0|0);
     if ($546) {
      $852 = $$pre$i3$i$i157;$__e$sroa$0$11 = $__e$sroa$0$10;
      label = 209;
     } else {
      $548 = (($547) + 12|0);
      $549 = HEAP32[$548>>2]|0;
      $550 = (($547) + 16|0);
      $551 = HEAP32[$550>>2]|0;
      $552 = ($549|0)==($551|0);
      if ($552) {
       $553 = HEAP32[$547>>2]|0;
       $554 = (($553) + 36|0);
       $555 = HEAP32[$554>>2]|0;
       $556 = (FUNCTION_TABLE_ii[$555 & 127]($547)|0);
       $$0$i$i1$i$i155 = $556;
      } else {
       $557 = HEAP32[$549>>2]|0;
       $$0$i$i1$i$i155 = $557;
      }
      $558 = ($$0$i$i1$i$i155|0)==(-1);
      if ($558) {
       $852 = 0;$__e$sroa$0$11 = 0;
       label = 209;
      } else {
       $phitmp$i4$i$i158 = ($$pre$i3$i$i157|0)==(0|0);
       $tmp$i$i160 = $559 ^ $phitmp$i4$i$i158;
       if ($tmp$i$i160) {
        $853 = $$pre$i3$i$i157;$854 = $$pre$i3$i$i157;$__e$sroa$0$12 = $__e$sroa$0$10;
       } else {
        $$pre$i3$i$i125 = $$pre$i3$i$i157;$__e$sroa$0$13 = $__e$sroa$0$10;
        break;
       }
      }
     }
     if ((label|0) == 209) {
      label = 0;
      if ($559) {
       $$pre$i3$i$i125 = $852;$__e$sroa$0$13 = $__e$sroa$0$11;
       break;
      } else {
       $853 = $852;$854 = 0;$__e$sroa$0$12 = $__e$sroa$0$11;
      }
     }
     $560 = HEAP32[$__b>>2]|0;
     $561 = (($560) + 12|0);
     $562 = HEAP32[$561>>2]|0;
     $563 = (($560) + 16|0);
     $564 = HEAP32[$563>>2]|0;
     $565 = ($562|0)==($564|0);
     if ($565) {
      $566 = HEAP32[$560>>2]|0;
      $567 = (($566) + 36|0);
      $568 = HEAP32[$567>>2]|0;
      $569 = (FUNCTION_TABLE_ii[$568 & 127]($560)|0);
      $$0$i$i146 = $569;
     } else {
      $570 = HEAP32[$562>>2]|0;
      $$0$i$i146 = $570;
     }
     $571 = HEAP32[$__ct>>2]|0;
     $572 = (($571) + 12|0);
     $573 = HEAP32[$572>>2]|0;
     $574 = (FUNCTION_TABLE_iiii[$573 & 31]($__ct,2048,$$0$i$i146)|0);
     if ($574) {
      $575 = HEAP32[$__wn>>2]|0;
      $576 = HEAP32[$10>>2]|0;
      $577 = ($575|0)==($576|0);
      if ($577) {
       __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$10);
       $$pre275 = HEAP32[$__wn>>2]|0;
       $579 = $$pre275;
      } else {
       $579 = $575;
      }
      $578 = (($579) + 4|0);
      HEAP32[$__wn>>2] = $578;
      HEAP32[$579>>2] = $$0$i$i146;
      $580 = (($__ng$0) + 1)|0;
      $855 = $593;$__ng$1 = $580;
     } else {
      $581 = HEAP8[$__grp>>0]|0;
      $582 = $581 & 1;
      $583 = ($582<<24>>24)==(0);
      if ($583) {
       $585 = $581&255;
       $586 = $585 >>> 1;
       $588 = $586;
      } else {
       $584 = HEAP32[$117>>2]|0;
       $588 = $584;
      }
      $587 = ($588|0)!=(0);
      $589 = ($__ng$0|0)!=(0);
      $or$cond6 = $587 & $589;
      $590 = ($$0$i$i146|0)==($__ts$0|0);
      $or$cond12 = $or$cond6 & $590;
      if (!($or$cond12)) {
       $$pre$i3$i$i125 = $853;$__e$sroa$0$13 = $__e$sroa$0$12;
       break;
      }
      $591 = HEAP32[$__ge>>2]|0;
      $592 = ($593|0)==($591|0);
      if ($592) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
       $$pre277 = HEAP32[$__gn>>2]|0;
       $595 = $$pre277;
      } else {
       $595 = $593;
      }
      $594 = (($595) + 4|0);
      HEAP32[$__gn>>2] = $594;
      HEAP32[$595>>2] = $__ng$0;
      $855 = $594;$__ng$1 = 0;
     }
     $596 = HEAP32[$__b>>2]|0;
     $597 = (($596) + 12|0);
     $598 = HEAP32[$597>>2]|0;
     $599 = (($596) + 16|0);
     $600 = HEAP32[$599>>2]|0;
     $601 = ($598|0)==($600|0);
     if ($601) {
      $602 = HEAP32[$596>>2]|0;
      $603 = (($602) + 40|0);
      $604 = HEAP32[$603>>2]|0;
      (FUNCTION_TABLE_ii[$604 & 127]($596)|0);
      $$pre$i3$i$i157 = $853;$547 = $854;$593 = $855;$__e$sroa$0$10 = $__e$sroa$0$12;$__ng$0 = $__ng$1;
      continue;
     } else {
      $605 = (($598) + 4|0);
      HEAP32[$597>>2] = $605;
      $$pre$i3$i$i157 = $853;$547 = $854;$593 = $855;$__e$sroa$0$10 = $__e$sroa$0$12;$__ng$0 = $__ng$1;
      continue;
     }
    }
    $606 = HEAP32[$__gb>>2]|0;
    $607 = ($606|0)!=($593|0);
    $608 = ($__ng$0|0)!=(0);
    $or$cond8 = $607 & $608;
    if ($or$cond8) {
     $609 = HEAP32[$__ge>>2]|0;
     $610 = ($593|0)==($609|0);
     if ($610) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__gb,$__gn,$__ge);
      $$pre271 = HEAP32[$__gn>>2]|0;
      $612 = $$pre271;
     } else {
      $612 = $593;
     }
     $611 = (($612) + 4|0);
     HEAP32[$__gn>>2] = $611;
     HEAP32[$612>>2] = $__ng$0;
     $856 = $611;
    } else {
     $856 = $593;
    }
    $613 = ($__fd$0|0)>(0);
    if ($613) {
     $614 = HEAP32[$__b>>2]|0;
     $615 = ($614|0)==(0|0);
     do {
      if ($615) {
       $858 = 1;
      } else {
       $616 = (($614) + 12|0);
       $617 = HEAP32[$616>>2]|0;
       $618 = (($614) + 16|0);
       $619 = HEAP32[$618>>2]|0;
       $620 = ($617|0)==($619|0);
       if ($620) {
        $621 = HEAP32[$614>>2]|0;
        $622 = (($621) + 36|0);
        $623 = HEAP32[$622>>2]|0;
        $624 = (FUNCTION_TABLE_ii[$623 & 127]($614)|0);
        $$0$i$i$i$i117 = $624;
       } else {
        $625 = HEAP32[$617>>2]|0;
        $$0$i$i$i$i117 = $625;
       }
       $626 = ($$0$i$i$i$i117|0)==(-1);
       if ($626) {
        HEAP32[$__b>>2] = 0;
        $858 = 1;
        break;
       } else {
        $$pre$i$i$i119 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i120 = ($$pre$i$i$i119|0)==(0|0);
        $858 = $phitmp$i$i$i120;
        break;
       }
      }
     } while(0);
     $627 = ($$pre$i3$i$i125|0)==(0|0);
     if ($627) {
      $__e$sroa$0$14 = $__e$sroa$0$13;
      label = 245;
     } else {
      $628 = (($$pre$i3$i$i125) + 12|0);
      $629 = HEAP32[$628>>2]|0;
      $630 = (($$pre$i3$i$i125) + 16|0);
      $631 = HEAP32[$630>>2]|0;
      $632 = ($629|0)==($631|0);
      if ($632) {
       $633 = HEAP32[$$pre$i3$i$i125>>2]|0;
       $634 = (($633) + 36|0);
       $635 = HEAP32[$634>>2]|0;
       $636 = (FUNCTION_TABLE_ii[$635 & 127]($$pre$i3$i$i125)|0);
       $$0$i$i1$i$i123 = $636;
      } else {
       $637 = HEAP32[$629>>2]|0;
       $$0$i$i1$i$i123 = $637;
      }
      $638 = ($$0$i$i1$i$i123|0)==(-1);
      if ($638) {
       $__e$sroa$0$14 = 0;
       label = 245;
      } else {
       if ($858) {
        $859 = $$pre$i3$i$i125;$__e$sroa$0$15 = $__e$sroa$0$13;
       } else {
        label = 251;
        break L37;
       }
      }
     }
     if ((label|0) == 245) {
      label = 0;
      if ($858) {
       label = 251;
       break L37;
      } else {
       $859 = 0;$__e$sroa$0$15 = $__e$sroa$0$14;
      }
     }
     $639 = HEAP32[$__b>>2]|0;
     $640 = (($639) + 12|0);
     $641 = HEAP32[$640>>2]|0;
     $642 = (($639) + 16|0);
     $643 = HEAP32[$642>>2]|0;
     $644 = ($641|0)==($643|0);
     if ($644) {
      $645 = HEAP32[$639>>2]|0;
      $646 = (($645) + 36|0);
      $647 = HEAP32[$646>>2]|0;
      $648 = (FUNCTION_TABLE_ii[$647 & 127]($639)|0);
      $$0$i$i110 = $648;
     } else {
      $649 = HEAP32[$641>>2]|0;
      $$0$i$i110 = $649;
     }
     $650 = ($$0$i$i110|0)==($__dp$0|0);
     if (!($650)) {
      label = 251;
      break L37;
     }
     $653 = HEAP32[$__b>>2]|0;
     $654 = (($653) + 12|0);
     $655 = HEAP32[$654>>2]|0;
     $656 = (($653) + 16|0);
     $657 = HEAP32[$656>>2]|0;
     $658 = ($655|0)==($657|0);
     if ($658) {
      $659 = HEAP32[$653>>2]|0;
      $660 = (($659) + 40|0);
      $661 = HEAP32[$660>>2]|0;
      (FUNCTION_TABLE_ii[$661 & 127]($653)|0);
      $$pre$i3$i$i91 = $859;$677 = $859;$724 = $__fd$0;$__e$sroa$0$16 = $__e$sroa$0$15;
     } else {
      $662 = (($655) + 4|0);
      HEAP32[$654>>2] = $662;
      $$pre$i3$i$i91 = $859;$677 = $859;$724 = $__fd$0;$__e$sroa$0$16 = $__e$sroa$0$15;
     }
     while(1) {
      $663 = HEAP32[$__b>>2]|0;
      $664 = ($663|0)==(0|0);
      do {
       if ($664) {
        $689 = 1;
       } else {
        $665 = (($663) + 12|0);
        $666 = HEAP32[$665>>2]|0;
        $667 = (($663) + 16|0);
        $668 = HEAP32[$667>>2]|0;
        $669 = ($666|0)==($668|0);
        if ($669) {
         $670 = HEAP32[$663>>2]|0;
         $671 = (($670) + 36|0);
         $672 = HEAP32[$671>>2]|0;
         $673 = (FUNCTION_TABLE_ii[$672 & 127]($663)|0);
         $$0$i$i$i$i83 = $673;
        } else {
         $674 = HEAP32[$666>>2]|0;
         $$0$i$i$i$i83 = $674;
        }
        $675 = ($$0$i$i$i$i83|0)==(-1);
        if ($675) {
         HEAP32[$__b>>2] = 0;
         $689 = 1;
         break;
        } else {
         $$pre$i$i$i85 = HEAP32[$__b>>2]|0;
         $phitmp$i$i$i86 = ($$pre$i$i$i85|0)==(0|0);
         $689 = $phitmp$i$i$i86;
         break;
        }
       }
      } while(0);
      $676 = ($677|0)==(0|0);
      if ($676) {
       $$pre$i3$i$i91273$ph = $$pre$i3$i$i91;$__e$sroa$0$17 = $__e$sroa$0$16;
       label = 267;
      } else {
       $678 = (($677) + 12|0);
       $679 = HEAP32[$678>>2]|0;
       $680 = (($677) + 16|0);
       $681 = HEAP32[$680>>2]|0;
       $682 = ($679|0)==($681|0);
       if ($682) {
        $683 = HEAP32[$677>>2]|0;
        $684 = (($683) + 36|0);
        $685 = HEAP32[$684>>2]|0;
        $686 = (FUNCTION_TABLE_ii[$685 & 127]($677)|0);
        $$0$i$i1$i$i89 = $686;
       } else {
        $687 = HEAP32[$679>>2]|0;
        $$0$i$i1$i$i89 = $687;
       }
       $688 = ($$0$i$i1$i$i89|0)==(-1);
       if ($688) {
        $$pre$i3$i$i91273$ph = 0;$__e$sroa$0$17 = 0;
        label = 267;
       } else {
        $phitmp$i4$i$i92 = ($$pre$i3$i$i91|0)==(0|0);
        $tmp$i$i94 = $689 ^ $phitmp$i4$i$i92;
        if ($tmp$i$i94) {
         $$pre$i3$i$i91273284 = $$pre$i3$i$i91;$860 = $$pre$i3$i$i91;$__e$sroa$0$18 = $__e$sroa$0$16;
        } else {
         label = 273;
         break L37;
        }
       }
      }
      if ((label|0) == 267) {
       label = 0;
       if ($689) {
        label = 273;
        break L37;
       } else {
        $$pre$i3$i$i91273284 = $$pre$i3$i$i91273$ph;$860 = 0;$__e$sroa$0$18 = $__e$sroa$0$17;
       }
      }
      $690 = HEAP32[$__b>>2]|0;
      $691 = (($690) + 12|0);
      $692 = HEAP32[$691>>2]|0;
      $693 = (($690) + 16|0);
      $694 = HEAP32[$693>>2]|0;
      $695 = ($692|0)==($694|0);
      if ($695) {
       $696 = HEAP32[$690>>2]|0;
       $697 = (($696) + 36|0);
       $698 = HEAP32[$697>>2]|0;
       $699 = (FUNCTION_TABLE_ii[$698 & 127]($690)|0);
       $$0$i$i77 = $699;
      } else {
       $700 = HEAP32[$692>>2]|0;
       $$0$i$i77 = $700;
      }
      $701 = HEAP32[$__ct>>2]|0;
      $702 = (($701) + 12|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (FUNCTION_TABLE_iiii[$703 & 31]($__ct,2048,$$0$i$i77)|0);
      if (!($704)) {
       label = 273;
       break L37;
      }
      $707 = HEAP32[$__wn>>2]|0;
      $708 = HEAP32[$10>>2]|0;
      $709 = ($707|0)==($708|0);
      if ($709) {
       __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__wb,$__wn,$10);
      }
      $710 = HEAP32[$__b>>2]|0;
      $711 = (($710) + 12|0);
      $712 = HEAP32[$711>>2]|0;
      $713 = (($710) + 16|0);
      $714 = HEAP32[$713>>2]|0;
      $715 = ($712|0)==($714|0);
      if ($715) {
       $716 = HEAP32[$710>>2]|0;
       $717 = (($716) + 36|0);
       $718 = HEAP32[$717>>2]|0;
       $719 = (FUNCTION_TABLE_ii[$718 & 127]($710)|0);
       $$0$i$i69 = $719;
      } else {
       $720 = HEAP32[$712>>2]|0;
       $$0$i$i69 = $720;
      }
      $721 = HEAP32[$__wn>>2]|0;
      $722 = (($721) + 4|0);
      HEAP32[$__wn>>2] = $722;
      HEAP32[$721>>2] = $$0$i$i69;
      $723 = (($724) + -1)|0;
      $725 = HEAP32[$__b>>2]|0;
      $726 = (($725) + 12|0);
      $727 = HEAP32[$726>>2]|0;
      $728 = (($725) + 16|0);
      $729 = HEAP32[$728>>2]|0;
      $730 = ($727|0)==($729|0);
      if ($730) {
       $731 = HEAP32[$725>>2]|0;
       $732 = (($731) + 40|0);
       $733 = HEAP32[$732>>2]|0;
       (FUNCTION_TABLE_ii[$733 & 127]($725)|0);
      } else {
       $735 = (($727) + 4|0);
       HEAP32[$726>>2] = $735;
      }
      $734 = ($723|0)>(0);
      if ($734) {
       $$pre$i3$i$i91 = $$pre$i3$i$i91273284;$677 = $860;$724 = $723;$__e$sroa$0$16 = $__e$sroa$0$18;
      } else {
       $857 = $$pre$i3$i$i91273284;$__e$sroa$0$19 = $__e$sroa$0$18;$__fd$1 = $723;
       break;
      }
     }
    } else {
     $857 = $$pre$i3$i$i125;$__e$sroa$0$19 = $__e$sroa$0$13;$__fd$1 = $__fd$0;
    }
    $736 = HEAP32[$__wn>>2]|0;
    $737 = HEAP32[$__wb>>2]|0;
    $738 = ($736|0)==($737|0);
    if ($738) {
     label = 284;
     break L37;
    } else {
     $847 = $857;$848 = $856;$__e$sroa$0$20 = $__e$sroa$0$19;$__fd$2 = $__fd$1;$__trailing_sign$1 = $__trailing_sign$0252;
    }
    break;
   }
   case 3:  {
    $230 = HEAP8[$__psn>>0]|0;
    $231 = $230 & 1;
    $232 = ($231<<24>>24)==(0);
    if ($232) {
     $234 = $230&255;
     $235 = $234 >>> 1;
     $245 = $235;
    } else {
     $233 = HEAP32[$108>>2]|0;
     $245 = $233;
    }
    $236 = HEAP8[$__nsn>>0]|0;
    $237 = $236 & 1;
    $238 = ($237<<24>>24)==(0);
    if ($238) {
     $240 = $236&255;
     $241 = $240 >>> 1;
     $243 = $241;
    } else {
     $239 = HEAP32[$106>>2]|0;
     $243 = $239;
    }
    $242 = (0 - ($243))|0;
    $244 = ($245|0)==($242|0);
    if ($244) {
     $847 = $__e$sroa$0$2;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0252;
    } else {
     if ($232) {
      $247 = $230&255;
      $248 = $247 >>> 1;
      $250 = $248;
     } else {
      $246 = HEAP32[$108>>2]|0;
      $250 = $246;
     }
     $249 = ($250|0)==(0);
     if (!($249)) {
      if ($238) {
       $252 = $236&255;
       $253 = $252 >>> 1;
       $255 = $253;
      } else {
       $251 = HEAP32[$106>>2]|0;
       $255 = $251;
      }
      $254 = ($255|0)==(0);
      if (!($254)) {
       $325 = HEAP32[$__b>>2]|0;
       $326 = (($325) + 12|0);
       $327 = HEAP32[$326>>2]|0;
       $328 = (($325) + 16|0);
       $329 = HEAP32[$328>>2]|0;
       $330 = ($327|0)==($329|0);
       if ($330) {
        $331 = HEAP32[$325>>2]|0;
        $332 = (($331) + 36|0);
        $333 = HEAP32[$332>>2]|0;
        $334 = (FUNCTION_TABLE_ii[$333 & 127]($325)|0);
        $$pre264 = HEAP8[$__psn>>0]|0;
        $$pre16 = HEAP32[$__b>>2]|0;
        $$phi$trans$insert17 = (($$pre16) + 12|0);
        $$pre18 = HEAP32[$$phi$trans$insert17>>2]|0;
        $$phi$trans$insert19 = (($$pre16) + 16|0);
        $$pre20 = HEAP32[$$phi$trans$insert19>>2]|0;
        $$0$i$i113 = $334;$337 = $$pre264;$343 = $$pre16;$345 = $$pre18;$346 = $$pre20;
       } else {
        $335 = HEAP32[$327>>2]|0;
        $$0$i$i113 = $335;$337 = $230;$343 = $325;$345 = $327;$346 = $329;
       }
       $336 = $337 & 1;
       $338 = ($336<<24>>24)==(0);
       $339 = HEAP32[$109>>2]|0;
       $$289 = $338 ? $108 : $339;
       $340 = HEAP32[$$289>>2]|0;
       $341 = ($$0$i$i113|0)==($340|0);
       $342 = (($343) + 12|0);
       $344 = ($345|0)==($346|0);
       if ($341) {
        if ($344) {
         $347 = HEAP32[$343>>2]|0;
         $348 = (($347) + 40|0);
         $349 = HEAP32[$348>>2]|0;
         (FUNCTION_TABLE_ii[$349 & 127]($343)|0);
        } else {
         $350 = (($345) + 4|0);
         HEAP32[$342>>2] = $350;
        }
        $351 = HEAP8[$__psn>>0]|0;
        $352 = $351 & 1;
        $353 = ($352<<24>>24)==(0);
        if ($353) {
         $355 = $351&255;
         $356 = $355 >>> 1;
         $358 = $356;
        } else {
         $354 = HEAP32[$108>>2]|0;
         $358 = $354;
        }
        $357 = ($358>>>0)>(1);
        $__psn$__trailing_sign$09 = $357 ? $__psn : $__trailing_sign$0252;
        $847 = $__e$sroa$0$2;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__psn$__trailing_sign$09;
        break L59;
       }
       if ($344) {
        $359 = HEAP32[$343>>2]|0;
        $360 = (($359) + 36|0);
        $361 = HEAP32[$360>>2]|0;
        $362 = (FUNCTION_TABLE_ii[$361 & 127]($343)|0);
        $$0$i$i135 = $362;
       } else {
        $363 = HEAP32[$345>>2]|0;
        $$0$i$i135 = $363;
       }
       $364 = HEAP8[$__nsn>>0]|0;
       $365 = $364 & 1;
       $366 = ($365<<24>>24)==(0);
       $367 = HEAP32[$107>>2]|0;
       $$290 = $366 ? $106 : $367;
       $368 = HEAP32[$$290>>2]|0;
       $369 = ($$0$i$i135|0)==($368|0);
       if (!($369)) {
        label = 141;
        break L37;
       }
       $370 = HEAP32[$__b>>2]|0;
       $371 = (($370) + 12|0);
       $372 = HEAP32[$371>>2]|0;
       $373 = (($370) + 16|0);
       $374 = HEAP32[$373>>2]|0;
       $375 = ($372|0)==($374|0);
       if ($375) {
        $376 = HEAP32[$370>>2]|0;
        $377 = (($376) + 40|0);
        $378 = HEAP32[$377>>2]|0;
        (FUNCTION_TABLE_ii[$378 & 127]($370)|0);
       } else {
        $379 = (($372) + 4|0);
        HEAP32[$371>>2] = $379;
       }
       HEAP8[$__neg>>0] = 1;
       $380 = HEAP8[$__nsn>>0]|0;
       $381 = $380 & 1;
       $382 = ($381<<24>>24)==(0);
       if ($382) {
        $384 = $380&255;
        $385 = $384 >>> 1;
        $387 = $385;
       } else {
        $383 = HEAP32[$106>>2]|0;
        $387 = $383;
       }
       $386 = ($387>>>0)>(1);
       $__nsn$__trailing_sign$010 = $386 ? $__nsn : $__trailing_sign$0252;
       $847 = $__e$sroa$0$2;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__nsn$__trailing_sign$010;
       break L59;
      }
     }
     if ($232) {
      $257 = $230&255;
      $258 = $257 >>> 1;
      $260 = $258;
     } else {
      $256 = HEAP32[$108>>2]|0;
      $260 = $256;
     }
     $259 = ($260|0)==(0);
     $261 = HEAP32[$__b>>2]|0;
     $262 = (($261) + 12|0);
     $263 = HEAP32[$262>>2]|0;
     $264 = (($261) + 16|0);
     $265 = HEAP32[$264>>2]|0;
     $266 = ($263|0)==($265|0);
     if ($259) {
      if ($266) {
       $296 = HEAP32[$261>>2]|0;
       $297 = (($296) + 36|0);
       $298 = HEAP32[$297>>2]|0;
       $299 = (FUNCTION_TABLE_ii[$298 & 127]($261)|0);
       $$pre = HEAP8[$__nsn>>0]|0;
       $$0$i$i101 = $299;$302 = $$pre;
      } else {
       $300 = HEAP32[$263>>2]|0;
       $$0$i$i101 = $300;$302 = $236;
      }
      $301 = $302 & 1;
      $303 = ($301<<24>>24)==(0);
      $304 = HEAP32[$107>>2]|0;
      $$288 = $303 ? $106 : $304;
      $305 = HEAP32[$$288>>2]|0;
      $306 = ($$0$i$i101|0)==($305|0);
      if (!($306)) {
       $847 = $__e$sroa$0$2;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0252;
       break L59;
      }
      $307 = HEAP32[$__b>>2]|0;
      $308 = (($307) + 12|0);
      $309 = HEAP32[$308>>2]|0;
      $310 = (($307) + 16|0);
      $311 = HEAP32[$310>>2]|0;
      $312 = ($309|0)==($311|0);
      if ($312) {
       $313 = HEAP32[$307>>2]|0;
       $314 = (($313) + 40|0);
       $315 = HEAP32[$314>>2]|0;
       (FUNCTION_TABLE_ii[$315 & 127]($307)|0);
      } else {
       $316 = (($309) + 4|0);
       HEAP32[$308>>2] = $316;
      }
      HEAP8[$__neg>>0] = 1;
      $317 = HEAP8[$__nsn>>0]|0;
      $318 = $317 & 1;
      $319 = ($318<<24>>24)==(0);
      if ($319) {
       $321 = $317&255;
       $322 = $321 >>> 1;
       $324 = $322;
      } else {
       $320 = HEAP32[$106>>2]|0;
       $324 = $320;
      }
      $323 = ($324>>>0)>(1);
      $__nsn$__trailing_sign$0 = $323 ? $__nsn : $__trailing_sign$0252;
      $847 = $__e$sroa$0$2;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__nsn$__trailing_sign$0;
      break L59;
     }
     if ($266) {
      $267 = HEAP32[$261>>2]|0;
      $268 = (($267) + 36|0);
      $269 = HEAP32[$268>>2]|0;
      $270 = (FUNCTION_TABLE_ii[$269 & 127]($261)|0);
      $$pre263 = HEAP8[$__psn>>0]|0;
      $$0$i$i80 = $270;$273 = $$pre263;
     } else {
      $271 = HEAP32[$263>>2]|0;
      $$0$i$i80 = $271;$273 = $230;
     }
     $272 = $273 & 1;
     $274 = ($272<<24>>24)==(0);
     $275 = HEAP32[$109>>2]|0;
     $$ = $274 ? $108 : $275;
     $276 = HEAP32[$$>>2]|0;
     $277 = ($$0$i$i80|0)==($276|0);
     if (!($277)) {
      HEAP8[$__neg>>0] = 1;
      $847 = $__e$sroa$0$2;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0252;
      break L59;
     }
     $278 = HEAP32[$__b>>2]|0;
     $279 = (($278) + 12|0);
     $280 = HEAP32[$279>>2]|0;
     $281 = (($278) + 16|0);
     $282 = HEAP32[$281>>2]|0;
     $283 = ($280|0)==($282|0);
     if ($283) {
      $284 = HEAP32[$278>>2]|0;
      $285 = (($284) + 40|0);
      $286 = HEAP32[$285>>2]|0;
      (FUNCTION_TABLE_ii[$286 & 127]($278)|0);
     } else {
      $287 = (($280) + 4|0);
      HEAP32[$279>>2] = $287;
     }
     $288 = HEAP8[$__psn>>0]|0;
     $289 = $288 & 1;
     $290 = ($289<<24>>24)==(0);
     if ($290) {
      $292 = $288&255;
      $293 = $292 >>> 1;
      $295 = $293;
     } else {
      $291 = HEAP32[$108>>2]|0;
      $295 = $291;
     }
     $294 = ($295>>>0)>(1);
     $__psn$__trailing_sign$0 = $294 ? $__psn : $__trailing_sign$0252;
     $847 = $__e$sroa$0$2;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__psn$__trailing_sign$0;
    }
    break;
   }
   default: {
    $847 = $__e$sroa$0$2;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$2;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0252;
   }
   }
  } while(0);
  L350: do {
   if ((label|0) == 54) {
    label = 0;
    $175 = ($__p$0250|0)==(3);
    if ($175) {
     $815 = $844;$846 = $__e$sroa$0$2;$__trailing_sign$0$lcssa = $__trailing_sign$0252;
     label = 286;
     break L37;
    } else {
     $$pre$i3$i$i51 = $__e$sroa$0$2;$190 = $__e$sroa$0$2;$__e$sroa$0$3 = $__e$sroa$0$2;
    }
    while(1) {
     $176 = HEAP32[$__b>>2]|0;
     $177 = ($176|0)==(0|0);
     do {
      if ($177) {
       $202 = 1;
      } else {
       $178 = (($176) + 12|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = (($176) + 16|0);
       $181 = HEAP32[$180>>2]|0;
       $182 = ($179|0)==($181|0);
       if ($182) {
        $183 = HEAP32[$176>>2]|0;
        $184 = (($183) + 36|0);
        $185 = HEAP32[$184>>2]|0;
        $186 = (FUNCTION_TABLE_ii[$185 & 127]($176)|0);
        $$0$i$i$i$i43 = $186;
       } else {
        $187 = HEAP32[$179>>2]|0;
        $$0$i$i$i$i43 = $187;
       }
       $188 = ($$0$i$i$i$i43|0)==(-1);
       if ($188) {
        HEAP32[$__b>>2] = 0;
        $202 = 1;
        break;
       } else {
        $$pre$i$i$i45 = HEAP32[$__b>>2]|0;
        $phitmp$i$i$i46 = ($$pre$i$i$i45|0)==(0|0);
        $202 = $phitmp$i$i$i46;
        break;
       }
      }
     } while(0);
     $189 = ($190|0)==(0|0);
     if ($189) {
      $$pre$i3$i$i51260 = $$pre$i3$i$i51;$__e$sroa$0$4 = $__e$sroa$0$3;
      label = 67;
     } else {
      $191 = (($190) + 12|0);
      $192 = HEAP32[$191>>2]|0;
      $193 = (($190) + 16|0);
      $194 = HEAP32[$193>>2]|0;
      $195 = ($192|0)==($194|0);
      if ($195) {
       $196 = HEAP32[$190>>2]|0;
       $197 = (($196) + 36|0);
       $198 = HEAP32[$197>>2]|0;
       $199 = (FUNCTION_TABLE_ii[$198 & 127]($190)|0);
       $$0$i$i1$i$i49 = $199;
      } else {
       $200 = HEAP32[$192>>2]|0;
       $$0$i$i1$i$i49 = $200;
      }
      $201 = ($$0$i$i1$i$i49|0)==(-1);
      if ($201) {
       $$pre$i3$i$i51260 = 0;$__e$sroa$0$4 = 0;
       label = 67;
      } else {
       $phitmp$i4$i$i52 = ($$pre$i3$i$i51|0)==(0|0);
       $tmp$i$i54 = $202 ^ $phitmp$i4$i$i52;
       if ($tmp$i$i54) {
        $$pre$i3$i$i51262 = $$pre$i3$i$i51;$849 = $$pre$i3$i$i51;$__e$sroa$0$5 = $__e$sroa$0$3;
       } else {
        $847 = $$pre$i3$i$i51;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$3;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0252;
        break L350;
       }
      }
     }
     if ((label|0) == 67) {
      label = 0;
      if ($202) {
       $847 = $$pre$i3$i$i51260;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$4;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0252;
       break L350;
      } else {
       $$pre$i3$i$i51262 = $$pre$i3$i$i51260;$849 = 0;$__e$sroa$0$5 = $__e$sroa$0$4;
      }
     }
     $203 = HEAP32[$__b>>2]|0;
     $204 = (($203) + 12|0);
     $205 = HEAP32[$204>>2]|0;
     $206 = (($203) + 16|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($205|0)==($207|0);
     if ($208) {
      $209 = HEAP32[$203>>2]|0;
      $210 = (($209) + 36|0);
      $211 = HEAP32[$210>>2]|0;
      $212 = (FUNCTION_TABLE_ii[$211 & 127]($203)|0);
      $$0$i$i58 = $212;
     } else {
      $213 = HEAP32[$205>>2]|0;
      $$0$i$i58 = $213;
     }
     $214 = HEAP32[$__ct>>2]|0;
     $215 = (($214) + 12|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = (FUNCTION_TABLE_iiii[$216 & 31]($__ct,8192,$$0$i$i58)|0);
     if (!($217)) {
      $847 = $$pre$i3$i$i51262;$848 = $844;$__e$sroa$0$20 = $__e$sroa$0$5;$__fd$2 = $__fd$0;$__trailing_sign$1 = $__trailing_sign$0252;
      break L350;
     }
     $218 = HEAP32[$__b>>2]|0;
     $219 = (($218) + 12|0);
     $220 = HEAP32[$219>>2]|0;
     $221 = (($218) + 16|0);
     $222 = HEAP32[$221>>2]|0;
     $223 = ($220|0)==($222|0);
     if ($223) {
      $224 = HEAP32[$218>>2]|0;
      $225 = (($224) + 40|0);
      $226 = HEAP32[$225>>2]|0;
      $227 = (FUNCTION_TABLE_ii[$226 & 127]($218)|0);
      $$0$i$i64 = $227;
     } else {
      $228 = (($220) + 4|0);
      HEAP32[$219>>2] = $228;
      $229 = HEAP32[$220>>2]|0;
      $$0$i$i64 = $229;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__spaces,$$0$i$i64);
     $$pre$i3$i$i51 = $$pre$i3$i$i51262;$190 = $849;$__e$sroa$0$3 = $__e$sroa$0$5;
    }
   }
  } while(0);
  $741 = (($__p$0250) + 1)|0;
  $742 = ($741>>>0)<(4);
  if ($742) {
   $844 = $848;$__e$sroa$0$0 = $__e$sroa$0$20;$__fd$0 = $__fd$2;$__p$0250 = $741;$__trailing_sign$0252 = $__trailing_sign$1;
  } else {
   $815 = $848;$846 = $847;$__trailing_sign$0$lcssa = $__trailing_sign$1;
   label = 286;
   break;
  }
 }
 L384: do {
  if ((label|0) == 53) {
   $173 = HEAP32[$__err>>2]|0;
   $174 = $173 | 4;
   HEAP32[$__err>>2] = $174;
   $$0 = 0;
  }
  else if ((label|0) == 141) {
   $388 = HEAP32[$__err>>2]|0;
   $389 = $388 | 4;
   HEAP32[$__err>>2] = $389;
   $$0 = 0;
  }
  else if ((label|0) == 196) {
   $531 = HEAP32[$__err>>2]|0;
   $532 = $531 | 4;
   HEAP32[$__err>>2] = $532;
   $$0 = 0;
  }
  else if ((label|0) == 251) {
   $651 = HEAP32[$__err>>2]|0;
   $652 = $651 | 4;
   HEAP32[$__err>>2] = $652;
   $$0 = 0;
  }
  else if ((label|0) == 273) {
   $705 = HEAP32[$__err>>2]|0;
   $706 = $705 | 4;
   HEAP32[$__err>>2] = $706;
   $$0 = 0;
  }
  else if ((label|0) == 284) {
   $739 = HEAP32[$__err>>2]|0;
   $740 = $739 | 4;
   HEAP32[$__err>>2] = $740;
   $$0 = 0;
  }
  else if ((label|0) == 286) {
   $743 = ($__trailing_sign$0$lcssa|0)==(0|0);
   L392: do {
    if (!($743)) {
     $744 = (($__trailing_sign$0$lcssa) + 4|0);
     $745 = (($__trailing_sign$0$lcssa) + 8|0);
     $$pre$i3$i$i = $846;$768 = $846;$__i$0 = 1;
     while(1) {
      $746 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $747 = $746 & 1;
      $748 = ($747<<24>>24)==(0);
      if ($748) {
       $750 = $746&255;
       $751 = $750 >>> 1;
       $753 = $751;
      } else {
       $749 = HEAP32[$744>>2]|0;
       $753 = $749;
      }
      $752 = ($__i$0>>>0)<($753>>>0);
      if (!($752)) {
       break L392;
      }
      $754 = HEAP32[$__b>>2]|0;
      $755 = ($754|0)==(0|0);
      do {
       if ($755) {
        $780 = 1;
       } else {
        $756 = (($754) + 12|0);
        $757 = HEAP32[$756>>2]|0;
        $758 = (($754) + 16|0);
        $759 = HEAP32[$758>>2]|0;
        $760 = ($757|0)==($759|0);
        if ($760) {
         $761 = HEAP32[$754>>2]|0;
         $762 = (($761) + 36|0);
         $763 = HEAP32[$762>>2]|0;
         $764 = (FUNCTION_TABLE_ii[$763 & 127]($754)|0);
         $$0$i$i$i$i = $764;
        } else {
         $765 = HEAP32[$757>>2]|0;
         $$0$i$i$i$i = $765;
        }
        $766 = ($$0$i$i$i$i|0)==(-1);
        if ($766) {
         HEAP32[$__b>>2] = 0;
         $780 = 1;
         break;
        } else {
         $$pre$i$i$i = HEAP32[$__b>>2]|0;
         $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
         $780 = $phitmp$i$i$i;
         break;
        }
       }
      } while(0);
      $767 = ($768|0)==(0|0);
      if ($767) {
       $$pre$i3$i$i279$ph = $$pre$i3$i$i;
       label = 304;
      } else {
       $769 = (($768) + 12|0);
       $770 = HEAP32[$769>>2]|0;
       $771 = (($768) + 16|0);
       $772 = HEAP32[$771>>2]|0;
       $773 = ($770|0)==($772|0);
       if ($773) {
        $774 = HEAP32[$768>>2]|0;
        $775 = (($774) + 36|0);
        $776 = HEAP32[$775>>2]|0;
        $777 = (FUNCTION_TABLE_ii[$776 & 127]($768)|0);
        $$0$i$i1$i$i = $777;
       } else {
        $778 = HEAP32[$770>>2]|0;
        $$0$i$i1$i$i = $778;
       }
       $779 = ($$0$i$i1$i$i|0)==(-1);
       if ($779) {
        $$pre$i3$i$i279$ph = 0;
        label = 304;
       } else {
        $phitmp$i4$i$i = ($$pre$i3$i$i|0)==(0|0);
        $tmp$i$i = $780 ^ $phitmp$i4$i$i;
        if ($tmp$i$i) {
         $$pre$i3$i$i279287 = $$pre$i3$i$i;$861 = $$pre$i3$i$i;
        } else {
         break;
        }
       }
      }
      if ((label|0) == 304) {
       label = 0;
       if ($780) {
        break;
       } else {
        $$pre$i3$i$i279287 = $$pre$i3$i$i279$ph;$861 = 0;
       }
      }
      $781 = HEAP32[$__b>>2]|0;
      $782 = (($781) + 12|0);
      $783 = HEAP32[$782>>2]|0;
      $784 = (($781) + 16|0);
      $785 = HEAP32[$784>>2]|0;
      $786 = ($783|0)==($785|0);
      if ($786) {
       $787 = HEAP32[$781>>2]|0;
       $788 = (($787) + 36|0);
       $789 = HEAP32[$788>>2]|0;
       $790 = (FUNCTION_TABLE_ii[$789 & 127]($781)|0);
       $$0$i$i = $790;
      } else {
       $791 = HEAP32[$783>>2]|0;
       $$0$i$i = $791;
      }
      $792 = HEAP8[$__trailing_sign$0$lcssa>>0]|0;
      $793 = $792 & 1;
      $794 = ($793<<24>>24)==(0);
      if ($794) {
       $797 = $744;
      } else {
       $795 = HEAP32[$745>>2]|0;
       $797 = $795;
      }
      $796 = (($797) + ($__i$0<<2)|0);
      $798 = HEAP32[$796>>2]|0;
      $799 = ($$0$i$i|0)==($798|0);
      if (!($799)) {
       break;
      }
      $802 = (($__i$0) + 1)|0;
      $803 = HEAP32[$__b>>2]|0;
      $804 = (($803) + 12|0);
      $805 = HEAP32[$804>>2]|0;
      $806 = (($803) + 16|0);
      $807 = HEAP32[$806>>2]|0;
      $808 = ($805|0)==($807|0);
      if ($808) {
       $809 = HEAP32[$803>>2]|0;
       $810 = (($809) + 40|0);
       $811 = HEAP32[$810>>2]|0;
       (FUNCTION_TABLE_ii[$811 & 127]($803)|0);
       $$pre$i3$i$i = $$pre$i3$i$i279287;$768 = $861;$__i$0 = $802;
       continue;
      } else {
       $812 = (($805) + 4|0);
       HEAP32[$804>>2] = $812;
       $$pre$i3$i$i = $$pre$i3$i$i279287;$768 = $861;$__i$0 = $802;
       continue;
      }
     }
     $800 = HEAP32[$__err>>2]|0;
     $801 = $800 | 4;
     HEAP32[$__err>>2] = $801;
     $$0 = 0;
     break L384;
    }
   } while(0);
   $813 = HEAP32[$__gb>>2]|0;
   $814 = ($813|0)==($815|0);
   if ($814) {
    $$0 = 1;
   } else {
    HEAP32[$__et>>2] = 0;
    __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp,$813,$815,$__et);
    $816 = HEAP32[$__et>>2]|0;
    $817 = ($816|0)==(0);
    if ($817) {
     $$0 = 1;
    } else {
     $818 = HEAP32[$__err>>2]|0;
     $819 = $818 | 4;
     HEAP32[$__err>>2] = $819;
     $$0 = 0;
    }
   }
  }
 } while(0);
 $820 = HEAP8[$__spaces>>0]|0;
 $821 = $820 & 1;
 $822 = ($821<<24>>24)==(0);
 if (!($822)) {
  $823 = HEAP32[$115>>2]|0;
  _free($823);
 }
 $824 = HEAP8[$__nsn>>0]|0;
 $825 = $824 & 1;
 $826 = ($825<<24>>24)==(0);
 if (!($826)) {
  $827 = HEAP32[$107>>2]|0;
  _free($827);
 }
 $828 = HEAP8[$__psn>>0]|0;
 $829 = $828 & 1;
 $830 = ($829<<24>>24)==(0);
 if (!($830)) {
  $831 = HEAP32[$109>>2]|0;
  _free($831);
 }
 $832 = HEAP8[$__sym>>0]|0;
 $833 = $832 & 1;
 $834 = ($833<<24>>24)==(0);
 if (!($834)) {
  $835 = HEAP32[$113>>2]|0;
  _free($835);
 }
 $836 = HEAP8[$__grp>>0]|0;
 $837 = $836 & 1;
 $838 = ($837<<24>>24)==(0);
 if (!($838)) {
  $839 = (($__grp) + 8|0);
  $840 = HEAP32[$839>>2]|0;
  _free($840);
 }
 $841 = HEAP32[$__gb>>2]|0;
 HEAP32[$__gb>>2] = 0;
 $842 = ($841|0)==(0|0);
 if ($842) {
  STACKTOP = sp;return ($$0|0);
 }
 $843 = HEAP32[$11>>2]|0;
 FUNCTION_TABLE_vi[$843 & 255]($841);
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result,$this,$__b,$__e,$__intl,$__iob,$__err,$__v) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__b = $__b|0;
 $__e = $__e|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__err = $__err|0;
 $__v = $__v|0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$01$i = 0, $$idx = 0, $$idx$val = 0, $$idx4 = 0, $$idx4$val = 0, $$pre$i = 0, $$pre$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__neg = 0, $__p$0$lcssa$i = 0, $__p$02$i = 0, $__w$0$lcssa = 0, $__w$05 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $phitmp$i$i = 0;
 var $phitmp$i$i$i = 0, $scevgep5$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432|0;
 $__wbuf = sp + 16|0;
 $__wb = sp + 8|0;
 $__wn = sp;
 $__neg = sp + 416|0;
 HEAP32[$__wb>>2] = $__wbuf;
 $0 = (($__wb) + 4|0);
 HEAP32[$0>>2] = 140;
 $1 = (($__wbuf) + 400|0);
 $2 = (($__iob) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 4|0);
 $5 = HEAP32[$4>>2]|0;HEAP32[$4>>2] = (($5+1)|0);
 $6 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx = (($3) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx4 = (($3) + 12|0);
 $$idx4$val = HEAP32[$$idx4>>2]|0;
 $7 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx4$val,$6)|0);
 HEAP8[$__neg>>0] = 0;
 $8 = HEAP32[$__e>>2]|0;
 $9 = (($__iob) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b,$8,$__intl,$3,$10,$__err,$__neg,$7,$__wb,$__wn,$1)|0);
 do {
  if ($11) {
   $12 = HEAP8[$__v>>0]|0;
   $13 = $12 & 1;
   $14 = ($13<<24>>24)==(0);
   if ($14) {
    $18 = (($__v) + 4|0);
    HEAP32[$18>>2] = 0;
    HEAP8[$__v>>0] = 0;
   } else {
    $15 = (($__v) + 8|0);
    $16 = HEAP32[$15>>2]|0;
    HEAP32[$16>>2] = 0;
    $17 = (($__v) + 4|0);
    HEAP32[$17>>2] = 0;
   }
   $19 = HEAP8[$__neg>>0]|0;
   $20 = ($19<<24>>24)==(0);
   if (!($20)) {
    $21 = HEAP32[$7>>2]|0;
    $22 = (($21) + 44|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = (FUNCTION_TABLE_iii[$23 & 63]($7,45)|0);
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($__v,$24);
   }
   $25 = HEAP32[$7>>2]|0;
   $26 = (($25) + 44|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (FUNCTION_TABLE_iii[$27 & 63]($7,48)|0);
   $29 = HEAP32[$__wb>>2]|0;
   $30 = HEAP32[$__wn>>2]|0;
   $31 = (($30) + -4|0);
   $32 = ($29>>>0)<($31>>>0);
   L10: do {
    if ($32) {
     $__w$05 = $29;
     while(1) {
      $35 = HEAP32[$__w$05>>2]|0;
      $36 = ($35|0)==($28|0);
      $34 = (($__w$05) + 4|0);
      if (!($36)) {
       $__w$0$lcssa = $__w$05;
       break L10;
      }
      $33 = ($34>>>0)<($31>>>0);
      if ($33) {
       $__w$05 = $34;
      } else {
       $__w$0$lcssa = $34;
       break;
      }
     }
    } else {
     $__w$0$lcssa = $29;
    }
   } while(0);
   $37 = $__w$0$lcssa;
   $38 = HEAP8[$__v>>0]|0;
   $39 = $38 & 1;
   $40 = ($39<<24>>24)==(0);
   if ($40) {
    $41 = $38&255;
    $42 = $41 >>> 1;
    $120 = $38;$53 = 1;$54 = $42;
   } else {
    $43 = (($__v) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$__v>>2]|0;
    $46 = $45 & -2;
    $phitmp$i$i = (($46) + -1)|0;
    $47 = $45&255;
    $120 = $47;$53 = $phitmp$i$i;$54 = $44;
   }
   $48 = $30;
   $49 = (($48) - ($37))|0;
   $50 = $49 >> 2;
   $51 = ($50|0)==(0);
   if (!($51)) {
    $52 = (($53) - ($54))|0;
    $55 = ($52>>>0)<($50>>>0);
    if ($55) {
     $56 = (($54) + ($50))|0;
     $57 = (($56) - ($53))|0;
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($__v,$53,$57,$54,$54,0,0);
     $$pre$i = HEAP8[$__v>>0]|0;
     $59 = $$pre$i;
    } else {
     $59 = $120;
    }
    $58 = $59 & 1;
    $60 = ($58<<24>>24)==(0);
    if ($60) {
     $63 = (($__v) + 4|0);
     $65 = $63;
    } else {
     $61 = (($__v) + 8|0);
     $62 = HEAP32[$61>>2]|0;
     $65 = $62;
    }
    $64 = (($65) + ($54<<2)|0);
    $66 = ($__w$0$lcssa|0)==($30|0);
    if ($66) {
     $__p$0$lcssa$i = $64;
    } else {
     $67 = $31;
     $68 = (($67) - ($37))|0;
     $69 = $68 >>> 2;
     $70 = (($54) + ($69))|0;
     $71 = (($70) + 1)|0;
     $$01$i = $__w$0$lcssa;$__p$02$i = $64;
     while(1) {
      $72 = HEAP32[$$01$i>>2]|0;
      HEAP32[$__p$02$i>>2] = $72;
      $73 = (($__p$02$i) + 4|0);
      $74 = (($$01$i) + 4|0);
      $75 = ($74|0)==($30|0);
      if ($75) {
       break;
      } else {
       $$01$i = $74;$__p$02$i = $73;
      }
     }
     $scevgep5$i = (($65) + ($71<<2)|0);
     $__p$0$lcssa$i = $scevgep5$i;
    }
    HEAP32[$__p$0$lcssa$i>>2] = 0;
    $76 = (($54) + ($50))|0;
    $77 = HEAP8[$__v>>0]|0;
    $78 = $77 & 1;
    $79 = ($78<<24>>24)==(0);
    if ($79) {
     $81 = $76 << 1;
     $82 = $81&255;
     HEAP8[$__v>>0] = $82;
     break;
    } else {
     $80 = (($__v) + 4|0);
     HEAP32[$80>>2] = $76;
     break;
    }
   }
  }
 } while(0);
 $83 = HEAP32[$__b>>2]|0;
 $84 = ($83|0)==(0|0);
 do {
  if ($84) {
   $121 = 1;
  } else {
   $85 = (($83) + 12|0);
   $86 = HEAP32[$85>>2]|0;
   $87 = (($83) + 16|0);
   $88 = HEAP32[$87>>2]|0;
   $89 = ($86|0)==($88|0);
   if ($89) {
    $90 = HEAP32[$83>>2]|0;
    $91 = (($90) + 36|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = (FUNCTION_TABLE_ii[$92 & 127]($83)|0);
    $$0$i$i$i$i = $93;
   } else {
    $94 = HEAP32[$86>>2]|0;
    $$0$i$i$i$i = $94;
   }
   $95 = ($$0$i$i$i$i|0)==(-1);
   if ($95) {
    HEAP32[$__b>>2] = 0;
    $121 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $121 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $96 = ($8|0)==(0|0);
 do {
  if ($96) {
   label = 39;
  } else {
   $97 = (($8) + 12|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = (($8) + 16|0);
   $100 = HEAP32[$99>>2]|0;
   $101 = ($98|0)==($100|0);
   if ($101) {
    $102 = HEAP32[$8>>2]|0;
    $103 = (($102) + 36|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = (FUNCTION_TABLE_ii[$104 & 127]($8)|0);
    $$0$i$i1$i$i = $105;
   } else {
    $106 = HEAP32[$98>>2]|0;
    $$0$i$i1$i$i = $106;
   }
   $107 = ($$0$i$i1$i$i|0)==(-1);
   if ($107) {
    HEAP32[$__e>>2] = 0;
    label = 39;
    break;
   } else {
    if ($121) {
     break;
    } else {
     label = 41;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 39) {
  if ($121) {
   label = 41;
  }
 }
 if ((label|0) == 41) {
  $108 = HEAP32[$__err>>2]|0;
  $109 = $108 | 2;
  HEAP32[$__err>>2] = $109;
 }
 $110 = HEAP32[$__b>>2]|0;
 HEAP32[$agg$result>>2] = $110;
 $111 = (($3) + 4|0);
 $112 = HEAP32[$111>>2]|0;HEAP32[$111>>2] = (($112+-1)|0);
 $113 = ($112|0)==(0);
 if ($113) {
  $114 = HEAP32[$3>>2]|0;
  $115 = (($114) + 8|0);
  $116 = HEAP32[$115>>2]|0;
  FUNCTION_TABLE_vi[$116 & 255]($3);
 }
 $117 = HEAP32[$__wb>>2]|0;
 HEAP32[$__wb>>2] = 0;
 $118 = ($117|0)==(0|0);
 if ($118) {
  STACKTOP = sp;return;
 }
 $119 = HEAP32[$0>>2]|0;
 FUNCTION_TABLE_vi[$119 & 255]($117);
 STACKTOP = sp;return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__units) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$idx = 0, $$idx$val = 0, $$idx13 = 0, $$idx13$val = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__mb$0 = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0;
 var $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368|0;
 $vararg_buffer1 = sp;
 $__buf = sp + 156|0;
 $__bb = sp + 132|0;
 $__digits = sp + 256|0;
 $__pat = sp + 148|0;
 $__dp = sp + 356|0;
 $__ts = sp + 357|0;
 $__grp = sp + 136|0;
 $__sym = sp + 104|0;
 $__sn = sp + 116|0;
 $__fd = sp + 100|0;
 $__mi = sp + 128|0;
 $__me = sp + 152|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[tempDoublePtr>>3]=$__units;HEAP32[$vararg_buffer1>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_buffer1+4>>2]=HEAP32[tempDoublePtr+4>>2];
 $0 = (_snprintf($__buf,100,40400,$vararg_buffer1)|0);
 $1 = ($0>>>0)>(99);
 if ($1) {
  $2 = (__ZNSt3__16__clocEv()|0);
  HEAPF64[tempDoublePtr>>3]=$__units;HEAP32[$vararg_buffer1>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_buffer1+4>>2]=HEAP32[tempDoublePtr+4>>2];
  $3 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb,$2,40400,$vararg_buffer1)|0);
  $4 = HEAP32[$__bb>>2]|0;
  $5 = ($4|0)==(0|0);
  if ($5) {
   $6 = (___cxa_allocate_exception(4)|0);
   HEAP32[$6>>2] = ((51368 + 8|0));
   ___cxa_throw(($6|0),(51424|0),(117|0));
   // unreachable;
  }
  $7 = (_malloc($3)|0);
  $8 = ($7|0)==(0|0);
  if ($8) {
   $9 = (___cxa_allocate_exception(4)|0);
   HEAP32[$9>>2] = ((51368 + 8|0));
   ___cxa_throw(($9|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $101 = $7;$102 = $4;$__db$0 = $7;$__n$0 = $3;
  }
 } else {
  $101 = 0;$102 = 0;$__db$0 = $__digits;$__n$0 = $0;
 }
 $10 = (($__iob) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 4|0);
 $13 = HEAP32[$12>>2]|0;HEAP32[$12>>2] = (($13+1)|0);
 $14 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx = (($11) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx13 = (($11) + 12|0);
 $$idx13$val = HEAP32[$$idx13>>2]|0;
 $15 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx13$val,$14)|0);
 $16 = HEAP32[$__bb>>2]|0;
 $17 = (($16) + ($__n$0)|0);
 $18 = HEAP32[$15>>2]|0;
 $19 = (($18) + 32|0);
 $20 = HEAP32[$19>>2]|0;
 (FUNCTION_TABLE_iiiii[$20 & 31]($15,$16,$17,$__db$0)|0);
 $21 = ($__n$0|0)==(0);
 if ($21) {
  $24 = 0;
 } else {
  $22 = HEAP8[$16>>0]|0;
  $23 = ($22<<24>>24)==(45);
  $24 = $23;
 }
 HEAP32[$__pat>>2] = 0;
 ;HEAP32[$__grp+0>>2]=0|0;HEAP32[$__grp+4>>2]=0|0;HEAP32[$__grp+8>>2]=0|0;
 ;HEAP32[$__sym+0>>2]=0|0;HEAP32[$__sym+4>>2]=0|0;HEAP32[$__sym+8>>2]=0|0;
 ;HEAP32[$__sn+0>>2]=0|0;HEAP32[$__sn+4>>2]=0|0;HEAP32[$__sn+8>>2]=0|0;
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$24,$11,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $25 = HEAP32[$__fd>>2]|0;
 $26 = ($__n$0|0)>($25|0);
 if ($26) {
  $27 = (($__n$0) - ($25))|0;
  $28 = $27 << 1;
  $29 = HEAP8[$__sn>>0]|0;
  $30 = $29 & 1;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $34 = $29&255;
   $35 = $34 >>> 1;
   $45 = $35;
  } else {
   $32 = (($__sn) + 4|0);
   $33 = HEAP32[$32>>2]|0;
   $45 = $33;
  }
  $36 = HEAP8[$__sym>>0]|0;
  $37 = $36 & 1;
  $38 = ($37<<24>>24)==(0);
  if ($38) {
   $41 = $36&255;
   $42 = $41 >>> 1;
   $47 = $42;
  } else {
   $39 = (($__sym) + 4|0);
   $40 = HEAP32[$39>>2]|0;
   $47 = $40;
  }
  $43 = $28 | 1;
  $44 = (($45) + ($43))|0;
  $46 = (($44) + ($47))|0;
  $$pn = $46;
 } else {
  $48 = HEAP8[$__sn>>0]|0;
  $49 = $48 & 1;
  $50 = ($49<<24>>24)==(0);
  if ($50) {
   $53 = $48&255;
   $54 = $53 >>> 1;
   $63 = $54;
  } else {
   $51 = (($__sn) + 4|0);
   $52 = HEAP32[$51>>2]|0;
   $63 = $52;
  }
  $55 = HEAP8[$__sym>>0]|0;
  $56 = $55 & 1;
  $57 = ($56<<24>>24)==(0);
  if ($57) {
   $60 = $55&255;
   $61 = $60 >>> 1;
   $65 = $61;
  } else {
   $58 = (($__sym) + 4|0);
   $59 = HEAP32[$58>>2]|0;
   $65 = $59;
  }
  $62 = (($63) + 2)|0;
  $64 = (($62) + ($65))|0;
  $$pn = $64;
 }
 $66 = (($$pn) + ($25))|0;
 $67 = ($66>>>0)>(100);
 if ($67) {
  $68 = (_malloc($66)|0);
  $69 = ($68|0)==(0|0);
  if ($69) {
   $70 = (___cxa_allocate_exception(4)|0);
   HEAP32[$70>>2] = ((51368 + 8|0));
   ___cxa_throw(($70|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $79 = $68;$__mb$0 = $68;
  }
 } else {
  $79 = 0;$__mb$0 = $vararg_buffer1;
 }
 $71 = (($__iob) + 4|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = (($__db$0) + ($__n$0)|0);
 $74 = HEAP8[$__dp>>0]|0;
 $75 = HEAP8[$__ts>>0]|0;
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb$0,$__mi,$__me,$72,$__db$0,$73,$15,$24,$__pat,$74,$75,$__grp,$__sym,$__sn,$25);
 $76 = HEAP32[$__s>>2]|0;
 $77 = HEAP32[$__mi>>2]|0;
 $78 = HEAP32[$__me>>2]|0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$76,$__mb$0,$77,$78,$__iob,$__fl);
 _free($79);
 $80 = HEAP8[$__sn>>0]|0;
 $81 = $80 & 1;
 $82 = ($81<<24>>24)==(0);
 if (!($82)) {
  $83 = (($__sn) + 8|0);
  $84 = HEAP32[$83>>2]|0;
  _free($84);
 }
 $85 = HEAP8[$__sym>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 if (!($87)) {
  $88 = (($__sym) + 8|0);
  $89 = HEAP32[$88>>2]|0;
  _free($89);
 }
 $90 = HEAP8[$__grp>>0]|0;
 $91 = $90 & 1;
 $92 = ($91<<24>>24)==(0);
 if (!($92)) {
  $93 = (($__grp) + 8|0);
  $94 = HEAP32[$93>>2]|0;
  _free($94);
 }
 $95 = (($11) + 4|0);
 $96 = HEAP32[$95>>2]|0;HEAP32[$95>>2] = (($96+-1)|0);
 $97 = ($96|0)==(0);
 if (!($97)) {
  _free($101);
  _free($102);
  STACKTOP = sp;return;
 }
 $98 = HEAP32[$11>>2]|0;
 $99 = (($98) + 8|0);
 $100 = HEAP32[$99>>2]|0;
 FUNCTION_TABLE_vi[$100 & 255]($11);
 _free($101);
 _free($102);
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$__neg,$__loc$0$0$val,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc$0$0$val = $__loc$0$0$val|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$idx = 0, $$idx$val = 0, $$idx10 = 0, $$idx10$val = 0, $$idx8 = 0, $$idx8$val = 0, $$idx9 = 0, $$idx9$val = 0, $$phi$trans$insert = 0, $$phi$trans$insert11 = 0, $$phi$trans$insert4 = 0, $$phi$trans$insert7 = 0, $$pre = 0, $$pre1 = 0, $$pre10 = 0, $$pre12 = 0, $$pre3 = 0, $$pre5 = 0, $$pre6 = 0, $$pre8 = 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp;
 $1 = sp + 16|0;
 $2 = sp + 92|0;
 $3 = sp + 40|0;
 $4 = sp + 80|0;
 $5 = sp + 96|0;
 $6 = sp + 108|0;
 $7 = sp + 56|0;
 $8 = sp + 52|0;
 $9 = sp + 28|0;
 $10 = sp + 4|0;
 $11 = sp + 68|0;
 if ($__intl) {
  $12 = (__ZNSt3__16locale2id5__getEv(40088)|0);
  $$idx9 = (($__loc$0$0$val) + 8|0);
  $$idx9$val = HEAP32[$$idx9>>2]|0;
  $$idx10 = (($__loc$0$0$val) + 12|0);
  $$idx10$val = HEAP32[$$idx10>>2]|0;
  $13 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx9$val,$$idx10$val,$12)|0);
  $14 = HEAP32[$13>>2]|0;
  if ($__neg) {
   $15 = (($14) + 44|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_vii[$16 & 63]($0,$13);
   $17 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$17&255;HEAP8[$__pat+1>>0]=($17>>8)&255;HEAP8[$__pat+2>>0]=($17>>16)&255;HEAP8[$__pat+3>>0]=$17>>24;
   $18 = HEAP32[$13>>2]|0;
   $19 = (($18) + 32|0);
   $20 = HEAP32[$19>>2]|0;
   FUNCTION_TABLE_vii[$20 & 63]($1,$13);
   $21 = HEAP8[$__sn>>0]|0;
   $22 = $21 & 1;
   $23 = ($22<<24>>24)==(0);
   if ($23) {
    $27 = (($__sn) + 1|0);
    HEAP8[$27>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $24 = (($__sn) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    HEAP8[$25>>0] = 0;
    $26 = (($__sn) + 4|0);
    HEAP32[$26>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn);
   ;HEAP32[$__sn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
  } else {
   $28 = (($14) + 40|0);
   $29 = HEAP32[$28>>2]|0;
   FUNCTION_TABLE_vii[$29 & 63]($2,$13);
   $30 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$30&255;HEAP8[$__pat+1>>0]=($30>>8)&255;HEAP8[$__pat+2>>0]=($30>>16)&255;HEAP8[$__pat+3>>0]=$30>>24;
   $31 = HEAP32[$13>>2]|0;
   $32 = (($31) + 28|0);
   $33 = HEAP32[$32>>2]|0;
   FUNCTION_TABLE_vii[$33 & 63]($3,$13);
   $34 = HEAP8[$__sn>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $40 = (($__sn) + 1|0);
    HEAP8[$40>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $37 = (($__sn) + 8|0);
    $38 = HEAP32[$37>>2]|0;
    HEAP8[$38>>0] = 0;
    $39 = (($__sn) + 4|0);
    HEAP32[$39>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn);
   ;HEAP32[$__sn+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
  }
  $41 = HEAP32[$13>>2]|0;
  $42 = (($41) + 12|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = (FUNCTION_TABLE_ii[$43 & 127]($13)|0);
  HEAP8[$__dp>>0] = $44;
  $45 = HEAP32[$13>>2]|0;
  $46 = (($45) + 16|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = (FUNCTION_TABLE_ii[$47 & 127]($13)|0);
  HEAP8[$__ts>>0] = $48;
  $49 = HEAP32[$13>>2]|0;
  $50 = (($49) + 20|0);
  $51 = HEAP32[$50>>2]|0;
  FUNCTION_TABLE_vii[$51 & 63]($4,$13);
  $52 = HEAP8[$__grp>>0]|0;
  $53 = $52 & 1;
  $54 = ($53<<24>>24)==(0);
  if ($54) {
   $58 = (($__grp) + 1|0);
   HEAP8[$58>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $55 = (($__grp) + 8|0);
   $56 = HEAP32[$55>>2]|0;
   HEAP8[$56>>0] = 0;
   $57 = (($__grp) + 4|0);
   HEAP32[$57>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
  ;HEAP32[$__grp+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  ;HEAP32[$4+0>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
  $$pre = HEAP32[$13>>2]|0;
  $$phi$trans$insert = (($$pre) + 24|0);
  $$pre1 = HEAP32[$$phi$trans$insert>>2]|0;
  FUNCTION_TABLE_vii[$$pre1 & 63]($5,$13);
  $59 = HEAP8[$__sym>>0]|0;
  $60 = $59 & 1;
  $61 = ($60<<24>>24)==(0);
  if ($61) {
   $65 = (($__sym) + 1|0);
   HEAP8[$65>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $62 = (($__sym) + 8|0);
   $63 = HEAP32[$62>>2]|0;
   HEAP8[$63>>0] = 0;
   $64 = (($__sym) + 4|0);
   HEAP32[$64>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym);
  ;HEAP32[$__sym+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  ;HEAP32[$5+0>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;
  $$pre3 = HEAP32[$13>>2]|0;
  $$phi$trans$insert4 = (($$pre3) + 36|0);
  $$pre5 = HEAP32[$$phi$trans$insert4>>2]|0;
  $66 = (FUNCTION_TABLE_ii[$$pre5 & 127]($13)|0);
  $storemerge = $66;
  HEAP32[$__fd>>2] = $storemerge;
  STACKTOP = sp;return;
 } else {
  $67 = (__ZNSt3__16locale2id5__getEv(40024)|0);
  $$idx = (($__loc$0$0$val) + 8|0);
  $$idx$val = HEAP32[$$idx>>2]|0;
  $$idx8 = (($__loc$0$0$val) + 12|0);
  $$idx8$val = HEAP32[$$idx8>>2]|0;
  $68 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx8$val,$67)|0);
  $69 = HEAP32[$68>>2]|0;
  if ($__neg) {
   $70 = (($69) + 44|0);
   $71 = HEAP32[$70>>2]|0;
   FUNCTION_TABLE_vii[$71 & 63]($6,$68);
   $72 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$72&255;HEAP8[$__pat+1>>0]=($72>>8)&255;HEAP8[$__pat+2>>0]=($72>>16)&255;HEAP8[$__pat+3>>0]=$72>>24;
   $73 = HEAP32[$68>>2]|0;
   $74 = (($73) + 32|0);
   $75 = HEAP32[$74>>2]|0;
   FUNCTION_TABLE_vii[$75 & 63]($7,$68);
   $76 = HEAP8[$__sn>>0]|0;
   $77 = $76 & 1;
   $78 = ($77<<24>>24)==(0);
   if ($78) {
    $82 = (($__sn) + 1|0);
    HEAP8[$82>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $79 = (($__sn) + 8|0);
    $80 = HEAP32[$79>>2]|0;
    HEAP8[$80>>0] = 0;
    $81 = (($__sn) + 4|0);
    HEAP32[$81>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn);
   ;HEAP32[$__sn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   ;HEAP32[$7+0>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;
  } else {
   $83 = (($69) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   FUNCTION_TABLE_vii[$84 & 63]($8,$68);
   $85 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$85&255;HEAP8[$__pat+1>>0]=($85>>8)&255;HEAP8[$__pat+2>>0]=($85>>16)&255;HEAP8[$__pat+3>>0]=$85>>24;
   $86 = HEAP32[$68>>2]|0;
   $87 = (($86) + 28|0);
   $88 = HEAP32[$87>>2]|0;
   FUNCTION_TABLE_vii[$88 & 63]($9,$68);
   $89 = HEAP8[$__sn>>0]|0;
   $90 = $89 & 1;
   $91 = ($90<<24>>24)==(0);
   if ($91) {
    $95 = (($__sn) + 1|0);
    HEAP8[$95>>0] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $92 = (($__sn) + 8|0);
    $93 = HEAP32[$92>>2]|0;
    HEAP8[$93>>0] = 0;
    $94 = (($__sn) + 4|0);
    HEAP32[$94>>2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sn);
   ;HEAP32[$__sn+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   ;HEAP32[$9+0>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
  }
  $96 = HEAP32[$68>>2]|0;
  $97 = (($96) + 12|0);
  $98 = HEAP32[$97>>2]|0;
  $99 = (FUNCTION_TABLE_ii[$98 & 127]($68)|0);
  HEAP8[$__dp>>0] = $99;
  $100 = HEAP32[$68>>2]|0;
  $101 = (($100) + 16|0);
  $102 = HEAP32[$101>>2]|0;
  $103 = (FUNCTION_TABLE_ii[$102 & 127]($68)|0);
  HEAP8[$__ts>>0] = $103;
  $104 = HEAP32[$68>>2]|0;
  $105 = (($104) + 20|0);
  $106 = HEAP32[$105>>2]|0;
  FUNCTION_TABLE_vii[$106 & 63]($10,$68);
  $107 = HEAP8[$__grp>>0]|0;
  $108 = $107 & 1;
  $109 = ($108<<24>>24)==(0);
  if ($109) {
   $113 = (($__grp) + 1|0);
   HEAP8[$113>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $110 = (($__grp) + 8|0);
   $111 = HEAP32[$110>>2]|0;
   HEAP8[$111>>0] = 0;
   $112 = (($__grp) + 4|0);
   HEAP32[$112>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
  ;HEAP32[$__grp+0>>2]=HEAP32[$10+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  ;HEAP32[$10+0>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
  $$pre6 = HEAP32[$68>>2]|0;
  $$phi$trans$insert7 = (($$pre6) + 24|0);
  $$pre8 = HEAP32[$$phi$trans$insert7>>2]|0;
  FUNCTION_TABLE_vii[$$pre8 & 63]($11,$68);
  $114 = HEAP8[$__sym>>0]|0;
  $115 = $114 & 1;
  $116 = ($115<<24>>24)==(0);
  if ($116) {
   $120 = (($__sym) + 1|0);
   HEAP8[$120>>0] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $117 = (($__sym) + 8|0);
   $118 = HEAP32[$117>>2]|0;
   HEAP8[$118>>0] = 0;
   $119 = (($__sym) + 4|0);
   HEAP32[$119>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__sym);
  ;HEAP32[$__sym+0>>2]=HEAP32[$11+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  ;HEAP32[$11+0>>2]=0|0;HEAP32[$11+4>>2]=0|0;HEAP32[$11+8>>2]=0|0;
  $$pre10 = HEAP32[$68>>2]|0;
  $$phi$trans$insert11 = (($$pre10) + 36|0);
  $$pre12 = HEAP32[$$phi$trans$insert11>>2]|0;
  $121 = (FUNCTION_TABLE_ii[$$pre12 & 127]($68)|0);
  $storemerge = $121;
  HEAP32[$__fd>>2] = $storemerge;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$$0 = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i$i20 = 0, $$01$i$i = 0, $$01$i$i18 = 0, $$012$i$i = 0, $$055 = 0, $$2 = 0, $$lcssa41 = 0, $$pn = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0, $__d$0$lcssa63 = 0, $__d$032 = 0, $__d$1$lcssa77 = 0, $__d$1$lcssa78 = 0, $__d$135 = 0, $__d$2 = 0, $__d$348 = 0, $__f$0$lcssa75 = 0, $__f$0$lcssa76 = 0, $__f$036 = 0;
 var $__f$142 = 0, $__gl$051 = 0, $__gl$1 = 0, $__ig$050 = 0, $__ig$1 = 0, $__ng$049 = 0, $__ng$1 = 0, $__p$054 = 0, $exitcond = 0, $isascii1$i = 0, $or$cond = 0, $or$cond3 = 0, $scevgep66 = 0, $scevgep6667 = 0, $scevgep68 = 0, $umax = 0, $umax65 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = (($__sn) + 1|0);
 $1 = (($__sn) + 8|0);
 $2 = (($__sn) + 4|0);
 $3 = $__flags & 512;
 $4 = ($3|0)==(0);
 $5 = (($__sym) + 1|0);
 $6 = (($__sym) + 8|0);
 $7 = (($__sym) + 4|0);
 $8 = ($__fd|0)>(0);
 $9 = (($__grp) + 1|0);
 $10 = (($__grp) + 8|0);
 $11 = (($__grp) + 4|0);
 $12 = (($__ct) + 8|0);
 $13 = (0 - ($__fd))|0;
 $$055 = $__db;$__p$054 = 0;
 while(1) {
  $14 = (($__pat) + ($__p$054)|0);
  $15 = HEAP8[$14>>0]|0;
  $16 = $15 << 24 >> 24;
  switch ($16|0) {
  case 1:  {
   $18 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $18;
   $19 = HEAP32[$__ct>>2]|0;
   $20 = (($19) + 28|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (FUNCTION_TABLE_iii[$21 & 63]($__ct,32)|0);
   $23 = HEAP32[$__me>>2]|0;
   $24 = (($23) + 1|0);
   HEAP32[$__me>>2] = $24;
   HEAP8[$23>>0] = $22;
   $$2 = $$055;
   break;
  }
  case 3:  {
   $25 = HEAP8[$__sn>>0]|0;
   $26 = $25 & 1;
   $27 = ($26<<24>>24)==(0);
   if ($27) {
    $29 = $25&255;
    $30 = $29 >>> 1;
    $32 = $30;
   } else {
    $28 = HEAP32[$2>>2]|0;
    $32 = $28;
   }
   $31 = ($32|0)==(0);
   if ($31) {
    $$2 = $$055;
   } else {
    if ($27) {
     $35 = $0;
    } else {
     $33 = HEAP32[$1>>2]|0;
     $35 = $33;
    }
    $34 = HEAP8[$35>>0]|0;
    $36 = HEAP32[$__me>>2]|0;
    $37 = (($36) + 1|0);
    HEAP32[$__me>>2] = $37;
    HEAP8[$36>>0] = $34;
    $$2 = $$055;
   }
   break;
  }
  case 0:  {
   $17 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $17;
   $$2 = $$055;
   break;
  }
  case 4:  {
   $60 = HEAP32[$__me>>2]|0;
   $61 = (($$055) + 1|0);
   $$$0 = $__neg ? $61 : $$055;
   $62 = ($$$0>>>0)<($__de>>>0);
   L16: do {
    if ($62) {
     $__d$032 = $$$0;
     while(1) {
      $65 = HEAP8[$__d$032>>0]|0;
      $isascii1$i = ($65<<24>>24)>(-1);
      if (!($isascii1$i)) {
       $__d$0$lcssa = $__d$032;
       break L16;
      }
      $66 = $65 << 24 >> 24;
      $67 = HEAP32[$12>>2]|0;
      $68 = (($67) + ($66<<1)|0);
      $69 = HEAP16[$68>>1]|0;
      $70 = $69 & 2048;
      $71 = ($70<<16>>16)==(0);
      $64 = (($__d$032) + 1|0);
      if ($71) {
       $__d$0$lcssa = $__d$032;
       break L16;
      }
      $63 = ($64>>>0)<($__de>>>0);
      if ($63) {
       $__d$032 = $64;
      } else {
       $__d$0$lcssa = $64;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   $__d$0$lcssa63 = $__d$0$lcssa;
   if ($8) {
    $72 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    if ($72) {
     $73 = $$$0;
     $74 = (($73) - ($__d$0$lcssa63))|0;
     $75 = ($74>>>0)<($13>>>0);
     $umax = $75 ? $13 : $74;
     $umax65 = $umax;
     $scevgep66 = (($umax65) + ($__fd)|0);
     $scevgep6667 = $scevgep66;
     $79 = $60;$__d$135 = $__d$0$lcssa;$__f$036 = $__fd;
     while(1) {
      $76 = (($__d$135) + -1|0);
      $77 = HEAP8[$76>>0]|0;
      $78 = (($79) + 1|0);
      HEAP32[$__me>>2] = $78;
      HEAP8[$79>>0] = $77;
      $80 = (($__f$036) + -1)|0;
      $81 = ($76>>>0)>($$$0>>>0);
      $82 = ($80|0)>(0);
      $or$cond = $81 & $82;
      if (!($or$cond)) {
       break;
      }
      $$pre = HEAP32[$__me>>2]|0;
      $79 = $$pre;$__d$135 = $76;$__f$036 = $80;
     }
     $scevgep68 = (($__d$0$lcssa) + ($umax)|0);
     if ($82) {
      $__d$1$lcssa78 = $scevgep68;$__f$0$lcssa76 = $scevgep6667;
      label = 32;
     } else {
      $90 = 0;$__d$1$lcssa77 = $scevgep68;$__f$0$lcssa75 = $scevgep6667;
     }
    } else {
     $__d$1$lcssa78 = $__d$0$lcssa;$__f$0$lcssa76 = $__fd;
     label = 32;
    }
    if ((label|0) == 32) {
     label = 0;
     $83 = HEAP32[$__ct>>2]|0;
     $84 = (($83) + 28|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = (FUNCTION_TABLE_iii[$85 & 63]($__ct,48)|0);
     $90 = $86;$__d$1$lcssa77 = $__d$1$lcssa78;$__f$0$lcssa75 = $__f$0$lcssa76;
    }
    $87 = ($__f$0$lcssa75|0)>(0);
    $88 = HEAP32[$__me>>2]|0;
    $89 = (($88) + 1|0);
    HEAP32[$__me>>2] = $89;
    if ($87) {
     $91 = $88;$__f$142 = $__f$0$lcssa75;
     while(1) {
      HEAP8[$91>>0] = $90;
      $92 = (($__f$142) + -1)|0;
      $93 = ($92|0)>(0);
      $94 = HEAP32[$__me>>2]|0;
      $95 = (($94) + 1|0);
      HEAP32[$__me>>2] = $95;
      if ($93) {
       $91 = $94;$__f$142 = $92;
      } else {
       $$lcssa41 = $94;
       break;
      }
     }
    } else {
     $$lcssa41 = $88;
    }
    HEAP8[$$lcssa41>>0] = $__dp;
    $__d$2 = $__d$1$lcssa77;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $96 = ($__d$2|0)==($$$0|0);
   if ($96) {
    $97 = HEAP32[$__ct>>2]|0;
    $98 = (($97) + 28|0);
    $99 = HEAP32[$98>>2]|0;
    $100 = (FUNCTION_TABLE_iii[$99 & 63]($__ct,48)|0);
    $101 = HEAP32[$__me>>2]|0;
    $102 = (($101) + 1|0);
    HEAP32[$__me>>2] = $102;
    HEAP8[$101>>0] = $100;
   } else {
    $103 = HEAP8[$__grp>>0]|0;
    $104 = $103 & 1;
    $105 = ($104<<24>>24)==(0);
    if ($105) {
     $107 = $103&255;
     $108 = $107 >>> 1;
     $110 = $108;
    } else {
     $106 = HEAP32[$11>>2]|0;
     $110 = $106;
    }
    $109 = ($110|0)==(0);
    if ($109) {
     $__d$348 = $__d$2;$__gl$051 = -1;$__ig$050 = 0;$__ng$049 = 0;
    } else {
     if ($105) {
      $113 = $9;
     } else {
      $111 = HEAP32[$10>>2]|0;
      $113 = $111;
     }
     $112 = HEAP8[$113>>0]|0;
     $114 = $112 << 24 >> 24;
     $__d$348 = $__d$2;$__gl$051 = $114;$__ig$050 = 0;$__ng$049 = 0;
    }
    while(1) {
     $115 = ($__ng$049|0)==($__gl$051|0);
     if ($115) {
      $116 = HEAP32[$__me>>2]|0;
      $117 = (($116) + 1|0);
      HEAP32[$__me>>2] = $117;
      HEAP8[$116>>0] = $__ts;
      $118 = (($__ig$050) + 1)|0;
      $119 = HEAP8[$__grp>>0]|0;
      $120 = $119 & 1;
      $121 = ($120<<24>>24)==(0);
      if ($121) {
       $123 = $119&255;
       $124 = $123 >>> 1;
       $126 = $124;
      } else {
       $122 = HEAP32[$11>>2]|0;
       $126 = $122;
      }
      $125 = ($118>>>0)<($126>>>0);
      if ($125) {
       if ($121) {
        $129 = $9;
       } else {
        $127 = HEAP32[$10>>2]|0;
        $129 = $127;
       }
       $128 = (($129) + ($118)|0);
       $130 = HEAP8[$128>>0]|0;
       $131 = ($130<<24>>24)==(127);
       if ($131) {
        $__gl$1 = -1;$__ig$1 = $118;$__ng$1 = 0;
       } else {
        if ($121) {
         $134 = $9;
        } else {
         $132 = HEAP32[$10>>2]|0;
         $134 = $132;
        }
        $133 = (($134) + ($118)|0);
        $135 = HEAP8[$133>>0]|0;
        $136 = $135 << 24 >> 24;
        $__gl$1 = $136;$__ig$1 = $118;$__ng$1 = 0;
       }
      } else {
       $__gl$1 = $__gl$051;$__ig$1 = $118;$__ng$1 = 0;
      }
     } else {
      $__gl$1 = $__gl$051;$__ig$1 = $__ig$050;$__ng$1 = $__ng$049;
     }
     $137 = (($__d$348) + -1|0);
     $138 = HEAP8[$137>>0]|0;
     $139 = HEAP32[$__me>>2]|0;
     $140 = (($139) + 1|0);
     HEAP32[$__me>>2] = $140;
     HEAP8[$139>>0] = $138;
     $141 = (($__ng$1) + 1)|0;
     $142 = ($137|0)==($$$0|0);
     if ($142) {
      break;
     } else {
      $__d$348 = $137;$__gl$051 = $__gl$1;$__ig$050 = $__ig$1;$__ng$049 = $141;
     }
    }
   }
   $143 = HEAP32[$__me>>2]|0;
   $144 = ($60|0)==($143|0);
   if ($144) {
    $$2 = $$$0;
   } else {
    $145 = (($143) + -1|0);
    $146 = ($145>>>0)>($60>>>0);
    if ($146) {
     $$012$i$i = $60;$149 = $145;
     while(1) {
      $147 = HEAP8[$$012$i$i>>0]|0;
      $148 = HEAP8[$149>>0]|0;
      HEAP8[$$012$i$i>>0] = $148;
      HEAP8[$149>>0] = $147;
      $150 = (($$012$i$i) + 1|0);
      $151 = (($149) + -1|0);
      $152 = ($150>>>0)<($151>>>0);
      if ($152) {
       $$012$i$i = $150;$149 = $151;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  case 2:  {
   $38 = HEAP8[$__sym>>0]|0;
   $39 = $38 & 1;
   $40 = ($39<<24>>24)==(0);
   if ($40) {
    $42 = $38&255;
    $43 = $42 >>> 1;
    $45 = $43;
   } else {
    $41 = HEAP32[$7>>2]|0;
    $45 = $41;
   }
   $44 = ($45|0)==(0);
   $or$cond3 = $44 | $4;
   if ($or$cond3) {
    $$2 = $$055;
   } else {
    if ($40) {
     $48 = $38&255;
     $49 = $48 >>> 1;
     $51 = $5;$52 = $49;
    } else {
     $46 = HEAP32[$6>>2]|0;
     $47 = HEAP32[$7>>2]|0;
     $51 = $46;$52 = $47;
    }
    $50 = (($51) + ($52)|0);
    $53 = HEAP32[$__me>>2]|0;
    $54 = ($51|0)==($50|0);
    if ($54) {
     $$0$lcssa$i$i20 = $53;
    } else {
     $$01$i$i18 = $53;$56 = $51;
     while(1) {
      $55 = HEAP8[$56>>0]|0;
      HEAP8[$$01$i$i18>>0] = $55;
      $57 = (($56) + 1|0);
      $58 = (($$01$i$i18) + 1|0);
      $59 = ($57|0)==($50|0);
      if ($59) {
       $$0$lcssa$i$i20 = $58;
       break;
      } else {
       $$01$i$i18 = $58;$56 = $57;
      }
     }
    }
    HEAP32[$__me>>2] = $$0$lcssa$i$i20;
    $$2 = $$055;
   }
   break;
  }
  default: {
   $$2 = $$055;
  }
  }
  $153 = (($__p$054) + 1)|0;
  $exitcond = ($153|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$055 = $$2;$__p$054 = $153;
  }
 }
 $154 = HEAP8[$__sn>>0]|0;
 $155 = $154 & 1;
 $156 = ($155<<24>>24)==(0);
 if ($156) {
  $158 = $154&255;
  $159 = $158 >>> 1;
  $161 = $159;
 } else {
  $157 = HEAP32[$2>>2]|0;
  $161 = $157;
 }
 $160 = ($161>>>0)>(1);
 if ($160) {
  if ($156) {
   $164 = $154&255;
   $165 = $164 >>> 1;
   $$pn = $0;$168 = $165;
  } else {
   $162 = HEAP32[$1>>2]|0;
   $163 = HEAP32[$2>>2]|0;
   $$pn = $162;$168 = $163;
  }
  $166 = (($$pn) + 1|0);
  $167 = (($$pn) + ($168)|0);
  $169 = HEAP32[$__me>>2]|0;
  $170 = ($166|0)==($167|0);
  if ($170) {
   $$0$lcssa$i$i = $169;
  } else {
   $$01$i$i = $169;$172 = $166;
   while(1) {
    $171 = HEAP8[$172>>0]|0;
    HEAP8[$$01$i$i>>0] = $171;
    $173 = (($172) + 1|0);
    $174 = (($$01$i$i) + 1|0);
    $175 = ($173|0)==($167|0);
    if ($175) {
     $$0$lcssa$i$i = $174;
     break;
    } else {
     $$01$i$i = $174;$172 = $173;
    }
   }
  }
  HEAP32[$__me>>2] = $$0$lcssa$i$i;
 }
 $176 = $__flags & 176;
 if ((($176|0) == 32)) {
  $177 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $177;
  STACKTOP = sp;return;
 } else if ((($176|0) == 16)) {
  STACKTOP = sp;return;
 } else {
  HEAP32[$__mi>>2] = $__mb;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$idx = 0, $$idx$val = 0, $$idx9 = 0, $$idx9$val = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0;
 $__pat = sp;
 $__dp = sp + 52|0;
 $__ts = sp + 53|0;
 $__grp = sp + 16|0;
 $__sym = sp + 4|0;
 $__sn = sp + 40|0;
 $__fd = sp + 36|0;
 $__mbuf = sp + 56|0;
 $__mi = sp + 28|0;
 $__me = sp + 32|0;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 $$idx = (($1) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx9 = (($1) + 12|0);
 $$idx9$val = HEAP32[$$idx9>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx9$val,$4)|0);
 $6 = HEAP8[$__digits>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $14 = $12;
 } else {
  $9 = (($__digits) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $14 = $10;
 }
 $13 = ($14|0)==(0);
 if ($13) {
  $25 = 0;
 } else {
  if ($8) {
   $17 = (($__digits) + 1|0);
   $19 = $17;
  } else {
   $15 = (($__digits) + 8|0);
   $16 = HEAP32[$15>>2]|0;
   $19 = $16;
  }
  $18 = HEAP8[$19>>0]|0;
  $20 = HEAP32[$5>>2]|0;
  $21 = (($20) + 28|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (FUNCTION_TABLE_iii[$22 & 63]($5,45)|0);
  $24 = ($18<<24>>24)==($23<<24>>24);
  $25 = $24;
 }
 HEAP32[$__pat>>2] = 0;
 ;HEAP32[$__grp+0>>2]=0|0;HEAP32[$__grp+4>>2]=0|0;HEAP32[$__grp+8>>2]=0|0;
 ;HEAP32[$__sym+0>>2]=0|0;HEAP32[$__sym+4>>2]=0|0;HEAP32[$__sym+8>>2]=0|0;
 ;HEAP32[$__sn+0>>2]=0|0;HEAP32[$__sn+4>>2]=0|0;HEAP32[$__sn+8>>2]=0|0;
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl,$25,$1,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $26 = HEAP8[$__digits>>0]|0;
 $27 = $26 & 1;
 $28 = ($27<<24>>24)==(0);
 if ($28) {
  $31 = $26&255;
  $32 = $31 >>> 1;
  $35 = $32;
 } else {
  $29 = (($__digits) + 4|0);
  $30 = HEAP32[$29>>2]|0;
  $35 = $30;
 }
 $33 = HEAP32[$__fd>>2]|0;
 $34 = ($35|0)>($33|0);
 if ($34) {
  if ($28) {
   $38 = $26&255;
   $39 = $38 >>> 1;
   $41 = $39;
  } else {
   $36 = (($__digits) + 4|0);
   $37 = HEAP32[$36>>2]|0;
   $41 = $37;
  }
  $40 = (($41) - ($33))|0;
  $42 = $40 << 1;
  $43 = HEAP8[$__sn>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  if ($45) {
   $48 = $43&255;
   $49 = $48 >>> 1;
   $59 = $49;
  } else {
   $46 = (($__sn) + 4|0);
   $47 = HEAP32[$46>>2]|0;
   $59 = $47;
  }
  $50 = HEAP8[$__sym>>0]|0;
  $51 = $50 & 1;
  $52 = ($51<<24>>24)==(0);
  if ($52) {
   $55 = $50&255;
   $56 = $55 >>> 1;
   $61 = $56;
  } else {
   $53 = (($__sym) + 4|0);
   $54 = HEAP32[$53>>2]|0;
   $61 = $54;
  }
  $57 = $42 | 1;
  $58 = (($59) + ($57))|0;
  $60 = (($58) + ($61))|0;
  $$pn = $60;
 } else {
  $62 = HEAP8[$__sn>>0]|0;
  $63 = $62 & 1;
  $64 = ($63<<24>>24)==(0);
  if ($64) {
   $67 = $62&255;
   $68 = $67 >>> 1;
   $77 = $68;
  } else {
   $65 = (($__sn) + 4|0);
   $66 = HEAP32[$65>>2]|0;
   $77 = $66;
  }
  $69 = HEAP8[$__sym>>0]|0;
  $70 = $69 & 1;
  $71 = ($70<<24>>24)==(0);
  if ($71) {
   $74 = $69&255;
   $75 = $74 >>> 1;
   $79 = $75;
  } else {
   $72 = (($__sym) + 4|0);
   $73 = HEAP32[$72>>2]|0;
   $79 = $73;
  }
  $76 = (($77) + 2)|0;
  $78 = (($76) + ($79))|0;
  $$pn = $78;
 }
 $80 = (($$pn) + ($33))|0;
 $81 = ($80>>>0)>(100);
 if ($81) {
  $82 = (_malloc($80)|0);
  $83 = ($82|0)==(0|0);
  if ($83) {
   $84 = (___cxa_allocate_exception(4)|0);
   HEAP32[$84>>2] = ((51368 + 8|0));
   ___cxa_throw(($84|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $102 = $82;$__mb$0 = $82;
  }
 } else {
  $102 = 0;$__mb$0 = $__mbuf;
 }
 $85 = (($__iob) + 4|0);
 $86 = HEAP32[$85>>2]|0;
 if ($28) {
  $91 = (($__digits) + 1|0);
  $92 = $26&255;
  $93 = $92 >>> 1;
  $95 = $91;$96 = $93;
 } else {
  $87 = (($__digits) + 8|0);
  $88 = HEAP32[$87>>2]|0;
  $89 = (($__digits) + 4|0);
  $90 = HEAP32[$89>>2]|0;
  $95 = $88;$96 = $90;
 }
 $94 = (($95) + ($96)|0);
 $97 = HEAP8[$__dp>>0]|0;
 $98 = HEAP8[$__ts>>0]|0;
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb$0,$__mi,$__me,$86,$95,$94,$5,$25,$__pat,$97,$98,$__grp,$__sym,$__sn,$33);
 $99 = HEAP32[$__s>>2]|0;
 $100 = HEAP32[$__mi>>2]|0;
 $101 = HEAP32[$__me>>2]|0;
 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$99,$__mb$0,$100,$101,$__iob,$__fl);
 _free($102);
 $103 = HEAP8[$__sn>>0]|0;
 $104 = $103 & 1;
 $105 = ($104<<24>>24)==(0);
 if (!($105)) {
  $106 = (($__sn) + 8|0);
  $107 = HEAP32[$106>>2]|0;
  _free($107);
 }
 $108 = HEAP8[$__sym>>0]|0;
 $109 = $108 & 1;
 $110 = ($109<<24>>24)==(0);
 if (!($110)) {
  $111 = (($__sym) + 8|0);
  $112 = HEAP32[$111>>2]|0;
  _free($112);
 }
 $113 = HEAP8[$__grp>>0]|0;
 $114 = $113 & 1;
 $115 = ($114<<24>>24)==(0);
 if (!($115)) {
  $116 = (($__grp) + 8|0);
  $117 = HEAP32[$116>>2]|0;
  _free($117);
 }
 $118 = (($1) + 4|0);
 $119 = HEAP32[$118>>2]|0;HEAP32[$118>>2] = (($119+-1)|0);
 $120 = ($119|0)==(0);
 if (!($120)) {
  STACKTOP = sp;return;
 }
 $121 = HEAP32[$1>>2]|0;
 $122 = (($121) + 8|0);
 $123 = HEAP32[$122>>2]|0;
 FUNCTION_TABLE_vi[$123 & 255]($1);
 STACKTOP = sp;return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__units) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__units = +$__units;
 var $$idx = 0, $$idx$val = 0, $$idx12 = 0, $$idx12$val = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__mb$0 = 0;
 var $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 976|0;
 $vararg_buffer1 = sp;
 $__buf = sp + 868|0;
 $__bb = sp + 816|0;
 $__digits = sp + 416|0;
 $__pat = sp + 408|0;
 $__dp = sp + 860|0;
 $__ts = sp + 400|0;
 $__grp = sp + 824|0;
 $__sym = sp + 836|0;
 $__sn = sp + 848|0;
 $__fd = sp + 820|0;
 $__mi = sp + 404|0;
 $__me = sp + 864|0;
 HEAP32[$__bb>>2] = $__buf;
 HEAPF64[tempDoublePtr>>3]=$__units;HEAP32[$vararg_buffer1>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_buffer1+4>>2]=HEAP32[tempDoublePtr+4>>2];
 $0 = (_snprintf($__buf,100,40400,$vararg_buffer1)|0);
 $1 = ($0>>>0)>(99);
 if ($1) {
  $2 = (__ZNSt3__16__clocEv()|0);
  HEAPF64[tempDoublePtr>>3]=$__units;HEAP32[$vararg_buffer1>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_buffer1+4>>2]=HEAP32[tempDoublePtr+4>>2];
  $3 = (__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__bb,$2,40400,$vararg_buffer1)|0);
  $4 = HEAP32[$__bb>>2]|0;
  $5 = ($4|0)==(0|0);
  if ($5) {
   $6 = (___cxa_allocate_exception(4)|0);
   HEAP32[$6>>2] = ((51368 + 8|0));
   ___cxa_throw(($6|0),(51424|0),(117|0));
   // unreachable;
  }
  $7 = $3 << 2;
  $8 = (_malloc($7)|0);
  $9 = ($8|0)==(0|0);
  if ($9) {
   $10 = (___cxa_allocate_exception(4)|0);
   HEAP32[$10>>2] = ((51368 + 8|0));
   ___cxa_throw(($10|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $105 = $8;$106 = $4;$__db$0 = $8;$__n$0 = $3;
  }
 } else {
  $105 = 0;$106 = 0;$__db$0 = $__digits;$__n$0 = $0;
 }
 $11 = (($__iob) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + 4|0);
 $14 = HEAP32[$13>>2]|0;HEAP32[$13>>2] = (($14+1)|0);
 $15 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx = (($12) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx12 = (($12) + 12|0);
 $$idx12$val = HEAP32[$$idx12>>2]|0;
 $16 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx12$val,$15)|0);
 $17 = HEAP32[$__bb>>2]|0;
 $18 = (($17) + ($__n$0)|0);
 $19 = HEAP32[$16>>2]|0;
 $20 = (($19) + 48|0);
 $21 = HEAP32[$20>>2]|0;
 (FUNCTION_TABLE_iiiii[$21 & 31]($16,$17,$18,$__db$0)|0);
 $22 = ($__n$0|0)==(0);
 if ($22) {
  $25 = 0;
 } else {
  $23 = HEAP8[$17>>0]|0;
  $24 = ($23<<24>>24)==(45);
  $25 = $24;
 }
 HEAP32[$__pat>>2] = 0;
 ;HEAP32[$__grp+0>>2]=0|0;HEAP32[$__grp+4>>2]=0|0;HEAP32[$__grp+8>>2]=0|0;
 ;HEAP32[$__sym+0>>2]=0|0;HEAP32[$__sym+4>>2]=0|0;HEAP32[$__sym+8>>2]=0|0;
 ;HEAP32[$__sn+0>>2]=0|0;HEAP32[$__sn+4>>2]=0|0;HEAP32[$__sn+8>>2]=0|0;
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$25,$12,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $26 = HEAP32[$__fd>>2]|0;
 $27 = ($__n$0|0)>($26|0);
 if ($27) {
  $28 = (($__n$0) - ($26))|0;
  $29 = $28 << 1;
  $30 = HEAP8[$__sn>>0]|0;
  $31 = $30 & 1;
  $32 = ($31<<24>>24)==(0);
  if ($32) {
   $35 = $30&255;
   $36 = $35 >>> 1;
   $46 = $36;
  } else {
   $33 = (($__sn) + 4|0);
   $34 = HEAP32[$33>>2]|0;
   $46 = $34;
  }
  $37 = HEAP8[$__sym>>0]|0;
  $38 = $37 & 1;
  $39 = ($38<<24>>24)==(0);
  if ($39) {
   $42 = $37&255;
   $43 = $42 >>> 1;
   $48 = $43;
  } else {
   $40 = (($__sym) + 4|0);
   $41 = HEAP32[$40>>2]|0;
   $48 = $41;
  }
  $44 = $29 | 1;
  $45 = (($46) + ($44))|0;
  $47 = (($45) + ($48))|0;
  $$pn = $47;
 } else {
  $49 = HEAP8[$__sn>>0]|0;
  $50 = $49 & 1;
  $51 = ($50<<24>>24)==(0);
  if ($51) {
   $54 = $49&255;
   $55 = $54 >>> 1;
   $64 = $55;
  } else {
   $52 = (($__sn) + 4|0);
   $53 = HEAP32[$52>>2]|0;
   $64 = $53;
  }
  $56 = HEAP8[$__sym>>0]|0;
  $57 = $56 & 1;
  $58 = ($57<<24>>24)==(0);
  if ($58) {
   $61 = $56&255;
   $62 = $61 >>> 1;
   $66 = $62;
  } else {
   $59 = (($__sym) + 4|0);
   $60 = HEAP32[$59>>2]|0;
   $66 = $60;
  }
  $63 = (($64) + 2)|0;
  $65 = (($63) + ($66))|0;
  $$pn = $65;
 }
 $67 = (($$pn) + ($26))|0;
 $68 = ($67>>>0)>(100);
 if ($68) {
  $69 = $67 << 2;
  $70 = (_malloc($69)|0);
  $71 = ($70|0)==(0|0);
  if ($71) {
   $72 = (___cxa_allocate_exception(4)|0);
   HEAP32[$72>>2] = ((51368 + 8|0));
   ___cxa_throw(($72|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $82 = $70;$__mb$0 = $70;
  }
 } else {
  $82 = 0;$__mb$0 = $vararg_buffer1;
 }
 $73 = (($__iob) + 4|0);
 $74 = HEAP32[$73>>2]|0;
 $75 = (($__db$0) + ($__n$0<<2)|0);
 $76 = HEAP32[$__dp>>2]|0;
 $77 = HEAP32[$__ts>>2]|0;
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb$0,$__mi,$__me,$74,$__db$0,$75,$16,$25,$__pat,$76,$77,$__grp,$__sym,$__sn,$26);
 $78 = HEAP32[$__s>>2]|0;
 $79 = HEAP32[$__mi>>2]|0;
 $80 = HEAP32[$__me>>2]|0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$78,$__mb$0,$79,$80,$__iob,$__fl);
 $81 = ($82|0)==(0|0);
 if (!($81)) {
  _free($82);
 }
 $83 = HEAP8[$__sn>>0]|0;
 $84 = $83 & 1;
 $85 = ($84<<24>>24)==(0);
 if (!($85)) {
  $86 = (($__sn) + 8|0);
  $87 = HEAP32[$86>>2]|0;
  _free($87);
 }
 $88 = HEAP8[$__sym>>0]|0;
 $89 = $88 & 1;
 $90 = ($89<<24>>24)==(0);
 if (!($90)) {
  $91 = (($__sym) + 8|0);
  $92 = HEAP32[$91>>2]|0;
  _free($92);
 }
 $93 = HEAP8[$__grp>>0]|0;
 $94 = $93 & 1;
 $95 = ($94<<24>>24)==(0);
 if (!($95)) {
  $96 = (($__grp) + 8|0);
  $97 = HEAP32[$96>>2]|0;
  _free($97);
 }
 $98 = (($12) + 4|0);
 $99 = HEAP32[$98>>2]|0;HEAP32[$98>>2] = (($99+-1)|0);
 $100 = ($99|0)==(0);
 if ($100) {
  $101 = HEAP32[$12>>2]|0;
  $102 = (($101) + 8|0);
  $103 = HEAP32[$102>>2]|0;
  FUNCTION_TABLE_vi[$103 & 255]($12);
 }
 $104 = ($105|0)==(0|0);
 if ($104) {
  _free($106);
  STACKTOP = sp;return;
 }
 _free($105);
 _free($106);
 STACKTOP = sp;return;
}
function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$__neg,$__loc$0$0$val,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__intl = $__intl|0;
 $__neg = $__neg|0;
 $__loc$0$0$val = $__loc$0$0$val|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$idx = 0, $$idx$val = 0, $$idx7 = 0, $$idx7$val = 0, $$idx8 = 0, $$idx8$val = 0, $$idx9 = 0, $$idx9$val = 0, $$phi$trans$insert1 = 0, $$phi$trans$insert11 = 0, $$phi$trans$insert4 = 0, $$phi$trans$insert8 = 0, $$pre = 0, $$pre10 = 0, $$pre12 = 0, $$pre2 = 0, $$pre3 = 0, $$pre5 = 0, $$pre7 = 0, $$pre9 = 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $0 = sp;
 $1 = sp + 16|0;
 $2 = sp + 92|0;
 $3 = sp + 40|0;
 $4 = sp + 80|0;
 $5 = sp + 96|0;
 $6 = sp + 108|0;
 $7 = sp + 56|0;
 $8 = sp + 52|0;
 $9 = sp + 28|0;
 $10 = sp + 4|0;
 $11 = sp + 68|0;
 if ($__intl) {
  $12 = (__ZNSt3__16locale2id5__getEv(40216)|0);
  $$idx8 = (($__loc$0$0$val) + 8|0);
  $$idx8$val = HEAP32[$$idx8>>2]|0;
  $$idx9 = (($__loc$0$0$val) + 12|0);
  $$idx9$val = HEAP32[$$idx9>>2]|0;
  $13 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx8$val,$$idx9$val,$12)|0);
  $14 = HEAP32[$13>>2]|0;
  if ($__neg) {
   $15 = (($14) + 44|0);
   $16 = HEAP32[$15>>2]|0;
   FUNCTION_TABLE_vii[$16 & 63]($0,$13);
   $17 = HEAP32[$0>>2]|0;
   HEAP8[$__pat>>0]=$17&255;HEAP8[$__pat+1>>0]=($17>>8)&255;HEAP8[$__pat+2>>0]=($17>>16)&255;HEAP8[$__pat+3>>0]=$17>>24;
   $18 = HEAP32[$13>>2]|0;
   $19 = (($18) + 32|0);
   $20 = HEAP32[$19>>2]|0;
   FUNCTION_TABLE_vii[$20 & 63]($1,$13);
   $21 = HEAP8[$__sn>>0]|0;
   $22 = $21 & 1;
   $23 = ($22<<24>>24)==(0);
   if ($23) {
    $27 = (($__sn) + 4|0);
    HEAP32[$27>>2] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $24 = (($__sn) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    HEAP32[$25>>2] = 0;
    $26 = (($__sn) + 4|0);
    HEAP32[$26>>2] = 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn);
   ;HEAP32[$__sn+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$1+8>>2]|0;
   ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
  } else {
   $28 = (($14) + 40|0);
   $29 = HEAP32[$28>>2]|0;
   FUNCTION_TABLE_vii[$29 & 63]($2,$13);
   $30 = HEAP32[$2>>2]|0;
   HEAP8[$__pat>>0]=$30&255;HEAP8[$__pat+1>>0]=($30>>8)&255;HEAP8[$__pat+2>>0]=($30>>16)&255;HEAP8[$__pat+3>>0]=$30>>24;
   $31 = HEAP32[$13>>2]|0;
   $32 = (($31) + 28|0);
   $33 = HEAP32[$32>>2]|0;
   FUNCTION_TABLE_vii[$33 & 63]($3,$13);
   $34 = HEAP8[$__sn>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $40 = (($__sn) + 4|0);
    HEAP32[$40>>2] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $37 = (($__sn) + 8|0);
    $38 = HEAP32[$37>>2]|0;
    HEAP32[$38>>2] = 0;
    $39 = (($__sn) + 4|0);
    HEAP32[$39>>2] = 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn);
   ;HEAP32[$__sn+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$3+8>>2]|0;
   ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
  }
  $41 = HEAP32[$13>>2]|0;
  $42 = (($41) + 12|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = (FUNCTION_TABLE_ii[$43 & 127]($13)|0);
  HEAP32[$__dp>>2] = $44;
  $45 = HEAP32[$13>>2]|0;
  $46 = (($45) + 16|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = (FUNCTION_TABLE_ii[$47 & 127]($13)|0);
  HEAP32[$__ts>>2] = $48;
  $49 = HEAP32[$13>>2]|0;
  $50 = (($49) + 20|0);
  $51 = HEAP32[$50>>2]|0;
  FUNCTION_TABLE_vii[$51 & 63]($4,$13);
  $52 = HEAP8[$__grp>>0]|0;
  $53 = $52 & 1;
  $54 = ($53<<24>>24)==(0);
  if ($54) {
   $58 = (($__grp) + 1|0);
   HEAP8[$58>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $55 = (($__grp) + 8|0);
   $56 = HEAP32[$55>>2]|0;
   HEAP8[$56>>0] = 0;
   $57 = (($__grp) + 4|0);
   HEAP32[$57>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
  ;HEAP32[$__grp+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$4+8>>2]|0;
  ;HEAP32[$4+0>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
  $$pre = HEAP32[$13>>2]|0;
  $$phi$trans$insert1 = (($$pre) + 24|0);
  $$pre2 = HEAP32[$$phi$trans$insert1>>2]|0;
  FUNCTION_TABLE_vii[$$pre2 & 63]($5,$13);
  $59 = HEAP8[$__sym>>0]|0;
  $60 = $59 & 1;
  $61 = ($60<<24>>24)==(0);
  if ($61) {
   $65 = (($__sym) + 4|0);
   HEAP32[$65>>2] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $62 = (($__sym) + 8|0);
   $63 = HEAP32[$62>>2]|0;
   HEAP32[$63>>2] = 0;
   $64 = (($__sym) + 4|0);
   HEAP32[$64>>2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym);
  ;HEAP32[$__sym+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$5+8>>2]|0;
  ;HEAP32[$5+0>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;
  $$pre3 = HEAP32[$13>>2]|0;
  $$phi$trans$insert4 = (($$pre3) + 36|0);
  $$pre5 = HEAP32[$$phi$trans$insert4>>2]|0;
  $66 = (FUNCTION_TABLE_ii[$$pre5 & 127]($13)|0);
  $storemerge = $66;
  HEAP32[$__fd>>2] = $storemerge;
  STACKTOP = sp;return;
 } else {
  $67 = (__ZNSt3__16locale2id5__getEv(40152)|0);
  $$idx = (($__loc$0$0$val) + 8|0);
  $$idx$val = HEAP32[$$idx>>2]|0;
  $$idx7 = (($__loc$0$0$val) + 12|0);
  $$idx7$val = HEAP32[$$idx7>>2]|0;
  $68 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx7$val,$67)|0);
  $69 = HEAP32[$68>>2]|0;
  if ($__neg) {
   $70 = (($69) + 44|0);
   $71 = HEAP32[$70>>2]|0;
   FUNCTION_TABLE_vii[$71 & 63]($6,$68);
   $72 = HEAP32[$6>>2]|0;
   HEAP8[$__pat>>0]=$72&255;HEAP8[$__pat+1>>0]=($72>>8)&255;HEAP8[$__pat+2>>0]=($72>>16)&255;HEAP8[$__pat+3>>0]=$72>>24;
   $73 = HEAP32[$68>>2]|0;
   $74 = (($73) + 32|0);
   $75 = HEAP32[$74>>2]|0;
   FUNCTION_TABLE_vii[$75 & 63]($7,$68);
   $76 = HEAP8[$__sn>>0]|0;
   $77 = $76 & 1;
   $78 = ($77<<24>>24)==(0);
   if ($78) {
    $82 = (($__sn) + 4|0);
    HEAP32[$82>>2] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $79 = (($__sn) + 8|0);
    $80 = HEAP32[$79>>2]|0;
    HEAP32[$80>>2] = 0;
    $81 = (($__sn) + 4|0);
    HEAP32[$81>>2] = 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn);
   ;HEAP32[$__sn+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$7+8>>2]|0;
   ;HEAP32[$7+0>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;
  } else {
   $83 = (($69) + 40|0);
   $84 = HEAP32[$83>>2]|0;
   FUNCTION_TABLE_vii[$84 & 63]($8,$68);
   $85 = HEAP32[$8>>2]|0;
   HEAP8[$__pat>>0]=$85&255;HEAP8[$__pat+1>>0]=($85>>8)&255;HEAP8[$__pat+2>>0]=($85>>16)&255;HEAP8[$__pat+3>>0]=$85>>24;
   $86 = HEAP32[$68>>2]|0;
   $87 = (($86) + 28|0);
   $88 = HEAP32[$87>>2]|0;
   FUNCTION_TABLE_vii[$88 & 63]($9,$68);
   $89 = HEAP8[$__sn>>0]|0;
   $90 = $89 & 1;
   $91 = ($90<<24>>24)==(0);
   if ($91) {
    $95 = (($__sn) + 4|0);
    HEAP32[$95>>2] = 0;
    HEAP8[$__sn>>0] = 0;
   } else {
    $92 = (($__sn) + 8|0);
    $93 = HEAP32[$92>>2]|0;
    HEAP32[$93>>2] = 0;
    $94 = (($__sn) + 4|0);
    HEAP32[$94>>2] = 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sn);
   ;HEAP32[$__sn+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$__sn+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$__sn+8>>2]=HEAP32[$9+8>>2]|0;
   ;HEAP32[$9+0>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
  }
  $96 = HEAP32[$68>>2]|0;
  $97 = (($96) + 12|0);
  $98 = HEAP32[$97>>2]|0;
  $99 = (FUNCTION_TABLE_ii[$98 & 127]($68)|0);
  HEAP32[$__dp>>2] = $99;
  $100 = HEAP32[$68>>2]|0;
  $101 = (($100) + 16|0);
  $102 = HEAP32[$101>>2]|0;
  $103 = (FUNCTION_TABLE_ii[$102 & 127]($68)|0);
  HEAP32[$__ts>>2] = $103;
  $104 = HEAP32[$68>>2]|0;
  $105 = (($104) + 20|0);
  $106 = HEAP32[$105>>2]|0;
  FUNCTION_TABLE_vii[$106 & 63]($10,$68);
  $107 = HEAP8[$__grp>>0]|0;
  $108 = $107 & 1;
  $109 = ($108<<24>>24)==(0);
  if ($109) {
   $113 = (($__grp) + 1|0);
   HEAP8[$113>>0] = 0;
   HEAP8[$__grp>>0] = 0;
  } else {
   $110 = (($__grp) + 8|0);
   $111 = HEAP32[$110>>2]|0;
   HEAP8[$111>>0] = 0;
   $112 = (($__grp) + 4|0);
   HEAP32[$112>>2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($__grp);
  ;HEAP32[$__grp+0>>2]=HEAP32[$10+0>>2]|0;HEAP32[$__grp+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$__grp+8>>2]=HEAP32[$10+8>>2]|0;
  ;HEAP32[$10+0>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
  $$pre7 = HEAP32[$68>>2]|0;
  $$phi$trans$insert8 = (($$pre7) + 24|0);
  $$pre9 = HEAP32[$$phi$trans$insert8>>2]|0;
  FUNCTION_TABLE_vii[$$pre9 & 63]($11,$68);
  $114 = HEAP8[$__sym>>0]|0;
  $115 = $114 & 1;
  $116 = ($115<<24>>24)==(0);
  if ($116) {
   $120 = (($__sym) + 4|0);
   HEAP32[$120>>2] = 0;
   HEAP8[$__sym>>0] = 0;
  } else {
   $117 = (($__sym) + 8|0);
   $118 = HEAP32[$117>>2]|0;
   HEAP32[$118>>2] = 0;
   $119 = (($__sym) + 4|0);
   HEAP32[$119>>2] = 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($__sym);
  ;HEAP32[$__sym+0>>2]=HEAP32[$11+0>>2]|0;HEAP32[$__sym+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$__sym+8>>2]=HEAP32[$11+8>>2]|0;
  ;HEAP32[$11+0>>2]=0|0;HEAP32[$11+4>>2]=0|0;HEAP32[$11+8>>2]=0|0;
  $$pre10 = HEAP32[$68>>2]|0;
  $$phi$trans$insert11 = (($$pre10) + 36|0);
  $$pre12 = HEAP32[$$phi$trans$insert11>>2]|0;
  $121 = (FUNCTION_TABLE_ii[$$pre12 & 127]($68)|0);
  $storemerge = $121;
  HEAP32[$__fd>>2] = $storemerge;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb,$__mi,$__me,$__flags,$__db,$__de,$__ct,$__neg,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd) {
 $__mb = $__mb|0;
 $__mi = $__mi|0;
 $__me = $__me|0;
 $__flags = $__flags|0;
 $__db = $__db|0;
 $__de = $__de|0;
 $__ct = $__ct|0;
 $__neg = $__neg|0;
 $__pat = $__pat|0;
 $__dp = $__dp|0;
 $__ts = $__ts|0;
 $__grp = $__grp|0;
 $__sym = $__sym|0;
 $__sn = $__sn|0;
 $__fd = $__fd|0;
 var $$$0 = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i$i22 = 0, $$01$i$i = 0, $$01$i$i19 = 0, $$012$i$i = 0, $$060 = 0, $$2 = 0, $$lcssa45 = 0, $$pn = 0, $$pre = 0, $$promoted4$i$i = 0, $$promoted4$i$i16 = 0, $$sum = 0, $$sum33 = 0, $$sum75 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $86$phi = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__d$0$lcssa = 0, $__d$034 = 0, $__d$1$lcssa7881 = 0, $__d$1$lcssa79 = 0, $__d$137 = 0, $__d$2 = 0;
 var $__d$354 = 0, $__f$0$lcssa77 = 0, $__f$038 = 0, $__f$146 = 0, $__gl$057 = 0, $__gl$057$ph = 0, $__gl$1 = 0, $__ig$056 = 0, $__ig$1 = 0, $__me$promoted = 0, $__ng$055 = 0, $__ng$1 = 0, $__p$059 = 0, $exitcond = 0, $or$cond = 0, $or$cond3 = 0, $scevgep = 0, $scevgep$i$i = 0, $scevgep$i$i17 = 0, $scevgep6$i$i = 0;
 var $scevgep6$i$i20 = 0, $scevgep71 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$__me>>2] = $__mb;
 $0 = (($__sn) + 4|0);
 $1 = (($__sn) + 8|0);
 $2 = $__flags & 512;
 $3 = ($2|0)==(0);
 $4 = (($__sym) + 4|0);
 $5 = (($__sym) + 8|0);
 $6 = ($__fd|0)>(0);
 $7 = (($__grp) + 1|0);
 $8 = (($__grp) + 8|0);
 $9 = (($__grp) + 4|0);
 $$060 = $__db;$__p$059 = 0;
 while(1) {
  $10 = (($__pat) + ($__p$059)|0);
  $11 = HEAP8[$10>>0]|0;
  $12 = $11 << 24 >> 24;
  switch ($12|0) {
  case 2:  {
   $34 = HEAP8[$__sym>>0]|0;
   $35 = $34 & 1;
   $36 = ($35<<24>>24)==(0);
   if ($36) {
    $38 = $34&255;
    $39 = $38 >>> 1;
    $41 = $39;
   } else {
    $37 = HEAP32[$4>>2]|0;
    $41 = $37;
   }
   $40 = ($41|0)==(0);
   $or$cond3 = $40 | $3;
   if ($or$cond3) {
    $$2 = $$060;
   } else {
    if ($36) {
     $44 = $34&255;
     $45 = $44 >>> 1;
     $47 = $4;$48 = $45;
    } else {
     $42 = HEAP32[$5>>2]|0;
     $43 = HEAP32[$4>>2]|0;
     $47 = $42;$48 = $43;
    }
    $46 = (($47) + ($48<<2)|0);
    $49 = HEAP32[$__me>>2]|0;
    $50 = ($47|0)==($46|0);
    if ($50) {
     $$0$lcssa$i$i22 = $49;
    } else {
     $$promoted4$i$i16 = $47;
     $$sum33 = (($48) + -1)|0;
     $scevgep$i$i17 = (($47) + ($$sum33<<2)|0);
     $51 = $scevgep$i$i17;
     $52 = (($51) - ($$promoted4$i$i16))|0;
     $53 = $52 >>> 2;
     $$01$i$i19 = $49;$55 = $47;
     while(1) {
      $54 = HEAP32[$55>>2]|0;
      HEAP32[$$01$i$i19>>2] = $54;
      $56 = (($55) + 4|0);
      $57 = (($$01$i$i19) + 4|0);
      $58 = ($56|0)==($46|0);
      if ($58) {
       break;
      } else {
       $$01$i$i19 = $57;$55 = $56;
      }
     }
     $59 = (($53) + 1)|0;
     $scevgep6$i$i20 = (($49) + ($59<<2)|0);
     $$0$lcssa$i$i22 = $scevgep6$i$i20;
    }
    HEAP32[$__me>>2] = $$0$lcssa$i$i22;
    $$2 = $$060;
   }
   break;
  }
  case 1:  {
   $14 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $14;
   $15 = HEAP32[$__ct>>2]|0;
   $16 = (($15) + 44|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (FUNCTION_TABLE_iii[$17 & 63]($__ct,32)|0);
   $19 = HEAP32[$__me>>2]|0;
   $20 = (($19) + 4|0);
   HEAP32[$__me>>2] = $20;
   HEAP32[$19>>2] = $18;
   $$2 = $$060;
   break;
  }
  case 4:  {
   $60 = HEAP32[$__me>>2]|0;
   $61 = (($$060) + 4|0);
   $$$0 = $__neg ? $61 : $$060;
   $62 = ($$$0>>>0)<($__de>>>0);
   L22: do {
    if ($62) {
     $__d$034 = $$$0;
     while(1) {
      $65 = HEAP32[$__d$034>>2]|0;
      $66 = HEAP32[$__ct>>2]|0;
      $67 = (($66) + 12|0);
      $68 = HEAP32[$67>>2]|0;
      $69 = (FUNCTION_TABLE_iiii[$68 & 31]($__ct,2048,$65)|0);
      $64 = (($__d$034) + 4|0);
      if (!($69)) {
       $__d$0$lcssa = $__d$034;
       break L22;
      }
      $63 = ($64>>>0)<($__de>>>0);
      if ($63) {
       $__d$034 = $64;
      } else {
       $__d$0$lcssa = $64;
       break;
      }
     }
    } else {
     $__d$0$lcssa = $$$0;
    }
   } while(0);
   if ($6) {
    $70 = ($__d$0$lcssa>>>0)>($$$0>>>0);
    if ($70) {
     $__me$promoted = HEAP32[$__me>>2]|0;
     $74 = $__me$promoted;$__d$137 = $__d$0$lcssa;$__f$038 = $__fd;
     while(1) {
      $71 = (($__d$137) + -4|0);
      $72 = HEAP32[$71>>2]|0;
      $73 = (($74) + 4|0);
      HEAP32[$74>>2] = $72;
      $75 = (($__f$038) + -1)|0;
      $76 = ($71>>>0)>($$$0>>>0);
      $77 = ($75|0)>(0);
      $or$cond = $76 & $77;
      if ($or$cond) {
       $74 = $73;$__d$137 = $71;$__f$038 = $75;
      } else {
       break;
      }
     }
     HEAP32[$__me>>2] = $73;
     if ($77) {
      $__d$1$lcssa79 = $71;$__f$0$lcssa77 = $75;
      label = 33;
     } else {
      $78 = (($74) + 8|0);
      HEAP32[$__me>>2] = $78;
      $$lcssa45 = $73;$__d$1$lcssa7881 = $71;
     }
    } else {
     $__d$1$lcssa79 = $__d$0$lcssa;$__f$0$lcssa77 = $__fd;
     label = 33;
    }
    if ((label|0) == 33) {
     label = 0;
     $79 = HEAP32[$__ct>>2]|0;
     $80 = (($79) + 44|0);
     $81 = HEAP32[$80>>2]|0;
     $82 = (FUNCTION_TABLE_iii[$81 & 63]($__ct,48)|0);
     $83 = ($__f$0$lcssa77|0)>(0);
     $84 = HEAP32[$__me>>2]|0;
     $85 = (($84) + 4|0);
     HEAP32[$__me>>2] = $85;
     if ($83) {
      $86 = $84;$90 = $85;$__f$146 = $__f$0$lcssa77;
      while(1) {
       HEAP32[$86>>2] = $82;
       $87 = (($__f$146) + -1)|0;
       $88 = ($87|0)>(0);
       $89 = (($90) + 4|0);
       if ($88) {
        $86$phi = $90;$90 = $89;$__f$146 = $87;$86 = $86$phi;
       } else {
        break;
       }
      }
      $$sum75 = (($__f$0$lcssa77) + 1)|0;
      $scevgep = (($84) + ($$sum75<<2)|0);
      $scevgep71 = (($84) + ($__f$0$lcssa77<<2)|0);
      HEAP32[$__me>>2] = $scevgep;
      $$lcssa45 = $scevgep71;$__d$1$lcssa7881 = $__d$1$lcssa79;
     } else {
      $$lcssa45 = $84;$__d$1$lcssa7881 = $__d$1$lcssa79;
     }
    }
    HEAP32[$$lcssa45>>2] = $__dp;
    $__d$2 = $__d$1$lcssa7881;
   } else {
    $__d$2 = $__d$0$lcssa;
   }
   $91 = ($__d$2|0)==($$$0|0);
   if ($91) {
    $92 = HEAP32[$__ct>>2]|0;
    $93 = (($92) + 44|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = (FUNCTION_TABLE_iii[$94 & 63]($__ct,48)|0);
    $96 = HEAP32[$__me>>2]|0;
    $97 = (($96) + 4|0);
    HEAP32[$__me>>2] = $97;
    HEAP32[$96>>2] = $95;
    $139 = $97;
   } else {
    $98 = HEAP8[$__grp>>0]|0;
    $99 = $98 & 1;
    $100 = ($99<<24>>24)==(0);
    if ($100) {
     $102 = $98&255;
     $103 = $102 >>> 1;
     $105 = $103;
    } else {
     $101 = HEAP32[$9>>2]|0;
     $105 = $101;
    }
    $104 = ($105|0)==(0);
    if ($104) {
     $__gl$057$ph = -1;
    } else {
     if ($100) {
      $108 = $7;
     } else {
      $106 = HEAP32[$8>>2]|0;
      $108 = $106;
     }
     $107 = HEAP8[$108>>0]|0;
     $109 = $107 << 24 >> 24;
     $__gl$057$ph = $109;
    }
    $$pre = HEAP32[$__me>>2]|0;
    $112 = $$pre;$__d$354 = $__d$2;$__gl$057 = $__gl$057$ph;$__ig$056 = 0;$__ng$055 = 0;
    while(1) {
     $110 = ($__ng$055|0)==($__gl$057|0);
     if ($110) {
      $111 = (($112) + 4|0);
      HEAP32[$__me>>2] = $111;
      HEAP32[$112>>2] = $__ts;
      $113 = (($__ig$056) + 1)|0;
      $114 = HEAP8[$__grp>>0]|0;
      $115 = $114 & 1;
      $116 = ($115<<24>>24)==(0);
      if ($116) {
       $118 = $114&255;
       $119 = $118 >>> 1;
       $121 = $119;
      } else {
       $117 = HEAP32[$9>>2]|0;
       $121 = $117;
      }
      $120 = ($113>>>0)<($121>>>0);
      if ($120) {
       if ($116) {
        $124 = $7;
       } else {
        $122 = HEAP32[$8>>2]|0;
        $124 = $122;
       }
       $123 = (($124) + ($113)|0);
       $125 = HEAP8[$123>>0]|0;
       $126 = ($125<<24>>24)==(127);
       if ($126) {
        $135 = $111;$__gl$1 = -1;$__ig$1 = $113;$__ng$1 = 0;
       } else {
        if ($116) {
         $129 = $7;
        } else {
         $127 = HEAP32[$8>>2]|0;
         $129 = $127;
        }
        $128 = (($129) + ($113)|0);
        $130 = HEAP8[$128>>0]|0;
        $131 = $130 << 24 >> 24;
        $135 = $111;$__gl$1 = $131;$__ig$1 = $113;$__ng$1 = 0;
       }
      } else {
       $135 = $111;$__gl$1 = $__gl$057;$__ig$1 = $113;$__ng$1 = 0;
      }
     } else {
      $135 = $112;$__gl$1 = $__gl$057;$__ig$1 = $__ig$056;$__ng$1 = $__ng$055;
     }
     $132 = (($__d$354) + -4|0);
     $133 = HEAP32[$132>>2]|0;
     $134 = (($135) + 4|0);
     HEAP32[$__me>>2] = $134;
     HEAP32[$135>>2] = $133;
     $136 = (($__ng$1) + 1)|0;
     $137 = ($132|0)==($$$0|0);
     if ($137) {
      $139 = $134;
      break;
     } else {
      $112 = $134;$__d$354 = $132;$__gl$057 = $__gl$1;$__ig$056 = $__ig$1;$__ng$055 = $136;
     }
    }
   }
   $138 = ($60|0)==($139|0);
   if ($138) {
    $$2 = $$$0;
   } else {
    $140 = (($139) + -4|0);
    $141 = ($140>>>0)>($60>>>0);
    if ($141) {
     $$012$i$i = $60;$144 = $140;
     while(1) {
      $142 = HEAP32[$$012$i$i>>2]|0;
      $143 = HEAP32[$144>>2]|0;
      HEAP32[$$012$i$i>>2] = $143;
      HEAP32[$144>>2] = $142;
      $145 = (($$012$i$i) + 4|0);
      $146 = (($144) + -4|0);
      $147 = ($145>>>0)<($146>>>0);
      if ($147) {
       $$012$i$i = $145;$144 = $146;
      } else {
       $$2 = $$$0;
       break;
      }
     }
    } else {
     $$2 = $$$0;
    }
   }
   break;
  }
  case 0:  {
   $13 = HEAP32[$__me>>2]|0;
   HEAP32[$__mi>>2] = $13;
   $$2 = $$060;
   break;
  }
  case 3:  {
   $21 = HEAP8[$__sn>>0]|0;
   $22 = $21 & 1;
   $23 = ($22<<24>>24)==(0);
   if ($23) {
    $25 = $21&255;
    $26 = $25 >>> 1;
    $28 = $26;
   } else {
    $24 = HEAP32[$0>>2]|0;
    $28 = $24;
   }
   $27 = ($28|0)==(0);
   if ($27) {
    $$2 = $$060;
   } else {
    if ($23) {
     $31 = $0;
    } else {
     $29 = HEAP32[$1>>2]|0;
     $31 = $29;
    }
    $30 = HEAP32[$31>>2]|0;
    $32 = HEAP32[$__me>>2]|0;
    $33 = (($32) + 4|0);
    HEAP32[$__me>>2] = $33;
    HEAP32[$32>>2] = $30;
    $$2 = $$060;
   }
   break;
  }
  default: {
   $$2 = $$060;
  }
  }
  $148 = (($__p$059) + 1)|0;
  $exitcond = ($148|0)==(4);
  if ($exitcond) {
   break;
  } else {
   $$060 = $$2;$__p$059 = $148;
  }
 }
 $149 = HEAP8[$__sn>>0]|0;
 $150 = $149 & 1;
 $151 = ($150<<24>>24)==(0);
 if ($151) {
  $153 = $149&255;
  $154 = $153 >>> 1;
  $156 = $154;
 } else {
  $152 = HEAP32[$0>>2]|0;
  $156 = $152;
 }
 $155 = ($156>>>0)>(1);
 if ($155) {
  if ($151) {
   $159 = $149&255;
   $160 = $159 >>> 1;
   $$pn = $0;$163 = $160;
  } else {
   $157 = HEAP32[$1>>2]|0;
   $158 = HEAP32[$0>>2]|0;
   $$pn = $157;$163 = $158;
  }
  $161 = (($$pn) + 4|0);
  $162 = (($$pn) + ($163<<2)|0);
  $164 = HEAP32[$__me>>2]|0;
  $165 = ($161|0)==($162|0);
  if ($165) {
   $$0$lcssa$i$i = $164;
  } else {
   $$promoted4$i$i = $161;
   $$sum = (($163) + -1)|0;
   $scevgep$i$i = (($$pn) + ($$sum<<2)|0);
   $166 = $scevgep$i$i;
   $167 = (($166) - ($$promoted4$i$i))|0;
   $168 = $167 >>> 2;
   $$01$i$i = $164;$170 = $161;
   while(1) {
    $169 = HEAP32[$170>>2]|0;
    HEAP32[$$01$i$i>>2] = $169;
    $171 = (($170) + 4|0);
    $172 = (($$01$i$i) + 4|0);
    $173 = ($171|0)==($162|0);
    if ($173) {
     break;
    } else {
     $$01$i$i = $172;$170 = $171;
    }
   }
   $174 = (($168) + 1)|0;
   $scevgep6$i$i = (($164) + ($174<<2)|0);
   $$0$lcssa$i$i = $scevgep6$i$i;
  }
  HEAP32[$__me>>2] = $$0$lcssa$i$i;
 }
 $175 = $__flags & 176;
 if ((($175|0) == 32)) {
  $176 = HEAP32[$__me>>2]|0;
  HEAP32[$__mi>>2] = $176;
  STACKTOP = sp;return;
 } else if ((($175|0) == 16)) {
  STACKTOP = sp;return;
 } else {
  HEAP32[$__mi>>2] = $__mb;
  STACKTOP = sp;return;
 }
}
function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($agg$result,$this,$__s,$__intl,$__iob,$__fl,$__digits) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__s = $__s|0;
 $__intl = $__intl|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 $__digits = $__digits|0;
 var $$idx = 0, $$idx$val = 0, $$idx8 = 0, $$idx8$val = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0;
 var $__sym = 0, $__ts = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464|0;
 $__pat = sp;
 $__dp = sp + 24|0;
 $__ts = sp + 432|0;
 $__grp = sp + 4|0;
 $__sym = sp + 436|0;
 $__sn = sp + 448|0;
 $__fd = sp + 20|0;
 $__mbuf = sp + 32|0;
 $__mi = sp + 28|0;
 $__me = sp + 16|0;
 $0 = (($__iob) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+1)|0);
 $4 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 $$idx = (($1) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx8 = (($1) + 12|0);
 $$idx8$val = HEAP32[$$idx8>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx8$val,$4)|0);
 $6 = HEAP8[$__digits>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  $11 = $6&255;
  $12 = $11 >>> 1;
  $14 = $12;
 } else {
  $9 = (($__digits) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $14 = $10;
 }
 $13 = ($14|0)==(0);
 if ($13) {
  $25 = 0;
 } else {
  if ($8) {
   $17 = (($__digits) + 4|0);
   $19 = $17;
  } else {
   $15 = (($__digits) + 8|0);
   $16 = HEAP32[$15>>2]|0;
   $19 = $16;
  }
  $18 = HEAP32[$19>>2]|0;
  $20 = HEAP32[$5>>2]|0;
  $21 = (($20) + 44|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (FUNCTION_TABLE_iii[$22 & 63]($5,45)|0);
  $24 = ($18|0)==($23|0);
  $25 = $24;
 }
 HEAP32[$__pat>>2] = 0;
 ;HEAP32[$__grp+0>>2]=0|0;HEAP32[$__grp+4>>2]=0|0;HEAP32[$__grp+8>>2]=0|0;
 ;HEAP32[$__sym+0>>2]=0|0;HEAP32[$__sym+4>>2]=0|0;HEAP32[$__sym+8>>2]=0|0;
 ;HEAP32[$__sn+0>>2]=0|0;HEAP32[$__sn+4>>2]=0|0;HEAP32[$__sn+8>>2]=0|0;
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl,$25,$1,$__pat,$__dp,$__ts,$__grp,$__sym,$__sn,$__fd);
 $26 = HEAP8[$__digits>>0]|0;
 $27 = $26 & 1;
 $28 = ($27<<24>>24)==(0);
 if ($28) {
  $31 = $26&255;
  $32 = $31 >>> 1;
  $35 = $32;
 } else {
  $29 = (($__digits) + 4|0);
  $30 = HEAP32[$29>>2]|0;
  $35 = $30;
 }
 $33 = HEAP32[$__fd>>2]|0;
 $34 = ($35|0)>($33|0);
 if ($34) {
  if ($28) {
   $38 = $26&255;
   $39 = $38 >>> 1;
   $41 = $39;
  } else {
   $36 = (($__digits) + 4|0);
   $37 = HEAP32[$36>>2]|0;
   $41 = $37;
  }
  $40 = (($41) - ($33))|0;
  $42 = $40 << 1;
  $43 = HEAP8[$__sn>>0]|0;
  $44 = $43 & 1;
  $45 = ($44<<24>>24)==(0);
  if ($45) {
   $48 = $43&255;
   $49 = $48 >>> 1;
   $59 = $49;
  } else {
   $46 = (($__sn) + 4|0);
   $47 = HEAP32[$46>>2]|0;
   $59 = $47;
  }
  $50 = HEAP8[$__sym>>0]|0;
  $51 = $50 & 1;
  $52 = ($51<<24>>24)==(0);
  if ($52) {
   $55 = $50&255;
   $56 = $55 >>> 1;
   $61 = $56;
  } else {
   $53 = (($__sym) + 4|0);
   $54 = HEAP32[$53>>2]|0;
   $61 = $54;
  }
  $57 = $42 | 1;
  $58 = (($59) + ($57))|0;
  $60 = (($58) + ($61))|0;
  $$pn = $60;
 } else {
  $62 = HEAP8[$__sn>>0]|0;
  $63 = $62 & 1;
  $64 = ($63<<24>>24)==(0);
  if ($64) {
   $67 = $62&255;
   $68 = $67 >>> 1;
   $77 = $68;
  } else {
   $65 = (($__sn) + 4|0);
   $66 = HEAP32[$65>>2]|0;
   $77 = $66;
  }
  $69 = HEAP8[$__sym>>0]|0;
  $70 = $69 & 1;
  $71 = ($70<<24>>24)==(0);
  if ($71) {
   $74 = $69&255;
   $75 = $74 >>> 1;
   $79 = $75;
  } else {
   $72 = (($__sym) + 4|0);
   $73 = HEAP32[$72>>2]|0;
   $79 = $73;
  }
  $76 = (($77) + 2)|0;
  $78 = (($76) + ($79))|0;
  $$pn = $78;
 }
 $80 = (($$pn) + ($33))|0;
 $81 = ($80>>>0)>(100);
 if ($81) {
  $82 = $80 << 2;
  $83 = (_malloc($82)|0);
  $84 = ($83|0)==(0|0);
  if ($84) {
   $85 = (___cxa_allocate_exception(4)|0);
   HEAP32[$85>>2] = ((51368 + 8|0));
   ___cxa_throw(($85|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $104 = $83;$__mb$0 = $83;
  }
 } else {
  $104 = 0;$__mb$0 = $__mbuf;
 }
 $86 = (($__iob) + 4|0);
 $87 = HEAP32[$86>>2]|0;
 if ($28) {
  $92 = (($__digits) + 4|0);
  $93 = $26&255;
  $94 = $93 >>> 1;
  $96 = $92;$97 = $94;
 } else {
  $88 = (($__digits) + 8|0);
  $89 = HEAP32[$88>>2]|0;
  $90 = (($__digits) + 4|0);
  $91 = HEAP32[$90>>2]|0;
  $96 = $89;$97 = $91;
 }
 $95 = (($96) + ($97<<2)|0);
 $98 = HEAP32[$__dp>>2]|0;
 $99 = HEAP32[$__ts>>2]|0;
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb$0,$__mi,$__me,$87,$96,$95,$5,$25,$__pat,$98,$99,$__grp,$__sym,$__sn,$33);
 $100 = HEAP32[$__s>>2]|0;
 $101 = HEAP32[$__mi>>2]|0;
 $102 = HEAP32[$__me>>2]|0;
 __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$100,$__mb$0,$101,$102,$__iob,$__fl);
 $103 = ($104|0)==(0|0);
 if (!($103)) {
  _free($104);
 }
 $105 = HEAP8[$__sn>>0]|0;
 $106 = $105 & 1;
 $107 = ($106<<24>>24)==(0);
 if (!($107)) {
  $108 = (($__sn) + 8|0);
  $109 = HEAP32[$108>>2]|0;
  _free($109);
 }
 $110 = HEAP8[$__sym>>0]|0;
 $111 = $110 & 1;
 $112 = ($111<<24>>24)==(0);
 if (!($112)) {
  $113 = (($__sym) + 8|0);
  $114 = HEAP32[$113>>2]|0;
  _free($114);
 }
 $115 = HEAP8[$__grp>>0]|0;
 $116 = $115 & 1;
 $117 = ($116<<24>>24)==(0);
 if (!($117)) {
  $118 = (($__grp) + 8|0);
  $119 = HEAP32[$118>>2]|0;
  _free($119);
 }
 $120 = (($1) + 4|0);
 $121 = HEAP32[$120>>2]|0;HEAP32[$120>>2] = (($121+-1)|0);
 $122 = ($121|0)==(0);
 if (!($122)) {
  STACKTOP = sp;return;
 }
 $123 = HEAP32[$1>>2]|0;
 $124 = (($123) + 8|0);
 $125 = HEAP32[$124>>2]|0;
 FUNCTION_TABLE_vi[$125 & 255]($1);
 STACKTOP = sp;return;
}
function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__18messagesIcED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $6 = (($__nm) + 1|0);
  $7 = $6;
 } else {
  $4 = (($__nm) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $7 = $5;
 }
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 STACKTOP = sp;return ($$|0);
}
function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$01$i = 0, $$01$i7 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ndflt = 0, $exitcond$i = 0, $exitcond$i8 = 0, $phitmp = 0, $phitmp18 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__ndflt = sp;
 ;HEAP32[$__ndflt+0>>2]=0|0;HEAP32[$__ndflt+4>>2]=0|0;HEAP32[$__ndflt+8>>2]=0|0;
 $0 = HEAP8[$__dflt>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $7 = (($__dflt) + 1|0);
  $8 = $0&255;
  $9 = $8 >>> 1;
  $11 = $7;$12 = $9;
 } else {
  $3 = (($__dflt) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($__dflt) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $11 = $4;$12 = $6;
 }
 $10 = (($11) + ($12)|0);
 $13 = ($11>>>0)<($10>>>0);
 if ($13) {
  $$01$i7 = $11;
  while(1) {
   $18 = HEAP8[$$01$i7>>0]|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt,$18);
   $19 = (($$01$i7) + 1|0);
   $exitcond$i8 = ($19|0)==($10|0);
   if ($exitcond$i8) {
    break;
   } else {
    $$01$i7 = $19;
   }
  }
  $$pre = HEAP8[$__ndflt>>0]|0;
  $phitmp = $$pre & 1;
  $phitmp18 = ($phitmp<<24>>24)==(0);
  $20 = ($__c|0)==(-1);
  $21 = $__c << 1;
  $22 = $21;
  $23 = $20 ? (-1) : $22;
  if ($phitmp18) {
   $40 = $23;
   label = 9;
  } else {
   $24 = (($__ndflt) + 8|0);
   $25 = HEAP32[$24>>2]|0;
   $27 = $23;$28 = $25;
  }
 } else {
  $14 = ($__c|0)==(-1);
  $15 = $__c << 1;
  $16 = $15;
  $17 = $14 ? (-1) : $16;
  $40 = $17;
  label = 9;
 }
 if ((label|0) == 9) {
  $26 = (($__ndflt) + 1|0);
  $27 = $40;$28 = $26;
 }
 $29 = (_catgets(($27|0),($__set|0),($__msgid|0),($28|0))|0);
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 $30 = (_strlen(($29|0))|0);
 $31 = (($29) + ($30)|0);
 $32 = ($30|0)>(0);
 if ($32) {
  $$01$i = $29;
  while(1) {
   $33 = HEAP8[$$01$i>>0]|0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($agg$result,$33);
   $34 = (($$01$i) + 1|0);
   $exitcond$i = ($34|0)==($31|0);
   if ($exitcond$i) {
    break;
   } else {
    $$01$i = $34;
   }
  }
 }
 $35 = HEAP8[$__ndflt>>0]|0;
 $36 = $35 & 1;
 $37 = ($36<<24>>24)==(0);
 if ($37) {
  STACKTOP = sp;return;
 }
 $38 = (($__ndflt) + 8|0);
 $39 = HEAP32[$38>>2]|0;
 _free($39);
 STACKTOP = sp;return;
}
function __ZNKSt3__18messagesIcE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 STACKTOP = sp;return;
}
function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__18messagesIwED1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this,$__nm,$0) {
 $this = $this|0;
 $__nm = $__nm|0;
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$__nm>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $6 = (($__nm) + 1|0);
  $7 = $6;
 } else {
  $4 = (($__nm) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $7 = $5;
 }
 $8 = (_catopen(($7|0),1)|0);
 $9 = $8;
 $not$ = ($8|0)!=((-1)|0);
 $10 = $not$&1;
 $$ = $9 >>> $10;
 STACKTOP = sp;return ($$|0);
}
function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result,$this,$__c,$__set,$__msgid,$__dflt) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 $__c = $__c|0;
 $__set = $__set|0;
 $__msgid = $__msgid|0;
 $__dflt = $__dflt|0;
 var $$05$i = 0, $$05$i16 = 0, $$pre = 0, $$pre$i21 = 0, $$pre2 = 0, $$pre44 = 0, $$pre9$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $__bn$i14 = 0, $__buf$i13 = 0, $__mb$i11 = 0, $__ndflt = 0, $__p$04$i = 0, $__p$04$i20 = 0, $__wn$i = 0, $or$cond3$i = 0, $or$cond3$i17 = 0, $phitmp = 0, $phitmp3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $__mb$i11 = sp;
 $__buf$i13 = sp + 40|0;
 $__bn$i14 = sp + 168|0;
 $__wn$i = sp + 172|0;
 $__ndflt = sp + 16|0;
 $0 = sp + 8|0;
 $1 = sp + 32|0;
 ;HEAP32[$__ndflt+0>>2]=0|0;HEAP32[$__ndflt+4>>2]=0|0;HEAP32[$__ndflt+8>>2]=0|0;
 $2 = (($0) + 4|0);
 HEAP32[$2>>2] = 0;
 HEAP32[$0>>2] = ((42240 + 8|0));
 $3 = HEAP8[$__dflt>>0]|0;
 $4 = $3 & 1;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $10 = (($__dflt) + 4|0);
  $11 = $3&255;
  $12 = $11 >>> 1;
  $14 = $10;$15 = $12;
 } else {
  $6 = (($__dflt) + 8|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (($__dflt) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $14 = $7;$15 = $9;
 }
 $13 = (($14) + ($15<<2)|0);
 $16 = $__mb$i11;
 $17 = $16;
 HEAP32[$17>>2] = 0;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = 0;
 $20 = ($14>>>0)<($13>>>0);
 do {
  if ($20) {
   $21 = (($__buf$i13) + 32|0);
   $$05$i16 = $14;$23 = ((42240 + 8|0));
   while(1) {
    HEAP32[$__wn$i>>2] = $$05$i16;
    $22 = (($23) + 12|0);
    $24 = HEAP32[$22>>2]|0;
    $25 = (FUNCTION_TABLE_iiiiiiiii[$24 & 15]($0,$__mb$i11,$$05$i16,$13,$__wn$i,$__buf$i13,$21,$__bn$i14)|0);
    $26 = ($25|0)==(2);
    $27 = HEAP32[$__wn$i>>2]|0;
    $28 = ($27|0)==($$05$i16|0);
    $or$cond3$i17 = $26 | $28;
    if ($or$cond3$i17) {
     label = 8;
     break;
    }
    $29 = HEAP32[$__bn$i14>>2]|0;
    $30 = ($__buf$i13>>>0)<($29>>>0);
    if ($30) {
     $__p$04$i20 = $__buf$i13;
     while(1) {
      $31 = HEAP8[$__p$04$i20>>0]|0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($__ndflt,$31);
      $32 = (($__p$04$i20) + 1|0);
      $33 = HEAP32[$__bn$i14>>2]|0;
      $34 = ($32>>>0)<($33>>>0);
      if ($34) {
       $__p$04$i20 = $32;
      } else {
       break;
      }
     }
     $$pre$i21 = HEAP32[$__wn$i>>2]|0;
     $36 = $$pre$i21;
    } else {
     $36 = $27;
    }
    $35 = ($36>>>0)<($13>>>0);
    if (!($35)) {
     label = 13;
     break;
    }
    $$pre = HEAP32[$0>>2]|0;
    $$05$i16 = $36;$23 = $$pre;
   }
   if ((label|0) == 8) {
    __ZNSt3__121__throw_runtime_errorEPKc(41472);
    // unreachable;
   }
   else if ((label|0) == 13) {
    $$pre2 = HEAP8[$__ndflt>>0]|0;
    $phitmp = $$pre2 & 1;
    $phitmp3 = ($phitmp<<24>>24)==(0);
    $81 = $phitmp3;
    break;
   }
  } else {
   $81 = 1;
  }
 } while(0);
 $37 = ($__c|0)==(-1);
 $38 = $__c << 1;
 $39 = $38;
 $40 = $37 ? (-1) : $39;
 if ($81) {
  $43 = (($__ndflt) + 1|0);
  $44 = $43;
 } else {
  $41 = (($__ndflt) + 8|0);
  $42 = HEAP32[$41>>2]|0;
  $44 = $42;
 }
 $45 = (_catgets(($40|0),($__set|0),($__msgid|0),($44|0))|0);
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 $46 = (($1) + 4|0);
 HEAP32[$46>>2] = 0;
 HEAP32[$1>>2] = ((42344 + 8|0));
 $47 = (_strlen(($45|0))|0);
 $48 = (($45) + ($47)|0);
 $49 = $__mb$i11;
 $50 = $49;
 HEAP32[$50>>2] = 0;
 $51 = (($49) + 4)|0;
 $52 = $51;
 HEAP32[$52>>2] = 0;
 $53 = ($47|0)>(0);
 L24: do {
  if ($53) {
   $54 = $48;
   $55 = (($__buf$i13) + 128|0);
   $$05$i = $45;$57 = ((42344 + 8|0));
   while(1) {
    HEAP32[$__wn$i>>2] = $$05$i;
    $56 = (($57) + 16|0);
    $58 = HEAP32[$56>>2]|0;
    $59 = $$05$i;
    $60 = (($54) - ($59))|0;
    $61 = ($60|0)>(32);
    $62 = (($$05$i) + 32|0);
    $63 = $61 ? $62 : $48;
    $64 = (FUNCTION_TABLE_iiiiiiiii[$58 & 15]($1,$__mb$i11,$$05$i,$63,$__wn$i,$__buf$i13,$55,$__bn$i14)|0);
    $65 = ($64|0)==(2);
    $66 = HEAP32[$__wn$i>>2]|0;
    $67 = ($66|0)==($$05$i|0);
    $or$cond3$i = $65 | $67;
    if ($or$cond3$i) {
     break;
    }
    $68 = HEAP32[$__bn$i14>>2]|0;
    $69 = ($__buf$i13>>>0)<($68>>>0);
    if ($69) {
     $__p$04$i = $__buf$i13;
     while(1) {
      $70 = HEAP32[$__p$04$i>>2]|0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($agg$result,$70);
      $71 = (($__p$04$i) + 4|0);
      $72 = HEAP32[$__bn$i14>>2]|0;
      $73 = ($71>>>0)<($72>>>0);
      if ($73) {
       $__p$04$i = $71;
      } else {
       break;
      }
     }
     $$pre9$i = HEAP32[$__wn$i>>2]|0;
     $75 = $$pre9$i;
    } else {
     $75 = $66;
    }
    $74 = ($75>>>0)<($48>>>0);
    if (!($74)) {
     break L24;
    }
    $$pre44 = HEAP32[$1>>2]|0;
    $$05$i = $75;$57 = $$pre44;
   }
   __ZNSt3__121__throw_runtime_errorEPKc(41472);
   // unreachable;
  }
 } while(0);
 $76 = HEAP8[$__ndflt>>0]|0;
 $77 = $76 & 1;
 $78 = ($77<<24>>24)==(0);
 if ($78) {
  STACKTOP = sp;return;
 }
 $79 = (($__ndflt) + 8|0);
 $80 = HEAP32[$79>>2]|0;
 _free($80);
 STACKTOP = sp;return;
}
function __ZNKSt3__18messagesIwE8do_closeEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__c|0)==(-1);
 $1 = $__c << 1;
 $2 = $1;
 $3 = $0 ? (-1) : $2;
 (_catclose(($3|0))|0);
 STACKTOP = sp;return;
}
function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(8)|0);
 HEAP32[$0>>2] = ((51568 + 8|0));
 $1 = (__Znwj(19)|0);
 $2 = (($0) + 4|0);
 HEAP32[$1>>2] = 6;
 $3 = (($1) + 4|0);
 HEAP32[$3>>2] = 6;
 $4 = (($1) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = (($1) + 12|0);
 ;HEAP8[$5+0>>0]=HEAP8[40528+0>>0]|0;HEAP8[$5+1>>0]=HEAP8[40528+1>>0]|0;HEAP8[$5+2>>0]=HEAP8[40528+2>>0]|0;HEAP8[$5+3>>0]=HEAP8[40528+3>>0]|0;HEAP8[$5+4>>0]=HEAP8[40528+4>>0]|0;HEAP8[$5+5>>0]=HEAP8[40528+5>>0]|0;HEAP8[$5+6>>0]=HEAP8[40528+6>>0]|0;
 HEAP32[$2>>2] = $5;
 HEAP32[$0>>2] = ((51648 + 8|0));
 ___cxa_throw(($0|0),(51696|0),(119|0));
 // unreachable;
}
function __ZNSt3__16locale5__impC2Ej($this,$refs) {
 $this = $this|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((40560 + 8|0));
 $2 = (($this) + 8|0);
 __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($2,28);
 $3 = (($this) + 144|0);
 HEAP8[$3>>0] = 2;
 $4 = (($3) + 1|0);
 HEAP8[$4>>0] = 67;
 $5 = (($3) + 2|0);
 HEAP8[$5>>0] = 0;
 $6 = HEAP32[$2>>2]|0;
 $7 = (($this) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==($6|0);
 if (!($9)) {
  $__new_last2$i$i$i = $6;
  $scevgep$i$i$i = (($8) + -4|0);
  $10 = $scevgep$i$i$i;
  $11 = (($10) - ($__new_last2$i$i$i))|0;
  $12 = $11 >>> 2;
  $13 = $12 ^ -1;
  $scevgep4$i$i$i = (($8) + ($13<<2)|0);
  HEAP32[$7>>2] = $scevgep4$i$i$i;
 }
 HEAP32[((45400 + 4|0))>>2] = 0;
 HEAP32[45400>>2] = ((39032 + 8|0));
 $14 = (__ZNSt3__16locale2id5__getEv(39064)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45400,$14);
 HEAP32[((45392 + 4|0))>>2] = 0;
 HEAP32[45392>>2] = ((39072 + 8|0));
 $15 = (__ZNSt3__16locale2id5__getEv(39104)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45392,$15);
 __ZNSt3__15ctypeIcEC2EPKtbj(45376,0,0,1);
 $16 = (__ZNSt3__16locale2id5__getEv(40640)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45376,$16);
 HEAP32[((45368 + 4|0))>>2] = 0;
 HEAP32[45368>>2] = ((41560 + 8|0));
 $17 = (__ZNSt3__16locale2id5__getEv(40632)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45368,$17);
 HEAP32[((45360 + 4|0))>>2] = 0;
 HEAP32[45360>>2] = ((41776 + 8|0));
 $18 = (__ZNSt3__16locale2id5__getEv(40704)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45360,$18);
 HEAP32[((45344 + 4|0))>>2] = 0;
 HEAP32[45344>>2] = ((40720 + 8|0));
 $19 = (__ZNSt3__16__clocEv()|0);
 HEAP32[((45344 + 8|0))>>2] = $19;
 $20 = (__ZNSt3__16locale2id5__getEv(40712)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45344,$20);
 HEAP32[((45336 + 4|0))>>2] = 0;
 HEAP32[45336>>2] = ((42000 + 8|0));
 $21 = (__ZNSt3__16locale2id5__getEv(40768)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45336,$21);
 HEAP32[((45328 + 4|0))>>2] = 0;
 HEAP32[45328>>2] = ((42120 + 8|0));
 $22 = (__ZNSt3__16locale2id5__getEv(40776)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45328,$22);
 HEAP32[((45304 + 4|0))>>2] = 0;
 HEAP32[45304>>2] = ((40800 + 8|0));
 HEAP8[((45304 + 8|0))>>0] = 46;
 HEAP8[((45304 + 9|0))>>0] = 44;
 ;HEAP32[((45304 + 12|0))+0>>2]=0|0;HEAP32[((45304 + 12|0))+4>>2]=0|0;HEAP32[((45304 + 12|0))+8>>2]=0|0;
 $23 = (__ZNSt3__16locale2id5__getEv(40784)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45304,$23);
 HEAP32[((45272 + 4|0))>>2] = 0;
 HEAP32[45272>>2] = ((40840 + 8|0));
 HEAP32[((45272 + 8|0))>>2] = 46;
 HEAP32[((45272 + 12|0))>>2] = 44;
 ;HEAP32[((45272 + 16|0))+0>>2]=0|0;HEAP32[((45272 + 16|0))+4>>2]=0|0;HEAP32[((45272 + 16|0))+8>>2]=0|0;
 $24 = (__ZNSt3__16locale2id5__getEv(40792)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45272,$24);
 HEAP32[((45264 + 4|0))>>2] = 0;
 HEAP32[45264>>2] = ((39112 + 8|0));
 $25 = (__ZNSt3__16locale2id5__getEv(39176)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45264,$25);
 HEAP32[((45256 + 4|0))>>2] = 0;
 HEAP32[45256>>2] = ((39232 + 8|0));
 $26 = (__ZNSt3__16locale2id5__getEv(39296)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45256,$26);
 HEAP32[((45248 + 4|0))>>2] = 0;
 HEAP32[45248>>2] = ((39304 + 8|0));
 $27 = (__ZNSt3__16locale2id5__getEv(39360)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45248,$27);
 HEAP32[((45240 + 4|0))>>2] = 0;
 HEAP32[45240>>2] = ((39376 + 8|0));
 $28 = (__ZNSt3__16locale2id5__getEv(39432)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45240,$28);
 HEAP32[((45232 + 4|0))>>2] = 0;
 HEAP32[45232>>2] = ((39968 + 8|0));
 $29 = (__ZNSt3__16locale2id5__getEv(40024)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45232,$29);
 HEAP32[((45224 + 4|0))>>2] = 0;
 HEAP32[45224>>2] = ((40032 + 8|0));
 $30 = (__ZNSt3__16locale2id5__getEv(40088)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45224,$30);
 HEAP32[((45216 + 4|0))>>2] = 0;
 HEAP32[45216>>2] = ((40096 + 8|0));
 $31 = (__ZNSt3__16locale2id5__getEv(40152)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45216,$31);
 HEAP32[((45208 + 4|0))>>2] = 0;
 HEAP32[45208>>2] = ((40160 + 8|0));
 $32 = (__ZNSt3__16locale2id5__getEv(40216)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45208,$32);
 HEAP32[((45200 + 4|0))>>2] = 0;
 HEAP32[45200>>2] = ((40224 + 8|0));
 $33 = (__ZNSt3__16locale2id5__getEv(40256)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45200,$33);
 HEAP32[((45192 + 4|0))>>2] = 0;
 HEAP32[45192>>2] = ((40304 + 8|0));
 $34 = (__ZNSt3__16locale2id5__getEv(40336)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45192,$34);
 HEAP32[((45184 + 4|0))>>2] = 0;
 HEAP32[45184>>2] = ((40360 + 8|0));
 $35 = (__ZNSt3__16locale2id5__getEv(40392)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45184,$35);
 HEAP32[((45176 + 4|0))>>2] = 0;
 HEAP32[45176>>2] = ((40408 + 8|0));
 $36 = (__ZNSt3__16locale2id5__getEv(40440)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45176,$36);
 HEAP32[((45160 + 4|0))>>2] = 0;
 HEAP32[45160>>2] = ((39456 + 8|0));
 HEAP32[((45160 + 8|0))>>2] = ((39456 + 56|0));
 $37 = (__ZNSt3__16locale2id5__getEv(39544)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45160,$37);
 HEAP32[((45144 + 4|0))>>2] = 0;
 HEAP32[45144>>2] = ((39608 + 8|0));
 HEAP32[((45144 + 8|0))>>2] = ((39608 + 56|0));
 $38 = (__ZNSt3__16locale2id5__getEv(39696)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45144,$38);
 HEAP32[((45128 + 4|0))>>2] = 0;
 HEAP32[45128>>2] = ((41496 + 8|0));
 $39 = (__ZNSt3__16__clocEv()|0);
 HEAP32[((45128 + 8|0))>>2] = $39;
 HEAP32[45128>>2] = ((39904 + 8|0));
 $40 = (__ZNSt3__16locale2id5__getEv(39928)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45128,$40);
 HEAP32[((45112 + 4|0))>>2] = 0;
 HEAP32[45112>>2] = ((41496 + 8|0));
 $41 = (__ZNSt3__16__clocEv()|0);
 HEAP32[((45112 + 8|0))>>2] = $41;
 HEAP32[45112>>2] = ((39936 + 8|0));
 $42 = (__ZNSt3__16locale2id5__getEv(39960)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45112,$42);
 HEAP32[((45104 + 4|0))>>2] = 0;
 HEAP32[45104>>2] = ((40448 + 8|0));
 $43 = (__ZNSt3__16locale2id5__getEv(40480)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45104,$43);
 HEAP32[((45096 + 4|0))>>2] = 0;
 HEAP32[45096>>2] = ((40488 + 8|0));
 $44 = (__ZNSt3__16locale2id5__getEv(40520)|0);
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,45096,$44);
 STACKTOP = sp;return;
}
function __ZNSt3__16locale7classicEv() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[40600>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((40600|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   __ZNSt3__16locale5__impC2Ej(44936,1);
   HEAP32[40584>>2] = 44936;
   HEAP32[40592>>2] = 40584;
   ___cxa_guard_release((40600|0));
  }
 }
 $4 = HEAP32[40592>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this,$f,$id) {
 $this = $this|0;
 $f = $f|0;
 $id = $id|0;
 var $$0$i$i$i38 = 0, $$0$i$i$i4 = 0, $$0$i1$i$i = 0, $$0$i3$i$i = 0, $$not$i$i$i$i$i = 0, $$pre$pre = 0, $$pre1$i$i$i = 0, $$pre2 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, $__new_last2$i$i$i = 0, $__v$i$i$sroa$12$0 = 0, $__v$i$i$sroa$20 = 0, $or$cond$i$i$i$i$i = 0, $scevgep$i$i$i = 0, $scevgep4$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__v$i$i$sroa$20 = sp;
 $0 = (($f) + 4|0);
 $1 = HEAP32[$0>>2]|0;HEAP32[$0>>2] = (($1+1)|0);
 $2 = (($this) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($this) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = $5;
 $8 = (($6) - ($7))|0;
 $9 = $8 >> 2;
 $10 = ($9>>>0)>($id>>>0);
 do {
  if ($10) {
   $69 = $5;
  } else {
   $11 = (($id) + 1)|0;
   $12 = ($11>>>0)>($9>>>0);
   if (!($12)) {
    $61 = ($11>>>0)<($9>>>0);
    if (!($61)) {
     $69 = $5;
     break;
    }
    $62 = (($5) + ($11<<2)|0);
    $63 = ($3|0)==($62|0);
    if ($63) {
     $69 = $5;
     break;
    }
    $__new_last2$i$i$i = $62;
    $scevgep$i$i$i = (($3) + -4|0);
    $64 = $scevgep$i$i$i;
    $65 = (($64) - ($__new_last2$i$i$i))|0;
    $66 = $65 >>> 2;
    $67 = $66 ^ -1;
    $scevgep4$i$i$i = (($3) + ($67<<2)|0);
    HEAP32[$2>>2] = $scevgep4$i$i$i;
    $69 = $5;
    break;
   }
   $13 = (($11) - ($9))|0;
   $14 = (($this) + 16|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = $15;
   $17 = (($16) - ($6))|0;
   $18 = $17 >> 2;
   $19 = ($18>>>0)<($13>>>0);
   do {
    if ($19) {
     $26 = (($this) + 24|0);
     $27 = ($11>>>0)>(1073741823);
     if ($27) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $28 = (($16) - ($7))|0;
     $29 = $28 >> 2;
     $30 = ($29>>>0)<(536870911);
     if ($30) {
      $31 = $28 >> 1;
      $32 = ($31>>>0)<($11>>>0);
      $33 = $32 ? $11 : $31;
      HEAP32[$__v$i$i$sroa$20>>2] = 0;
      $34 = ($33|0)==(0);
      if ($34) {
       $$0$i$i$i4 = 0;$41 = 0;
      } else {
       $35 = (($this) + 136|0);
       $36 = HEAP8[$35>>0]|0;
       $$not$i$i$i$i$i = ($36<<24>>24)==(0);
       $37 = ($33>>>0)<(29);
       $or$cond$i$i$i$i$i = $$not$i$i$i$i$i & $37;
       if ($or$cond$i$i$i$i$i) {
        HEAP8[$35>>0] = 1;
        $$0$i$i$i4 = $33;$41 = $26;
       } else {
        $$0$i$i$i38 = $33;
        label = 14;
       }
      }
     } else {
      HEAP32[$__v$i$i$sroa$20>>2] = 0;
      $$0$i$i$i38 = 1073741823;
      label = 14;
     }
     if ((label|0) == 14) {
      $38 = $$0$i$i$i38 << 2;
      $39 = (__Znwj($38)|0);
      $$0$i$i$i4 = $$0$i$i$i38;$41 = $39;
     }
     $40 = (($41) + ($9<<2)|0);
     $42 = (($41) + ($$0$i$i$i4<<2)|0);
     HEAP32[$__v$i$i$sroa$20>>2] = $42;
     $$0$i3$i$i = $13;$__v$i$i$sroa$12$0 = $40;
     while(1) {
      $43 = ($__v$i$i$sroa$12$0|0)==(0|0);
      if ($43) {
       $45 = 0;
      } else {
       HEAP32[$__v$i$i$sroa$12$0>>2] = 0;
       $45 = $__v$i$i$sroa$12$0;
      }
      $44 = (($45) + 4|0);
      $46 = (($$0$i3$i$i) + -1)|0;
      $47 = ($46|0)==(0);
      if ($47) {
       break;
      } else {
       $$0$i3$i$i = $46;$__v$i$i$sroa$12$0 = $44;
      }
     }
     $48 = HEAP32[$4>>2]|0;
     $49 = HEAP32[$2>>2]|0;
     $50 = $49;
     $51 = $48;
     $52 = (($50) - ($51))|0;
     $53 = $52 >> 2;
     $$sum = (($9) - ($53))|0;
     $54 = (($41) + ($$sum<<2)|0);
     _memcpy(($54|0),($48|0),($52|0))|0;
     $55 = HEAP32[$4>>2]|0;
     HEAP32[$4>>2] = $54;
     HEAP32[$2>>2] = $44;
     $56 = HEAP32[$14>>2]|0;
     $57 = HEAP32[$__v$i$i$sroa$20>>2]|0;
     HEAP32[$14>>2] = $57;
     HEAP32[$__v$i$i$sroa$20>>2] = $56;
     $58 = ($55|0)==(0|0);
     if (!($58)) {
      $59 = ($26|0)==($55|0);
      if ($59) {
       $60 = (($this) + 136|0);
       HEAP8[$60>>0] = 0;
       break;
      } else {
       _free($55);
       break;
      }
     }
    } else {
     $$0$i1$i$i = $13;$21 = $3;
     while(1) {
      $20 = ($21|0)==(0|0);
      if ($20) {
       $23 = 0;
      } else {
       HEAP32[$21>>2] = 0;
       $$pre1$i$i$i = HEAP32[$2>>2]|0;
       $23 = $$pre1$i$i$i;
      }
      $22 = (($23) + 4|0);
      HEAP32[$2>>2] = $22;
      $24 = (($$0$i1$i$i) + -1)|0;
      $25 = ($24|0)==(0);
      if ($25) {
       break;
      } else {
       $$0$i1$i$i = $24;$21 = $22;
      }
     }
    }
   } while(0);
   $$pre$pre = HEAP32[$4>>2]|0;
   $69 = $$pre$pre;
  }
 } while(0);
 $68 = (($69) + ($id<<2)|0);
 $70 = HEAP32[$68>>2]|0;
 $71 = ($70|0)==(0|0);
 if ($71) {
  $79 = $69;
  $78 = (($79) + ($id<<2)|0);
  HEAP32[$78>>2] = $f;
  STACKTOP = sp;return;
 }
 $72 = (($70) + 4|0);
 $73 = HEAP32[$72>>2]|0;HEAP32[$72>>2] = (($73+-1)|0);
 $74 = ($73|0)==(0);
 if ($74) {
  $75 = HEAP32[$70>>2]|0;
  $76 = (($75) + 8|0);
  $77 = HEAP32[$76>>2]|0;
  FUNCTION_TABLE_vi[$77 & 255]($70);
 }
 $$pre2 = HEAP32[$4>>2]|0;
 $79 = $$pre2;
 $78 = (($79) + ($id<<2)|0);
 HEAP32[$78>>2] = $f;
 STACKTOP = sp;return;
}
function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__16locale5__impD2Ev($this);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this|0;
 var $$pre = 0, $$pre2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((40560 + 8|0));
 $0 = (($this) + 8|0);
 $1 = (($this) + 12|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($2|0)==($3|0);
 if (!($4)) {
  $29 = $2;$6 = $3;$i$01 = 0;
  while(1) {
   $5 = (($6) + ($i$01<<2)|0);
   $7 = HEAP32[$5>>2]|0;
   $8 = ($7|0)==(0|0);
   if ($8) {
    $17 = $29;$19 = $6;
   } else {
    $9 = (($7) + 4|0);
    $10 = HEAP32[$9>>2]|0;HEAP32[$9>>2] = (($10+-1)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $12 = HEAP32[$7>>2]|0;
     $13 = (($12) + 8|0);
     $14 = HEAP32[$13>>2]|0;
     FUNCTION_TABLE_vi[$14 & 255]($7);
    }
    $$pre = HEAP32[$1>>2]|0;
    $$pre2 = HEAP32[$0>>2]|0;
    $17 = $$pre;$19 = $$pre2;
   }
   $15 = (($i$01) + 1)|0;
   $16 = $17;
   $18 = $19;
   $20 = (($16) - ($18))|0;
   $21 = $20 >> 2;
   $22 = ($15>>>0)<($21>>>0);
   if ($22) {
    $29 = $17;$6 = $19;$i$01 = $15;
   } else {
    break;
   }
  }
 }
 $23 = (($this) + 144|0);
 $24 = HEAP8[$23>>0]|0;
 $25 = $24 & 1;
 $26 = ($25<<24>>24)==(0);
 if ($26) {
  __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
  STACKTOP = sp;return;
 }
 $27 = (($this) + 152|0);
 $28 = HEAP32[$27>>2]|0;
 _free($28);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 STACKTOP = sp;return;
}
function __ZNKSt3__16locale5__imp9use_facetEl($this$0$1$0$0$val,$this$0$1$0$1$val,$id) {
 $this$0$1$0$0$val = $this$0$1$0$0$val|0;
 $this$0$1$0$1$val = $this$0$1$0$1$val|0;
 $id = $id|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $this$0$1$0$1$val;
 $1 = $this$0$1$0$0$val;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)>($id>>>0);
 if ($4) {
  $5 = (($this$0$1$0$0$val) + ($id<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)==(0|0);
  if (!($7)) {
   STACKTOP = sp;return ($6|0);
  }
 }
 $8 = (___cxa_allocate_exception(4)|0);
 HEAP32[$8>>2] = ((51816 + 8|0));
 ___cxa_throw(($8|0),(51896|0),(125|0));
 // unreachable;
 return (0)|0;
}
function __ZNSt3__16localeC2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[40616>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  $2 = (___cxa_guard_acquire((40616|0))|0);
  $3 = ($2|0)==(0);
  if (!($3)) {
   $4 = (__ZNSt3__16locale7classicEv()|0);
   $5 = HEAP32[$4>>2]|0;
   HEAP32[40608>>2] = $5;
   $6 = (($5) + 4|0);
   $7 = HEAP32[$6>>2]|0;HEAP32[$6>>2] = (($7+1)|0);
   ___cxa_guard_release((40616|0));
  }
 }
 $8 = HEAP32[40608>>2]|0;
 HEAP32[$this>>2] = $8;
 $9 = (($8) + 4|0);
 $10 = HEAP32[$9>>2]|0;HEAP32[$9>>2] = (($10+1)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(-1);
 do {
  if (!($1)) {
   (_pthread_mutex_lock((37832|0))|0);
   $2 = HEAP32[$this>>2]|0;
   $3 = ($2|0)==(1);
   if ($3) {
    while(1) {
     (_pthread_cond_wait((37856|0),(37832|0))|0);
     $4 = HEAP32[$this>>2]|0;
     $5 = ($4|0)==(1);
     if (!($5)) {
      break;
     }
    }
   }
   $6 = HEAP32[$this>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    HEAP32[$this>>2] = 1;
    (_pthread_mutex_unlock((37832|0))|0);
    __ZNSt3__16locale2id6__initEv($this);
    (_pthread_mutex_lock((37832|0))|0);
    HEAP32[$this>>2] = -1;
    (_pthread_mutex_unlock((37832|0))|0);
    (_pthread_cond_broadcast((37856|0))|0);
    break;
   } else {
    (_pthread_mutex_unlock((37832|0))|0);
    break;
   }
  }
 } while(0);
 $8 = (($this) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + -1)|0;
 STACKTOP = sp;return ($10|0);
}
function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==(0|0);
 if ($0) {
  STACKTOP = sp;return;
 }
 $1 = HEAP32[$this>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 FUNCTION_TABLE_vi[$3 & 255]($this);
 STACKTOP = sp;return;
}
function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[40624>>2]|0;HEAP32[40624>>2] = (($0+1)|0);
 $1 = (($0) + 1)|0;
 $2 = (($this) + 4|0);
 HEAP32[$2>>2] = $1;
 STACKTOP = sp;return;
}
function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNKSt3__15ctypeIwE5do_isEtw($this,$m,$c) {
 $this = $this|0;
 $m = $m|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if (!($isascii)) {
  $6 = 0;
  STACKTOP = sp;return ($6|0);
 }
 $0 = (___ctype_b_loc()|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + ($c<<1)|0);
 $3 = HEAP16[$2>>1]|0;
 $4 = $3 & $m;
 $5 = ($4<<16>>16)!=(0);
 $6 = $5;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this,$low,$high,$vec) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $vec = $vec|0;
 var $$01$lcssa = 0, $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low5 = 0, $scevgep = 0;
 var $scevgep7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if ($0) {
  $$01$lcssa = $low;
  STACKTOP = sp;return ($$01$lcssa|0);
 }
 $low5 = $low;
 $scevgep = (($high) + -4|0);
 $1 = $scevgep;
 $2 = (($1) - ($low5))|0;
 $3 = $2 >>> 2;
 $4 = (($3) + 1)|0;
 $$012 = $low;$$03 = $vec;
 while(1) {
  $5 = HEAP32[$$012>>2]|0;
  $isascii = ($5>>>0)<(128);
  if ($isascii) {
   $6 = (___ctype_b_loc()|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = (($7) + ($5<<1)|0);
   $9 = HEAP16[$8>>1]|0;
   $10 = $9;
  } else {
   $10 = 0;
  }
  HEAP16[$$03>>1] = $10;
  $11 = (($$012) + 4|0);
  $12 = (($$03) + 2|0);
  $13 = ($11|0)==($high|0);
  if ($13) {
   break;
  } else {
   $$012 = $11;$$03 = $12;
  }
 }
 $scevgep7 = (($low) + ($4<<2)|0);
 $$01$lcssa = $scevgep7;
 STACKTOP = sp;return ($$01$lcssa|0);
}
function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $low;
  } else {
   $$01 = $low;
   while(1) {
    $1 = HEAP32[$$01>>2]|0;
    $isascii = ($1>>>0)<(128);
    if ($isascii) {
     $2 = (___ctype_b_loc()|0);
     $3 = HEAP32[$2>>2]|0;
     $4 = (($3) + ($1<<1)|0);
     $5 = HEAP16[$4>>1]|0;
     $6 = $5 & $m;
     $7 = ($6<<16>>16)==(0);
     if (!($7)) {
      $$0$lcssa = $$01;
      break L1;
     }
    }
    $8 = (($$01) + 4|0);
    $9 = ($8|0)==($high|0);
    if ($9) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $8;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this,$m,$low,$high) {
 $this = $this|0;
 $m = $m|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 L1: do {
  if ($0) {
   $$0$lcssa = $low;
  } else {
   $$01 = $low;
   while(1) {
    $3 = HEAP32[$$01>>2]|0;
    $isascii = ($3>>>0)<(128);
    if (!($isascii)) {
     $$0$lcssa = $$01;
     break L1;
    }
    $4 = (___ctype_b_loc()|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = (($5) + ($3<<1)|0);
    $7 = HEAP16[$6>>1]|0;
    $8 = $7 & $m;
    $9 = ($8<<16>>16)==(0);
    $2 = (($$01) + 4|0);
    if ($9) {
     $$0$lcssa = $$01;
     break L1;
    }
    $1 = ($2|0)==($high|0);
    if ($1) {
     $$0$lcssa = $high;
     break;
    } else {
     $$01 = $2;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if (!($isascii)) {
  $4 = $c;
  STACKTOP = sp;return ($4|0);
 }
 $0 = (___ctype_toupper_loc()|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + ($c<<2)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3;
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, $scevgep5 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if ($0) {
  $$0$lcssa = $low;
  STACKTOP = sp;return ($$0$lcssa|0);
 }
 $low3 = $low;
 $scevgep = (($high) + -4|0);
 $1 = $scevgep;
 $2 = (($1) - ($low3))|0;
 $3 = $2 >>> 2;
 $4 = (($3) + 1)|0;
 $$01 = $low;
 while(1) {
  $5 = HEAP32[$$01>>2]|0;
  $isascii = ($5>>>0)<(128);
  if ($isascii) {
   $6 = (___ctype_toupper_loc()|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = (($7) + ($5<<2)|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $9;
  } else {
   $10 = $5;
  }
  HEAP32[$$01>>2] = $10;
  $11 = (($$01) + 4|0);
  $12 = ($11|0)==($high|0);
  if ($12) {
   break;
  } else {
   $$01 = $11;
  }
 }
 $scevgep5 = (($low) + ($4<<2)|0);
 $$0$lcssa = $scevgep5;
 STACKTOP = sp;return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEw($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 if (!($isascii)) {
  $4 = $c;
  STACKTOP = sp;return ($4|0);
 }
 $0 = (___ctype_tolower_loc()|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + ($c<<2)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3;
 STACKTOP = sp;return ($4|0);
}
function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low3 = 0, $scevgep = 0, $scevgep5 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if ($0) {
  $$0$lcssa = $low;
  STACKTOP = sp;return ($$0$lcssa|0);
 }
 $low3 = $low;
 $scevgep = (($high) + -4|0);
 $1 = $scevgep;
 $2 = (($1) - ($low3))|0;
 $3 = $2 >>> 2;
 $4 = (($3) + 1)|0;
 $$01 = $low;
 while(1) {
  $5 = HEAP32[$$01>>2]|0;
  $isascii = ($5>>>0)<(128);
  if ($isascii) {
   $6 = (___ctype_tolower_loc()|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = (($7) + ($5<<2)|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = $9;
  } else {
   $10 = $5;
  }
  HEAP32[$$01>>2] = $10;
  $11 = (($$01) + 4|0);
  $12 = ($11|0)==($high|0);
  if ($12) {
   break;
  } else {
   $$01 = $11;
  }
 }
 $scevgep5 = (($low) + ($4<<2)|0);
 $$0$lcssa = $scevgep5;
 STACKTOP = sp;return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c << 24 >> 24;
 STACKTOP = sp;return ($0|0);
}
function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$01$lcssa = 0, $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if ($0) {
  $$01$lcssa = $low;
  STACKTOP = sp;return ($$01$lcssa|0);
 } else {
  $$012 = $low;$$03 = $dest;
 }
 while(1) {
  $1 = HEAP8[$$012>>0]|0;
  $2 = $1 << 24 >> 24;
  HEAP32[$$03>>2] = $2;
  $3 = (($$012) + 1|0);
  $4 = (($$03) + 4|0);
  $5 = ($3|0)==($high|0);
  if ($5) {
   $$01$lcssa = $high;
   break;
  } else {
   $$012 = $3;$$03 = $4;
  }
 }
 STACKTOP = sp;return ($$01$lcssa|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEwc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $$0 = 0, $0 = 0, $isascii = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii = ($c>>>0)<(128);
 $0 = $c&255;
 $$0 = $isascii ? $0 : $dfault;
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$01$lcssa = 0, $$012 = 0, $$03 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii = 0, $low5 = 0, $scevgep = 0, $scevgep7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if ($0) {
  $$01$lcssa = $low;
  STACKTOP = sp;return ($$01$lcssa|0);
 }
 $low5 = $low;
 $scevgep = (($high) + -4|0);
 $1 = $scevgep;
 $2 = (($1) - ($low5))|0;
 $3 = $2 >>> 2;
 $4 = (($3) + 1)|0;
 $$012 = $low;$$03 = $dest;
 while(1) {
  $5 = HEAP32[$$012>>2]|0;
  $isascii = ($5>>>0)<(128);
  $6 = $5&255;
  $$dfault = $isascii ? $6 : $dfault;
  HEAP8[$$03>>0] = $$dfault;
  $7 = (($$012) + 4|0);
  $8 = (($$03) + 1|0);
  $9 = ($7|0)==($high|0);
  if ($9) {
   break;
  } else {
   $$012 = $7;$$03 = $8;
  }
 }
 $scevgep7 = (($low) + ($4<<2)|0);
 $$01$lcssa = $scevgep7;
 STACKTOP = sp;return ($$01$lcssa|0);
}
function __ZNSt3__15ctypeIcEC2EPKtbj($this,$tab,$del,$refs) {
 $this = $this|0;
 $tab = $tab|0;
 $del = $del|0;
 $refs = $refs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($refs) + -1)|0;
 $1 = (($this) + 4|0);
 HEAP32[$1>>2] = $0;
 HEAP32[$this>>2] = ((40648 + 8|0));
 $2 = (($this) + 8|0);
 HEAP32[$2>>2] = $tab;
 $3 = (($this) + 12|0);
 $4 = $del&1;
 HEAP8[$3>>0] = $4;
 $5 = ($tab|0)==(0|0);
 if (!($5)) {
  STACKTOP = sp;return;
 }
 $6 = (___ctype_b_loc()|0);
 $7 = HEAP32[$6>>2]|0;
 HEAP32[$2>>2] = $7;
 STACKTOP = sp;return;
}
function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((40648 + 8|0));
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = (($this) + 12|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   _free($1);
  }
 }
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((40648 + 8|0));
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = (($this) + 12|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   _free($1);
  }
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__15ctypeIcE10do_toupperEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if (!($isascii1)) {
  $6 = $c;
  STACKTOP = sp;return ($6|0);
 }
 $0 = (___ctype_toupper_loc()|0);
 $1 = $c&255;
 $2 = HEAP32[$0>>2]|0;
 $3 = (($2) + ($1<<2)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4&255;
 $6 = $5;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if ($0) {
  $$0$lcssa = $low;
  STACKTOP = sp;return ($$0$lcssa|0);
 } else {
  $$02 = $low;
 }
 while(1) {
  $1 = HEAP8[$$02>>0]|0;
  $isascii1 = ($1<<24>>24)>(-1);
  if ($isascii1) {
   $2 = (___ctype_toupper_loc()|0);
   $3 = $1 << 24 >> 24;
   $4 = HEAP32[$2>>2]|0;
   $5 = (($4) + ($3<<2)|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = $6&255;
   $8 = $7;
  } else {
   $8 = $1;
  }
  HEAP8[$$02>>0] = $8;
  $9 = (($$02) + 1|0);
  $10 = ($9|0)==($high|0);
  if ($10) {
   $$0$lcssa = $high;
   break;
  } else {
   $$02 = $9;
  }
 }
 STACKTOP = sp;return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 if (!($isascii1)) {
  $6 = $c;
  STACKTOP = sp;return ($6|0);
 }
 $0 = (___ctype_tolower_loc()|0);
 $1 = $c << 24 >> 24;
 $2 = HEAP32[$0>>2]|0;
 $3 = (($2) + ($1<<2)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4&255;
 $6 = $5;
 STACKTOP = sp;return ($6|0);
}
function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this,$low,$high) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 var $$0$lcssa = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if ($0) {
  $$0$lcssa = $low;
  STACKTOP = sp;return ($$0$lcssa|0);
 } else {
  $$02 = $low;
 }
 while(1) {
  $1 = HEAP8[$$02>>0]|0;
  $isascii1 = ($1<<24>>24)>(-1);
  if ($isascii1) {
   $2 = (___ctype_tolower_loc()|0);
   $3 = $1 << 24 >> 24;
   $4 = HEAP32[$2>>2]|0;
   $5 = (($4) + ($3<<2)|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = $6&255;
   $8 = $7;
  } else {
   $8 = $1;
  }
  HEAP8[$$02>>0] = $8;
  $9 = (($$02) + 1|0);
  $10 = ($9|0)==($high|0);
  if ($10) {
   $$0$lcssa = $high;
   break;
  } else {
   $$02 = $9;
  }
 }
 STACKTOP = sp;return ($$0$lcssa|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEc($this,$c) {
 $this = $this|0;
 $c = $c|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return ($c|0);
}
function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this,$low,$high,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dest = $dest|0;
 var $$01$lcssa = 0, $$012 = 0, $$03 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if ($0) {
  $$01$lcssa = $low;
 } else {
  $$012 = $low;$$03 = $dest;
  while(1) {
   $1 = HEAP8[$$012>>0]|0;
   HEAP8[$$03>>0] = $1;
   $2 = (($$012) + 1|0);
   $3 = (($$03) + 1|0);
   $4 = ($2|0)==($high|0);
   if ($4) {
    $$01$lcssa = $high;
    break;
   } else {
    $$012 = $2;$$03 = $3;
   }
  }
 }
 STACKTOP = sp;return ($$01$lcssa|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEcc($this,$c,$dfault) {
 $this = $this|0;
 $c = $c|0;
 $dfault = $dfault|0;
 var $c$dfault = 0, $isascii1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $isascii1 = ($c<<24>>24)>(-1);
 $c$dfault = $isascii1 ? $c : $dfault;
 STACKTOP = sp;return ($c$dfault|0);
}
function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this,$low,$high,$dfault,$dest) {
 $this = $this|0;
 $low = $low|0;
 $high = $high|0;
 $dfault = $dfault|0;
 $dest = $dest|0;
 var $$01$lcssa = 0, $$013 = 0, $$04 = 0, $$dfault = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $isascii2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($low|0)==($high|0);
 if ($0) {
  $$01$lcssa = $low;
  STACKTOP = sp;return ($$01$lcssa|0);
 } else {
  $$013 = $low;$$04 = $dest;
 }
 while(1) {
  $1 = HEAP8[$$013>>0]|0;
  $isascii2 = ($1<<24>>24)>(-1);
  $$dfault = $isascii2 ? $1 : $dfault;
  HEAP8[$$04>>0] = $$dfault;
  $2 = (($$013) + 1|0);
  $3 = (($$04) + 1|0);
  $4 = ($2|0)==($high|0);
  if ($4) {
   $$01$lcssa = $high;
   break;
  } else {
   $$013 = $2;$$04 = $3;
  }
 }
 STACKTOP = sp;return ($$01$lcssa|0);
}
function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 STACKTOP = sp;return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this,$0,$frm,$1,$frm_nxt,$to,$2,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $1 = $1|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $2 = $2|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$frm_nxt>>2] = $frm;
 HEAP32[$to_nxt>>2] = $to;
 STACKTOP = sp;return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 STACKTOP = sp;return 3;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 1;
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $end = $end|0;
 $mx = $mx|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $end;
 $2 = $frm;
 $3 = (($1) - ($2))|0;
 $4 = ($3>>>0)<($mx>>>0);
 $5 = $4 ? $3 : $mx;
 STACKTOP = sp;return ($5|0);
}
function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 1;
}
function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$0$lcssa$i = 0, $$014$$0$i = 0, $$014$lcssa$i = 0, $$01428$i = 0, $$0148 = 0, $$0247 = 0, $$031$i = 0, $$1$lcssa = 0, $$115$i = 0, $$19 = 0, $$2$i = 0, $$3$i = 0, $$old4$i = 0, $$old7$i = 0, $$pre = 0, $$pre101 = 0, $$pre2 = 0, $$pre98 = 0, $$pre99 = 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $buf$i = 0, $cnt$0$lcssa$i = 0, $cnt$029$i = 0, $cnt$2$i = 0, $cnt$3$i = 0, $dst$$i = 0, $fend$0$lcssa = 0, $fend$054 = 0, $fend$149 = 0;
 var $fend$2$lcssa = 0, $fend$215 = 0, $fend$3 = 0, $n$$i = 0, $n$011 = 0, $not$ = 0, $or$cond = 0, $or$cond$i = 0, $or$cond10$i = 0, $or$cond13$i = 0, $or$cond27$i = 0, $or$cond5$i = 0, $or$cond8$i = 0, $p$012 = 0, $phitmp = 0, $s$0$lcssa$i = 0, $s$030$i = 0, $s$1$i = 0, $s$2$i = 0, $tmp = 0;
 var $ws$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $buf$i = sp + 8|0;
 $ws$i = sp;
 $tmp = sp + 4|0;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   HEAP32[$to_nxt>>2] = $to;
   HEAP32[$frm_nxt>>2] = $frm;
   $88 = $frm;
  } else {
   $fend$054 = $frm;
   while(1) {
    $3 = HEAP32[$fend$054>>2]|0;
    $4 = ($3|0)==(0);
    $2 = (($fend$054) + 4|0);
    if ($4) {
     $fend$0$lcssa = $fend$054;
     break;
    }
    $1 = ($2|0)==($frm_end|0);
    if ($1) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$054 = $2;
    }
   }
   HEAP32[$to_nxt>>2] = $to;
   HEAP32[$frm_nxt>>2] = $frm;
   $5 = ($to|0)==($to_end|0);
   if ($5) {
    $88 = $frm;
   } else {
    $6 = $to_end;
    $7 = (($this) + 8|0);
    $$0148 = $frm;$$0247 = $to;$fend$149 = $fend$0$lcssa;
    while(1) {
     $8 = $fend$149;
     $9 = $$0148;
     $10 = (($8) - ($9))|0;
     $11 = $10 >> 2;
     $12 = $$0247;
     $13 = (($6) - ($12))|0;
     $14 = HEAP32[$7>>2]|0;
     $15 = (_uselocale(($14|0))|0);
     $16 = HEAP32[$frm_nxt>>2]|0;
     HEAP32[$ws$i>>2] = $16;
     $17 = ($$0247|0)!=(0|0);
     $n$$i = $17 ? $13 : 256;
     $dst$$i = $17 ? $$0247 : $buf$i;
     $18 = ($16|0)!=(0|0);
     $19 = ($n$$i|0)!=(0);
     $or$cond27$i = $18 & $19;
     L9: do {
      if ($or$cond27$i) {
       $$01428$i = $n$$i;$$031$i = $11;$90 = $16;$cnt$029$i = 0;$s$030$i = $dst$$i;
       while(1) {
        $20 = ($$031$i>>>0)>=($$01428$i>>>0);
        $21 = ($$031$i>>>0)>(32);
        $or$cond13$i = $20 | $21;
        if (!($or$cond13$i)) {
         $$0$lcssa$i = $$031$i;$$014$lcssa$i = $$01428$i;$33 = $90;$cnt$0$lcssa$i = $cnt$029$i;$s$0$lcssa$i = $s$030$i;
         label = 13;
         break L9;
        }
        $$014$$0$i = $20 ? $$01428$i : $$031$i;
        $22 = (($$031$i) - ($$014$$0$i))|0;
        $23 = (_wcsrtombs($s$030$i,$ws$i,$$014$$0$i)|0);
        $24 = ($23|0)==(-1);
        if ($24) {
         $cnt$3$i = -1;
         break L9;
        }
        $25 = ($s$030$i|0)==($buf$i|0);
        if ($25) {
         $$115$i = $$01428$i;$s$1$i = $buf$i;
        } else {
         $26 = (($s$030$i) + ($23)|0);
         $27 = (($$01428$i) - ($23))|0;
         $$115$i = $27;$s$1$i = $26;
        }
        $28 = (($23) + ($cnt$029$i))|0;
        $29 = HEAP32[$ws$i>>2]|0;
        $30 = ($29|0)!=(0|0);
        $31 = ($$115$i|0)!=(0);
        $or$cond$i = $30 & $31;
        if ($or$cond$i) {
         $$01428$i = $$115$i;$$031$i = $22;$90 = $29;$cnt$029$i = $28;$s$030$i = $s$1$i;
        } else {
         $$0$lcssa$i = $22;$$014$lcssa$i = $$115$i;$33 = $29;$cnt$0$lcssa$i = $28;$s$0$lcssa$i = $s$1$i;
         label = 13;
         break;
        }
       }
      } else {
       $$0$lcssa$i = $11;$$014$lcssa$i = $n$$i;$33 = $16;$cnt$0$lcssa$i = 0;$s$0$lcssa$i = $dst$$i;
       label = 13;
      }
     } while(0);
     L17: do {
      if ((label|0) == 13) {
       label = 0;
       $32 = ($33|0)!=(0|0);
       $34 = ($$014$lcssa$i|0)!=(0);
       $or$cond5$i = $32 & $34;
       $35 = ($$0$lcssa$i|0)!=(0);
       $or$cond8$i = $or$cond5$i & $35;
       if ($or$cond8$i) {
        $$2$i = $$0$lcssa$i;$$3$i = $$014$lcssa$i;$37 = $33;$cnt$2$i = $cnt$0$lcssa$i;$s$2$i = $s$0$lcssa$i;
        while(1) {
         $36 = HEAP32[$37>>2]|0;
         $38 = (_wcrtomb($s$2$i,$36)|0);
         $39 = (($38) + 1)|0;
         $40 = ($39>>>0)<(2);
         if ($40) {
          break;
         }
         $42 = (($37) + 4|0);
         HEAP32[$ws$i>>2] = $42;
         $43 = (($$2$i) + -1)|0;
         $44 = (($s$2$i) + ($38)|0);
         $45 = (($$3$i) - ($38))|0;
         $46 = (($cnt$2$i) + 1)|0;
         $$old4$i = ($$3$i|0)!=($38|0);
         $$old7$i = ($43|0)!=(0);
         $or$cond10$i = $$old4$i & $$old7$i;
         if ($or$cond10$i) {
          $$2$i = $43;$$3$i = $45;$37 = $42;$cnt$2$i = $46;$s$2$i = $44;
         } else {
          $cnt$3$i = $46;
          break L17;
         }
        }
        $41 = ($38|0)==(0);
        if ($41) {
         HEAP32[$ws$i>>2] = 0;
         $cnt$3$i = $cnt$2$i;
        } else {
         $cnt$3$i = -1;
        }
       } else {
        $cnt$3$i = $cnt$0$lcssa$i;
       }
      }
     } while(0);
     if ($17) {
      $47 = HEAP32[$ws$i>>2]|0;
      HEAP32[$frm_nxt>>2] = $47;
     }
     $48 = ($15|0)==(0|0);
     if (!($48)) {
      (_uselocale(($15|0))|0);
     }
     if ((($cnt$3$i|0) == -1)) {
      label = 23;
      break;
     } else if ((($cnt$3$i|0) == 0)) {
      $$0 = 1;
      label = 44;
      break;
     }
     $63 = HEAP32[$to_nxt>>2]|0;
     $64 = (($63) + ($cnt$3$i)|0);
     HEAP32[$to_nxt>>2] = $64;
     $65 = ($64|0)==($to_end|0);
     if ($65) {
      label = 42;
      break;
     }
     $66 = ($fend$149|0)==($frm_end|0);
     if ($66) {
      $$pre98 = HEAP32[$frm_nxt>>2]|0;
      $85 = $$pre98;$87 = $64;$fend$3 = $frm_end;
     } else {
      $67 = HEAP32[$7>>2]|0;
      $68 = (_uselocale(($67|0))|0);
      HEAP8[$tmp>>0] = 0;
      $69 = ($68|0)==(0|0);
      if (!($69)) {
       (_uselocale(($68|0))|0);
      }
      $70 = HEAP32[$to_nxt>>2]|0;
      $71 = ($70|0)==($to_end|0);
      if ($71) {
       $$0 = 1;
       label = 44;
       break;
      } else {
       $73 = $70;$74 = 0;$n$011 = 0;$p$012 = $tmp;
      }
      while(1) {
       $72 = (($73) + 1|0);
       HEAP32[$to_nxt>>2] = $72;
       HEAP8[$73>>0] = $74;
       $75 = ($n$011|0)==(0);
       if ($75) {
        break;
       }
       $76 = (($p$012) + 1|0);
       $$pre101 = HEAP32[$to_nxt>>2]|0;
       $phitmp = (($n$011) + -1)|0;
       $$pre2 = HEAP8[$76>>0]|0;
       $73 = $$pre101;$74 = $$pre2;$n$011 = $phitmp;$p$012 = $76;
      }
      $77 = HEAP32[$frm_nxt>>2]|0;
      $78 = (($77) + 4|0);
      HEAP32[$frm_nxt>>2] = $78;
      $79 = ($78|0)==($frm_end|0);
      L42: do {
       if ($79) {
        $fend$2$lcssa = $frm_end;
       } else {
        $fend$215 = $78;
        while(1) {
         $82 = HEAP32[$fend$215>>2]|0;
         $83 = ($82|0)==(0);
         $81 = (($fend$215) + 4|0);
         if ($83) {
          $fend$2$lcssa = $fend$215;
          break L42;
         }
         $80 = ($81|0)==($frm_end|0);
         if ($80) {
          $fend$2$lcssa = $frm_end;
          break;
         } else {
          $fend$215 = $81;
         }
        }
       }
      } while(0);
      $$pre99 = HEAP32[$to_nxt>>2]|0;
      $85 = $78;$87 = $$pre99;$fend$3 = $fend$2$lcssa;
     }
     $84 = ($85|0)==($frm_end|0);
     $86 = ($87|0)==($to_end|0);
     $or$cond = $84 | $86;
     if ($or$cond) {
      $88 = $85;
      break L1;
     } else {
      $$0148 = $85;$$0247 = $87;$fend$149 = $fend$3;
     }
    }
    if ((label|0) == 23) {
     HEAP32[$to_nxt>>2] = $$0247;
     $49 = HEAP32[$frm_nxt>>2]|0;
     $50 = ($$0148|0)==($49|0);
     L51: do {
      if ($50) {
       $$1$lcssa = $$0148;
      } else {
       $$19 = $$0148;$54 = $$0247;
       while(1) {
        $51 = HEAP32[$$19>>2]|0;
        $52 = HEAP32[$7>>2]|0;
        $53 = (_uselocale(($52|0))|0);
        $55 = (_wcrtomb($54,$51)|0);
        $56 = ($53|0)==(0|0);
        if (!($56)) {
         (_uselocale(($53|0))|0);
        }
        $57 = ($55|0)==(-1);
        if ($57) {
         $$1$lcssa = $$19;
         break L51;
        }
        $58 = HEAP32[$to_nxt>>2]|0;
        $59 = (($58) + ($55)|0);
        HEAP32[$to_nxt>>2] = $59;
        $60 = (($$19) + 4|0);
        $61 = HEAP32[$frm_nxt>>2]|0;
        $62 = ($60|0)==($61|0);
        if ($62) {
         $$1$lcssa = $60;
         break;
        } else {
         $$19 = $60;$54 = $59;
        }
       }
      }
     } while(0);
     HEAP32[$frm_nxt>>2] = $$1$lcssa;
     $$0 = 2;
     STACKTOP = sp;return ($$0|0);
    }
    else if ((label|0) == 42) {
     $$pre = HEAP32[$frm_nxt>>2]|0;
     $88 = $$pre;
     break;
    }
    else if ((label|0) == 44) {
     STACKTOP = sp;return ($$0|0);
    }
   }
  }
 } while(0);
 $not$ = ($88|0)!=($frm_end|0);
 $89 = $not$&1;
 $$0 = $89;
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this,$st,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0 = 0, $$0$lcssa$i = 0, $$014$$i = 0, $$014$lcssa$i = 0, $$01428$i = 0, $$0155 = 0, $$0254 = 0, $$031$i = 0, $$1$lcssa = 0, $$115 = 0, $$115$i = 0, $$2 = 0, $$2$i = 0, $$3$i = 0, $$old4$i = 0, $$old7$i = 0, $$pre = 0, $$pre114 = 0, $$pre115 = 0, $0 = 0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $cnt$0$lcssa$i = 0, $cnt$029$i = 0, $cnt$2$i = 0;
 var $cnt$3$i = 0, $fend$0$lcssa = 0, $fend$061 = 0, $fend$156 = 0, $fend$2$lcssa = 0, $fend$216 = 0, $fend$3 = 0, $not$ = 0, $not$3 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond10$i = 0, $or$cond13$i = 0, $or$cond27$i = 0, $or$cond5$i = 0, $or$cond8$i = 0, $s$i = 0, $save_state = 0, $storemerge14 = 0, $wbuf$i = 0;
 var $wcs$$i = 0, $wn$$i = 0, $ws$0$lcssa$i = 0, $ws$030$i = 0, $ws$1$i = 0, $ws$2$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0;
 $wbuf$i = sp + 16|0;
 $s$i = sp + 8|0;
 $save_state = sp;
 $0 = ($frm|0)==($frm_end|0);
 L1: do {
  if ($0) {
   HEAP32[$to_nxt>>2] = $to;
   HEAP32[$frm_nxt>>2] = $frm;
   $95 = $frm;
  } else {
   $fend$061 = $frm;
   while(1) {
    $3 = HEAP8[$fend$061>>0]|0;
    $4 = ($3<<24>>24)==(0);
    $2 = (($fend$061) + 1|0);
    if ($4) {
     $fend$0$lcssa = $fend$061;
     break;
    }
    $1 = ($2|0)==($frm_end|0);
    if ($1) {
     $fend$0$lcssa = $frm_end;
     break;
    } else {
     $fend$061 = $2;
    }
   }
   HEAP32[$to_nxt>>2] = $to;
   HEAP32[$frm_nxt>>2] = $frm;
   $5 = ($to|0)==($to_end|0);
   if ($5) {
    $95 = $frm;
   } else {
    $6 = $to_end;
    $7 = (($this) + 8|0);
    $$0155 = $frm;$$0254 = $to;$fend$156 = $fend$0$lcssa;
    while(1) {
     $8 = $st;
     $9 = $8;
     $10 = HEAP32[$9>>2]|0;
     $11 = (($8) + 4)|0;
     $12 = $11;
     $13 = HEAP32[$12>>2]|0;
     $14 = $save_state;
     $15 = $14;
     HEAP32[$15>>2] = $10;
     $16 = (($14) + 4)|0;
     $17 = $16;
     HEAP32[$17>>2] = $13;
     $18 = $fend$156;
     $19 = $$0155;
     $20 = (($18) - ($19))|0;
     $21 = $$0254;
     $22 = (($6) - ($21))|0;
     $23 = $22 >> 2;
     $24 = HEAP32[$7>>2]|0;
     $25 = (_uselocale(($24|0))|0);
     $26 = HEAP32[$frm_nxt>>2]|0;
     HEAP32[$s$i>>2] = $26;
     $27 = ($$0254|0)!=(0|0);
     $wn$$i = $27 ? $23 : 256;
     $wcs$$i = $27 ? $$0254 : $wbuf$i;
     $28 = ($26|0)!=(0|0);
     $29 = ($wn$$i|0)!=(0);
     $or$cond27$i = $28 & $29;
     L10: do {
      if ($or$cond27$i) {
       $$01428$i = $wn$$i;$$031$i = $20;$97 = $26;$cnt$029$i = 0;$ws$030$i = $wcs$$i;
       while(1) {
        $30 = $$031$i >>> 2;
        $31 = ($30>>>0)>=($$01428$i>>>0);
        $32 = ($$031$i>>>0)>(131);
        $or$cond13$i = $31 | $32;
        if (!($or$cond13$i)) {
         $$0$lcssa$i = $$031$i;$$014$lcssa$i = $$01428$i;$44 = $97;$cnt$0$lcssa$i = $cnt$029$i;$ws$0$lcssa$i = $ws$030$i;
         label = 13;
         break L10;
        }
        $$014$$i = $31 ? $$01428$i : $30;
        $33 = (($$031$i) - ($$014$$i))|0;
        $34 = (_mbsrtowcs($ws$030$i,$s$i,$$014$$i,$st)|0);
        $35 = ($34|0)==(-1);
        if ($35) {
         $cnt$3$i = -1;
         break L10;
        }
        $36 = ($ws$030$i|0)==($wbuf$i|0);
        if ($36) {
         $$115$i = $$01428$i;$ws$1$i = $wbuf$i;
        } else {
         $37 = (($ws$030$i) + ($34<<2)|0);
         $38 = (($$01428$i) - ($34))|0;
         $$115$i = $38;$ws$1$i = $37;
        }
        $39 = (($34) + ($cnt$029$i))|0;
        $40 = HEAP32[$s$i>>2]|0;
        $41 = ($40|0)!=(0|0);
        $42 = ($$115$i|0)!=(0);
        $or$cond$i = $41 & $42;
        if ($or$cond$i) {
         $$01428$i = $$115$i;$$031$i = $33;$97 = $40;$cnt$029$i = $39;$ws$030$i = $ws$1$i;
        } else {
         $$0$lcssa$i = $33;$$014$lcssa$i = $$115$i;$44 = $40;$cnt$0$lcssa$i = $39;$ws$0$lcssa$i = $ws$1$i;
         label = 13;
         break;
        }
       }
      } else {
       $$0$lcssa$i = $20;$$014$lcssa$i = $wn$$i;$44 = $26;$cnt$0$lcssa$i = 0;$ws$0$lcssa$i = $wcs$$i;
       label = 13;
      }
     } while(0);
     L18: do {
      if ((label|0) == 13) {
       label = 0;
       $43 = ($44|0)!=(0|0);
       $45 = ($$014$lcssa$i|0)!=(0);
       $or$cond5$i = $43 & $45;
       $46 = ($$0$lcssa$i|0)!=(0);
       $or$cond8$i = $or$cond5$i & $46;
       if ($or$cond8$i) {
        $$2$i = $$0$lcssa$i;$$3$i = $$014$lcssa$i;$47 = $44;$cnt$2$i = $cnt$0$lcssa$i;$ws$2$i = $ws$0$lcssa$i;
        while(1) {
         $48 = (_mbrtowc($ws$2$i,$47,$$2$i,$st)|0);
         $49 = (($48) + 2)|0;
         $50 = ($49>>>0)<(3);
         if ($50) {
          break;
         }
         $51 = (($47) + ($48)|0);
         HEAP32[$s$i>>2] = $51;
         $52 = (($$2$i) - ($48))|0;
         $53 = (($ws$2$i) + 4|0);
         $54 = (($$3$i) + -1)|0;
         $55 = (($cnt$2$i) + 1)|0;
         $$old4$i = ($54|0)!=(0);
         $$old7$i = ($$2$i|0)!=($48|0);
         $or$cond10$i = $$old4$i & $$old7$i;
         if ($or$cond10$i) {
          $$2$i = $52;$$3$i = $54;$47 = $51;$cnt$2$i = $55;$ws$2$i = $53;
         } else {
          $cnt$3$i = $55;
          break L18;
         }
        }
        if ((($48|0) == -1)) {
         $cnt$3$i = -1;
         break;
        } else if ((($48|0) == 0)) {
         HEAP32[$s$i>>2] = 0;
         $cnt$3$i = $cnt$2$i;
         break;
        } else {
         HEAP32[$st>>2] = 0;
         $cnt$3$i = $cnt$2$i;
         break;
        }
       } else {
        $cnt$3$i = $cnt$0$lcssa$i;
       }
      }
     } while(0);
     if ($27) {
      $56 = HEAP32[$s$i>>2]|0;
      HEAP32[$frm_nxt>>2] = $56;
     }
     $57 = ($25|0)==(0|0);
     if (!($57)) {
      (_uselocale(($25|0))|0);
     }
     if ((($cnt$3$i|0) == -1)) {
      label = 24;
      break;
     } else if ((($cnt$3$i|0) == 0)) {
      $$0 = 2;
      label = 46;
      break;
     }
     $73 = HEAP32[$to_nxt>>2]|0;
     $74 = (($73) + ($cnt$3$i<<2)|0);
     HEAP32[$to_nxt>>2] = $74;
     $75 = ($74|0)==($to_end|0);
     if ($75) {
      label = 44;
      break;
     }
     $76 = ($fend$156|0)==($frm_end|0);
     $$pre114 = HEAP32[$frm_nxt>>2]|0;
     if ($76) {
      $92 = $$pre114;$94 = $74;$fend$3 = $frm_end;
     } else {
      $77 = HEAP32[$7>>2]|0;
      $78 = (_uselocale(($77|0))|0);
      $79 = (_mbrtowc($74,$$pre114,1,$st)|0);
      $80 = ($78|0)==(0|0);
      if (!($80)) {
       (_uselocale(($78|0))|0);
      }
      $81 = ($79|0)==(0);
      if (!($81)) {
       $$0 = 2;
       label = 46;
       break;
      }
      $82 = HEAP32[$to_nxt>>2]|0;
      $83 = (($82) + 4|0);
      HEAP32[$to_nxt>>2] = $83;
      $84 = HEAP32[$frm_nxt>>2]|0;
      $85 = (($84) + 1|0);
      HEAP32[$frm_nxt>>2] = $85;
      $86 = ($85|0)==($frm_end|0);
      L42: do {
       if ($86) {
        $fend$2$lcssa = $frm_end;
       } else {
        $fend$216 = $85;
        while(1) {
         $89 = HEAP8[$fend$216>>0]|0;
         $90 = ($89<<24>>24)==(0);
         $88 = (($fend$216) + 1|0);
         if ($90) {
          $fend$2$lcssa = $fend$216;
          break L42;
         }
         $87 = ($88|0)==($frm_end|0);
         if ($87) {
          $fend$2$lcssa = $frm_end;
          break;
         } else {
          $fend$216 = $88;
         }
        }
       }
      } while(0);
      $$pre115 = HEAP32[$to_nxt>>2]|0;
      $92 = $85;$94 = $$pre115;$fend$3 = $fend$2$lcssa;
     }
     $91 = ($92|0)==($frm_end|0);
     $93 = ($94|0)==($to_end|0);
     $or$cond = $91 | $93;
     if ($or$cond) {
      $95 = $92;
      break L1;
     } else {
      $$0155 = $92;$$0254 = $94;$fend$156 = $fend$3;
     }
    }
    if ((label|0) == 24) {
     HEAP32[$to_nxt>>2] = $$0254;
     $58 = HEAP32[$frm_nxt>>2]|0;
     $59 = ($$0155|0)==($58|0);
     L50: do {
      if ($59) {
       $$1$lcssa = $$0155;
      } else {
       $$115 = $$0155;$storemerge14 = $$0254;
       while(1) {
        $60 = $$115;
        $61 = (($18) - ($60))|0;
        $62 = HEAP32[$7>>2]|0;
        $63 = (_uselocale(($62|0))|0);
        $64 = (_mbrtowc($storemerge14,$$115,$61,$save_state)|0);
        $65 = ($63|0)==(0|0);
        if (!($65)) {
         (_uselocale(($63|0))|0);
        }
        if ((($64|0) == -1)) {
         label = 29;
         break;
        } else if ((($64|0) == 0)) {
         $66 = (($$115) + 1|0);
         $$2 = $66;
        } else if ((($64|0) == -2)) {
         label = 30;
         break;
        } else {
         $67 = (($$115) + ($64)|0);
         $$2 = $67;
        }
        $68 = HEAP32[$to_nxt>>2]|0;
        $69 = (($68) + 4|0);
        HEAP32[$to_nxt>>2] = $69;
        $70 = HEAP32[$frm_nxt>>2]|0;
        $71 = ($$2|0)==($70|0);
        if ($71) {
         $$1$lcssa = $$2;
         break L50;
        } else {
         $$115 = $$2;$storemerge14 = $69;
        }
       }
       if ((label|0) == 29) {
        HEAP32[$frm_nxt>>2] = $$115;
        $$0 = 2;
        STACKTOP = sp;return ($$0|0);
       }
       else if ((label|0) == 30) {
        HEAP32[$frm_nxt>>2] = $$115;
        $$0 = 1;
        STACKTOP = sp;return ($$0|0);
       }
      }
     } while(0);
     HEAP32[$frm_nxt>>2] = $$1$lcssa;
     $not$3 = ($$1$lcssa|0)!=($frm_end|0);
     $72 = $not$3&1;
     $$0 = $72;
     STACKTOP = sp;return ($$0|0);
    }
    else if ((label|0) == 44) {
     $$pre = HEAP32[$frm_nxt>>2]|0;
     $95 = $$pre;
     break;
    }
    else if ((label|0) == 46) {
     STACKTOP = sp;return ($$0|0);
    }
   }
  }
 } while(0);
 $not$ = ($95|0)!=($frm_end|0);
 $96 = $not$&1;
 $$0 = $96;
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$st,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $st = $st|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  STACKTOP = sp;return 0;
 }
 (_uselocale(($2|0))|0);
 STACKTOP = sp;return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (_uselocale(($1|0))|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  (_uselocale(($2|0))|0);
 }
 $4 = HEAP32[$0>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $$0 = 1;
 } else {
  $6 = (_uselocale(($4|0))|0);
  $7 = ($6|0)==(0|0);
  if ($7) {
   $$0 = 0;
  } else {
   (_uselocale(($6|0))|0);
   $$0 = 0;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$st,$frm,$frm_end,$mx) {
 $this = $this|0;
 $st = $st|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $$016 = 0, $$1 = 0, $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $nbytes$0$lcssa = 0, $nbytes$07 = 0, $nbytes$1 = 0, $nwchar_t$08 = 0, $or$cond = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mx|0)==(0);
 $1 = ($frm|0)==($frm_end|0);
 $or$cond5 = $0 | $1;
 if ($or$cond5) {
  $nbytes$0$lcssa = 0;
  STACKTOP = sp;return ($nbytes$0$lcssa|0);
 }
 $2 = $frm_end;
 $3 = (($this) + 8|0);
 $4 = ($st|0)!=(0|0);
 $5 = $4 ? $st : 48456;
 $$016 = $frm;$nbytes$07 = 0;$nwchar_t$08 = 0;
 while(1) {
  $6 = $$016;
  $7 = (($2) - ($6))|0;
  $8 = HEAP32[$3>>2]|0;
  $9 = (_uselocale(($8|0))|0);
  $10 = (_mbrtowc(0,$$016,$7,$5)|0);
  $11 = ($9|0)==(0|0);
  if (!($11)) {
   (_uselocale(($9|0))|0);
  }
  if ((($10|0) == 0)) {
   $12 = (($$016) + 1|0);
   $$1 = $12;$$pn = 1;
  } else if ((($10|0) == -2) | (($10|0) == -1)) {
   $nbytes$0$lcssa = $nbytes$07;
   label = 9;
   break;
  } else {
   $13 = (($$016) + ($10)|0);
   $$1 = $13;$$pn = $10;
  }
  $nbytes$1 = (($$pn) + ($nbytes$07))|0;
  $14 = (($nwchar_t$08) + 1)|0;
  $15 = ($14>>>0)>=($mx>>>0);
  $16 = ($$1|0)==($frm_end|0);
  $or$cond = $15 | $16;
  if ($or$cond) {
   $nbytes$0$lcssa = $nbytes$1;
   label = 9;
   break;
  } else {
   $$016 = $$1;$nbytes$07 = $nbytes$1;$nwchar_t$08 = $14;
  }
 }
 if ((label|0) == 9) {
  STACKTOP = sp;return ($nbytes$0$lcssa|0);
 }
 return (0)|0;
}
function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $5 = 1;
 } else {
  $3 = (_uselocale(($1|0))|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   $5 = 4;
  } else {
   (_uselocale(($3|0))|0);
   $5 = 4;
  }
 }
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0$i = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_frm_nxt$0 = 0, $_frm_nxt$1 = 0, $_frm_nxt$2 = 0, $_to_nxt$0 = 0, $_to_nxt$1 = 0, $_to_nxt$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $frm_end;
 $2 = ($frm>>>0)<($frm_end>>>0);
 L1: do {
  if ($2) {
   $3 = $to_end;
   $_frm_nxt$0 = $frm;$_to_nxt$0 = $to;
   while(1) {
    $4 = HEAP16[$_frm_nxt$0>>1]|0;
    $5 = $4&65535;
    $6 = ($4&65535)<(128);
    do {
     if ($6) {
      $7 = $_to_nxt$0;
      $8 = (($3) - ($7))|0;
      $9 = ($8|0)<(1);
      if ($9) {
       $$0$i = 1;$_frm_nxt$2 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
       break L1;
      }
      $10 = $4&255;
      $11 = (($_to_nxt$0) + 1|0);
      HEAP8[$_to_nxt$0>>0] = $10;
      $_frm_nxt$1 = $_frm_nxt$0;$_to_nxt$1 = $11;
     } else {
      $12 = ($4&65535)<(2048);
      if ($12) {
       $13 = $_to_nxt$0;
       $14 = (($3) - ($13))|0;
       $15 = ($14|0)<(2);
       if ($15) {
        $$0$i = 1;$_frm_nxt$2 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
       $16 = $5 >>> 6;
       $17 = $16 | 192;
       $18 = $17&255;
       $19 = (($_to_nxt$0) + 1|0);
       HEAP8[$_to_nxt$0>>0] = $18;
       $20 = $5 & 63;
       $21 = $20 | 128;
       $22 = $21&255;
       $23 = (($_to_nxt$0) + 2|0);
       HEAP8[$19>>0] = $22;
       $_frm_nxt$1 = $_frm_nxt$0;$_to_nxt$1 = $23;
       break;
      }
      $24 = ($4&65535)<(55296);
      if ($24) {
       $25 = $_to_nxt$0;
       $26 = (($3) - ($25))|0;
       $27 = ($26|0)<(3);
       if ($27) {
        $$0$i = 1;$_frm_nxt$2 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
       $28 = $5 >>> 12;
       $29 = $28 | 224;
       $30 = $29&255;
       $31 = (($_to_nxt$0) + 1|0);
       HEAP8[$_to_nxt$0>>0] = $30;
       $32 = $5 >>> 6;
       $33 = $32 & 63;
       $34 = $33 | 128;
       $35 = $34&255;
       $36 = (($_to_nxt$0) + 2|0);
       HEAP8[$31>>0] = $35;
       $37 = $5 & 63;
       $38 = $37 | 128;
       $39 = $38&255;
       $40 = (($_to_nxt$0) + 3|0);
       HEAP8[$36>>0] = $39;
       $_frm_nxt$1 = $_frm_nxt$0;$_to_nxt$1 = $40;
       break;
      }
      $41 = ($4&65535)<(56320);
      if (!($41)) {
       $83 = ($4&65535)<(57344);
       if ($83) {
        $$0$i = 2;$_frm_nxt$2 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
       $84 = $_to_nxt$0;
       $85 = (($3) - ($84))|0;
       $86 = ($85|0)<(3);
       if ($86) {
        $$0$i = 1;$_frm_nxt$2 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
       $87 = $5 >>> 12;
       $88 = $87 | 224;
       $89 = $88&255;
       $90 = (($_to_nxt$0) + 1|0);
       HEAP8[$_to_nxt$0>>0] = $89;
       $91 = $5 >>> 6;
       $92 = $91 & 63;
       $93 = $92 | 128;
       $94 = $93&255;
       $95 = (($_to_nxt$0) + 2|0);
       HEAP8[$90>>0] = $94;
       $96 = $5 & 63;
       $97 = $96 | 128;
       $98 = $97&255;
       $99 = (($_to_nxt$0) + 3|0);
       HEAP8[$95>>0] = $98;
       $_frm_nxt$1 = $_frm_nxt$0;$_to_nxt$1 = $99;
       break;
      }
      $42 = $_frm_nxt$0;
      $43 = (($1) - ($42))|0;
      $44 = ($43|0)<(4);
      if ($44) {
       $$0$i = 1;$_frm_nxt$2 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
       break L1;
      }
      $45 = (($_frm_nxt$0) + 2|0);
      $46 = HEAP16[$45>>1]|0;
      $47 = $46&65535;
      $48 = $47 & 64512;
      $49 = ($48|0)==(56320);
      if (!($49)) {
       $$0$i = 2;$_frm_nxt$2 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
       break L1;
      }
      $50 = $_to_nxt$0;
      $51 = (($3) - ($50))|0;
      $52 = ($51|0)<(4);
      if ($52) {
       $$0$i = 1;$_frm_nxt$2 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
       break L1;
      }
      $53 = $5 & 960;
      $54 = $53 << 10;
      $55 = (($54) + 65536)|0;
      $56 = ($55>>>0)>(1114111);
      if ($56) {
       $$0$i = 2;$_frm_nxt$2 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
       break L1;
      }
      $57 = $53 >>> 6;
      $58 = (($57) + 1)|0;
      $59 = $58 >>> 2;
      $60 = $59 | 240;
      $61 = $60&255;
      $62 = (($_to_nxt$0) + 1|0);
      HEAP8[$_to_nxt$0>>0] = $61;
      $63 = $58 << 4;
      $64 = $63 & 48;
      $65 = $5 >>> 2;
      $66 = $65 & 15;
      $67 = $66 | $64;
      $68 = $67 | 128;
      $69 = $68&255;
      $70 = (($_to_nxt$0) + 2|0);
      HEAP8[$62>>0] = $69;
      $71 = $5 << 4;
      $72 = $71 & 48;
      $73 = $47 >>> 6;
      $74 = $73 & 15;
      $75 = $72 | $74;
      $76 = $75 | 128;
      $77 = $76&255;
      $78 = (($_to_nxt$0) + 3|0);
      HEAP8[$70>>0] = $77;
      $79 = $47 & 63;
      $80 = $79 | 128;
      $81 = $80&255;
      $82 = (($_to_nxt$0) + 4|0);
      HEAP8[$78>>0] = $81;
      $_frm_nxt$1 = $45;$_to_nxt$1 = $82;
     }
    } while(0);
    $100 = (($_frm_nxt$1) + 2|0);
    $101 = ($100>>>0)<($frm_end>>>0);
    if ($101) {
     $_frm_nxt$0 = $100;$_to_nxt$0 = $_to_nxt$1;
    } else {
     $$0$i = 0;$_frm_nxt$2 = $100;$_to_nxt$2 = $_to_nxt$1;
     break;
    }
   }
  } else {
   $$0$i = 0;$_frm_nxt$2 = $frm;$_to_nxt$2 = $to;
  }
 } while(0);
 $102 = $_frm_nxt$2;
 $103 = $frm;
 $104 = (($102) - ($103))|0;
 $105 = $104 >> 1;
 $106 = (($frm) + ($105<<1)|0);
 HEAP32[$frm_nxt>>2] = $106;
 $107 = $_to_nxt$2;
 $108 = $to;
 $109 = (($107) - ($108))|0;
 $110 = (($to) + ($109)|0);
 HEAP32[$to_nxt>>2] = $110;
 STACKTOP = sp;return ($$0$i|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0$i = 0, $$off$i = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_frm_nxt$0 = 0;
 var $_frm_nxt$1 = 0, $_frm_nxt$2 = 0, $_frm_nxt$3 = 0, $_to_nxt$0 = 0, $_to_nxt$1 = 0, $_to_nxt$2 = 0, $_to_nxt$3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($frm>>>0)<($frm_end>>>0);
 L1: do {
  if ($1) {
   $2 = $frm_end;
   $3 = $to_end;
   $_frm_nxt$0 = $frm;$_to_nxt$0 = $to;
   while(1) {
    $4 = ($_to_nxt$0>>>0)<($to_end>>>0);
    if (!($4)) {
     $_frm_nxt$2 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
     label = 31;
     break L1;
    }
    $5 = HEAP8[$_frm_nxt$0>>0]|0;
    $6 = $5&255;
    $7 = ($5<<24>>24)>(-1);
    do {
     if ($7) {
      $8 = $5&255;
      HEAP16[$_to_nxt$0>>1] = $8;
      $9 = (($_frm_nxt$0) + 1|0);
      $_frm_nxt$1 = $9;$_to_nxt$1 = $_to_nxt$0;
     } else {
      $10 = ($5&255)<(194);
      if ($10) {
       $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
       break L1;
      }
      $11 = ($5&255)<(224);
      if ($11) {
       $12 = $_frm_nxt$0;
       $13 = (($2) - ($12))|0;
       $14 = ($13|0)<(2);
       if ($14) {
        $$0$i = 1;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
        break L1;
       }
       $15 = (($_frm_nxt$0) + 1|0);
       $16 = HEAP8[$15>>0]|0;
       $17 = $16&255;
       $18 = $17 & 192;
       $19 = ($18|0)==(128);
       if (!($19)) {
        $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
        break L1;
       }
       $20 = $6 << 6;
       $21 = $17 & 63;
       $22 = $20 & 1984;
       $23 = $21 | $22;
       $24 = $23&65535;
       HEAP16[$_to_nxt$0>>1] = $24;
       $25 = (($_frm_nxt$0) + 2|0);
       $_frm_nxt$1 = $25;$_to_nxt$1 = $_to_nxt$0;
       break;
      }
      $26 = ($5&255)<(240);
      if ($26) {
       $27 = $_frm_nxt$0;
       $28 = (($2) - ($27))|0;
       $29 = ($28|0)<(3);
       if ($29) {
        $$0$i = 1;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
        break L1;
       }
       $30 = (($_frm_nxt$0) + 1|0);
       $31 = HEAP8[$30>>0]|0;
       $32 = (($_frm_nxt$0) + 2|0);
       $33 = HEAP8[$32>>0]|0;
       if ((($6|0) == 224)) {
        $34 = $31 & -32;
        $35 = ($34<<24>>24)==(-96);
        if (!($35)) {
         $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
         break L1;
        }
       } else if ((($6|0) == 237)) {
        $36 = $31 & -32;
        $37 = ($36<<24>>24)==(-128);
        if (!($37)) {
         $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
         break L1;
        }
       } else {
        $38 = $31 & -64;
        $39 = ($38<<24>>24)==(-128);
        if (!($39)) {
         $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
         break L1;
        }
       }
       $40 = $33&255;
       $41 = $40 & 192;
       $42 = ($41|0)==(128);
       if (!($42)) {
        $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
        break L1;
       }
       $43 = $6 << 12;
       $44 = $31&255;
       $45 = $44 << 6;
       $46 = $45 & 4032;
       $47 = $46 | $43;
       $48 = $40 & 63;
       $49 = $47 | $48;
       $50 = $49&65535;
       HEAP16[$_to_nxt$0>>1] = $50;
       $51 = (($_frm_nxt$0) + 3|0);
       $_frm_nxt$1 = $51;$_to_nxt$1 = $_to_nxt$0;
       break;
      }
      $52 = ($5&255)<(245);
      if (!($52)) {
       $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
       break L1;
      }
      $53 = $_frm_nxt$0;
      $54 = (($2) - ($53))|0;
      $55 = ($54|0)<(4);
      if ($55) {
       $$0$i = 1;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
       break L1;
      }
      $56 = (($_frm_nxt$0) + 1|0);
      $57 = HEAP8[$56>>0]|0;
      $58 = (($_frm_nxt$0) + 2|0);
      $59 = HEAP8[$58>>0]|0;
      $60 = (($_frm_nxt$0) + 3|0);
      $61 = HEAP8[$60>>0]|0;
      if ((($6|0) == 244)) {
       $63 = $57 & -16;
       $64 = ($63<<24>>24)==(-128);
       if (!($64)) {
        $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
        break L1;
       }
      } else if ((($6|0) == 240)) {
       $$off$i = (($57) + 112)<<24>>24;
       $62 = ($$off$i&255)<(48);
       if (!($62)) {
        $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
        break L1;
       }
      } else {
       $65 = $57 & -64;
       $66 = ($65<<24>>24)==(-128);
       if (!($66)) {
        $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
        break L1;
       }
      }
      $67 = $59&255;
      $68 = $67 & 192;
      $69 = ($68|0)==(128);
      if (!($69)) {
       $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
       break L1;
      }
      $70 = $61&255;
      $71 = $70 & 192;
      $72 = ($71|0)==(128);
      if (!($72)) {
       $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
       break L1;
      }
      $73 = $_to_nxt$0;
      $74 = (($3) - ($73))|0;
      $75 = ($74|0)<(4);
      if ($75) {
       $$0$i = 1;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
       break L1;
      }
      $76 = $6 & 7;
      $77 = $76 << 18;
      $78 = $57&255;
      $79 = $78 << 12;
      $80 = $79 & 196608;
      $81 = $80 | $77;
      $82 = ($81>>>0)>(1114111);
      if ($82) {
       $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$3 = $_to_nxt$0;
       break L1;
      }
      $83 = $70 & 63;
      $84 = $67 << 6;
      $85 = $76 << 2;
      $86 = $78 >>> 4;
      $87 = $86 & 3;
      $88 = $87 | $85;
      $89 = $88 << 6;
      $90 = (($89) + 16320)|0;
      $91 = $78 << 2;
      $92 = $91 & 60;
      $93 = $67 >>> 4;
      $94 = $93 & 3;
      $95 = $92 | $94;
      $96 = $95 | $90;
      $97 = $96 | 55296;
      $98 = $97&65535;
      HEAP16[$_to_nxt$0>>1] = $98;
      $99 = $84 & 960;
      $100 = $83 | $99;
      $101 = $100 | 56320;
      $102 = $101&65535;
      $103 = (($_to_nxt$0) + 2|0);
      HEAP16[$103>>1] = $102;
      $104 = (($_frm_nxt$0) + 4|0);
      $_frm_nxt$1 = $104;$_to_nxt$1 = $103;
     }
    } while(0);
    $105 = (($_to_nxt$1) + 2|0);
    $106 = ($_frm_nxt$1>>>0)<($frm_end>>>0);
    if ($106) {
     $_frm_nxt$0 = $_frm_nxt$1;$_to_nxt$0 = $105;
    } else {
     $_frm_nxt$2 = $_frm_nxt$1;$_to_nxt$2 = $105;
     label = 31;
     break;
    }
   }
  } else {
   $_frm_nxt$2 = $frm;$_to_nxt$2 = $to;
   label = 31;
  }
 } while(0);
 if ((label|0) == 31) {
  $107 = ($_frm_nxt$2>>>0)<($frm_end>>>0);
  $108 = $107&1;
  $$0$i = $108;$_frm_nxt$3 = $_frm_nxt$2;$_to_nxt$3 = $_to_nxt$2;
 }
 $109 = $_frm_nxt$3;
 $110 = $frm;
 $111 = (($109) - ($110))|0;
 $112 = (($frm) + ($111)|0);
 HEAP32[$frm_nxt>>2] = $112;
 $113 = $_to_nxt$3;
 $114 = $to;
 $115 = (($113) - ($114))|0;
 $116 = $115 >> 1;
 $117 = (($to) + ($116<<1)|0);
 HEAP32[$to_nxt>>2] = $117;
 STACKTOP = sp;return ($$0$i|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 STACKTOP = sp;return 3;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 0;
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $$0$i = 0, $$off$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $9 = 0, $frm_nxt$1$lcssa$i = 0, $frm_nxt$117$i = 0, $frm_nxt$2$i = 0, $nchar16_t$016$i = 0, $nchar16_t$1$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond15$i = 0, $or$cond2$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($frm>>>0)<($frm_end>>>0);
 $2 = ($mx|0)!=(0);
 $or$cond15$i = $1 & $2;
 L1: do {
  if ($or$cond15$i) {
   $3 = $frm_end;
   $frm_nxt$117$i = $frm;$nchar16_t$016$i = 0;
   L3: while(1) {
    $4 = HEAP8[$frm_nxt$117$i>>0]|0;
    $5 = $4&255;
    $6 = ($4<<24>>24)>(-1);
    do {
     if ($6) {
      $7 = (($frm_nxt$117$i) + 1|0);
      $frm_nxt$2$i = $7;$nchar16_t$1$i = $nchar16_t$016$i;
     } else {
      $8 = ($4&255)<(194);
      if ($8) {
       $frm_nxt$1$lcssa$i = $frm_nxt$117$i;
       break L1;
      }
      $9 = ($4&255)<(224);
      if ($9) {
       $10 = $frm_nxt$117$i;
       $11 = (($3) - ($10))|0;
       $12 = ($11|0)<(2);
       if ($12) {
        $frm_nxt$1$lcssa$i = $frm_nxt$117$i;
        break L1;
       }
       $13 = (($frm_nxt$117$i) + 1|0);
       $14 = HEAP8[$13>>0]|0;
       $15 = $14 & -64;
       $16 = ($15<<24>>24)==(-128);
       if (!($16)) {
        $frm_nxt$1$lcssa$i = $frm_nxt$117$i;
        break L1;
       }
       $17 = (($frm_nxt$117$i) + 2|0);
       $frm_nxt$2$i = $17;$nchar16_t$1$i = $nchar16_t$016$i;
       break;
      }
      $18 = ($4&255)<(240);
      if ($18) {
       $19 = $frm_nxt$117$i;
       $20 = (($3) - ($19))|0;
       $21 = ($20|0)<(3);
       if ($21) {
        $frm_nxt$1$lcssa$i = $frm_nxt$117$i;
        break L1;
       }
       $22 = (($frm_nxt$117$i) + 1|0);
       $23 = HEAP8[$22>>0]|0;
       $24 = (($frm_nxt$117$i) + 2|0);
       $25 = HEAP8[$24>>0]|0;
       if ((($5|0) == 224)) {
        $26 = $23 & -32;
        $27 = ($26<<24>>24)==(-96);
        if (!($27)) {
         label = 14;
         break L3;
        }
       } else if ((($5|0) == 237)) {
        $30 = $23 & -32;
        $31 = ($30<<24>>24)==(-128);
        if (!($31)) {
         label = 16;
         break L3;
        }
       } else {
        $34 = $23 & -64;
        $35 = ($34<<24>>24)==(-128);
        if (!($35)) {
         label = 18;
         break L3;
        }
       }
       $38 = $25 & -64;
       $39 = ($38<<24>>24)==(-128);
       if (!($39)) {
        $frm_nxt$1$lcssa$i = $frm_nxt$117$i;
        break L1;
       }
       $40 = (($frm_nxt$117$i) + 3|0);
       $frm_nxt$2$i = $40;$nchar16_t$1$i = $nchar16_t$016$i;
       break;
      }
      $41 = ($4&255)<(245);
      if (!($41)) {
       $frm_nxt$1$lcssa$i = $frm_nxt$117$i;
       break L1;
      }
      $42 = $frm_nxt$117$i;
      $43 = (($3) - ($42))|0;
      $44 = ($43|0)<(4);
      $45 = (($mx) - ($nchar16_t$016$i))|0;
      $46 = ($45>>>0)<(2);
      $or$cond2$i = $44 | $46;
      if ($or$cond2$i) {
       $frm_nxt$1$lcssa$i = $frm_nxt$117$i;
       break L1;
      }
      $47 = (($frm_nxt$117$i) + 1|0);
      $48 = HEAP8[$47>>0]|0;
      $49 = (($frm_nxt$117$i) + 2|0);
      $50 = HEAP8[$49>>0]|0;
      $51 = (($frm_nxt$117$i) + 3|0);
      $52 = HEAP8[$51>>0]|0;
      if ((($5|0) == 244)) {
       $56 = $48 & -16;
       $57 = ($56<<24>>24)==(-128);
       if (!($57)) {
        label = 27;
        break L3;
       }
      } else if ((($5|0) == 240)) {
       $$off$i = (($48) + 112)<<24>>24;
       $53 = ($$off$i&255)<(48);
       if (!($53)) {
        label = 25;
        break L3;
       }
      } else {
       $60 = $48 & -64;
       $61 = ($60<<24>>24)==(-128);
       if (!($61)) {
        label = 29;
        break L3;
       }
      }
      $64 = $50 & -64;
      $65 = ($64<<24>>24)==(-128);
      $66 = $52 & -64;
      $67 = ($66<<24>>24)==(-128);
      $or$cond = $65 & $67;
      if (!($or$cond)) {
       $frm_nxt$1$lcssa$i = $frm_nxt$117$i;
       break L1;
      }
      $68 = $5 << 18;
      $69 = $68 & 1835008;
      $70 = $48&255;
      $71 = $70 << 12;
      $72 = $71 & 196608;
      $73 = $72 | $69;
      $74 = ($73>>>0)>(1114111);
      if ($74) {
       $frm_nxt$1$lcssa$i = $frm_nxt$117$i;
       break L1;
      }
      $75 = (($nchar16_t$016$i) + 1)|0;
      $76 = (($frm_nxt$117$i) + 4|0);
      $frm_nxt$2$i = $76;$nchar16_t$1$i = $75;
     }
    } while(0);
    $77 = (($nchar16_t$1$i) + 1)|0;
    $78 = ($frm_nxt$2$i>>>0)<($frm_end>>>0);
    $79 = ($77>>>0)<($mx>>>0);
    $or$cond$i = $78 & $79;
    if ($or$cond$i) {
     $frm_nxt$117$i = $frm_nxt$2$i;$nchar16_t$016$i = $77;
    } else {
     $frm_nxt$1$lcssa$i = $frm_nxt$2$i;
     break L1;
    }
   }
   if ((label|0) == 14) {
    $28 = $frm;
    $29 = (($19) - ($28))|0;
    $$0$i = $29;
    STACKTOP = sp;return ($$0$i|0);
   }
   else if ((label|0) == 16) {
    $32 = $frm;
    $33 = (($19) - ($32))|0;
    $$0$i = $33;
    STACKTOP = sp;return ($$0$i|0);
   }
   else if ((label|0) == 18) {
    $36 = $frm;
    $37 = (($19) - ($36))|0;
    $$0$i = $37;
    STACKTOP = sp;return ($$0$i|0);
   }
   else if ((label|0) == 25) {
    $54 = $frm;
    $55 = (($42) - ($54))|0;
    $$0$i = $55;
    STACKTOP = sp;return ($$0$i|0);
   }
   else if ((label|0) == 27) {
    $58 = $frm;
    $59 = (($42) - ($58))|0;
    $$0$i = $59;
    STACKTOP = sp;return ($$0$i|0);
   }
   else if ((label|0) == 29) {
    $62 = $frm;
    $63 = (($42) - ($62))|0;
    $$0$i = $63;
    STACKTOP = sp;return ($$0$i|0);
   }
  } else {
   $frm_nxt$1$lcssa$i = $frm;
  }
 } while(0);
 $80 = $frm_nxt$1$lcssa$i;
 $81 = $frm;
 $82 = (($80) - ($81))|0;
 $$0$i = $82;
 STACKTOP = sp;return ($$0$i|0);
}
function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 4;
}
function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $_frm_nxt$0 = 0, $_frm_nxt$1 = 0, $_to_nxt$0 = 0, $_to_nxt$1 = 0, $_to_nxt$2 = 0, $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($frm>>>0)<($frm_end>>>0);
 L1: do {
  if ($1) {
   $2 = $to_end;
   $_frm_nxt$0 = $frm;$_to_nxt$0 = $to;
   while(1) {
    $3 = HEAP32[$_frm_nxt$0>>2]|0;
    $4 = $3 & -2048;
    $5 = ($4|0)==(55296);
    $6 = ($3>>>0)>(1114111);
    $or$cond$i = $5 | $6;
    if ($or$cond$i) {
     $$0$i = 2;$_frm_nxt$1 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
     break L1;
    }
    $7 = ($3>>>0)<(128);
    do {
     if ($7) {
      $8 = $_to_nxt$0;
      $9 = (($2) - ($8))|0;
      $10 = ($9|0)<(1);
      if ($10) {
       $$0$i = 1;$_frm_nxt$1 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
       break L1;
      }
      $11 = $3&255;
      $12 = (($_to_nxt$0) + 1|0);
      HEAP8[$_to_nxt$0>>0] = $11;
      $_to_nxt$1 = $12;
     } else {
      $13 = ($3>>>0)<(2048);
      if ($13) {
       $14 = $_to_nxt$0;
       $15 = (($2) - ($14))|0;
       $16 = ($15|0)<(2);
       if ($16) {
        $$0$i = 1;$_frm_nxt$1 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
       $17 = $3 >>> 6;
       $18 = $17 | 192;
       $19 = $18&255;
       $20 = (($_to_nxt$0) + 1|0);
       HEAP8[$_to_nxt$0>>0] = $19;
       $21 = $3 & 63;
       $22 = $21 | 128;
       $23 = $22&255;
       $24 = (($_to_nxt$0) + 2|0);
       HEAP8[$20>>0] = $23;
       $_to_nxt$1 = $24;
       break;
      }
      $25 = ($3>>>0)<(65536);
      $26 = $_to_nxt$0;
      $27 = (($2) - ($26))|0;
      if ($25) {
       $28 = ($27|0)<(3);
       if ($28) {
        $$0$i = 1;$_frm_nxt$1 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
       $29 = $3 >>> 12;
       $30 = $29 | 224;
       $31 = $30&255;
       $32 = (($_to_nxt$0) + 1|0);
       HEAP8[$_to_nxt$0>>0] = $31;
       $33 = $3 >>> 6;
       $34 = $33 & 63;
       $35 = $34 | 128;
       $36 = $35&255;
       $37 = (($_to_nxt$0) + 2|0);
       HEAP8[$32>>0] = $36;
       $38 = $3 & 63;
       $39 = $38 | 128;
       $40 = $39&255;
       $41 = (($_to_nxt$0) + 3|0);
       HEAP8[$37>>0] = $40;
       $_to_nxt$1 = $41;
       break;
      } else {
       $42 = ($27|0)<(4);
       if ($42) {
        $$0$i = 1;$_frm_nxt$1 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
       $43 = $3 >>> 18;
       $44 = $43 | 240;
       $45 = $44&255;
       $46 = (($_to_nxt$0) + 1|0);
       HEAP8[$_to_nxt$0>>0] = $45;
       $47 = $3 >>> 12;
       $48 = $47 & 63;
       $49 = $48 | 128;
       $50 = $49&255;
       $51 = (($_to_nxt$0) + 2|0);
       HEAP8[$46>>0] = $50;
       $52 = $3 >>> 6;
       $53 = $52 & 63;
       $54 = $53 | 128;
       $55 = $54&255;
       $56 = (($_to_nxt$0) + 3|0);
       HEAP8[$51>>0] = $55;
       $57 = $3 & 63;
       $58 = $57 | 128;
       $59 = $58&255;
       $60 = (($_to_nxt$0) + 4|0);
       HEAP8[$56>>0] = $59;
       $_to_nxt$1 = $60;
       break;
      }
     }
    } while(0);
    $61 = (($_frm_nxt$0) + 4|0);
    $62 = ($61>>>0)<($frm_end>>>0);
    if ($62) {
     $_frm_nxt$0 = $61;$_to_nxt$0 = $_to_nxt$1;
    } else {
     $$0$i = 0;$_frm_nxt$1 = $61;$_to_nxt$2 = $_to_nxt$1;
     break;
    }
   }
  } else {
   $$0$i = 0;$_frm_nxt$1 = $frm;$_to_nxt$2 = $to;
  }
 } while(0);
 $63 = $_frm_nxt$1;
 $64 = $frm;
 $65 = (($63) - ($64))|0;
 $66 = $65 >> 2;
 $67 = (($frm) + ($66<<2)|0);
 HEAP32[$frm_nxt>>2] = $67;
 $68 = $_to_nxt$2;
 $69 = $to;
 $70 = (($68) - ($69))|0;
 $71 = (($to) + ($70)|0);
 HEAP32[$to_nxt>>2] = $71;
 STACKTOP = sp;return ($$0$i|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this,$0,$frm,$frm_end,$frm_nxt,$to,$to_end,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $frm_nxt = $frm_nxt|0;
 $to = $to|0;
 $to_end = $to_end|0;
 $to_nxt = $to_nxt|0;
 var $$0$i = 0, $$off$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $_frm_nxt$0 = 0, $_frm_nxt$1 = 0, $_frm_nxt$2 = 0;
 var $_frm_nxt$3 = 0, $_to_nxt$0 = 0, $_to_nxt$1 = 0, $_to_nxt$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($frm>>>0)<($frm_end>>>0);
 L1: do {
  if ($1) {
   $2 = $frm_end;
   $_frm_nxt$0 = $frm;$_to_nxt$0 = $to;
   while(1) {
    $3 = ($_to_nxt$0>>>0)<($to_end>>>0);
    if (!($3)) {
     $_frm_nxt$2 = $_frm_nxt$0;$_to_nxt$1 = $_to_nxt$0;
     label = 30;
     break L1;
    }
    $4 = HEAP8[$_frm_nxt$0>>0]|0;
    $5 = $4&255;
    $6 = ($4<<24>>24)>(-1);
    do {
     if ($6) {
      HEAP32[$_to_nxt$0>>2] = $5;
      $7 = (($_frm_nxt$0) + 1|0);
      $_frm_nxt$1 = $7;
     } else {
      $8 = ($4&255)<(194);
      if ($8) {
       $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
       break L1;
      }
      $9 = ($4&255)<(224);
      if ($9) {
       $10 = $_frm_nxt$0;
       $11 = (($2) - ($10))|0;
       $12 = ($11|0)<(2);
       if ($12) {
        $$0$i = 1;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
       $13 = (($_frm_nxt$0) + 1|0);
       $14 = HEAP8[$13>>0]|0;
       $15 = $14&255;
       $16 = $15 & 192;
       $17 = ($16|0)==(128);
       if (!($17)) {
        $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
       $18 = $5 << 6;
       $19 = $15 & 63;
       $20 = $18 & 1984;
       $21 = $19 | $20;
       HEAP32[$_to_nxt$0>>2] = $21;
       $22 = (($_frm_nxt$0) + 2|0);
       $_frm_nxt$1 = $22;
       break;
      }
      $23 = ($4&255)<(240);
      if ($23) {
       $24 = $_frm_nxt$0;
       $25 = (($2) - ($24))|0;
       $26 = ($25|0)<(3);
       if ($26) {
        $$0$i = 1;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
       $27 = (($_frm_nxt$0) + 1|0);
       $28 = HEAP8[$27>>0]|0;
       $29 = (($_frm_nxt$0) + 2|0);
       $30 = HEAP8[$29>>0]|0;
       if ((($5|0) == 237)) {
        $33 = $28 & -32;
        $34 = ($33<<24>>24)==(-128);
        if (!($34)) {
         $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
         break L1;
        }
       } else if ((($5|0) == 224)) {
        $31 = $28 & -32;
        $32 = ($31<<24>>24)==(-96);
        if (!($32)) {
         $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
         break L1;
        }
       } else {
        $35 = $28 & -64;
        $36 = ($35<<24>>24)==(-128);
        if (!($36)) {
         $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
         break L1;
        }
       }
       $37 = $30&255;
       $38 = $37 & 192;
       $39 = ($38|0)==(128);
       if (!($39)) {
        $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
       $40 = $28&255;
       $41 = $40 << 6;
       $42 = $5 << 12;
       $43 = $41 & 4032;
       $44 = $42 & 61440;
       $45 = $37 & 63;
       $46 = $43 | $44;
       $47 = $46 | $45;
       HEAP32[$_to_nxt$0>>2] = $47;
       $48 = (($_frm_nxt$0) + 3|0);
       $_frm_nxt$1 = $48;
       break;
      }
      $49 = ($4&255)<(245);
      if (!($49)) {
       $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
       break L1;
      }
      $50 = $_frm_nxt$0;
      $51 = (($2) - ($50))|0;
      $52 = ($51|0)<(4);
      if ($52) {
       $$0$i = 1;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
       break L1;
      }
      $53 = (($_frm_nxt$0) + 1|0);
      $54 = HEAP8[$53>>0]|0;
      $55 = (($_frm_nxt$0) + 2|0);
      $56 = HEAP8[$55>>0]|0;
      $57 = (($_frm_nxt$0) + 3|0);
      $58 = HEAP8[$57>>0]|0;
      if ((($5|0) == 244)) {
       $60 = $54 & -16;
       $61 = ($60<<24>>24)==(-128);
       if (!($61)) {
        $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
      } else if ((($5|0) == 240)) {
       $$off$i = (($54) + 112)<<24>>24;
       $59 = ($$off$i&255)<(48);
       if (!($59)) {
        $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
      } else {
       $62 = $54 & -64;
       $63 = ($62<<24>>24)==(-128);
       if (!($63)) {
        $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
        break L1;
       }
      }
      $64 = $56&255;
      $65 = $64 & 192;
      $66 = ($65|0)==(128);
      if (!($66)) {
       $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
       break L1;
      }
      $67 = $58&255;
      $68 = $67 & 192;
      $69 = ($68|0)==(128);
      if (!($69)) {
       $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
       break L1;
      }
      $70 = $5 << 18;
      $71 = $70 & 1835008;
      $72 = $54&255;
      $73 = $72 << 12;
      $74 = $73 & 258048;
      $75 = $74 | $71;
      $76 = $64 << 6;
      $77 = $76 & 4032;
      $78 = $75 | $77;
      $79 = $67 & 63;
      $80 = $78 | $79;
      $81 = ($80>>>0)>(1114111);
      if ($81) {
       $$0$i = 2;$_frm_nxt$3 = $_frm_nxt$0;$_to_nxt$2 = $_to_nxt$0;
       break L1;
      }
      HEAP32[$_to_nxt$0>>2] = $80;
      $82 = (($_frm_nxt$0) + 4|0);
      $_frm_nxt$1 = $82;
     }
    } while(0);
    $83 = (($_to_nxt$0) + 4|0);
    $84 = ($_frm_nxt$1>>>0)<($frm_end>>>0);
    if ($84) {
     $_frm_nxt$0 = $_frm_nxt$1;$_to_nxt$0 = $83;
    } else {
     $_frm_nxt$2 = $_frm_nxt$1;$_to_nxt$1 = $83;
     label = 30;
     break;
    }
   }
  } else {
   $_frm_nxt$2 = $frm;$_to_nxt$1 = $to;
   label = 30;
  }
 } while(0);
 if ((label|0) == 30) {
  $85 = ($_frm_nxt$2>>>0)<($frm_end>>>0);
  $86 = $85&1;
  $$0$i = $86;$_frm_nxt$3 = $_frm_nxt$2;$_to_nxt$2 = $_to_nxt$1;
 }
 $87 = $_frm_nxt$3;
 $88 = $frm;
 $89 = (($87) - ($88))|0;
 $90 = (($frm) + ($89)|0);
 HEAP32[$frm_nxt>>2] = $90;
 $91 = $_to_nxt$2;
 $92 = $to;
 $93 = (($91) - ($92))|0;
 $94 = $93 >> 2;
 $95 = (($to) + ($94<<2)|0);
 HEAP32[$to_nxt>>2] = $95;
 STACKTOP = sp;return ($$0$i|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this,$0,$to,$1,$to_nxt) {
 $this = $this|0;
 $0 = $0|0;
 $to = $to|0;
 $1 = $1|0;
 $to_nxt = $to_nxt|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$to_nxt>>2] = $to;
 STACKTOP = sp;return 3;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 0;
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this,$0,$frm,$frm_end,$mx) {
 $this = $this|0;
 $0 = $0|0;
 $frm = $frm|0;
 $frm_end = $frm_end|0;
 $mx = $mx|0;
 var $$0$i = 0, $$off$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $9 = 0, $frm_nxt$1$lcssa$i = 0, $frm_nxt$115$i = 0, $frm_nxt$2$i = 0, $nchar32_t$014$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond13$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($frm>>>0)<($frm_end>>>0);
 $2 = ($mx|0)!=(0);
 $or$cond13$i = $1 & $2;
 L1: do {
  if ($or$cond13$i) {
   $3 = $frm_end;
   $frm_nxt$115$i = $frm;$nchar32_t$014$i = 0;
   L3: while(1) {
    $4 = HEAP8[$frm_nxt$115$i>>0]|0;
    $5 = $4&255;
    $6 = ($4<<24>>24)>(-1);
    do {
     if ($6) {
      $7 = (($frm_nxt$115$i) + 1|0);
      $frm_nxt$2$i = $7;
     } else {
      $8 = ($4&255)<(194);
      if ($8) {
       $frm_nxt$1$lcssa$i = $frm_nxt$115$i;
       break L1;
      }
      $9 = ($4&255)<(224);
      if ($9) {
       $10 = $frm_nxt$115$i;
       $11 = (($3) - ($10))|0;
       $12 = ($11|0)<(2);
       if ($12) {
        $frm_nxt$1$lcssa$i = $frm_nxt$115$i;
        break L1;
       }
       $13 = (($frm_nxt$115$i) + 1|0);
       $14 = HEAP8[$13>>0]|0;
       $15 = $14 & -64;
       $16 = ($15<<24>>24)==(-128);
       if (!($16)) {
        $frm_nxt$1$lcssa$i = $frm_nxt$115$i;
        break L1;
       }
       $17 = (($frm_nxt$115$i) + 2|0);
       $frm_nxt$2$i = $17;
       break;
      }
      $18 = ($4&255)<(240);
      if ($18) {
       $19 = $frm_nxt$115$i;
       $20 = (($3) - ($19))|0;
       $21 = ($20|0)<(3);
       if ($21) {
        $frm_nxt$1$lcssa$i = $frm_nxt$115$i;
        break L1;
       }
       $22 = (($frm_nxt$115$i) + 1|0);
       $23 = HEAP8[$22>>0]|0;
       $24 = (($frm_nxt$115$i) + 2|0);
       $25 = HEAP8[$24>>0]|0;
       if ((($5|0) == 237)) {
        $30 = $23 & -32;
        $31 = ($30<<24>>24)==(-128);
        if (!($31)) {
         label = 16;
         break L3;
        }
       } else if ((($5|0) == 224)) {
        $26 = $23 & -32;
        $27 = ($26<<24>>24)==(-96);
        if (!($27)) {
         label = 14;
         break L3;
        }
       } else {
        $34 = $23 & -64;
        $35 = ($34<<24>>24)==(-128);
        if (!($35)) {
         label = 18;
         break L3;
        }
       }
       $38 = $25 & -64;
       $39 = ($38<<24>>24)==(-128);
       if (!($39)) {
        $frm_nxt$1$lcssa$i = $frm_nxt$115$i;
        break L1;
       }
       $40 = (($frm_nxt$115$i) + 3|0);
       $frm_nxt$2$i = $40;
       break;
      }
      $41 = ($4&255)<(245);
      if (!($41)) {
       $frm_nxt$1$lcssa$i = $frm_nxt$115$i;
       break L1;
      }
      $42 = $frm_nxt$115$i;
      $43 = (($3) - ($42))|0;
      $44 = ($43|0)<(4);
      if ($44) {
       $frm_nxt$1$lcssa$i = $frm_nxt$115$i;
       break L1;
      }
      $45 = (($frm_nxt$115$i) + 1|0);
      $46 = HEAP8[$45>>0]|0;
      $47 = (($frm_nxt$115$i) + 2|0);
      $48 = HEAP8[$47>>0]|0;
      $49 = (($frm_nxt$115$i) + 3|0);
      $50 = HEAP8[$49>>0]|0;
      if ((($5|0) == 244)) {
       $54 = $46 & -16;
       $55 = ($54<<24>>24)==(-128);
       if (!($55)) {
        label = 27;
        break L3;
       }
      } else if ((($5|0) == 240)) {
       $$off$i = (($46) + 112)<<24>>24;
       $51 = ($$off$i&255)<(48);
       if (!($51)) {
        label = 25;
        break L3;
       }
      } else {
       $58 = $46 & -64;
       $59 = ($58<<24>>24)==(-128);
       if (!($59)) {
        label = 29;
        break L3;
       }
      }
      $62 = $48 & -64;
      $63 = ($62<<24>>24)==(-128);
      $64 = $50 & -64;
      $65 = ($64<<24>>24)==(-128);
      $or$cond = $63 & $65;
      if (!($or$cond)) {
       $frm_nxt$1$lcssa$i = $frm_nxt$115$i;
       break L1;
      }
      $66 = $5 << 18;
      $67 = $66 & 1835008;
      $68 = $46&255;
      $69 = $68 << 12;
      $70 = $69 & 196608;
      $71 = $70 | $67;
      $72 = ($71>>>0)>(1114111);
      if ($72) {
       $frm_nxt$1$lcssa$i = $frm_nxt$115$i;
       break L1;
      }
      $73 = (($frm_nxt$115$i) + 4|0);
      $frm_nxt$2$i = $73;
     }
    } while(0);
    $74 = (($nchar32_t$014$i) + 1)|0;
    $75 = ($frm_nxt$2$i>>>0)<($frm_end>>>0);
    $76 = ($74>>>0)<($mx>>>0);
    $or$cond$i = $75 & $76;
    if ($or$cond$i) {
     $frm_nxt$115$i = $frm_nxt$2$i;$nchar32_t$014$i = $74;
    } else {
     $frm_nxt$1$lcssa$i = $frm_nxt$2$i;
     break L1;
    }
   }
   if ((label|0) == 14) {
    $28 = $frm;
    $29 = (($19) - ($28))|0;
    $$0$i = $29;
    STACKTOP = sp;return ($$0$i|0);
   }
   else if ((label|0) == 16) {
    $32 = $frm;
    $33 = (($19) - ($32))|0;
    $$0$i = $33;
    STACKTOP = sp;return ($$0$i|0);
   }
   else if ((label|0) == 18) {
    $36 = $frm;
    $37 = (($19) - ($36))|0;
    $$0$i = $37;
    STACKTOP = sp;return ($$0$i|0);
   }
   else if ((label|0) == 25) {
    $52 = $frm;
    $53 = (($42) - ($52))|0;
    $$0$i = $53;
    STACKTOP = sp;return ($$0$i|0);
   }
   else if ((label|0) == 27) {
    $56 = $frm;
    $57 = (($42) - ($56))|0;
    $$0$i = $57;
    STACKTOP = sp;return ($$0$i|0);
   }
   else if ((label|0) == 29) {
    $60 = $frm;
    $61 = (($42) - ($60))|0;
    $$0$i = $61;
    STACKTOP = sp;return ($$0$i|0);
   }
  } else {
   $frm_nxt$1$lcssa$i = $frm;
  }
 } while(0);
 $77 = $frm_nxt$1$lcssa$i;
 $78 = $frm;
 $79 = (($77) - ($78))|0;
 $$0$i = $79;
 STACKTOP = sp;return ($$0$i|0);
}
function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return 4;
}
function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((40800 + 8|0));
 $0 = (($this) + 12|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  _free($this);
  STACKTOP = sp;return;
 }
 $4 = (($this) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 _free($5);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((40800 + 8|0));
 $0 = (($this) + 12|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  STACKTOP = sp;return;
 }
 $4 = (($this) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 _free($5);
 STACKTOP = sp;return;
}
function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((40840 + 8|0));
 $0 = (($this) + 16|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  _free($this);
  STACKTOP = sp;return;
 }
 $4 = (($this) + 24|0);
 $5 = HEAP32[$4>>2]|0;
 _free($5);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((40840 + 8|0));
 $0 = (($this) + 16|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  STACKTOP = sp;return;
 }
 $4 = (($this) + 24|0);
 $5 = HEAP32[$4>>2]|0;
 _free($5);
 STACKTOP = sp;return;
}
function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP8[$0>>0]|0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 9|0);
 $1 = HEAP8[$0>>0]|0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($1|0);
}
function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($agg$result,$0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 16|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_($agg$result,$0);
 STACKTOP = sp;return;
}
function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0] = 8;
 $0 = (($agg$result) + 1|0);
 HEAP8[$0>>0]=1702195828&255;HEAP8[$0+1>>0]=(1702195828>>8)&255;HEAP8[$0+2>>0]=(1702195828>>16)&255;HEAP8[$0+3>>0]=1702195828>>24;
 $1 = (($agg$result) + 5|0);
 HEAP8[$1>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0$i = 40880;
 while(1) {
  $0 = HEAP32[$$0$i>>2]|0;
  $1 = ($0|0)==(0);
  $2 = (($$0$i) + 4|0);
  if ($1) {
   break;
  } else {
   $$0$i = $2;
  }
 }
 $3 = $$0$i;
 $4 = (($3) - (40880))|0;
 $5 = $4 >> 2;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,40880,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP8[$agg$result>>0] = 10;
 $0 = (($agg$result) + 1|0);
 ;HEAP8[$0+0>>0]=HEAP8[50344+0>>0]|0;HEAP8[$0+1>>0]=HEAP8[50344+1>>0]|0;HEAP8[$0+2>>0]=HEAP8[50344+2>>0]|0;HEAP8[$0+3>>0]=HEAP8[50344+3>>0]|0;HEAP8[$0+4>>0]=HEAP8[50344+4>>0]|0;
 $1 = (($agg$result) + 6|0);
 HEAP8[$1>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0$i = 40904;
 while(1) {
  $0 = HEAP32[$$0$i>>2]|0;
  $1 = ($0|0)==(0);
  $2 = (($$0$i) + 4|0);
  if ($1) {
   break;
  } else {
   $$0$i = $2;
  }
 }
 $3 = $$0$i;
 $4 = (($3) - (40904))|0;
 $5 = $4 >> 2;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result,40904,$5);
 STACKTOP = sp;return;
}
function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[40936>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  $8 = HEAP32[40928>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 $2 = (___cxa_guard_acquire((40936|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $8 = HEAP32[40928>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 $4 = HEAP8[48104>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $6 = (___cxa_guard_acquire((48104|0))|0);
  $7 = ($6|0)==(0);
  if (!($7)) {
   _memset((47936|0),0,168)|0;
   (___cxa_atexit((141|0),(0|0),(___dso_handle|0))|0);
   ___cxa_guard_release((48104|0));
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(47936,48112);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((47936 + 12|0)),48120);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((47936 + 24|0)),48128);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((47936 + 36|0)),48136);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((47936 + 48|0)),48152);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((47936 + 60|0)),48168);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((47936 + 72|0)),48176);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((47936 + 84|0)),48192);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((47936 + 96|0)),48200);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((47936 + 108|0)),48208);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((47936 + 120|0)),48216);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((47936 + 132|0)),48224);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((47936 + 144|0)),48232);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((47936 + 156|0)),48240);
 HEAP32[40928>>2] = 47936;
 ___cxa_guard_release((40936|0));
 $8 = HEAP32[40928>>2]|0;
 STACKTOP = sp;return ($8|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[40952>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  $8 = HEAP32[40944>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 $2 = (___cxa_guard_acquire((40952|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $8 = HEAP32[40944>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 $4 = HEAP8[47568>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $6 = (___cxa_guard_acquire((47568|0))|0);
  $7 = ($6|0)==(0);
  if (!($7)) {
   _memset((47400|0),0,168)|0;
   (___cxa_atexit((142|0),(0|0),(___dso_handle|0))|0);
   ___cxa_guard_release((47568|0));
  }
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(47400,47576);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((47400 + 12|0)),47608);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((47400 + 24|0)),47640);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((47400 + 36|0)),47672);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((47400 + 48|0)),47712);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((47400 + 60|0)),47752);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((47400 + 72|0)),47784);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((47400 + 84|0)),47824);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((47400 + 96|0)),47840);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((47400 + 108|0)),47856);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((47400 + 120|0)),47872);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((47400 + 132|0)),47888);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((47400 + 144|0)),47904);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((47400 + 156|0)),47920);
 HEAP32[40944>>2] = 47400;
 ___cxa_guard_release((40952|0));
 $8 = HEAP32[40944>>2]|0;
 STACKTOP = sp;return ($8|0);
}
function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[40968>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  $8 = HEAP32[40960>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 $2 = (___cxa_guard_acquire((40968|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $8 = HEAP32[40960>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 $4 = HEAP8[47176>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $6 = (___cxa_guard_acquire((47176|0))|0);
  $7 = ($6|0)==(0);
  if (!($7)) {
   _memset((46888|0),0,288)|0;
   (___cxa_atexit((143|0),(0|0),(___dso_handle|0))|0);
   ___cxa_guard_release((47176|0));
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(46888,47184);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 12|0)),47192);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 24|0)),47208);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 36|0)),47216);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 48|0)),47224);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 60|0)),47232);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 72|0)),47240);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 84|0)),47248);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 96|0)),47256);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 108|0)),47272);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 120|0)),47280);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 132|0)),47296);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 144|0)),47312);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 156|0)),47320);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 168|0)),47328);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 180|0)),47336);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 192|0)),47224);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 204|0)),47344);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 216|0)),47352);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 228|0)),47360);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 240|0)),47368);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 252|0)),47376);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 264|0)),47384);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((46888 + 276|0)),47392);
 HEAP32[40960>>2] = 46888;
 ___cxa_guard_release((40968|0));
 $8 = HEAP32[40960>>2]|0;
 STACKTOP = sp;return ($8|0);
}
function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[40984>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  $8 = HEAP32[40976>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 $2 = (___cxa_guard_acquire((40984|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $8 = HEAP32[40976>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 $4 = HEAP8[46336>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $6 = (___cxa_guard_acquire((46336|0))|0);
  $7 = ($6|0)==(0);
  if (!($7)) {
   _memset((46048|0),0,288)|0;
   (___cxa_atexit((144|0),(0|0),(___dso_handle|0))|0);
   ___cxa_guard_release((46336|0));
  }
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(46048,46344);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 12|0)),46376);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 24|0)),46416);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 36|0)),46440);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 48|0)),46760);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 60|0)),46464);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 72|0)),46488);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 84|0)),46512);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 96|0)),46544);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 108|0)),46584);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 120|0)),46616);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 132|0)),46656);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 144|0)),46696);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 156|0)),46712);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 168|0)),46728);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 180|0)),46744);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 192|0)),46760);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 204|0)),46776);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 216|0)),46792);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 228|0)),46808);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 240|0)),46824);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 252|0)),46840);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 264|0)),46856);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((46048 + 276|0)),46872);
 HEAP32[40976>>2] = 46048;
 ___cxa_guard_release((40984|0));
 $8 = HEAP32[40976>>2]|0;
 STACKTOP = sp;return ($8|0);
}
function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[41000>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  $8 = HEAP32[40992>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 $2 = (___cxa_guard_acquire((41000|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $8 = HEAP32[40992>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 $4 = HEAP8[46024>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $6 = (___cxa_guard_acquire((46024|0))|0);
  $7 = ($6|0)==(0);
  if (!($7)) {
   _memset((45736|0),0,288)|0;
   (___cxa_atexit((145|0),(0|0),(___dso_handle|0))|0);
   ___cxa_guard_release((46024|0));
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(45736,46032);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(((45736 + 12|0)),46040);
 HEAP32[40992>>2] = 45736;
 ___cxa_guard_release((41000|0));
 $8 = HEAP32[40992>>2]|0;
 STACKTOP = sp;return ($8|0);
}
function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[41016>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  $8 = HEAP32[41008>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 $2 = (___cxa_guard_acquire((41016|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $8 = HEAP32[41008>>2]|0;
  STACKTOP = sp;return ($8|0);
 }
 $4 = HEAP8[45696>>0]|0;
 $5 = ($4<<24>>24)==(0);
 if ($5) {
  $6 = (___cxa_guard_acquire((45696|0))|0);
  $7 = ($6|0)==(0);
  if (!($7)) {
   _memset((45408|0),0,288)|0;
   (___cxa_atexit((146|0),(0|0),(___dso_handle|0))|0);
   ___cxa_guard_release((45696|0));
  }
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(45408,45704);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(((45408 + 12|0)),45720);
 HEAP32[41008>>2] = 45408;
 ___cxa_guard_release((41016|0));
 $8 = HEAP32[41008>>2]|0;
 STACKTOP = sp;return ($8|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[41040>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  STACKTOP = sp;return (41024|0);
 }
 $2 = (___cxa_guard_acquire((41040|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  STACKTOP = sp;return (41024|0);
 }
 HEAP8[41024>>0] = 16;
 $4 = ((41024 + 1|0));
 $5 = $4;
 HEAP8[$5>>0]=623865125&255;HEAP8[$5+1>>0]=(623865125>>8)&255;HEAP8[$5+2>>0]=(623865125>>16)&255;HEAP8[$5+3>>0]=623865125>>24;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP8[$7>>0]=2032480100&255;HEAP8[$7+1>>0]=(2032480100>>8)&255;HEAP8[$7+2>>0]=(2032480100>>16)&255;HEAP8[$7+3>>0]=2032480100>>24;
 HEAP8[((41024 + 9|0))>>0] = 0;
 (___cxa_atexit((147|0),(41024|0),(___dso_handle|0))|0);
 ___cxa_guard_release((41040|0));
 STACKTOP = sp;return (41024|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[41064>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  STACKTOP = sp;return (41048|0);
 }
 $2 = (___cxa_guard_acquire((41064|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  STACKTOP = sp;return (41048|0);
 } else {
  $$0$i = 41072;
 }
 while(1) {
  $4 = HEAP32[$$0$i>>2]|0;
  $5 = ($4|0)==(0);
  $6 = (($$0$i) + 4|0);
  if ($5) {
   break;
  } else {
   $$0$i = $6;
  }
 }
 $7 = $$0$i;
 $8 = (($7) - (41072))|0;
 $9 = $8 >> 2;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(41048,41072,$9);
 (___cxa_atexit((148|0),(41048|0),(___dso_handle|0))|0);
 ___cxa_guard_release((41064|0));
 STACKTOP = sp;return (41048|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[41128>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  STACKTOP = sp;return (41112|0);
 }
 $2 = (___cxa_guard_acquire((41128|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  STACKTOP = sp;return (41112|0);
 }
 HEAP8[41112>>0] = 16;
 $4 = ((41112 + 1|0));
 $5 = $4;
 HEAP8[$5>>0]=624576549&255;HEAP8[$5+1>>0]=(624576549>>8)&255;HEAP8[$5+2>>0]=(624576549>>16)&255;HEAP8[$5+3>>0]=624576549>>24;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP8[$7>>0]=1394948685&255;HEAP8[$7+1>>0]=(1394948685>>8)&255;HEAP8[$7+2>>0]=(1394948685>>16)&255;HEAP8[$7+3>>0]=1394948685>>24;
 HEAP8[((41112 + 9|0))>>0] = 0;
 (___cxa_atexit((147|0),(41112|0),(___dso_handle|0))|0);
 ___cxa_guard_release((41128|0));
 STACKTOP = sp;return (41112|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[41152>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  STACKTOP = sp;return (41136|0);
 }
 $2 = (___cxa_guard_acquire((41152|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  STACKTOP = sp;return (41136|0);
 } else {
  $$0$i = 41160;
 }
 while(1) {
  $4 = HEAP32[$$0$i>>2]|0;
  $5 = ($4|0)==(0);
  $6 = (($$0$i) + 4|0);
  if ($5) {
   break;
  } else {
   $$0$i = $6;
  }
 }
 $7 = $$0$i;
 $8 = (($7) - (41160))|0;
 $9 = $8 >> 2;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(41136,41160,$9);
 (___cxa_atexit((148|0),(41136|0),(___dso_handle|0))|0);
 ___cxa_guard_release((41152|0));
 STACKTOP = sp;return (41136|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $0 = HEAP8[41216>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  STACKTOP = sp;return (41200|0);
 }
 $2 = (___cxa_guard_acquire((41216|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  STACKTOP = sp;return (41200|0);
 }
 $4 = (__Znwj(32)|0);
 HEAP32[((41200 + 8|0))>>2] = $4;
 HEAP32[41200>>2] = 33;
 HEAP32[((41200 + 4|0))>>2] = 20;
 dest=$4+0|0; src=41224+0|0; stop=dest+20|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $5 = (($4) + 20|0);
 HEAP8[$5>>0] = 0;
 (___cxa_atexit((147|0),(41200|0),(___dso_handle|0))|0);
 ___cxa_guard_release((41216|0));
 STACKTOP = sp;return (41200|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[41264>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  STACKTOP = sp;return (41248|0);
 }
 $2 = (___cxa_guard_acquire((41264|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  STACKTOP = sp;return (41248|0);
 } else {
  $$0$i = 41272;
 }
 while(1) {
  $4 = HEAP32[$$0$i>>2]|0;
  $5 = ($4|0)==(0);
  $6 = (($$0$i) + 4|0);
  if ($5) {
   break;
  } else {
   $$0$i = $6;
  }
 }
 $7 = $$0$i;
 $8 = (($7) - (41272))|0;
 $9 = $8 >> 2;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(41248,41272,$9);
 (___cxa_atexit((148|0),(41248|0),(___dso_handle|0))|0);
 ___cxa_guard_release((41264|0));
 STACKTOP = sp;return (41248|0);
}
function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $0 = HEAP8[41376>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  STACKTOP = sp;return (41360|0);
 }
 $2 = (___cxa_guard_acquire((41376|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  STACKTOP = sp;return (41360|0);
 }
 $4 = (__Znwj(16)|0);
 HEAP32[((41360 + 8|0))>>2] = $4;
 HEAP32[41360>>2] = 17;
 HEAP32[((41360 + 4|0))>>2] = 11;
 dest=$4+0|0; src=41384+0|0; stop=dest+11|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $5 = (($4) + 11|0);
 HEAP8[$5>>0] = 0;
 (___cxa_atexit((147|0),(41360|0),(___dso_handle|0))|0);
 ___cxa_guard_release((41376|0));
 STACKTOP = sp;return (41360|0);
}
function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[41416>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if (!($1)) {
  STACKTOP = sp;return (41400|0);
 }
 $2 = (___cxa_guard_acquire((41416|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  STACKTOP = sp;return (41400|0);
 } else {
  $$0$i = 41424;
 }
 while(1) {
  $4 = HEAP32[$$0$i>>2]|0;
  $5 = ($4|0)==(0);
  $6 = (($$0$i) + 4|0);
  if ($5) {
   break;
  } else {
   $$0$i = $6;
  }
 }
 $7 = $$0$i;
 $8 = (($7) - (41424))|0;
 $9 = $8 >> 2;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(41400,41424,$9);
 (___cxa_atexit((148|0),(41400|0),(___dso_handle|0))|0);
 ___cxa_guard_release((41416|0));
 STACKTOP = sp;return (41400|0);
}
function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((40720 + 8|0));
 $0 = (($this) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (__ZNSt3__16__clocEv()|0);
 $3 = ($1|0)==($2|0);
 if ($3) {
  STACKTOP = sp;return;
 }
 $4 = HEAP32[$0>>2]|0;
 _freelocale(($4|0));
 STACKTOP = sp;return;
}
function __GLOBAL__I_a199() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt3__18ios_base4InitC2Ev();
 (___cxa_atexit((149|0),(36808|0),(___dso_handle|0))|0);
 STACKTOP = sp;return;
}
function __ZNSt3__111__stdoutbufIwED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((37968 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  _free($this);
  STACKTOP = sp;return;
 }
 $5 = HEAP32[$1>>2]|0;
 $6 = (($5) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vi[$7 & 255]($1);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE($this,$__loc) {
 $this = $this|0;
 $__loc = $__loc|0;
 var $$idx = 0, $$idx$val = 0, $$idx1 = 0, $$idx1$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 (FUNCTION_TABLE_ii[$2 & 127]($this)|0);
 $3 = HEAP32[$__loc>>2]|0;
 $4 = (__ZNSt3__16locale2id5__getEv(40712)|0);
 $$idx = (($3) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx1 = (($3) + 12|0);
 $$idx1$val = HEAP32[$$idx1>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx1$val,$4)|0);
 $6 = (($this) + 36|0);
 HEAP32[$6>>2] = $5;
 $7 = HEAP32[$5>>2]|0;
 $8 = (($7) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (FUNCTION_TABLE_ii[$9 & 127]($5)|0);
 $11 = (($this) + 44|0);
 $12 = $10&1;
 HEAP8[$11>>0] = $12;
 STACKTOP = sp;return;
}
function __ZNSt3__111__stdoutbufIwE4syncEv($this) {
 $this = $this|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__extbe = 0, $__extbuf = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__extbuf = sp + 8|0;
 $__extbe = sp;
 $0 = (($this) + 36|0);
 $1 = (($this) + 40|0);
 $2 = (($__extbuf) + 8|0);
 $3 = $__extbuf;
 $4 = (($this) + 32|0);
 while(1) {
  $5 = HEAP32[$0>>2]|0;
  $6 = HEAP32[$1>>2]|0;
  $7 = HEAP32[$5>>2]|0;
  $8 = (($7) + 20|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iiiiii[$9 & 15]($5,$6,$__extbuf,$2,$__extbe)|0);
  $11 = HEAP32[$__extbe>>2]|0;
  $12 = $11;
  $13 = (($12) - ($3))|0;
  $14 = HEAP32[$4>>2]|0;
  $15 = (_fwrite(($__extbuf|0),1,($13|0),($14|0))|0);
  $16 = ($15|0)==($13|0);
  if (!($16)) {
   $$0 = -1;
   label = 5;
   break;
  }
  if ((($10|0) == 2)) {
   $$0 = -1;
   label = 5;
   break;
  } else if (!((($10|0) == 1))) {
   label = 4;
   break;
  }
 }
 if ((label|0) == 4) {
  $17 = HEAP32[$4>>2]|0;
  $18 = (_fflush(($17|0))|0);
  $not$ = ($18|0)!=(0);
  $$ = $not$ << 31 >> 31;
  $$0 = $$;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 5) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__111__stdoutbufIwE6xsputnEPKwi($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $$012 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$03 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 44|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $4 = (($this) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (_fwrite(($__s|0),4,($__n|0),($5|0))|0);
  $$0 = $6;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = ($__n|0)>(0);
 if ($3) {
  $$012 = $__s;$__i$03 = 0;
 } else {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 while(1) {
  $7 = HEAP32[$this>>2]|0;
  $8 = (($7) + 52|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = HEAP32[$$012>>2]|0;
  $11 = (FUNCTION_TABLE_iii[$9 & 63]($this,$10)|0);
  $12 = ($11|0)==(-1);
  if ($12) {
   $$0 = $__i$03;
   label = 6;
   break;
  }
  $13 = (($__i$03) + 1)|0;
  $14 = (($$012) + 4|0);
  $15 = ($13|0)<($__n|0);
  if ($15) {
   $$012 = $14;$__i$03 = $13;
  } else {
   $$0 = $13;
   label = 6;
   break;
  }
 }
 if ((label|0) == 6) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__111__stdoutbufIwE8overflowEj($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $$__c$i = 0, $$pbase$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__e = 0;
 var $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__extbuf = sp + 16|0;
 $__1buf = sp + 8|0;
 $__extbe = sp + 4|0;
 $__e = sp;
 $0 = ($__c|0)==(-1);
 L1: do {
  if (!($0)) {
   HEAP32[$__1buf>>2] = $__c;
   $1 = (($this) + 44|0);
   $2 = HEAP8[$1>>0]|0;
   $3 = ($2<<24>>24)==(0);
   if (!($3)) {
    $4 = (($this) + 32|0);
    $5 = HEAP32[$4>>2]|0;
    $6 = (_fwrite(($__1buf|0),4,1,($5|0))|0);
    $7 = ($6|0)==(1);
    if ($7) {
     break;
    } else {
     $$0 = -1;
    }
    STACKTOP = sp;return ($$0|0);
   }
   HEAP32[$__extbe>>2] = $__extbuf;
   $8 = (($__1buf) + 4|0);
   $9 = (($this) + 36|0);
   $10 = (($this) + 40|0);
   $11 = (($__extbuf) + 8|0);
   $12 = $__extbuf;
   $13 = (($this) + 32|0);
   $pbase$0 = $__1buf;
   while(1) {
    $14 = HEAP32[$9>>2]|0;
    $15 = HEAP32[$10>>2]|0;
    $16 = HEAP32[$14>>2]|0;
    $17 = (($16) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = (FUNCTION_TABLE_iiiiiiiii[$18 & 15]($14,$15,$pbase$0,$8,$__e,$__extbuf,$11,$__extbe)|0);
    $20 = HEAP32[$__e>>2]|0;
    $21 = ($20|0)==($pbase$0|0);
    if ($21) {
     $$0 = -1;
     label = 12;
     break;
    }
    $22 = ($19|0)==(3);
    if ($22) {
     label = 7;
     break;
    }
    $26 = ($19|0)==(1);
    $27 = ($19>>>0)<(2);
    if (!($27)) {
     $$0 = -1;
     label = 12;
     break;
    }
    $28 = HEAP32[$__extbe>>2]|0;
    $29 = $28;
    $30 = (($29) - ($12))|0;
    $31 = HEAP32[$13>>2]|0;
    $32 = (_fwrite(($__extbuf|0),1,($30|0),($31|0))|0);
    $33 = ($32|0)==($30|0);
    if (!($33)) {
     $$0 = -1;
     label = 12;
     break;
    }
    $34 = HEAP32[$__e>>2]|0;
    $$pbase$0 = $26 ? $34 : $pbase$0;
    if ($26) {
     $pbase$0 = $$pbase$0;
    } else {
     break L1;
    }
   }
   if ((label|0) == 7) {
    $23 = HEAP32[$13>>2]|0;
    $24 = (_fwrite(($pbase$0|0),1,1,($23|0))|0);
    $25 = ($24|0)==(1);
    if ($25) {
     break;
    } else {
     $$0 = -1;
    }
    STACKTOP = sp;return ($$0|0);
   }
   else if ((label|0) == 12) {
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 $$__c$i = $0 ? 0 : $__c;
 $$0 = $$__c$i;
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__110__stdinbufIwED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((37968 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  _free($this);
  STACKTOP = sp;return;
 }
 $5 = HEAP32[$1>>2]|0;
 $6 = (($5) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vi[$7 & 255]($1);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE($this,$__loc) {
 $this = $this|0;
 $__loc = $__loc|0;
 var $$idx = 0, $$idx$val = 0, $$idx1 = 0, $$idx1$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__loc>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv(40712)|0);
 $$idx = (($0) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx1 = (($0) + 12|0);
 $$idx1$val = HEAP32[$$idx1>>2]|0;
 $2 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx1$val,$1)|0);
 $3 = (($this) + 36|0);
 HEAP32[$3>>2] = $2;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (FUNCTION_TABLE_ii[$6 & 127]($2)|0);
 $8 = (($this) + 44|0);
 HEAP32[$8>>2] = $7;
 $9 = HEAP32[$3>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = (($10) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 127]($9)|0);
 $14 = (($this) + 53|0);
 $15 = $13&1;
 HEAP8[$14>>0] = $15;
 $16 = HEAP32[$8>>2]|0;
 $17 = ($16|0)>(8);
 if ($17) {
  __ZNSt3__121__throw_runtime_errorEPKc(37384);
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__110__stdinbufIwE9underflowEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__110__stdinbufIwE9__getcharEb($this,0)|0);
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__110__stdinbufIwE5uflowEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__110__stdinbufIwE9__getcharEb($this,1)|0);
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__110__stdinbufIwE9pbackfailEj($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__extbuf = sp + 16|0;
 $__enxt = sp + 8|0;
 $__ci = sp + 4|0;
 $__inxt = sp;
 $0 = ($__c|0)==(-1);
 $1 = (($this) + 52|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)!=(0);
 if ($0) {
  if ($3) {
   $$01 = -1;
   STACKTOP = sp;return ($$01|0);
  }
  $4 = (($this) + 48|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)!=(-1);
  $7 = $6&1;
  HEAP8[$1>>0] = $7;
  $$01 = $5;
  STACKTOP = sp;return ($$01|0);
 }
 $8 = (($this) + 48|0);
 L8: do {
  if ($3) {
   $9 = HEAP32[$8>>2]|0;
   HEAP32[$__ci>>2] = $9;
   $10 = (($this) + 36|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = (($this) + 40|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = (($__ci) + 4|0);
   $15 = (($__extbuf) + 8|0);
   $16 = HEAP32[$11>>2]|0;
   $17 = (($16) + 12|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = (FUNCTION_TABLE_iiiiiiiii[$18 & 15]($11,$13,$__ci,$14,$__inxt,$__extbuf,$15,$__enxt)|0);
   if ((($19|0) == 3)) {
    $20 = HEAP32[$8>>2]|0;
    $21 = $20&255;
    HEAP8[$__extbuf>>0] = $21;
    $22 = (($__extbuf) + 1|0);
    HEAP32[$__enxt>>2] = $22;
   } else if ((($19|0) == 1) | (($19|0) == 2)) {
    $$01 = -1;
    STACKTOP = sp;return ($$01|0);
   }
   $23 = (($this) + 32|0);
   while(1) {
    $24 = HEAP32[$__enxt>>2]|0;
    $25 = ($24>>>0)>($__extbuf>>>0);
    if (!($25)) {
     break L8;
    }
    $26 = (($24) + -1|0);
    HEAP32[$__enxt>>2] = $26;
    $27 = HEAP8[$26>>0]|0;
    $28 = $27 << 24 >> 24;
    $29 = HEAP32[$23>>2]|0;
    $30 = (_ungetc(($28|0),($29|0))|0);
    $31 = ($30|0)==(-1);
    if ($31) {
     $$01 = -1;
     break;
    }
   }
   STACKTOP = sp;return ($$01|0);
  }
 } while(0);
 HEAP32[$8>>2] = $__c;
 HEAP8[$1>>0] = 1;
 $$01 = $__c;
 STACKTOP = sp;return ($$01|0);
}
function __ZNSt3__111__stdoutbufIcED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((37904 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  _free($this);
  STACKTOP = sp;return;
 }
 $5 = HEAP32[$1>>2]|0;
 $6 = (($5) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vi[$7 & 255]($1);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE($this,$__loc) {
 $this = $this|0;
 $__loc = $__loc|0;
 var $$idx = 0, $$idx$val = 0, $$idx1 = 0, $$idx1$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($0) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 (FUNCTION_TABLE_ii[$2 & 127]($this)|0);
 $3 = HEAP32[$__loc>>2]|0;
 $4 = (__ZNSt3__16locale2id5__getEv(40704)|0);
 $$idx = (($3) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx1 = (($3) + 12|0);
 $$idx1$val = HEAP32[$$idx1>>2]|0;
 $5 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx1$val,$4)|0);
 $6 = (($this) + 36|0);
 HEAP32[$6>>2] = $5;
 $7 = HEAP32[$5>>2]|0;
 $8 = (($7) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (FUNCTION_TABLE_ii[$9 & 127]($5)|0);
 $11 = (($this) + 44|0);
 $12 = $10&1;
 HEAP8[$11>>0] = $12;
 STACKTOP = sp;return;
}
function __ZNSt3__111__stdoutbufIcE4syncEv($this) {
 $this = $this|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__extbe = 0, $__extbuf = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__extbuf = sp + 8|0;
 $__extbe = sp;
 $0 = (($this) + 36|0);
 $1 = (($this) + 40|0);
 $2 = (($__extbuf) + 8|0);
 $3 = $__extbuf;
 $4 = (($this) + 32|0);
 while(1) {
  $5 = HEAP32[$0>>2]|0;
  $6 = HEAP32[$1>>2]|0;
  $7 = HEAP32[$5>>2]|0;
  $8 = (($7) + 20|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (FUNCTION_TABLE_iiiiii[$9 & 15]($5,$6,$__extbuf,$2,$__extbe)|0);
  $11 = HEAP32[$__extbe>>2]|0;
  $12 = $11;
  $13 = (($12) - ($3))|0;
  $14 = HEAP32[$4>>2]|0;
  $15 = (_fwrite(($__extbuf|0),1,($13|0),($14|0))|0);
  $16 = ($15|0)==($13|0);
  if (!($16)) {
   $$0 = -1;
   label = 5;
   break;
  }
  if ((($10|0) == 2)) {
   $$0 = -1;
   label = 5;
   break;
  } else if (!((($10|0) == 1))) {
   label = 4;
   break;
  }
 }
 if ((label|0) == 4) {
  $17 = HEAP32[$4>>2]|0;
  $18 = (_fflush(($17|0))|0);
  $not$ = ($18|0)!=(0);
  $$ = $not$ << 31 >> 31;
  $$0 = $$;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 5) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__111__stdoutbufIcE6xsputnEPKci($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $$012 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__i$03 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 44|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $4 = (($this) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (_fwrite(($__s|0),1,($__n|0),($5|0))|0);
  $$0 = $6;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = ($__n|0)>(0);
 if ($3) {
  $$012 = $__s;$__i$03 = 0;
 } else {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 while(1) {
  $7 = HEAP32[$this>>2]|0;
  $8 = (($7) + 52|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = HEAP8[$$012>>0]|0;
  $11 = $10&255;
  $12 = (FUNCTION_TABLE_iii[$9 & 63]($this,$11)|0);
  $13 = ($12|0)==(-1);
  if ($13) {
   $$0 = $__i$03;
   label = 6;
   break;
  }
  $14 = (($__i$03) + 1)|0;
  $15 = (($$012) + 1|0);
  $16 = ($14|0)<($__n|0);
  if ($16) {
   $$012 = $15;$__i$03 = $14;
  } else {
   $$0 = $14;
   label = 6;
   break;
  }
 }
 if ((label|0) == 6) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__111__stdoutbufIcE8overflowEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$0 = 0, $$__c$i = 0, $$pbase$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__1buf = 0;
 var $__e = 0, $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__extbuf = sp + 16|0;
 $__1buf = sp + 8|0;
 $__extbe = sp + 4|0;
 $__e = sp;
 $0 = ($__c|0)==(-1);
 L1: do {
  if (!($0)) {
   $1 = $__c&255;
   HEAP8[$__1buf>>0] = $1;
   $2 = (($this) + 44|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==(0);
   if (!($4)) {
    $5 = (($this) + 32|0);
    $6 = HEAP32[$5>>2]|0;
    $7 = (_fwrite(($__1buf|0),1,1,($6|0))|0);
    $8 = ($7|0)==(1);
    if ($8) {
     break;
    } else {
     $$0 = -1;
    }
    STACKTOP = sp;return ($$0|0);
   }
   HEAP32[$__extbe>>2] = $__extbuf;
   $9 = (($__1buf) + 1|0);
   $10 = (($this) + 36|0);
   $11 = (($this) + 40|0);
   $12 = (($__extbuf) + 8|0);
   $13 = $__extbuf;
   $14 = (($this) + 32|0);
   $pbase$0 = $__1buf;
   while(1) {
    $15 = HEAP32[$10>>2]|0;
    $16 = HEAP32[$11>>2]|0;
    $17 = HEAP32[$15>>2]|0;
    $18 = (($17) + 12|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = (FUNCTION_TABLE_iiiiiiiii[$19 & 15]($15,$16,$pbase$0,$9,$__e,$__extbuf,$12,$__extbe)|0);
    $21 = HEAP32[$__e>>2]|0;
    $22 = ($21|0)==($pbase$0|0);
    if ($22) {
     $$0 = -1;
     label = 12;
     break;
    }
    $23 = ($20|0)==(3);
    if ($23) {
     label = 7;
     break;
    }
    $27 = ($20|0)==(1);
    $28 = ($20>>>0)<(2);
    if (!($28)) {
     $$0 = -1;
     label = 12;
     break;
    }
    $29 = HEAP32[$__extbe>>2]|0;
    $30 = $29;
    $31 = (($30) - ($13))|0;
    $32 = HEAP32[$14>>2]|0;
    $33 = (_fwrite(($__extbuf|0),1,($31|0),($32|0))|0);
    $34 = ($33|0)==($31|0);
    if (!($34)) {
     $$0 = -1;
     label = 12;
     break;
    }
    $35 = HEAP32[$__e>>2]|0;
    $$pbase$0 = $27 ? $35 : $pbase$0;
    if ($27) {
     $pbase$0 = $$pbase$0;
    } else {
     break L1;
    }
   }
   if ((label|0) == 7) {
    $24 = HEAP32[$14>>2]|0;
    $25 = (_fwrite(($pbase$0|0),1,1,($24|0))|0);
    $26 = ($25|0)==(1);
    if ($26) {
     break;
    } else {
     $$0 = -1;
    }
    STACKTOP = sp;return ($$0|0);
   }
   else if ((label|0) == 12) {
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 $$__c$i = $0 ? 0 : $__c;
 $$0 = $$__c$i;
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__110__stdinbufIcED0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((37904 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  _free($this);
  STACKTOP = sp;return;
 }
 $5 = HEAP32[$1>>2]|0;
 $6 = (($5) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 FUNCTION_TABLE_vi[$7 & 255]($1);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE($this,$__loc) {
 $this = $this|0;
 $__loc = $__loc|0;
 var $$idx = 0, $$idx$val = 0, $$idx1 = 0, $$idx1$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__loc>>2]|0;
 $1 = (__ZNSt3__16locale2id5__getEv(40704)|0);
 $$idx = (($0) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx1 = (($0) + 12|0);
 $$idx1$val = HEAP32[$$idx1>>2]|0;
 $2 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx1$val,$1)|0);
 $3 = (($this) + 36|0);
 HEAP32[$3>>2] = $2;
 $4 = HEAP32[$2>>2]|0;
 $5 = (($4) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (FUNCTION_TABLE_ii[$6 & 127]($2)|0);
 $8 = (($this) + 44|0);
 HEAP32[$8>>2] = $7;
 $9 = HEAP32[$3>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = (($10) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (FUNCTION_TABLE_ii[$12 & 127]($9)|0);
 $14 = (($this) + 53|0);
 $15 = $13&1;
 HEAP8[$14>>0] = $15;
 $16 = HEAP32[$8>>2]|0;
 $17 = ($16|0)>(8);
 if ($17) {
  __ZNSt3__121__throw_runtime_errorEPKc(37384);
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZNSt3__110__stdinbufIcE9underflowEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__110__stdinbufIcE9__getcharEb($this,0)|0);
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__110__stdinbufIcE5uflowEv($this) {
 $this = $this|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (__ZNSt3__110__stdinbufIcE9__getcharEb($this,1)|0);
 STACKTOP = sp;return ($0|0);
}
function __ZNSt3__110__stdinbufIcE9pbackfailEi($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__extbuf = sp + 16|0;
 $__enxt = sp + 4|0;
 $__ci = sp + 8|0;
 $__inxt = sp;
 $0 = ($__c|0)==(-1);
 $1 = (($this) + 52|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = ($2<<24>>24)!=(0);
 if ($0) {
  if ($3) {
   $$01 = -1;
   STACKTOP = sp;return ($$01|0);
  }
  $4 = (($this) + 48|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)!=(-1);
  $7 = $6&1;
  HEAP8[$1>>0] = $7;
  $$01 = $5;
  STACKTOP = sp;return ($$01|0);
 }
 $8 = (($this) + 48|0);
 L8: do {
  if ($3) {
   $9 = HEAP32[$8>>2]|0;
   $10 = $9&255;
   HEAP8[$__ci>>0] = $10;
   $11 = (($this) + 36|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = (($this) + 40|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = (($__ci) + 1|0);
   $16 = (($__extbuf) + 8|0);
   $17 = HEAP32[$12>>2]|0;
   $18 = (($17) + 12|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = (FUNCTION_TABLE_iiiiiiiii[$19 & 15]($12,$14,$__ci,$15,$__inxt,$__extbuf,$16,$__enxt)|0);
   if ((($20|0) == 3)) {
    $21 = HEAP32[$8>>2]|0;
    $22 = $21&255;
    HEAP8[$__extbuf>>0] = $22;
    $23 = (($__extbuf) + 1|0);
    HEAP32[$__enxt>>2] = $23;
   } else if ((($20|0) == 1) | (($20|0) == 2)) {
    $$01 = -1;
    STACKTOP = sp;return ($$01|0);
   }
   $24 = (($this) + 32|0);
   while(1) {
    $25 = HEAP32[$__enxt>>2]|0;
    $26 = ($25>>>0)>($__extbuf>>>0);
    if (!($26)) {
     break L8;
    }
    $27 = (($25) + -1|0);
    HEAP32[$__enxt>>2] = $27;
    $28 = HEAP8[$27>>0]|0;
    $29 = $28 << 24 >> 24;
    $30 = HEAP32[$24>>2]|0;
    $31 = (_ungetc(($29|0),($30|0))|0);
    $32 = ($31|0)==(-1);
    if ($32) {
     $$01 = -1;
     break;
    }
   }
   STACKTOP = sp;return ($$01|0);
  }
 } while(0);
 HEAP32[$8>>2] = $__c;
 HEAP8[$1>>0] = 1;
 $$01 = $__c;
 STACKTOP = sp;return ($$01|0);
}
function __ZNSt3__119__iostream_categoryD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t($this,$__fp,$__st) {
 $this = $this|0;
 $__fp = $__fp|0;
 $__st = $__st|0;
 var $$idx = 0, $$idx$val = 0, $$idx3 = 0, $$idx3$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((37904 + 8|0));
 $0 = (($this) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = (($this) + 8|0);
 ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 HEAP32[$this>>2] = ((37424 + 8|0));
 $2 = (($this) + 32|0);
 HEAP32[$2>>2] = $__fp;
 $3 = (($this) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 4|0);
 $6 = HEAP32[$5>>2]|0;HEAP32[$5>>2] = (($6+1)|0);
 $7 = (__ZNSt3__16locale2id5__getEv(40704)|0);
 $$idx = (($4) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx3 = (($4) + 12|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $8 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx3$val,$7)|0);
 $9 = (($this) + 36|0);
 $10 = HEAP32[$5>>2]|0;HEAP32[$5>>2] = (($10+-1)|0);
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = HEAP32[$4>>2]|0;
  $13 = (($12) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  FUNCTION_TABLE_vi[$14 & 255]($4);
 }
 HEAP32[$9>>2] = $8;
 $15 = (($this) + 40|0);
 HEAP32[$15>>2] = $__st;
 $16 = (($this) + 44|0);
 $17 = HEAP32[$8>>2]|0;
 $18 = (($17) + 28|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (FUNCTION_TABLE_ii[$19 & 127]($8)|0);
 $21 = $20&1;
 HEAP8[$16>>0] = $21;
 STACKTOP = sp;return;
}
function __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t($this,$__fp,$__st) {
 $this = $this|0;
 $__fp = $__fp|0;
 $__st = $__st|0;
 var $$idx = 0, $$idx$val = 0, $$idx3 = 0, $$idx3$val = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((37968 + 8|0));
 $0 = (($this) + 4|0);
 __ZNSt3__16localeC2Ev($0);
 $1 = (($this) + 8|0);
 ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;HEAP32[$1+12>>2]=0|0;HEAP32[$1+16>>2]=0|0;HEAP32[$1+20>>2]=0|0;
 HEAP32[$this>>2] = ((37168 + 8|0));
 $2 = (($this) + 32|0);
 HEAP32[$2>>2] = $__fp;
 $3 = (($this) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 4|0);
 $6 = HEAP32[$5>>2]|0;HEAP32[$5>>2] = (($6+1)|0);
 $7 = (__ZNSt3__16locale2id5__getEv(40712)|0);
 $$idx = (($4) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx3 = (($4) + 12|0);
 $$idx3$val = HEAP32[$$idx3>>2]|0;
 $8 = (__ZNKSt3__16locale5__imp9use_facetEl($$idx$val,$$idx3$val,$7)|0);
 $9 = (($this) + 36|0);
 $10 = HEAP32[$5>>2]|0;HEAP32[$5>>2] = (($10+-1)|0);
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = HEAP32[$4>>2]|0;
  $13 = (($12) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  FUNCTION_TABLE_vi[$14 & 255]($4);
 }
 HEAP32[$9>>2] = $8;
 $15 = (($this) + 40|0);
 HEAP32[$15>>2] = $__st;
 $16 = (($this) + 44|0);
 $17 = HEAP32[$8>>2]|0;
 $18 = (($17) + 28|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (FUNCTION_TABLE_ii[$19 & 127]($8)|0);
 $21 = $20&1;
 HEAP8[$16>>0] = $21;
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__p$0$lcssa = 0, $__p$0$ph = 0, $__p$01 = 0, $scevgep4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = ($2>>>0)>(4294967279);
 if ($3) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $4 = ($2>>>0)<(11);
 if ($4) {
  $5 = $2 << 1;
  $6 = $5&255;
  HEAP8[$this>>0] = $6;
  $7 = (($this) + 1|0);
  $__p$0$ph = $7;
 } else {
  $8 = (($2) + 16)|0;
  $9 = $8 & -16;
  $10 = (__Znwj($9)|0);
  $11 = (($this) + 8|0);
  HEAP32[$11>>2] = $10;
  $12 = $9 | 1;
  HEAP32[$this>>2] = $12;
  $13 = (($this) + 4|0);
  HEAP32[$13>>2] = $2;
  $__p$0$ph = $10;
 }
 $14 = ($__first|0)==($__last|0);
 if ($14) {
  $__p$0$lcssa = $__p$0$ph;
  HEAP8[$__p$0$lcssa>>0] = 0;
  STACKTOP = sp;return;
 } else {
  $$02 = $__first;$__p$01 = $__p$0$ph;
 }
 while(1) {
  $15 = HEAP8[$$02>>0]|0;
  HEAP8[$__p$01>>0] = $15;
  $16 = (($$02) + 1|0);
  $17 = (($__p$01) + 1|0);
  $18 = ($16|0)==($__last|0);
  if ($18) {
   break;
  } else {
   $$02 = $16;$__p$01 = $17;
  }
 }
 $scevgep4 = (($__p$0$ph) + ($2)|0);
 $__p$0$lcssa = $scevgep4;
 HEAP8[$__p$0$lcssa>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0$lcssa = 0, $__p$0$ph = 0, $__p$01 = 0, $scevgep = 0, $scevgep5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = $__last;
 $2 = (($1) - ($0))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)>(1073741807);
 if ($4) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $5 = ($3>>>0)<(2);
 if ($5) {
  $6 = $2 >>> 1;
  $7 = $6&255;
  HEAP8[$this>>0] = $7;
  $8 = (($this) + 4|0);
  $__p$0$ph = $8;
 } else {
  $9 = (($3) + 4)|0;
  $10 = $9 & -4;
  $11 = $10 << 2;
  $12 = (__Znwj($11)|0);
  $13 = (($this) + 8|0);
  HEAP32[$13>>2] = $12;
  $14 = $10 | 1;
  HEAP32[$this>>2] = $14;
  $15 = (($this) + 4|0);
  HEAP32[$15>>2] = $3;
  $__p$0$ph = $12;
 }
 $16 = ($__first|0)==($__last|0);
 if ($16) {
  $__p$0$lcssa = $__p$0$ph;
  HEAP32[$__p$0$lcssa>>2] = 0;
  STACKTOP = sp;return;
 }
 $scevgep = (($__last) + -4|0);
 $17 = $scevgep;
 $18 = (($17) - ($0))|0;
 $19 = $18 >>> 2;
 $20 = (($19) + 1)|0;
 $$02 = $__first;$__p$01 = $__p$0$ph;
 while(1) {
  $21 = HEAP32[$$02>>2]|0;
  HEAP32[$__p$01>>2] = $21;
  $22 = (($$02) + 4|0);
  $23 = (($__p$01) + 4|0);
  $24 = ($22|0)==($__last|0);
  if ($24) {
   break;
  } else {
   $$02 = $22;$__p$01 = $23;
  }
 }
 $scevgep5 = (($__p$0$ph) + ($20<<2)|0);
 $__p$0$lcssa = $scevgep5;
 HEAP32[$__p$0$lcssa>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e$0,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e$0 = $__e$0|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$0$i$i = 0, $$025 = 0, $$027 = 0, $$__e$sroa$0$0 = 0, $$__e$sroa$0$03 = 0, $$not = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i13 = 0, $$pre$i2$i$i17 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off036 = 0, $__consume$1$off0 = 0, $__e$sroa$0$0 = 0, $__e$sroa$0$0$ph = 0, $__e$sroa$0$1 = 0, $__indx$0 = 0, $__indx$0$ph = 0, $__kc$0 = 0, $__ky$063 = 0, $__ky1$037 = 0, $__ky2$048 = 0;
 var $__n_does_match$0$lcssa = 0, $__n_does_match$061 = 0, $__n_does_match$1 = 0, $__n_does_match$2$ph = 0, $__n_does_match$333 = 0, $__n_does_match$4 = 0, $__n_does_match$546 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$060 = 0, $__n_might_match$1 = 0, $__n_might_match$2$ph = 0, $__n_might_match$332 = 0, $__n_might_match$4 = 0, $__st$062 = 0, $__st$134 = 0, $__st$247 = 0, $__st$326 = 0, $__statbuf = 0, $__status$0 = 0;
 var $or$cond = 0, $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   $7 = (___cxa_allocate_exception(4)|0);
   HEAP32[$7>>2] = ((51368 + 8|0));
   ___cxa_throw(($7|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $157 = $5;$__status$0 = $5;
  }
 } else {
  $157 = 0;$__status$0 = $__statbuf;
 }
 $8 = ($__kb|0)==($__ke|0);
 if ($8) {
  $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
 } else {
  $__ky$063 = $__kb;$__n_does_match$061 = 0;$__n_might_match$060 = $3;$__st$062 = $__status$0;
  while(1) {
   $9 = HEAP8[$__ky$063>>0]|0;
   $10 = $9 & 1;
   $11 = ($10<<24>>24)==(0);
   if ($11) {
    $14 = $9&255;
    $15 = $14 >>> 1;
    $17 = $15;
   } else {
    $12 = (($__ky$063) + 4|0);
    $13 = HEAP32[$12>>2]|0;
    $17 = $13;
   }
   $16 = ($17|0)==(0);
   if ($16) {
    HEAP8[$__st$062>>0] = 2;
    $18 = (($__n_might_match$060) + -1)|0;
    $19 = (($__n_does_match$061) + 1)|0;
    $__n_does_match$1 = $19;$__n_might_match$1 = $18;
   } else {
    HEAP8[$__st$062>>0] = 1;
    $__n_does_match$1 = $__n_does_match$061;$__n_might_match$1 = $__n_might_match$060;
   }
   $20 = (($__ky$063) + 12|0);
   $21 = (($__st$062) + 1|0);
   $22 = ($20|0)==($__ke|0);
   if ($22) {
    $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__ky$063 = $20;$__n_does_match$061 = $__n_does_match$1;$__n_might_match$060 = $__n_might_match$1;$__st$062 = $21;
   }
  }
 }
 $__e$sroa$0$0$ph = $__e$0;$__indx$0$ph = 0;$__n_does_match$2$ph = $__n_does_match$0$lcssa;$__n_might_match$2$ph = $__n_might_match$0$lcssa;
 L17: while(1) {
  $23 = ($__n_might_match$2$ph|0)!=(0);
  $__e$sroa$0$0 = $__e$sroa$0$0$ph;$__indx$0 = $__indx$0$ph;
  while(1) {
   $24 = HEAP32[$__b>>2]|0;
   $25 = ($24|0)==(0|0);
   do {
    if ($25) {
     $37 = 0;
    } else {
     $26 = (($24) + 12|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (($24) + 16|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = ($27|0)==($29|0);
     if ($30) {
      $31 = HEAP32[$24>>2]|0;
      $32 = (($31) + 36|0);
      $33 = HEAP32[$32>>2]|0;
      $34 = (FUNCTION_TABLE_ii[$33 & 127]($24)|0);
      $35 = ($34|0)==(-1);
      if ($35) {
       HEAP32[$__b>>2] = 0;
       $37 = 0;
       break;
      } else {
       $$pre$i$i$i = HEAP32[$__b>>2]|0;
       $37 = $$pre$i$i$i;
       break;
      }
     } else {
      $37 = $24;
     }
    }
   } while(0);
   $36 = ($37|0)==(0|0);
   $38 = ($__e$sroa$0$0|0)==(0|0);
   if ($38) {
    $$pre$i2$i$i17 = 0;$__e$sroa$0$1 = 0;
   } else {
    $39 = (($__e$sroa$0$0) + 12|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = (($__e$sroa$0$0) + 16|0);
    $42 = HEAP32[$41>>2]|0;
    $43 = ($40|0)==($42|0);
    if ($43) {
     $44 = HEAP32[$__e$sroa$0$0>>2]|0;
     $45 = (($44) + 36|0);
     $46 = HEAP32[$45>>2]|0;
     $47 = (FUNCTION_TABLE_ii[$46 & 127]($__e$sroa$0$0)|0);
     $48 = ($47|0)==(-1);
     $$__e$sroa$0$0 = $48 ? 0 : $__e$sroa$0$0;
     $$__e$sroa$0$03 = $48 ? 0 : $__e$sroa$0$0;
     $$pre$i2$i$i17 = $$__e$sroa$0$03;$__e$sroa$0$1 = $$__e$sroa$0$0;
    } else {
     $$pre$i2$i$i17 = $__e$sroa$0$0;$__e$sroa$0$1 = $__e$sroa$0$0;
    }
   }
   $49 = ($$pre$i2$i$i17|0)==(0|0);
   $tmp$i$i = $36 ^ $49;
   $or$cond = $tmp$i$i & $23;
   $50 = HEAP32[$__b>>2]|0;
   if (!($or$cond)) {
    break L17;
   }
   $51 = (($50) + 12|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = (($50) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($52|0)==($54|0);
   if ($55) {
    $56 = HEAP32[$50>>2]|0;
    $57 = (($56) + 36|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = (FUNCTION_TABLE_ii[$58 & 127]($50)|0);
    $$0$i$i = $59;
   } else {
    $60 = HEAP8[$52>>0]|0;
    $61 = $60&255;
    $$0$i$i = $61;
   }
   $62 = $$0$i$i&255;
   if ($__case_sensitive) {
    $__c$0 = $62;
   } else {
    $63 = HEAP32[$__ct>>2]|0;
    $64 = (($63) + 12|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (FUNCTION_TABLE_iii[$65 & 63]($__ct,$62)|0);
    $__c$0 = $66;
   }
   $$pre = (($__indx$0) + 1)|0;
   if ($8) {
    $__e$sroa$0$0 = $__e$sroa$0$1;$__indx$0 = $$pre;
   } else {
    $__consume$0$off036 = 0;$__ky1$037 = $__kb;$__n_does_match$333 = $__n_does_match$2$ph;$__n_might_match$332 = $__n_might_match$2$ph;$__st$134 = $__status$0;
    break;
   }
  }
  while(1) {
   $67 = HEAP8[$__st$134>>0]|0;
   $68 = ($67<<24>>24)==(1);
   do {
    if ($68) {
     $69 = HEAP8[$__ky1$037>>0]|0;
     $70 = $69 & 1;
     $71 = ($70<<24>>24)==(0);
     if ($71) {
      $74 = (($__ky1$037) + 1|0);
      $76 = $74;
     } else {
      $72 = (($__ky1$037) + 8|0);
      $73 = HEAP32[$72>>2]|0;
      $76 = $73;
     }
     $75 = (($76) + ($__indx$0)|0);
     $77 = HEAP8[$75>>0]|0;
     if ($__case_sensitive) {
      $__kc$0 = $77;
     } else {
      $78 = HEAP32[$__ct>>2]|0;
      $79 = (($78) + 12|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = (FUNCTION_TABLE_iii[$80 & 63]($__ct,$77)|0);
      $__kc$0 = $81;
     }
     $82 = ($__c$0<<24>>24)==($__kc$0<<24>>24);
     if (!($82)) {
      HEAP8[$__st$134>>0] = 0;
      $94 = (($__n_might_match$332) + -1)|0;
      $__consume$1$off0 = $__consume$0$off036;$__n_does_match$4 = $__n_does_match$333;$__n_might_match$4 = $94;
      break;
     }
     $83 = HEAP8[$__ky1$037>>0]|0;
     $84 = $83 & 1;
     $85 = ($84<<24>>24)==(0);
     if ($85) {
      $88 = $83&255;
      $89 = $88 >>> 1;
      $91 = $89;
     } else {
      $86 = (($__ky1$037) + 4|0);
      $87 = HEAP32[$86>>2]|0;
      $91 = $87;
     }
     $90 = ($91|0)==($$pre|0);
     if ($90) {
      HEAP8[$__st$134>>0] = 2;
      $92 = (($__n_might_match$332) + -1)|0;
      $93 = (($__n_does_match$333) + 1)|0;
      $__consume$1$off0 = 1;$__n_does_match$4 = $93;$__n_might_match$4 = $92;
     } else {
      $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$333;$__n_might_match$4 = $__n_might_match$332;
     }
    } else {
     $__consume$1$off0 = $__consume$0$off036;$__n_does_match$4 = $__n_does_match$333;$__n_might_match$4 = $__n_might_match$332;
    }
   } while(0);
   $95 = (($__ky1$037) + 12|0);
   $96 = (($__st$134) + 1|0);
   $97 = ($95|0)==($__ke|0);
   if ($97) {
    break;
   } else {
    $__consume$0$off036 = $__consume$1$off0;$__ky1$037 = $95;$__n_does_match$333 = $__n_does_match$4;$__n_might_match$332 = $__n_might_match$4;$__st$134 = $96;
   }
  }
  if (!($__consume$1$off0)) {
   $__e$sroa$0$0$ph = $__e$sroa$0$1;$__indx$0$ph = $$pre;$__n_does_match$2$ph = $__n_does_match$4;$__n_might_match$2$ph = $__n_might_match$4;
   continue;
  }
  $98 = HEAP32[$__b>>2]|0;
  $99 = (($98) + 12|0);
  $100 = HEAP32[$99>>2]|0;
  $101 = (($98) + 16|0);
  $102 = HEAP32[$101>>2]|0;
  $103 = ($100|0)==($102|0);
  if ($103) {
   $104 = HEAP32[$98>>2]|0;
   $105 = (($104) + 40|0);
   $106 = HEAP32[$105>>2]|0;
   (FUNCTION_TABLE_ii[$106 & 127]($98)|0);
  } else {
   $107 = (($100) + 1|0);
   HEAP32[$99>>2] = $107;
  }
  $108 = (($__n_does_match$4) + ($__n_might_match$4))|0;
  $$not = ($108>>>0)<(2);
  if ($$not) {
   $__e$sroa$0$0$ph = $__e$sroa$0$1;$__indx$0$ph = $$pre;$__n_does_match$2$ph = $__n_does_match$4;$__n_might_match$2$ph = $__n_might_match$4;
   continue;
  } else {
   $__ky2$048 = $__kb;$__n_does_match$546 = $__n_does_match$4;$__st$247 = $__status$0;
  }
  while(1) {
   $109 = HEAP8[$__st$247>>0]|0;
   $110 = ($109<<24>>24)==(2);
   if ($110) {
    $111 = HEAP8[$__ky2$048>>0]|0;
    $112 = $111 & 1;
    $113 = ($112<<24>>24)==(0);
    if ($113) {
     $116 = $111&255;
     $117 = $116 >>> 1;
     $119 = $117;
    } else {
     $114 = (($__ky2$048) + 4|0);
     $115 = HEAP32[$114>>2]|0;
     $119 = $115;
    }
    $118 = ($119|0)==($$pre|0);
    if ($118) {
     $__n_does_match$6 = $__n_does_match$546;
    } else {
     HEAP8[$__st$247>>0] = 0;
     $120 = (($__n_does_match$546) + -1)|0;
     $__n_does_match$6 = $120;
    }
   } else {
    $__n_does_match$6 = $__n_does_match$546;
   }
   $121 = (($__ky2$048) + 12|0);
   $122 = (($__st$247) + 1|0);
   $123 = ($121|0)==($__ke|0);
   if ($123) {
    $__e$sroa$0$0$ph = $__e$sroa$0$1;$__indx$0$ph = $$pre;$__n_does_match$2$ph = $__n_does_match$6;$__n_might_match$2$ph = $__n_might_match$4;
    continue L17;
   } else {
    $__ky2$048 = $121;$__n_does_match$546 = $__n_does_match$6;$__st$247 = $122;
   }
  }
 }
 $124 = ($50|0)==(0|0);
 do {
  if ($124) {
   $136 = 0;
  } else {
   $125 = (($50) + 12|0);
   $126 = HEAP32[$125>>2]|0;
   $127 = (($50) + 16|0);
   $128 = HEAP32[$127>>2]|0;
   $129 = ($126|0)==($128|0);
   if ($129) {
    $130 = HEAP32[$50>>2]|0;
    $131 = (($130) + 36|0);
    $132 = HEAP32[$131>>2]|0;
    $133 = (FUNCTION_TABLE_ii[$132 & 127]($50)|0);
    $134 = ($133|0)==(-1);
    if ($134) {
     HEAP32[$__b>>2] = 0;
     $136 = 0;
     break;
    } else {
     $$pre$i$i$i13 = HEAP32[$__b>>2]|0;
     $136 = $$pre$i$i$i13;
     break;
    }
   } else {
    $136 = $50;
   }
  }
 } while(0);
 $135 = ($136|0)==(0|0);
 do {
  if ($49) {
   label = 64;
  } else {
   $137 = (($$pre$i2$i$i17) + 12|0);
   $138 = HEAP32[$137>>2]|0;
   $139 = (($$pre$i2$i$i17) + 16|0);
   $140 = HEAP32[$139>>2]|0;
   $141 = ($138|0)==($140|0);
   if (!($141)) {
    if ($135) {
     break;
    } else {
     label = 66;
     break;
    }
   }
   $142 = HEAP32[$$pre$i2$i$i17>>2]|0;
   $143 = (($142) + 36|0);
   $144 = HEAP32[$143>>2]|0;
   $145 = (FUNCTION_TABLE_ii[$144 & 127]($$pre$i2$i$i17)|0);
   $146 = ($145|0)==(-1);
   if ($146) {
    label = 64;
   } else {
    if (!($135)) {
     label = 66;
    }
   }
  }
 } while(0);
 if ((label|0) == 64) {
  if ($135) {
   label = 66;
  }
 }
 if ((label|0) == 66) {
  $147 = HEAP32[$__err>>2]|0;
  $148 = $147 | 2;
  HEAP32[$__err>>2] = $148;
 }
 L95: do {
  if ($8) {
   label = 70;
  } else {
   $$027 = $__kb;$__st$326 = $__status$0;
   while(1) {
    $149 = HEAP8[$__st$326>>0]|0;
    $150 = ($149<<24>>24)==(2);
    if ($150) {
     $$025 = $$027;
     break L95;
    }
    $151 = (($$027) + 12|0);
    $152 = (($__st$326) + 1|0);
    $153 = ($151|0)==($__ke|0);
    if ($153) {
     label = 70;
     break;
    } else {
     $$027 = $151;$__st$326 = $152;
    }
   }
  }
 } while(0);
 if ((label|0) == 70) {
  $154 = HEAP32[$__err>>2]|0;
  $155 = $154 | 4;
  HEAP32[$__err>>2] = $155;
  $$025 = $__ke;
 }
 $156 = ($157|0)==(0|0);
 if ($156) {
  STACKTOP = sp;return ($$025|0);
 }
 _free($157);
 STACKTOP = sp;return ($$025|0);
}
function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s,$__l,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsscanf($__s,39224,$__va)|0);
 $2 = ($0|0)==(0|0);
 if ($2) {
  STACKTOP = sp;return ($1|0);
 }
 (_uselocale(($0|0))|0);
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b,$__e$0,$__kb,$__ke,$__ct,$__err,$__case_sensitive) {
 $__b = $__b|0;
 $__e$0 = $__e$0|0;
 $__kb = $__kb|0;
 $__ke = $__ke|0;
 $__ct = $__ct|0;
 $__err = $__err|0;
 $__case_sensitive = $__case_sensitive|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i12 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i18 = 0, $$029 = 0, $$031 = 0, $$__e$sroa$0$0 = 0, $$__e$sroa$0$03 = 0, $$not = 0, $$pre = 0, $$pre$i$i$i = 0, $$pre$i$i$i14 = 0, $$pre$i3$i$i20 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off040 = 0, $__consume$1$off0 = 0, $__e$sroa$0$0 = 0, $__e$sroa$0$0$ph = 0, $__e$sroa$0$1 = 0;
 var $__indx$0 = 0, $__indx$0$ph = 0, $__kc$0 = 0, $__ky$067 = 0, $__ky1$041 = 0, $__ky2$052 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$065 = 0, $__n_does_match$1 = 0, $__n_does_match$2$ph = 0, $__n_does_match$337 = 0, $__n_does_match$4 = 0, $__n_does_match$550 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$064 = 0, $__n_might_match$1 = 0, $__n_might_match$2$ph = 0, $__n_might_match$336 = 0, $__n_might_match$4 = 0;
 var $__st$066 = 0, $__st$138 = 0, $__st$251 = 0, $__st$330 = 0, $__statbuf = 0, $__status$0 = 0, $or$cond = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i15 = 0, $tmp$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__statbuf = sp;
 $0 = $__ke;
 $1 = $__kb;
 $2 = (($0) - ($1))|0;
 $3 = (($2|0) / 12)&-1;
 $4 = ($3>>>0)>(100);
 if ($4) {
  $5 = (_malloc($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   $7 = (___cxa_allocate_exception(4)|0);
   HEAP32[$7>>2] = ((51368 + 8|0));
   ___cxa_throw(($7|0),(51424|0),(117|0));
   // unreachable;
  } else {
   $157 = $5;$__status$0 = $5;
  }
 } else {
  $157 = 0;$__status$0 = $__statbuf;
 }
 $8 = ($__kb|0)==($__ke|0);
 if ($8) {
  $__n_does_match$0$lcssa = 0;$__n_might_match$0$lcssa = $3;
 } else {
  $__ky$067 = $__kb;$__n_does_match$065 = 0;$__n_might_match$064 = $3;$__st$066 = $__status$0;
  while(1) {
   $9 = HEAP8[$__ky$067>>0]|0;
   $10 = $9 & 1;
   $11 = ($10<<24>>24)==(0);
   if ($11) {
    $14 = $9&255;
    $15 = $14 >>> 1;
    $17 = $15;
   } else {
    $12 = (($__ky$067) + 4|0);
    $13 = HEAP32[$12>>2]|0;
    $17 = $13;
   }
   $16 = ($17|0)==(0);
   if ($16) {
    HEAP8[$__st$066>>0] = 2;
    $18 = (($__n_might_match$064) + -1)|0;
    $19 = (($__n_does_match$065) + 1)|0;
    $__n_does_match$1 = $19;$__n_might_match$1 = $18;
   } else {
    HEAP8[$__st$066>>0] = 1;
    $__n_does_match$1 = $__n_does_match$065;$__n_might_match$1 = $__n_might_match$064;
   }
   $20 = (($__ky$067) + 12|0);
   $21 = (($__st$066) + 1|0);
   $22 = ($20|0)==($__ke|0);
   if ($22) {
    $__n_does_match$0$lcssa = $__n_does_match$1;$__n_might_match$0$lcssa = $__n_might_match$1;
    break;
   } else {
    $__ky$067 = $20;$__n_does_match$065 = $__n_does_match$1;$__n_might_match$064 = $__n_might_match$1;$__st$066 = $21;
   }
  }
 }
 $__e$sroa$0$0$ph = $__e$0;$__indx$0$ph = 0;$__n_does_match$2$ph = $__n_does_match$0$lcssa;$__n_might_match$2$ph = $__n_might_match$0$lcssa;
 L17: while(1) {
  $23 = ($__n_might_match$2$ph|0)!=(0);
  $__e$sroa$0$0 = $__e$sroa$0$0$ph;$__indx$0 = $__indx$0$ph;
  while(1) {
   $24 = HEAP32[$__b>>2]|0;
   $25 = ($24|0)==(0|0);
   do {
    if ($25) {
     $49 = 1;
    } else {
     $26 = (($24) + 12|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (($24) + 16|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = ($27|0)==($29|0);
     if ($30) {
      $31 = HEAP32[$24>>2]|0;
      $32 = (($31) + 36|0);
      $33 = HEAP32[$32>>2]|0;
      $34 = (FUNCTION_TABLE_ii[$33 & 127]($24)|0);
      $$0$i$i$i$i = $34;
     } else {
      $35 = HEAP32[$27>>2]|0;
      $$0$i$i$i$i = $35;
     }
     $36 = ($$0$i$i$i$i|0)==(-1);
     if ($36) {
      HEAP32[$__b>>2] = 0;
      $49 = 1;
      break;
     } else {
      $$pre$i$i$i = HEAP32[$__b>>2]|0;
      $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
      $49 = $phitmp$i$i$i;
      break;
     }
    }
   } while(0);
   $37 = ($__e$sroa$0$0|0)==(0|0);
   if ($37) {
    $$pre$i3$i$i20 = 0;$50 = 1;$__e$sroa$0$1 = 0;
   } else {
    $38 = (($__e$sroa$0$0) + 12|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (($__e$sroa$0$0) + 16|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = ($39|0)==($41|0);
    if ($42) {
     $43 = HEAP32[$__e$sroa$0$0>>2]|0;
     $44 = (($43) + 36|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = (FUNCTION_TABLE_ii[$45 & 127]($__e$sroa$0$0)|0);
     $$0$i$i1$i$i = $46;
    } else {
     $47 = HEAP32[$39>>2]|0;
     $$0$i$i1$i$i = $47;
    }
    $48 = ($$0$i$i1$i$i|0)==(-1);
    $$__e$sroa$0$0 = $48 ? 0 : $__e$sroa$0$0;
    $$__e$sroa$0$03 = $48 ? 0 : $__e$sroa$0$0;
    $$ = $48 ? 1 : 0;
    $$pre$i3$i$i20 = $$__e$sroa$0$03;$50 = $$;$__e$sroa$0$1 = $$__e$sroa$0$0;
   }
   $tmp$i$i = $49 ^ $50;
   $or$cond = $tmp$i$i & $23;
   $51 = HEAP32[$__b>>2]|0;
   if (!($or$cond)) {
    break L17;
   }
   $52 = (($51) + 12|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (($51) + 16|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ($53|0)==($55|0);
   if ($56) {
    $57 = HEAP32[$51>>2]|0;
    $58 = (($57) + 36|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (FUNCTION_TABLE_ii[$59 & 127]($51)|0);
    $$0$i$i = $60;
   } else {
    $61 = HEAP32[$53>>2]|0;
    $$0$i$i = $61;
   }
   if ($__case_sensitive) {
    $__c$0 = $$0$i$i;
   } else {
    $62 = HEAP32[$__ct>>2]|0;
    $63 = (($62) + 28|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = (FUNCTION_TABLE_iii[$64 & 63]($__ct,$$0$i$i)|0);
    $__c$0 = $65;
   }
   $$pre = (($__indx$0) + 1)|0;
   if ($8) {
    $__e$sroa$0$0 = $__e$sroa$0$1;$__indx$0 = $$pre;
   } else {
    $__consume$0$off040 = 0;$__ky1$041 = $__kb;$__n_does_match$337 = $__n_does_match$2$ph;$__n_might_match$336 = $__n_might_match$2$ph;$__st$138 = $__status$0;
    break;
   }
  }
  while(1) {
   $66 = HEAP8[$__st$138>>0]|0;
   $67 = ($66<<24>>24)==(1);
   do {
    if ($67) {
     $68 = HEAP8[$__ky1$041>>0]|0;
     $69 = $68 & 1;
     $70 = ($69<<24>>24)==(0);
     if ($70) {
      $73 = (($__ky1$041) + 4|0);
      $75 = $73;
     } else {
      $71 = (($__ky1$041) + 8|0);
      $72 = HEAP32[$71>>2]|0;
      $75 = $72;
     }
     $74 = (($75) + ($__indx$0<<2)|0);
     $76 = HEAP32[$74>>2]|0;
     if ($__case_sensitive) {
      $__kc$0 = $76;
     } else {
      $77 = HEAP32[$__ct>>2]|0;
      $78 = (($77) + 28|0);
      $79 = HEAP32[$78>>2]|0;
      $80 = (FUNCTION_TABLE_iii[$79 & 63]($__ct,$76)|0);
      $__kc$0 = $80;
     }
     $81 = ($__c$0|0)==($__kc$0|0);
     if (!($81)) {
      HEAP8[$__st$138>>0] = 0;
      $93 = (($__n_might_match$336) + -1)|0;
      $__consume$1$off0 = $__consume$0$off040;$__n_does_match$4 = $__n_does_match$337;$__n_might_match$4 = $93;
      break;
     }
     $82 = HEAP8[$__ky1$041>>0]|0;
     $83 = $82 & 1;
     $84 = ($83<<24>>24)==(0);
     if ($84) {
      $87 = $82&255;
      $88 = $87 >>> 1;
      $90 = $88;
     } else {
      $85 = (($__ky1$041) + 4|0);
      $86 = HEAP32[$85>>2]|0;
      $90 = $86;
     }
     $89 = ($90|0)==($$pre|0);
     if ($89) {
      HEAP8[$__st$138>>0] = 2;
      $91 = (($__n_might_match$336) + -1)|0;
      $92 = (($__n_does_match$337) + 1)|0;
      $__consume$1$off0 = 1;$__n_does_match$4 = $92;$__n_might_match$4 = $91;
     } else {
      $__consume$1$off0 = 1;$__n_does_match$4 = $__n_does_match$337;$__n_might_match$4 = $__n_might_match$336;
     }
    } else {
     $__consume$1$off0 = $__consume$0$off040;$__n_does_match$4 = $__n_does_match$337;$__n_might_match$4 = $__n_might_match$336;
    }
   } while(0);
   $94 = (($__ky1$041) + 12|0);
   $95 = (($__st$138) + 1|0);
   $96 = ($94|0)==($__ke|0);
   if ($96) {
    break;
   } else {
    $__consume$0$off040 = $__consume$1$off0;$__ky1$041 = $94;$__n_does_match$337 = $__n_does_match$4;$__n_might_match$336 = $__n_might_match$4;$__st$138 = $95;
   }
  }
  if (!($__consume$1$off0)) {
   $__e$sroa$0$0$ph = $__e$sroa$0$1;$__indx$0$ph = $$pre;$__n_does_match$2$ph = $__n_does_match$4;$__n_might_match$2$ph = $__n_might_match$4;
   continue;
  }
  $97 = HEAP32[$__b>>2]|0;
  $98 = (($97) + 12|0);
  $99 = HEAP32[$98>>2]|0;
  $100 = (($97) + 16|0);
  $101 = HEAP32[$100>>2]|0;
  $102 = ($99|0)==($101|0);
  if ($102) {
   $103 = HEAP32[$97>>2]|0;
   $104 = (($103) + 40|0);
   $105 = HEAP32[$104>>2]|0;
   (FUNCTION_TABLE_ii[$105 & 127]($97)|0);
  } else {
   $106 = (($99) + 4|0);
   HEAP32[$98>>2] = $106;
  }
  $107 = (($__n_does_match$4) + ($__n_might_match$4))|0;
  $$not = ($107>>>0)<(2);
  if ($$not) {
   $__e$sroa$0$0$ph = $__e$sroa$0$1;$__indx$0$ph = $$pre;$__n_does_match$2$ph = $__n_does_match$4;$__n_might_match$2$ph = $__n_might_match$4;
   continue;
  } else {
   $__ky2$052 = $__kb;$__n_does_match$550 = $__n_does_match$4;$__st$251 = $__status$0;
  }
  while(1) {
   $108 = HEAP8[$__st$251>>0]|0;
   $109 = ($108<<24>>24)==(2);
   if ($109) {
    $110 = HEAP8[$__ky2$052>>0]|0;
    $111 = $110 & 1;
    $112 = ($111<<24>>24)==(0);
    if ($112) {
     $115 = $110&255;
     $116 = $115 >>> 1;
     $118 = $116;
    } else {
     $113 = (($__ky2$052) + 4|0);
     $114 = HEAP32[$113>>2]|0;
     $118 = $114;
    }
    $117 = ($118|0)==($$pre|0);
    if ($117) {
     $__n_does_match$6 = $__n_does_match$550;
    } else {
     HEAP8[$__st$251>>0] = 0;
     $119 = (($__n_does_match$550) + -1)|0;
     $__n_does_match$6 = $119;
    }
   } else {
    $__n_does_match$6 = $__n_does_match$550;
   }
   $120 = (($__ky2$052) + 12|0);
   $121 = (($__st$251) + 1|0);
   $122 = ($120|0)==($__ke|0);
   if ($122) {
    $__e$sroa$0$0$ph = $__e$sroa$0$1;$__indx$0$ph = $$pre;$__n_does_match$2$ph = $__n_does_match$6;$__n_might_match$2$ph = $__n_might_match$4;
    continue L17;
   } else {
    $__ky2$052 = $120;$__n_does_match$550 = $__n_does_match$6;$__st$251 = $121;
   }
  }
 }
 $123 = ($51|0)==(0|0);
 do {
  if ($123) {
   $158 = 1;
  } else {
   $124 = (($51) + 12|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = (($51) + 16|0);
   $127 = HEAP32[$126>>2]|0;
   $128 = ($125|0)==($127|0);
   if ($128) {
    $129 = HEAP32[$51>>2]|0;
    $130 = (($129) + 36|0);
    $131 = HEAP32[$130>>2]|0;
    $132 = (FUNCTION_TABLE_ii[$131 & 127]($51)|0);
    $$0$i$i$i$i12 = $132;
   } else {
    $133 = HEAP32[$125>>2]|0;
    $$0$i$i$i$i12 = $133;
   }
   $134 = ($$0$i$i$i$i12|0)==(-1);
   if ($134) {
    HEAP32[$__b>>2] = 0;
    $158 = 1;
    break;
   } else {
    $$pre$i$i$i14 = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i15 = ($$pre$i$i$i14|0)==(0|0);
    $158 = $phitmp$i$i$i15;
    break;
   }
  }
 } while(0);
 $135 = ($$pre$i3$i$i20|0)==(0|0);
 if ($135) {
  label = 71;
 } else {
  $136 = (($$pre$i3$i$i20) + 12|0);
  $137 = HEAP32[$136>>2]|0;
  $138 = (($$pre$i3$i$i20) + 16|0);
  $139 = HEAP32[$138>>2]|0;
  $140 = ($137|0)==($139|0);
  if ($140) {
   $141 = HEAP32[$$pre$i3$i$i20>>2]|0;
   $142 = (($141) + 36|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = (FUNCTION_TABLE_ii[$143 & 127]($$pre$i3$i$i20)|0);
   $$0$i$i1$i$i18 = $144;
  } else {
   $145 = HEAP32[$137>>2]|0;
   $$0$i$i1$i$i18 = $145;
  }
  $146 = ($$0$i$i1$i$i18|0)==(-1);
  if ($146) {
   label = 71;
  } else {
   if (!($158)) {
    label = 73;
   }
  }
 }
 if ((label|0) == 71) {
  if ($158) {
   label = 73;
  }
 }
 if ((label|0) == 73) {
  $147 = HEAP32[$__err>>2]|0;
  $148 = $147 | 2;
  HEAP32[$__err>>2] = $148;
 }
 L105: do {
  if ($8) {
   label = 77;
  } else {
   $$031 = $__kb;$__st$330 = $__status$0;
   while(1) {
    $149 = HEAP8[$__st$330>>0]|0;
    $150 = ($149<<24>>24)==(2);
    if ($150) {
     $$029 = $$031;
     break L105;
    }
    $151 = (($$031) + 12|0);
    $152 = (($__st$330) + 1|0);
    $153 = ($151|0)==($__ke|0);
    if ($153) {
     label = 77;
     break;
    } else {
     $$031 = $151;$__st$330 = $152;
    }
   }
  }
 } while(0);
 if ((label|0) == 77) {
  $154 = HEAP32[$__err>>2]|0;
  $155 = $154 | 4;
  HEAP32[$__err>>2] = $155;
  $$029 = $__ke;
 }
 $156 = ($157|0)==(0|0);
 if ($156) {
  STACKTOP = sp;return ($$029|0);
 }
 _free($157);
 STACKTOP = sp;return ($$029|0);
}
function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s,$__n,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__n = $__n|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $__va = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_vsnprintf($__s,$__n,$__format,$__va)|0);
 $2 = ($0|0)==(0|0);
 if ($2) {
  STACKTOP = sp;return ($1|0);
 }
 (_uselocale(($0|0))|0);
 STACKTOP = sp;return ($1|0);
}
function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s,$__l,$__format,$varargs) {
 $__s = $__s|0;
 $__l = $__l|0;
 $__format = $__format|0;
 $varargs = $varargs|0;
 var $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__va = 0, $ap2$i = 0, $vacopy_currentptr = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $ap2$i = sp + 16|0;
 $__va = sp;
 HEAP32[$__va>>2] = $varargs;
 $0 = (_uselocale(($__l|0))|0);
 $1 = (_malloc(240)|0);
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   $$0$i = -1;
  } else {
   $vacopy_currentptr = HEAP32[$__va>>2]|0;
   HEAP32[$ap2$i>>2] = $vacopy_currentptr;
   $3 = (_vsnprintf($1,240,$__format,$ap2$i)|0);
   $4 = ($3>>>0)<(240);
   if ($4) {
    $5 = (($3) + 1)|0;
    $6 = (_realloc($1,$5)|0);
    $7 = ($6|0)!=(0|0);
    $8 = $7 ? $6 : $1;
    HEAP32[$__s>>2] = $8;
    $$0$i = $3;
    break;
   }
   _free($1);
   $9 = ($3|0)<(0);
   if ($9) {
    $$0$i = -1;
   } else {
    $10 = (($3) + 1)|0;
    $11 = (_malloc($10)|0);
    HEAP32[$__s>>2] = $11;
    $12 = ($11|0)==(0|0);
    if ($12) {
     $$0$i = -1;
    } else {
     $13 = (_vsnprintf($11,$10,$__format,$__va)|0);
     $$0$i = $13;
    }
   }
  }
 } while(0);
 $14 = ($0|0)==(0|0);
 if ($14) {
  STACKTOP = sp;return ($$0$i|0);
 }
 (_uselocale(($0|0))|0);
 STACKTOP = sp;return ($$0$i|0);
}
function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($agg$result,$__s$0,$__ob,$__op,$__oe,$__iob,$__fl) {
 $agg$result = $agg$result|0;
 $__s$0 = $__s$0|0;
 $__ob = $__ob|0;
 $__op = $__op|0;
 $__oe = $__oe|0;
 $__iob = $__iob|0;
 $__fl = $__fl|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ns$0 = 0, $__sp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__sp = sp;
 $0 = ($__s$0|0)==(0|0);
 if ($0) {
  HEAP32[$agg$result>>2] = 0;
  STACKTOP = sp;return;
 }
 $1 = $__oe;
 $2 = $__ob;
 $3 = (($1) - ($2))|0;
 $4 = $3 >> 2;
 $5 = (($__iob) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)>($4|0);
 $8 = (($6) - ($4))|0;
 $__ns$0 = $7 ? $8 : 0;
 $9 = $__op;
 $10 = (($9) - ($2))|0;
 $11 = $10 >> 2;
 $12 = ($10|0)>(0);
 if ($12) {
  $13 = HEAP32[$__s$0>>2]|0;
  $14 = (($13) + 48|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (FUNCTION_TABLE_iiii[$15 & 31]($__s$0,$__ob,$11)|0);
  $17 = ($16|0)==($11|0);
  if (!($17)) {
   HEAP32[$agg$result>>2] = 0;
   STACKTOP = sp;return;
  }
 }
 $18 = ($__ns$0|0)>(0);
 do {
  if ($18) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp,$__ns$0,$__fl);
   $19 = HEAP8[$__sp>>0]|0;
   $20 = $19 & 1;
   $21 = ($20<<24>>24)==(0);
   if ($21) {
    $24 = (($__sp) + 4|0);
    $28 = $24;
   } else {
    $22 = (($__sp) + 8|0);
    $23 = HEAP32[$22>>2]|0;
    $28 = $23;
   }
   $25 = HEAP32[$__s$0>>2]|0;
   $26 = (($25) + 48|0);
   $27 = HEAP32[$26>>2]|0;
   $29 = (FUNCTION_TABLE_iiii[$27 & 31]($__s$0,$28,$__ns$0)|0);
   $30 = ($29|0)==($__ns$0|0);
   if ($30) {
    $36 = HEAP8[$__sp>>0]|0;
    $37 = $36 & 1;
    $38 = ($37<<24>>24)==(0);
    if ($38) {
     break;
    }
    $39 = (($__sp) + 8|0);
    $40 = HEAP32[$39>>2]|0;
    _free($40);
    break;
   }
   HEAP32[$agg$result>>2] = 0;
   $31 = HEAP8[$__sp>>0]|0;
   $32 = $31 & 1;
   $33 = ($32<<24>>24)==(0);
   if ($33) {
    STACKTOP = sp;return;
   }
   $34 = (($__sp) + 8|0);
   $35 = HEAP32[$34>>2]|0;
   _free($35);
   STACKTOP = sp;return;
  }
 } while(0);
 $41 = (($1) - ($9))|0;
 $42 = $41 >> 2;
 $43 = ($41|0)>(0);
 if ($43) {
  $44 = HEAP32[$__s$0>>2]|0;
  $45 = (($44) + 48|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = (FUNCTION_TABLE_iiii[$46 & 31]($__s$0,$__op,$42)|0);
  $48 = ($47|0)==($42|0);
  if (!($48)) {
   HEAP32[$agg$result>>2] = 0;
   STACKTOP = sp;return;
  }
 }
 HEAP32[$5>>2] = 0;
 HEAP32[$agg$result>>2] = $__s$0;
 STACKTOP = sp;return;
}
function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e$0,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e$0 = $__e$0|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$$pre$i2$i$i8 = 0, $$$pre$i2$i$i82 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i11 = 0, $$0$in = 0, $$02 = 0, $$pre$i$i$i = 0, $$pre$i$i$i17 = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i21 = 0, $$pre$i2$i$i8 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $isascii1$i = 0, $isascii1$i13 = 0, $or$cond = 0, $sext = 0, $sext25 = 0, $tmp$i$i10 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $13 = 0;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 127]($0)|0);
    $11 = ($10|0)==(-1);
    if ($11) {
     HEAP32[$__b>>2] = 0;
     $13 = 0;
     break;
    } else {
     $$pre$i$i$i = HEAP32[$__b>>2]|0;
     $13 = $$pre$i$i$i;
     break;
    }
   } else {
    $13 = $0;
   }
  }
 } while(0);
 $12 = ($13|0)==(0|0);
 $14 = ($__e$0|0)==(0|0);
 do {
  if ($14) {
   label = 10;
  } else {
   $15 = (($__e$0) + 12|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = (($__e$0) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16|0)==($18|0);
   if ($19) {
    $20 = HEAP32[$__e$0>>2]|0;
    $21 = (($20) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (FUNCTION_TABLE_ii[$22 & 127]($__e$0)|0);
    $24 = ($23|0)==(-1);
    if ($24) {
     label = 10;
     break;
    }
   }
   if ($12) {
    $155 = $__e$0;
   } else {
    label = 11;
   }
  }
 } while(0);
 if ((label|0) == 10) {
  if ($12) {
   label = 11;
  } else {
   $155 = 0;
  }
 }
 if ((label|0) == 11) {
  $25 = HEAP32[$__err>>2]|0;
  $26 = $25 | 6;
  HEAP32[$__err>>2] = $26;
  $$02 = 0;
  STACKTOP = sp;return ($$02|0);
 }
 $27 = HEAP32[$__b>>2]|0;
 $28 = (($27) + 12|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = (($27) + 16|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($29|0)==($31|0);
 if ($32) {
  $33 = HEAP32[$27>>2]|0;
  $34 = (($33) + 36|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = (FUNCTION_TABLE_ii[$35 & 127]($27)|0);
  $$0$i$i = $36;
 } else {
  $37 = HEAP8[$29>>0]|0;
  $38 = $37&255;
  $$0$i$i = $38;
 }
 $39 = $$0$i$i&255;
 $isascii1$i = ($39<<24>>24)>(-1);
 if ($isascii1$i) {
  $sext = $$0$i$i << 24;
  $40 = $sext >> 24;
  $41 = (($__ct) + 8|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = (($42) + ($40<<1)|0);
  $44 = HEAP16[$43>>1]|0;
  $45 = $44 & 2048;
  $46 = ($45<<16>>16)==(0);
  if (!($46)) {
   $49 = HEAP32[$__ct>>2]|0;
   $50 = (($49) + 36|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = (FUNCTION_TABLE_iiii[$51 & 31]($__ct,$39,0)|0);
   $53 = $52 << 24 >> 24;
   $54 = HEAP32[$__b>>2]|0;
   $55 = (($54) + 12|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = (($54) + 16|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ($56|0)==($58|0);
   if ($59) {
    $60 = HEAP32[$54>>2]|0;
    $61 = (($60) + 40|0);
    $62 = HEAP32[$61>>2]|0;
    (FUNCTION_TABLE_ii[$62 & 127]($54)|0);
    $$0$in = $__n;$$pre$i2$i$i8 = $155;$79 = $155;$__r$0$in = $53;
   } else {
    $63 = (($56) + 1|0);
    HEAP32[$55>>2] = $63;
    $$0$in = $__n;$$pre$i2$i$i8 = $155;$79 = $155;$__r$0$in = $53;
   }
   while(1) {
    $__r$0 = (($__r$0$in) + -48)|0;
    $$0 = (($$0$in) + -1)|0;
    $64 = HEAP32[$__b>>2]|0;
    $65 = ($64|0)==(0|0);
    do {
     if ($65) {
      $77 = 0;
     } else {
      $66 = (($64) + 12|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = (($64) + 16|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = ($67|0)==($69|0);
      if ($70) {
       $71 = HEAP32[$64>>2]|0;
       $72 = (($71) + 36|0);
       $73 = HEAP32[$72>>2]|0;
       $74 = (FUNCTION_TABLE_ii[$73 & 127]($64)|0);
       $75 = ($74|0)==(-1);
       if ($75) {
        HEAP32[$__b>>2] = 0;
        $77 = 0;
        break;
       } else {
        $$pre$i$i$i4 = HEAP32[$__b>>2]|0;
        $77 = $$pre$i$i$i4;
        break;
       }
      } else {
       $77 = $64;
      }
     }
    } while(0);
    $76 = ($77|0)==(0|0);
    $78 = ($79|0)==(0|0);
    if ($78) {
     $$pre$i2$i$i21 = $$pre$i2$i$i8;$91 = 0;
    } else {
     $80 = (($79) + 12|0);
     $81 = HEAP32[$80>>2]|0;
     $82 = (($79) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($81|0)==($83|0);
     if ($84) {
      $85 = HEAP32[$79>>2]|0;
      $86 = (($85) + 36|0);
      $87 = HEAP32[$86>>2]|0;
      $88 = (FUNCTION_TABLE_ii[$87 & 127]($79)|0);
      $89 = ($88|0)==(-1);
      $$$pre$i2$i$i8 = $89 ? 0 : $$pre$i2$i$i8;
      $$$pre$i2$i$i82 = $89 ? 0 : $$pre$i2$i$i8;
      $$pre$i2$i$i21 = $$$pre$i2$i$i8;$91 = $$$pre$i2$i$i82;
     } else {
      $$pre$i2$i$i21 = $$pre$i2$i$i8;$91 = $79;
     }
    }
    $90 = ($91|0)==(0|0);
    $tmp$i$i10 = $76 ^ $90;
    $92 = ($$0|0)>(0);
    $or$cond = $tmp$i$i10 & $92;
    $93 = HEAP32[$__b>>2]|0;
    if (!($or$cond)) {
     label = 38;
     break;
    }
    $94 = (($93) + 12|0);
    $95 = HEAP32[$94>>2]|0;
    $96 = (($93) + 16|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($95|0)==($97|0);
    if ($98) {
     $99 = HEAP32[$93>>2]|0;
     $100 = (($99) + 36|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = (FUNCTION_TABLE_ii[$101 & 127]($93)|0);
     $$0$i$i11 = $102;
    } else {
     $103 = HEAP8[$95>>0]|0;
     $104 = $103&255;
     $$0$i$i11 = $104;
    }
    $105 = $$0$i$i11&255;
    $isascii1$i13 = ($105<<24>>24)>(-1);
    if (!($isascii1$i13)) {
     $$02 = $__r$0;
     label = 49;
     break;
    }
    $sext25 = $$0$i$i11 << 24;
    $106 = $sext25 >> 24;
    $107 = HEAP32[$41>>2]|0;
    $108 = (($107) + ($106<<1)|0);
    $109 = HEAP16[$108>>1]|0;
    $110 = $109 & 2048;
    $111 = ($110<<16>>16)==(0);
    if ($111) {
     $$02 = $__r$0;
     label = 49;
     break;
    }
    $112 = ($__r$0*10)|0;
    $113 = HEAP32[$__ct>>2]|0;
    $114 = (($113) + 36|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = (FUNCTION_TABLE_iiii[$115 & 31]($__ct,$105,0)|0);
    $117 = $116 << 24 >> 24;
    $118 = (($117) + ($112))|0;
    $119 = HEAP32[$__b>>2]|0;
    $120 = (($119) + 12|0);
    $121 = HEAP32[$120>>2]|0;
    $122 = (($119) + 16|0);
    $123 = HEAP32[$122>>2]|0;
    $124 = ($121|0)==($123|0);
    if ($124) {
     $125 = HEAP32[$119>>2]|0;
     $126 = (($125) + 40|0);
     $127 = HEAP32[$126>>2]|0;
     (FUNCTION_TABLE_ii[$127 & 127]($119)|0);
     $$0$in = $$0;$$pre$i2$i$i8 = $$pre$i2$i$i21;$79 = $91;$__r$0$in = $118;
     continue;
    } else {
     $128 = (($121) + 1|0);
     HEAP32[$120>>2] = $128;
     $$0$in = $$0;$$pre$i2$i$i8 = $$pre$i2$i$i21;$79 = $91;$__r$0$in = $118;
     continue;
    }
   }
   if ((label|0) == 38) {
    $129 = ($93|0)==(0|0);
    do {
     if ($129) {
      $141 = 0;
     } else {
      $130 = (($93) + 12|0);
      $131 = HEAP32[$130>>2]|0;
      $132 = (($93) + 16|0);
      $133 = HEAP32[$132>>2]|0;
      $134 = ($131|0)==($133|0);
      if ($134) {
       $135 = HEAP32[$93>>2]|0;
       $136 = (($135) + 36|0);
       $137 = HEAP32[$136>>2]|0;
       $138 = (FUNCTION_TABLE_ii[$137 & 127]($93)|0);
       $139 = ($138|0)==(-1);
       if ($139) {
        HEAP32[$__b>>2] = 0;
        $141 = 0;
        break;
       } else {
        $$pre$i$i$i17 = HEAP32[$__b>>2]|0;
        $141 = $$pre$i$i$i17;
        break;
       }
      } else {
       $141 = $93;
      }
     }
    } while(0);
    $140 = ($141|0)==(0|0);
    $142 = ($$pre$i2$i$i21|0)==(0|0);
    do {
     if ($142) {
      label = 47;
     } else {
      $143 = (($$pre$i2$i$i21) + 12|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = (($$pre$i2$i$i21) + 16|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($144|0)==($146|0);
      if ($147) {
       $148 = HEAP32[$$pre$i2$i$i21>>2]|0;
       $149 = (($148) + 36|0);
       $150 = HEAP32[$149>>2]|0;
       $151 = (FUNCTION_TABLE_ii[$150 & 127]($$pre$i2$i$i21)|0);
       $152 = ($151|0)==(-1);
       if ($152) {
        label = 47;
        break;
       }
      }
      if ($140) {
       $$02 = $__r$0;
       STACKTOP = sp;return ($$02|0);
      }
     }
    } while(0);
    if ((label|0) == 47) {
     if (!($140)) {
      $$02 = $__r$0;
      STACKTOP = sp;return ($$02|0);
     }
    }
    $153 = HEAP32[$__err>>2]|0;
    $154 = $153 | 2;
    HEAP32[$__err>>2] = $154;
    $$02 = $__r$0;
    STACKTOP = sp;return ($$02|0);
   }
   else if ((label|0) == 49) {
    STACKTOP = sp;return ($$02|0);
   }
  }
 }
 $47 = HEAP32[$__err>>2]|0;
 $48 = $47 | 4;
 HEAP32[$__err>>2] = $48;
 $$02 = 0;
 STACKTOP = sp;return ($$02|0);
}
function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b,$__e$0,$__err,$__ct,$__n) {
 $__b = $__b|0;
 $__e$0 = $__e$0|0;
 $__err = $__err|0;
 $__ct = $__ct|0;
 $__n = $__n|0;
 var $$$pre$i3$i$i11 = 0, $$$pre$i3$i$i112 = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i18 = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i24 = 0, $$0$i$i1$i$i9 = 0, $$0$i$i15 = 0, $$0$in = 0, $$02 = 0, $$phitmp$i4$i$i12 = 0, $$pre$i$i$i = 0, $$pre$i$i$i20 = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i11 = 0, $$pre$i3$i$i26 = 0, $0 = 0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__r$0 = 0, $__r$0$in = 0, $or$cond = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i21 = 0, $phitmp$i$i$i6 = 0, $phitmp$i4$i$i12 = 0, $tmp$i$i14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$__b>>2]|0;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $146 = 1;
  } else {
   $2 = (($0) + 12|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = (($0) + 16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($3|0)==($5|0);
   if ($6) {
    $7 = HEAP32[$0>>2]|0;
    $8 = (($7) + 36|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (FUNCTION_TABLE_ii[$9 & 127]($0)|0);
    $$0$i$i$i$i = $10;
   } else {
    $11 = HEAP32[$3>>2]|0;
    $$0$i$i$i$i = $11;
   }
   $12 = ($$0$i$i$i$i|0)==(-1);
   if ($12) {
    HEAP32[$__b>>2] = 0;
    $146 = 1;
    break;
   } else {
    $$pre$i$i$i = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i = ($$pre$i$i$i|0)==(0|0);
    $146 = $phitmp$i$i$i;
    break;
   }
  }
 } while(0);
 $13 = ($__e$0|0)==(0|0);
 if ($13) {
  label = 13;
 } else {
  $14 = (($__e$0) + 12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($__e$0) + 16|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($15|0)==($17|0);
  if ($18) {
   $19 = HEAP32[$__e$0>>2]|0;
   $20 = (($19) + 36|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (FUNCTION_TABLE_ii[$21 & 127]($__e$0)|0);
   $$0$i$i1$i$i = $22;
  } else {
   $23 = HEAP32[$15>>2]|0;
   $$0$i$i1$i$i = $23;
  }
  $24 = ($$0$i$i1$i$i|0)==(-1);
  if ($24) {
   label = 13;
  } else {
   if ($146) {
    $147 = $__e$0;
   } else {
    label = 15;
   }
  }
 }
 if ((label|0) == 13) {
  if ($146) {
   label = 15;
  } else {
   $147 = 0;
  }
 }
 if ((label|0) == 15) {
  $25 = HEAP32[$__err>>2]|0;
  $26 = $25 | 6;
  HEAP32[$__err>>2] = $26;
  $$02 = 0;
  STACKTOP = sp;return ($$02|0);
 }
 $27 = HEAP32[$__b>>2]|0;
 $28 = (($27) + 12|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = (($27) + 16|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($29|0)==($31|0);
 if ($32) {
  $33 = HEAP32[$27>>2]|0;
  $34 = (($33) + 36|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = (FUNCTION_TABLE_ii[$35 & 127]($27)|0);
  $$0$i$i = $36;
 } else {
  $37 = HEAP32[$29>>2]|0;
  $$0$i$i = $37;
 }
 $38 = HEAP32[$__ct>>2]|0;
 $39 = (($38) + 12|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (FUNCTION_TABLE_iiii[$40 & 31]($__ct,2048,$$0$i$i)|0);
 if (!($41)) {
  $42 = HEAP32[$__err>>2]|0;
  $43 = $42 | 4;
  HEAP32[$__err>>2] = $43;
  $$02 = 0;
  STACKTOP = sp;return ($$02|0);
 }
 $44 = HEAP32[$__ct>>2]|0;
 $45 = (($44) + 52|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = (FUNCTION_TABLE_iiii[$46 & 31]($__ct,$$0$i$i,0)|0);
 $48 = $47 << 24 >> 24;
 $49 = HEAP32[$__b>>2]|0;
 $50 = (($49) + 12|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = (($49) + 16|0);
 $53 = HEAP32[$52>>2]|0;
 $54 = ($51|0)==($53|0);
 if ($54) {
  $55 = HEAP32[$49>>2]|0;
  $56 = (($55) + 40|0);
  $57 = HEAP32[$56>>2]|0;
  (FUNCTION_TABLE_ii[$57 & 127]($49)|0);
  $$0$in = $__n;$$pre$i3$i$i11 = $147;$73 = $147;$__r$0$in = $48;
 } else {
  $58 = (($51) + 4|0);
  HEAP32[$50>>2] = $58;
  $$0$in = $__n;$$pre$i3$i$i11 = $147;$73 = $147;$__r$0$in = $48;
 }
 while(1) {
  $__r$0 = (($__r$0$in) + -48)|0;
  $$0 = (($$0$in) + -1)|0;
  $59 = HEAP32[$__b>>2]|0;
  $60 = ($59|0)==(0|0);
  do {
   if ($60) {
    $85 = 1;
   } else {
    $61 = (($59) + 12|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = (($59) + 16|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = ($62|0)==($64|0);
    if ($65) {
     $66 = HEAP32[$59>>2]|0;
     $67 = (($66) + 36|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = (FUNCTION_TABLE_ii[$68 & 127]($59)|0);
     $$0$i$i$i$i3 = $69;
    } else {
     $70 = HEAP32[$62>>2]|0;
     $$0$i$i$i$i3 = $70;
    }
    $71 = ($$0$i$i$i$i3|0)==(-1);
    if ($71) {
     HEAP32[$__b>>2] = 0;
     $85 = 1;
     break;
    } else {
     $$pre$i$i$i5 = HEAP32[$__b>>2]|0;
     $phitmp$i$i$i6 = ($$pre$i$i$i5|0)==(0|0);
     $85 = $phitmp$i$i$i6;
     break;
    }
   }
  } while(0);
  $72 = ($73|0)==(0|0);
  if ($72) {
   $$pre$i3$i$i26 = $$pre$i3$i$i11;$148 = 0;$86 = 1;
  } else {
   $74 = (($73) + 12|0);
   $75 = HEAP32[$74>>2]|0;
   $76 = (($73) + 16|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = ($75|0)==($77|0);
   if ($78) {
    $79 = HEAP32[$73>>2]|0;
    $80 = (($79) + 36|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = (FUNCTION_TABLE_ii[$81 & 127]($73)|0);
    $$0$i$i1$i$i9 = $82;
   } else {
    $83 = HEAP32[$75>>2]|0;
    $$0$i$i1$i$i9 = $83;
   }
   $84 = ($$0$i$i1$i$i9|0)==(-1);
   $phitmp$i4$i$i12 = ($$pre$i3$i$i11|0)==(0|0);
   $$$pre$i3$i$i11 = $84 ? 0 : $$pre$i3$i$i11;
   $$$pre$i3$i$i112 = $84 ? 0 : $$pre$i3$i$i11;
   $$phitmp$i4$i$i12 = $84 ? 1 : $phitmp$i4$i$i12;
   $$pre$i3$i$i26 = $$$pre$i3$i$i11;$148 = $$$pre$i3$i$i112;$86 = $$phitmp$i4$i$i12;
  }
  $tmp$i$i14 = $85 ^ $86;
  $87 = ($$0|0)>(0);
  $or$cond = $tmp$i$i14 & $87;
  $88 = HEAP32[$__b>>2]|0;
  if (!($or$cond)) {
   break;
  }
  $89 = (($88) + 12|0);
  $90 = HEAP32[$89>>2]|0;
  $91 = (($88) + 16|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = ($90|0)==($92|0);
  if ($93) {
   $94 = HEAP32[$88>>2]|0;
   $95 = (($94) + 36|0);
   $96 = HEAP32[$95>>2]|0;
   $97 = (FUNCTION_TABLE_ii[$96 & 127]($88)|0);
   $$0$i$i15 = $97;
  } else {
   $98 = HEAP32[$90>>2]|0;
   $$0$i$i15 = $98;
  }
  $99 = HEAP32[$__ct>>2]|0;
  $100 = (($99) + 12|0);
  $101 = HEAP32[$100>>2]|0;
  $102 = (FUNCTION_TABLE_iiii[$101 & 31]($__ct,2048,$$0$i$i15)|0);
  if (!($102)) {
   $$02 = $__r$0;
   label = 59;
   break;
  }
  $103 = ($__r$0*10)|0;
  $104 = HEAP32[$__ct>>2]|0;
  $105 = (($104) + 52|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (FUNCTION_TABLE_iiii[$106 & 31]($__ct,$$0$i$i15,0)|0);
  $108 = $107 << 24 >> 24;
  $109 = (($108) + ($103))|0;
  $110 = HEAP32[$__b>>2]|0;
  $111 = (($110) + 12|0);
  $112 = HEAP32[$111>>2]|0;
  $113 = (($110) + 16|0);
  $114 = HEAP32[$113>>2]|0;
  $115 = ($112|0)==($114|0);
  if ($115) {
   $116 = HEAP32[$110>>2]|0;
   $117 = (($116) + 40|0);
   $118 = HEAP32[$117>>2]|0;
   (FUNCTION_TABLE_ii[$118 & 127]($110)|0);
   $$0$in = $$0;$$pre$i3$i$i11 = $$pre$i3$i$i26;$73 = $148;$__r$0$in = $109;
   continue;
  } else {
   $119 = (($112) + 4|0);
   HEAP32[$111>>2] = $119;
   $$0$in = $$0;$$pre$i3$i$i11 = $$pre$i3$i$i26;$73 = $148;$__r$0$in = $109;
   continue;
  }
 }
 if ((label|0) == 59) {
  STACKTOP = sp;return ($$02|0);
 }
 $120 = ($88|0)==(0|0);
 do {
  if ($120) {
   $149 = 1;
  } else {
   $121 = (($88) + 12|0);
   $122 = HEAP32[$121>>2]|0;
   $123 = (($88) + 16|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ($122|0)==($124|0);
   if ($125) {
    $126 = HEAP32[$88>>2]|0;
    $127 = (($126) + 36|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = (FUNCTION_TABLE_ii[$128 & 127]($88)|0);
    $$0$i$i$i$i18 = $129;
   } else {
    $130 = HEAP32[$122>>2]|0;
    $$0$i$i$i$i18 = $130;
   }
   $131 = ($$0$i$i$i$i18|0)==(-1);
   if ($131) {
    HEAP32[$__b>>2] = 0;
    $149 = 1;
    break;
   } else {
    $$pre$i$i$i20 = HEAP32[$__b>>2]|0;
    $phitmp$i$i$i21 = ($$pre$i$i$i20|0)==(0|0);
    $149 = $phitmp$i$i$i21;
    break;
   }
  }
 } while(0);
 $132 = ($$pre$i3$i$i26|0)==(0|0);
 if ($132) {
  label = 56;
 } else {
  $133 = (($$pre$i3$i$i26) + 12|0);
  $134 = HEAP32[$133>>2]|0;
  $135 = (($$pre$i3$i$i26) + 16|0);
  $136 = HEAP32[$135>>2]|0;
  $137 = ($134|0)==($136|0);
  if ($137) {
   $138 = HEAP32[$$pre$i3$i$i26>>2]|0;
   $139 = (($138) + 36|0);
   $140 = HEAP32[$139>>2]|0;
   $141 = (FUNCTION_TABLE_ii[$140 & 127]($$pre$i3$i$i26)|0);
   $$0$i$i1$i$i24 = $141;
  } else {
   $142 = HEAP32[$134>>2]|0;
   $$0$i$i1$i$i24 = $142;
  }
  $143 = ($$0$i$i1$i$i24|0)==(-1);
  if ($143) {
   label = 56;
  } else {
   if ($149) {
    $$02 = $__r$0;
    STACKTOP = sp;return ($$02|0);
   }
  }
 }
 if ((label|0) == 56) {
  if (!($149)) {
   $$02 = $__r$0;
   STACKTOP = sp;return ($$02|0);
  }
 }
 $144 = HEAP32[$__err>>2]|0;
 $145 = $144 | 2;
 HEAP32[$__err>>2] = $145;
 $$02 = $__r$0;
 STACKTOP = sp;return ($$02|0);
}
function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__b) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(140|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $2 ? $4 : 0;
 $14 = (_realloc($13,$$)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  $16 = (___cxa_allocate_exception(4)|0);
  HEAP32[$16>>2] = ((51368 + 8|0));
  ___cxa_throw(($16|0),(51424|0),(117|0));
  // unreachable;
 }
 if ($2) {
  HEAP32[$__b>>2] = $14;
  $20 = $14;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  HEAP32[$__b>>2] = $14;
  $17 = ($$pr|0)==(0|0);
  if ($17) {
   $20 = $14;
  } else {
   $18 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$18 & 255]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $20 = $$pre;
  }
 }
 HEAP32[$0>>2] = 150;
 $19 = (($20) + ($12)|0);
 HEAP32[$__n>>2] = $19;
 $21 = HEAP32[$__b>>2]|0;
 $22 = (($21) + ($$)|0);
 HEAP32[$__e>>2] = $22;
 STACKTOP = sp;return;
}
function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__b) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(140|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 if ($2) {
  $14 = $4;
 } else {
  $14 = 0;
 }
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  $17 = (___cxa_allocate_exception(4)|0);
  HEAP32[$17>>2] = ((51368 + 8|0));
  ___cxa_throw(($17|0),(51424|0),(117|0));
  // unreachable;
 }
 if ($2) {
  HEAP32[$__b>>2] = $15;
  $22 = $15;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  HEAP32[$__b>>2] = $15;
  $18 = ($$pr|0)==(0|0);
  if ($18) {
   $22 = $15;
  } else {
   $19 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$19 & 255]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $22 = $$pre;
  }
 }
 HEAP32[$0>>2] = 150;
 $20 = $$ >>> 2;
 $21 = (($22) + ($13<<2)|0);
 HEAP32[$__n>>2] = $21;
 $23 = HEAP32[$__b>>2]|0;
 $24 = (($23) + ($20<<2)|0);
 HEAP32[$__e>>2] = $24;
 STACKTOP = sp;return;
}
function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b,$__n,$__e) {
 $__b = $__b|0;
 $__n = $__n|0;
 $__e = $__e|0;
 var $$ = 0, $$pr = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($__b) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)!=(140|0);
 $3 = HEAP32[$__e>>2]|0;
 $4 = HEAP32[$__b>>2]|0;
 $5 = $3;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<(2147483647);
 $9 = $7 << 1;
 $$ = $8 ? $9 : -1;
 $10 = HEAP32[$__n>>2]|0;
 $11 = $10;
 $12 = (($11) - ($6))|0;
 $13 = $12 >> 2;
 if ($2) {
  $14 = $4;
 } else {
  $14 = 0;
 }
 $15 = (_realloc($14,$$)|0);
 $16 = ($15|0)==(0|0);
 if ($16) {
  $17 = (___cxa_allocate_exception(4)|0);
  HEAP32[$17>>2] = ((51368 + 8|0));
  ___cxa_throw(($17|0),(51424|0),(117|0));
  // unreachable;
 }
 if ($2) {
  HEAP32[$__b>>2] = $15;
  $22 = $15;
 } else {
  $$pr = HEAP32[$__b>>2]|0;
  HEAP32[$__b>>2] = $15;
  $18 = ($$pr|0)==(0|0);
  if ($18) {
   $22 = $15;
  } else {
   $19 = HEAP32[$0>>2]|0;
   FUNCTION_TABLE_vi[$19 & 255]($$pr);
   $$pre = HEAP32[$__b>>2]|0;
   $22 = $$pre;
  }
 }
 HEAP32[$0>>2] = 150;
 $20 = $$ >>> 2;
 $21 = (($22) + ($13<<2)|0);
 HEAP32[$__n>>2] = $21;
 $23 = HEAP32[$__b>>2]|0;
 $24 = (($23) + ($20<<2)|0);
 HEAP32[$__e>>2] = $24;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i = 0, $$pre$i = 0, $$pre1$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = (($this) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = (($this) + 8|0);
 HEAP32[$1>>2] = 0;
 $2 = (($this) + 128|0);
 HEAP8[$2>>0] = 0;
 $3 = ($__n|0)==(0);
 if ($3) {
  STACKTOP = sp;return;
 }
 __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n);
 $$pre$i = HEAP32[$0>>2]|0;
 $$0$i = $__n;$5 = $$pre$i;
 while(1) {
  $4 = ($5|0)==(0|0);
  if ($4) {
   $7 = 0;
  } else {
   HEAP32[$5>>2] = 0;
   $$pre1$i = HEAP32[$0>>2]|0;
   $7 = $$pre1$i;
  }
  $6 = (($7) + 4|0);
  HEAP32[$0>>2] = $6;
  $8 = (($$0$i) + -1)|0;
  $9 = ($8|0)==(0);
  if ($9) {
   break;
  } else {
   $$0$i = $8;$5 = $6;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__new_last2$i$i = 0, $scevgep$i$i = 0, $scevgep4$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  STACKTOP = sp;return;
 }
 $2 = (($this) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if (!($4)) {
  $__new_last2$i$i = $0;
  $scevgep$i$i = (($3) + -4|0);
  $5 = $scevgep$i$i;
  $6 = (($5) - ($__new_last2$i$i))|0;
  $7 = $6 >>> 2;
  $8 = $7 ^ -1;
  $scevgep4$i$i = (($3) + ($8<<2)|0);
  HEAP32[$2>>2] = $scevgep4$i$i;
 }
 $9 = (($this) + 16|0);
 $10 = ($9|0)==($0|0);
 if ($10) {
  $11 = (($this) + 128|0);
  HEAP8[$11>>0] = 0;
  STACKTOP = sp;return;
 } else {
  _free($0);
  STACKTOP = sp;return;
 }
}
function ___cxx_global_array_dtor112($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[((47936 + 156|0))>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = HEAP32[((47936 + 164|0))>>2]|0;
  _free($4);
 }
 $5 = HEAP8[((47936 + 144|0))>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if (!($7)) {
  $8 = HEAP32[((47936 + 152|0))>>2]|0;
  _free($8);
 }
 $9 = HEAP8[((47936 + 132|0))>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if (!($11)) {
  $12 = HEAP32[((47936 + 140|0))>>2]|0;
  _free($12);
 }
 $13 = HEAP8[((47936 + 120|0))>>0]|0;
 $14 = $13 & 1;
 $15 = ($14<<24>>24)==(0);
 if (!($15)) {
  $16 = HEAP32[((47936 + 128|0))>>2]|0;
  _free($16);
 }
 $17 = HEAP8[((47936 + 108|0))>>0]|0;
 $18 = $17 & 1;
 $19 = ($18<<24>>24)==(0);
 if (!($19)) {
  $20 = HEAP32[((47936 + 116|0))>>2]|0;
  _free($20);
 }
 $21 = HEAP8[((47936 + 96|0))>>0]|0;
 $22 = $21 & 1;
 $23 = ($22<<24>>24)==(0);
 if (!($23)) {
  $24 = HEAP32[((47936 + 104|0))>>2]|0;
  _free($24);
 }
 $25 = HEAP8[((47936 + 84|0))>>0]|0;
 $26 = $25 & 1;
 $27 = ($26<<24>>24)==(0);
 if (!($27)) {
  $28 = HEAP32[((47936 + 92|0))>>2]|0;
  _free($28);
 }
 $29 = HEAP8[((47936 + 72|0))>>0]|0;
 $30 = $29 & 1;
 $31 = ($30<<24>>24)==(0);
 if (!($31)) {
  $32 = HEAP32[((47936 + 80|0))>>2]|0;
  _free($32);
 }
 $33 = HEAP8[((47936 + 60|0))>>0]|0;
 $34 = $33 & 1;
 $35 = ($34<<24>>24)==(0);
 if (!($35)) {
  $36 = HEAP32[((47936 + 68|0))>>2]|0;
  _free($36);
 }
 $37 = HEAP8[((47936 + 48|0))>>0]|0;
 $38 = $37 & 1;
 $39 = ($38<<24>>24)==(0);
 if (!($39)) {
  $40 = HEAP32[((47936 + 56|0))>>2]|0;
  _free($40);
 }
 $41 = HEAP8[((47936 + 36|0))>>0]|0;
 $42 = $41 & 1;
 $43 = ($42<<24>>24)==(0);
 if (!($43)) {
  $44 = HEAP32[((47936 + 44|0))>>2]|0;
  _free($44);
 }
 $45 = HEAP8[((47936 + 24|0))>>0]|0;
 $46 = $45 & 1;
 $47 = ($46<<24>>24)==(0);
 if (!($47)) {
  $48 = HEAP32[((47936 + 32|0))>>2]|0;
  _free($48);
 }
 $49 = HEAP8[((47936 + 12|0))>>0]|0;
 $50 = $49 & 1;
 $51 = ($50<<24>>24)==(0);
 if (!($51)) {
  $52 = HEAP32[((47936 + 20|0))>>2]|0;
  _free($52);
 }
 $53 = HEAP8[47936>>0]|0;
 $54 = $53 & 1;
 $55 = ($54<<24>>24)==(0);
 if ($55) {
  STACKTOP = sp;return;
 }
 $56 = HEAP32[((47936 + 8|0))>>2]|0;
 _free($56);
 STACKTOP = sp;return;
}
function ___cxx_global_array_dtor97($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[((47400 + 156|0))>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = HEAP32[((47400 + 164|0))>>2]|0;
  _free($4);
 }
 $5 = HEAP8[((47400 + 144|0))>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if (!($7)) {
  $8 = HEAP32[((47400 + 152|0))>>2]|0;
  _free($8);
 }
 $9 = HEAP8[((47400 + 132|0))>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if (!($11)) {
  $12 = HEAP32[((47400 + 140|0))>>2]|0;
  _free($12);
 }
 $13 = HEAP8[((47400 + 120|0))>>0]|0;
 $14 = $13 & 1;
 $15 = ($14<<24>>24)==(0);
 if (!($15)) {
  $16 = HEAP32[((47400 + 128|0))>>2]|0;
  _free($16);
 }
 $17 = HEAP8[((47400 + 108|0))>>0]|0;
 $18 = $17 & 1;
 $19 = ($18<<24>>24)==(0);
 if (!($19)) {
  $20 = HEAP32[((47400 + 116|0))>>2]|0;
  _free($20);
 }
 $21 = HEAP8[((47400 + 96|0))>>0]|0;
 $22 = $21 & 1;
 $23 = ($22<<24>>24)==(0);
 if (!($23)) {
  $24 = HEAP32[((47400 + 104|0))>>2]|0;
  _free($24);
 }
 $25 = HEAP8[((47400 + 84|0))>>0]|0;
 $26 = $25 & 1;
 $27 = ($26<<24>>24)==(0);
 if (!($27)) {
  $28 = HEAP32[((47400 + 92|0))>>2]|0;
  _free($28);
 }
 $29 = HEAP8[((47400 + 72|0))>>0]|0;
 $30 = $29 & 1;
 $31 = ($30<<24>>24)==(0);
 if (!($31)) {
  $32 = HEAP32[((47400 + 80|0))>>2]|0;
  _free($32);
 }
 $33 = HEAP8[((47400 + 60|0))>>0]|0;
 $34 = $33 & 1;
 $35 = ($34<<24>>24)==(0);
 if (!($35)) {
  $36 = HEAP32[((47400 + 68|0))>>2]|0;
  _free($36);
 }
 $37 = HEAP8[((47400 + 48|0))>>0]|0;
 $38 = $37 & 1;
 $39 = ($38<<24>>24)==(0);
 if (!($39)) {
  $40 = HEAP32[((47400 + 56|0))>>2]|0;
  _free($40);
 }
 $41 = HEAP8[((47400 + 36|0))>>0]|0;
 $42 = $41 & 1;
 $43 = ($42<<24>>24)==(0);
 if (!($43)) {
  $44 = HEAP32[((47400 + 44|0))>>2]|0;
  _free($44);
 }
 $45 = HEAP8[((47400 + 24|0))>>0]|0;
 $46 = $45 & 1;
 $47 = ($46<<24>>24)==(0);
 if (!($47)) {
  $48 = HEAP32[((47400 + 32|0))>>2]|0;
  _free($48);
 }
 $49 = HEAP8[((47400 + 12|0))>>0]|0;
 $50 = $49 & 1;
 $51 = ($50<<24>>24)==(0);
 if (!($51)) {
  $52 = HEAP32[((47400 + 20|0))>>2]|0;
  _free($52);
 }
 $53 = HEAP8[47400>>0]|0;
 $54 = $53 & 1;
 $55 = ($54<<24>>24)==(0);
 if ($55) {
  STACKTOP = sp;return;
 }
 $56 = HEAP32[((47400 + 8|0))>>2]|0;
 _free($56);
 STACKTOP = sp;return;
}
function ___cxx_global_array_dtor73($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[((46888 + 276|0))>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = HEAP32[((46888 + 284|0))>>2]|0;
  _free($4);
 }
 $5 = HEAP8[((46888 + 264|0))>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if (!($7)) {
  $8 = HEAP32[((46888 + 272|0))>>2]|0;
  _free($8);
 }
 $9 = HEAP8[((46888 + 252|0))>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if (!($11)) {
  $12 = HEAP32[((46888 + 260|0))>>2]|0;
  _free($12);
 }
 $13 = HEAP8[((46888 + 240|0))>>0]|0;
 $14 = $13 & 1;
 $15 = ($14<<24>>24)==(0);
 if (!($15)) {
  $16 = HEAP32[((46888 + 248|0))>>2]|0;
  _free($16);
 }
 $17 = HEAP8[((46888 + 228|0))>>0]|0;
 $18 = $17 & 1;
 $19 = ($18<<24>>24)==(0);
 if (!($19)) {
  $20 = HEAP32[((46888 + 236|0))>>2]|0;
  _free($20);
 }
 $21 = HEAP8[((46888 + 216|0))>>0]|0;
 $22 = $21 & 1;
 $23 = ($22<<24>>24)==(0);
 if (!($23)) {
  $24 = HEAP32[((46888 + 224|0))>>2]|0;
  _free($24);
 }
 $25 = HEAP8[((46888 + 204|0))>>0]|0;
 $26 = $25 & 1;
 $27 = ($26<<24>>24)==(0);
 if (!($27)) {
  $28 = HEAP32[((46888 + 212|0))>>2]|0;
  _free($28);
 }
 $29 = HEAP8[((46888 + 192|0))>>0]|0;
 $30 = $29 & 1;
 $31 = ($30<<24>>24)==(0);
 if (!($31)) {
  $32 = HEAP32[((46888 + 200|0))>>2]|0;
  _free($32);
 }
 $33 = HEAP8[((46888 + 180|0))>>0]|0;
 $34 = $33 & 1;
 $35 = ($34<<24>>24)==(0);
 if (!($35)) {
  $36 = HEAP32[((46888 + 188|0))>>2]|0;
  _free($36);
 }
 $37 = HEAP8[((46888 + 168|0))>>0]|0;
 $38 = $37 & 1;
 $39 = ($38<<24>>24)==(0);
 if (!($39)) {
  $40 = HEAP32[((46888 + 176|0))>>2]|0;
  _free($40);
 }
 $41 = HEAP8[((46888 + 156|0))>>0]|0;
 $42 = $41 & 1;
 $43 = ($42<<24>>24)==(0);
 if (!($43)) {
  $44 = HEAP32[((46888 + 164|0))>>2]|0;
  _free($44);
 }
 $45 = HEAP8[((46888 + 144|0))>>0]|0;
 $46 = $45 & 1;
 $47 = ($46<<24>>24)==(0);
 if (!($47)) {
  $48 = HEAP32[((46888 + 152|0))>>2]|0;
  _free($48);
 }
 $49 = HEAP8[((46888 + 132|0))>>0]|0;
 $50 = $49 & 1;
 $51 = ($50<<24>>24)==(0);
 if (!($51)) {
  $52 = HEAP32[((46888 + 140|0))>>2]|0;
  _free($52);
 }
 $53 = HEAP8[((46888 + 120|0))>>0]|0;
 $54 = $53 & 1;
 $55 = ($54<<24>>24)==(0);
 if (!($55)) {
  $56 = HEAP32[((46888 + 128|0))>>2]|0;
  _free($56);
 }
 $57 = HEAP8[((46888 + 108|0))>>0]|0;
 $58 = $57 & 1;
 $59 = ($58<<24>>24)==(0);
 if (!($59)) {
  $60 = HEAP32[((46888 + 116|0))>>2]|0;
  _free($60);
 }
 $61 = HEAP8[((46888 + 96|0))>>0]|0;
 $62 = $61 & 1;
 $63 = ($62<<24>>24)==(0);
 if (!($63)) {
  $64 = HEAP32[((46888 + 104|0))>>2]|0;
  _free($64);
 }
 $65 = HEAP8[((46888 + 84|0))>>0]|0;
 $66 = $65 & 1;
 $67 = ($66<<24>>24)==(0);
 if (!($67)) {
  $68 = HEAP32[((46888 + 92|0))>>2]|0;
  _free($68);
 }
 $69 = HEAP8[((46888 + 72|0))>>0]|0;
 $70 = $69 & 1;
 $71 = ($70<<24>>24)==(0);
 if (!($71)) {
  $72 = HEAP32[((46888 + 80|0))>>2]|0;
  _free($72);
 }
 $73 = HEAP8[((46888 + 60|0))>>0]|0;
 $74 = $73 & 1;
 $75 = ($74<<24>>24)==(0);
 if (!($75)) {
  $76 = HEAP32[((46888 + 68|0))>>2]|0;
  _free($76);
 }
 $77 = HEAP8[((46888 + 48|0))>>0]|0;
 $78 = $77 & 1;
 $79 = ($78<<24>>24)==(0);
 if (!($79)) {
  $80 = HEAP32[((46888 + 56|0))>>2]|0;
  _free($80);
 }
 $81 = HEAP8[((46888 + 36|0))>>0]|0;
 $82 = $81 & 1;
 $83 = ($82<<24>>24)==(0);
 if (!($83)) {
  $84 = HEAP32[((46888 + 44|0))>>2]|0;
  _free($84);
 }
 $85 = HEAP8[((46888 + 24|0))>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 if (!($87)) {
  $88 = HEAP32[((46888 + 32|0))>>2]|0;
  _free($88);
 }
 $89 = HEAP8[((46888 + 12|0))>>0]|0;
 $90 = $89 & 1;
 $91 = ($90<<24>>24)==(0);
 if (!($91)) {
  $92 = HEAP32[((46888 + 20|0))>>2]|0;
  _free($92);
 }
 $93 = HEAP8[46888>>0]|0;
 $94 = $93 & 1;
 $95 = ($94<<24>>24)==(0);
 if ($95) {
  STACKTOP = sp;return;
 }
 $96 = HEAP32[((46888 + 8|0))>>2]|0;
 _free($96);
 STACKTOP = sp;return;
}
function ___cxx_global_array_dtor48($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[((46048 + 276|0))>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = HEAP32[((46048 + 284|0))>>2]|0;
  _free($4);
 }
 $5 = HEAP8[((46048 + 264|0))>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if (!($7)) {
  $8 = HEAP32[((46048 + 272|0))>>2]|0;
  _free($8);
 }
 $9 = HEAP8[((46048 + 252|0))>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if (!($11)) {
  $12 = HEAP32[((46048 + 260|0))>>2]|0;
  _free($12);
 }
 $13 = HEAP8[((46048 + 240|0))>>0]|0;
 $14 = $13 & 1;
 $15 = ($14<<24>>24)==(0);
 if (!($15)) {
  $16 = HEAP32[((46048 + 248|0))>>2]|0;
  _free($16);
 }
 $17 = HEAP8[((46048 + 228|0))>>0]|0;
 $18 = $17 & 1;
 $19 = ($18<<24>>24)==(0);
 if (!($19)) {
  $20 = HEAP32[((46048 + 236|0))>>2]|0;
  _free($20);
 }
 $21 = HEAP8[((46048 + 216|0))>>0]|0;
 $22 = $21 & 1;
 $23 = ($22<<24>>24)==(0);
 if (!($23)) {
  $24 = HEAP32[((46048 + 224|0))>>2]|0;
  _free($24);
 }
 $25 = HEAP8[((46048 + 204|0))>>0]|0;
 $26 = $25 & 1;
 $27 = ($26<<24>>24)==(0);
 if (!($27)) {
  $28 = HEAP32[((46048 + 212|0))>>2]|0;
  _free($28);
 }
 $29 = HEAP8[((46048 + 192|0))>>0]|0;
 $30 = $29 & 1;
 $31 = ($30<<24>>24)==(0);
 if (!($31)) {
  $32 = HEAP32[((46048 + 200|0))>>2]|0;
  _free($32);
 }
 $33 = HEAP8[((46048 + 180|0))>>0]|0;
 $34 = $33 & 1;
 $35 = ($34<<24>>24)==(0);
 if (!($35)) {
  $36 = HEAP32[((46048 + 188|0))>>2]|0;
  _free($36);
 }
 $37 = HEAP8[((46048 + 168|0))>>0]|0;
 $38 = $37 & 1;
 $39 = ($38<<24>>24)==(0);
 if (!($39)) {
  $40 = HEAP32[((46048 + 176|0))>>2]|0;
  _free($40);
 }
 $41 = HEAP8[((46048 + 156|0))>>0]|0;
 $42 = $41 & 1;
 $43 = ($42<<24>>24)==(0);
 if (!($43)) {
  $44 = HEAP32[((46048 + 164|0))>>2]|0;
  _free($44);
 }
 $45 = HEAP8[((46048 + 144|0))>>0]|0;
 $46 = $45 & 1;
 $47 = ($46<<24>>24)==(0);
 if (!($47)) {
  $48 = HEAP32[((46048 + 152|0))>>2]|0;
  _free($48);
 }
 $49 = HEAP8[((46048 + 132|0))>>0]|0;
 $50 = $49 & 1;
 $51 = ($50<<24>>24)==(0);
 if (!($51)) {
  $52 = HEAP32[((46048 + 140|0))>>2]|0;
  _free($52);
 }
 $53 = HEAP8[((46048 + 120|0))>>0]|0;
 $54 = $53 & 1;
 $55 = ($54<<24>>24)==(0);
 if (!($55)) {
  $56 = HEAP32[((46048 + 128|0))>>2]|0;
  _free($56);
 }
 $57 = HEAP8[((46048 + 108|0))>>0]|0;
 $58 = $57 & 1;
 $59 = ($58<<24>>24)==(0);
 if (!($59)) {
  $60 = HEAP32[((46048 + 116|0))>>2]|0;
  _free($60);
 }
 $61 = HEAP8[((46048 + 96|0))>>0]|0;
 $62 = $61 & 1;
 $63 = ($62<<24>>24)==(0);
 if (!($63)) {
  $64 = HEAP32[((46048 + 104|0))>>2]|0;
  _free($64);
 }
 $65 = HEAP8[((46048 + 84|0))>>0]|0;
 $66 = $65 & 1;
 $67 = ($66<<24>>24)==(0);
 if (!($67)) {
  $68 = HEAP32[((46048 + 92|0))>>2]|0;
  _free($68);
 }
 $69 = HEAP8[((46048 + 72|0))>>0]|0;
 $70 = $69 & 1;
 $71 = ($70<<24>>24)==(0);
 if (!($71)) {
  $72 = HEAP32[((46048 + 80|0))>>2]|0;
  _free($72);
 }
 $73 = HEAP8[((46048 + 60|0))>>0]|0;
 $74 = $73 & 1;
 $75 = ($74<<24>>24)==(0);
 if (!($75)) {
  $76 = HEAP32[((46048 + 68|0))>>2]|0;
  _free($76);
 }
 $77 = HEAP8[((46048 + 48|0))>>0]|0;
 $78 = $77 & 1;
 $79 = ($78<<24>>24)==(0);
 if (!($79)) {
  $80 = HEAP32[((46048 + 56|0))>>2]|0;
  _free($80);
 }
 $81 = HEAP8[((46048 + 36|0))>>0]|0;
 $82 = $81 & 1;
 $83 = ($82<<24>>24)==(0);
 if (!($83)) {
  $84 = HEAP32[((46048 + 44|0))>>2]|0;
  _free($84);
 }
 $85 = HEAP8[((46048 + 24|0))>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 if (!($87)) {
  $88 = HEAP32[((46048 + 32|0))>>2]|0;
  _free($88);
 }
 $89 = HEAP8[((46048 + 12|0))>>0]|0;
 $90 = $89 & 1;
 $91 = ($90<<24>>24)==(0);
 if (!($91)) {
  $92 = HEAP32[((46048 + 20|0))>>2]|0;
  _free($92);
 }
 $93 = HEAP8[46048>>0]|0;
 $94 = $93 & 1;
 $95 = ($94<<24>>24)==(0);
 if ($95) {
  STACKTOP = sp;return;
 }
 $96 = HEAP32[((46048 + 8|0))>>2]|0;
 _free($96);
 STACKTOP = sp;return;
}
function ___cxx_global_array_dtor45($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[((45736 + 276|0))>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = HEAP32[((45736 + 284|0))>>2]|0;
  _free($4);
 }
 $5 = HEAP8[((45736 + 264|0))>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if (!($7)) {
  $8 = HEAP32[((45736 + 272|0))>>2]|0;
  _free($8);
 }
 $9 = HEAP8[((45736 + 252|0))>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if (!($11)) {
  $12 = HEAP32[((45736 + 260|0))>>2]|0;
  _free($12);
 }
 $13 = HEAP8[((45736 + 240|0))>>0]|0;
 $14 = $13 & 1;
 $15 = ($14<<24>>24)==(0);
 if (!($15)) {
  $16 = HEAP32[((45736 + 248|0))>>2]|0;
  _free($16);
 }
 $17 = HEAP8[((45736 + 228|0))>>0]|0;
 $18 = $17 & 1;
 $19 = ($18<<24>>24)==(0);
 if (!($19)) {
  $20 = HEAP32[((45736 + 236|0))>>2]|0;
  _free($20);
 }
 $21 = HEAP8[((45736 + 216|0))>>0]|0;
 $22 = $21 & 1;
 $23 = ($22<<24>>24)==(0);
 if (!($23)) {
  $24 = HEAP32[((45736 + 224|0))>>2]|0;
  _free($24);
 }
 $25 = HEAP8[((45736 + 204|0))>>0]|0;
 $26 = $25 & 1;
 $27 = ($26<<24>>24)==(0);
 if (!($27)) {
  $28 = HEAP32[((45736 + 212|0))>>2]|0;
  _free($28);
 }
 $29 = HEAP8[((45736 + 192|0))>>0]|0;
 $30 = $29 & 1;
 $31 = ($30<<24>>24)==(0);
 if (!($31)) {
  $32 = HEAP32[((45736 + 200|0))>>2]|0;
  _free($32);
 }
 $33 = HEAP8[((45736 + 180|0))>>0]|0;
 $34 = $33 & 1;
 $35 = ($34<<24>>24)==(0);
 if (!($35)) {
  $36 = HEAP32[((45736 + 188|0))>>2]|0;
  _free($36);
 }
 $37 = HEAP8[((45736 + 168|0))>>0]|0;
 $38 = $37 & 1;
 $39 = ($38<<24>>24)==(0);
 if (!($39)) {
  $40 = HEAP32[((45736 + 176|0))>>2]|0;
  _free($40);
 }
 $41 = HEAP8[((45736 + 156|0))>>0]|0;
 $42 = $41 & 1;
 $43 = ($42<<24>>24)==(0);
 if (!($43)) {
  $44 = HEAP32[((45736 + 164|0))>>2]|0;
  _free($44);
 }
 $45 = HEAP8[((45736 + 144|0))>>0]|0;
 $46 = $45 & 1;
 $47 = ($46<<24>>24)==(0);
 if (!($47)) {
  $48 = HEAP32[((45736 + 152|0))>>2]|0;
  _free($48);
 }
 $49 = HEAP8[((45736 + 132|0))>>0]|0;
 $50 = $49 & 1;
 $51 = ($50<<24>>24)==(0);
 if (!($51)) {
  $52 = HEAP32[((45736 + 140|0))>>2]|0;
  _free($52);
 }
 $53 = HEAP8[((45736 + 120|0))>>0]|0;
 $54 = $53 & 1;
 $55 = ($54<<24>>24)==(0);
 if (!($55)) {
  $56 = HEAP32[((45736 + 128|0))>>2]|0;
  _free($56);
 }
 $57 = HEAP8[((45736 + 108|0))>>0]|0;
 $58 = $57 & 1;
 $59 = ($58<<24>>24)==(0);
 if (!($59)) {
  $60 = HEAP32[((45736 + 116|0))>>2]|0;
  _free($60);
 }
 $61 = HEAP8[((45736 + 96|0))>>0]|0;
 $62 = $61 & 1;
 $63 = ($62<<24>>24)==(0);
 if (!($63)) {
  $64 = HEAP32[((45736 + 104|0))>>2]|0;
  _free($64);
 }
 $65 = HEAP8[((45736 + 84|0))>>0]|0;
 $66 = $65 & 1;
 $67 = ($66<<24>>24)==(0);
 if (!($67)) {
  $68 = HEAP32[((45736 + 92|0))>>2]|0;
  _free($68);
 }
 $69 = HEAP8[((45736 + 72|0))>>0]|0;
 $70 = $69 & 1;
 $71 = ($70<<24>>24)==(0);
 if (!($71)) {
  $72 = HEAP32[((45736 + 80|0))>>2]|0;
  _free($72);
 }
 $73 = HEAP8[((45736 + 60|0))>>0]|0;
 $74 = $73 & 1;
 $75 = ($74<<24>>24)==(0);
 if (!($75)) {
  $76 = HEAP32[((45736 + 68|0))>>2]|0;
  _free($76);
 }
 $77 = HEAP8[((45736 + 48|0))>>0]|0;
 $78 = $77 & 1;
 $79 = ($78<<24>>24)==(0);
 if (!($79)) {
  $80 = HEAP32[((45736 + 56|0))>>2]|0;
  _free($80);
 }
 $81 = HEAP8[((45736 + 36|0))>>0]|0;
 $82 = $81 & 1;
 $83 = ($82<<24>>24)==(0);
 if (!($83)) {
  $84 = HEAP32[((45736 + 44|0))>>2]|0;
  _free($84);
 }
 $85 = HEAP8[((45736 + 24|0))>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 if (!($87)) {
  $88 = HEAP32[((45736 + 32|0))>>2]|0;
  _free($88);
 }
 $89 = HEAP8[((45736 + 12|0))>>0]|0;
 $90 = $89 & 1;
 $91 = ($90<<24>>24)==(0);
 if (!($91)) {
  $92 = HEAP32[((45736 + 20|0))>>2]|0;
  _free($92);
 }
 $93 = HEAP8[45736>>0]|0;
 $94 = $93 & 1;
 $95 = ($94<<24>>24)==(0);
 if ($95) {
  STACKTOP = sp;return;
 }
 $96 = HEAP32[((45736 + 8|0))>>2]|0;
 _free($96);
 STACKTOP = sp;return;
}
function ___cxx_global_array_dtor($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[((45408 + 276|0))>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = HEAP32[((45408 + 284|0))>>2]|0;
  _free($4);
 }
 $5 = HEAP8[((45408 + 264|0))>>0]|0;
 $6 = $5 & 1;
 $7 = ($6<<24>>24)==(0);
 if (!($7)) {
  $8 = HEAP32[((45408 + 272|0))>>2]|0;
  _free($8);
 }
 $9 = HEAP8[((45408 + 252|0))>>0]|0;
 $10 = $9 & 1;
 $11 = ($10<<24>>24)==(0);
 if (!($11)) {
  $12 = HEAP32[((45408 + 260|0))>>2]|0;
  _free($12);
 }
 $13 = HEAP8[((45408 + 240|0))>>0]|0;
 $14 = $13 & 1;
 $15 = ($14<<24>>24)==(0);
 if (!($15)) {
  $16 = HEAP32[((45408 + 248|0))>>2]|0;
  _free($16);
 }
 $17 = HEAP8[((45408 + 228|0))>>0]|0;
 $18 = $17 & 1;
 $19 = ($18<<24>>24)==(0);
 if (!($19)) {
  $20 = HEAP32[((45408 + 236|0))>>2]|0;
  _free($20);
 }
 $21 = HEAP8[((45408 + 216|0))>>0]|0;
 $22 = $21 & 1;
 $23 = ($22<<24>>24)==(0);
 if (!($23)) {
  $24 = HEAP32[((45408 + 224|0))>>2]|0;
  _free($24);
 }
 $25 = HEAP8[((45408 + 204|0))>>0]|0;
 $26 = $25 & 1;
 $27 = ($26<<24>>24)==(0);
 if (!($27)) {
  $28 = HEAP32[((45408 + 212|0))>>2]|0;
  _free($28);
 }
 $29 = HEAP8[((45408 + 192|0))>>0]|0;
 $30 = $29 & 1;
 $31 = ($30<<24>>24)==(0);
 if (!($31)) {
  $32 = HEAP32[((45408 + 200|0))>>2]|0;
  _free($32);
 }
 $33 = HEAP8[((45408 + 180|0))>>0]|0;
 $34 = $33 & 1;
 $35 = ($34<<24>>24)==(0);
 if (!($35)) {
  $36 = HEAP32[((45408 + 188|0))>>2]|0;
  _free($36);
 }
 $37 = HEAP8[((45408 + 168|0))>>0]|0;
 $38 = $37 & 1;
 $39 = ($38<<24>>24)==(0);
 if (!($39)) {
  $40 = HEAP32[((45408 + 176|0))>>2]|0;
  _free($40);
 }
 $41 = HEAP8[((45408 + 156|0))>>0]|0;
 $42 = $41 & 1;
 $43 = ($42<<24>>24)==(0);
 if (!($43)) {
  $44 = HEAP32[((45408 + 164|0))>>2]|0;
  _free($44);
 }
 $45 = HEAP8[((45408 + 144|0))>>0]|0;
 $46 = $45 & 1;
 $47 = ($46<<24>>24)==(0);
 if (!($47)) {
  $48 = HEAP32[((45408 + 152|0))>>2]|0;
  _free($48);
 }
 $49 = HEAP8[((45408 + 132|0))>>0]|0;
 $50 = $49 & 1;
 $51 = ($50<<24>>24)==(0);
 if (!($51)) {
  $52 = HEAP32[((45408 + 140|0))>>2]|0;
  _free($52);
 }
 $53 = HEAP8[((45408 + 120|0))>>0]|0;
 $54 = $53 & 1;
 $55 = ($54<<24>>24)==(0);
 if (!($55)) {
  $56 = HEAP32[((45408 + 128|0))>>2]|0;
  _free($56);
 }
 $57 = HEAP8[((45408 + 108|0))>>0]|0;
 $58 = $57 & 1;
 $59 = ($58<<24>>24)==(0);
 if (!($59)) {
  $60 = HEAP32[((45408 + 116|0))>>2]|0;
  _free($60);
 }
 $61 = HEAP8[((45408 + 96|0))>>0]|0;
 $62 = $61 & 1;
 $63 = ($62<<24>>24)==(0);
 if (!($63)) {
  $64 = HEAP32[((45408 + 104|0))>>2]|0;
  _free($64);
 }
 $65 = HEAP8[((45408 + 84|0))>>0]|0;
 $66 = $65 & 1;
 $67 = ($66<<24>>24)==(0);
 if (!($67)) {
  $68 = HEAP32[((45408 + 92|0))>>2]|0;
  _free($68);
 }
 $69 = HEAP8[((45408 + 72|0))>>0]|0;
 $70 = $69 & 1;
 $71 = ($70<<24>>24)==(0);
 if (!($71)) {
  $72 = HEAP32[((45408 + 80|0))>>2]|0;
  _free($72);
 }
 $73 = HEAP8[((45408 + 60|0))>>0]|0;
 $74 = $73 & 1;
 $75 = ($74<<24>>24)==(0);
 if (!($75)) {
  $76 = HEAP32[((45408 + 68|0))>>2]|0;
  _free($76);
 }
 $77 = HEAP8[((45408 + 48|0))>>0]|0;
 $78 = $77 & 1;
 $79 = ($78<<24>>24)==(0);
 if (!($79)) {
  $80 = HEAP32[((45408 + 56|0))>>2]|0;
  _free($80);
 }
 $81 = HEAP8[((45408 + 36|0))>>0]|0;
 $82 = $81 & 1;
 $83 = ($82<<24>>24)==(0);
 if (!($83)) {
  $84 = HEAP32[((45408 + 44|0))>>2]|0;
  _free($84);
 }
 $85 = HEAP8[((45408 + 24|0))>>0]|0;
 $86 = $85 & 1;
 $87 = ($86<<24>>24)==(0);
 if (!($87)) {
  $88 = HEAP32[((45408 + 32|0))>>2]|0;
  _free($88);
 }
 $89 = HEAP8[((45408 + 12|0))>>0]|0;
 $90 = $89 & 1;
 $91 = ($90<<24>>24)==(0);
 if (!($91)) {
  $92 = HEAP32[((45408 + 20|0))>>2]|0;
  _free($92);
 }
 $93 = HEAP8[45408>>0]|0;
 $94 = $93 & 1;
 $95 = ($94<<24>>24)==(0);
 if ($95) {
  STACKTOP = sp;return;
 }
 $96 = HEAP32[((45408 + 8|0))>>2]|0;
 _free($96);
 STACKTOP = sp;return;
}
function __ZNSt3__110__stdinbufIwE9__getcharEb($this,$__consume) {
 $this = $this|0;
 $__consume = $__consume|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$09 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__extbuf = sp + 16|0;
 $__1buf = sp + 8|0;
 $__enxt = sp + 4|0;
 $__inxt = sp;
 $0 = (($this) + 52|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = (($this) + 48|0);
  $4 = HEAP32[$3>>2]|0;
  if (!($__consume)) {
   $$0 = $4;
   STACKTOP = sp;return ($$0|0);
  }
  HEAP32[$3>>2] = -1;
  HEAP8[$0>>0] = 0;
  $$0 = $4;
  STACKTOP = sp;return ($$0|0);
 }
 $5 = (($this) + 44|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)>(1);
 $8 = $7 ? $6 : 1;
 $9 = ($8|0)>(0);
 L8: do {
  if ($9) {
   $10 = (($this) + 32|0);
   $__i$09 = 0;
   while(1) {
    $11 = HEAP32[$10>>2]|0;
    $12 = (_getc(($11|0))|0);
    $13 = ($12|0)==(-1);
    if ($13) {
     $$0 = -1;
     break;
    }
    $14 = $12&255;
    $15 = (($__extbuf) + ($__i$09)|0);
    HEAP8[$15>>0] = $14;
    $16 = (($__i$09) + 1)|0;
    $17 = ($16|0)<($8|0);
    if ($17) {
     $__i$09 = $16;
    } else {
     break L8;
    }
   }
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 $18 = (($this) + 53|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)==(0);
 L15: do {
  if ($20) {
   $21 = (($this) + 40|0);
   $22 = (($this) + 36|0);
   $23 = (($__1buf) + 4|0);
   $24 = (($this) + 32|0);
   $__nread$0 = $8;
   while(1) {
    $27 = HEAP32[$21>>2]|0;
    $28 = $27;
    $29 = $28;
    $30 = HEAP32[$29>>2]|0;
    $31 = (($28) + 4)|0;
    $32 = $31;
    $33 = HEAP32[$32>>2]|0;
    $34 = HEAP32[$22>>2]|0;
    $35 = (($__extbuf) + ($__nread$0)|0);
    $36 = HEAP32[$34>>2]|0;
    $37 = (($36) + 16|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = (FUNCTION_TABLE_iiiiiiiii[$38 & 15]($34,$27,$__extbuf,$35,$__enxt,$__1buf,$23,$__inxt)|0);
    if ((($39|0) == 3)) {
     label = 14;
     break;
    } else if ((($39|0) == 2)) {
     $$0 = -1;
     label = 22;
     break;
    } else if (!((($39|0) == 1))) {
     $__nread$2 = $__nread$0;
     break L15;
    }
    $40 = HEAP32[$21>>2]|0;
    $41 = $40;
    $42 = $41;
    HEAP32[$42>>2] = $30;
    $43 = (($41) + 4)|0;
    $44 = $43;
    HEAP32[$44>>2] = $33;
    $45 = ($__nread$0|0)==(8);
    if ($45) {
     $$0 = -1;
     label = 22;
     break;
    }
    $46 = HEAP32[$24>>2]|0;
    $47 = (_getc(($46|0))|0);
    $48 = ($47|0)==(-1);
    if ($48) {
     $$0 = -1;
     label = 22;
     break;
    }
    $51 = $47&255;
    HEAP8[$35>>0] = $51;
    $52 = (($__nread$0) + 1)|0;
    $__nread$0 = $52;
   }
   if ((label|0) == 14) {
    $49 = HEAP8[$__extbuf>>0]|0;
    $50 = $49 << 24 >> 24;
    HEAP32[$__1buf>>2] = $50;
    $__nread$2 = $__nread$0;
    break;
   }
   else if ((label|0) == 22) {
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $25 = HEAP8[$__extbuf>>0]|0;
   $26 = $25 << 24 >> 24;
   HEAP32[$__1buf>>2] = $26;
   $__nread$2 = $8;
  }
 } while(0);
 if ($__consume) {
  $62 = HEAP32[$__1buf>>2]|0;
  $63 = (($this) + 48|0);
  HEAP32[$63>>2] = $62;
  $$0 = $62;
  STACKTOP = sp;return ($$0|0);
 }
 $53 = (($this) + 32|0);
 $__i2$0 = $__nread$2;
 while(1) {
  $54 = ($__i2$0|0)>(0);
  if (!($54)) {
   break;
  }
  $55 = (($__i2$0) + -1)|0;
  $56 = (($__extbuf) + ($55)|0);
  $57 = HEAP8[$56>>0]|0;
  $58 = $57 << 24 >> 24;
  $59 = HEAP32[$53>>2]|0;
  $60 = (_ungetc(($58|0),($59|0))|0);
  $61 = ($60|0)==(-1);
  if ($61) {
   $$0 = -1;
   label = 22;
   break;
  } else {
   $__i2$0 = $55;
  }
 }
 if ((label|0) == 22) {
  STACKTOP = sp;return ($$0|0);
 }
 $$pre = HEAP32[$__1buf>>2]|0;
 $$0 = $$pre;
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__110__stdinbufIcE9__getcharEb($this,$__consume) {
 $this = $this|0;
 $__consume = $__consume|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$09 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $__extbuf = sp + 16|0;
 $__1buf = sp + 8|0;
 $__enxt = sp + 4|0;
 $__inxt = sp;
 $0 = (($this) + 52|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = (($this) + 48|0);
  $4 = HEAP32[$3>>2]|0;
  if (!($__consume)) {
   $$0 = $4;
   STACKTOP = sp;return ($$0|0);
  }
  HEAP32[$3>>2] = -1;
  HEAP8[$0>>0] = 0;
  $$0 = $4;
  STACKTOP = sp;return ($$0|0);
 }
 $5 = (($this) + 44|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)>(1);
 $8 = $7 ? $6 : 1;
 $9 = ($8|0)>(0);
 L8: do {
  if ($9) {
   $10 = (($this) + 32|0);
   $__i$09 = 0;
   while(1) {
    $11 = HEAP32[$10>>2]|0;
    $12 = (_getc(($11|0))|0);
    $13 = ($12|0)==(-1);
    if ($13) {
     $$0 = -1;
     break;
    }
    $14 = $12&255;
    $15 = (($__extbuf) + ($__i$09)|0);
    HEAP8[$15>>0] = $14;
    $16 = (($__i$09) + 1)|0;
    $17 = ($16|0)<($8|0);
    if ($17) {
     $__i$09 = $16;
    } else {
     break L8;
    }
   }
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 $18 = (($this) + 53|0);
 $19 = HEAP8[$18>>0]|0;
 $20 = ($19<<24>>24)==(0);
 L15: do {
  if ($20) {
   $21 = (($this) + 40|0);
   $22 = (($this) + 36|0);
   $23 = (($__1buf) + 1|0);
   $24 = (($this) + 32|0);
   $__nread$0 = $8;
   while(1) {
    $26 = HEAP32[$21>>2]|0;
    $27 = $26;
    $28 = $27;
    $29 = HEAP32[$28>>2]|0;
    $30 = (($27) + 4)|0;
    $31 = $30;
    $32 = HEAP32[$31>>2]|0;
    $33 = HEAP32[$22>>2]|0;
    $34 = (($__extbuf) + ($__nread$0)|0);
    $35 = HEAP32[$33>>2]|0;
    $36 = (($35) + 16|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = (FUNCTION_TABLE_iiiiiiiii[$37 & 15]($33,$26,$__extbuf,$34,$__enxt,$__1buf,$23,$__inxt)|0);
    if ((($38|0) == 3)) {
     label = 14;
     break;
    } else if ((($38|0) == 2)) {
     $$0 = -1;
     label = 23;
     break;
    } else if (!((($38|0) == 1))) {
     $__nread$2 = $__nread$0;
     break L15;
    }
    $39 = HEAP32[$21>>2]|0;
    $40 = $39;
    $41 = $40;
    HEAP32[$41>>2] = $29;
    $42 = (($40) + 4)|0;
    $43 = $42;
    HEAP32[$43>>2] = $32;
    $44 = ($__nread$0|0)==(8);
    if ($44) {
     $$0 = -1;
     label = 23;
     break;
    }
    $45 = HEAP32[$24>>2]|0;
    $46 = (_getc(($45|0))|0);
    $47 = ($46|0)==(-1);
    if ($47) {
     $$0 = -1;
     label = 23;
     break;
    }
    $49 = $46&255;
    HEAP8[$34>>0] = $49;
    $50 = (($__nread$0) + 1)|0;
    $__nread$0 = $50;
   }
   if ((label|0) == 14) {
    $48 = HEAP8[$__extbuf>>0]|0;
    HEAP8[$__1buf>>0] = $48;
    $__nread$2 = $__nread$0;
    break;
   }
   else if ((label|0) == 23) {
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $25 = HEAP8[$__extbuf>>0]|0;
   HEAP8[$__1buf>>0] = $25;
   $__nread$2 = $8;
  }
 } while(0);
 do {
  if ($__consume) {
   $60 = HEAP8[$__1buf>>0]|0;
   $61 = $60&255;
   $62 = (($this) + 48|0);
   HEAP32[$62>>2] = $61;
   $64 = $60;
  } else {
   $51 = (($this) + 32|0);
   $__i2$0 = $__nread$2;
   while(1) {
    $52 = ($__i2$0|0)>(0);
    if (!($52)) {
     label = 21;
     break;
    }
    $53 = (($__i2$0) + -1)|0;
    $54 = (($__extbuf) + ($53)|0);
    $55 = HEAP8[$54>>0]|0;
    $56 = $55&255;
    $57 = HEAP32[$51>>2]|0;
    $58 = (_ungetc(($56|0),($57|0))|0);
    $59 = ($58|0)==(-1);
    if ($59) {
     $$0 = -1;
     label = 23;
     break;
    } else {
     $__i2$0 = $53;
    }
   }
   if ((label|0) == 21) {
    $$pre = HEAP8[$__1buf>>0]|0;
    $64 = $$pre;
    break;
   }
   else if ((label|0) == 23) {
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 $63 = $64&255;
 $$0 = $63;
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 if ($0) {
  HEAP32[$__err>>2] = 4;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $1 = (___errno_location()|0);
 $2 = HEAP32[$1>>2]|0;
 HEAP32[$1>>2] = 0;
 (__ZNSt3__16__clocEv()|0);
 $3 = (_strtoll($__a,$__p2,$__base)|0);
 $4 = tempRet0;
 $5 = HEAP32[$1>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  HEAP32[$1>>2] = $2;
 }
 $7 = HEAP32[$__p2>>2]|0;
 $8 = ($7|0)==($__a_end|0);
 if (!($8)) {
  HEAP32[$__err>>2] = 4;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $9 = ($5|0)==(34);
 do {
  if ($9) {
   HEAP32[$__err>>2] = 4;
   $20 = ($4|0)>(0);
   $21 = ($3>>>0)>(0);
   $22 = ($4|0)==(0);
   $23 = $22 & $21;
   $24 = $20 | $23;
   if ($24) {
    $$0 = 2147483647;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $10 = ($4|0)<(-1);
   $11 = ($3>>>0)<(2147483648);
   $12 = ($4|0)==(-1);
   $13 = $12 & $11;
   $14 = $10 | $13;
   if ($14) {
    HEAP32[$__err>>2] = 4;
    break;
   }
   $15 = ($4|0)>(0);
   $16 = ($3>>>0)>(2147483647);
   $17 = ($4|0)==(0);
   $18 = $17 & $16;
   $19 = $15 | $18;
   if ($19) {
    HEAP32[$__err>>2] = 4;
    $$0 = 2147483647;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$0 = $3;
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 $$0 = -2147483648;
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 if ($0) {
  HEAP32[$__err>>2] = 4;
  $17 = 0;$18 = 0;
  tempRet0 = $17;
  STACKTOP = sp;return ($18|0);
 }
 $1 = (___errno_location()|0);
 $2 = HEAP32[$1>>2]|0;
 HEAP32[$1>>2] = 0;
 (__ZNSt3__16__clocEv()|0);
 $3 = (_strtoll($__a,$__p2,$__base)|0);
 $4 = tempRet0;
 $5 = HEAP32[$1>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  HEAP32[$1>>2] = $2;
 }
 $7 = HEAP32[$__p2>>2]|0;
 $8 = ($7|0)==($__a_end|0);
 if (!($8)) {
  HEAP32[$__err>>2] = 4;
  $17 = 0;$18 = 0;
  tempRet0 = $17;
  STACKTOP = sp;return ($18|0);
 }
 $9 = ($5|0)==(34);
 if ($9) {
  HEAP32[$__err>>2] = 4;
  $10 = ($4|0)>(0);
  $11 = ($3>>>0)>(0);
  $12 = ($4|0)==(0);
  $13 = $12 & $11;
  $14 = $10 | $13;
  $15 = $14 ? -1 : 0;
  $16 = $14 ? 2147483647 : -2147483648;
  tempRet0 = $16;
  STACKTOP = sp;return ($15|0);
 } else {
  $17 = $4;$18 = $3;
  tempRet0 = $17;
  STACKTOP = sp;return ($18|0);
 }
 return (0)|0;
}
function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 if ($0) {
  HEAP32[$__err>>2] = 4;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $1 = HEAP8[$__a>>0]|0;
 $2 = ($1<<24>>24)==(45);
 if ($2) {
  HEAP32[$__err>>2] = 4;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = (___errno_location()|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$3>>2] = 0;
 (__ZNSt3__16__clocEv()|0);
 $5 = (_strtoull($__a,$__p2,$__base)|0);
 $6 = tempRet0;
 $7 = HEAP32[$3>>2]|0;
 $8 = ($7|0)==(0);
 if ($8) {
  HEAP32[$3>>2] = $4;
 }
 $9 = HEAP32[$__p2>>2]|0;
 $10 = ($9|0)==($__a_end|0);
 if (!($10)) {
  HEAP32[$__err>>2] = 4;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $11 = ($7|0)==(34);
 $12 = ($6>>>0)>(0);
 $13 = ($5>>>0)>(65535);
 $14 = ($6|0)==(0);
 $15 = $14 & $13;
 $16 = $12 | $15;
 $or$cond = $11 | $16;
 if ($or$cond) {
  HEAP32[$__err>>2] = 4;
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 } else {
  $17 = $5&65535;
  $$0 = $17;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 if ($0) {
  HEAP32[$__err>>2] = 4;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $1 = HEAP8[$__a>>0]|0;
 $2 = ($1<<24>>24)==(45);
 if ($2) {
  HEAP32[$__err>>2] = 4;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = (___errno_location()|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$3>>2] = 0;
 (__ZNSt3__16__clocEv()|0);
 $5 = (_strtoull($__a,$__p2,$__base)|0);
 $6 = tempRet0;
 $7 = HEAP32[$3>>2]|0;
 $8 = ($7|0)==(0);
 if ($8) {
  HEAP32[$3>>2] = $4;
 }
 $9 = HEAP32[$__p2>>2]|0;
 $10 = ($9|0)==($__a_end|0);
 if (!($10)) {
  HEAP32[$__err>>2] = 4;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $11 = ($7|0)==(34);
 $12 = ($6>>>0)>(0);
 $13 = ($5>>>0)>(4294967295);
 $14 = ($6|0)==(0);
 $15 = $14 & $13;
 $16 = $12 | $15;
 $or$cond = $11 | $16;
 if ($or$cond) {
  HEAP32[$__err>>2] = 4;
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 } else {
  $$0 = $5;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 if ($0) {
  HEAP32[$__err>>2] = 4;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $1 = HEAP8[$__a>>0]|0;
 $2 = ($1<<24>>24)==(45);
 if ($2) {
  HEAP32[$__err>>2] = 4;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = (___errno_location()|0);
 $4 = HEAP32[$3>>2]|0;
 HEAP32[$3>>2] = 0;
 (__ZNSt3__16__clocEv()|0);
 $5 = (_strtoull($__a,$__p2,$__base)|0);
 $6 = tempRet0;
 $7 = HEAP32[$3>>2]|0;
 $8 = ($7|0)==(0);
 if ($8) {
  HEAP32[$3>>2] = $4;
 }
 $9 = HEAP32[$__p2>>2]|0;
 $10 = ($9|0)==($__a_end|0);
 if (!($10)) {
  HEAP32[$__err>>2] = 4;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $11 = ($7|0)==(34);
 $12 = ($6>>>0)>(0);
 $13 = ($5>>>0)>(4294967295);
 $14 = ($6|0)==(0);
 $15 = $14 & $13;
 $16 = $12 | $15;
 $or$cond = $11 | $16;
 if ($or$cond) {
  HEAP32[$__err>>2] = 4;
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 } else {
  $$0 = $5;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a,$__a_end,$__err,$__base) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 $__base = $__base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $12 = 0;$13 = 0;
  } else {
   $1 = HEAP8[$__a>>0]|0;
   $2 = ($1<<24>>24)==(45);
   if ($2) {
    HEAP32[$__err>>2] = 4;
    $12 = 0;$13 = 0;
    break;
   }
   $3 = (___errno_location()|0);
   $4 = HEAP32[$3>>2]|0;
   HEAP32[$3>>2] = 0;
   (__ZNSt3__16__clocEv()|0);
   $5 = (_strtoull($__a,$__p2,$__base)|0);
   $6 = tempRet0;
   $7 = HEAP32[$3>>2]|0;
   $8 = ($7|0)==(0);
   if ($8) {
    HEAP32[$3>>2] = $4;
   }
   $9 = HEAP32[$__p2>>2]|0;
   $10 = ($9|0)==($__a_end|0);
   if (!($10)) {
    HEAP32[$__err>>2] = 4;
    $12 = 0;$13 = 0;
    break;
   }
   $11 = ($7|0)==(34);
   if ($11) {
    HEAP32[$__err>>2] = 4;
    $12 = -1;$13 = -1;
   } else {
    $12 = $6;$13 = $5;
   }
  }
 } while(0);
 tempRet0 = $12;
 STACKTOP = sp;return ($13|0);
}
function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 if ($0) {
  HEAP32[$__err>>2] = 4;
  $$0 = 0.0;
  STACKTOP = sp;return (+$$0);
 }
 $1 = (___errno_location()|0);
 $2 = HEAP32[$1>>2]|0;
 HEAP32[$1>>2] = 0;
 (__ZNSt3__16__clocEv()|0);
 $3 = (+_strtold_l($__a,$__p2));
 $4 = HEAP32[$1>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  HEAP32[$1>>2] = $2;
 }
 $6 = HEAP32[$__p2>>2]|0;
 $7 = ($6|0)==($__a_end|0);
 if (!($7)) {
  HEAP32[$__err>>2] = 4;
  $$0 = 0.0;
  STACKTOP = sp;return (+$$0);
 }
 $8 = ($4|0)==(34);
 if ($8) {
  HEAP32[$__err>>2] = 4;
 }
 $9 = $3;
 $$0 = $9;
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   (__ZNSt3__16__clocEv()|0);
   $3 = (+_strtold_l($__a,$__p2));
   $4 = HEAP32[$1>>2]|0;
   $5 = ($4|0)==(0);
   if ($5) {
    HEAP32[$1>>2] = $2;
   }
   $6 = HEAP32[$__p2>>2]|0;
   $7 = ($6|0)==($__a_end|0);
   if (!($7)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $8 = ($4|0)==(34);
   if ($8) {
    HEAP32[$__err>>2] = 4;
    $$0 = $3;
   } else {
    $$0 = $3;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a,$__a_end,$__err) {
 $__a = $__a|0;
 $__a_end = $__a_end|0;
 $__err = $__err|0;
 var $$0 = 0.0, $0 = 0, $1 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $__p2 = sp;
 $0 = ($__a|0)==($__a_end|0);
 do {
  if ($0) {
   HEAP32[$__err>>2] = 4;
   $$0 = 0.0;
  } else {
   $1 = (___errno_location()|0);
   $2 = HEAP32[$1>>2]|0;
   HEAP32[$1>>2] = 0;
   (__ZNSt3__16__clocEv()|0);
   $3 = (+_strtold_l($__a,$__p2));
   $4 = HEAP32[$1>>2]|0;
   $5 = ($4|0)==(0);
   if ($5) {
    HEAP32[$1>>2] = $2;
   }
   $6 = HEAP32[$__p2>>2]|0;
   $7 = ($6|0)==($__a_end|0);
   if (!($7)) {
    HEAP32[$__err>>2] = 4;
    $$0 = 0.0;
    break;
   }
   $8 = ($4|0)==(34);
   if ($8) {
    HEAP32[$__err>>2] = 4;
    $$0 = $3;
   } else {
    $$0 = $3;
   }
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this,$__n) {
 $this = $this|0;
 $__n = $__n|0;
 var $$0$i$i = 0, $$not$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__n>>>0)>(1073741823);
 if ($0) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $1 = (($this) + 128|0);
 $2 = HEAP8[$1>>0]|0;
 $$not$i$i = ($2<<24>>24)==(0);
 $3 = ($__n>>>0)<(29);
 $or$cond$i$i = $$not$i$i & $3;
 if ($or$cond$i$i) {
  $4 = (($this) + 16|0);
  HEAP8[$1>>0] = 1;
  $$0$i$i = $4;
 } else {
  $5 = $__n << 2;
  $6 = (__Znwj($5)|0);
  $$0$i$i = $6;
 }
 $7 = (($this) + 4|0);
 HEAP32[$7>>2] = $$0$i$i;
 HEAP32[$this>>2] = $$0$i$i;
 $8 = (($$0$i$i) + ($__n<<2)|0);
 $9 = (($this) + 8|0);
 HEAP32[$9>>2] = $8;
 STACKTOP = sp;return;
}
function _mbrtowc($wc,$src,$n,$st) {
 $wc = $wc|0;
 $src = $src|0;
 $n = $n|0;
 $st = $st|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c$0 = 0, $c$1 = 0, $c$2 = 0, $s$0 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $0 = sp;
 HEAP32[$0>>2] = $wc;
 $1 = ($st|0)==(0|0);
 $$01 = $1 ? 48464 : $st;
 $2 = HEAP32[$$01>>2]|0;
 $3 = ($src|0)==(0|0);
 L1: do {
  if ($3) {
   $4 = ($2|0)==(0);
   if ($4) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  } else {
   $5 = ($wc|0)==(0|0);
   if ($5) {
    HEAP32[$0>>2] = $0;
    $11 = $0;
   } else {
    $11 = $wc;
   }
   $6 = ($n|0)==(0);
   if ($6) {
    $$0 = -2;
    STACKTOP = sp;return ($$0|0);
   }
   $7 = ($2|0)==(0);
   do {
    if ($7) {
     $8 = HEAP8[$src>>0]|0;
     $9 = $8&255;
     $10 = ($8<<24>>24)>(-1);
     if ($10) {
      HEAP32[$11>>2] = $9;
      $12 = ($8<<24>>24)!=(0);
      $13 = $12&1;
      $$0 = $13;
      STACKTOP = sp;return ($$0|0);
     } else {
      $14 = (($9) + -194)|0;
      $15 = ($14>>>0)>(50);
      if ($15) {
       break L1;
      }
      $16 = (($src) + 1|0);
      $17 = (48248 + ($14<<2)|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = (($n) + -1)|0;
      $$02 = $19;$c$0 = $18;$s$0 = $16;
      break;
     }
    } else {
     $$02 = $n;$c$0 = $2;$s$0 = $src;
    }
   } while(0);
   $20 = ($$02|0)==(0);
   L19: do {
    if ($20) {
     $c$2 = $c$0;
    } else {
     $21 = HEAP8[$s$0>>0]|0;
     $22 = $21&255;
     $23 = $22 >>> 3;
     $24 = (($23) + -16)|0;
     $25 = $c$0 >> 26;
     $26 = (($23) + ($25))|0;
     $27 = $24 | $26;
     $28 = ($27>>>0)>(7);
     if ($28) {
      break L1;
     } else {
      $$1 = $$02;$32 = $21;$c$1 = $c$0;$s$1 = $s$0;
     }
     while(1) {
      $29 = $c$1 << 6;
      $30 = (($s$1) + 1|0);
      $31 = $32&255;
      $33 = (($31) + -128)|0;
      $34 = $33 | $29;
      $35 = (($$1) + -1)|0;
      $36 = ($34|0)<(0);
      if (!($36)) {
       break;
      }
      $38 = ($35|0)==(0);
      if ($38) {
       $c$2 = $34;
       break L19;
      }
      $39 = HEAP8[$30>>0]|0;
      $40 = $39 & -64;
      $41 = ($40<<24>>24)==(-128);
      if ($41) {
       $$1 = $35;$32 = $39;$c$1 = $34;$s$1 = $30;
      } else {
       break L1;
      }
     }
     HEAP32[$$01>>2] = 0;
     HEAP32[$11>>2] = $34;
     $37 = (($n) - ($35))|0;
     $$0 = $37;
     STACKTOP = sp;return ($$0|0);
    }
   } while(0);
   HEAP32[$$01>>2] = $c$2;
   $$0 = -2;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 HEAP32[$$01>>2] = 0;
 $42 = (___errno_location()|0);
 HEAP32[$42>>2] = 84;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _mbsrtowcs($ws,$src,$wn,$st) {
 $ws = $ws|0;
 $src = $src|0;
 $wn = $wn|0;
 $st = $st|0;
 var $$0 = 0, $$02$ph = 0, $$0217 = 0, $$03 = 0, $$1 = 0, $$14$lcssa = 0, $$148 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$431 = 0, $$432 = 0, $$47$ph = 0, $$4716 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $$8 = 0;
 var $$830 = 0, $$in1 = 0, $$old1 = 0, $$pre = 0, $$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $or$cond = 0;
 var $s$0 = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1033 = 0, $s$1034 = 0, $s$19 = 0, $s$2 = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0, $s$518 = 0, $s$6 = 0, $s$7 = 0, $s$8 = 0, $s$9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$src>>2]|0;
 $1 = ($st|0)==(0|0);
 if ($1) {
  label = 5;
 } else {
  $2 = HEAP32[$st>>2]|0;
  $3 = ($2|0)==(0);
  if ($3) {
   label = 5;
  } else {
   $4 = ($ws|0)==(0|0);
   if ($4) {
    $$36 = $wn;$c$2 = $2;$s$3 = $0;
    label = 16;
   } else {
    HEAP32[$st>>2] = 0;
    $$3 = $ws;$$7 = $wn;$c$4 = $2;$s$8 = $0;
    label = 36;
   }
  }
 }
 if ((label|0) == 5) {
  $5 = ($ws|0)==(0|0);
  if ($5) {
   $$03 = $wn;$s$0 = $0;
   label = 7;
  } else {
   $$02$ph = $ws;$$47$ph = $wn;$s$5$ph = $0;
   label = 6;
  }
 }
 L7: while(1) {
  if ((label|0) == 6) {
   label = 0;
   $6 = ($$47$ph|0)==(0);
   if ($6) {
    $s$5$lcssa = $s$5$ph;
    label = 26;
    break;
   } else {
    $$0217 = $$02$ph;$$4716 = $$47$ph;$s$518 = $s$5$ph;
   }
   while(1) {
    $64 = HEAP8[$s$518>>0]|0;
    $65 = $64&255;
    $66 = (($65) + -1)|0;
    $67 = ($66>>>0)<(127);
    L12: do {
     if ($67) {
      $68 = $s$518;
      $69 = $68 & 3;
      $70 = ($69|0)==(0);
      $71 = ($$4716>>>0)>(4);
      $or$cond = $70 & $71;
      if ($or$cond) {
       $$1 = $$0217;$$5 = $$4716;$s$6 = $s$518;
       while(1) {
        $72 = HEAP32[$s$6>>2]|0;
        $73 = (($72) + -16843009)|0;
        $74 = $73 | $72;
        $75 = $74 & -2139062144;
        $76 = ($75|0)==(0);
        $77 = $72&255;
        if (!($76)) {
         $$2 = $$1;$$6 = $$5;$95 = $77;$s$7 = $s$6;
         break L12;
        }
        $78 = (($s$6) + 1|0);
        $79 = $72 & 255;
        $80 = (($$1) + 4|0);
        HEAP32[$$1>>2] = $79;
        $81 = (($s$6) + 2|0);
        $82 = HEAP8[$78>>0]|0;
        $83 = $82&255;
        $84 = (($$1) + 8|0);
        HEAP32[$80>>2] = $83;
        $85 = (($s$6) + 3|0);
        $86 = HEAP8[$81>>0]|0;
        $87 = $86&255;
        $88 = (($$1) + 12|0);
        HEAP32[$84>>2] = $87;
        $89 = (($s$6) + 4|0);
        $90 = HEAP8[$85>>0]|0;
        $91 = $90&255;
        $92 = (($$1) + 16|0);
        HEAP32[$88>>2] = $91;
        $93 = (($$5) + -4)|0;
        $$old1 = ($93>>>0)>(4);
        if ($$old1) {
         $$1 = $92;$$5 = $93;$s$6 = $89;
        } else {
         break;
        }
       }
       $$pre$pre = HEAP8[$89>>0]|0;
       $$2 = $92;$$6 = $93;$95 = $$pre$pre;$s$7 = $89;
      } else {
       $$2 = $$0217;$$6 = $$4716;$95 = $64;$s$7 = $s$518;
      }
     } else {
      $$2 = $$0217;$$6 = $$4716;$95 = $64;$s$7 = $s$518;
     }
    } while(0);
    $94 = $95&255;
    $96 = (($94) + -1)|0;
    $97 = ($96>>>0)<(127);
    if (!($97)) {
     break;
    }
    $98 = (($s$7) + 1|0);
    $99 = (($$2) + 4|0);
    HEAP32[$$2>>2] = $94;
    $100 = (($$6) + -1)|0;
    $101 = ($100|0)==(0);
    if ($101) {
     $s$5$lcssa = $98;
     label = 26;
     break L7;
    } else {
     $$0217 = $99;$$4716 = $100;$s$518 = $98;
    }
   }
   $102 = (($94) + -194)|0;
   $103 = ($102>>>0)>(50);
   if ($103) {
    $$432 = $$2;$$830 = $$6;$144 = $95;$s$1034 = $s$7;
    label = 48;
    break;
   }
   $104 = (($s$7) + 1|0);
   $105 = (48248 + ($102<<2)|0);
   $106 = HEAP32[$105>>2]|0;
   $$3 = $$2;$$7 = $$6;$c$4 = $106;$s$8 = $104;
   label = 36;
   continue;
  }
  else if ((label|0) == 7) {
   label = 0;
   $7 = HEAP8[$s$0>>0]|0;
   $8 = $7&255;
   $9 = (($8) + -1)|0;
   $10 = ($9>>>0)<(127);
   if ($10) {
    $11 = $s$0;
    $12 = $11 & 3;
    $13 = ($12|0)==(0);
    if ($13) {
     $14 = HEAP32[$s$0>>2]|0;
     $15 = (($14) + -16843009)|0;
     $16 = $15 | $14;
     $17 = $16 & -2139062144;
     $18 = ($17|0)==(0);
     if ($18) {
      $$148 = $$03;$s$19 = $s$0;
      while(1) {
       $19 = (($s$19) + 4|0);
       $20 = (($$148) + -4)|0;
       $21 = HEAP32[$19>>2]|0;
       $22 = (($21) + -16843009)|0;
       $23 = $22 | $21;
       $24 = $23 & -2139062144;
       $25 = ($24|0)==(0);
       if ($25) {
        $$148 = $20;$s$19 = $19;
       } else {
        $$14$lcssa = $20;$$in1 = $21;$s$1$lcssa = $19;
        break;
       }
      }
     } else {
      $$14$lcssa = $$03;$$in1 = $14;$s$1$lcssa = $s$0;
     }
     $26 = $$in1&255;
     $27 = $$in1&255;
     $$25 = $$14$lcssa;$149 = $26;$29 = $27;$s$2 = $s$1$lcssa;
    } else {
     $$25 = $$03;$149 = $7;$29 = $7;$s$2 = $s$0;
    }
   } else {
    $$25 = $$03;$149 = $7;$29 = $7;$s$2 = $s$0;
   }
   $28 = $29&255;
   $30 = (($28) + -1)|0;
   $31 = ($30>>>0)<(127);
   if ($31) {
    $32 = (($s$2) + 1|0);
    $33 = (($$25) + -1)|0;
    $$03 = $33;$s$0 = $32;
    label = 7;
    continue;
   }
   $34 = (($28) + -194)|0;
   $35 = ($34>>>0)>(50);
   if ($35) {
    $$432 = $ws;$$830 = $$25;$144 = $149;$s$1034 = $s$2;
    label = 48;
    break;
   }
   $36 = (($s$2) + 1|0);
   $37 = (48248 + ($34<<2)|0);
   $38 = HEAP32[$37>>2]|0;
   $$36 = $$25;$c$2 = $38;$s$3 = $36;
   label = 16;
   continue;
  }
  else if ((label|0) == 16) {
   label = 0;
   $39 = HEAP8[$s$3>>0]|0;
   $40 = $39&255;
   $41 = $40 >>> 3;
   $42 = (($41) + -16)|0;
   $43 = $c$2 >> 26;
   $44 = (($41) + ($43))|0;
   $45 = $42 | $44;
   $46 = ($45>>>0)>(7);
   if ($46) {
    label = 17;
    break;
   }
   $48 = (($s$3) + 1|0);
   $49 = $c$2 & 33554432;
   $50 = ($49|0)==(0);
   if ($50) {
    $s$4 = $48;
   } else {
    $51 = HEAP8[$48>>0]|0;
    $52 = $51 & -64;
    $53 = ($52<<24>>24)==(-128);
    if (!($53)) {
     label = 20;
     break;
    }
    $55 = (($s$3) + 2|0);
    $56 = $c$2 & 524288;
    $57 = ($56|0)==(0);
    if ($57) {
     $s$4 = $55;
    } else {
     $58 = HEAP8[$55>>0]|0;
     $59 = $58 & -64;
     $60 = ($59<<24>>24)==(-128);
     if (!($60)) {
      label = 23;
      break;
     }
     $62 = (($s$3) + 3|0);
     $s$4 = $62;
    }
   }
   $63 = (($$36) + -1)|0;
   $$03 = $63;$s$0 = $s$4;
   label = 7;
   continue;
  }
  else if ((label|0) == 36) {
   label = 0;
   $107 = HEAP8[$s$8>>0]|0;
   $108 = $107&255;
   $109 = $108 >>> 3;
   $110 = (($109) + -16)|0;
   $111 = $c$4 >> 26;
   $112 = (($109) + ($111))|0;
   $113 = $110 | $112;
   $114 = ($113>>>0)>(7);
   if ($114) {
    label = 37;
    break;
   }
   $116 = $c$4 << 6;
   $117 = (($s$8) + 1|0);
   $118 = (($108) + -128)|0;
   $119 = $118 | $116;
   $120 = ($119|0)<(0);
   if ($120) {
    $121 = HEAP8[$117>>0]|0;
    $122 = $121&255;
    $123 = $122 & 192;
    $124 = ($123|0)==(128);
    if (!($124)) {
     label = 40;
     break;
    }
    $126 = $119 << 6;
    $127 = (($s$8) + 2|0);
    $128 = (($122) + -128)|0;
    $129 = $128 | $126;
    $130 = ($129|0)<(0);
    if ($130) {
     $131 = HEAP8[$127>>0]|0;
     $132 = $131&255;
     $133 = $132 & 192;
     $134 = ($133|0)==(128);
     if (!($134)) {
      label = 43;
      break;
     }
     $136 = $129 << 6;
     $137 = (($s$8) + 3|0);
     $138 = (($132) + -128)|0;
     $139 = $138 | $136;
     $c$5 = $139;$s$9 = $137;
    } else {
     $c$5 = $129;$s$9 = $127;
    }
   } else {
    $c$5 = $119;$s$9 = $117;
   }
   $140 = (($$3) + 4|0);
   HEAP32[$$3>>2] = $c$5;
   $141 = (($$7) + -1)|0;
   $$02$ph = $140;$$47$ph = $141;$s$5$ph = $s$9;
   label = 6;
   continue;
  }
 }
 if ((label|0) == 17) {
  $47 = (($s$3) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $47;
  label = 46;
 }
 else if ((label|0) == 20) {
  $54 = (($s$3) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $54;
  label = 46;
 }
 else if ((label|0) == 23) {
  $61 = (($s$3) + -1|0);
  $$4 = $ws;$$8 = $$36;$c$6 = $c$2;$s$10 = $61;
  label = 46;
 }
 else if ((label|0) == 26) {
  HEAP32[$src>>2] = $s$5$lcssa;
  $$0 = $wn;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 37) {
  $115 = (($s$8) + -1|0);
  $$4 = $$3;$$8 = $$7;$c$6 = $c$4;$s$10 = $115;
  label = 46;
 }
 else if ((label|0) == 40) {
  $125 = (($s$8) + -1|0);
  $$4 = $$3;$$8 = $$7;$c$6 = $119;$s$10 = $125;
  label = 46;
 }
 else if ((label|0) == 43) {
  $135 = (($s$8) + -1|0);
  $$4 = $$3;$$8 = $$7;$c$6 = $129;$s$10 = $135;
  label = 46;
 }
 if ((label|0) == 46) {
  $142 = ($c$6|0)==(0);
  if ($142) {
   $$pre = HEAP8[$s$10>>0]|0;
   $$432 = $$4;$$830 = $$8;$144 = $$pre;$s$1034 = $s$10;
   label = 48;
  } else {
   $$431 = $$4;$s$1033 = $s$10;
  }
 }
 if ((label|0) == 48) {
  $143 = ($144<<24>>24)==(0);
  if ($143) {
   $145 = ($$432|0)==(0|0);
   if (!($145)) {
    HEAP32[$$432>>2] = 0;
    HEAP32[$src>>2] = 0;
   }
   $146 = (($wn) - ($$830))|0;
   $$0 = $146;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$431 = $$432;$s$1033 = $s$1034;
  }
 }
 $147 = (___errno_location()|0);
 HEAP32[$147>>2] = 84;
 $148 = ($$431|0)==(0|0);
 if ($148) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$src>>2] = $s$1033;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _wcsrtombs($s,$ws,$n) {
 $s = $s|0;
 $ws = $ws|0;
 $n = $n|0;
 var $$0 = 0, $$01$lcssa = 0, $$0125 = 0, $$026 = 0, $$1 = 0, $$13 = 0, $$215 = 0, $$24$lcssa = 0, $$2424 = 0, $$3 = 0, $$35 = 0, $$414 = 0, $$5 = 0, $$pn = 0, $$pre = 0, $$pre39 = 0, $$pre40 = 0, $$pre41 = 0, $0 = 0, $1 = 0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $ws2$07 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $buf = sp;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $2 = HEAP32[$ws>>2]|0;
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)==(0);
  if ($4) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$026 = 0;$6 = $3;$ws2$07 = $2;
  }
  while(1) {
   $5 = ($6>>>0)>(127);
   if ($5) {
    $7 = (_wcrtomb($buf,$6)|0);
    $8 = ($7|0)==(-1);
    if ($8) {
     $$0 = -1;
     label = 26;
     break;
    } else {
     $$pn = $7;
    }
   } else {
    $$pn = 1;
   }
   $$13 = (($$pn) + ($$026))|0;
   $9 = (($ws2$07) + 4|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $$0 = $$13;
    label = 26;
    break;
   } else {
    $$026 = $$13;$6 = $10;$ws2$07 = $9;
   }
  }
  if ((label|0) == 26) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 $1 = ($n>>>0)>(3);
 L14: do {
  if ($1) {
   $$pre40 = HEAP32[$ws>>2]|0;
   $$0125 = $s;$$2424 = $n;$14 = $$pre40;
   while(1) {
    $13 = HEAP32[$14>>2]|0;
    $15 = (($13) + -1)|0;
    $16 = ($15>>>0)>(126);
    if ($16) {
     $17 = ($13|0)==(0);
     if ($17) {
      break;
     }
     $19 = (_wcrtomb($$0125,$13)|0);
     $20 = ($19|0)==(-1);
     if ($20) {
      $$0 = -1;
      label = 26;
      break;
     }
     $21 = (($$0125) + ($19)|0);
     $22 = (($$2424) - ($19))|0;
     $$1 = $21;$$35 = $22;$27 = $14;
    } else {
     $23 = $13&255;
     $24 = (($$0125) + 1|0);
     HEAP8[$$0125>>0] = $23;
     $25 = (($$2424) + -1)|0;
     $$pre41 = HEAP32[$ws>>2]|0;
     $$1 = $24;$$35 = $25;$27 = $$pre41;
    }
    $26 = (($27) + 4|0);
    HEAP32[$ws>>2] = $26;
    $28 = ($$35>>>0)>(3);
    if ($28) {
     $$0125 = $$1;$$2424 = $$35;$14 = $26;
    } else {
     $$01$lcssa = $$1;$$24$lcssa = $$35;
     break L14;
    }
   }
   if ((label|0) == 26) {
    STACKTOP = sp;return ($$0|0);
   }
   HEAP8[$$0125>>0] = 0;
   HEAP32[$ws>>2] = 0;
   $18 = (($n) - ($$2424))|0;
   $$0 = $18;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$01$lcssa = $s;$$24$lcssa = $n;
  }
 } while(0);
 $12 = ($$24$lcssa|0)==(0);
 if ($12) {
  $$0 = $n;
  STACKTOP = sp;return ($$0|0);
 }
 $$pre = HEAP32[$ws>>2]|0;
 $$215 = $$01$lcssa;$$414 = $$24$lcssa;$30 = $$pre;
 while(1) {
  $29 = HEAP32[$30>>2]|0;
  $31 = (($29) + -1)|0;
  $32 = ($31>>>0)>(126);
  if ($32) {
   $33 = ($29|0)==(0);
   if ($33) {
    label = 19;
    break;
   }
   $35 = (_wcrtomb($buf,$29)|0);
   $36 = ($35|0)==(-1);
   if ($36) {
    $$0 = -1;
    label = 26;
    break;
   }
   $37 = ($$414>>>0)<($35>>>0);
   if ($37) {
    label = 22;
    break;
   }
   $39 = HEAP32[$30>>2]|0;
   (_wcrtomb($$215,$39)|0);
   $40 = (($$215) + ($35)|0);
   $41 = (($$414) - ($35))|0;
   $$3 = $40;$$5 = $41;$46 = $30;
  } else {
   $42 = $29&255;
   $43 = (($$215) + 1|0);
   HEAP8[$$215>>0] = $42;
   $44 = (($$414) + -1)|0;
   $$pre39 = HEAP32[$ws>>2]|0;
   $$3 = $43;$$5 = $44;$46 = $$pre39;
  }
  $45 = (($46) + 4|0);
  HEAP32[$ws>>2] = $45;
  $47 = ($$5|0)==(0);
  if ($47) {
   $$0 = $n;
   label = 26;
   break;
  } else {
   $$215 = $$3;$$414 = $$5;$30 = $45;
  }
 }
 if ((label|0) == 19) {
  HEAP8[$$215>>0] = 0;
  HEAP32[$ws>>2] = 0;
  $34 = (($n) - ($$414))|0;
  $$0 = $34;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 22) {
  $38 = (($n) - ($$414))|0;
  $$0 = $38;
  STACKTOP = sp;return ($$0|0);
 }
 else if ((label|0) == 26) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function ___string_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $$0$lcssa$i = 0, $$012$i = 0, $$1$lcssa$i = 0, $$15$i = 0, $$22$i = 0, $$3$i = 0, $$lcssa$i = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $k$0 = 0, $k$0$len = 0, $or$cond$i = 0, $or$cond11$i = 0, $phitmp = 0, $s$0$lcssa$i = 0, $s$013$i = 0, $s$13$i = 0, $s$2$i = 0, $w$0$lcssa$i = 0, $w$06$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 84|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($len) + 256)|0;
 $3 = $1;
 $4 = $3 & 3;
 $5 = ($4|0)!=(0);
 $6 = ($2|0)!=(0);
 $or$cond11$i = $5 & $6;
 L1: do {
  if ($or$cond11$i) {
   $$012$i = $2;$s$013$i = $1;
   while(1) {
    $7 = HEAP8[$s$013$i>>0]|0;
    $8 = ($7<<24>>24)==(0);
    if ($8) {
     $$3$i = $$012$i;$s$2$i = $s$013$i;
     break L1;
    }
    $9 = (($s$013$i) + 1|0);
    $10 = (($$012$i) + -1)|0;
    $11 = $9;
    $12 = $11 & 3;
    $13 = ($12|0)!=(0);
    $14 = ($10|0)!=(0);
    $or$cond$i = $13 & $14;
    if ($or$cond$i) {
     $$012$i = $10;$s$013$i = $9;
    } else {
     $$0$lcssa$i = $10;$$lcssa$i = $14;$s$0$lcssa$i = $9;
     label = 4;
     break;
    }
   }
  } else {
   $$0$lcssa$i = $2;$$lcssa$i = $6;$s$0$lcssa$i = $1;
   label = 4;
  }
 } while(0);
 L5: do {
  if ((label|0) == 4) {
   if ($$lcssa$i) {
    $$pre = HEAP8[$s$0$lcssa$i>>0]|0;
    $phitmp = ($$pre<<24>>24)==(0);
    if ($phitmp) {
     $$3$i = $$0$lcssa$i;$s$2$i = $s$0$lcssa$i;
    } else {
     $15 = ($$0$lcssa$i>>>0)>(3);
     L9: do {
      if ($15) {
       $$15$i = $$0$lcssa$i;$w$06$i = $s$0$lcssa$i;
       while(1) {
        $16 = HEAP32[$w$06$i>>2]|0;
        $17 = (($16) + -16843009)|0;
        $18 = $16 & -2139062144;
        $19 = $18 ^ -2139062144;
        $20 = $19 & $17;
        $21 = ($20|0)==(0);
        if (!($21)) {
         $$1$lcssa$i = $$15$i;$w$0$lcssa$i = $w$06$i;
         break L9;
        }
        $22 = (($w$06$i) + 4|0);
        $23 = (($$15$i) + -4)|0;
        $24 = ($23>>>0)>(3);
        if ($24) {
         $$15$i = $23;$w$06$i = $22;
        } else {
         $$1$lcssa$i = $23;$w$0$lcssa$i = $22;
         break;
        }
       }
      } else {
       $$1$lcssa$i = $$0$lcssa$i;$w$0$lcssa$i = $s$0$lcssa$i;
      }
     } while(0);
     $25 = ($$1$lcssa$i|0)==(0);
     if ($25) {
      $$3$i = 0;$s$2$i = $w$0$lcssa$i;
     } else {
      $$22$i = $$1$lcssa$i;$s$13$i = $w$0$lcssa$i;
      while(1) {
       $26 = HEAP8[$s$13$i>>0]|0;
       $27 = ($26<<24>>24)==(0);
       if ($27) {
        $$3$i = $$22$i;$s$2$i = $s$13$i;
        break L5;
       }
       $28 = (($s$13$i) + 1|0);
       $29 = (($$22$i) + -1)|0;
       $30 = ($29|0)==(0);
       if ($30) {
        $$3$i = 0;$s$2$i = $28;
        break;
       } else {
        $$22$i = $29;$s$13$i = $28;
       }
      }
     }
    }
   } else {
    $$3$i = 0;$s$2$i = $s$0$lcssa$i;
   }
  }
 } while(0);
 $31 = ($$3$i|0)!=(0);
 $32 = $31 ? $s$2$i : 0;
 $33 = ($32|0)==(0|0);
 if ($33) {
  $k$0 = $2;
 } else {
  $34 = $32;
  $35 = (($34) - ($3))|0;
  $k$0 = $35;
 }
 $36 = ($k$0>>>0)<($len>>>0);
 $k$0$len = $36 ? $k$0 : $len;
 _memcpy(($buf|0),($1|0),($k$0$len|0))|0;
 $37 = (($1) + ($k$0$len)|0);
 $38 = (($f) + 4|0);
 HEAP32[$38>>2] = $37;
 $39 = (($1) + ($k$0)|0);
 $40 = (($f) + 8|0);
 HEAP32[$40>>2] = $39;
 HEAP32[$0>>2] = $39;
 STACKTOP = sp;return ($k$0$len|0);
}
function _sscanf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsscanf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vsscanf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$i = 0, $$10$i = 0, $$11$i = 0, $$12$i = 0, $$13$i = 0, $$8$i = 0, $$lcssa21$i = 0, $$not$i = 0, $$old4$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi243$iZ2D = 0, $$pre12 = 0, $$pre13 = 0, $$pre14 = 0, $$pre229$i = 0, $$pre231$i = 0, $$pre235$i = 0, $$pre237$i = 0, $$pre238$i = 0;
 var $$pre240$i = 0, $$pre241$i = 0, $$pre242$i = 0, $$size$0$i = 0, $$width$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0.0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0.0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $alloc$0$i = 0, $alloc$0224$i = 0, $alloc$1$i = 0, $alloc$2$i = 0, $ap2$i$i = 0, $arglist_current = 0, $arglist_current2 = 0;
 var $arglist_next = 0, $arglist_next3 = 0, $base$0$i = 0, $c$030$i = 0, $dest$0$i = 0, $f = 0, $factor$i = 0, $factor17$i = 0, $i$0$i$i = 0, $i$0$ph$i = 0, $i$0$ph49$i = 0, $i$0$ph49$lcssa$i = 0, $i$0$ph49$us56$i = 0, $i$1$lcssa$i = 0, $i$2$i = 0, $i$2$ph$i = 0, $i$2$ph$i$phi = 0, $i$3$i = 0, $i$4$i = 0, $invert$0$i = 0;
 var $isdigit$i = 0, $isdigit7$i = 0, $isdigit723$i = 0, $isdigittmp$i = 0, $isdigittmp6$i = 0, $isdigittmp622$i = 0, $k$0$ph$i = 0, $k$1$ph$i = 0, $matches$0$$i = 0, $matches$0135$i = 0, $matches$1$i = 0, $matches$2$i = 0, $matches$3$i = 0, $not$$i = 0, $or$cond$i$i = 0, $or$cond$us$i = 0, $or$cond3$i = 0, $or$cond5$i = 0, $or$cond9$i = 0, $p$0141$i = 0;
 var $p$1$i = 0, $p$10$i = 0, $p$11$i = 0, $p$2$i = 0, $p$3$lcssa$i = 0, $p$324$i = 0, $p$4$i = 0, $p$5$i = 0, $p$6$i = 0, $p$7$i = 0, $p$7$ph$i = 0, $p$8$i = 0, $p$9$i = 0, $pos$0140$i = 0, $pos$1$i = 0, $pos$2$i = 0, $s$0133$i = 0, $s$1$i = 0, $s$2$ph$i = 0, $s$3$i = 0;
 var $s$4$i = 0, $s$5$i = 0, $s$6$i = 0, $s$7$i = 0, $s$8$i = 0, $scanset$i = 0, $size$0$i = 0, $st$i = 0, $storemerge = 0, $vacopy_currentptr = 0, $wc$i = 0, $wcs$0134$i = 0, $wcs$1$i = 0, $wcs$2$i = 0, $wcs$3$ph$i = 0, $wcs$3$ph165$i = 0, $wcs$4$i = 0, $wcs$5$i = 0, $wcs$6$i = 0, $wcs$7$i = 0;
 var $wcs$8$i = 0, $wcs$9$i = 0, $width$0$lcssa$i = 0, $width$025$i = 0, $width$1$i = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0;
 $ap2$i$i = sp + 128|0;
 $st$i = sp + 120|0;
 $scanset$i = sp + 145|0;
 $wc$i = sp + 112|0;
 $0 = sp + 144|0;
 $f = sp;
 dest=$f+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $1 = (($f) + 32|0);
 HEAP32[$1>>2] = 27;
 $2 = (($f) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = (($f) + 76|0);
 HEAP32[$3>>2] = -1;
 $4 = (($f) + 84|0);
 HEAP32[$4>>2] = $s;
 $5 = HEAP8[$fmt>>0]|0;
 $6 = ($5<<24>>24)==(0);
 if ($6) {
  $matches$3$i = 0;
  STACKTOP = sp;return ($matches$3$i|0);
 }
 $7 = (($f) + 4|0);
 $8 = (($f) + 100|0);
 $9 = (($f) + 108|0);
 $10 = (($f) + 8|0);
 $11 = (($scanset$i) + 10|0);
 $12 = (($scanset$i) + 33|0);
 $13 = (($st$i) + 4|0);
 $14 = (($scanset$i) + 46|0);
 $15 = (($scanset$i) + 94|0);
 $16 = (($f) + 104|0);
 $18 = $5;$matches$0135$i = 0;$p$0141$i = $fmt;$pos$0140$i = 0;$s$0133$i = 0;$wcs$0134$i = 0;
 L4: while(1) {
  $17 = ($18<<24>>24)==(32);
  L6: do {
   if ($17) {
    $p$1$i = $p$0141$i;
    label = 5;
   } else {
    $19 = $18&255;
    $20 = (($19) + -9)|0;
    $21 = ($20>>>0)<(5);
    if ($21) {
     $p$1$i = $p$0141$i;
     label = 5;
    } else {
     $52 = ($18<<24>>24)==(37);
     L9: do {
      if ($52) {
       $53 = (($p$0141$i) + 1|0);
       $54 = HEAP8[$53>>0]|0;
       do {
        if ((($54<<24>>24) == 37)) {
         break L9;
        } else if ((($54<<24>>24) == 42)) {
         $78 = (($p$0141$i) + 2|0);
         $dest$0$i = 0;$p$2$i = $78;
        } else {
         $79 = $54&255;
         $isdigittmp$i = (($79) + -48)|0;
         $isdigit$i = ($isdigittmp$i>>>0)<(10);
         if ($isdigit$i) {
          $80 = (($p$0141$i) + 2|0);
          $81 = HEAP8[$80>>0]|0;
          $82 = ($81<<24>>24)==(36);
          if ($82) {
           $vacopy_currentptr = HEAP32[$ap>>2]|0;
           HEAP32[$ap2$i$i>>2] = $vacopy_currentptr;
           $i$0$i$i = $isdigittmp$i;
           while(1) {
            $83 = ($i$0$i$i>>>0)>(1);
            $arglist_current = HEAP32[$ap2$i$i>>2]|0;
            $84 = HEAP32[$arglist_current>>2]|0;
            $arglist_next = (($arglist_current) + 4|0);
            HEAP32[$ap2$i$i>>2] = $arglist_next;
            $85 = (($i$0$i$i) + -1)|0;
            if ($83) {
             $i$0$i$i = $85;
            } else {
             break;
            }
           }
           $86 = (($p$0141$i) + 3|0);
           $dest$0$i = $84;$p$2$i = $86;
           break;
          }
         }
         $arglist_current2 = HEAP32[$ap>>2]|0;
         $87 = HEAP32[$arglist_current2>>2]|0;
         $arglist_next3 = (($arglist_current2) + 4|0);
         HEAP32[$ap>>2] = $arglist_next3;
         $dest$0$i = $87;$p$2$i = $53;
        }
       } while(0);
       $88 = HEAP8[$p$2$i>>0]|0;
       $89 = $88&255;
       $isdigittmp622$i = (($89) + -48)|0;
       $isdigit723$i = ($isdigittmp622$i>>>0)<(10);
       if ($isdigit723$i) {
        $93 = $89;$p$324$i = $p$2$i;$width$025$i = 0;
        while(1) {
         $90 = ($width$025$i*10)|0;
         $91 = (($90) + -48)|0;
         $92 = (($91) + ($93))|0;
         $94 = (($p$324$i) + 1|0);
         $95 = HEAP8[$94>>0]|0;
         $96 = $95&255;
         $isdigittmp6$i = (($96) + -48)|0;
         $isdigit7$i = ($isdigittmp6$i>>>0)<(10);
         if ($isdigit7$i) {
          $93 = $96;$p$324$i = $94;$width$025$i = $92;
         } else {
          $$lcssa21$i = $95;$p$3$lcssa$i = $94;$width$0$lcssa$i = $92;
          break;
         }
        }
       } else {
        $$lcssa21$i = $88;$p$3$lcssa$i = $p$2$i;$width$0$lcssa$i = 0;
       }
       $97 = ($$lcssa21$i<<24>>24)==(109);
       if ($97) {
        $98 = ($dest$0$i|0)!=(0|0);
        $99 = $98&1;
        $100 = (($p$3$lcssa$i) + 1|0);
        $$pre$i = HEAP8[$100>>0]|0;
        $103 = $$pre$i;$alloc$0$i = $99;$p$4$i = $100;$s$1$i = 0;$wcs$1$i = 0;
       } else {
        $103 = $$lcssa21$i;$alloc$0$i = 0;$p$4$i = $p$3$lcssa$i;$s$1$i = $s$0133$i;$wcs$1$i = $wcs$0134$i;
       }
       $101 = (($p$4$i) + 1|0);
       $102 = $103&255;
       switch ($102|0) {
       case 104:  {
        $104 = HEAP8[$101>>0]|0;
        $105 = ($104<<24>>24)==(104);
        $106 = (($p$4$i) + 2|0);
        $$10$i = $105 ? $106 : $101;
        $$11$i = $105 ? -2 : -1;
        $p$5$i = $$10$i;$size$0$i = $$11$i;
        break;
       }
       case 106:  {
        $p$5$i = $101;$size$0$i = 3;
        break;
       }
       case 116: case 122:  {
        $p$5$i = $101;$size$0$i = 1;
        break;
       }
       case 108:  {
        $107 = HEAP8[$101>>0]|0;
        $108 = ($107<<24>>24)==(108);
        $109 = (($p$4$i) + 2|0);
        $$12$i = $108 ? $109 : $101;
        $$13$i = $108 ? 3 : 1;
        $p$5$i = $$12$i;$size$0$i = $$13$i;
        break;
       }
       case 76:  {
        $p$5$i = $101;$size$0$i = 2;
        break;
       }
       case 110: case 112: case 67: case 83: case 91: case 99: case 115: case 88: case 71: case 70: case 69: case 65: case 103: case 102: case 101: case 97: case 120: case 117: case 111: case 105: case 100:  {
        $p$5$i = $p$4$i;$size$0$i = 0;
        break;
       }
       default: {
        $alloc$0224$i = $alloc$0$i;$s$6$i = $s$1$i;$wcs$7$i = $wcs$1$i;
        label = 169;
        break L4;
       }
       }
       $110 = HEAP8[$p$5$i>>0]|0;
       $111 = $110&255;
       $112 = $111 & 47;
       $113 = ($112|0)==(3);
       $114 = $111 | 32;
       $$$i = $113 ? $114 : $111;
       $$size$0$i = $113 ? 1 : $size$0$i;
       if ((($$$i|0) == 110)) {
        $116 = ($pos$0140$i|0)<(0);
        $117 = $116 << 31 >> 31;
        $118 = ($dest$0$i|0)==(0|0);
        if ($118) {
         $matches$1$i = $matches$0135$i;$p$11$i = $p$5$i;$pos$2$i = $pos$0140$i;$s$5$i = $s$1$i;$wcs$6$i = $wcs$1$i;
         break L6;
        }
        switch ($$size$0$i|0) {
        case -2:  {
         $119 = $pos$0140$i&255;
         HEAP8[$dest$0$i>>0] = $119;
         $matches$1$i = $matches$0135$i;$p$11$i = $p$5$i;$pos$2$i = $pos$0140$i;$s$5$i = $s$1$i;$wcs$6$i = $wcs$1$i;
         break L6;
         break;
        }
        case -1:  {
         $120 = $pos$0140$i&65535;
         HEAP16[$dest$0$i>>1] = $120;
         $matches$1$i = $matches$0135$i;$p$11$i = $p$5$i;$pos$2$i = $pos$0140$i;$s$5$i = $s$1$i;$wcs$6$i = $wcs$1$i;
         break L6;
         break;
        }
        case 0:  {
         HEAP32[$dest$0$i>>2] = $pos$0140$i;
         $matches$1$i = $matches$0135$i;$p$11$i = $p$5$i;$pos$2$i = $pos$0140$i;$s$5$i = $s$1$i;$wcs$6$i = $wcs$1$i;
         break L6;
         break;
        }
        case 1:  {
         HEAP32[$dest$0$i>>2] = $pos$0140$i;
         $matches$1$i = $matches$0135$i;$p$11$i = $p$5$i;$pos$2$i = $pos$0140$i;$s$5$i = $s$1$i;$wcs$6$i = $wcs$1$i;
         break L6;
         break;
        }
        case 3:  {
         $121 = $dest$0$i;
         $122 = $121;
         HEAP32[$122>>2] = $pos$0140$i;
         $123 = (($121) + 4)|0;
         $124 = $123;
         HEAP32[$124>>2] = $117;
         $matches$1$i = $matches$0135$i;$p$11$i = $p$5$i;$pos$2$i = $pos$0140$i;$s$5$i = $s$1$i;$wcs$6$i = $wcs$1$i;
         break L6;
         break;
        }
        default: {
         $matches$1$i = $matches$0135$i;$p$11$i = $p$5$i;$pos$2$i = $pos$0140$i;$s$5$i = $s$1$i;$wcs$6$i = $wcs$1$i;
         break L6;
        }
        }
       } else if ((($$$i|0) == 99)) {
        $115 = ($width$0$lcssa$i|0)<(1);
        $$width$0$i = $115 ? 1 : $width$0$lcssa$i;
        $pos$1$i = $pos$0140$i;$width$1$i = $$width$0$i;
       } else if ((($$$i|0) == 91)) {
        $pos$1$i = $pos$0140$i;$width$1$i = $width$0$lcssa$i;
       } else {
        HEAP32[$16>>2] = 0;
        $125 = HEAP32[$10>>2]|0;
        $126 = HEAP32[$7>>2]|0;
        $127 = $125;
        $128 = $126;
        $129 = (($127) - ($128))|0;
        HEAP32[$9>>2] = $129;
        HEAP32[$8>>2] = $125;
        $131 = $126;$132 = $125;
        L47: while(1) {
         $130 = ($131>>>0)<($132>>>0);
         if ($130) {
          $133 = (($131) + 1|0);
          HEAP32[$7>>2] = $133;
          $134 = HEAP8[$131>>0]|0;
          $135 = $134&255;
          $137 = $135;
         } else {
          $136 = (___shgetc($f)|0);
          $137 = $136;
         }
         switch ($137|0) {
         case 9: case 10: case 11: case 12: case 13: case 32:  {
          break;
         }
         default: {
          break L47;
         }
         }
         $$pre = HEAP32[$7>>2]|0;
         $$pre12 = HEAP32[$8>>2]|0;
         $131 = $$pre;$132 = $$pre12;
        }
        $138 = HEAP32[$8>>2]|0;
        $139 = ($138|0)==(0|0);
        $$pre229$i = HEAP32[$7>>2]|0;
        if ($139) {
         $144 = $$pre229$i;
        } else {
         $140 = (($$pre229$i) + -1|0);
         HEAP32[$7>>2] = $140;
         $144 = $140;
        }
        $141 = HEAP32[$9>>2]|0;
        $142 = HEAP32[$10>>2]|0;
        $143 = $144;
        $145 = $142;
        $146 = (($141) + ($pos$0140$i))|0;
        $147 = (($146) + ($143))|0;
        $148 = (($147) - ($145))|0;
        $pos$1$i = $148;$width$1$i = $width$0$lcssa$i;
       }
       HEAP32[$16>>2] = $width$1$i;
       $149 = HEAP32[$10>>2]|0;
       $150 = HEAP32[$7>>2]|0;
       $151 = $149;
       $152 = $150;
       $153 = (($151) - ($152))|0;
       HEAP32[$9>>2] = $153;
       $154 = ($width$1$i|0)!=(0);
       $155 = ($153|0)>($width$1$i|0);
       $or$cond$i$i = $154 & $155;
       if ($or$cond$i$i) {
        $156 = (($150) + ($width$1$i)|0);
        $storemerge = $156;
       } else {
        $storemerge = $149;
       }
       HEAP32[$8>>2] = $storemerge;
       $157 = ($150>>>0)<($storemerge>>>0);
       if ($157) {
        $158 = (($150) + 1|0);
        HEAP32[$7>>2] = $158;
        $162 = $storemerge;
       } else {
        $159 = (___shgetc($f)|0);
        $160 = ($159|0)<(0);
        if ($160) {
         $alloc$0224$i = $alloc$0$i;$s$6$i = $s$1$i;$wcs$7$i = $wcs$1$i;
         label = 169;
         break L4;
        }
        $$pre231$i = HEAP32[$8>>2]|0;
        $162 = $$pre231$i;
       }
       $161 = ($162|0)==(0|0);
       if (!($161)) {
        $163 = HEAP32[$7>>2]|0;
        $164 = (($163) + -1|0);
        HEAP32[$7>>2] = $164;
       }
       L70: do {
        switch ($$$i|0) {
        case 120: case 88: case 112:  {
         $base$0$i = 16;
         label = 151;
         break;
        }
        case 71: case 103: case 70: case 102: case 69: case 101: case 65: case 97:  {
         $345 = (+___floatscan($f,$$size$0$i,0));
         $346 = HEAP32[$9>>2]|0;
         $347 = HEAP32[$7>>2]|0;
         $348 = HEAP32[$10>>2]|0;
         $349 = $347;
         $350 = $348;
         $351 = (($350) - ($349))|0;
         $352 = ($346|0)==($351|0);
         if ($352) {
          $alloc$2$i = $alloc$0$i;$matches$2$i = $matches$0135$i;$s$8$i = $s$1$i;$wcs$9$i = $wcs$1$i;
          break L4;
         }
         $353 = ($dest$0$i|0)==(0|0);
         if ($353) {
          $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
         } else {
          if ((($$size$0$i|0) == 0)) {
           $354 = $345;
           HEAPF32[$dest$0$i>>2] = $354;
           $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
           break L70;
          } else if ((($$size$0$i|0) == 1)) {
           HEAPF64[$dest$0$i>>3] = $345;
           $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
           break L70;
          } else if ((($$size$0$i|0) == 2)) {
           HEAPF64[$dest$0$i>>3] = $345;
           $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
           break L70;
          } else {
           $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
           break L70;
          }
         }
         break;
        }
        case 91: case 99: case 115:  {
         $165 = ($$$i|0)==(99);
         $166 = $$$i & 239;
         $167 = ($166|0)==(99);
         L79: do {
          if ($167) {
           $168 = ($$$i|0)==(115);
           _memset(($scanset$i|0),-1,257)|0;
           HEAP8[$scanset$i>>0] = 0;
           if ($168) {
            HEAP8[$12>>0] = 0;
            ;HEAP8[$11+0>>0]=0|0;HEAP8[$11+1>>0]=0|0;HEAP8[$11+2>>0]=0|0;HEAP8[$11+3>>0]=0|0;HEAP8[$11+4>>0]=0|0;
            $p$9$i = $p$5$i;
           } else {
            $p$9$i = $p$5$i;
           }
          } else {
           $169 = (($p$5$i) + 1|0);
           $170 = HEAP8[$169>>0]|0;
           $171 = ($170<<24>>24)==(94);
           $172 = (($p$5$i) + 2|0);
           $invert$0$i = $171&1;
           $p$6$i = $171 ? $172 : $169;
           $173 = $171&1;
           _memset(($scanset$i|0),($173|0),257)|0;
           HEAP8[$scanset$i>>0] = 0;
           $174 = HEAP8[$p$6$i>>0]|0;
           if ((($174<<24>>24) == 45)) {
            $175 = (($p$6$i) + 1|0);
            $176 = $invert$0$i ^ 1;
            $177 = $176&255;
            HEAP8[$14>>0] = $177;
            $$pre$phi243$iZ2D = $177;$p$7$ph$i = $175;
           } else if ((($174<<24>>24) == 93)) {
            $178 = (($p$6$i) + 1|0);
            $179 = $invert$0$i ^ 1;
            $180 = $179&255;
            HEAP8[$15>>0] = $180;
            $$pre$phi243$iZ2D = $180;$p$7$ph$i = $178;
           } else {
            $$pre241$i = $invert$0$i ^ 1;
            $$pre242$i = $$pre241$i&255;
            $$pre$phi243$iZ2D = $$pre242$i;$p$7$ph$i = $p$6$i;
           }
           $p$7$i = $p$7$ph$i;
           while(1) {
            $181 = HEAP8[$p$7$i>>0]|0;
            if ((($181<<24>>24) == 0)) {
             $alloc$0224$i = $alloc$0$i;$s$6$i = $s$1$i;$wcs$7$i = $wcs$1$i;
             label = 169;
             break L4;
            } else if ((($181<<24>>24) == 45)) {
             $182 = (($p$7$i) + 1|0);
             $183 = HEAP8[$182>>0]|0;
             if ((($183<<24>>24) == 93) | (($183<<24>>24) == 0)) {
              $194 = 45;$p$8$i = $p$7$i;
             } else {
              $184 = (($p$7$i) + -1|0);
              $185 = HEAP8[$184>>0]|0;
              $186 = ($185&255)<($183&255);
              if ($186) {
               $187 = $185&255;
               $c$030$i = $187;
               while(1) {
                $188 = (($c$030$i) + 1)|0;
                $189 = (($scanset$i) + ($188)|0);
                HEAP8[$189>>0] = $$pre$phi243$iZ2D;
                $190 = HEAP8[$182>>0]|0;
                $191 = $190&255;
                $192 = ($188|0)<($191|0);
                if ($192) {
                 $c$030$i = $188;
                } else {
                 $194 = $190;$p$8$i = $182;
                 break;
                }
               }
              } else {
               $194 = $183;$p$8$i = $182;
              }
             }
            } else if ((($181<<24>>24) == 93)) {
             $p$9$i = $p$7$i;
             break L79;
            } else {
             $194 = $181;$p$8$i = $p$7$i;
            }
            $193 = $194&255;
            $195 = (($193) + 1)|0;
            $196 = (($scanset$i) + ($195)|0);
            HEAP8[$196>>0] = $$pre$phi243$iZ2D;
            $197 = (($p$8$i) + 1|0);
            $p$7$i = $197;
           }
          }
         } while(0);
         $198 = (($width$1$i) + 1)|0;
         $$8$i = $165 ? $198 : 31;
         $199 = ($$size$0$i|0)==(1);
         $200 = ($alloc$0$i|0)!=(0);
         L98: do {
          if ($199) {
           if ($200) {
            $201 = $$8$i << 2;
            $202 = (_malloc($201)|0);
            $203 = ($202|0)==(0|0);
            if ($203) {
             $alloc$0224$i = $alloc$0$i;$s$6$i = 0;$wcs$7$i = $202;
             label = 169;
             break L4;
            } else {
             $wcs$2$i = $202;
            }
           } else {
            $wcs$2$i = $dest$0$i;
           }
           HEAP32[$st$i>>2] = 0;
           HEAP32[$13>>2] = 0;
           $i$0$ph$i = 0;$k$0$ph$i = $$8$i;$wcs$3$ph$i = $wcs$2$i;
           L133: while(1) {
            $204 = ($wcs$3$ph$i|0)==(0|0);
            if ($204) {
             $205 = ($i$0$ph$i|0)==($k$0$ph$i|0);
             $or$cond$us$i = $200 & $205;
             while(1) {
              $208 = HEAP32[$7>>2]|0;
              $218 = HEAP32[$8>>2]|0;
              $219 = ($208>>>0)<($218>>>0);
              if ($219) {
               $207 = (($208) + 1|0);
               HEAP32[$7>>2] = $207;
               $209 = HEAP8[$208>>0]|0;
               $210 = $209&255;
               $212 = $210;
              } else {
               $206 = (___shgetc($f)|0);
               $212 = $206;
              }
              $211 = (($212) + 1)|0;
              $213 = (($scanset$i) + ($211)|0);
              $214 = HEAP8[$213>>0]|0;
              $215 = ($214<<24>>24)==(0);
              if ($215) {
               $i$0$ph49$lcssa$i = $i$0$ph$i;$wcs$3$ph165$i = 0;
               break L133;
              }
              $216 = $212&255;
              HEAP8[$0>>0] = $216;
              $217 = (_mbrtowc($wc$i,$0,1,$st$i)|0);
              if ((($217|0) == -2)) {
               continue;
              } else if ((($217|0) == -1)) {
               $alloc$0224$i = $alloc$0$i;$s$6$i = 0;$wcs$7$i = 0;
               label = 169;
               break L4;
              }
              if ($or$cond$us$i) {
               $i$1$lcssa$i = $i$0$ph$i;
               break;
              }
             }
            } else {
             if ($200) {
              $i$0$ph49$us56$i = $i$0$ph$i;
             } else {
              $i$0$ph49$i = $i$0$ph$i;
              label = 105;
              break;
             }
             while(1) {
              while(1) {
               $222 = HEAP32[$7>>2]|0;
               $236 = HEAP32[$8>>2]|0;
               $237 = ($222>>>0)<($236>>>0);
               if ($237) {
                $221 = (($222) + 1|0);
                HEAP32[$7>>2] = $221;
                $223 = HEAP8[$222>>0]|0;
                $224 = $223&255;
                $226 = $224;
               } else {
                $220 = (___shgetc($f)|0);
                $226 = $220;
               }
               $225 = (($226) + 1)|0;
               $227 = (($scanset$i) + ($225)|0);
               $228 = HEAP8[$227>>0]|0;
               $229 = ($228<<24>>24)==(0);
               if ($229) {
                $i$0$ph49$lcssa$i = $i$0$ph49$us56$i;$wcs$3$ph165$i = $wcs$3$ph$i;
                break L133;
               }
               $230 = $226&255;
               HEAP8[$0>>0] = $230;
               $231 = (_mbrtowc($wc$i,$0,1,$st$i)|0);
               if ((($231|0) == -1)) {
                $alloc$0224$i = $alloc$0$i;$s$6$i = 0;$wcs$7$i = $wcs$3$ph$i;
                label = 169;
                break L4;
               } else if (!((($231|0) == -2))) {
                break;
               }
              }
              $232 = HEAP32[$wc$i>>2]|0;
              $233 = (($i$0$ph49$us56$i) + 1)|0;
              $234 = (($wcs$3$ph$i) + ($i$0$ph49$us56$i<<2)|0);
              HEAP32[$234>>2] = $232;
              $235 = ($233|0)==($k$0$ph$i|0);
              if ($235) {
               $i$1$lcssa$i = $k$0$ph$i;
               break;
              } else {
               $i$0$ph49$us56$i = $233;
              }
             }
            }
            $factor$i = $k$0$ph$i << 1;
            $255 = $factor$i | 1;
            $256 = $255 << 2;
            $257 = (_realloc($wcs$3$ph$i,$256)|0);
            $258 = ($257|0)==(0|0);
            if ($258) {
             $alloc$0224$i = $alloc$0$i;$s$6$i = 0;$wcs$7$i = $wcs$3$ph$i;
             label = 169;
             break L4;
            }
            $i$0$ph$i = $i$1$lcssa$i;$k$0$ph$i = $255;$wcs$3$ph$i = $257;
           }
           L158: do {
            if ((label|0) == 105) {
             while(1) {
              label = 0;
              while(1) {
               $238 = HEAP32[$7>>2]|0;
               $239 = HEAP32[$8>>2]|0;
               $240 = ($238>>>0)<($239>>>0);
               if ($240) {
                $241 = (($238) + 1|0);
                HEAP32[$7>>2] = $241;
                $242 = HEAP8[$238>>0]|0;
                $243 = $242&255;
                $246 = $243;
               } else {
                $244 = (___shgetc($f)|0);
                $246 = $244;
               }
               $245 = (($246) + 1)|0;
               $247 = (($scanset$i) + ($245)|0);
               $248 = HEAP8[$247>>0]|0;
               $249 = ($248<<24>>24)==(0);
               if ($249) {
                $i$0$ph49$lcssa$i = $i$0$ph49$i;$wcs$3$ph165$i = $wcs$3$ph$i;
                break L158;
               }
               $250 = $246&255;
               HEAP8[$0>>0] = $250;
               $251 = (_mbrtowc($wc$i,$0,1,$st$i)|0);
               if ((($251|0) == -1)) {
                $alloc$0224$i = 0;$s$6$i = 0;$wcs$7$i = $wcs$3$ph$i;
                label = 169;
                break L4;
               } else if (!((($251|0) == -2))) {
                break;
               }
              }
              $252 = HEAP32[$wc$i>>2]|0;
              $253 = (($i$0$ph49$i) + 1)|0;
              $254 = (($wcs$3$ph$i) + ($i$0$ph49$i<<2)|0);
              HEAP32[$254>>2] = $252;
              $i$0$ph49$i = $253;
              label = 105;
             }
            }
           } while(0);
           $259 = HEAP32[$st$i>>2]|0;
           $260 = ($259|0)==(0);
           if ($260) {
            $i$4$i = $i$0$ph49$lcssa$i;$s$3$i = 0;$wcs$4$i = $wcs$3$ph165$i;
           } else {
            $alloc$0224$i = $alloc$0$i;$s$6$i = 0;$wcs$7$i = $wcs$3$ph165$i;
            label = 169;
            break L4;
           }
          } else {
           if ($200) {
            $261 = (_malloc($$8$i)|0);
            $262 = ($261|0)==(0|0);
            if ($262) {
             $alloc$0224$i = $alloc$0$i;$s$6$i = 0;$wcs$7$i = 0;
             label = 169;
             break L4;
            } else {
             $i$2$ph$i = 0;$k$1$ph$i = $$8$i;$s$2$ph$i = $261;
            }
            while(1) {
             $i$2$i = $i$2$ph$i;
             while(1) {
              $263 = HEAP32[$7>>2]|0;
              $264 = HEAP32[$8>>2]|0;
              $265 = ($263>>>0)<($264>>>0);
              if ($265) {
               $266 = (($263) + 1|0);
               HEAP32[$7>>2] = $266;
               $267 = HEAP8[$263>>0]|0;
               $268 = $267&255;
               $271 = $268;
              } else {
               $269 = (___shgetc($f)|0);
               $271 = $269;
              }
              $270 = (($271) + 1)|0;
              $272 = (($scanset$i) + ($270)|0);
              $273 = HEAP8[$272>>0]|0;
              $274 = ($273<<24>>24)==(0);
              if ($274) {
               $i$4$i = $i$2$i;$s$3$i = $s$2$ph$i;$wcs$4$i = 0;
               break L98;
              }
              $275 = $271&255;
              $276 = (($i$2$i) + 1)|0;
              $277 = (($s$2$ph$i) + ($i$2$i)|0);
              HEAP8[$277>>0] = $275;
              $278 = ($276|0)==($k$1$ph$i|0);
              if ($278) {
               break;
              } else {
               $i$2$i = $276;
              }
             }
             $factor17$i = $k$1$ph$i << 1;
             $279 = $factor17$i | 1;
             $280 = (_realloc($s$2$ph$i,$279)|0);
             $281 = ($280|0)==(0|0);
             if ($281) {
              $alloc$0224$i = $alloc$0$i;$s$6$i = $s$2$ph$i;$wcs$7$i = 0;
              label = 169;
              break L4;
             } else {
              $i$2$ph$i$phi = $k$1$ph$i;$k$1$ph$i = $279;$s$2$ph$i = $280;$i$2$ph$i = $i$2$ph$i$phi;
             }
            }
           }
           $282 = ($dest$0$i|0)==(0|0);
           if ($282) {
            $300 = $162;
            while(1) {
             $298 = HEAP32[$7>>2]|0;
             $299 = ($298>>>0)<($300>>>0);
             if ($299) {
              $301 = (($298) + 1|0);
              HEAP32[$7>>2] = $301;
              $302 = HEAP8[$298>>0]|0;
              $303 = $302&255;
              $306 = $303;
             } else {
              $304 = (___shgetc($f)|0);
              $306 = $304;
             }
             $305 = (($306) + 1)|0;
             $307 = (($scanset$i) + ($305)|0);
             $308 = HEAP8[$307>>0]|0;
             $309 = ($308<<24>>24)==(0);
             if ($309) {
              $i$4$i = 0;$s$3$i = 0;$wcs$4$i = 0;
              break L98;
             }
             $$pre237$i = HEAP32[$8>>2]|0;
             $300 = $$pre237$i;
            }
           } else {
            $285 = $162;$i$3$i = 0;
            while(1) {
             $283 = HEAP32[$7>>2]|0;
             $284 = ($283>>>0)<($285>>>0);
             if ($284) {
              $286 = (($283) + 1|0);
              HEAP32[$7>>2] = $286;
              $287 = HEAP8[$283>>0]|0;
              $288 = $287&255;
              $291 = $288;
             } else {
              $289 = (___shgetc($f)|0);
              $291 = $289;
             }
             $290 = (($291) + 1)|0;
             $292 = (($scanset$i) + ($290)|0);
             $293 = HEAP8[$292>>0]|0;
             $294 = ($293<<24>>24)==(0);
             if ($294) {
              $i$4$i = $i$3$i;$s$3$i = $dest$0$i;$wcs$4$i = 0;
              break L98;
             }
             $295 = $291&255;
             $296 = (($i$3$i) + 1)|0;
             $297 = (($dest$0$i) + ($i$3$i)|0);
             HEAP8[$297>>0] = $295;
             $$pre238$i = HEAP32[$8>>2]|0;
             $285 = $$pre238$i;$i$3$i = $296;
            }
           }
          }
         } while(0);
         $310 = HEAP32[$8>>2]|0;
         $311 = ($310|0)==(0|0);
         $$pre235$i = HEAP32[$7>>2]|0;
         if ($311) {
          $316 = $$pre235$i;
         } else {
          $312 = (($$pre235$i) + -1|0);
          HEAP32[$7>>2] = $312;
          $316 = $312;
         }
         $313 = HEAP32[$9>>2]|0;
         $314 = HEAP32[$10>>2]|0;
         $315 = $316;
         $317 = $314;
         $318 = (($315) - ($317))|0;
         $319 = (($318) + ($313))|0;
         $320 = ($319|0)==(0);
         if ($320) {
          $alloc$2$i = $alloc$0$i;$matches$2$i = $matches$0135$i;$s$8$i = $s$3$i;$wcs$9$i = $wcs$4$i;
          break L4;
         }
         $$not$i = $165 ^ 1;
         $321 = ($319|0)==($width$1$i|0);
         $or$cond9$i = $321 | $$not$i;
         if (!($or$cond9$i)) {
          $alloc$2$i = $alloc$0$i;$matches$2$i = $matches$0135$i;$s$8$i = $s$3$i;$wcs$9$i = $wcs$4$i;
          break L4;
         }
         do {
          if ($200) {
           if ($199) {
            HEAP32[$dest$0$i>>2] = $wcs$4$i;
            break;
           } else {
            HEAP32[$dest$0$i>>2] = $s$3$i;
            break;
           }
          }
         } while(0);
         if ($165) {
          $p$10$i = $p$9$i;$s$4$i = $s$3$i;$wcs$5$i = $wcs$4$i;
         } else {
          $322 = ($wcs$4$i|0)==(0|0);
          if (!($322)) {
           $323 = (($wcs$4$i) + ($i$4$i<<2)|0);
           HEAP32[$323>>2] = 0;
          }
          $324 = ($s$3$i|0)==(0|0);
          if ($324) {
           $p$10$i = $p$9$i;$s$4$i = 0;$wcs$5$i = $wcs$4$i;
           break L70;
          }
          $325 = (($s$3$i) + ($i$4$i)|0);
          HEAP8[$325>>0] = 0;
          $p$10$i = $p$9$i;$s$4$i = $s$3$i;$wcs$5$i = $wcs$4$i;
         }
         break;
        }
        case 111:  {
         $base$0$i = 8;
         label = 151;
         break;
        }
        case 117: case 100:  {
         $base$0$i = 10;
         label = 151;
         break;
        }
        case 105:  {
         $base$0$i = 0;
         label = 151;
         break;
        }
        default: {
         $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
        }
        }
       } while(0);
       L190: do {
        if ((label|0) == 151) {
         label = 0;
         $326 = (___intscan($f,$base$0$i,0,-1,-1)|0);
         $327 = tempRet0;
         $328 = HEAP32[$9>>2]|0;
         $329 = HEAP32[$7>>2]|0;
         $330 = HEAP32[$10>>2]|0;
         $331 = $329;
         $332 = $330;
         $333 = (($332) - ($331))|0;
         $334 = ($328|0)==($333|0);
         if ($334) {
          $alloc$2$i = $alloc$0$i;$matches$2$i = $matches$0135$i;$s$8$i = $s$1$i;$wcs$9$i = $wcs$1$i;
          break L4;
         }
         $335 = ($$$i|0)==(112);
         $336 = ($dest$0$i|0)!=(0|0);
         $or$cond3$i = $335 & $336;
         if ($or$cond3$i) {
          $337 = $326;
          HEAP32[$dest$0$i>>2] = $337;
          $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
          break;
         }
         $338 = ($dest$0$i|0)==(0|0);
         if ($338) {
          $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
         } else {
          switch ($$size$0$i|0) {
          case 1:  {
           HEAP32[$dest$0$i>>2] = $326;
           $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
           break L190;
           break;
          }
          case 3:  {
           $341 = $dest$0$i;
           $342 = $341;
           HEAP32[$342>>2] = $326;
           $343 = (($341) + 4)|0;
           $344 = $343;
           HEAP32[$344>>2] = $327;
           $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
           break L190;
           break;
          }
          case -2:  {
           $339 = $326&255;
           HEAP8[$dest$0$i>>0] = $339;
           $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
           break L190;
           break;
          }
          case -1:  {
           $340 = $326&65535;
           HEAP16[$dest$0$i>>1] = $340;
           $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
           break L190;
           break;
          }
          case 0:  {
           HEAP32[$dest$0$i>>2] = $326;
           $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
           break L190;
           break;
          }
          default: {
           $p$10$i = $p$5$i;$s$4$i = $s$1$i;$wcs$5$i = $wcs$1$i;
           break L190;
          }
          }
         }
        }
       } while(0);
       $355 = HEAP32[$9>>2]|0;
       $356 = HEAP32[$7>>2]|0;
       $357 = HEAP32[$10>>2]|0;
       $358 = $356;
       $359 = $357;
       $360 = (($355) + ($pos$1$i))|0;
       $361 = (($360) + ($358))|0;
       $362 = (($361) - ($359))|0;
       $not$$i = ($dest$0$i|0)!=(0|0);
       $363 = $not$$i&1;
       $matches$0$$i = (($363) + ($matches$0135$i))|0;
       $matches$1$i = $matches$0$$i;$p$11$i = $p$10$i;$pos$2$i = $362;$s$5$i = $s$4$i;$wcs$6$i = $wcs$5$i;
       break L6;
      }
     } while(0);
     $55 = $52&1;
     $56 = (($p$0141$i) + ($55)|0);
     HEAP32[$16>>2] = 0;
     $57 = HEAP32[$10>>2]|0;
     $58 = HEAP32[$7>>2]|0;
     $59 = $57;
     $60 = $58;
     $61 = (($59) - ($60))|0;
     HEAP32[$9>>2] = $61;
     HEAP32[$8>>2] = $57;
     $62 = ($58>>>0)<($57>>>0);
     if ($62) {
      $63 = (($58) + 1|0);
      HEAP32[$7>>2] = $63;
      $64 = HEAP8[$58>>0]|0;
      $65 = $64&255;
      $70 = $65;
     } else {
      $66 = (___shgetc($f)|0);
      $70 = $66;
     }
     $67 = HEAP8[$56>>0]|0;
     $68 = $67&255;
     $69 = ($70|0)==($68|0);
     if (!($69)) {
      label = 22;
      break L4;
     }
     $77 = (($pos$0140$i) + 1)|0;
     $matches$1$i = $matches$0135$i;$p$11$i = $56;$pos$2$i = $77;$s$5$i = $s$0133$i;$wcs$6$i = $wcs$0134$i;
    }
   }
  } while(0);
  if ((label|0) == 5) {
   while(1) {
    label = 0;
    $22 = (($p$1$i) + 1|0);
    $23 = HEAP8[$22>>0]|0;
    $24 = ($23<<24>>24)==(32);
    if ($24) {
     $p$1$i = $22;
     label = 5;
     continue;
    }
    $25 = $23&255;
    $26 = (($25) + -9)|0;
    $27 = ($26>>>0)<(5);
    if ($27) {
     $p$1$i = $22;
     label = 5;
    } else {
     break;
    }
   }
   HEAP32[$16>>2] = 0;
   $28 = HEAP32[$10>>2]|0;
   $29 = HEAP32[$7>>2]|0;
   $30 = $28;
   $31 = $29;
   $32 = (($30) - ($31))|0;
   HEAP32[$9>>2] = $32;
   HEAP32[$8>>2] = $28;
   $34 = $29;$35 = $28;
   L215: while(1) {
    $33 = ($34>>>0)<($35>>>0);
    if ($33) {
     $36 = (($34) + 1|0);
     HEAP32[$7>>2] = $36;
     $37 = HEAP8[$34>>0]|0;
     $38 = $37&255;
     $40 = $38;
    } else {
     $39 = (___shgetc($f)|0);
     $40 = $39;
    }
    switch ($40|0) {
    case 9: case 10: case 11: case 12: case 13: case 32:  {
     break;
    }
    default: {
     break L215;
    }
    }
    $$pre13 = HEAP32[$7>>2]|0;
    $$pre14 = HEAP32[$8>>2]|0;
    $34 = $$pre13;$35 = $$pre14;
   }
   $41 = HEAP32[$8>>2]|0;
   $42 = ($41|0)==(0|0);
   $$pre240$i = HEAP32[$7>>2]|0;
   if ($42) {
    $47 = $$pre240$i;
   } else {
    $43 = (($$pre240$i) + -1|0);
    HEAP32[$7>>2] = $43;
    $47 = $43;
   }
   $44 = HEAP32[$9>>2]|0;
   $45 = HEAP32[$10>>2]|0;
   $46 = $47;
   $48 = $45;
   $49 = (($44) + ($pos$0140$i))|0;
   $50 = (($49) + ($46))|0;
   $51 = (($50) - ($48))|0;
   $matches$1$i = $matches$0135$i;$p$11$i = $p$1$i;$pos$2$i = $51;$s$5$i = $s$0133$i;$wcs$6$i = $wcs$0134$i;
  }
  $364 = (($p$11$i) + 1|0);
  $365 = HEAP8[$364>>0]|0;
  $366 = ($365<<24>>24)==(0);
  if ($366) {
   $matches$3$i = $matches$1$i;
   label = 173;
   break;
  } else {
   $18 = $365;$matches$0135$i = $matches$1$i;$p$0141$i = $364;$pos$0140$i = $pos$2$i;$s$0133$i = $s$5$i;$wcs$0134$i = $wcs$6$i;
  }
 }
 if ((label|0) == 22) {
  $71 = HEAP32[$8>>2]|0;
  $72 = ($71|0)==(0|0);
  if (!($72)) {
   $73 = HEAP32[$7>>2]|0;
   $74 = (($73) + -1|0);
   HEAP32[$7>>2] = $74;
  }
  $75 = ($70|0)>(-1);
  $76 = ($matches$0135$i|0)!=(0);
  $or$cond5$i = $75 | $76;
  if ($or$cond5$i) {
   $matches$3$i = $matches$0135$i;
   STACKTOP = sp;return ($matches$3$i|0);
  } else {
   $alloc$1$i = 0;$s$7$i = $s$0133$i;$wcs$8$i = $wcs$0134$i;
   label = 170;
  }
 }
 else if ((label|0) == 169) {
  $$old4$i = ($matches$0135$i|0)==(0);
  if ($$old4$i) {
   $alloc$1$i = $alloc$0224$i;$s$7$i = $s$6$i;$wcs$8$i = $wcs$7$i;
   label = 170;
  } else {
   $alloc$2$i = $alloc$0224$i;$matches$2$i = $matches$0135$i;$s$8$i = $s$6$i;$wcs$9$i = $wcs$7$i;
  }
 }
 else if ((label|0) == 173) {
  STACKTOP = sp;return ($matches$3$i|0);
 }
 if ((label|0) == 170) {
  $alloc$2$i = $alloc$1$i;$matches$2$i = -1;$s$8$i = $s$7$i;$wcs$9$i = $wcs$8$i;
 }
 $367 = ($alloc$2$i|0)==(0);
 if ($367) {
  $matches$3$i = $matches$2$i;
  STACKTOP = sp;return ($matches$3$i|0);
 }
 _free($s$8$i);
 _free($wcs$9$i);
 $matches$3$i = $matches$2$i;
 STACKTOP = sp;return ($matches$3$i|0);
}
function _qsort($base,$nel,$width,$cmp) {
 $base = $base|0;
 $nel = $nel|0;
 $width = $width|0;
 $cmp = $cmp|0;
 var $$ = 0, $$0$be$i = 0, $$0$be$i20 = 0, $$0$i50 = 0, $$01$be$i = 0, $$01$be$i19 = 0, $$012$i = 0, $$012$i16 = 0, $$02$i$i = 0, $$02$i3$i = 0, $$02$i3472 = 0, $$02$i75 = 0, $$02$us$i = 0, $$02$us$i32 = 0, $$03$i = 0, $$03$i15 = 0, $$69 = 0, $$70 = 0, $$lcssa78 = 0, $$lcssa79 = 0;
 var $$pre = 0, $$pre$i = 0, $$pre$i22 = 0, $$pre$i28 = 0, $$pre$i9 = 0, $$sum = 0, $$sum$i = 0, $$sum$i18 = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $4$phi = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ar$i = 0, $exitcond$i = 0, $exitcond$i31 = 0, $head$0$lcssa = 0, $head$080 = 0, $head$1 = 0, $i$0 = 0;
 var $i$0$lcssa$i = 0, $i$0$lcssa$i24 = 0, $i$01$us$i = 0, $i$01$us$i30 = 0, $i$04$i = 0, $i$04$i14 = 0, $lp = 0, $nTrailingZeros$03$i$i = 0, $nTrailingZeros$03$i2$i = 0, $pshift$0$lcssa = 0, $pshift$081 = 0, $pshift$1 = 0, $pshift$2 = 0, $sum = 0, $sum$i = 0, $sum$i17 = 0, $tmp$i = 0, $tmp$i26 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 944|0;
 $tmp$i26 = sp + 680|0;
 $tmp$i = sp + 424|0;
 $ar$i = sp + 192|0;
 $lp = sp;
 $0 = Math_imul($width, $nel)|0;
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 }
 $$sum = (($0) - ($width))|0;
 $2 = (($lp) + 4|0);
 HEAP32[$2>>2] = $width;
 HEAP32[$lp>>2] = $width;
 $4 = $width;$6 = $width;$i$0 = 2;
 while(1) {
  $3 = (($4) + ($width))|0;
  $5 = (($3) + ($6))|0;
  $7 = (($lp) + ($i$0<<2)|0);
  HEAP32[$7>>2] = $5;
  $8 = ($5>>>0)<($0>>>0);
  $9 = (($i$0) + 1)|0;
  if ($8) {
   $4$phi = $6;$6 = $5;$i$0 = $9;$4 = $4$phi;
  } else {
   break;
  }
 }
 $10 = (0 - ($width))|0;
 $11 = (($base) + ($$sum)|0);
 $12 = ($$sum|0)>(0);
 if ($12) {
  $13 = ($width|0)==(0);
  $14 = ($width>>>0)>(256);
  $15 = $14 ? 256 : $width;
  $16 = ($15|0)==($width|0);
  $17 = $11;
  $19 = 1;$61 = 0;$head$080 = $base;$pshift$081 = 1;
  while(1) {
   $18 = $19 & 3;
   $20 = ($18|0)==(3);
   do {
    if ($20) {
     HEAP32[$ar$i>>2] = $head$080;
     $21 = ($pshift$081|0)>(1);
     L13: do {
      if ($21) {
       $$012$i = $pshift$081;$$03$i = $head$080;$27 = $head$080;$i$04$i = 1;
       while(1) {
        $22 = (($$03$i) + ($10)|0);
        $23 = (($$012$i) + -2)|0;
        $24 = (($lp) + ($23<<2)|0);
        $25 = HEAP32[$24>>2]|0;
        $sum$i = (($25) + ($width))|0;
        $$sum$i = (0 - ($sum$i))|0;
        $26 = (($$03$i) + ($$sum$i)|0);
        $28 = (FUNCTION_TABLE_iii[$cmp & 63]($27,$26)|0);
        $29 = ($28|0)>(-1);
        if ($29) {
         $30 = (FUNCTION_TABLE_iii[$cmp & 63]($27,$22)|0);
         $31 = ($30|0)>(-1);
         if ($31) {
          $i$0$lcssa$i = $i$04$i;
          break;
         }
        }
        $32 = (FUNCTION_TABLE_iii[$cmp & 63]($26,$22)|0);
        $33 = ($32|0)>(-1);
        $34 = (($i$04$i) + 1)|0;
        $35 = (($ar$i) + ($i$04$i<<2)|0);
        if ($33) {
         HEAP32[$35>>2] = $26;
         $36 = (($$012$i) + -1)|0;
         $$0$be$i = $26;$$01$be$i = $36;
        } else {
         HEAP32[$35>>2] = $22;
         $$0$be$i = $22;$$01$be$i = $23;
        }
        $37 = ($$01$be$i|0)>(1);
        if (!($37)) {
         $i$0$lcssa$i = $34;
         break;
        }
        $$pre$i = HEAP32[$ar$i>>2]|0;
        $$012$i = $$01$be$i;$$03$i = $$0$be$i;$27 = $$pre$i;$i$04$i = $34;
       }
       $38 = ($i$0$lcssa$i|0)<(2);
       if (!($38)) {
        $39 = (($ar$i) + ($i$0$lcssa$i<<2)|0);
        HEAP32[$39>>2] = $tmp$i;
        if (!($13)) {
         $40 = ($i$0$lcssa$i|0)>(0);
         if ($40) {
          $$02$us$i = $width;$53 = $tmp$i;
         } else {
          $41 = HEAP32[$ar$i>>2]|0;
          _memcpy(($tmp$i|0),($41|0),($15|0))|0;
          if ($16) {
           break;
          } else {
           $$02$i75 = $width;$55 = $15;
          }
          while(1) {
           $54 = (($$02$i75) - ($55))|0;
           $56 = ($54>>>0)>(256);
           $57 = $56 ? 256 : $54;
           _memcpy(($tmp$i|0),($41|0),($57|0))|0;
           $58 = ($54|0)==($57|0);
           if ($58) {
            break L13;
           } else {
            $$02$i75 = $54;$55 = $57;
           }
          }
         }
         while(1) {
          $51 = ($$02$us$i>>>0)>(256);
          $43 = $51 ? 256 : $$02$us$i;
          $52 = HEAP32[$ar$i>>2]|0;
          _memcpy(($53|0),($52|0),($43|0))|0;
          $49 = $52;$i$01$us$i = 0;
          while(1) {
           $45 = (($ar$i) + ($i$01$us$i<<2)|0);
           $46 = (($i$01$us$i) + 1)|0;
           $47 = (($ar$i) + ($46<<2)|0);
           $48 = HEAP32[$47>>2]|0;
           _memcpy(($49|0),($48|0),($43|0))|0;
           $50 = (($49) + ($43)|0);
           HEAP32[$45>>2] = $50;
           $exitcond$i = ($46|0)==($i$0$lcssa$i|0);
           if ($exitcond$i) {
            break;
           } else {
            $49 = $48;$i$01$us$i = $46;
           }
          }
          $42 = ($$02$us$i|0)==($43|0);
          if ($42) {
           break L13;
          }
          $44 = (($$02$us$i) - ($43))|0;
          $$pre$i9 = HEAP32[$39>>2]|0;
          $$02$us$i = $44;$53 = $$pre$i9;
         }
        }
       }
      }
     } while(0);
     $59 = $19 >>> 2;
     $60 = $61 << 30;
     $62 = $59 | $60;
     $63 = $61 >>> 2;
     $64 = (($pshift$081) + 2)|0;
     $122 = $62;$182 = $63;$pshift$1 = $64;
    } else {
     $65 = (($pshift$081) + -1)|0;
     $66 = (($lp) + ($65<<2)|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = $head$080;
     $69 = (($17) - ($68))|0;
     $70 = ($67>>>0)<($69>>>0);
     L39: do {
      if ($70) {
       HEAP32[$ar$i>>2] = $head$080;
       $71 = ($pshift$081|0)>(1);
       if ($71) {
        $$012$i16 = $pshift$081;$$03$i15 = $head$080;$77 = $head$080;$i$04$i14 = 1;
        while(1) {
         $72 = (($$03$i15) + ($10)|0);
         $73 = (($$012$i16) + -2)|0;
         $74 = (($lp) + ($73<<2)|0);
         $75 = HEAP32[$74>>2]|0;
         $sum$i17 = (($75) + ($width))|0;
         $$sum$i18 = (0 - ($sum$i17))|0;
         $76 = (($$03$i15) + ($$sum$i18)|0);
         $78 = (FUNCTION_TABLE_iii[$cmp & 63]($77,$76)|0);
         $79 = ($78|0)>(-1);
         if ($79) {
          $80 = (FUNCTION_TABLE_iii[$cmp & 63]($77,$72)|0);
          $81 = ($80|0)>(-1);
          if ($81) {
           $i$0$lcssa$i24 = $i$04$i14;
           break;
          }
         }
         $82 = (FUNCTION_TABLE_iii[$cmp & 63]($76,$72)|0);
         $83 = ($82|0)>(-1);
         $84 = (($i$04$i14) + 1)|0;
         $85 = (($ar$i) + ($i$04$i14<<2)|0);
         if ($83) {
          HEAP32[$85>>2] = $76;
          $86 = (($$012$i16) + -1)|0;
          $$0$be$i20 = $76;$$01$be$i19 = $86;
         } else {
          HEAP32[$85>>2] = $72;
          $$0$be$i20 = $72;$$01$be$i19 = $73;
         }
         $87 = ($$01$be$i19|0)>(1);
         if (!($87)) {
          $i$0$lcssa$i24 = $84;
          break;
         }
         $$pre$i22 = HEAP32[$ar$i>>2]|0;
         $$012$i16 = $$01$be$i19;$$03$i15 = $$0$be$i20;$77 = $$pre$i22;$i$04$i14 = $84;
        }
        $88 = ($i$0$lcssa$i24|0)<(2);
        if (!($88)) {
         $89 = (($ar$i) + ($i$0$lcssa$i24<<2)|0);
         HEAP32[$89>>2] = $tmp$i26;
         if (!($13)) {
          $90 = ($i$0$lcssa$i24|0)>(0);
          if ($90) {
           $$02$us$i32 = $width;$103 = $tmp$i26;
          } else {
           $91 = HEAP32[$ar$i>>2]|0;
           _memcpy(($tmp$i26|0),($91|0),($15|0))|0;
           if ($16) {
            break;
           } else {
            $$02$i3472 = $width;$105 = $15;
           }
           while(1) {
            $104 = (($$02$i3472) - ($105))|0;
            $106 = ($104>>>0)>(256);
            $107 = $106 ? 256 : $104;
            _memcpy(($tmp$i26|0),($91|0),($107|0))|0;
            $108 = ($104|0)==($107|0);
            if ($108) {
             break L39;
            } else {
             $$02$i3472 = $104;$105 = $107;
            }
           }
          }
          while(1) {
           $101 = ($$02$us$i32>>>0)>(256);
           $93 = $101 ? 256 : $$02$us$i32;
           $102 = HEAP32[$ar$i>>2]|0;
           _memcpy(($103|0),($102|0),($93|0))|0;
           $99 = $102;$i$01$us$i30 = 0;
           while(1) {
            $95 = (($ar$i) + ($i$01$us$i30<<2)|0);
            $96 = (($i$01$us$i30) + 1)|0;
            $97 = (($ar$i) + ($96<<2)|0);
            $98 = HEAP32[$97>>2]|0;
            _memcpy(($99|0),($98|0),($93|0))|0;
            $100 = (($99) + ($93)|0);
            HEAP32[$95>>2] = $100;
            $exitcond$i31 = ($96|0)==($i$0$lcssa$i24|0);
            if ($exitcond$i31) {
             break;
            } else {
             $99 = $98;$i$01$us$i30 = $96;
            }
           }
           $92 = ($$02$us$i32|0)==($93|0);
           if ($92) {
            break L39;
           }
           $94 = (($$02$us$i32) - ($93))|0;
           $$pre$i28 = HEAP32[$89>>2]|0;
           $$02$us$i32 = $94;$103 = $$pre$i28;
          }
         }
        }
       }
      } else {
       _trinkle($head$080,$width,$cmp,$19,$61,$pshift$081,0,$lp);
      }
     } while(0);
     $109 = ($pshift$081|0)==(1);
     if ($109) {
      $110 = $61 << 1;
      $111 = $19 >>> 31;
      $112 = $111 | $110;
      $113 = $19 << 1;
      $122 = $113;$182 = $112;$pshift$1 = 0;
      break;
     } else {
      $114 = ($65>>>0)>(31);
      $115 = (($pshift$081) + -33)|0;
      $$ = $114 ? 0 : $19;
      $$69 = $114 ? $19 : $61;
      $$70 = $114 ? $115 : $65;
      $116 = $$69 << $$70;
      $117 = (32 - ($$70))|0;
      $118 = $$ >>> $117;
      $119 = $118 | $116;
      $120 = $$ << $$70;
      $122 = $120;$182 = $119;$pshift$1 = 1;
      break;
     }
    }
   } while(0);
   $121 = $122 | 1;
   $123 = (($head$080) + ($width)|0);
   $124 = ($123>>>0)<($11>>>0);
   if ($124) {
    $19 = $121;$61 = $182;$head$080 = $123;$pshift$081 = $pshift$1;
   } else {
    $$lcssa78 = $182;$$lcssa79 = $121;$head$0$lcssa = $123;$pshift$0$lcssa = $pshift$1;
    break;
   }
  }
 } else {
  $$lcssa78 = 0;$$lcssa79 = 1;$head$0$lcssa = $base;$pshift$0$lcssa = 1;
 }
 _trinkle($head$0$lcssa,$width,$cmp,$$lcssa79,$$lcssa78,$pshift$0$lcssa,0,$lp);
 $127 = $$lcssa79;$129 = $$lcssa78;$head$1 = $head$0$lcssa;$pshift$2 = $pshift$0$lcssa;
 while(1) {
  $125 = ($pshift$2|0)==(1);
  if ($125) {
   $126 = ($127|0)==(1);
   if ($126) {
    $128 = ($129|0)==(0);
    if ($128) {
     break;
    } else {
     label = 52;
    }
   }
  } else {
   label = 52;
  }
  if ((label|0) == 52) {
   label = 0;
   $130 = ($pshift$2|0)<(2);
   if (!($130)) {
    $162 = $129 << 2;
    $163 = $127 >>> 30;
    $164 = $163 | $162;
    $165 = (($pshift$2) + -2)|0;
    $166 = $127 << 1;
    $167 = $166 & 2147483646;
    $168 = $163 << 31;
    $169 = $167 | $168;
    $170 = $169 ^ 3;
    $171 = $164 >>> 1;
    $172 = (($lp) + ($165<<2)|0);
    $173 = HEAP32[$172>>2]|0;
    $sum = (($173) + ($width))|0;
    $$sum2 = (0 - ($sum))|0;
    $174 = (($head$1) + ($$sum2)|0);
    $175 = (($pshift$2) + -1)|0;
    _trinkle($174,$width,$cmp,$170,$171,$175,1,$lp);
    $176 = $171 << 1;
    $177 = $163 & 1;
    $178 = $176 | $177;
    $179 = $170 << 1;
    $180 = $179 | 1;
    $181 = (($head$1) + ($10)|0);
    _trinkle($181,$width,$cmp,$180,$178,$165,1,$lp);
    $127 = $180;$129 = $178;$head$1 = $181;$pshift$2 = $165;
    continue;
   }
  }
  $131 = (($127) + -1)|0;
  $132 = ($131|0)==(0);
  do {
   if ($132) {
    $152 = 32;
    label = 62;
   } else {
    $133 = $131 & 1;
    $134 = ($133|0)==(0);
    if ($134) {
     $$02$i$i = $131;$nTrailingZeros$03$i$i = 0;
     while(1) {
      $135 = (($nTrailingZeros$03$i$i) + 1)|0;
      $136 = $$02$i$i >>> 1;
      $137 = $136 & 1;
      $138 = ($137|0)==(0);
      if ($138) {
       $$02$i$i = $136;$nTrailingZeros$03$i$i = $135;
      } else {
       break;
      }
     }
     $139 = ($135|0)==(0);
     if ($139) {
      label = 57;
     } else {
      $150 = $135;
     }
    } else {
     label = 57;
    }
    if ((label|0) == 57) {
     label = 0;
     $140 = ($129|0)==(0);
     if ($140) {
      $152 = 64;
      label = 62;
      break;
     }
     $141 = $129 & 1;
     $142 = ($141|0)==(0);
     if ($142) {
      $$02$i3$i = $129;$nTrailingZeros$03$i2$i = 0;
     } else {
      $$0$i50 = 0;$154 = $127;$157 = $129;$161 = 0;
      break;
     }
     while(1) {
      $143 = (($nTrailingZeros$03$i2$i) + 1)|0;
      $144 = $$02$i3$i >>> 1;
      $145 = $144 & 1;
      $146 = ($145|0)==(0);
      if ($146) {
       $$02$i3$i = $144;$nTrailingZeros$03$i2$i = $143;
      } else {
       break;
      }
     }
     $147 = (($nTrailingZeros$03$i2$i) + 33)|0;
     $148 = ($143|0)==(0);
     if ($148) {
      $$0$i50 = 0;$154 = $127;$157 = $129;$161 = 0;
      break;
     } else {
      $150 = $147;
     }
    }
    $149 = ($150>>>0)>(31);
    if ($149) {
     $152 = $150;
     label = 62;
    } else {
     $$0$i50 = $150;$154 = $127;$157 = $129;$161 = $150;
    }
   }
  } while(0);
  if ((label|0) == 62) {
   label = 0;
   $151 = (($152) + -32)|0;
   $$0$i50 = $151;$154 = $129;$157 = 0;$161 = $152;
  }
  $153 = $154 >>> $$0$i50;
  $155 = (32 - ($$0$i50))|0;
  $156 = $157 << $155;
  $158 = $156 | $153;
  $159 = $157 >>> $$0$i50;
  $160 = (($161) + ($pshift$2))|0;
  $$pre = (($head$1) + ($10)|0);
  $127 = $158;$129 = $159;$head$1 = $$pre;$pshift$2 = $160;
 }
 STACKTOP = sp;return;
}
function _wmemmove($d,$s,$n) {
 $d = $d|0;
 $s = $s|0;
 $n = $n|0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $d;
 $1 = $s;
 $2 = (($0) - ($1))|0;
 $3 = $2 >> 2;
 $4 = ($3>>>0)<($n>>>0);
 $5 = ($n|0)==(0);
 if ($4) {
  if ($5) {
   STACKTOP = sp;return;
  } else {
   $$in = $n;
  }
  while(1) {
   $6 = (($$in) + -1)|0;
   $7 = (($s) + ($6<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = (($d) + ($6<<2)|0);
   HEAP32[$9>>2] = $8;
   $10 = ($6|0)==(0);
   if ($10) {
    break;
   } else {
    $$in = $6;
   }
  }
  STACKTOP = sp;return;
 } else {
  if ($5) {
   STACKTOP = sp;return;
  } else {
   $$025 = $s;$$07 = $d;$$16 = $n;
  }
  while(1) {
   $11 = (($$16) + -1)|0;
   $12 = (($$025) + 4|0);
   $13 = HEAP32[$$025>>2]|0;
   $14 = (($$07) + 4|0);
   HEAP32[$$07>>2] = $13;
   $15 = ($11|0)==(0);
   if ($15) {
    break;
   } else {
    $$025 = $12;$$07 = $14;$$16 = $11;
   }
  }
  STACKTOP = sp;return;
 }
}
function _do_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___string_read($f,$buf,$len)|0);
 STACKTOP = sp;return ($0|0);
}
function _trinkle($head,$width,$cmp,$pp$val,$pp$1$val,$pshift,$trusty,$lp) {
 $head = $head|0;
 $width = $width|0;
 $cmp = $cmp|0;
 $pp$val = $pp$val|0;
 $pp$1$val = $pp$1$val|0;
 $pshift = $pshift|0;
 $trusty = $trusty|0;
 $lp = $lp|0;
 var $$0$be$i = 0, $$0$i = 0, $$0$lcssa = 0, $$0$lcssa31 = 0, $$01$be$i = 0, $$012$i = 0, $$017 = 0, $$02$i$i = 0, $$02$i179 = 0, $$02$i3$i = 0, $$02$i6 = 0, $$02$lcssa = 0, $$02$lcssa33 = 0, $$02$us$i = 0, $$02$us$i15 = 0, $$0215 = 0, $$03$i = 0, $$03$lcssa = 0, $$0314 = 0, $$pre = 0;
 var $$pre$i = 0, $$pre$i11 = 0, $$pre$i6 = 0, $$sum = 0, $$sum$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ar = 0, $ar$i = 0, $exitcond$i = 0, $exitcond$i14 = 0, $i$0$lcssa = 0, $i$0$lcssa$i = 0, $i$0$lcssa32 = 0, $i$01$us$i = 0, $i$01$us$i13 = 0;
 var $i$016 = 0, $i$04$i = 0, $nTrailingZeros$03$i$i = 0, $nTrailingZeros$03$i2$i = 0, $or$cond = 0, $or$cond5 = 0, $or$cond511 = 0, $pp$val112 = 0, $sum = 0, $sum$i = 0, $tmp$i9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 720|0;
 $tmp$i9 = sp + 456|0;
 $ar$i = sp + 228|0;
 $ar = sp;
 HEAP32[$ar>>2] = $head;
 $0 = (0 - ($width))|0;
 $1 = ($pp$val|0)==(1);
 $2 = ($pp$1$val|0)==(0);
 $or$cond511 = $1 & $2;
 L1: do {
  if ($or$cond511) {
   $$0$lcssa = $head;$$02$lcssa = $pshift;$$03$lcssa = $trusty;$i$0$lcssa = 1;
   label = 18;
  } else {
   $$017 = $head;$$0215 = $pshift;$$0314 = $trusty;$124 = $2;$33 = $pp$1$val;$7 = $head;$i$016 = 1;$pp$val112 = $pp$val;
   while(1) {
    $3 = (($lp) + ($$0215<<2)|0);
    $4 = HEAP32[$3>>2]|0;
    $5 = (0 - ($4))|0;
    $6 = (($$017) + ($5)|0);
    $8 = (FUNCTION_TABLE_iii[$cmp & 63]($6,$7)|0);
    $9 = ($8|0)<(1);
    if ($9) {
     $$0$lcssa = $$017;$$02$lcssa = $$0215;$$03$lcssa = $$0314;$i$0$lcssa = $i$016;
     label = 18;
     break L1;
    }
    $10 = ($$0314|0)==(0);
    $11 = ($$0215|0)>(1);
    $or$cond = $10 & $11;
    if ($or$cond) {
     $12 = (($$017) + ($0)|0);
     $13 = (($$0215) + -2)|0;
     $14 = (($lp) + ($13<<2)|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = (FUNCTION_TABLE_iii[$cmp & 63]($12,$6)|0);
     $17 = ($16|0)>(-1);
     if ($17) {
      $$0$lcssa31 = $$017;$$02$lcssa33 = $$0215;$i$0$lcssa32 = $i$016;
      break L1;
     }
     $sum = (($15) + ($width))|0;
     $$sum = (0 - ($sum))|0;
     $18 = (($$017) + ($$sum)|0);
     $19 = (FUNCTION_TABLE_iii[$cmp & 63]($18,$6)|0);
     $20 = ($19|0)>(-1);
     if ($20) {
      $$0$lcssa31 = $$017;$$02$lcssa33 = $$0215;$i$0$lcssa32 = $i$016;
      break L1;
     }
    }
    $21 = (($i$016) + 1)|0;
    $22 = (($ar) + ($i$016<<2)|0);
    HEAP32[$22>>2] = $6;
    $23 = (($pp$val112) + -1)|0;
    $24 = ($23|0)==(0);
    do {
     if ($24) {
      $44 = 32;
      label = 15;
     } else {
      $25 = $23 & 1;
      $26 = ($25|0)==(0);
      if ($26) {
       $$02$i$i = $23;$nTrailingZeros$03$i$i = 0;
       while(1) {
        $27 = (($nTrailingZeros$03$i$i) + 1)|0;
        $28 = $$02$i$i >>> 1;
        $29 = $28 & 1;
        $30 = ($29|0)==(0);
        if ($30) {
         $$02$i$i = $28;$nTrailingZeros$03$i$i = $27;
        } else {
         break;
        }
       }
       $31 = ($27|0)==(0);
       if ($31) {
        label = 10;
       } else {
        $42 = $27;
       }
      } else {
       label = 10;
      }
      if ((label|0) == 10) {
       label = 0;
       if ($124) {
        $44 = 64;
        label = 15;
        break;
       }
       $32 = $33 & 1;
       $34 = ($32|0)==(0);
       if ($34) {
        $$02$i3$i = $33;$nTrailingZeros$03$i2$i = 0;
       } else {
        $$0$i = 0;$46 = $pp$val112;$49 = $33;$53 = 0;
        break;
       }
       while(1) {
        $35 = (($nTrailingZeros$03$i2$i) + 1)|0;
        $36 = $$02$i3$i >>> 1;
        $37 = $36 & 1;
        $38 = ($37|0)==(0);
        if ($38) {
         $$02$i3$i = $36;$nTrailingZeros$03$i2$i = $35;
        } else {
         break;
        }
       }
       $39 = (($nTrailingZeros$03$i2$i) + 33)|0;
       $40 = ($35|0)==(0);
       if ($40) {
        $$0$i = 0;$46 = $pp$val112;$49 = $33;$53 = 0;
        break;
       } else {
        $42 = $39;
       }
      }
      $41 = ($42>>>0)>(31);
      if ($41) {
       $44 = $42;
       label = 15;
      } else {
       $$0$i = $42;$46 = $pp$val112;$49 = $33;$53 = $42;
      }
     }
    } while(0);
    if ((label|0) == 15) {
     label = 0;
     $43 = (($44) + -32)|0;
     $$0$i = $43;$46 = $33;$49 = 0;$53 = $44;
    }
    $45 = $46 >>> $$0$i;
    $47 = (32 - ($$0$i))|0;
    $48 = $49 << $47;
    $50 = $48 | $45;
    $51 = $49 >>> $$0$i;
    $52 = (($53) + ($$0215))|0;
    $54 = ($50|0)==(1);
    $55 = ($51|0)==(0);
    $or$cond5 = $54 & $55;
    if ($or$cond5) {
     $$0$lcssa31 = $6;$$02$lcssa33 = $52;$i$0$lcssa32 = $21;
     break L1;
    }
    $$pre = HEAP32[$ar>>2]|0;
    $$017 = $6;$$0215 = $52;$$0314 = 0;$124 = $55;$33 = $51;$7 = $$pre;$i$016 = $21;$pp$val112 = $50;
   }
  }
 } while(0);
 if ((label|0) == 18) {
  $56 = ($$03$lcssa|0)==(0);
  if ($56) {
   $$0$lcssa31 = $$0$lcssa;$$02$lcssa33 = $$02$lcssa;$i$0$lcssa32 = $i$0$lcssa;
  } else {
   STACKTOP = sp;return;
  }
 }
 $57 = ($i$0$lcssa32|0)<(2);
 L30: do {
  if (!($57)) {
   $58 = (($ar) + ($i$0$lcssa32<<2)|0);
   HEAP32[$58>>2] = $tmp$i9;
   $59 = ($width|0)==(0);
   if (!($59)) {
    $60 = ($i$0$lcssa32|0)>(0);
    if ($60) {
     $$02$us$i15 = $width;$76 = $tmp$i9;
    } else {
     $61 = ($width>>>0)>(256);
     $62 = $61 ? 256 : $width;
     $63 = HEAP32[$ar>>2]|0;
     _memcpy(($tmp$i9|0),($63|0),($62|0))|0;
     $64 = ($62|0)==($width|0);
     if ($64) {
      break;
     } else {
      $$02$i179 = $width;$78 = $62;
     }
     while(1) {
      $77 = (($$02$i179) - ($78))|0;
      $79 = ($77>>>0)>(256);
      $80 = $79 ? 256 : $77;
      _memcpy(($tmp$i9|0),($63|0),($80|0))|0;
      $81 = ($77|0)==($80|0);
      if ($81) {
       break L30;
      } else {
       $$02$i179 = $77;$78 = $80;
      }
     }
    }
    while(1) {
     $74 = ($$02$us$i15>>>0)>(256);
     $66 = $74 ? 256 : $$02$us$i15;
     $75 = HEAP32[$ar>>2]|0;
     _memcpy(($76|0),($75|0),($66|0))|0;
     $72 = $75;$i$01$us$i13 = 0;
     while(1) {
      $68 = (($ar) + ($i$01$us$i13<<2)|0);
      $69 = (($i$01$us$i13) + 1)|0;
      $70 = (($ar) + ($69<<2)|0);
      $71 = HEAP32[$70>>2]|0;
      _memcpy(($72|0),($71|0),($66|0))|0;
      $73 = (($72) + ($66)|0);
      HEAP32[$68>>2] = $73;
      $exitcond$i14 = ($69|0)==($i$0$lcssa32|0);
      if ($exitcond$i14) {
       break;
      } else {
       $72 = $71;$i$01$us$i13 = $69;
      }
     }
     $65 = ($$02$us$i15|0)==($66|0);
     if ($65) {
      break L30;
     }
     $67 = (($$02$us$i15) - ($66))|0;
     $$pre$i11 = HEAP32[$58>>2]|0;
     $$02$us$i15 = $67;$76 = $$pre$i11;
    }
   }
  }
 } while(0);
 HEAP32[$ar$i>>2] = $$0$lcssa31;
 $82 = ($$02$lcssa33|0)>(1);
 L44: do {
  if ($82) {
   $$012$i = $$02$lcssa33;$$03$i = $$0$lcssa31;$88 = $$0$lcssa31;$i$04$i = 1;
   while(1) {
    $83 = (($$03$i) + ($0)|0);
    $84 = (($$012$i) + -2)|0;
    $85 = (($lp) + ($84<<2)|0);
    $86 = HEAP32[$85>>2]|0;
    $sum$i = (($86) + ($width))|0;
    $$sum$i = (0 - ($sum$i))|0;
    $87 = (($$03$i) + ($$sum$i)|0);
    $89 = (FUNCTION_TABLE_iii[$cmp & 63]($88,$87)|0);
    $90 = ($89|0)>(-1);
    if ($90) {
     $91 = (FUNCTION_TABLE_iii[$cmp & 63]($88,$83)|0);
     $92 = ($91|0)>(-1);
     if ($92) {
      $i$0$lcssa$i = $i$04$i;
      break;
     }
    }
    $93 = (FUNCTION_TABLE_iii[$cmp & 63]($87,$83)|0);
    $94 = ($93|0)>(-1);
    $95 = (($i$04$i) + 1)|0;
    $96 = (($ar$i) + ($i$04$i<<2)|0);
    if ($94) {
     HEAP32[$96>>2] = $87;
     $97 = (($$012$i) + -1)|0;
     $$0$be$i = $87;$$01$be$i = $97;
    } else {
     HEAP32[$96>>2] = $83;
     $$0$be$i = $83;$$01$be$i = $84;
    }
    $98 = ($$01$be$i|0)>(1);
    if (!($98)) {
     $i$0$lcssa$i = $95;
     break;
    }
    $$pre$i = HEAP32[$ar$i>>2]|0;
    $$012$i = $$01$be$i;$$03$i = $$0$be$i;$88 = $$pre$i;$i$04$i = $95;
   }
   $99 = ($i$0$lcssa$i|0)<(2);
   if ($99) {
    $125 = $tmp$i9;
   } else {
    $100 = (($ar$i) + ($i$0$lcssa$i<<2)|0);
    HEAP32[$100>>2] = $tmp$i9;
    $101 = ($width|0)==(0);
    if ($101) {
     $125 = $tmp$i9;
    } else {
     $102 = ($i$0$lcssa$i|0)>(0);
     if ($102) {
      $$02$us$i = $width;$118 = $tmp$i9;
     } else {
      $103 = ($width>>>0)>(256);
      $104 = $103 ? 256 : $width;
      $105 = HEAP32[$ar$i>>2]|0;
      _memcpy(($tmp$i9|0),($105|0),($104|0))|0;
      $106 = ($104|0)==($width|0);
      if ($106) {
       $125 = $tmp$i9;
       break;
      } else {
       $$02$i6 = $width;$120 = $104;
      }
      while(1) {
       $119 = (($$02$i6) - ($120))|0;
       $121 = ($119>>>0)>(256);
       $122 = $121 ? 256 : $119;
       _memcpy(($tmp$i9|0),($105|0),($122|0))|0;
       $123 = ($119|0)==($122|0);
       if ($123) {
        $125 = $tmp$i9;
        break L44;
       } else {
        $$02$i6 = $119;$120 = $122;
       }
      }
     }
     while(1) {
      $116 = ($$02$us$i>>>0)>(256);
      $108 = $116 ? 256 : $$02$us$i;
      $117 = HEAP32[$ar$i>>2]|0;
      _memcpy(($118|0),($117|0),($108|0))|0;
      $114 = $117;$i$01$us$i = 0;
      while(1) {
       $110 = (($ar$i) + ($i$01$us$i<<2)|0);
       $111 = (($i$01$us$i) + 1)|0;
       $112 = (($ar$i) + ($111<<2)|0);
       $113 = HEAP32[$112>>2]|0;
       _memcpy(($114|0),($113|0),($108|0))|0;
       $115 = (($114) + ($108)|0);
       HEAP32[$110>>2] = $115;
       $exitcond$i = ($111|0)==($i$0$lcssa$i|0);
       if ($exitcond$i) {
        break;
       } else {
        $114 = $113;$i$01$us$i = $111;
       }
      }
      $107 = ($$02$us$i|0)==($108|0);
      if ($107) {
       $125 = $tmp$i9;
       break L44;
      }
      $109 = (($$02$us$i) - ($108))|0;
      $$pre$i6 = HEAP32[$100>>2]|0;
      $$02$us$i = $109;$118 = $$pre$i6;
     }
    }
   }
  } else {
   $125 = $tmp$i9;
  }
 } while(0);
 STACKTOP = sp;return;
}
function _abort_message($format,$varargs) {
 $format = $format|0;
 $varargs = $varargs|0;
 var $0 = 0, $list = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $list = sp;
 HEAP32[$list>>2] = $varargs;
 $0 = HEAP32[_stderr>>2]|0;
 (_vfprintf(($0|0),($format|0),($list|0))|0);
 (_fputc(10,($0|0))|0);
 _abort();
 // unreachable;
}
function ___cxa_demangle($mangled_name,$buf,$n,$status) {
 $mangled_name = $mangled_name|0;
 $buf = $buf|0;
 $n = $n|0;
 $status = $status|0;
 var $$0 = 0, $$02 = 0, $$0210 = 0, $$1 = 0, $$pr$pre = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__v$i$i = 0, $a = 0, $db = 0, $internal_status = 0, $or$cond = 0, $or$cond6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4208|0;
 $__v$i$i = sp + 4184|0;
 $a = sp;
 $db = sp + 4120|0;
 $internal_status = sp + 4112|0;
 $0 = ($mangled_name|0)==(0|0);
 if (!($0)) {
  $1 = ($buf|0)!=(0|0);
  $2 = ($n|0)==(0|0);
  $or$cond = $1 & $2;
  if (!($or$cond)) {
   if ($1) {
    $4 = HEAP32[$n>>2]|0;
    $85 = $4;
   } else {
    $85 = 0;
   }
   $5 = (($a) + 4096|0);
   HEAP32[$5>>2] = $a;
   HEAP32[$db>>2] = 0;
   $6 = (($db) + 4|0);
   HEAP32[$6>>2] = 0;
   $7 = (($db) + 8|0);
   HEAP32[$7>>2] = 0;
   $8 = (($db) + 12|0);
   HEAP32[$8>>2] = $a;
   $9 = (($db) + 16|0);
   HEAP32[$9>>2] = 0;
   $10 = (($db) + 20|0);
   HEAP32[$10>>2] = 0;
   $11 = (($db) + 24|0);
   HEAP32[$11>>2] = 0;
   $12 = (($db) + 28|0);
   HEAP32[$12>>2] = $a;
   $13 = (($db) + 32|0);
   HEAP32[$13>>2] = 0;
   $14 = (($db) + 36|0);
   HEAP32[$14>>2] = 0;
   $15 = (($db) + 40|0);
   HEAP32[$15>>2] = 0;
   $16 = (($db) + 44|0);
   HEAP32[$16>>2] = $a;
   $17 = (($db) + 48|0);
   $18 = (($db) + 61|0);
   ;HEAP32[$17+0>>2]=0|0;HEAP32[$17+4>>2]=0|0;HEAP32[$17+8>>2]=0|0;HEAP8[$17+12>>0]=0|0;
   HEAP8[$18>>0] = 1;
   $19 = (($db) + 32|0);
   $20 = (($db) + 44|0);
   $21 = (($__v$i$i) + 12|0);
   HEAP32[$21>>2] = 0;
   $22 = (($__v$i$i) + 16|0);
   HEAP32[$22>>2] = $20;
   $23 = (($a) + 16|0);
   HEAP32[$5>>2] = $23;
   HEAP32[$__v$i$i>>2] = $a;
   $24 = (($__v$i$i) + 8|0);
   HEAP32[$24>>2] = $a;
   $25 = (($__v$i$i) + 4|0);
   HEAP32[$25>>2] = $a;
   HEAP32[$21>>2] = $23;
   HEAP32[$a>>2] = 0;
   $26 = (($a) + 4|0);
   HEAP32[$26>>2] = 0;
   $27 = (($a) + 8|0);
   HEAP32[$27>>2] = 0;
   $28 = (($a) + 12|0);
   HEAP32[$28>>2] = $a;
   $29 = (($a) + 16|0);
   HEAP32[$24>>2] = $29;
   __ZNSt3__16vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($19,$__v$i$i);
   __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($__v$i$i);
   $30 = (($db) + 62|0);
   HEAP8[$30>>0] = 0;
   $31 = (($db) + 63|0);
   HEAP8[$31>>0] = 1;
   HEAP32[$internal_status>>2] = 0;
   $32 = (_strlen(($mangled_name|0))|0);
   $33 = (($mangled_name) + ($32)|0);
   __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($mangled_name,$33,$db,$internal_status);
   $34 = HEAP32[$internal_status>>2]|0;
   $35 = ($34|0)!=(0);
   $36 = HEAP8[$30>>0]|0;
   $37 = ($36<<24>>24)==(0);
   $or$cond6 = $35 | $37;
   do {
    if ($or$cond6) {
     $62 = $34;
     label = 17;
    } else {
     $38 = HEAP32[$19>>2]|0;
     $39 = HEAP32[$14>>2]|0;
     $40 = ($38|0)==($39|0);
     if ($40) {
      label = 18;
     } else {
      $41 = HEAP32[$38>>2]|0;
      $42 = (($38) + 4|0);
      $43 = HEAP32[$42>>2]|0;
      $44 = ($41|0)==($43|0);
      if ($44) {
       label = 18;
      } else {
       HEAP8[$30>>0] = 0;
       HEAP8[$18>>0] = 0;
       $45 = HEAP32[$db>>2]|0;
       $46 = HEAP32[$6>>2]|0;
       $47 = ($46|0)==($45|0);
       if (!($47)) {
        $49 = $46;
        while(1) {
         $48 = (($49) + -24|0);
         HEAP32[$6>>2] = $48;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($48);
         $50 = HEAP32[$6>>2]|0;
         $51 = ($50|0)==($45|0);
         if ($51) {
          break;
         } else {
          $49 = $50;
         }
        }
       }
       $52 = HEAP32[$9>>2]|0;
       $53 = HEAP32[$10>>2]|0;
       $54 = ($53|0)==($52|0);
       if (!($54)) {
        $56 = $53;
        while(1) {
         $55 = (($56) + -16|0);
         HEAP32[$10>>2] = $55;
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($55);
         $57 = HEAP32[$10>>2]|0;
         $58 = ($57|0)==($52|0);
         if ($58) {
          break;
         } else {
          $56 = $57;
         }
        }
       }
       __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($mangled_name,$33,$db,$internal_status);
       $59 = HEAP8[$30>>0]|0;
       $60 = ($59<<24>>24)==(0);
       if ($60) {
        $$pr$pre = HEAP32[$internal_status>>2]|0;
        $62 = $$pr$pre;
        label = 17;
        break;
       } else {
        HEAP32[$internal_status>>2] = -2;
        $$1 = 0;
        break;
       }
      }
     }
    }
   } while(0);
   if ((label|0) == 17) {
    $61 = ($62|0)==(0);
    if ($61) {
     label = 18;
    } else {
     $$1 = 0;
    }
   }
   do {
    if ((label|0) == 18) {
     $63 = HEAP32[$6>>2]|0;
     $64 = (($63) + -24|0);
     $65 = HEAP8[$64>>0]|0;
     $66 = $65 & 1;
     $67 = ($66<<24>>24)==(0);
     if ($67) {
      $70 = $65&255;
      $71 = $70 >>> 1;
      $82 = $71;
     } else {
      $68 = (($63) + -20|0);
      $69 = HEAP32[$68>>2]|0;
      $82 = $69;
     }
     $72 = (($63) + -12|0);
     $73 = HEAP8[$72>>0]|0;
     $74 = $73 & 1;
     $75 = ($74<<24>>24)==(0);
     if ($75) {
      $78 = $73&255;
      $79 = $78 >>> 1;
      $81 = $79;
     } else {
      $76 = (($63) + -8|0);
      $77 = HEAP32[$76>>2]|0;
      $81 = $77;
     }
     $80 = (($81) + ($82))|0;
     $83 = (($80) + 1)|0;
     $84 = ($83>>>0)>($85>>>0);
     if ($84) {
      $86 = (_realloc($buf,$83)|0);
      $87 = ($86|0)==(0|0);
      if ($87) {
       HEAP32[$internal_status>>2] = -1;
       $$1 = 0;
       break;
      }
      if ($2) {
       $$0210 = $86;
      } else {
       HEAP32[$n>>2] = $83;
       $$02 = $86;
       label = 29;
      }
     } else {
      $$02 = $buf;
      label = 29;
     }
     if ((label|0) == 29) {
      $88 = ($$02|0)==(0|0);
      if ($88) {
       $$1 = 0;
       break;
      } else {
       $$0210 = $$02;
      }
     }
     $89 = HEAP32[$6>>2]|0;
     $90 = (($89) + -24|0);
     $91 = (($89) + -12|0);
     $92 = HEAP8[$91>>0]|0;
     $93 = $92 & 1;
     $94 = ($93<<24>>24)==(0);
     if ($94) {
      $99 = (($91) + 1|0);
      $100 = $92&255;
      $101 = $100 >>> 1;
      $102 = $99;$103 = $101;
     } else {
      $95 = (($89) + -4|0);
      $96 = HEAP32[$95>>2]|0;
      $97 = (($89) + -8|0);
      $98 = HEAP32[$97>>2]|0;
      $102 = $96;$103 = $98;
     }
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($90,$102,$103)|0);
     $104 = HEAP32[$6>>2]|0;
     $105 = (($104) + -24|0);
     $106 = HEAP8[$105>>0]|0;
     $107 = $106 & 1;
     $108 = ($107<<24>>24)==(0);
     if ($108) {
      $111 = (($105) + 1|0);
      $112 = $111;
     } else {
      $109 = (($104) + -16|0);
      $110 = HEAP32[$109>>2]|0;
      $112 = $110;
     }
     _memcpy(($$0210|0),($112|0),($80|0))|0;
     $113 = (($$0210) + ($80)|0);
     HEAP8[$113>>0] = 0;
     $$1 = $$0210;
    }
   } while(0);
   $114 = ($status|0)==(0|0);
   if (!($114)) {
    $115 = HEAP32[$internal_status>>2]|0;
    HEAP32[$status>>2] = $115;
   }
   __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($db);
   $$0 = $$1;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $3 = ($status|0)==(0|0);
 if ($3) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$status>>2] = -3;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function __Znwj($size) {
 $size = $size|0;
 var $$lcssa = 0, $$size = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($size|0)==(0);
 $$size = $0 ? 1 : $size;
 $1 = (_malloc($$size)|0);
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $$lcssa = $1;
  STACKTOP = sp;return ($$lcssa|0);
 }
 while(1) {
  $3 = HEAP32[51536>>2]|0;HEAP32[51536>>2] = (($3+0)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 4;
   break;
  }
  $5 = $3;
  FUNCTION_TABLE_v[$5 & 15]();
  $6 = (_malloc($$size)|0);
  $7 = ($6|0)==(0|0);
  if (!($7)) {
   $$lcssa = $6;
   label = 5;
   break;
  }
 }
 if ((label|0) == 4) {
  $8 = (___cxa_allocate_exception(4)|0);
  HEAP32[$8>>2] = ((51368 + 8|0));
  ___cxa_throw(($8|0),(51424|0),(117|0));
  // unreachable;
 }
 else if ((label|0) == 5) {
  STACKTOP = sp;return ($$lcssa|0);
 }
 return (0)|0;
}
function __ZNSt9bad_allocD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt9bad_allocD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return (51392|0);
}
function __ZSt11__terminatePFvvE($func) {
 $func = $func|0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 FUNCTION_TABLE_v[$func & 15]();
 _abort_message(51440,$vararg_buffer);
 // unreachable;
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $0 = (_pthread_once((51192|0),(8|0))|0);
 $1 = ($0|0)==(0);
 if (!($1)) {
  _abort_message(51200,$vararg_buffer);
  // unreachable;
 }
 $2 = HEAP32[51184>>2]|0;
 $3 = (_pthread_getspecific(($2|0))|0);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = HEAP32[$3>>2]|0;
  $6 = ($5|0)==(0|0);
  if (!($6)) {
   $7 = (($5) + 48|0);
   $8 = $7;
   $9 = $8;
   $10 = HEAP32[$9>>2]|0;
   $11 = (($8) + 4)|0;
   $12 = $11;
   $13 = HEAP32[$12>>2]|0;
   $14 = $10 & -256;
   $15 = ($14|0)==(1126902528);
   $16 = ($13|0)==(1129074247);
   $17 = $15 & $16;
   if ($17) {
    $18 = (($5) + 12|0);
    $19 = HEAP32[$18>>2]|0;
    __ZSt11__terminatePFvvE($19);
    // unreachable;
   }
  }
 }
 $20 = HEAP32[12118]|0;HEAP32[12118] = (($20+0)|0);
 $21 = $20;
 __ZSt11__terminatePFvvE($21);
 // unreachable;
}
function __ZNSt11logic_errorD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((51568 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = (($3) + -1)|0;
 $5 = ($4|0)<(0);
 if (!($5)) {
  _free($this);
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$0>>2]|0;
 $7 = (($6) + -12|0);
 _free($7);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt11logic_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((51568 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = (($3) + -1)|0;
 $5 = ($4|0)<(0);
 if (!($5)) {
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$0>>2]|0;
 $7 = (($6) + -12|0);
 _free($7);
 STACKTOP = sp;return;
}
function __ZNKSt11logic_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((51592 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = (($3) + -1)|0;
 $5 = ($4|0)<(0);
 if (!($5)) {
  _free($this);
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$0>>2]|0;
 $7 = (($6) + -12|0);
 _free($7);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((51592 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = (($3) + -1)|0;
 $5 = ($4|0)<(0);
 if (!($5)) {
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$0>>2]|0;
 $7 = (($6) + -12|0);
 _free($7);
 STACKTOP = sp;return;
}
function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 STACKTOP = sp;return ($1|0);
}
function __ZNSt12length_errorD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((51568 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = (($3) + -1)|0;
 $5 = ($4|0)<(0);
 if (!($5)) {
  _free($this);
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$0>>2]|0;
 $7 = (($6) + -12|0);
 _free($7);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt12out_of_rangeD0Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = ((51568 + 8|0));
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -4|0);
 $3 = HEAP32[$2>>2]|0;HEAP32[$2>>2] = (($3+-1)|0);
 $4 = (($3) + -1)|0;
 $5 = ($4|0)<(0);
 if (!($5)) {
  _free($this);
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$0>>2]|0;
 $7 = (($6) + -12|0);
 _free($7);
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt8bad_castD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNSt8bad_castD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNKSt8bad_cast4whatEv($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return (51840|0);
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv123__fundamental_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv116__enum_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($this);
 STACKTOP = sp;return;
}
function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$0) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($this|0)==($thrown_type|0);
 STACKTOP = sp;return ($1|0);
}
function __ZNK10__cxxabiv116__enum_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$0) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($this|0)==($thrown_type|0);
 STACKTOP = sp;return ($1|0);
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr) {
 $this = $this|0;
 $thrown_type = $thrown_type|0;
 $adjustedPtr = $adjustedPtr|0;
 var $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $info = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $info = sp;
 $0 = ($this|0)==($thrown_type|0);
 if ($0) {
  $$1 = 1;
  STACKTOP = sp;return ($$1|0);
 }
 $1 = ($thrown_type|0)==(0|0);
 if ($1) {
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $2 = (___dynamic_cast($thrown_type,52008)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 dest=$info+0|0; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 HEAP32[$info>>2] = $2;
 $4 = (($info) + 8|0);
 HEAP32[$4>>2] = $this;
 $5 = (($info) + 12|0);
 HEAP32[$5>>2] = -1;
 $6 = (($info) + 48|0);
 HEAP32[$6>>2] = 1;
 $7 = HEAP32[$2>>2]|0;
 $8 = (($7) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$adjustedPtr>>2]|0;
 FUNCTION_TABLE_viiii[$9 & 7]($2,$info,$10,1);
 $11 = (($info) + 24|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(1);
 if (!($13)) {
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $14 = (($info) + 16|0);
 $15 = HEAP32[$14>>2]|0;
 HEAP32[$adjustedPtr>>2] = $15;
 $$1 = 1;
 STACKTOP = sp;return ($$1|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($info,$adjustedPtr,$path_below) {
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  HEAP32[$0>>2] = $adjustedPtr;
  $3 = (($info) + 24|0);
  HEAP32[$3>>2] = $path_below;
  $4 = (($info) + 36|0);
  HEAP32[$4>>2] = 1;
  STACKTOP = sp;return;
 }
 $5 = ($1|0)==($adjustedPtr|0);
 if (!($5)) {
  $9 = (($info) + 36|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($10) + 1)|0;
  HEAP32[$9>>2] = $11;
  $12 = (($info) + 24|0);
  HEAP32[$12>>2] = 2;
  $13 = (($info) + 54|0);
  HEAP8[$13>>0] = 1;
  STACKTOP = sp;return;
 }
 $6 = (($info) + 24|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(2);
 if (!($8)) {
  STACKTOP = sp;return;
 }
 HEAP32[$6>>2] = $path_below;
 STACKTOP = sp;return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==($this|0);
 if (!($2)) {
  STACKTOP = sp;return;
 }
 __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($info,$adjustedPtr,$path_below);
 STACKTOP = sp;return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($info,$adjustedPtr,$path_below);
  STACKTOP = sp;return;
 } else {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = (($5) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiii[$7 & 7]($4,$info,$adjustedPtr,$path_below);
  STACKTOP = sp;return;
 }
}
function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$adjustedPtr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($adjustedPtr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiii[$11 & 7]($8,$info,$12,$15);
 STACKTOP = sp;return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below) {
 $this = $this|0;
 $info = $info|0;
 $adjustedPtr = $adjustedPtr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($info,$adjustedPtr,$path_below);
  STACKTOP = sp;return;
 }
 $3 = (($this) + 16|0);
 $4 = (($this) + 12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($this) + ($5<<3)|0) + 16|0);
 __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($3,$info,$adjustedPtr,$path_below);
 $7 = ($5|0)>(1);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = (($this) + 24|0);
 $9 = (($info) + 54|0);
 $p$0 = $8;
 while(1) {
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0,$info,$adjustedPtr,$path_below);
  $10 = HEAP8[$9>>0]|0;
  $11 = ($10<<24>>24)==(0);
  if (!($11)) {
   label = 7;
   break;
  }
  $12 = (($p$0) + 8|0);
  $13 = ($12>>>0)<($6>>>0);
  if ($13) {
   $p$0 = $12;
  } else {
   label = 7;
   break;
  }
 }
 if ((label|0) == 7) {
  STACKTOP = sp;return;
 }
}
function ___dynamic_cast($static_ptr,$dst_type) {
 $static_ptr = $static_ptr|0;
 $dst_type = $dst_type|0;
 var $$ = 0, $$8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $info = sp;
 $0 = HEAP32[$static_ptr>>2]|0;
 $1 = (($0) + -8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2;
 $4 = (($static_ptr) + ($3)|0);
 $5 = (($0) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$info>>2] = $dst_type;
 $7 = (($info) + 4|0);
 HEAP32[$7>>2] = $static_ptr;
 $8 = (($info) + 8|0);
 HEAP32[$8>>2] = 51952;
 $9 = (($info) + 12|0);
 $10 = (($info) + 16|0);
 $11 = (($info) + 20|0);
 $12 = (($info) + 24|0);
 $13 = (($info) + 28|0);
 $14 = (($info) + 32|0);
 $15 = (($info) + 40|0);
 $16 = ($6|0)==($dst_type|0);
 dest=$9+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$9+40>>1]=0|0;HEAP8[$9+42>>0]=0|0;
 if ($16) {
  $17 = (($info) + 48|0);
  HEAP32[$17>>2] = 1;
  $18 = HEAP32[$6>>2]|0;
  $19 = (($18) + 20|0);
  $20 = HEAP32[$19>>2]|0;
  FUNCTION_TABLE_viiiiii[$20 & 15]($6,$info,$4,$4,1,0);
  $21 = HEAP32[$12>>2]|0;
  $22 = ($21|0)==(1);
  $$ = $22 ? $4 : 0;
  $dst_ptr$0 = $$;
  STACKTOP = sp;return ($dst_ptr$0|0);
 }
 $23 = (($info) + 36|0);
 $24 = HEAP32[$6>>2]|0;
 $25 = (($24) + 24|0);
 $26 = HEAP32[$25>>2]|0;
 FUNCTION_TABLE_viiiii[$26 & 3]($6,$info,$4,1,0);
 $27 = HEAP32[$23>>2]|0;
 if ((($27|0) == 1)) {
  $35 = HEAP32[$12>>2]|0;
  $36 = ($35|0)==(1);
  if (!($36)) {
   $37 = HEAP32[$15>>2]|0;
   $38 = ($37|0)==(0);
   $39 = HEAP32[$13>>2]|0;
   $40 = ($39|0)==(1);
   $or$cond5 = $38 & $40;
   $41 = HEAP32[$14>>2]|0;
   $42 = ($41|0)==(1);
   $or$cond7 = $or$cond5 & $42;
   if (!($or$cond7)) {
    $dst_ptr$0 = 0;
    STACKTOP = sp;return ($dst_ptr$0|0);
   }
  }
  $43 = HEAP32[$10>>2]|0;
  $dst_ptr$0 = $43;
  STACKTOP = sp;return ($dst_ptr$0|0);
 } else if ((($27|0) == 0)) {
  $28 = HEAP32[$15>>2]|0;
  $29 = ($28|0)==(1);
  $30 = HEAP32[$13>>2]|0;
  $31 = ($30|0)==(1);
  $or$cond = $29 & $31;
  $32 = HEAP32[$14>>2]|0;
  $33 = ($32|0)==(1);
  $or$cond3 = $or$cond & $33;
  $34 = HEAP32[$11>>2]|0;
  $$8 = $or$cond3 ? $34 : 0;
  $dst_ptr$0 = $$8;
  STACKTOP = sp;return ($dst_ptr$0|0);
 } else {
  $dst_ptr$0 = 0;
  STACKTOP = sp;return ($dst_ptr$0|0);
 }
 return (0)|0;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($info,$dst_ptr,$current_ptr,$path_below) {
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 53|0);
 HEAP8[$0>>0] = 1;
 $1 = (($info) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==($current_ptr|0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = (($info) + 52|0);
 HEAP8[$4>>0] = 1;
 $5 = (($info) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  HEAP32[$5>>2] = $dst_ptr;
  $8 = (($info) + 24|0);
  HEAP32[$8>>2] = $path_below;
  $9 = (($info) + 36|0);
  HEAP32[$9>>2] = 1;
  $10 = (($info) + 48|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(1);
  $13 = ($path_below|0)==(1);
  $or$cond = $12 & $13;
  if (!($or$cond)) {
   STACKTOP = sp;return;
  }
  $14 = (($info) + 54|0);
  HEAP8[$14>>0] = 1;
  STACKTOP = sp;return;
 }
 $15 = ($6|0)==($dst_ptr|0);
 if (!($15)) {
  $25 = (($info) + 36|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = (($26) + 1)|0;
  HEAP32[$25>>2] = $27;
  $28 = (($info) + 54|0);
  HEAP8[$28>>0] = 1;
  STACKTOP = sp;return;
 }
 $16 = (($info) + 24|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($17|0)==(2);
 if ($18) {
  HEAP32[$16>>2] = $path_below;
  $23 = $path_below;
 } else {
  $23 = $17;
 }
 $19 = (($info) + 48|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($20|0)==(1);
 $22 = ($23|0)==(1);
 $or$cond1 = $21 & $22;
 if (!($or$cond1)) {
  STACKTOP = sp;return;
 }
 $24 = (($info) + 54|0);
 HEAP8[$24>>0] = 1;
 STACKTOP = sp;return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$0$off012 = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off014 = 0;
 var $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0, $is_dst_type_derived_from_static_type$2$off023 = 0, $is_dst_type_derived_from_static_type$2$off024 = 0, $p$013 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  $3 = (($info) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)==($current_ptr|0);
  if (!($5)) {
   STACKTOP = sp;return;
  }
  $6 = (($info) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)==(1);
  if ($8) {
   STACKTOP = sp;return;
  }
  HEAP32[$6>>2] = $path_below;
  STACKTOP = sp;return;
 }
 $9 = HEAP32[$info>>2]|0;
 $10 = ($this|0)==($9|0);
 if (!($10)) {
  $59 = (($this) + 16|0);
  $60 = (($this) + 12|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = ((($this) + ($61<<3)|0) + 16|0);
  __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($59,$info,$current_ptr,$path_below,$use_strcmp);
  $63 = (($this) + 24|0);
  $64 = ($61|0)>(1);
  if (!($64)) {
   STACKTOP = sp;return;
  }
  $65 = (($this) + 8|0);
  $66 = HEAP32[$65>>2]|0;
  $67 = $66 & 2;
  $68 = ($67|0)==(0);
  if ($68) {
   $69 = (($info) + 36|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ($70|0)==(1);
   if (!($71)) {
    $77 = $66 & 1;
    $78 = ($77|0)==(0);
    if ($78) {
     $81 = (($info) + 54|0);
     $p2$2 = $63;
     while(1) {
      $90 = HEAP8[$81>>0]|0;
      $91 = ($90<<24>>24)==(0);
      if (!($91)) {
       label = 43;
       break;
      }
      $92 = HEAP32[$69>>2]|0;
      $93 = ($92|0)==(1);
      if ($93) {
       label = 43;
       break;
      }
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2,$info,$current_ptr,$path_below,$use_strcmp);
      $94 = (($p2$2) + 8|0);
      $95 = ($94>>>0)<($62>>>0);
      if ($95) {
       $p2$2 = $94;
      } else {
       label = 43;
       break;
      }
     }
     if ((label|0) == 43) {
      STACKTOP = sp;return;
     }
    }
    $79 = (($info) + 24|0);
    $80 = (($info) + 54|0);
    $p2$1 = $63;
    while(1) {
     $82 = HEAP8[$80>>0]|0;
     $83 = ($82<<24>>24)==(0);
     if (!($83)) {
      label = 43;
      break;
     }
     $84 = HEAP32[$69>>2]|0;
     $85 = ($84|0)==(1);
     if ($85) {
      $86 = HEAP32[$79>>2]|0;
      $87 = ($86|0)==(1);
      if ($87) {
       label = 43;
       break;
      }
     }
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1,$info,$current_ptr,$path_below,$use_strcmp);
     $88 = (($p2$1) + 8|0);
     $89 = ($88>>>0)<($62>>>0);
     if ($89) {
      $p2$1 = $88;
     } else {
      label = 43;
      break;
     }
    }
    if ((label|0) == 43) {
     STACKTOP = sp;return;
    }
   }
  }
  $72 = (($info) + 54|0);
  $p2$0 = $63;
  while(1) {
   $73 = HEAP8[$72>>0]|0;
   $74 = ($73<<24>>24)==(0);
   if (!($74)) {
    label = 43;
    break;
   }
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0,$info,$current_ptr,$path_below,$use_strcmp);
   $75 = (($p2$0) + 8|0);
   $76 = ($75>>>0)<($62>>>0);
   if ($76) {
    $p2$0 = $75;
   } else {
    label = 43;
    break;
   }
  }
  if ((label|0) == 43) {
   STACKTOP = sp;return;
  }
 }
 $11 = (($info) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==($current_ptr|0);
 if (!($13)) {
  $14 = (($info) + 20|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ($15|0)==($current_ptr|0);
  if (!($16)) {
   $19 = (($info) + 32|0);
   HEAP32[$19>>2] = $path_below;
   $20 = (($info) + 44|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ($21|0)==(4);
   if ($22) {
    STACKTOP = sp;return;
   }
   $23 = (($this) + 12|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = ((($this) + ($24<<3)|0) + 16|0);
   $26 = ($24|0)>(0);
   L54: do {
    if ($26) {
     $27 = (($this) + 16|0);
     $28 = (($info) + 52|0);
     $29 = (($info) + 53|0);
     $30 = (($info) + 54|0);
     $31 = (($this) + 8|0);
     $32 = (($info) + 24|0);
     $does_dst_type_point_to_our_static_type$0$off012 = 0;$is_dst_type_derived_from_static_type$0$off014 = 0;$p$013 = $27;
     L56: while(1) {
      HEAP8[$28>>0] = 0;
      HEAP8[$29>>0] = 0;
      __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$013,$info,$current_ptr,$current_ptr,1,$use_strcmp);
      $33 = HEAP8[$30>>0]|0;
      $34 = ($33<<24>>24)==(0);
      if (!($34)) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off012;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off014;
       break;
      }
      $35 = HEAP8[$29>>0]|0;
      $36 = ($35<<24>>24)==(0);
      do {
       if ($36) {
        $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off012;$is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off014;
       } else {
        $37 = HEAP8[$28>>0]|0;
        $38 = ($37<<24>>24)==(0);
        if ($38) {
         $44 = HEAP32[$31>>2]|0;
         $45 = $44 & 1;
         $46 = ($45|0)==(0);
         if ($46) {
          $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off012;$is_dst_type_derived_from_static_type$2$off0 = 1;
          break L56;
         } else {
          $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off012;$is_dst_type_derived_from_static_type$1$off0 = 1;
          break;
         }
        }
        $39 = HEAP32[$32>>2]|0;
        $40 = ($39|0)==(1);
        if ($40) {
         label = 25;
         break L54;
        }
        $41 = HEAP32[$31>>2]|0;
        $42 = $41 & 2;
        $43 = ($42|0)==(0);
        if ($43) {
         label = 25;
         break L54;
        } else {
         $does_dst_type_point_to_our_static_type$1$off0 = 1;$is_dst_type_derived_from_static_type$1$off0 = 1;
        }
       }
      } while(0);
      $47 = (($p$013) + 8|0);
      $48 = ($47>>>0)<($25>>>0);
      if ($48) {
       $does_dst_type_point_to_our_static_type$0$off012 = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$0$off014 = $is_dst_type_derived_from_static_type$1$off0;$p$013 = $47;
      } else {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$1$off0;$is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$1$off0;
       break;
      }
     }
     if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) {
      $is_dst_type_derived_from_static_type$2$off024 = $is_dst_type_derived_from_static_type$2$off0;
      label = 24;
     } else {
      $is_dst_type_derived_from_static_type$2$off023 = $is_dst_type_derived_from_static_type$2$off0;
      label = 21;
     }
    } else {
     $is_dst_type_derived_from_static_type$2$off023 = 0;
     label = 21;
    }
   } while(0);
   if ((label|0) == 21) {
    HEAP32[$14>>2] = $current_ptr;
    $49 = (($info) + 40|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = (($50) + 1)|0;
    HEAP32[$49>>2] = $51;
    $52 = (($info) + 36|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($53|0)==(1);
    if ($54) {
     $55 = (($info) + 24|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = ($56|0)==(2);
     if ($57) {
      $58 = (($info) + 54|0);
      HEAP8[$58>>0] = 1;
      if ($is_dst_type_derived_from_static_type$2$off023) {
       label = 25;
      } else {
       label = 26;
      }
     } else {
      $is_dst_type_derived_from_static_type$2$off024 = $is_dst_type_derived_from_static_type$2$off023;
      label = 24;
     }
    } else {
     $is_dst_type_derived_from_static_type$2$off024 = $is_dst_type_derived_from_static_type$2$off023;
     label = 24;
    }
   }
   if ((label|0) == 24) {
    if ($is_dst_type_derived_from_static_type$2$off024) {
     label = 25;
    } else {
     label = 26;
    }
   }
   if ((label|0) == 25) {
    HEAP32[$20>>2] = 3;
    STACKTOP = sp;return;
   }
   else if ((label|0) == 26) {
    HEAP32[$20>>2] = 4;
    STACKTOP = sp;return;
   }
  }
 }
 $17 = ($path_below|0)==(1);
 if (!($17)) {
  STACKTOP = sp;return;
 }
 $18 = (($info) + 32|0);
 HEAP32[$18>>2] = 1;
 STACKTOP = sp;return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiiii[$11 & 15]($8,$info,$dst_ptr,$12,$15,$use_strcmp);
 STACKTOP = sp;return;
}
function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $offset_to_base$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 >> 8;
 $3 = $1 & 1;
 $4 = ($3|0)==(0);
 if ($4) {
  $offset_to_base$0 = $2;
 } else {
  $5 = HEAP32[$current_ptr>>2]|0;
  $6 = (($5) + ($2)|0);
  $7 = HEAP32[$6>>2]|0;
  $offset_to_base$0 = $7;
 }
 $8 = HEAP32[$this>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($current_ptr) + ($offset_to_base$0)|0);
 $13 = $1 & 2;
 $14 = ($13|0)!=(0);
 $15 = $14 ? $path_below : 2;
 FUNCTION_TABLE_viiiii[$11 & 3]($8,$info,$12,$15,$use_strcmp);
 STACKTOP = sp;return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  $3 = (($info) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)==($current_ptr|0);
  if (!($5)) {
   STACKTOP = sp;return;
  }
  $6 = (($info) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)==(1);
  if ($8) {
   STACKTOP = sp;return;
  }
  HEAP32[$6>>2] = $path_below;
  STACKTOP = sp;return;
 }
 $9 = HEAP32[$info>>2]|0;
 $10 = ($this|0)==($9|0);
 if (!($10)) {
  $43 = (($this) + 8|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = HEAP32[$44>>2]|0;
  $46 = (($45) + 24|0);
  $47 = HEAP32[$46>>2]|0;
  FUNCTION_TABLE_viiiii[$47 & 3]($44,$info,$current_ptr,$path_below,$use_strcmp);
  STACKTOP = sp;return;
 }
 $11 = (($info) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==($current_ptr|0);
 if (!($13)) {
  $14 = (($info) + 20|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ($15|0)==($current_ptr|0);
  if (!($16)) {
   $19 = (($info) + 32|0);
   HEAP32[$19>>2] = $path_below;
   $20 = (($info) + 44|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ($21|0)==(4);
   if ($22) {
    STACKTOP = sp;return;
   }
   $23 = (($info) + 52|0);
   HEAP8[$23>>0] = 0;
   $24 = (($info) + 53|0);
   HEAP8[$24>>0] = 0;
   $25 = (($this) + 8|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = HEAP32[$26>>2]|0;
   $28 = (($27) + 20|0);
   $29 = HEAP32[$28>>2]|0;
   FUNCTION_TABLE_viiiiii[$29 & 15]($26,$info,$current_ptr,$current_ptr,1,$use_strcmp);
   $30 = HEAP8[$24>>0]|0;
   $31 = ($30<<24>>24)==(0);
   if ($31) {
    $is_dst_type_derived_from_static_type$0$off01 = 0;
    label = 13;
   } else {
    $32 = HEAP8[$23>>0]|0;
    $not$ = ($32<<24>>24)==(0);
    if ($not$) {
     $is_dst_type_derived_from_static_type$0$off01 = 1;
     label = 13;
    }
   }
   do {
    if ((label|0) == 13) {
     HEAP32[$14>>2] = $current_ptr;
     $33 = (($info) + 40|0);
     $34 = HEAP32[$33>>2]|0;
     $35 = (($34) + 1)|0;
     HEAP32[$33>>2] = $35;
     $36 = (($info) + 36|0);
     $37 = HEAP32[$36>>2]|0;
     $38 = ($37|0)==(1);
     if ($38) {
      $39 = (($info) + 24|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = ($40|0)==(2);
      if ($41) {
       $42 = (($info) + 54|0);
       HEAP8[$42>>0] = 1;
       if ($is_dst_type_derived_from_static_type$0$off01) {
        break;
       }
      } else {
       label = 16;
      }
     } else {
      label = 16;
     }
     if ((label|0) == 16) {
      if ($is_dst_type_derived_from_static_type$0$off01) {
       break;
      }
     }
     HEAP32[$20>>2] = 4;
     STACKTOP = sp;return;
    }
   } while(0);
   HEAP32[$20>>2] = 3;
   STACKTOP = sp;return;
  }
 }
 $17 = ($path_below|0)==(1);
 if (!($17)) {
  STACKTOP = sp;return;
 }
 $18 = (($info) + 32|0);
 HEAP32[$18>>2] = 1;
 STACKTOP = sp;return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==($this|0);
 if ($2) {
  $3 = (($info) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)==($current_ptr|0);
  if (!($5)) {
   STACKTOP = sp;return;
  }
  $6 = (($info) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)==(1);
  if ($8) {
   STACKTOP = sp;return;
  }
  HEAP32[$6>>2] = $path_below;
  STACKTOP = sp;return;
 }
 $9 = HEAP32[$info>>2]|0;
 $10 = ($9|0)==($this|0);
 if (!($10)) {
  STACKTOP = sp;return;
 }
 $11 = (($info) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==($current_ptr|0);
 if (!($13)) {
  $14 = (($info) + 20|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ($15|0)==($current_ptr|0);
  if (!($16)) {
   $19 = (($info) + 32|0);
   HEAP32[$19>>2] = $path_below;
   HEAP32[$14>>2] = $current_ptr;
   $20 = (($info) + 40|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (($21) + 1)|0;
   HEAP32[$20>>2] = $22;
   $23 = (($info) + 36|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = ($24|0)==(1);
   if ($25) {
    $26 = (($info) + 24|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ($27|0)==(2);
    if ($28) {
     $29 = (($info) + 54|0);
     HEAP8[$29>>0] = 1;
    }
   }
   $30 = (($info) + 44|0);
   HEAP32[$30>>2] = 4;
   STACKTOP = sp;return;
  }
 }
 $17 = ($path_below|0)==(1);
 if (!($17)) {
  STACKTOP = sp;return;
 }
 $18 = (($info) + 32|0);
 HEAP32[$18>>2] = 1;
 STACKTOP = sp;return;
}
function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($info,$dst_ptr,$current_ptr,$path_below);
  STACKTOP = sp;return;
 }
 $3 = (($info) + 52|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = (($info) + 53|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = (($this) + 16|0);
 $8 = (($this) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($this) + ($9<<3)|0) + 16|0);
 HEAP8[$3>>0] = 0;
 HEAP8[$5>>0] = 0;
 __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($7,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
 $11 = ($9|0)>(1);
 L5: do {
  if ($11) {
   $12 = (($this) + 24|0);
   $13 = (($info) + 24|0);
   $14 = (($this) + 8|0);
   $15 = (($info) + 54|0);
   $p$0 = $12;
   while(1) {
    $16 = HEAP8[$15>>0]|0;
    $17 = ($16<<24>>24)==(0);
    if (!($17)) {
     break L5;
    }
    $18 = HEAP8[$3>>0]|0;
    $19 = ($18<<24>>24)==(0);
    if ($19) {
     $25 = HEAP8[$5>>0]|0;
     $26 = ($25<<24>>24)==(0);
     if (!($26)) {
      $27 = HEAP32[$14>>2]|0;
      $28 = $27 & 1;
      $29 = ($28|0)==(0);
      if ($29) {
       break L5;
      }
     }
    } else {
     $20 = HEAP32[$13>>2]|0;
     $21 = ($20|0)==(1);
     if ($21) {
      break L5;
     }
     $22 = HEAP32[$14>>2]|0;
     $23 = $22 & 2;
     $24 = ($23|0)==(0);
     if ($24) {
      break L5;
     }
    }
    HEAP8[$3>>0] = 0;
    HEAP8[$5>>0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
    $30 = (($p$0) + 8|0);
    $31 = ($30>>>0)<($10>>>0);
    if ($31) {
     $p$0 = $30;
    } else {
     break;
    }
   }
  }
 } while(0);
 HEAP8[$3>>0] = $4;
 HEAP8[$5>>0] = $6;
 STACKTOP = sp;return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($this|0)==($1|0);
 if ($2) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($info,$dst_ptr,$current_ptr,$path_below);
  STACKTOP = sp;return;
 } else {
  $3 = (($this) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = HEAP32[$4>>2]|0;
  $6 = (($5) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  FUNCTION_TABLE_viiiiii[$7 & 15]($4,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);
  STACKTOP = sp;return;
 }
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp) {
 $this = $this|0;
 $info = $info|0;
 $dst_ptr = $dst_ptr|0;
 $current_ptr = $current_ptr|0;
 $path_below = $path_below|0;
 $use_strcmp = $use_strcmp|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($info) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==($this|0);
 if (!($2)) {
  STACKTOP = sp;return;
 }
 __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($info,$dst_ptr,$current_ptr,$path_below);
 STACKTOP = sp;return;
}
function ___cxa_can_catch($catchType,$excpType,$thrown) {
 $catchType = $catchType|0;
 $excpType = $excpType|0;
 $thrown = $thrown|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $temp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $temp = sp;
 $0 = HEAP32[$thrown>>2]|0;
 HEAP32[$temp>>2] = $0;
 $1 = HEAP32[$catchType>>2]|0;
 $2 = (($1) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (FUNCTION_TABLE_iiii[$3 & 31]($catchType,$excpType,$temp)|0);
 $5 = $4&1;
 if (!($4)) {
  STACKTOP = sp;return ($5|0);
 }
 $6 = HEAP32[$temp>>2]|0;
 HEAP32[$thrown>>2] = $6;
 STACKTOP = sp;return ($5|0);
}
function ___cxa_is_pointer_type($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type|0)==(0|0);
 if ($0) {
  $3 = 0;
 } else {
  $1 = (___dynamic_cast($type,52120)|0);
  $phitmp = ($1|0)!=(0|0);
  $3 = $phitmp;
 }
 $2 = $3&1;
 STACKTOP = sp;return ($2|0);
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $thrown_object = 0, $vararg_buffer12 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer12 = sp;
 $thrown_object = sp + 12|0;
 $0 = (_pthread_once((51192|0),(8|0))|0);
 $1 = ($0|0)==(0);
 if (!($1)) {
  _abort_message(51200,$vararg_buffer12);
  // unreachable;
 }
 $2 = HEAP32[51184>>2]|0;
 $3 = (_pthread_getspecific(($2|0))|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  _abort_message(48632,$vararg_buffer12);
  // unreachable;
 }
 $5 = HEAP32[$3>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  _abort_message(48632,$vararg_buffer12);
  // unreachable;
 }
 $7 = (($5) + 80|0);
 $8 = (($5) + 48|0);
 $9 = $8;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9) + 4)|0;
 $13 = $12;
 $14 = HEAP32[$13>>2]|0;
 $15 = $11 & -256;
 $16 = ($15|0)==(1126902528);
 $17 = ($14|0)==(1129074247);
 $18 = $16 & $17;
 if (!($18)) {
  HEAP32[$vararg_buffer12>>2] = 48480;
  _abort_message(48592,$vararg_buffer12);
  // unreachable;
 }
 $19 = ($11|0)==(1126902529);
 $20 = ($14|0)==(1129074247);
 $21 = $19 & $20;
 if ($21) {
  $22 = (($5) + 44|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = $23;
 } else {
  $24 = $7;
 }
 HEAP32[$thrown_object>>2] = $24;
 $25 = HEAP32[$5>>2]|0;
 $26 = (($25) + 4|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = (__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv(51560,$25,$thrown_object)|0);
 if ($28) {
  $29 = HEAP32[$thrown_object>>2]|0;
  $30 = HEAP32[$29>>2]|0;
  $31 = (($30) + 8|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = (FUNCTION_TABLE_ii[$32 & 127]($29)|0);
  HEAP32[$vararg_buffer12>>2] = 48480;
  $vararg_ptr3 = (($vararg_buffer12) + 4|0);
  HEAP32[$vararg_ptr3>>2] = $27;
  $vararg_ptr4 = (($vararg_buffer12) + 8|0);
  HEAP32[$vararg_ptr4>>2] = $33;
  _abort_message(48496,$vararg_buffer12);
  // unreachable;
 } else {
  HEAP32[$vararg_buffer12>>2] = 48480;
  $vararg_ptr8 = (($vararg_buffer12) + 4|0);
  HEAP32[$vararg_ptr8>>2] = $27;
  _abort_message(48544,$vararg_buffer12);
  // unreachable;
 }
}
function __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = (($this) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $6 = 0;
 } else {
  $3 = HEAP32[$__a>>2]|0;
  $4 = $__cap << 4;
  $5 = (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($3,$4)|0);
  $6 = $5;
 }
 HEAP32[$this>>2] = $6;
 $7 = (($6) + ($__start<<4)|0);
 $8 = (($this) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = (($this) + 4|0);
 HEAP32[$9>>2] = $7;
 $10 = (($6) + ($__cap<<4)|0);
 HEAP32[$0>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $$01$i = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($this) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($__v) + 4|0);
 $4 = ($2|0)==($0|0);
 $$pre1 = HEAP32[$3>>2]|0;
 if ($4) {
  $21 = $$pre1;$22 = $0;
 } else {
  $$01$i = $2;$7 = $$pre1;
  while(1) {
   $5 = (($$01$i) + -16|0);
   $6 = (($7) + -16|0);
   HEAP32[$6>>2] = 0;
   $8 = (($7) + -12|0);
   HEAP32[$8>>2] = 0;
   $9 = (($$01$i) + -4|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($7) + -8|0);
   HEAP32[$11>>2] = 0;
   $12 = (($7) + -4|0);
   HEAP32[$12>>2] = $10;
   $13 = HEAP32[$5>>2]|0;
   HEAP32[$6>>2] = $13;
   $14 = (($$01$i) + -12|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$8>>2] = $15;
   $16 = (($$01$i) + -8|0);
   $17 = HEAP32[$16>>2]|0;
   HEAP32[$11>>2] = $17;
   HEAP32[$16>>2] = 0;
   HEAP32[$14>>2] = 0;
   HEAP32[$5>>2] = 0;
   $18 = HEAP32[$3>>2]|0;
   $19 = (($18) + -16|0);
   HEAP32[$3>>2] = $19;
   $20 = ($5|0)==($0|0);
   if ($20) {
    break;
   } else {
    $$01$i = $5;$7 = $19;
   }
  }
  $$pre = HEAP32[$this>>2]|0;
  $21 = $19;$22 = $$pre;
 }
 HEAP32[$this>>2] = $21;
 HEAP32[$3>>2] = $22;
 $23 = (($__v) + 8|0);
 $24 = HEAP32[$1>>2]|0;
 $25 = HEAP32[$23>>2]|0;
 HEAP32[$1>>2] = $25;
 HEAP32[$23>>2] = $24;
 $26 = (($this) + 8|0);
 $27 = (($__v) + 12|0);
 $28 = HEAP32[$26>>2]|0;
 $29 = HEAP32[$27>>2]|0;
 HEAP32[$26>>2] = $29;
 HEAP32[$27>>2] = $28;
 $30 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $30;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $6 = $3;
  while(1) {
   $5 = (($6) + -16|0);
   HEAP32[$2>>2] = $5;
   __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($5);
   $7 = HEAP32[$2>>2]|0;
   $8 = ($7|0)==($1|0);
   if ($8) {
    break;
   } else {
    $6 = $7;
   }
  }
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  STACKTOP = sp;return;
 }
 $11 = (($this) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($this) + 12|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $14;
 $16 = $9;
 $17 = (($15) - ($16))|0;
 $18 = HEAP32[$12>>2]|0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($18,$9,$17);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($first,$last,$db,$status) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 $status = $status|0;
 var $$0$i2 = 0, $$pr = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__p$0$ph$i$i$i = 0, $__p$01$i$i$i3 = 0, $i$08$i = 0;
 var $isdigit$i = 0, $isdigit3$i = 0, $isdigittmp$i = 0, $isdigittmp2$i = 0, $or$cond = 0, $or$cond1 = 0, $scevgep4$i$i$i = 0, $t$07$i = 0, $t$1$ph$i = 0, $t$14$i = 0, $t$2$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $0 = sp + 24|0;
 $1 = sp + 12|0;
 $2 = sp;
 $3 = ($first>>>0)<($last>>>0);
 if (!($3)) {
  HEAP32[$status>>2] = -2;
  STACKTOP = sp;return;
 }
 $4 = HEAP8[$first>>0]|0;
 $5 = ($4<<24>>24)==(95);
 do {
  if ($5) {
   $6 = $last;
   $7 = $first;
   $8 = (($6) - ($7))|0;
   $9 = ($8|0)>(3);
   if (!($9)) {
    HEAP32[$status>>2] = -2;
    STACKTOP = sp;return;
   }
   $10 = (($first) + 1|0);
   $11 = HEAP8[$10>>0]|0;
   if ((($11<<24>>24) == 90)) {
    $12 = (($first) + 2|0);
    $13 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($12,$last,$db)|0);
    $14 = ($13|0)==($12|0);
    $15 = ($13|0)==($last|0);
    $or$cond = $14 | $15;
    if (!($or$cond)) {
     $16 = HEAP8[$13>>0]|0;
     $17 = ($16<<24>>24)==(46);
     if ($17) {
      $18 = HEAP32[$db>>2]|0;
      $19 = (($db) + 4|0);
      $20 = HEAP32[$19>>2]|0;
      $21 = ($18|0)==($20|0);
      if (!($21)) {
       $22 = (($20) + -24|0);
       $23 = $13;
       $24 = (($6) - ($23))|0;
       $25 = ($24>>>0)>(4294967279);
       if ($25) {
        __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
        // unreachable;
       }
       $26 = ($24>>>0)<(11);
       if ($26) {
        $27 = $24 << 1;
        $28 = $27&255;
        HEAP8[$2>>0] = $28;
        $29 = (($2) + 1|0);
        $__p$0$ph$i$i$i = $29;
       } else {
        $30 = (($24) + 16)|0;
        $31 = $30 & -16;
        $32 = (_malloc($31)|0);
        $33 = (($2) + 8|0);
        HEAP32[$33>>2] = $32;
        $34 = $31 | 1;
        HEAP32[$2>>2] = $34;
        $35 = (($2) + 4|0);
        HEAP32[$35>>2] = $24;
        $__p$0$ph$i$i$i = $32;
       }
       HEAP8[$__p$0$ph$i$i$i>>0] = 46;
       $36 = (($13) + 1|0);
       $37 = ($36|0)==($last|0);
       if (!($37)) {
        $39 = $36;$__p$01$i$i$i3 = $__p$0$ph$i$i$i;
        while(1) {
         $38 = (($__p$01$i$i$i3) + 1|0);
         $$pre$i = HEAP8[$39>>0]|0;
         HEAP8[$38>>0] = $$pre$i;
         $40 = (($39) + 1|0);
         $41 = ($40|0)==($last|0);
         if ($41) {
          break;
         } else {
          $39 = $40;$__p$01$i$i$i3 = $38;
         }
        }
       }
       $scevgep4$i$i$i = (($__p$0$ph$i$i$i) + ($24)|0);
       HEAP8[$scevgep4$i$i$i>>0] = 0;
       $42 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($2,0,48728,2)|0);
       ;HEAP32[$1+0>>2]=HEAP32[$42+0>>2]|0;HEAP32[$1+4>>2]=HEAP32[$42+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$42+8>>2]|0;
       ;HEAP32[$42+0>>2]=0|0;HEAP32[$42+4>>2]=0|0;HEAP32[$42+8>>2]=0|0;
       $43 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1,48736,1)|0);
       ;HEAP32[$0+0>>2]=HEAP32[$43+0>>2]|0;HEAP32[$0+4>>2]=HEAP32[$43+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$43+8>>2]|0;
       ;HEAP32[$43+0>>2]=0|0;HEAP32[$43+4>>2]=0|0;HEAP32[$43+8>>2]=0|0;
       $44 = HEAP8[$0>>0]|0;
       $45 = $44 & 1;
       $46 = ($45<<24>>24)==(0);
       if ($46) {
        $51 = (($0) + 1|0);
        $52 = $44&255;
        $53 = $52 >>> 1;
        $54 = $51;$55 = $53;
       } else {
        $47 = (($0) + 8|0);
        $48 = HEAP32[$47>>2]|0;
        $49 = (($0) + 4|0);
        $50 = HEAP32[$49>>2]|0;
        $54 = $48;$55 = $50;
       }
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($22,$54,$55)|0);
       if (!($46)) {
        $56 = (($0) + 8|0);
        $57 = HEAP32[$56>>2]|0;
        _free($57);
       }
       $58 = HEAP8[$1>>0]|0;
       $59 = $58 & 1;
       $60 = ($59<<24>>24)==(0);
       if (!($60)) {
        $61 = (($1) + 8|0);
        $62 = HEAP32[$61>>2]|0;
        _free($62);
       }
       $63 = HEAP8[$2>>0]|0;
       $64 = $63 & 1;
       $65 = ($64<<24>>24)==(0);
       if ($65) {
        break;
       }
       $66 = (($2) + 8|0);
       $67 = HEAP32[$66>>2]|0;
       _free($67);
       break;
      }
     }
    }
    if ($15) {
     break;
    }
    HEAP32[$status>>2] = -2;
    STACKTOP = sp;return;
   } else if ((($11<<24>>24) == 95)) {
    $68 = (($first) + 2|0);
    $69 = HEAP8[$68>>0]|0;
    $70 = ($69<<24>>24)==(95);
    if ($70) {
     $71 = (($first) + 3|0);
     $72 = HEAP8[$71>>0]|0;
     $73 = ($72<<24>>24)==(90);
     if ($73) {
      $74 = (($first) + 4|0);
      $75 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($74,$last,$db)|0);
      $76 = ($75|0)==($74|0);
      $77 = ($75|0)==($last|0);
      $or$cond1 = $76 | $77;
      if ($or$cond1) {
       HEAP32[$status>>2] = -2;
       STACKTOP = sp;return;
      }
      $78 = $75;
      $79 = (($6) - ($78))|0;
      $80 = ($79|0)>(12);
      L49: do {
       if ($80) {
        $i$08$i = 0;$t$07$i = $75;
        while(1) {
         $81 = HEAP8[$t$07$i>>0]|0;
         $82 = (50880 + ($i$08$i)|0);
         $83 = HEAP8[$82>>0]|0;
         $84 = ($81<<24>>24)==($83<<24>>24);
         if (!($84)) {
          $$0$i2 = $75;
          break L49;
         }
         $85 = (($i$08$i) + 1)|0;
         $86 = (($t$07$i) + 1|0);
         $87 = ($85|0)<(13);
         if ($87) {
          $i$08$i = $85;$t$07$i = $86;
         } else {
          break;
         }
        }
        $88 = ($86|0)==($last|0);
        L54: do {
         if ($88) {
          $t$2$i = $last;
         } else {
          $89 = HEAP8[$86>>0]|0;
          $90 = ($89<<24>>24)==(95);
          if ($90) {
           $91 = (($t$07$i) + 2|0);
           $92 = ($91|0)==($last|0);
           if ($92) {
            $$0$i2 = $75;
            break L49;
           }
           $93 = HEAP8[$91>>0]|0;
           $94 = $93 << 24 >> 24;
           $isdigittmp2$i = (($94) + -48)|0;
           $isdigit3$i = ($isdigittmp2$i>>>0)<(10);
           if (!($isdigit3$i)) {
            $$0$i2 = $75;
            break L49;
           }
           $95 = (($t$07$i) + 3|0);
           $t$1$ph$i = $95;
          } else {
           $t$1$ph$i = $86;
          }
          $96 = ($t$1$ph$i|0)==($last|0);
          if ($96) {
           $t$2$i = $last;
          } else {
           $t$14$i = $t$1$ph$i;
           while(1) {
            $99 = HEAP8[$t$14$i>>0]|0;
            $100 = $99 << 24 >> 24;
            $isdigittmp$i = (($100) + -48)|0;
            $isdigit$i = ($isdigittmp$i>>>0)<(10);
            $98 = (($t$14$i) + 1|0);
            if (!($isdigit$i)) {
             $t$2$i = $t$14$i;
             break L54;
            }
            $97 = ($98|0)==($last|0);
            if ($97) {
             $t$2$i = $last;
             break;
            } else {
             $t$14$i = $98;
            }
           }
          }
         }
        } while(0);
        $101 = HEAP32[$db>>2]|0;
        $102 = (($db) + 4|0);
        $103 = HEAP32[$102>>2]|0;
        $104 = ($101|0)==($103|0);
        if ($104) {
         $$0$i2 = $75;
        } else {
         $105 = (($103) + -24|0);
         (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($105,0,50896,33)|0);
         $$0$i2 = $t$2$i;
        }
       } else {
        $$0$i2 = $75;
       }
      } while(0);
      $106 = ($$0$i2|0)==($last|0);
      if ($106) {
       break;
      }
      HEAP32[$status>>2] = -2;
      STACKTOP = sp;return;
     }
    }
   }
   HEAP32[$status>>2] = -2;
   STACKTOP = sp;return;
  } else {
   $107 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
   $108 = ($107|0)==($last|0);
   if (!($108)) {
    HEAP32[$status>>2] = -2;
    STACKTOP = sp;return;
   }
  }
 } while(0);
 $$pr = HEAP32[$status>>2]|0;
 $109 = ($$pr|0)==(0);
 if (!($109)) {
  STACKTOP = sp;return;
 }
 $110 = HEAP32[$db>>2]|0;
 $111 = (($db) + 4|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = ($110|0)==($112|0);
 if (!($113)) {
  STACKTOP = sp;return;
 }
 HEAP32[$status>>2] = -2;
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if (!($3)) {
  $4 = (($this) + 20|0);
  $5 = HEAP32[$4>>2]|0;
  _free($5);
 }
 $6 = HEAP8[$this>>0]|0;
 $7 = $6 & 1;
 $8 = ($7<<24>>24)==(0);
 if ($8) {
  STACKTOP = sp;return;
 }
 $9 = (($this) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 _free($10);
 STACKTOP = sp;return;
}
function __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  STACKTOP = sp;return;
 }
 $2 = (($this) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if ($4) {
  $13 = $0;
 } else {
  $6 = $3;
  while(1) {
   $5 = (($6) + -24|0);
   HEAP32[$2>>2] = $5;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
   $7 = HEAP32[$2>>2]|0;
   $8 = ($7|0)==($0|0);
   if ($8) {
    break;
   } else {
    $6 = $7;
   }
  }
  $$pre = HEAP32[$this>>2]|0;
  $13 = $$pre;
 }
 $9 = (($this) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10;
 $12 = $13;
 $14 = (($11) - ($12))|0;
 $15 = (($this) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($16,$13,$14);
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $14 = 10;$7 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $14 = $phitmp$i;$7 = $5;
 }
 $6 = $7 & 1;
 $8 = ($6<<24>>24)==(0);
 if ($8) {
  $11 = $7&255;
  $12 = $11 >>> 1;
  $15 = $12;
 } else {
  $9 = (($this) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $15 = $10;
 }
 $13 = (($14) - ($15))|0;
 $16 = ($13>>>0)<($__n>>>0);
 if ($16) {
  $31 = (($__n) - ($14))|0;
  $32 = (($31) + ($15))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$14,$32,$15,$15,0,$__n,$__s);
  STACKTOP = sp;return ($this|0);
 }
 $17 = ($__n|0)==(0);
 if ($17) {
  STACKTOP = sp;return ($this|0);
 }
 if ($8) {
  $20 = (($this) + 1|0);
  $22 = $20;
 } else {
  $18 = (($this) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $22 = $19;
 }
 $21 = (($22) + ($15)|0);
 _memcpy(($21|0),($__s|0),($__n|0))|0;
 $23 = (($15) + ($__n))|0;
 $24 = HEAP8[$this>>0]|0;
 $25 = $24 & 1;
 $26 = ($25<<24>>24)==(0);
 if ($26) {
  $28 = $23 << 1;
  $29 = $28&255;
  HEAP8[$this>>0] = $29;
 } else {
  $27 = (($this) + 4|0);
  HEAP32[$27>>2] = $23;
 }
 $30 = (($22) + ($23)|0);
 HEAP8[$30>>0] = 0;
 STACKTOP = sp;return ($this|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($this) {
 $this = $this|0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 32|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = (($this) + 36|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)==($1|0);
  if ($5) {
   $14 = $1;
  } else {
   $7 = $4;
   while(1) {
    $6 = (($7) + -16|0);
    HEAP32[$3>>2] = $6;
    __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($6);
    $8 = HEAP32[$3>>2]|0;
    $9 = ($8|0)==($1|0);
    if ($9) {
     break;
    } else {
     $7 = $8;
    }
   }
   $$pre$i = HEAP32[$0>>2]|0;
   $14 = $$pre$i;
  }
  $10 = (($this) + 40|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $11;
  $13 = $14;
  $15 = (($12) - ($13))|0;
  $16 = (($this) + 44|0);
  $17 = HEAP32[$16>>2]|0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($17,$14,$15);
 }
 $18 = (($this) + 16|0);
 __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($18);
 __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($this);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $0 = (_pthread_key_create((51184|0),(151|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 } else {
  _abort_message(51256,$vararg_buffer);
  // unreachable;
 }
}
function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($this,$n) {
 $this = $this|0;
 $n = $n|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($n) + 15)|0;
 $1 = $0 & -16;
 $2 = (($this) + 4096|0);
 $3 = (($this) + 4096|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ($7>>>0)<($1>>>0);
 if ($8) {
  $10 = (_malloc($1)|0);
  $$0 = $10;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = (($4) + ($1)|0);
  HEAP32[$3>>2] = $9;
  $$0 = $4;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  STACKTOP = sp;return;
 }
 $2 = (($this) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($0|0);
 if ($4) {
  $13 = $0;
 } else {
  $6 = $3;
  while(1) {
   $5 = (($6) + -16|0);
   HEAP32[$2>>2] = $5;
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($5);
   $7 = HEAP32[$2>>2]|0;
   $8 = ($7|0)==($0|0);
   if ($8) {
    break;
   } else {
    $6 = $7;
   }
  }
  $$pre = HEAP32[$this>>2]|0;
  $13 = $$pre;
 }
 $9 = (($this) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10;
 $12 = $13;
 $14 = (($11) - ($12))|0;
 $15 = (($this) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($16,$13,$14);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($this,$p,$n) {
 $this = $this|0;
 $p = $p|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this>>>0)<=($p>>>0);
 $1 = (($this) + 4096|0);
 $2 = ($1>>>0)>=($p>>>0);
 $or$cond = $0 & $2;
 if (!($or$cond)) {
  _free($p);
  STACKTOP = sp;return;
 }
 $3 = (($n) + 15)|0;
 $4 = $3 & -16;
 $5 = (($p) + ($4)|0);
 $6 = (($this) + 4096|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5|0)==($7|0);
 if (!($8)) {
  STACKTOP = sp;return;
 }
 HEAP32[$6>>2] = $p;
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$25$ph = 0, $$7 = 0, $$in = 0, $$in101 = 0, $$pre = 0, $$pre$i$i$i$i = 0, $$pre100 = 0, $$pre57 = 0, $$pre92 = 0, $$pre93 = 0, $$pre94 = 0, $$pre95 = 0, $$pre97 = 0, $$pre98 = 0, $$pre99 = 0, $$sroa$5 = 0, $$sum$i = 0, $0 = 0, $1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;
 var $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0;
 var $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0;
 var $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0;
 var $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0;
 var $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0;
 var $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $first_arg$0$off0$ph = 0, $first_arg$3$off0$ph = 0, $k$068 = 0;
 var $k2$069 = 0, $left$i = 0, $or$cond$i = 0, $or$cond$i$i$i$i$i$i = 0, $phitmp$i$i$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i$i = 0, $ret1 = 0, $ret2 = 0, $t$0 = 0, $t$1 = 0, $t$1$ph = 0, $t$2 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $left$i = sp + 12|0;
 $$sroa$5 = sp + 96|0;
 $0 = sp + 60|0;
 $1 = sp + 72|0;
 $2 = sp + 84|0;
 $ret2 = sp;
 $ret1 = sp + 36|0;
 $tmp = sp + 24|0;
 $3 = sp + 48|0;
 $4 = ($first|0)==($last|0);
 if ($4) {
  $$7 = $first;
  STACKTOP = sp;return ($$7|0);
 }
 $5 = (($db) + 56|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + 1)|0;
 HEAP32[$5>>2] = $7;
 $8 = (($db) + 61|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ($7>>>0)>(1);
 if ($10) {
  HEAP8[$8>>0] = 1;
 }
 $11 = HEAP8[$first>>0]|0;
 $12 = $11 << 24 >> 24;
 L7: do {
  if ((($12|0) == 84) | (($12|0) == 71)) {
   $13 = $last;
   $14 = $first;
   $15 = (($13) - ($14))|0;
   $16 = ($15|0)>(2);
   if ($16) {
    if ((($12|0) == 71)) {
     $188 = (($first) + 1|0);
     $189 = HEAP8[$188>>0]|0;
     $190 = $189 << 24 >> 24;
     if ((($190|0) == 82)) {
      $199 = (($first) + 2|0);
      $200 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($199,$last,$db)|0);
      $201 = ($200|0)==($199|0);
      if ($201) {
       $$25$ph = $first;
       break;
      }
      $202 = HEAP32[$db>>2]|0;
      $203 = (($db) + 4|0);
      $204 = HEAP32[$203>>2]|0;
      $205 = ($202|0)==($204|0);
      if ($205) {
       $$25$ph = $first;
       break;
      }
      $206 = (($204) + -24|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($206,0,51152,24)|0);
      $$25$ph = $200;
      break;
     } else if ((($190|0) == 86)) {
      $191 = (($first) + 2|0);
      $192 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($191,$last,$db)|0);
      $193 = ($192|0)==($191|0);
      if ($193) {
       $$25$ph = $first;
       break;
      }
      $194 = HEAP32[$db>>2]|0;
      $195 = (($db) + 4|0);
      $196 = HEAP32[$195>>2]|0;
      $197 = ($194|0)==($196|0);
      if ($197) {
       $$25$ph = $first;
       break;
      }
      $198 = (($196) + -24|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($198,0,51128,19)|0);
      $$25$ph = $192;
      break;
     } else {
      $$25$ph = $first;
      break;
     }
    } else if (!((($12|0) == 84))) {
     $$25$ph = $first;
     break;
    }
    $17 = (($first) + 1|0);
    $18 = HEAP8[$17>>0]|0;
    $19 = $18 << 24 >> 24;
    switch ($19|0) {
    case 84:  {
     $28 = (($first) + 2|0);
     $29 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($28,$last,$db)|0);
     $30 = ($29|0)==($28|0);
     if ($30) {
      $$25$ph = $first;
      break L7;
     }
     $31 = HEAP32[$db>>2]|0;
     $32 = (($db) + 4|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = ($31|0)==($33|0);
     if ($34) {
      $$25$ph = $first;
      break L7;
     }
     $35 = (($33) + -24|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($35,0,50952,8)|0);
     $$25$ph = $29;
     break L7;
     break;
    }
    case 73:  {
     $36 = (($first) + 2|0);
     $37 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($36,$last,$db)|0);
     $38 = ($37|0)==($36|0);
     if ($38) {
      $$25$ph = $first;
      break L7;
     }
     $39 = HEAP32[$db>>2]|0;
     $40 = (($db) + 4|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = ($39|0)==($41|0);
     if ($42) {
      $$25$ph = $first;
      break L7;
     }
     $43 = (($41) + -24|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($43,0,50968,13)|0);
     $$25$ph = $37;
     break L7;
     break;
    }
    case 83:  {
     $44 = (($first) + 2|0);
     $45 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($44,$last,$db)|0);
     $46 = ($45|0)==($44|0);
     if ($46) {
      $$25$ph = $first;
      break L7;
     }
     $47 = HEAP32[$db>>2]|0;
     $48 = (($db) + 4|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($47|0)==($49|0);
     if ($50) {
      $$25$ph = $first;
      break L7;
     }
     $51 = (($49) + -24|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($51,0,50984,18)|0);
     $$25$ph = $45;
     break L7;
     break;
    }
    case 99:  {
     $52 = (($first) + 2|0);
     $53 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($52,$last)|0);
     $54 = ($53|0)==($52|0);
     if ($54) {
      $$25$ph = $first;
      break L7;
     }
     $55 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($53,$last)|0);
     $56 = ($55|0)==($53|0);
     if ($56) {
      $$25$ph = $first;
      break L7;
     }
     $57 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($55,$last,$db)|0);
     $58 = ($57|0)==($55|0);
     if ($58) {
      $$25$ph = $first;
      break L7;
     }
     $59 = HEAP32[$db>>2]|0;
     $60 = (($db) + 4|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($59|0)==($61|0);
     if ($62) {
      $$25$ph = $first;
      break L7;
     }
     $63 = (($61) + -24|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($63,0,51008,26)|0);
     $$25$ph = $57;
     break L7;
     break;
    }
    case 86:  {
     $20 = (($first) + 2|0);
     $21 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($20,$last,$db)|0);
     $22 = ($21|0)==($20|0);
     if ($22) {
      $$25$ph = $first;
      break L7;
     }
     $23 = HEAP32[$db>>2]|0;
     $24 = (($db) + 4|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = ($23|0)==($25|0);
     if ($26) {
      $$25$ph = $first;
      break L7;
     }
     $27 = (($25) + -24|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($27,0,50936,11)|0);
     $$25$ph = $21;
     break L7;
     break;
    }
    case 67:  {
     $64 = (($first) + 2|0);
     $65 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($64,$last,$db)|0);
     $66 = ($65|0)==($64|0);
     if ($66) {
      $$25$ph = $first;
      break L7;
     }
     $67 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($65,$last)|0);
     $68 = ($67|0)==($65|0);
     $69 = ($67|0)==($last|0);
     $or$cond$i = $68 | $69;
     if ($or$cond$i) {
      $$25$ph = $first;
      break L7;
     }
     $70 = HEAP8[$67>>0]|0;
     $71 = ($70<<24>>24)==(95);
     if (!($71)) {
      $$25$ph = $first;
      break L7;
     }
     $72 = (($67) + 1|0);
     $73 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($72,$last,$db)|0);
     $74 = ($73|0)==($72|0);
     if ($74) {
      $$25$ph = $first;
      break L7;
     }
     $75 = (($db) + 4|0);
     $76 = HEAP32[$75>>2]|0;
     $77 = HEAP32[$db>>2]|0;
     $78 = $76;
     $79 = $77;
     $80 = (($78) - ($79))|0;
     $81 = (($80|0) / 24)&-1;
     $82 = ($81>>>0)<(2);
     if ($82) {
      $$25$ph = $first;
      break L7;
     }
     $83 = (($76) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($left$i,$83);
     $84 = HEAP32[$75>>2]|0;
     $85 = (($84) + -24|0);
     $87 = $84;
     while(1) {
      $86 = (($87) + -24|0);
      HEAP32[$75>>2] = $86;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($86);
      $88 = HEAP32[$75>>2]|0;
      $89 = ($88|0)==($85|0);
      if ($89) {
       break;
      } else {
       $87 = $88;
      }
     }
     $90 = (($84) + -48|0);
     $91 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($left$i,0,51040,24)|0);
     ;HEAP32[$1+0>>2]=HEAP32[$91+0>>2]|0;HEAP32[$1+4>>2]=HEAP32[$91+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$91+8>>2]|0;
     ;HEAP32[$91+0>>2]=0|0;HEAP32[$91+4>>2]=0|0;HEAP32[$91+8>>2]=0|0;
     $92 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1,51072,4)|0);
     ;HEAP32[$0+0>>2]=HEAP32[$92+0>>2]|0;HEAP32[$0+4>>2]=HEAP32[$92+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$92+8>>2]|0;
     ;HEAP32[$92+0>>2]=0|0;HEAP32[$92+4>>2]=0|0;HEAP32[$92+8>>2]=0|0;
     $93 = HEAP32[$75>>2]|0;
     $94 = (($93) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($2,$94);
     $95 = HEAP8[$2>>0]|0;
     $96 = $95 & 1;
     $97 = ($96<<24>>24)==(0);
     if ($97) {
      $102 = (($2) + 1|0);
      $103 = $95&255;
      $104 = $103 >>> 1;
      $105 = $102;$106 = $104;
     } else {
      $98 = (($2) + 8|0);
      $99 = HEAP32[$98>>2]|0;
      $100 = (($2) + 4|0);
      $101 = HEAP32[$100>>2]|0;
      $105 = $99;$106 = $101;
     }
     $107 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($0,$105,$106)|0);
     $108 = HEAP8[$107>>0]|0;
     $109 = (($107) + 1|0);
     ;HEAP8[$$sroa$5+0>>0]=HEAP8[$109+0>>0]|0;HEAP8[$$sroa$5+1>>0]=HEAP8[$109+1>>0]|0;HEAP8[$$sroa$5+2>>0]=HEAP8[$109+2>>0]|0;HEAP8[$$sroa$5+3>>0]=HEAP8[$109+3>>0]|0;HEAP8[$$sroa$5+4>>0]=HEAP8[$109+4>>0]|0;HEAP8[$$sroa$5+5>>0]=HEAP8[$109+5>>0]|0;HEAP8[$$sroa$5+6>>0]=HEAP8[$109+6>>0]|0;
     $110 = (($107) + 8|0);
     $111 = HEAP32[$110>>2]|0;
     ;HEAP32[$107+0>>2]=0|0;HEAP32[$107+4>>2]=0|0;HEAP32[$107+8>>2]=0|0;
     $112 = HEAP8[$90>>0]|0;
     $113 = $112 & 1;
     $114 = ($113<<24>>24)==(0);
     do {
      if ($114) {
       $115 = (($90) + 1|0);
       HEAP8[$115>>0] = 0;
       HEAP8[$90>>0] = 0;
      } else {
       $116 = (($84) + -40|0);
       $117 = HEAP32[$116>>2]|0;
       HEAP8[$117>>0] = 0;
       $118 = (($84) + -44|0);
       HEAP32[$118>>2] = 0;
       $$pre$i$i$i$i = HEAP8[$90>>0]|0;
       $119 = $$pre$i$i$i$i & 1;
       $120 = ($119<<24>>24)==(0);
       if ($120) {
        $125 = $$pre$i$i$i$i;$134 = 10;
       } else {
        $121 = HEAP32[$90>>2]|0;
        $122 = $121 & -2;
        $phitmp$i$i$i$i$i$i$i = (($122) + -1)|0;
        $123 = $121&255;
        $125 = $123;$134 = $phitmp$i$i$i$i$i$i$i;
       }
       $124 = $125 & 1;
       $126 = ($124<<24>>24)==(0);
       if ($126) {
        $127 = $125&255;
        $128 = $127 >>> 1;
        $129 = ($125&255)<(22);
        if ($129) {
         $133 = 10;$153 = $128;$438 = 1;
        } else {
         $130 = (($128) + 16)|0;
         $131 = $130 & 240;
         $phitmp$i2$i$i$i$i$i$i = (($131) + -1)|0;
         $133 = $phitmp$i2$i$i$i$i$i$i;$153 = $128;$438 = 1;
        }
       } else {
        $133 = 10;$153 = 0;$438 = 0;
       }
       $132 = ($133|0)==($134|0);
       if (!($132)) {
        $135 = ($133|0)==(10);
        if ($135) {
         $140 = (($90) + 1|0);
         $141 = HEAP32[$116>>2]|0;
         if ($438) {
          $142 = $125&255;
          $143 = $142 >>> 1;
          $144 = (($143) + 1)|0;
          _memcpy(($140|0),($141|0),($144|0))|0;
          _free($141);
         } else {
          $149 = HEAP8[$141>>0]|0;
          HEAP8[$140>>0] = $149;
          _free($141);
         }
         $154 = $153 << 1;
         $155 = $154&255;
         HEAP8[$90>>0] = $155;
         break;
        }
        $136 = ($133>>>0)<=($134>>>0);
        $137 = (($133) + 1)|0;
        $138 = (_malloc($137)|0);
        $139 = ($138|0)==(0|0);
        $or$cond$i$i$i$i$i$i = $136 & $139;
        if (!($or$cond$i$i$i$i$i$i)) {
         if ($438) {
          $145 = (($90) + 1|0);
          $146 = $125&255;
          $147 = $146 >>> 1;
          $148 = (($147) + 1)|0;
          _memcpy(($138|0),($145|0),($148|0))|0;
         } else {
          $150 = HEAP32[$116>>2]|0;
          $151 = HEAP8[$150>>0]|0;
          HEAP8[$138>>0] = $151;
          _free($150);
         }
         $152 = $137 | 1;
         HEAP32[$90>>2] = $152;
         HEAP32[$118>>2] = $153;
         HEAP32[$116>>2] = $138;
        }
       }
      }
     } while(0);
     $156 = (($84) + -48|0);
     HEAP8[$156>>0] = $108;
     $157 = (($84) + -47|0);
     ;HEAP8[$157+0>>0]=HEAP8[$$sroa$5+0>>0]|0;HEAP8[$157+1>>0]=HEAP8[$$sroa$5+1>>0]|0;HEAP8[$157+2>>0]=HEAP8[$$sroa$5+2>>0]|0;HEAP8[$157+3>>0]=HEAP8[$$sroa$5+3>>0]|0;HEAP8[$157+4>>0]=HEAP8[$$sroa$5+4>>0]|0;HEAP8[$157+5>>0]=HEAP8[$$sroa$5+5>>0]|0;HEAP8[$157+6>>0]=HEAP8[$$sroa$5+6>>0]|0;
     $158 = (($84) + -40|0);
     HEAP32[$158>>2] = $111;
     ;HEAP8[$$sroa$5+0>>0]=0|0;HEAP8[$$sroa$5+1>>0]=0|0;HEAP8[$$sroa$5+2>>0]=0|0;HEAP8[$$sroa$5+3>>0]=0|0;HEAP8[$$sroa$5+4>>0]=0|0;HEAP8[$$sroa$5+5>>0]=0|0;HEAP8[$$sroa$5+6>>0]=0|0;
     if (!($97)) {
      $159 = (($2) + 8|0);
      $160 = HEAP32[$159>>2]|0;
      _free($160);
     }
     $161 = HEAP8[$0>>0]|0;
     $162 = $161 & 1;
     $163 = ($162<<24>>24)==(0);
     if (!($163)) {
      $164 = (($0) + 8|0);
      $165 = HEAP32[$164>>2]|0;
      _free($165);
     }
     $166 = HEAP8[$1>>0]|0;
     $167 = $166 & 1;
     $168 = ($167<<24>>24)==(0);
     if (!($168)) {
      $169 = (($1) + 8|0);
      $170 = HEAP32[$169>>2]|0;
      _free($170);
     }
     $171 = HEAP8[$left$i>>0]|0;
     $172 = $171 & 1;
     $173 = ($172<<24>>24)==(0);
     if ($173) {
      $$25$ph = $73;
      break L7;
     }
     $174 = (($left$i) + 8|0);
     $175 = HEAP32[$174>>2]|0;
     _free($175);
     $$25$ph = $73;
     break L7;
     break;
    }
    default: {
     $176 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($17,$last)|0);
     $177 = ($176|0)==($17|0);
     if ($177) {
      $$25$ph = $first;
      break L7;
     }
     $178 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($176,$last,$db)|0);
     $179 = ($178|0)==($176|0);
     if ($179) {
      $$25$ph = $first;
      break L7;
     }
     $180 = HEAP32[$db>>2]|0;
     $181 = (($db) + 4|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = ($180|0)==($182|0);
     if ($183) {
      $$25$ph = $first;
      break L7;
     }
     $184 = (($first) + 2|0);
     $185 = HEAP8[$184>>0]|0;
     $186 = ($185<<24>>24)==(118);
     $187 = (($182) + -24|0);
     if ($186) {
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($187,0,51080,17)|0);
      $$25$ph = $178;
      break L7;
     } else {
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($187,0,51104,21)|0);
      $$25$ph = $178;
      break L7;
     }
    }
    }
   } else {
    $$25$ph = $first;
   }
  } else {
   $207 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
   $208 = (($db) + 48|0);
   $209 = HEAP32[$208>>2]|0;
   $210 = (($db) + 52|0);
   $211 = HEAP32[$210>>2]|0;
   $212 = ($207|0)==($first|0);
   if ($212) {
    $$25$ph = $first;
   } else {
    $213 = ($207|0)==($last|0);
    if ($213) {
     $$25$ph = $last;
    } else {
     $214 = HEAP8[$207>>0]|0;
     if ((($214<<24>>24) == 46) | (($214<<24>>24) == 69)) {
      $$25$ph = $207;
     } else {
      $215 = HEAP8[$8>>0]|0;
      HEAP8[$8>>0] = 0;
      ;HEAP32[$ret2+0>>2]=0|0;HEAP32[$ret2+4>>2]=0|0;HEAP32[$ret2+8>>2]=0|0;
      $216 = HEAP32[$db>>2]|0;
      $217 = (($db) + 4|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = ($216|0)==($218|0);
      L12: do {
       if (!($219)) {
        $220 = (($218) + -24|0);
        $221 = HEAP8[$220>>0]|0;
        $222 = $221 & 1;
        $223 = ($222<<24>>24)==(0);
        if ($223) {
         $226 = $221&255;
         $227 = $226 >>> 1;
         $229 = $227;
        } else {
         $224 = (($218) + -20|0);
         $225 = HEAP32[$224>>2]|0;
         $229 = $225;
        }
        $228 = ($229|0)==(0);
        if (!($228)) {
         $230 = (($db) + 60|0);
         $231 = HEAP8[$230>>0]|0;
         $232 = ($231<<24>>24)==(0);
         if ($232) {
          if ($223) {
           $237 = (($220) + 1|0);
           $238 = $221&255;
           $239 = $238 >>> 1;
           $240 = $239;$242 = $237;
          } else {
           $233 = (($218) + -16|0);
           $234 = HEAP32[$233>>2]|0;
           $235 = (($218) + -20|0);
           $236 = HEAP32[$235>>2]|0;
           $240 = $236;$242 = $234;
          }
          $$sum$i = (($240) + -1)|0;
          $241 = (($242) + ($$sum$i)|0);
          $243 = HEAP8[$241>>0]|0;
          $244 = ($243<<24>>24)==(62);
          if ($244) {
           if ($223) {
            $249 = $221&255;
            $250 = $249 >>> 1;
            $251 = (($220) + 1|0);
            $$in = $250;$254 = $251;
           } else {
            $245 = (($218) + -20|0);
            $246 = HEAP32[$245>>2]|0;
            $247 = (($218) + -16|0);
            $248 = HEAP32[$247>>2]|0;
            $$in = $246;$254 = $248;
           }
           $252 = (($$in) + -2)|0;
           $253 = (($254) + ($252)|0);
           $255 = HEAP8[$253>>0]|0;
           $256 = ($255<<24>>24)==(45);
           if ($256) {
            $315 = $218;$t$0 = $207;
           } else {
            if ($223) {
             $261 = $221&255;
             $262 = $261 >>> 1;
             $263 = (($220) + 1|0);
             $$in101 = $262;$266 = $263;
            } else {
             $257 = (($218) + -20|0);
             $258 = HEAP32[$257>>2]|0;
             $259 = (($218) + -16|0);
             $260 = HEAP32[$259>>2]|0;
             $$in101 = $258;$266 = $260;
            }
            $264 = (($$in101) + -2)|0;
            $265 = (($266) + ($264)|0);
            $267 = HEAP8[$265>>0]|0;
            $268 = ($267<<24>>24)==(62);
            if ($268) {
             $315 = $218;$t$0 = $207;
            } else {
             $269 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($207,$last,$db)|0);
             $270 = ($269|0)==($207|0);
             if ($270) {
              break;
             }
             $271 = HEAP32[$217>>2]|0;
             $272 = HEAP32[$db>>2]|0;
             $273 = $271;
             $274 = $272;
             $275 = (($273) - ($274))|0;
             $276 = (($275|0) / 24)&-1;
             $277 = ($276>>>0)<(2);
             if ($277) {
              break;
             }
             $278 = (($271) + -24|0);
             ;HEAP32[$ret1+0>>2]=HEAP32[$278+0>>2]|0;HEAP32[$ret1+4>>2]=HEAP32[$278+4>>2]|0;HEAP32[$ret1+8>>2]=HEAP32[$278+8>>2]|0;
             ;HEAP32[$278+0>>2]=0|0;HEAP32[$278+4>>2]=0|0;HEAP32[$278+8>>2]=0|0;
             $279 = HEAP32[$217>>2]|0;
             $280 = (($279) + -12|0);
             ;HEAP32[$ret2+0>>2]=HEAP32[$280+0>>2]|0;HEAP32[$ret2+4>>2]=HEAP32[$280+4>>2]|0;HEAP32[$ret2+8>>2]=HEAP32[$280+8>>2]|0;
             ;HEAP32[$280+0>>2]=0|0;HEAP32[$280+4>>2]=0|0;HEAP32[$280+8>>2]=0|0;
             $281 = HEAP8[$ret2>>0]|0;
             $282 = $281 & 1;
             $283 = ($282<<24>>24)==(0);
             if ($283) {
              $286 = $281&255;
              $287 = $286 >>> 1;
              $289 = $287;
             } else {
              $284 = (($ret2) + 4|0);
              $285 = HEAP32[$284>>2]|0;
              $289 = $285;
             }
             $288 = ($289|0)==(0);
             if ($288) {
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($ret1,32);
             }
             $290 = HEAP32[$217>>2]|0;
             $291 = (($290) + -24|0);
             $293 = $290;
             while(1) {
              $292 = (($293) + -24|0);
              HEAP32[$217>>2] = $292;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($292);
              $294 = HEAP32[$217>>2]|0;
              $295 = ($294|0)==($291|0);
              if ($295) {
               break;
              } else {
               $293 = $294;
              }
             }
             $296 = (($290) + -48|0);
             $297 = HEAP8[$ret1>>0]|0;
             $298 = $297 & 1;
             $299 = ($298<<24>>24)==(0);
             if ($299) {
              $304 = (($ret1) + 1|0);
              $305 = $297&255;
              $306 = $305 >>> 1;
              $307 = $304;$308 = $306;
             } else {
              $300 = (($ret1) + 8|0);
              $301 = HEAP32[$300>>2]|0;
              $302 = (($ret1) + 4|0);
              $303 = HEAP32[$302>>2]|0;
              $307 = $301;$308 = $303;
             }
             (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($296,0,$307,$308)|0);
             $309 = HEAP8[$ret1>>0]|0;
             $310 = $309 & 1;
             $311 = ($310<<24>>24)==(0);
             if (!($311)) {
              $312 = (($ret1) + 8|0);
              $313 = HEAP32[$312>>2]|0;
              _free($313);
             }
             $$pre = HEAP32[$217>>2]|0;
             $315 = $$pre;$t$0 = $269;
            }
           }
          } else {
           $315 = $218;$t$0 = $207;
          }
         } else {
          $315 = $218;$t$0 = $207;
         }
         $314 = (($315) + -24|0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($314,40);
         $316 = ($t$0|0)==($last|0);
         if ($316) {
          label = 112;
         } else {
          $317 = HEAP8[$t$0>>0]|0;
          $318 = ($317<<24>>24)==(118);
          if ($318) {
           $325 = (($t$0) + 1|0);
           $$pre92 = HEAP32[$db>>2]|0;
           $$pre93 = HEAP32[$217>>2]|0;
           $398 = $$pre92;$399 = $$pre93;$t$2 = $325;
          } else {
           label = 112;
          }
         }
         L59: do {
          if ((label|0) == 112) {
           $319 = (($tmp) + 1|0);
           $320 = (($tmp) + 8|0);
           $321 = (($tmp) + 4|0);
           $322 = (($3) + 1|0);
           $323 = (($3) + 8|0);
           $324 = (($3) + 4|0);
           $first_arg$0$off0$ph = 1;$t$1$ph = $t$0;
           while(1) {
            $$pre94 = HEAP32[$217>>2]|0;
            $$pre95 = HEAP32[$db>>2]|0;
            $327 = $$pre94;$329 = $$pre95;$t$1 = $t$1$ph;
            while(1) {
             $326 = $327;
             $328 = $329;
             $330 = (($326) - ($328))|0;
             $331 = (($330|0) / 24)&-1;
             $332 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($t$1,$last,$db)|0);
             $333 = HEAP32[$217>>2]|0;
             $334 = HEAP32[$db>>2]|0;
             $335 = $333;
             $336 = $334;
             $337 = (($335) - ($336))|0;
             $338 = (($337|0) / 24)&-1;
             $339 = ($332|0)==($t$1|0);
             if ($339) {
              $398 = $334;$399 = $333;$t$2 = $t$1;
              break L59;
             }
             $340 = ($338>>>0)>($331>>>0);
             if ($340) {
              break;
             } else {
              $327 = $333;$329 = $334;$t$1 = $332;
             }
            }
            ;HEAP32[$tmp+0>>2]=0|0;HEAP32[$tmp+4>>2]=0|0;HEAP32[$tmp+8>>2]=0|0;
            $342 = 0;$k$068 = $331;
            while(1) {
             $341 = $342 & 1;
             $343 = ($341<<24>>24)==(0);
             if ($343) {
              $345 = $342&255;
              $346 = $345 >>> 1;
              $348 = $346;
             } else {
              $344 = HEAP32[$321>>2]|0;
              $348 = $344;
             }
             $347 = ($348|0)==(0);
             if (!($347)) {
              (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($tmp,49032,2)|0);
             }
             $349 = HEAP32[$db>>2]|0;
             $350 = (($349) + (($k$068*24)|0)|0);
             __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3,$350);
             $351 = HEAP8[$3>>0]|0;
             $352 = $351 & 1;
             $353 = ($352<<24>>24)==(0);
             if ($353) {
              $356 = $351&255;
              $357 = $356 >>> 1;
              $358 = $322;$359 = $357;
             } else {
              $354 = HEAP32[$323>>2]|0;
              $355 = HEAP32[$324>>2]|0;
              $358 = $354;$359 = $355;
             }
             (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($tmp,$358,$359)|0);
             if (!($353)) {
              $360 = HEAP32[$323>>2]|0;
              _free($360);
             }
             $361 = (($k$068) + 1)|0;
             $362 = ($361>>>0)<($338>>>0);
             if (!($362)) {
              break;
             }
             $$pre100 = HEAP8[$tmp>>0]|0;
             $342 = $$pre100;$k$068 = $361;
            }
            $$pre99 = HEAP32[$217>>2]|0;
            $364 = $$pre99;$k2$069 = $331;
            while(1) {
             $363 = (($364) + -24|0);
             $366 = $364;
             while(1) {
              $365 = (($366) + -24|0);
              HEAP32[$217>>2] = $365;
              __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($365);
              $367 = HEAP32[$217>>2]|0;
              $368 = ($367|0)==($363|0);
              if ($368) {
               break;
              } else {
               $366 = $367;
              }
             }
             $369 = (($k2$069) + 1)|0;
             $exitcond = ($369|0)==($338|0);
             if ($exitcond) {
              break;
             } else {
              $364 = $363;$k2$069 = $369;
             }
            }
            $370 = HEAP8[$tmp>>0]|0;
            $371 = $370 & 1;
            $372 = ($371<<24>>24)==(0);
            if ($372) {
             $374 = $370&255;
             $375 = $374 >>> 1;
             $377 = $375;
            } else {
             $373 = HEAP32[$321>>2]|0;
             $377 = $373;
            }
            $376 = ($377|0)==(0);
            if ($376) {
             $394 = $370;$first_arg$3$off0$ph = $first_arg$0$off0$ph;
            } else {
             $378 = HEAP32[$db>>2]|0;
             $379 = ($378|0)==($363|0);
             if ($379) {
              break;
             }
             if ($first_arg$0$off0$ph) {
              $383 = $363;$385 = $370;
             } else {
              $381 = (($364) + -48|0);
              (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($381,49032,2)|0);
              $$pre97 = HEAP32[$217>>2]|0;
              $$pre98 = HEAP8[$tmp>>0]|0;
              $383 = $$pre97;$385 = $$pre98;
             }
             $382 = (($383) + -24|0);
             $384 = $385 & 1;
             $386 = ($384<<24>>24)==(0);
             if ($386) {
              $389 = $385&255;
              $390 = $389 >>> 1;
              $391 = $319;$392 = $390;
             } else {
              $387 = HEAP32[$320>>2]|0;
              $388 = HEAP32[$321>>2]|0;
              $391 = $387;$392 = $388;
             }
             (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($382,$391,$392)|0);
             $$pre57 = HEAP8[$tmp>>0]|0;
             $394 = $$pre57;$first_arg$3$off0$ph = 0;
            }
            $393 = $394 & 1;
            $395 = ($393<<24>>24)==(0);
            if ($395) {
             $first_arg$0$off0$ph = $first_arg$3$off0$ph;$t$1$ph = $332;
             continue;
            }
            $396 = HEAP32[$320>>2]|0;
            _free($396);
            $first_arg$0$off0$ph = $first_arg$3$off0$ph;$t$1$ph = $332;
           }
           if ($372) {
            break L12;
           }
           $380 = HEAP32[$320>>2]|0;
           _free($380);
           break L12;
          }
         } while(0);
         $397 = ($398|0)==($399|0);
         if (!($397)) {
          $400 = (($399) + -24|0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($400,41);
          $401 = $209 & 1;
          $402 = ($401|0)==(0);
          if (!($402)) {
           $403 = HEAP32[$217>>2]|0;
           $404 = (($403) + -24|0);
           (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($404,48648,6)|0);
          }
          $405 = $209 & 2;
          $406 = ($405|0)==(0);
          if (!($406)) {
           $407 = HEAP32[$217>>2]|0;
           $408 = (($407) + -24|0);
           (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($408,48656,9)|0);
          }
          $409 = $209 & 4;
          $410 = ($409|0)==(0);
          if (!($410)) {
           $411 = HEAP32[$217>>2]|0;
           $412 = (($411) + -24|0);
           (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($412,48672,9)|0);
          }
          if ((($211|0) == 1)) {
           $413 = HEAP32[$217>>2]|0;
           $414 = (($413) + -24|0);
           (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($414,50640,2)|0);
          } else if ((($211|0) == 2)) {
           $415 = HEAP32[$217>>2]|0;
           $416 = (($415) + -24|0);
           (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($416,50648,3)|0);
          }
          $417 = HEAP32[$217>>2]|0;
          $418 = (($417) + -24|0);
          $419 = HEAP8[$ret2>>0]|0;
          $420 = $419 & 1;
          $421 = ($420<<24>>24)==(0);
          if ($421) {
           $426 = (($ret2) + 1|0);
           $427 = $419&255;
           $428 = $427 >>> 1;
           $429 = $426;$430 = $428;
          } else {
           $422 = (($ret2) + 8|0);
           $423 = HEAP32[$422>>2]|0;
           $424 = (($ret2) + 4|0);
           $425 = HEAP32[$424>>2]|0;
           $429 = $423;$430 = $425;
          }
          (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($418,$429,$430)|0);
          if (!($421)) {
           $431 = (($ret2) + 8|0);
           $432 = HEAP32[$431>>2]|0;
           _free($432);
          }
          HEAP8[$8>>0] = $215;
          $$25$ph = $t$2;
          break L7;
         }
        }
       }
      } while(0);
      $433 = HEAP8[$ret2>>0]|0;
      $434 = $433 & 1;
      $435 = ($434<<24>>24)==(0);
      if (!($435)) {
       $436 = (($ret2) + 8|0);
       $437 = HEAP32[$436>>2]|0;
       _free($437);
      }
      HEAP8[$8>>0] = $9;
      HEAP32[$5>>2] = $6;
      $$7 = $first;
      STACKTOP = sp;return ($$7|0);
     }
    }
   }
  }
 } while(0);
 HEAP8[$8>>0] = $9;
 HEAP32[$5>>2] = $6;
 $$7 = $$25$ph;
 STACKTOP = sp;return ($$7|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$ = 0, $$$$i$i$i$i = 0, $$$$i$i$i$i233 = 0, $$$i$i$i$i = 0, $$$i$i$i$i233 = 0, $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i102 = 0, $$0$i$i$i110 = 0, $$0$i$i$i118 = 0, $$0$i$i$i127 = 0, $$0$i$i$i137 = 0, $$0$i$i$i154 = 0, $$0$i$i$i164 = 0, $$0$i$i$i180 = 0, $$0$i$i$i19 = 0, $$0$i$i$i190 = 0;
 var $$0$i$i$i198 = 0, $$0$i$i$i213 = 0, $$0$i$i$i221 = 0, $$0$i$i$i253 = 0, $$0$i$i$i27 = 0, $$0$i$i$i34 = 0, $$0$i$i$i37 = 0, $$0$i$i$i42 = 0, $$0$i$i$i52 = 0, $$0$i$i$i60 = 0, $$0$i$i$i70 = 0, $$0$i$i$i78 = 0, $$0$i$i$i86 = 0, $$0$i$i$i94 = 0, $$01$i$i = 0, $$02$i$i$i = 0, $$02$i111 = 0, $$02$i120 = 0, $$02$i127 = 0, $$02$i135 = 0;
 var $$02$i148 = 0, $$02$i32 = 0, $$02$i36 = 0, $$02$i52 = 0, $$03$i$i = 0, $$08$i = 0, $$1$i$i = 0, $$1$i328 = 0, $$12$i$i = 0, $$13$i324$ph = 0, $$14$i$i = 0, $$2$i$i = 0, $$in = 0, $$off = 0, $$off343 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i$i$i277 = 0;
 var $$pre$i$i$i12$i = 0, $$pre$i$i$i28$i = 0, $$pre$i$i$i32$i = 0, $$pre$i$i$i48$i = 0, $$pre$i100 = 0, $$pre$i108 = 0, $$pre$i116 = 0, $$pre$i124 = 0, $$pre$i135 = 0, $$pre$i151 = 0, $$pre$i162 = 0, $$pre$i17 = 0, $$pre$i177 = 0, $$pre$i188 = 0, $$pre$i195 = 0, $$pre$i211 = 0, $$pre$i219 = 0, $$pre$i25 = 0, $$pre$i252 = 0, $$pre$i33 = 0;
 var $$pre$i36 = 0, $$pre$i40 = 0, $$pre$i50 = 0, $$pre$i57 = 0, $$pre$i68 = 0, $$pre$i76 = 0, $$pre$i84 = 0, $$pre$i92 = 0, $$pre204 = 0, $$pre205 = 0, $$pre206 = 0, $$pre207 = 0, $$pre208 = 0, $$pre209 = 0, $$pre211 = 0, $$pre212 = 0, $$pre517$pre = 0, $$sroa$4 = 0, $$sroa$4183 = 0, $$sroa$5 = 0;
 var $$sroa$7 = 0, $$sum$i = 0, $$sum$i$i = 0, $$sum1$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0;
 var $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0;
 var $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0;
 var $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0;
 var $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0;
 var $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0;
 var $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0;
 var $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0;
 var $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0;
 var $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0;
 var $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0;
 var $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0;
 var $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0;
 var $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0;
 var $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0;
 var $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0;
 var $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0;
 var $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0;
 var $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0;
 var $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0;
 var $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0;
 var $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0;
 var $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0;
 var $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0;
 var $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0;
 var $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0;
 var $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0;
 var $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0;
 var $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0;
 var $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0;
 var $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0;
 var $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0;
 var $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0;
 var $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0;
 var $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0;
 var $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0;
 var $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0;
 var $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0;
 var $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0;
 var $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0;
 var $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0;
 var $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0, $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0;
 var $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0, $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0;
 var $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0;
 var $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0;
 var $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0, $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0;
 var $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0;
 var $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0;
 var $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0;
 var $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0;
 var $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0, $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0;
 var $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0;
 var $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0, $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0;
 var $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0;
 var $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0;
 var $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0, $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0, $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0;
 var $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0, $2005 = 0, $2006 = 0, $2007 = 0, $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0, $2012 = 0, $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0;
 var $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2024 = 0, $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0, $2030 = 0, $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0;
 var $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0, $2041 = 0, $2042 = 0, $2043 = 0, $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0, $2049 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0;
 var $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0, $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0;
 var $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0, $208 = 0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0;
 var $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0, $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0;
 var $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0;
 var $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0;
 var $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0, $2151 = 0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2157 = 0, $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0;
 var $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0, $217 = 0, $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0, $2174 = 0, $2175 = 0, $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0;
 var $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0, $2186 = 0, $2187 = 0, $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0, $2193 = 0, $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0;
 var $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0, $2203 = 0, $2204 = 0, $2205 = 0, $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0, $2210 = 0, $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0;
 var $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0, $2221 = 0, $2222 = 0, $2223 = 0, $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0;
 var $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0, $224 = 0, $2240 = 0, $2241 = 0, $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0, $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0;
 var $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0, $2258 = 0, $2259 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0;
 var $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2277 = 0, $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0, $2283 = 0, $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0;
 var $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0, $2294 = 0, $2295 = 0, $2296 = 0, $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0, $2301 = 0, $2302 = 0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0;
 var $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0, $2311 = 0, $2312 = 0, $2313 = 0, $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $2318 = 0, $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0;
 var $2326 = 0, $2327 = 0, $2328 = 0, $2329 = 0, $233 = 0, $2330 = 0, $2331 = 0, $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0, $2336 = 0, $2337 = 0, $2338 = 0, $2339 = 0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0;
 var $2344 = 0, $2345 = 0, $2346 = 0, $2347 = 0, $2348 = 0, $2349 = 0, $235 = 0, $2350 = 0, $2351 = 0, $2352 = 0, $2353 = 0, $2354 = 0, $2355 = 0, $2356 = 0, $2357 = 0, $2358 = 0, $2359 = 0, $236 = 0, $2360 = 0, $2361 = 0;
 var $2362 = 0, $2363 = 0, $2364 = 0, $2365 = 0, $2366 = 0, $2367 = 0, $2368 = 0, $2369 = 0, $237 = 0, $2370 = 0, $2371 = 0, $2372 = 0, $2373 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2377 = 0, $2378 = 0, $2379 = 0, $238 = 0;
 var $2380 = 0, $2381 = 0, $2382 = 0, $2383 = 0, $2384 = 0, $2385 = 0, $2386 = 0, $2387 = 0, $2388 = 0, $2389 = 0, $239 = 0, $2390 = 0, $2391 = 0, $2392 = 0, $2393 = 0, $2394 = 0, $2395 = 0, $2396 = 0, $2397 = 0, $2398 = 0;
 var $2399 = 0, $24 = 0, $240 = 0, $2400 = 0, $2401 = 0, $2402 = 0, $2403 = 0, $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0, $2408 = 0, $2409 = 0, $241 = 0, $2410 = 0, $2411 = 0, $2412 = 0, $2413 = 0, $2414 = 0, $2415 = 0;
 var $2416 = 0, $2417 = 0, $2418 = 0, $2419 = 0, $242 = 0, $2420 = 0, $2421 = 0, $2422 = 0, $2423 = 0, $2424 = 0, $2425 = 0, $2426 = 0, $2427 = 0, $2428 = 0, $2429 = 0, $243 = 0, $2430 = 0, $2431 = 0, $2432 = 0, $2433 = 0;
 var $2434 = 0, $2435 = 0, $2436 = 0, $2437 = 0, $2438 = 0, $2439 = 0, $244 = 0, $2440 = 0, $2441 = 0, $2442 = 0, $2443 = 0, $2444 = 0, $2445 = 0, $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0, $2450 = 0, $2451 = 0;
 var $2452 = 0, $2453 = 0, $2454 = 0, $2455 = 0, $2456 = 0, $2457 = 0, $2458 = 0, $2459 = 0, $246 = 0, $2460 = 0, $2461 = 0, $2462 = 0, $2463 = 0, $2464 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $2469 = 0, $247 = 0;
 var $2470 = 0, $2471 = 0, $2472 = 0, $2473 = 0, $2474 = 0, $2475 = 0, $2476 = 0, $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0, $2480 = 0, $2481 = 0, $2482 = 0, $2483 = 0, $2484 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0;
 var $2489 = 0, $249 = 0, $2490 = 0, $2491 = 0, $2492 = 0, $2493 = 0, $2494 = 0, $2495 = 0, $2496 = 0, $2497 = 0, $2498 = 0, $2499 = 0, $25 = 0, $250 = 0, $2500 = 0, $2501 = 0, $2502 = 0, $2503 = 0, $2504 = 0, $2505 = 0;
 var $2506 = 0, $2507 = 0, $2508 = 0, $2509 = 0, $251 = 0, $2510 = 0, $2511 = 0, $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0, $2516 = 0, $2517 = 0, $2518 = 0, $2519 = 0, $252 = 0, $2520 = 0, $2521 = 0, $2522 = 0, $2523 = 0;
 var $2524 = 0, $2525 = 0, $2526 = 0, $2527 = 0, $2528 = 0, $2529 = 0, $253 = 0, $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0, $2534 = 0, $2535 = 0, $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0;
 var $2542 = 0, $2543 = 0, $2544 = 0, $2545 = 0, $2546 = 0, $2547 = 0, $2548 = 0, $2549 = 0, $255 = 0, $2550 = 0, $2551 = 0, $2552 = 0, $2553 = 0, $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0, $2558 = 0, $2559 = 0, $256 = 0;
 var $2560 = 0, $2561 = 0, $2562 = 0, $2563 = 0, $2564 = 0, $2565 = 0, $2566 = 0, $2567 = 0, $2568 = 0, $2569 = 0, $257 = 0, $2570 = 0, $2571 = 0, $2572 = 0, $2573 = 0, $2574 = 0, $2575 = 0, $2576 = 0, $2577 = 0, $2578 = 0;
 var $2579 = 0, $258 = 0, $2580 = 0, $2581 = 0, $2582 = 0, $2583 = 0, $2584 = 0, $2585 = 0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0, $259 = 0, $2590 = 0, $2591 = 0, $2592 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0;
 var $2597 = 0, $2598 = 0, $2599 = 0, $26 = 0, $260 = 0, $2600 = 0, $2601 = 0, $2602 = 0, $2603 = 0, $2604 = 0, $2605 = 0, $2606 = 0, $2607 = 0, $2608 = 0, $2609 = 0, $261 = 0, $2610 = 0, $2611 = 0, $2612 = 0, $2613 = 0;
 var $2614 = 0, $2615 = 0, $2616 = 0, $2617 = 0, $2618 = 0, $2619 = 0, $262 = 0, $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2630 = 0, $2631 = 0;
 var $2632 = 0, $2633 = 0, $2634 = 0, $2635 = 0, $2636 = 0, $2637 = 0, $2638 = 0, $2639 = 0, $264 = 0, $2640 = 0, $2641 = 0, $2642 = 0, $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0;
 var $2650 = 0, $2651 = 0, $2652 = 0, $2653 = 0, $2654 = 0, $2655 = 0, $2656 = 0, $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0, $2661 = 0, $2662 = 0, $2663 = 0, $2664 = 0, $2665 = 0, $2666 = 0, $2667 = 0, $2668 = 0;
 var $2669 = 0, $267 = 0, $2670 = 0, $2671 = 0, $2672 = 0, $2673 = 0, $2674 = 0, $2675 = 0, $2676 = 0, $2677 = 0, $2678 = 0, $2679 = 0, $268 = 0, $2680 = 0, $2681 = 0, $2682 = 0, $2683 = 0, $2684 = 0, $2685 = 0, $2686 = 0;
 var $2687 = 0, $2688 = 0, $2689 = 0, $269 = 0, $2690 = 0, $2691 = 0, $2692 = 0, $2693 = 0, $2694 = 0, $2695 = 0, $2696 = 0, $2697 = 0, $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2700 = 0, $2701 = 0, $2702 = 0, $2703 = 0;
 var $2704 = 0, $2705 = 0, $2706 = 0, $2707 = 0, $2708 = 0, $2709 = 0, $271 = 0, $2710 = 0, $2711 = 0, $2712 = 0, $2713 = 0, $2714 = 0, $2715 = 0, $2716 = 0, $2717 = 0, $2718 = 0, $2719 = 0, $272 = 0, $2720 = 0, $2721 = 0;
 var $2722 = 0, $2723 = 0, $2724 = 0, $2725 = 0, $2726 = 0, $2727 = 0, $2728 = 0, $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0, $2732 = 0, $2733 = 0, $2734 = 0, $2735 = 0, $2736 = 0, $2737 = 0, $2738 = 0, $2739 = 0, $274 = 0;
 var $2740 = 0, $2741 = 0, $2742 = 0, $2743 = 0, $2744 = 0, $2745 = 0, $2746 = 0, $2747 = 0, $2748 = 0, $2749 = 0, $275 = 0, $2750 = 0, $2751 = 0, $2752 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0;
 var $2759 = 0, $276 = 0, $2760 = 0, $2761 = 0, $2762 = 0, $2763 = 0, $2764 = 0, $2765 = 0, $2766 = 0, $2767 = 0, $2768 = 0, $2769 = 0, $277 = 0, $2770 = 0, $2771 = 0, $2772 = 0, $2773 = 0, $2774 = 0, $2775 = 0, $2776 = 0;
 var $2777 = 0, $2778 = 0, $2779 = 0, $278 = 0, $2780 = 0, $2781 = 0, $2782 = 0, $2783 = 0, $2784 = 0, $2785 = 0, $2786 = 0, $2787 = 0, $2788 = 0, $2789 = 0, $279 = 0, $2790 = 0, $2791 = 0, $2792 = 0, $2793 = 0, $2794 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0;
 var $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0;
 var $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0;
 var $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0;
 var $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0;
 var $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0;
 var $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0;
 var $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0;
 var $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0;
 var $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0;
 var $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0;
 var $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0;
 var $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0;
 var $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0;
 var $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0;
 var $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0;
 var $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0;
 var $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0;
 var $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0;
 var $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0;
 var $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0;
 var $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0;
 var $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0;
 var $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0;
 var $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0;
 var $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0;
 var $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0;
 var $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0;
 var $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0;
 var $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0;
 var $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0;
 var $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0;
 var $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0;
 var $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0;
 var $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0;
 var $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $__p$0$lcssa$i$i$i = 0;
 var $__p$0$ph$i$i$i = 0, $__p$01$i$i$i = 0, $__v$i$i$i = 0, $args = 0, $brmerge = 0, $brmerge347 = 0, $brmerge348 = 0, $cv = 0, $exitcond = 0, $k$0$i352 = 0, $k$0439 = 0, $k11$0403 = 0, $k15$0415 = 0, $k2$0$i354 = 0, $k20$0428 = 0, $k5$0377 = 0, $k8$0389 = 0, $l$03$i = 0, $l$03$i110 = 0, $l$03$i119 = 0;
 var $l$03$i126 = 0, $l$03$i134 = 0, $l$03$i147 = 0, $l$03$i35 = 0, $l$03$i51 = 0, $num1$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i$i$i$i$i$i = 0, $or$cond$i$i$i$i$i$i284 = 0, $or$cond$i$i$i$i$i19$i = 0, $or$cond$i$i$i$i$i35$i = 0, $or$cond$i$i$i$i$i39$i = 0, $or$cond$i$i$i$i$i55$i = 0, $or$cond10$i = 0, $or$cond344 = 0, $or$cond345 = 0, $or$cond346 = 0, $or$cond522 = 0;
 var $or$cond523 = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $phitmp = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i$i$i$i$i = 0, $phitmp$i$i$i$i$i$i$i279 = 0, $phitmp$i$i$i$i$i$i14$i = 0, $phitmp$i$i$i$i$i$i30$i = 0, $phitmp$i$i$i$i$i$i34$i = 0, $phitmp$i$i$i$i$i$i50$i = 0, $phitmp$i2$i$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i$i282 = 0, $phitmp$i2$i$i$i$i$i17$i = 0, $phitmp$i2$i$i$i$i$i33$i = 0, $phitmp$i2$i$i$i$i$i37$i = 0, $phitmp$i2$i$i$i$i$i53$i = 0, $phitmp214 = 0, $phitmp215 = 0;
 var $phitmp216 = 0, $phitmp217 = 0, $phitmp218 = 0, $phitmp219 = 0, $phitmp220 = 0, $phitmp221 = 0, $phitmp222 = 0, $phitmp223 = 0, $phitmp224 = 0, $phitmp225 = 0, $phitmp226 = 0, $proto = 0, $r$04$i = 0, $r$04$i109 = 0, $r$04$i118 = 0, $r$04$i125 = 0, $r$04$i133 = 0, $r$04$i146 = 0, $r$04$i34 = 0, $r$04$i50 = 0;
 var $ref_qual$0$i$ph$ph = 0, $ref_qual$0$i$ph451 = 0, $scevgep4$i$i$i = 0, $t$0$i = 0, $t$1$i$be = 0, $t$1$i$ph$ph = 0, $t$1$i$ph450 = 0, $t$1$i366 = 0, $t12$0$i = 0, $template_args = 0, $type = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 784|0;
 $__v$i$i$i = sp + 352|0;
 $0 = sp + 288|0;
 $1 = sp + 32|0;
 $2 = sp;
 $3 = sp + 624|0;
 $$sroa$7 = sp + 696|0;
 $4 = sp + 64|0;
 $5 = sp + 88|0;
 $num1$i = sp + 100|0;
 $6 = sp + 112|0;
 $7 = sp + 124|0;
 $8 = sp + 136|0;
 $cv = sp + 148|0;
 $9 = sp + 152|0;
 $10 = sp + 168|0;
 $11 = sp + 176|0;
 $12 = sp + 192|0;
 $13 = sp + 200|0;
 $14 = sp + 216|0;
 $15 = sp + 224|0;
 $16 = sp + 240|0;
 $17 = sp + 248|0;
 $18 = sp + 264|0;
 $19 = sp + 608|0;
 $20 = sp + 648|0;
 $21 = sp + 680|0;
 $22 = sp + 720|0;
 $args = sp + 732|0;
 $23 = sp + 336|0;
 $24 = sp + 744|0;
 $type = sp + 376|0;
 $25 = sp + 388|0;
 $26 = sp + 400|0;
 $$sroa$4183 = sp + 748|0;
 $27 = sp + 428|0;
 $28 = sp + 440|0;
 $proto = sp + 452|0;
 $29 = sp + 464|0;
 $$sroa$4 = sp + 755|0;
 $30 = sp + 504|0;
 $31 = sp + 516|0;
 $32 = sp + 528|0;
 $33 = sp + 544|0;
 $$sroa$5 = sp + 762|0;
 $34 = sp + 572|0;
 $35 = sp + 48|0;
 $36 = sp + 12|0;
 $37 = sp + 16|0;
 $38 = sp + 584|0;
 $template_args = sp + 268|0;
 $39 = sp + 592|0;
 $40 = sp + 280|0;
 $41 = sp + 664|0;
 $42 = sp + 312|0;
 $43 = sp + 320|0;
 $44 = sp + 568|0;
 $45 = sp + 488|0;
 $46 = sp + 424|0;
 $47 = ($first|0)==($last|0);
 if ($47) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $48 = HEAP8[$first>>0]|0;
 $49 = $48 << 24 >> 24;
 if ((($49|0) == 75) | (($49|0) == 86) | (($49|0) == 114)) {
  HEAP32[$cv>>2] = 0;
  $50 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($first,$last,$cv)|0);
  $51 = ($50|0)==($first|0);
  if ($51) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $52 = HEAP8[$50>>0]|0;
  $53 = (($db) + 4|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = HEAP32[$db>>2]|0;
  $56 = $54;
  $57 = $55;
  $58 = (($56) - ($57))|0;
  $59 = (($58|0) / 24)&-1;
  $60 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($50,$last,$db)|0);
  $61 = HEAP32[$53>>2]|0;
  $62 = HEAP32[$db>>2]|0;
  $63 = $61;
  $64 = $62;
  $65 = (($63) - ($64))|0;
  $66 = (($65|0) / 24)&-1;
  $67 = ($60|0)==($50|0);
  if ($67) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $68 = ($52<<24>>24)==(70);
  $69 = (($db) + 20|0);
  $70 = HEAP32[$69>>2]|0;
  if ($68) {
   $71 = (($70) + -16|0);
   $73 = $70;
   while(1) {
    $72 = (($73) + -16|0);
    HEAP32[$69>>2] = $72;
    __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($72);
    $74 = HEAP32[$69>>2]|0;
    $75 = ($74|0)==($71|0);
    if ($75) {
     $82 = $71;
     break;
    } else {
     $73 = $74;
    }
   }
  } else {
   $82 = $70;
  }
  $76 = (($db) + 16|0);
  $77 = (($db) + 12|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = (($db) + 24|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = ($82>>>0)<($80>>>0);
  if ($81) {
   $83 = ($82|0)==(0|0);
   if ($83) {
    $88 = 0;
   } else {
    HEAP32[$82>>2] = 0;
    $84 = (($82) + 4|0);
    HEAP32[$84>>2] = 0;
    $85 = (($82) + 8|0);
    HEAP32[$85>>2] = 0;
    $86 = (($82) + 12|0);
    HEAP32[$86>>2] = $78;
    $$pre$i50 = HEAP32[$69>>2]|0;
    $88 = $$pre$i50;
   }
   $87 = (($88) + 16|0);
   HEAP32[$69>>2] = $87;
  } else {
   $89 = (($db) + 28|0);
   $90 = HEAP32[$76>>2]|0;
   $91 = $82;
   $92 = $90;
   $93 = (($91) - ($92))|0;
   $94 = $93 >> 4;
   $95 = (($94) + 1)|0;
   $96 = ($95|0)<(0);
   if ($96) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $97 = $80;
   $98 = (($97) - ($92))|0;
   $99 = $98 >> 4;
   $100 = ($99>>>0)<(1073741823);
   if ($100) {
    $101 = $98 >> 3;
    $102 = ($101>>>0)<($95>>>0);
    $103 = $102 ? $95 : $101;
    $$0$i$i$i52 = $103;
   } else {
    $$0$i$i$i52 = 2147483647;
   }
   __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i52,$94,$89);
   $104 = (($__v$i$i$i) + 8|0);
   $105 = HEAP32[$104>>2]|0;
   $106 = ($105|0)==(0|0);
   if (!($106)) {
    HEAP32[$105>>2] = 0;
    $107 = (($105) + 4|0);
    HEAP32[$107>>2] = 0;
    $108 = (($105) + 8|0);
    HEAP32[$108>>2] = 0;
    $109 = (($105) + 12|0);
    HEAP32[$109>>2] = $78;
   }
   $110 = (($105) + 16|0);
   HEAP32[$104>>2] = $110;
   __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($76,$__v$i$i$i);
   __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
  }
  $111 = ($59>>>0)<($66>>>0);
  if (!($111)) {
   $$0 = $60;
   STACKTOP = sp;return ($$0|0);
  }
  $112 = HEAP32[$cv>>2]|0;
  $113 = $112 & 1;
  $114 = ($113|0)==(0);
  $115 = $112 & 2;
  $116 = ($115|0)==(0);
  $117 = $112 & 4;
  $118 = ($117|0)==(0);
  $119 = (($__v$i$i$i) + 8|0);
  $k$0439 = $59;
  while(1) {
   if ($68) {
    $120 = HEAP32[$db>>2]|0;
    $121 = ((($120) + (($k$0439*24)|0)|0) + 12|0);
    $122 = HEAP8[$121>>0]|0;
    $123 = $122 & 1;
    $124 = ($123<<24>>24)==(0);
    if ($124) {
     $129 = $122&255;
     $130 = $129 >>> 1;
     $131 = (($121) + 1|0);
     $$in = $130;$134 = $131;
    } else {
     $125 = ((($120) + (($k$0439*24)|0)|0) + 16|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ((($120) + (($k$0439*24)|0)|0) + 20|0);
     $128 = HEAP32[$127>>2]|0;
     $$in = $126;$134 = $128;
    }
    $132 = (($$in) + -2)|0;
    $133 = (($134) + ($132)|0);
    $135 = HEAP8[$133>>0]|0;
    $136 = ($135<<24>>24)==(38);
    if ($136) {
     $137 = (($$in) + -3)|0;
     $p$0 = $137;
    } else {
     if ($124) {
      $142 = (($121) + 1|0);
      $143 = $122&255;
      $144 = $143 >>> 1;
      $145 = $144;$147 = $142;
     } else {
      $138 = ((($120) + (($k$0439*24)|0)|0) + 20|0);
      $139 = HEAP32[$138>>2]|0;
      $140 = ((($120) + (($k$0439*24)|0)|0) + 16|0);
      $141 = HEAP32[$140>>2]|0;
      $145 = $141;$147 = $139;
     }
     $$sum$i = (($145) + -1)|0;
     $146 = (($147) + ($$sum$i)|0);
     $148 = HEAP8[$146>>0]|0;
     $149 = ($148<<24>>24)==(38);
     $$ = $149 ? $132 : $$in;
     $p$0 = $$;
    }
    if ($114) {
     $p$1 = $p$0;
    } else {
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($121,$p$0,48648,6)|0);
     $150 = (($p$0) + 6)|0;
     $p$1 = $150;
    }
    if ($116) {
     $p$2 = $p$1;
    } else {
     $151 = HEAP32[$db>>2]|0;
     $152 = ((($151) + (($k$0439*24)|0)|0) + 12|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($152,$p$1,48656,9)|0);
     $153 = (($p$1) + 9)|0;
     $p$2 = $153;
    }
    if (!($118)) {
     $154 = HEAP32[$db>>2]|0;
     $155 = ((($154) + (($k$0439*24)|0)|0) + 12|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($155,$p$2,48672,9)|0);
    }
   } else {
    if (!($114)) {
     $156 = HEAP32[$db>>2]|0;
     $157 = (($156) + (($k$0439*24)|0)|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($157,48648,6)|0);
    }
    if (!($116)) {
     $158 = HEAP32[$db>>2]|0;
     $159 = (($158) + (($k$0439*24)|0)|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($159,48656,9)|0);
    }
    if (!($118)) {
     $160 = HEAP32[$db>>2]|0;
     $161 = (($160) + (($k$0439*24)|0)|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($161,48672,9)|0);
    }
   }
   $162 = HEAP32[$69>>2]|0;
   $163 = (($162) + -16|0);
   $164 = HEAP32[$db>>2]|0;
   $165 = (($164) + (($k$0439*24)|0)|0);
   $166 = (($162) + -12|0);
   $167 = HEAP32[$166>>2]|0;
   $168 = (($162) + -8|0);
   $169 = HEAP32[$168>>2]|0;
   $170 = ($167|0)==($169|0);
   if ($170) {
    $176 = (($162) + -4|0);
    $177 = HEAP32[$163>>2]|0;
    $178 = $167;
    $179 = $177;
    $180 = (($178) - ($179))|0;
    $181 = (($180|0) / 24)&-1;
    $182 = (($181) + 1)|0;
    $183 = ($182|0)<(0);
    if ($183) {
     label = 48;
     break;
    }
    $184 = ($181>>>0)<(1073741823);
    if ($184) {
     $185 = $181 << 1;
     $186 = ($185>>>0)<($182>>>0);
     $187 = $186 ? $182 : $185;
     $$0$i$i$i60 = $187;
    } else {
     $$0$i$i$i60 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i,$$0$i$i$i60,$181,$176);
    $188 = HEAP32[$119>>2]|0;
    $189 = ($188|0)==(0|0);
    if (!($189)) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($188,$165);
     $190 = (($188) + 12|0);
     $191 = ((($164) + (($k$0439*24)|0)|0) + 12|0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($190,$191);
    }
    $192 = (($188) + 24|0);
    HEAP32[$119>>2] = $192;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($163,$__v$i$i$i);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
   } else {
    $171 = ($167|0)==(0|0);
    if ($171) {
     $175 = 0;
    } else {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($167,$165);
     $172 = (($167) + 12|0);
     $173 = ((($164) + (($k$0439*24)|0)|0) + 12|0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($172,$173);
     $$pre$i57 = HEAP32[$166>>2]|0;
     $175 = $$pre$i57;
    }
    $174 = (($175) + 24|0);
    HEAP32[$166>>2] = $174;
   }
   $193 = (($k$0439) + 1)|0;
   $194 = ($193>>>0)<($66>>>0);
   if ($194) {
    $k$0439 = $193;
   } else {
    $$0 = $60;
    label = 860;
    break;
   }
  }
  if ((label|0) == 48) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
   // unreachable;
  }
  else if ((label|0) == 860) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 $195 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 $196 = ($195|0)==($first|0);
 if (!($196)) {
  $$0 = $195;
  STACKTOP = sp;return ($$0|0);
 }
 $197 = HEAP8[$first>>0]|0;
 $198 = $197 << 24 >> 24;
 L89: do {
  switch ($198|0) {
  case 83:  {
   $2219 = (($first) + 1|0);
   $2220 = ($2219|0)==($last|0);
   if (!($2220)) {
    $2221 = HEAP8[$2219>>0]|0;
    $2222 = ($2221<<24>>24)==(116);
    if ($2222) {
     $2223 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $2224 = ($2223|0)==($first|0);
     if ($2224) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $2225 = HEAP32[$db>>2]|0;
     $2226 = (($db) + 4|0);
     $2227 = HEAP32[$2226>>2]|0;
     $2228 = ($2225|0)==($2227|0);
     if ($2228) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $2229 = (($db) + 16|0);
     $2230 = (($2227) + -24|0);
     $2231 = (($db) + 12|0);
     $2232 = HEAP32[$2231>>2]|0;
     HEAP32[$38>>2] = $2232;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($37,$2230,$38);
     $2233 = (($db) + 20|0);
     $2234 = HEAP32[$2233>>2]|0;
     $2235 = (($db) + 24|0);
     $2236 = HEAP32[$2235>>2]|0;
     $2237 = ($2234>>>0)<($2236>>>0);
     if ($2237) {
      $2238 = ($2234|0)==(0|0);
      if ($2238) {
       $2250 = 0;
      } else {
       $2239 = (($2234) + 4|0);
       $2240 = (($37) + 12|0);
       $2241 = HEAP32[$2240>>2]|0;
       $2242 = (($2234) + 8|0);
       $2243 = (($2234) + 12|0);
       HEAP32[$2243>>2] = $2241;
       $2244 = HEAP32[$37>>2]|0;
       HEAP32[$2234>>2] = $2244;
       $2245 = (($37) + 4|0);
       $2246 = HEAP32[$2245>>2]|0;
       HEAP32[$2239>>2] = $2246;
       $2247 = (($37) + 8|0);
       $2248 = HEAP32[$2247>>2]|0;
       HEAP32[$2242>>2] = $2248;
       HEAP32[$2247>>2] = 0;
       HEAP32[$2245>>2] = 0;
       HEAP32[$37>>2] = 0;
       $$pre$i68 = HEAP32[$2233>>2]|0;
       $2250 = $$pre$i68;
      }
      $2249 = (($2250) + 16|0);
      HEAP32[$2233>>2] = $2249;
     } else {
      $2251 = (($db) + 28|0);
      $2252 = HEAP32[$2229>>2]|0;
      $2253 = $2234;
      $2254 = $2252;
      $2255 = (($2253) - ($2254))|0;
      $2256 = $2255 >> 4;
      $2257 = (($2256) + 1)|0;
      $2258 = ($2257|0)<(0);
      if ($2258) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
       // unreachable;
      }
      $2259 = $2236;
      $2260 = (($2259) - ($2254))|0;
      $2261 = $2260 >> 4;
      $2262 = ($2261>>>0)<(1073741823);
      if ($2262) {
       $2263 = $2260 >> 3;
       $2264 = ($2263>>>0)<($2257>>>0);
       $2265 = $2264 ? $2257 : $2263;
       $$0$i$i$i70 = $2265;
      } else {
       $$0$i$i$i70 = 2147483647;
      }
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i70,$2256,$2251);
      $2266 = (($__v$i$i$i) + 8|0);
      $2267 = HEAP32[$2266>>2]|0;
      $2268 = ($2267|0)==(0|0);
      if (!($2268)) {
       $2269 = (($2267) + 4|0);
       $2270 = (($37) + 12|0);
       $2271 = HEAP32[$2270>>2]|0;
       $2272 = (($2267) + 8|0);
       $2273 = (($2267) + 12|0);
       HEAP32[$2273>>2] = $2271;
       $2274 = HEAP32[$37>>2]|0;
       HEAP32[$2267>>2] = $2274;
       $2275 = (($37) + 4|0);
       $2276 = HEAP32[$2275>>2]|0;
       HEAP32[$2269>>2] = $2276;
       $2277 = (($37) + 8|0);
       $2278 = HEAP32[$2277>>2]|0;
       HEAP32[$2272>>2] = $2278;
       HEAP32[$2277>>2] = 0;
       HEAP32[$2275>>2] = 0;
       HEAP32[$37>>2] = 0;
      }
      $2279 = (($2267) + 16|0);
      HEAP32[$2266>>2] = $2279;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2229,$__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($37);
     $$0 = $2223;
     STACKTOP = sp;return ($$0|0);
    }
   }
   $2280 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
   $2281 = ($2280|0)==($first|0);
   if ($2281) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $2282 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($2280,$last,$db)|0);
   $2283 = ($2282|0)==($2280|0);
   if ($2283) {
    $$0 = $2280;
    STACKTOP = sp;return ($$0|0);
   }
   $2284 = (($db) + 4|0);
   $2285 = HEAP32[$2284>>2]|0;
   $2286 = HEAP32[$db>>2]|0;
   $2287 = $2285;
   $2288 = $2286;
   $2289 = (($2287) - ($2288))|0;
   $2290 = (($2289|0) / 24)&-1;
   $2291 = ($2290>>>0)<(2);
   if ($2291) {
    $$0 = $2280;
    STACKTOP = sp;return ($$0|0);
   }
   $2292 = (($2285) + -24|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($template_args,$2292);
   $2293 = HEAP32[$2284>>2]|0;
   $2294 = (($2293) + -24|0);
   $2296 = $2293;
   while(1) {
    $2295 = (($2296) + -24|0);
    HEAP32[$2284>>2] = $2295;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2295);
    $2297 = HEAP32[$2284>>2]|0;
    $2298 = ($2297|0)==($2294|0);
    if ($2298) {
     break;
    } else {
     $2296 = $2297;
    }
   }
   $2299 = (($2293) + -48|0);
   $2300 = HEAP8[$template_args>>0]|0;
   $2301 = $2300 & 1;
   $2302 = ($2301<<24>>24)==(0);
   if ($2302) {
    $2307 = (($template_args) + 1|0);
    $2308 = $2300&255;
    $2309 = $2308 >>> 1;
    $2310 = $2307;$2311 = $2309;
   } else {
    $2303 = (($template_args) + 8|0);
    $2304 = HEAP32[$2303>>2]|0;
    $2305 = (($template_args) + 4|0);
    $2306 = HEAP32[$2305>>2]|0;
    $2310 = $2304;$2311 = $2306;
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($2299,$2310,$2311)|0);
   $2312 = HEAP32[$2284>>2]|0;
   $2313 = (($2312) + -24|0);
   $2314 = (($db) + 12|0);
   $2315 = HEAP32[$2314>>2]|0;
   HEAP32[$40>>2] = $2315;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($39,$2313,$40);
   $2316 = (($db) + 16|0);
   $2317 = (($db) + 20|0);
   $2318 = HEAP32[$2317>>2]|0;
   $2319 = (($db) + 24|0);
   $2320 = HEAP32[$2319>>2]|0;
   $2321 = ($2318>>>0)<($2320>>>0);
   if ($2321) {
    $2322 = ($2318|0)==(0|0);
    if ($2322) {
     $2334 = 0;
    } else {
     $2323 = (($2318) + 4|0);
     $2324 = (($39) + 12|0);
     $2325 = HEAP32[$2324>>2]|0;
     $2326 = (($2318) + 8|0);
     $2327 = (($2318) + 12|0);
     HEAP32[$2327>>2] = $2325;
     $2328 = HEAP32[$39>>2]|0;
     HEAP32[$2318>>2] = $2328;
     $2329 = (($39) + 4|0);
     $2330 = HEAP32[$2329>>2]|0;
     HEAP32[$2323>>2] = $2330;
     $2331 = (($39) + 8|0);
     $2332 = HEAP32[$2331>>2]|0;
     HEAP32[$2326>>2] = $2332;
     HEAP32[$2331>>2] = 0;
     HEAP32[$2329>>2] = 0;
     HEAP32[$39>>2] = 0;
     $$pre$i40 = HEAP32[$2317>>2]|0;
     $2334 = $$pre$i40;
    }
    $2333 = (($2334) + 16|0);
    HEAP32[$2317>>2] = $2333;
   } else {
    $2335 = (($db) + 28|0);
    $2336 = HEAP32[$2316>>2]|0;
    $2337 = $2318;
    $2338 = $2336;
    $2339 = (($2337) - ($2338))|0;
    $2340 = $2339 >> 4;
    $2341 = (($2340) + 1)|0;
    $2342 = ($2341|0)<(0);
    if ($2342) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $2343 = $2320;
    $2344 = (($2343) - ($2338))|0;
    $2345 = $2344 >> 4;
    $2346 = ($2345>>>0)<(1073741823);
    if ($2346) {
     $2347 = $2344 >> 3;
     $2348 = ($2347>>>0)<($2341>>>0);
     $2349 = $2348 ? $2341 : $2347;
     $$0$i$i$i42 = $2349;
    } else {
     $$0$i$i$i42 = 2147483647;
    }
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i42,$2340,$2335);
    $2350 = (($__v$i$i$i) + 8|0);
    $2351 = HEAP32[$2350>>2]|0;
    $2352 = ($2351|0)==(0|0);
    if (!($2352)) {
     $2353 = (($2351) + 4|0);
     $2354 = (($39) + 12|0);
     $2355 = HEAP32[$2354>>2]|0;
     $2356 = (($2351) + 8|0);
     $2357 = (($2351) + 12|0);
     HEAP32[$2357>>2] = $2355;
     $2358 = HEAP32[$39>>2]|0;
     HEAP32[$2351>>2] = $2358;
     $2359 = (($39) + 4|0);
     $2360 = HEAP32[$2359>>2]|0;
     HEAP32[$2353>>2] = $2360;
     $2361 = (($39) + 8|0);
     $2362 = HEAP32[$2361>>2]|0;
     HEAP32[$2356>>2] = $2362;
     HEAP32[$2361>>2] = 0;
     HEAP32[$2359>>2] = 0;
     HEAP32[$39>>2] = 0;
    }
    $2363 = (($2351) + 16|0);
    HEAP32[$2350>>2] = $2363;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2316,$__v$i$i$i);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
   }
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($39);
   if ($2302) {
    $$0 = $2282;
    STACKTOP = sp;return ($$0|0);
   }
   $2364 = (($template_args) + 8|0);
   $2365 = HEAP32[$2364>>2]|0;
   _free($2365);
   $$0 = $2282;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 68:  {
   $2366 = (($first) + 1|0);
   $2367 = ($2366|0)==($last|0);
   if (!($2367)) {
    $2368 = HEAP8[$2366>>0]|0;
    $2369 = $2368 << 24 >> 24;
    if ((($2369|0) == 112)) {
     $2370 = (($db) + 4|0);
     $2371 = HEAP32[$2370>>2]|0;
     $2372 = HEAP32[$db>>2]|0;
     $2373 = $2371;
     $2374 = $2372;
     $2375 = (($2373) - ($2374))|0;
     $2376 = (($2375|0) / 24)&-1;
     $2377 = (($first) + 2|0);
     $2378 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($2377,$last,$db)|0);
     $2379 = HEAP32[$2370>>2]|0;
     $2380 = HEAP32[$db>>2]|0;
     $2381 = $2379;
     $2382 = $2380;
     $2383 = (($2381) - ($2382))|0;
     $2384 = (($2383|0) / 24)&-1;
     $2385 = ($2378|0)==($2377|0);
     if ($2385) {
      break L89;
     }
     $2386 = (($db) + 16|0);
     $2387 = (($db) + 12|0);
     $2388 = HEAP32[$2387>>2]|0;
     $2389 = (($db) + 20|0);
     $2390 = HEAP32[$2389>>2]|0;
     $2391 = (($db) + 24|0);
     $2392 = HEAP32[$2391>>2]|0;
     $2393 = ($2390>>>0)<($2392>>>0);
     if ($2393) {
      $2394 = ($2390|0)==(0|0);
      if ($2394) {
       $2399 = 0;
      } else {
       HEAP32[$2390>>2] = 0;
       $2395 = (($2390) + 4|0);
       HEAP32[$2395>>2] = 0;
       $2396 = (($2390) + 8|0);
       HEAP32[$2396>>2] = 0;
       $2397 = (($2390) + 12|0);
       HEAP32[$2397>>2] = $2388;
       $$pre$i36 = HEAP32[$2389>>2]|0;
       $2399 = $$pre$i36;
      }
      $2398 = (($2399) + 16|0);
      HEAP32[$2389>>2] = $2398;
     } else {
      $2400 = (($db) + 28|0);
      $2401 = HEAP32[$2386>>2]|0;
      $2402 = $2390;
      $2403 = $2401;
      $2404 = (($2402) - ($2403))|0;
      $2405 = $2404 >> 4;
      $2406 = (($2405) + 1)|0;
      $2407 = ($2406|0)<(0);
      if ($2407) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
       // unreachable;
      }
      $2408 = $2392;
      $2409 = (($2408) - ($2403))|0;
      $2410 = $2409 >> 4;
      $2411 = ($2410>>>0)<(1073741823);
      if ($2411) {
       $2412 = $2409 >> 3;
       $2413 = ($2412>>>0)<($2406>>>0);
       $2414 = $2413 ? $2406 : $2412;
       $$0$i$i$i37 = $2414;
      } else {
       $$0$i$i$i37 = 2147483647;
      }
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i37,$2405,$2400);
      $2415 = (($__v$i$i$i) + 8|0);
      $2416 = HEAP32[$2415>>2]|0;
      $2417 = ($2416|0)==(0|0);
      if (!($2417)) {
       HEAP32[$2416>>2] = 0;
       $2418 = (($2416) + 4|0);
       HEAP32[$2418>>2] = 0;
       $2419 = (($2416) + 8|0);
       HEAP32[$2419>>2] = 0;
       $2420 = (($2416) + 12|0);
       HEAP32[$2420>>2] = $2388;
      }
      $2421 = (($2416) + 16|0);
      HEAP32[$2415>>2] = $2421;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2386,$__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     $2422 = ($2376>>>0)<($2384>>>0);
     if (!($2422)) {
      $$0 = $2378;
      STACKTOP = sp;return ($$0|0);
     }
     $2423 = (($__v$i$i$i) + 8|0);
     $k20$0428 = $2376;
     while(1) {
      $2424 = HEAP32[$2389>>2]|0;
      $2425 = (($2424) + -16|0);
      $2426 = HEAP32[$db>>2]|0;
      $2427 = (($2426) + (($k20$0428*24)|0)|0);
      $2428 = (($2424) + -12|0);
      $2429 = HEAP32[$2428>>2]|0;
      $2430 = (($2424) + -8|0);
      $2431 = HEAP32[$2430>>2]|0;
      $2432 = ($2429|0)==($2431|0);
      if ($2432) {
       $2438 = (($2424) + -4|0);
       $2439 = HEAP32[$2425>>2]|0;
       $2440 = $2429;
       $2441 = $2439;
       $2442 = (($2440) - ($2441))|0;
       $2443 = (($2442|0) / 24)&-1;
       $2444 = (($2443) + 1)|0;
       $2445 = ($2444|0)<(0);
       if ($2445) {
        label = 757;
        break;
       }
       $2446 = ($2443>>>0)<(1073741823);
       if ($2446) {
        $2447 = $2443 << 1;
        $2448 = ($2447>>>0)<($2444>>>0);
        $2449 = $2448 ? $2444 : $2447;
        $$0$i$i$i34 = $2449;
       } else {
        $$0$i$i$i34 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i,$$0$i$i$i34,$2443,$2438);
       $2450 = HEAP32[$2423>>2]|0;
       $2451 = ($2450|0)==(0|0);
       if (!($2451)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($2450,$2427);
        $2452 = (($2450) + 12|0);
        $2453 = ((($2426) + (($k20$0428*24)|0)|0) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($2452,$2453);
       }
       $2454 = (($2450) + 24|0);
       HEAP32[$2423>>2] = $2454;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($2425,$__v$i$i$i);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
      } else {
       $2433 = ($2429|0)==(0|0);
       if ($2433) {
        $2437 = 0;
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($2429,$2427);
        $2434 = (($2429) + 12|0);
        $2435 = ((($2426) + (($k20$0428*24)|0)|0) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($2434,$2435);
        $$pre$i33 = HEAP32[$2428>>2]|0;
        $2437 = $$pre$i33;
       }
       $2436 = (($2437) + 24|0);
       HEAP32[$2428>>2] = $2436;
      }
      $2455 = (($k20$0428) + 1)|0;
      $2456 = ($2455>>>0)<($2384>>>0);
      if ($2456) {
       $k20$0428 = $2455;
      } else {
       $$0 = $2378;
       label = 860;
       break;
      }
     }
     if ((label|0) == 757) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     else if ((label|0) == 860) {
      STACKTOP = sp;return ($$0|0);
     }
    } else if ((($2369|0) == 84) | (($2369|0) == 116)) {
     $2457 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $2458 = ($2457|0)==($first|0);
     if ($2458) {
      break L89;
     }
     $2459 = HEAP32[$db>>2]|0;
     $2460 = (($db) + 4|0);
     $2461 = HEAP32[$2460>>2]|0;
     $2462 = ($2459|0)==($2461|0);
     if ($2462) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $2463 = (($db) + 16|0);
     $2464 = (($2461) + -24|0);
     $2465 = (($db) + 12|0);
     $2466 = HEAP32[$2465>>2]|0;
     HEAP32[$42>>2] = $2466;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($41,$2464,$42);
     $2467 = (($db) + 20|0);
     $2468 = HEAP32[$2467>>2]|0;
     $2469 = (($db) + 24|0);
     $2470 = HEAP32[$2469>>2]|0;
     $2471 = ($2468>>>0)<($2470>>>0);
     if ($2471) {
      $2472 = ($2468|0)==(0|0);
      if ($2472) {
       $2484 = 0;
      } else {
       $2473 = (($2468) + 4|0);
       $2474 = (($41) + 12|0);
       $2475 = HEAP32[$2474>>2]|0;
       $2476 = (($2468) + 8|0);
       $2477 = (($2468) + 12|0);
       HEAP32[$2477>>2] = $2475;
       $2478 = HEAP32[$41>>2]|0;
       HEAP32[$2468>>2] = $2478;
       $2479 = (($41) + 4|0);
       $2480 = HEAP32[$2479>>2]|0;
       HEAP32[$2473>>2] = $2480;
       $2481 = (($41) + 8|0);
       $2482 = HEAP32[$2481>>2]|0;
       HEAP32[$2476>>2] = $2482;
       HEAP32[$2481>>2] = 0;
       HEAP32[$2479>>2] = 0;
       HEAP32[$41>>2] = 0;
       $$pre$i25 = HEAP32[$2467>>2]|0;
       $2484 = $$pre$i25;
      }
      $2483 = (($2484) + 16|0);
      HEAP32[$2467>>2] = $2483;
     } else {
      $2485 = (($db) + 28|0);
      $2486 = HEAP32[$2463>>2]|0;
      $2487 = $2468;
      $2488 = $2486;
      $2489 = (($2487) - ($2488))|0;
      $2490 = $2489 >> 4;
      $2491 = (($2490) + 1)|0;
      $2492 = ($2491|0)<(0);
      if ($2492) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
       // unreachable;
      }
      $2493 = $2470;
      $2494 = (($2493) - ($2488))|0;
      $2495 = $2494 >> 4;
      $2496 = ($2495>>>0)<(1073741823);
      if ($2496) {
       $2497 = $2494 >> 3;
       $2498 = ($2497>>>0)<($2491>>>0);
       $2499 = $2498 ? $2491 : $2497;
       $$0$i$i$i27 = $2499;
      } else {
       $$0$i$i$i27 = 2147483647;
      }
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i27,$2490,$2485);
      $2500 = (($__v$i$i$i) + 8|0);
      $2501 = HEAP32[$2500>>2]|0;
      $2502 = ($2501|0)==(0|0);
      if (!($2502)) {
       $2503 = (($2501) + 4|0);
       $2504 = (($41) + 12|0);
       $2505 = HEAP32[$2504>>2]|0;
       $2506 = (($2501) + 8|0);
       $2507 = (($2501) + 12|0);
       HEAP32[$2507>>2] = $2505;
       $2508 = HEAP32[$41>>2]|0;
       HEAP32[$2501>>2] = $2508;
       $2509 = (($41) + 4|0);
       $2510 = HEAP32[$2509>>2]|0;
       HEAP32[$2503>>2] = $2510;
       $2511 = (($41) + 8|0);
       $2512 = HEAP32[$2511>>2]|0;
       HEAP32[$2506>>2] = $2512;
       HEAP32[$2511>>2] = 0;
       HEAP32[$2509>>2] = 0;
       HEAP32[$41>>2] = 0;
      }
      $2513 = (($2501) + 16|0);
      HEAP32[$2500>>2] = $2513;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2463,$__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($41);
     $$0 = $2457;
     STACKTOP = sp;return ($$0|0);
    } else if ((($2369|0) == 118)) {
     $2514 = $last;
     $2515 = $first;
     $2516 = (($2514) - ($2515))|0;
     $2517 = ($2516|0)>(3);
     $2518 = ($197<<24>>24)==(68);
     $or$cond522 = $2517 & $2518;
     $2519 = ($2368<<24>>24)==(118);
     $or$cond523 = $or$cond522 & $2519;
     do {
      if ($or$cond523) {
       $2520 = (($first) + 2|0);
       $2521 = HEAP8[$2520>>0]|0;
       $$off = (($2521) + -49)<<24>>24;
       $2522 = ($$off&255)<(9);
       if (!($2522)) {
        ;HEAP32[$num1$i+0>>2]=0|0;HEAP32[$num1$i+4>>2]=0|0;HEAP32[$num1$i+8>>2]=0|0;
        $2613 = ($2521<<24>>24)==(95);
        if ($2613) {
         $t12$0$i = $2520;
        } else {
         $2614 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($2520,$last,$db)|0);
         $2615 = ($2614|0)==($2520|0);
         if ($2615) {
          $t12$0$i = $2520;
         } else {
          $2616 = HEAP32[$db>>2]|0;
          $2617 = (($db) + 4|0);
          $2618 = HEAP32[$2617>>2]|0;
          $2619 = ($2616|0)==($2618|0);
          if ($2619) {
           $$1$i328 = $first;
           break;
          }
          $2620 = (($2618) + -24|0);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6,$2620);
          ;HEAP32[$num1$i+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$num1$i+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$num1$i+8>>2]=HEAP32[$6+8>>2]|0;
          ;HEAP32[$6+0>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;
          $$pre212 = HEAP32[$2617>>2]|0;
          $2621 = (($$pre212) + -24|0);
          $2623 = $$pre212;
          while(1) {
           $2622 = (($2623) + -24|0);
           HEAP32[$2617>>2] = $2622;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2622);
           $2624 = HEAP32[$2617>>2]|0;
           $2625 = ($2624|0)==($2621|0);
           if ($2625) {
            $t12$0$i = $2614;
            break;
           } else {
            $2623 = $2624;
           }
          }
         }
        }
        $2626 = ($t12$0$i|0)==($last|0);
        if ($2626) {
         $$13$i324$ph = $first;
        } else {
         $2627 = HEAP8[$t12$0$i>>0]|0;
         $2628 = ($2627<<24>>24)==(95);
         if ($2628) {
          $2629 = (($t12$0$i) + 1|0);
          $2630 = ($2629|0)==($last|0);
          if ($2630) {
           $$13$i324$ph = $first;
          } else {
           $2631 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($2629,$last,$db)|0);
           $2632 = ($2631|0)==($2629|0);
           if ($2632) {
            $$13$i324$ph = $first;
           } else {
            $2633 = HEAP32[$db>>2]|0;
            $2634 = (($db) + 4|0);
            $2635 = HEAP32[$2634>>2]|0;
            $2636 = ($2633|0)==($2635|0);
            if ($2636) {
             $$pre211 = HEAP8[$num1$i>>0]|0;
             $phitmp = $$pre211 & 1;
             $phitmp214 = ($phitmp<<24>>24)==(0);
             if ($phitmp214) {
              $$1$i328 = $first;
              break;
             }
             $2663 = (($num1$i) + 8|0);
             $2664 = HEAP32[$2663>>2]|0;
             _free($2664);
             $$1$i328 = $first;
             break;
            }
            $2637 = (($2635) + -24|0);
            __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($8,48840,$num1$i);
            $2638 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($8,48856,1)|0);
            ;HEAP32[$7+0>>2]=HEAP32[$2638+0>>2]|0;HEAP32[$7+4>>2]=HEAP32[$2638+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$2638+8>>2]|0;
            ;HEAP32[$2638+0>>2]=0|0;HEAP32[$2638+4>>2]=0|0;HEAP32[$2638+8>>2]=0|0;
            $2639 = HEAP8[$7>>0]|0;
            $2640 = $2639 & 1;
            $2641 = ($2640<<24>>24)==(0);
            if ($2641) {
             $2646 = (($7) + 1|0);
             $2647 = $2639&255;
             $2648 = $2647 >>> 1;
             $2649 = $2646;$2650 = $2648;
            } else {
             $2642 = (($7) + 8|0);
             $2643 = HEAP32[$2642>>2]|0;
             $2644 = (($7) + 4|0);
             $2645 = HEAP32[$2644>>2]|0;
             $2649 = $2643;$2650 = $2645;
            }
            (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($2637,$2649,$2650)|0);
            if (!($2641)) {
             $2651 = (($7) + 8|0);
             $2652 = HEAP32[$2651>>2]|0;
             _free($2652);
            }
            $2653 = HEAP8[$8>>0]|0;
            $2654 = $2653 & 1;
            $2655 = ($2654<<24>>24)==(0);
            if ($2655) {
             $$13$i324$ph = $2631;
            } else {
             $2656 = (($8) + 8|0);
             $2657 = HEAP32[$2656>>2]|0;
             _free($2657);
             $$13$i324$ph = $2631;
            }
           }
          }
         } else {
          $$13$i324$ph = $first;
         }
        }
        $2658 = HEAP8[$num1$i>>0]|0;
        $2659 = $2658 & 1;
        $2660 = ($2659<<24>>24)==(0);
        if ($2660) {
         $$1$i328 = $$13$i324$ph;
         break;
        }
        $2661 = (($num1$i) + 8|0);
        $2662 = HEAP32[$2661>>2]|0;
        _free($2662);
        $$1$i328 = $$13$i324$ph;
        break;
       }
       $2523 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($2520,$last)|0);
       $2524 = ($2523|0)==($last|0);
       if ($2524) {
        $$1$i328 = $first;
       } else {
        $2525 = HEAP8[$2523>>0]|0;
        $2526 = ($2525<<24>>24)==(95);
        if ($2526) {
         $2527 = $2523;
         $2528 = $2520;
         $2529 = (($2527) - ($2528))|0;
         $2530 = (($2523) + 1|0);
         $2531 = ($2530|0)==($last|0);
         if ($2531) {
          $$1$i328 = $first;
         } else {
          $2532 = HEAP8[$2530>>0]|0;
          $2533 = ($2532<<24>>24)==(112);
          if (!($2533)) {
           $2534 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($2530,$last,$db)|0);
           $2535 = ($2534|0)==($2530|0);
           if ($2535) {
            $$1$i328 = $first;
            break;
           }
           $2536 = HEAP32[$db>>2]|0;
           $2537 = (($db) + 4|0);
           $2538 = HEAP32[$2537>>2]|0;
           $2539 = ($2536|0)==($2538|0);
           if ($2539) {
            $$1$i328 = $first;
            break;
           }
           $2540 = (($2538) + -24|0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($2,$2520,$2529);
           $2541 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($2,0,48840,8)|0);
           ;HEAP32[$1+0>>2]=HEAP32[$2541+0>>2]|0;HEAP32[$1+4>>2]=HEAP32[$2541+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$2541+8>>2]|0;
           ;HEAP32[$2541+0>>2]=0|0;HEAP32[$2541+4>>2]=0|0;HEAP32[$2541+8>>2]=0|0;
           $2542 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1,48856,1)|0);
           ;HEAP32[$0+0>>2]=HEAP32[$2542+0>>2]|0;HEAP32[$0+4>>2]=HEAP32[$2542+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$2542+8>>2]|0;
           ;HEAP32[$2542+0>>2]=0|0;HEAP32[$2542+4>>2]=0|0;HEAP32[$2542+8>>2]=0|0;
           $2543 = HEAP8[$0>>0]|0;
           $2544 = $2543 & 1;
           $2545 = ($2544<<24>>24)==(0);
           if ($2545) {
            $2550 = (($0) + 1|0);
            $2551 = $2543&255;
            $2552 = $2551 >>> 1;
            $2553 = $2550;$2554 = $2552;
           } else {
            $2546 = (($0) + 8|0);
            $2547 = HEAP32[$2546>>2]|0;
            $2548 = (($0) + 4|0);
            $2549 = HEAP32[$2548>>2]|0;
            $2553 = $2547;$2554 = $2549;
           }
           (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($2540,$2553,$2554)|0);
           if (!($2545)) {
            $2555 = (($0) + 8|0);
            $2556 = HEAP32[$2555>>2]|0;
            _free($2556);
           }
           $2557 = HEAP8[$1>>0]|0;
           $2558 = $2557 & 1;
           $2559 = ($2558<<24>>24)==(0);
           if (!($2559)) {
            $2560 = (($1) + 8|0);
            $2561 = HEAP32[$2560>>2]|0;
            _free($2561);
           }
           $2562 = HEAP8[$2>>0]|0;
           $2563 = $2562 & 1;
           $2564 = ($2563<<24>>24)==(0);
           if ($2564) {
            $$1$i328 = $2534;
            break;
           }
           $2565 = (($2) + 8|0);
           $2566 = HEAP32[$2565>>2]|0;
           _free($2566);
           $$1$i328 = $2534;
           break;
          }
          $2567 = (($2523) + 2|0);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($5,$2520,$2529);
          $2568 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($5,0,48864,13)|0);
          ;HEAP32[$4+0>>2]=HEAP32[$2568+0>>2]|0;HEAP32[$4+4>>2]=HEAP32[$2568+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$2568+8>>2]|0;
          ;HEAP32[$2568+0>>2]=0|0;HEAP32[$2568+4>>2]=0|0;HEAP32[$2568+8>>2]=0|0;
          $2569 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($4,48856,1)|0);
          $2570 = HEAP8[$2569>>0]|0;
          $2571 = (($2569) + 1|0);
          ;HEAP8[$$sroa$7+0>>0]=HEAP8[$2571+0>>0]|0;HEAP8[$$sroa$7+1>>0]=HEAP8[$2571+1>>0]|0;HEAP8[$$sroa$7+2>>0]=HEAP8[$2571+2>>0]|0;HEAP8[$$sroa$7+3>>0]=HEAP8[$2571+3>>0]|0;HEAP8[$$sroa$7+4>>0]=HEAP8[$2571+4>>0]|0;HEAP8[$$sroa$7+5>>0]=HEAP8[$2571+5>>0]|0;HEAP8[$$sroa$7+6>>0]=HEAP8[$2571+6>>0]|0;
          $2572 = (($2569) + 8|0);
          $2573 = HEAP32[$2572>>2]|0;
          ;HEAP32[$2569+0>>2]=0|0;HEAP32[$2569+4>>2]=0|0;HEAP32[$2569+8>>2]=0|0;
          HEAP8[$3>>0] = $2570;
          $2574 = (($3) + 1|0);
          ;HEAP8[$2574+0>>0]=HEAP8[$$sroa$7+0>>0]|0;HEAP8[$2574+1>>0]=HEAP8[$$sroa$7+1>>0]|0;HEAP8[$2574+2>>0]=HEAP8[$$sroa$7+2>>0]|0;HEAP8[$2574+3>>0]=HEAP8[$$sroa$7+3>>0]|0;HEAP8[$2574+4>>0]=HEAP8[$$sroa$7+4>>0]|0;HEAP8[$2574+5>>0]=HEAP8[$$sroa$7+5>>0]|0;HEAP8[$2574+6>>0]=HEAP8[$$sroa$7+6>>0]|0;
          $2575 = (($3) + 8|0);
          HEAP32[$2575>>2] = $2573;
          ;HEAP8[$$sroa$7+0>>0]=0|0;HEAP8[$$sroa$7+1>>0]=0|0;HEAP8[$$sroa$7+2>>0]=0|0;HEAP8[$$sroa$7+3>>0]=0|0;HEAP8[$$sroa$7+4>>0]=0|0;HEAP8[$$sroa$7+5>>0]=0|0;HEAP8[$$sroa$7+6>>0]=0|0;
          $2576 = (($3) + 12|0);
          ;HEAP32[$2576+0>>2]=0|0;HEAP32[$2576+4>>2]=0|0;HEAP32[$2576+8>>2]=0|0;
          $2577 = (($db) + 4|0);
          $2578 = HEAP32[$2577>>2]|0;
          $2579 = (($db) + 8|0);
          $2580 = HEAP32[$2579>>2]|0;
          $2581 = ($2578>>>0)<($2580>>>0);
          if ($2581) {
           $2582 = ($2578|0)==(0|0);
           if ($2582) {
            $2585 = 0;
           } else {
            ;HEAP32[$2578+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$2578+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$2578+8>>2]=HEAP32[$3+8>>2]|0;
            ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
            $2583 = (($2578) + 12|0);
            ;HEAP32[$2583+0>>2]=HEAP32[$2576+0>>2]|0;HEAP32[$2583+4>>2]=HEAP32[$2576+4>>2]|0;HEAP32[$2583+8>>2]=HEAP32[$2576+8>>2]|0;
            ;HEAP32[$2576+0>>2]=0|0;HEAP32[$2576+4>>2]=0|0;HEAP32[$2576+8>>2]=0|0;
            $$pre$i$i = HEAP32[$2577>>2]|0;
            $2585 = $$pre$i$i;
           }
           $2584 = (($2585) + 24|0);
           HEAP32[$2577>>2] = $2584;
          } else {
           $2586 = (($db) + 12|0);
           $2587 = HEAP32[$db>>2]|0;
           $2588 = $2578;
           $2589 = $2587;
           $2590 = (($2588) - ($2589))|0;
           $2591 = (($2590|0) / 24)&-1;
           $2592 = (($2591) + 1)|0;
           $2593 = ($2592|0)<(0);
           if ($2593) {
            __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
            // unreachable;
           }
           $2594 = $2580;
           $2595 = (($2594) - ($2589))|0;
           $2596 = (($2595|0) / 24)&-1;
           $2597 = ($2596>>>0)<(1073741823);
           if ($2597) {
            $2598 = $2596 << 1;
            $2599 = ($2598>>>0)<($2592>>>0);
            $2600 = $2599 ? $2592 : $2598;
            $$0$i$i$i$i = $2600;
           } else {
            $$0$i$i$i$i = 2147483647;
           }
           __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i,$$0$i$i$i$i,$2591,$2586);
           $2601 = (($__v$i$i$i) + 8|0);
           $2602 = HEAP32[$2601>>2]|0;
           $2603 = ($2602|0)==(0|0);
           if (!($2603)) {
            ;HEAP32[$2602+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$2602+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$2602+8>>2]=HEAP32[$3+8>>2]|0;
            ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
            $2604 = (($2602) + 12|0);
            ;HEAP32[$2604+0>>2]=HEAP32[$2576+0>>2]|0;HEAP32[$2604+4>>2]=HEAP32[$2576+4>>2]|0;HEAP32[$2604+8>>2]=HEAP32[$2576+8>>2]|0;
            ;HEAP32[$2576+0>>2]=0|0;HEAP32[$2576+4>>2]=0|0;HEAP32[$2576+8>>2]=0|0;
           }
           $2605 = (($2602) + 24|0);
           HEAP32[$2601>>2] = $2605;
           __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i$i);
           __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
          }
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
          $$pre209 = HEAP8[$4>>0]|0;
          $phitmp215 = $$pre209 & 1;
          $phitmp216 = ($phitmp215<<24>>24)==(0);
          if (!($phitmp216)) {
           $2606 = (($4) + 8|0);
           $2607 = HEAP32[$2606>>2]|0;
           _free($2607);
          }
          $2608 = HEAP8[$5>>0]|0;
          $2609 = $2608 & 1;
          $2610 = ($2609<<24>>24)==(0);
          if ($2610) {
           $$1$i328 = $2567;
          } else {
           $2611 = (($5) + 8|0);
           $2612 = HEAP32[$2611>>2]|0;
           _free($2612);
           $$1$i328 = $2567;
          }
         }
        } else {
         $$1$i328 = $first;
        }
       }
      } else {
       $$1$i328 = $first;
      }
     } while(0);
     $2665 = ($$1$i328|0)==($first|0);
     if ($2665) {
      break L89;
     }
     $2666 = HEAP32[$db>>2]|0;
     $2667 = (($db) + 4|0);
     $2668 = HEAP32[$2667>>2]|0;
     $2669 = ($2666|0)==($2668|0);
     if ($2669) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $2670 = (($db) + 16|0);
     $2671 = (($2668) + -24|0);
     $2672 = (($db) + 12|0);
     $2673 = HEAP32[$2672>>2]|0;
     HEAP32[$44>>2] = $2673;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($43,$2671,$44);
     $2674 = (($db) + 20|0);
     $2675 = HEAP32[$2674>>2]|0;
     $2676 = (($db) + 24|0);
     $2677 = HEAP32[$2676>>2]|0;
     $2678 = ($2675>>>0)<($2677>>>0);
     if ($2678) {
      $2679 = ($2675|0)==(0|0);
      if ($2679) {
       $2691 = 0;
      } else {
       $2680 = (($2675) + 4|0);
       $2681 = (($43) + 12|0);
       $2682 = HEAP32[$2681>>2]|0;
       $2683 = (($2675) + 8|0);
       $2684 = (($2675) + 12|0);
       HEAP32[$2684>>2] = $2682;
       $2685 = HEAP32[$43>>2]|0;
       HEAP32[$2675>>2] = $2685;
       $2686 = (($43) + 4|0);
       $2687 = HEAP32[$2686>>2]|0;
       HEAP32[$2680>>2] = $2687;
       $2688 = (($43) + 8|0);
       $2689 = HEAP32[$2688>>2]|0;
       HEAP32[$2683>>2] = $2689;
       HEAP32[$2688>>2] = 0;
       HEAP32[$2686>>2] = 0;
       HEAP32[$43>>2] = 0;
       $$pre$i17 = HEAP32[$2674>>2]|0;
       $2691 = $$pre$i17;
      }
      $2690 = (($2691) + 16|0);
      HEAP32[$2674>>2] = $2690;
     } else {
      $2692 = (($db) + 28|0);
      $2693 = HEAP32[$2670>>2]|0;
      $2694 = $2675;
      $2695 = $2693;
      $2696 = (($2694) - ($2695))|0;
      $2697 = $2696 >> 4;
      $2698 = (($2697) + 1)|0;
      $2699 = ($2698|0)<(0);
      if ($2699) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
       // unreachable;
      }
      $2700 = $2677;
      $2701 = (($2700) - ($2695))|0;
      $2702 = $2701 >> 4;
      $2703 = ($2702>>>0)<(1073741823);
      if ($2703) {
       $2704 = $2701 >> 3;
       $2705 = ($2704>>>0)<($2698>>>0);
       $2706 = $2705 ? $2698 : $2704;
       $$0$i$i$i19 = $2706;
      } else {
       $$0$i$i$i19 = 2147483647;
      }
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i19,$2697,$2692);
      $2707 = (($__v$i$i$i) + 8|0);
      $2708 = HEAP32[$2707>>2]|0;
      $2709 = ($2708|0)==(0|0);
      if (!($2709)) {
       $2710 = (($2708) + 4|0);
       $2711 = (($43) + 12|0);
       $2712 = HEAP32[$2711>>2]|0;
       $2713 = (($2708) + 8|0);
       $2714 = (($2708) + 12|0);
       HEAP32[$2714>>2] = $2712;
       $2715 = HEAP32[$43>>2]|0;
       HEAP32[$2708>>2] = $2715;
       $2716 = (($43) + 4|0);
       $2717 = HEAP32[$2716>>2]|0;
       HEAP32[$2710>>2] = $2717;
       $2718 = (($43) + 8|0);
       $2719 = HEAP32[$2718>>2]|0;
       HEAP32[$2713>>2] = $2719;
       HEAP32[$2718>>2] = 0;
       HEAP32[$2716>>2] = 0;
       HEAP32[$43>>2] = 0;
      }
      $2720 = (($2708) + 16|0);
      HEAP32[$2707>>2] = $2720;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2670,$__v$i$i$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($43);
     $$0 = $$1$i328;
     STACKTOP = sp;return ($$0|0);
    } else {
     break L89;
    }
   }
   break;
  }
  case 70:  {
   $668 = ($197<<24>>24)==(70);
   if (!($668)) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $669 = (($first) + 1|0);
   $670 = ($669|0)==($last|0);
   if ($670) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $671 = HEAP8[$669>>0]|0;
   $672 = ($671<<24>>24)==(89);
   if ($672) {
    $673 = (($first) + 2|0);
    $674 = ($673|0)==($last|0);
    if ($674) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    } else {
     $t$0$i = $673;
    }
   } else {
    $t$0$i = $669;
   }
   $675 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($t$0$i,$last,$db)|0);
   $676 = ($675|0)==($t$0$i|0);
   if ($676) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   HEAP8[$__v$i$i$i>>0] = 2;
   $677 = (($__v$i$i$i) + 1|0);
   HEAP8[$677>>0] = 40;
   $678 = (($__v$i$i$i) + 2|0);
   HEAP8[$678>>0] = 0;
   $679 = ($675|0)==($last|0);
   $$pre517$pre = (($db) + 4|0);
   L326: do {
    if ($679) {
     label = 213;
    } else {
     $680 = (($0) + 1|0);
     $681 = (($0) + 8|0);
     $682 = (($0) + 4|0);
     $683 = (($__v$i$i$i) + 4|0);
     $ref_qual$0$i$ph451 = 0;$t$1$i$ph450 = $675;
     L328: while(1) {
      $t$1$i366 = $t$1$i$ph450;
      while(1) {
       $691 = HEAP8[$t$1$i366>>0]|0;
       if ((($691<<24>>24) == 118)) {
        $693 = (($t$1$i366) + 1|0);
        $t$1$i$be = $693;
       } else if ((($691<<24>>24) == 69)) {
        break L328;
       } else if ((($691<<24>>24) == 82)) {
        $695 = (($t$1$i366) + 1|0);
        $696 = ($695|0)==($last|0);
        if ($696) {
         label = 223;
        } else {
         $697 = HEAP8[$695>>0]|0;
         $698 = ($697<<24>>24)==(69);
         if ($698) {
          $ref_qual$0$i$ph$ph = 1;$t$1$i$ph$ph = $695;
          break;
         } else {
          label = 223;
         }
        }
       } else if ((($691<<24>>24) == 79)) {
        $699 = (($t$1$i366) + 1|0);
        $700 = ($699|0)==($last|0);
        if ($700) {
         label = 223;
        } else {
         $701 = HEAP8[$699>>0]|0;
         $702 = ($701<<24>>24)==(69);
         if ($702) {
          $ref_qual$0$i$ph$ph = 2;$t$1$i$ph$ph = $699;
          break;
         } else {
          label = 223;
         }
        }
       } else {
        label = 223;
       }
       if ((label|0) == 223) {
        label = 0;
        $703 = HEAP32[$$pre517$pre>>2]|0;
        $704 = HEAP32[$db>>2]|0;
        $705 = $703;
        $706 = $704;
        $707 = (($705) - ($706))|0;
        $708 = (($707|0) / 24)&-1;
        $709 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($t$1$i366,$last,$db)|0);
        $710 = HEAP32[$$pre517$pre>>2]|0;
        $711 = HEAP32[$db>>2]|0;
        $712 = $710;
        $713 = $711;
        $714 = (($712) - ($713))|0;
        $715 = (($714|0) / 24)&-1;
        $716 = ($709|0)==($t$1$i366|0);
        $717 = ($709|0)==($last|0);
        $or$cond$i = $716 | $717;
        if ($or$cond$i) {
         break L326;
        }
        $718 = ($708>>>0)<($715>>>0);
        if ($718) {
         $k$0$i352 = $708;
         while(1) {
          $719 = HEAP8[$__v$i$i$i>>0]|0;
          $720 = $719 & 1;
          $721 = ($720<<24>>24)==(0);
          if ($721) {
           $723 = $719&255;
           $724 = $723 >>> 1;
           $726 = $724;
          } else {
           $722 = HEAP32[$683>>2]|0;
           $726 = $722;
          }
          $725 = ($726>>>0)>(1);
          if ($725) {
           (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($__v$i$i$i,49032,2)|0);
          }
          $727 = HEAP32[$db>>2]|0;
          $728 = (($727) + (($k$0$i352*24)|0)|0);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($0,$728);
          $729 = HEAP8[$0>>0]|0;
          $730 = $729 & 1;
          $731 = ($730<<24>>24)==(0);
          if ($731) {
           $734 = $729&255;
           $735 = $734 >>> 1;
           $736 = $680;$737 = $735;
          } else {
           $732 = HEAP32[$681>>2]|0;
           $733 = HEAP32[$682>>2]|0;
           $736 = $732;$737 = $733;
          }
          (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($__v$i$i$i,$736,$737)|0);
          if (!($731)) {
           $738 = HEAP32[$681>>2]|0;
           _free($738);
          }
          $739 = (($k$0$i352) + 1)|0;
          $740 = ($739>>>0)<($715>>>0);
          if ($740) {
           $k$0$i352 = $739;
          } else {
           break;
          }
         }
         $$pre = HEAP32[$$pre517$pre>>2]|0;
         $742 = $$pre;$k2$0$i354 = $708;
         while(1) {
          $741 = (($742) + -24|0);
          $744 = $742;
          while(1) {
           $743 = (($744) + -24|0);
           HEAP32[$$pre517$pre>>2] = $743;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($743);
           $745 = HEAP32[$$pre517$pre>>2]|0;
           $746 = ($745|0)==($741|0);
           if ($746) {
            break;
           } else {
            $744 = $745;
           }
          }
          $747 = (($k2$0$i354) + 1)|0;
          $exitcond = ($747|0)==($715|0);
          if ($exitcond) {
           $t$1$i$be = $709;
           break;
          } else {
           $742 = $741;$k2$0$i354 = $747;
          }
         }
        } else {
         $t$1$i$be = $709;
        }
       }
       $694 = ($t$1$i$be|0)==($last|0);
       if ($694) {
        label = 213;
        break L326;
       } else {
        $t$1$i366 = $t$1$i$be;
       }
      }
      $684 = ($t$1$i$ph$ph|0)==($last|0);
      if ($684) {
       label = 213;
       break L326;
      } else {
       $ref_qual$0$i$ph451 = $ref_qual$0$i$ph$ph;$t$1$i$ph450 = $t$1$i$ph$ph;
      }
     }
     $692 = (($t$1$i366) + 1|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($__v$i$i$i,48736,1)|0);
     if ((($ref_qual$0$i$ph451|0) == 1)) {
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($__v$i$i$i,50640,2)|0);
     } else if ((($ref_qual$0$i$ph451|0) == 2)) {
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($__v$i$i$i,50648,3)|0);
     }
     $748 = HEAP32[$db>>2]|0;
     $749 = HEAP32[$$pre517$pre>>2]|0;
     $750 = ($748|0)==($749|0);
     if (!($750)) {
      $751 = (($749) + -24|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($751,48816,1)|0);
      $752 = HEAP32[$$pre517$pre>>2]|0;
      $753 = (($752) + -12|0);
      $754 = HEAP8[$__v$i$i$i>>0]|0;
      $755 = $754 & 1;
      $756 = ($755<<24>>24)==(0);
      if ($756) {
       $760 = $754&255;
       $761 = $760 >>> 1;
       $762 = $677;$763 = $761;
      } else {
       $757 = (($__v$i$i$i) + 8|0);
       $758 = HEAP32[$757>>2]|0;
       $759 = HEAP32[$683>>2]|0;
       $762 = $758;$763 = $759;
      }
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($753,0,$762,$763)|0);
      $764 = HEAP8[$__v$i$i$i>>0]|0;
      $765 = $764 & 1;
      $766 = ($765<<24>>24)==(0);
      if (!($766)) {
       $772 = (($__v$i$i$i) + 8|0);
       $773 = HEAP32[$772>>2]|0;
       _free($773);
      }
      $774 = ($692|0)==($first|0);
      if ($774) {
       $$0 = $first;
       STACKTOP = sp;return ($$0|0);
      }
      $775 = HEAP32[$db>>2]|0;
      $776 = HEAP32[$$pre517$pre>>2]|0;
      $777 = ($775|0)==($776|0);
      if ($777) {
       $$0 = $first;
       STACKTOP = sp;return ($$0|0);
      }
      $778 = (($db) + 16|0);
      $779 = (($776) + -24|0);
      $780 = (($db) + 12|0);
      $781 = HEAP32[$780>>2]|0;
      HEAP32[$14>>2] = $781;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($13,$779,$14);
      $782 = (($db) + 20|0);
      $783 = HEAP32[$782>>2]|0;
      $784 = (($db) + 24|0);
      $785 = HEAP32[$784>>2]|0;
      $786 = ($783>>>0)<($785>>>0);
      if ($786) {
       $787 = ($783|0)==(0|0);
       if ($787) {
        $799 = 0;
       } else {
        $788 = (($783) + 4|0);
        $789 = (($13) + 12|0);
        $790 = HEAP32[$789>>2]|0;
        $791 = (($783) + 8|0);
        $792 = (($783) + 12|0);
        HEAP32[$792>>2] = $790;
        $793 = HEAP32[$13>>2]|0;
        HEAP32[$783>>2] = $793;
        $794 = (($13) + 4|0);
        $795 = HEAP32[$794>>2]|0;
        HEAP32[$788>>2] = $795;
        $796 = (($13) + 8|0);
        $797 = HEAP32[$796>>2]|0;
        HEAP32[$791>>2] = $797;
        HEAP32[$796>>2] = 0;
        HEAP32[$794>>2] = 0;
        HEAP32[$13>>2] = 0;
        $$pre$i92 = HEAP32[$782>>2]|0;
        $799 = $$pre$i92;
       }
       $798 = (($799) + 16|0);
       HEAP32[$782>>2] = $798;
      } else {
       $800 = (($db) + 28|0);
       $801 = HEAP32[$778>>2]|0;
       $802 = $783;
       $803 = $801;
       $804 = (($802) - ($803))|0;
       $805 = $804 >> 4;
       $806 = (($805) + 1)|0;
       $807 = ($806|0)<(0);
       if ($807) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
        // unreachable;
       }
       $808 = $785;
       $809 = (($808) - ($803))|0;
       $810 = $809 >> 4;
       $811 = ($810>>>0)<(1073741823);
       if ($811) {
        $812 = $809 >> 3;
        $813 = ($812>>>0)<($806>>>0);
        $814 = $813 ? $806 : $812;
        $$0$i$i$i94 = $814;
       } else {
        $$0$i$i$i94 = 2147483647;
       }
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i94,$805,$800);
       $815 = (($__v$i$i$i) + 8|0);
       $816 = HEAP32[$815>>2]|0;
       $817 = ($816|0)==(0|0);
       if (!($817)) {
        $818 = (($816) + 4|0);
        $819 = (($13) + 12|0);
        $820 = HEAP32[$819>>2]|0;
        $821 = (($816) + 8|0);
        $822 = (($816) + 12|0);
        HEAP32[$822>>2] = $820;
        $823 = HEAP32[$13>>2]|0;
        HEAP32[$816>>2] = $823;
        $824 = (($13) + 4|0);
        $825 = HEAP32[$824>>2]|0;
        HEAP32[$818>>2] = $825;
        $826 = (($13) + 8|0);
        $827 = HEAP32[$826>>2]|0;
        HEAP32[$821>>2] = $827;
        HEAP32[$826>>2] = 0;
        HEAP32[$824>>2] = 0;
        HEAP32[$13>>2] = 0;
       }
       $828 = (($816) + 16|0);
       HEAP32[$815>>2] = $828;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($778,$__v$i$i$i);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
      }
      __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($13);
      $$0 = $692;
      STACKTOP = sp;return ($$0|0);
     }
    }
   } while(0);
   if ((label|0) == 213) {
    $685 = HEAP32[$$pre517$pre>>2]|0;
    $686 = (($685) + -24|0);
    $688 = $685;
    while(1) {
     $687 = (($688) + -24|0);
     HEAP32[$$pre517$pre>>2] = $687;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($687);
     $689 = HEAP32[$$pre517$pre>>2]|0;
     $690 = ($689|0)==($686|0);
     if ($690) {
      break;
     } else {
      $688 = $689;
     }
    }
   }
   $767 = HEAP8[$__v$i$i$i>>0]|0;
   $768 = $767 & 1;
   $769 = ($768<<24>>24)==(0);
   if ($769) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $770 = (($__v$i$i$i) + 8|0);
   $771 = HEAP32[$770>>2]|0;
   _free($771);
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 65:  {
   $199 = ($197<<24>>24)==(65);
   do {
    if ($199) {
     $200 = (($first) + 1|0);
     $201 = ($200|0)==($last|0);
     if ($201) {
      $$0$i = $first;
     } else {
      $202 = HEAP8[$200>>0]|0;
      $203 = ($202<<24>>24)==(95);
      if ($203) {
       $204 = (($first) + 2|0);
       $205 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($204,$last,$db)|0);
       $206 = ($205|0)==($204|0);
       if ($206) {
        $$0$i = $first;
        break;
       }
       $207 = HEAP32[$db>>2]|0;
       $208 = (($db) + 4|0);
       $209 = HEAP32[$208>>2]|0;
       $210 = ($207|0)==($209|0);
       if ($210) {
        $$0$i = $first;
        break;
       }
       $211 = (($209) + -12|0);
       $212 = HEAP8[$211>>0]|0;
       $213 = $212 & 1;
       $214 = ($213<<24>>24)==(0);
       if ($214) {
        $219 = $212&255;
        $220 = $219 >>> 1;
        $221 = (($211) + 1|0);
        $223 = $220;$225 = $221;
       } else {
        $215 = (($209) + -8|0);
        $216 = HEAP32[$215>>2]|0;
        $217 = (($209) + -4|0);
        $218 = HEAP32[$217>>2]|0;
        $223 = $216;$225 = $218;
       }
       $222 = ($223>>>0)<(2);
       $224 = $222 ? $223 : 2;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($__v$i$i$i,$225,$224);
       $226 = HEAP8[$__v$i$i$i>>0]|0;
       $227 = $226 & 1;
       $228 = ($227<<24>>24)==(0);
       if ($228) {
        $233 = $226&255;
        $234 = $233 >>> 1;
        $235 = (($__v$i$i$i) + 1|0);
        $237 = $234;$2780 = $235;
       } else {
        $229 = (($__v$i$i$i) + 4|0);
        $230 = HEAP32[$229>>2]|0;
        $231 = (($__v$i$i$i) + 8|0);
        $232 = HEAP32[$231>>2]|0;
        $237 = $230;$2780 = $232;
       }
       $236 = ($237>>>0)>(2);
       $238 = $236 ? 2 : $237;
       $239 = ($238|0)==(0);
       L426: do {
        if ($239) {
         $248 = 0;
        } else {
         $$02$i32 = $238;$l$03$i = $2780;$r$04$i = 48720;
         while(1) {
          $240 = HEAP8[$l$03$i>>0]|0;
          $241 = HEAP8[$r$04$i>>0]|0;
          $242 = ($240<<24>>24)==($241<<24>>24);
          if (!($242)) {
           $248 = 1;
           break L426;
          }
          $243 = (($$02$i32) + -1)|0;
          $244 = (($l$03$i) + 1|0);
          $245 = (($r$04$i) + 1|0);
          $246 = ($243|0)==(0);
          if ($246) {
           $248 = 0;
           break;
          } else {
           $$02$i32 = $243;$l$03$i = $244;$r$04$i = $245;
          }
         }
        }
       } while(0);
       $247 = ($237>>>0)<(2);
       $or$cond344 = $248 | $247;
       if (!($228)) {
        $249 = (($__v$i$i$i) + 8|0);
        $250 = HEAP32[$249>>2]|0;
        _free($250);
       }
       $brmerge = $or$cond344 | $236;
       if (!($brmerge)) {
        $251 = HEAP32[$208>>2]|0;
        $252 = (($251) + -12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($252);
       }
       $253 = HEAP32[$208>>2]|0;
       $254 = (($253) + -12|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($254,0,50656,3)|0);
       $$0$i = $205;
       break;
      }
      $$off343 = (($202) + -49)<<24>>24;
      $255 = ($$off343&255)<(9);
      if ($255) {
       $256 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($200,$last)|0);
       $257 = ($256|0)==($last|0);
       if ($257) {
        $$0$i = $first;
        break;
       }
       $258 = HEAP8[$256>>0]|0;
       $259 = ($258<<24>>24)==(95);
       if (!($259)) {
        $$0$i = $first;
        break;
       }
       $260 = (($256) + 1|0);
       $261 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($260,$last,$db)|0);
       $262 = ($261|0)==($260|0);
       if ($262) {
        $$0$i = $first;
        break;
       }
       $263 = HEAP32[$db>>2]|0;
       $264 = (($db) + 4|0);
       $265 = HEAP32[$264>>2]|0;
       $266 = ($263|0)==($265|0);
       if ($266) {
        $$0$i = $first;
        break;
       }
       $267 = (($265) + -12|0);
       $268 = HEAP8[$267>>0]|0;
       $269 = $268 & 1;
       $270 = ($269<<24>>24)==(0);
       if ($270) {
        $275 = $268&255;
        $276 = $275 >>> 1;
        $277 = (($267) + 1|0);
        $279 = $276;$281 = $277;
       } else {
        $271 = (($265) + -8|0);
        $272 = HEAP32[$271>>2]|0;
        $273 = (($265) + -4|0);
        $274 = HEAP32[$273>>2]|0;
        $279 = $272;$281 = $274;
       }
       $278 = ($279>>>0)<(2);
       $280 = $278 ? $279 : 2;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0,$281,$280);
       $282 = HEAP8[$0>>0]|0;
       $283 = $282 & 1;
       $284 = ($283<<24>>24)==(0);
       if ($284) {
        $289 = $282&255;
        $290 = $289 >>> 1;
        $291 = (($0) + 1|0);
        $2781 = $291;$293 = $290;
       } else {
        $285 = (($0) + 4|0);
        $286 = HEAP32[$285>>2]|0;
        $287 = (($0) + 8|0);
        $288 = HEAP32[$287>>2]|0;
        $2781 = $288;$293 = $286;
       }
       $292 = ($293>>>0)>(2);
       $294 = $292 ? 2 : $293;
       $295 = ($294|0)==(0);
       L452: do {
        if ($295) {
         $304 = 0;
        } else {
         $$02$i36 = $294;$l$03$i35 = $2781;$r$04$i34 = 48720;
         while(1) {
          $296 = HEAP8[$l$03$i35>>0]|0;
          $297 = HEAP8[$r$04$i34>>0]|0;
          $298 = ($296<<24>>24)==($297<<24>>24);
          if (!($298)) {
           $304 = 1;
           break L452;
          }
          $299 = (($$02$i36) + -1)|0;
          $300 = (($l$03$i35) + 1|0);
          $301 = (($r$04$i34) + 1|0);
          $302 = ($299|0)==(0);
          if ($302) {
           $304 = 0;
           break;
          } else {
           $$02$i36 = $299;$l$03$i35 = $300;$r$04$i34 = $301;
          }
         }
        }
       } while(0);
       $303 = ($293>>>0)<(2);
       $or$cond345 = $304 | $303;
       if (!($284)) {
        $305 = (($0) + 8|0);
        $306 = HEAP32[$305>>2]|0;
        _free($306);
       }
       $brmerge347 = $or$cond345 | $292;
       if (!($brmerge347)) {
        $307 = HEAP32[$264>>2]|0;
        $308 = (($307) + -12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($308);
       }
       $309 = HEAP32[$264>>2]|0;
       $310 = (($309) + -12|0);
       $311 = $200;
       $312 = $256;
       $313 = (($312) - ($311))|0;
       $314 = ($313>>>0)>(4294967279);
       if ($314) {
        __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
        // unreachable;
       }
       $315 = ($313>>>0)<(11);
       if ($315) {
        $316 = $313 << 1;
        $317 = $316&255;
        HEAP8[$3>>0] = $317;
        $318 = (($3) + 1|0);
        $__p$0$ph$i$i$i = $318;
       } else {
        $319 = (($313) + 16)|0;
        $320 = $319 & -16;
        $321 = (_malloc($320)|0);
        $322 = (($3) + 8|0);
        HEAP32[$322>>2] = $321;
        $323 = $320 | 1;
        HEAP32[$3>>2] = $323;
        $324 = (($3) + 4|0);
        HEAP32[$324>>2] = $313;
        $__p$0$ph$i$i$i = $321;
       }
       $325 = ($200|0)==($256|0);
       if ($325) {
        $__p$0$lcssa$i$i$i = $__p$0$ph$i$i$i;
       } else {
        $$02$i$i$i = $200;$__p$01$i$i$i = $__p$0$ph$i$i$i;
        while(1) {
         $326 = HEAP8[$$02$i$i$i>>0]|0;
         HEAP8[$__p$01$i$i$i>>0] = $326;
         $327 = (($$02$i$i$i) + 1|0);
         $328 = (($__p$01$i$i$i) + 1|0);
         $329 = ($327|0)==($256|0);
         if ($329) {
          break;
         } else {
          $$02$i$i$i = $327;$__p$01$i$i$i = $328;
         }
        }
        $scevgep4$i$i$i = (($__p$0$ph$i$i$i) + ($313)|0);
        $__p$0$lcssa$i$i$i = $scevgep4$i$i$i;
       }
       HEAP8[$__p$0$lcssa$i$i$i>>0] = 0;
       $330 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($3,0,48720,2)|0);
       ;HEAP32[$2+0>>2]=HEAP32[$330+0>>2]|0;HEAP32[$2+4>>2]=HEAP32[$330+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$330+8>>2]|0;
       ;HEAP32[$330+0>>2]=0|0;HEAP32[$330+4>>2]=0|0;HEAP32[$330+8>>2]=0|0;
       $331 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($2,48856,1)|0);
       ;HEAP32[$1+0>>2]=HEAP32[$331+0>>2]|0;HEAP32[$1+4>>2]=HEAP32[$331+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$331+8>>2]|0;
       ;HEAP32[$331+0>>2]=0|0;HEAP32[$331+4>>2]=0|0;HEAP32[$331+8>>2]=0|0;
       $332 = HEAP8[$1>>0]|0;
       $333 = $332 & 1;
       $334 = ($333<<24>>24)==(0);
       if ($334) {
        $339 = (($1) + 1|0);
        $340 = $332&255;
        $341 = $340 >>> 1;
        $342 = $339;$343 = $341;
       } else {
        $335 = (($1) + 8|0);
        $336 = HEAP32[$335>>2]|0;
        $337 = (($1) + 4|0);
        $338 = HEAP32[$337>>2]|0;
        $342 = $336;$343 = $338;
       }
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($310,0,$342,$343)|0);
       $344 = HEAP8[$1>>0]|0;
       $345 = $344 & 1;
       $346 = ($345<<24>>24)==(0);
       if (!($346)) {
        $347 = (($1) + 8|0);
        $348 = HEAP32[$347>>2]|0;
        _free($348);
       }
       $349 = HEAP8[$2>>0]|0;
       $350 = $349 & 1;
       $351 = ($350<<24>>24)==(0);
       if (!($351)) {
        $352 = (($2) + 8|0);
        $353 = HEAP32[$352>>2]|0;
        _free($353);
       }
       $354 = HEAP8[$3>>0]|0;
       $355 = $354 & 1;
       $356 = ($355<<24>>24)==(0);
       if ($356) {
        $$0$i = $261;
        break;
       }
       $357 = (($3) + 8|0);
       $358 = HEAP32[$357>>2]|0;
       _free($358);
       $$0$i = $261;
       break;
      }
      $359 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($200,$last,$db)|0);
      $360 = ($359|0)==($200|0);
      $361 = ($359|0)==($last|0);
      $or$cond10$i = $360 | $361;
      if ($or$cond10$i) {
       $$0$i = $first;
      } else {
       $362 = HEAP8[$359>>0]|0;
       $363 = ($362<<24>>24)==(95);
       if ($363) {
        $364 = (($359) + 1|0);
        $365 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($364,$last,$db)|0);
        $366 = ($365|0)==($364|0);
        if ($366) {
         $$0$i = $first;
        } else {
         $367 = (($db) + 4|0);
         $368 = HEAP32[$367>>2]|0;
         $369 = HEAP32[$db>>2]|0;
         $370 = $368;
         $371 = $369;
         $372 = (($370) - ($371))|0;
         $373 = (($372|0) / 24)&-1;
         $374 = ($373>>>0)<(2);
         if ($374) {
          $$0$i = $first;
         } else {
          $375 = (($368) + -24|0);
          ;HEAP32[$$sroa$7+0>>2]=HEAP32[$375+0>>2]|0;HEAP32[$$sroa$7+4>>2]=HEAP32[$375+4>>2]|0;HEAP32[$$sroa$7+8>>2]=HEAP32[$375+8>>2]|0;
          ;HEAP32[$375+0>>2]=0|0;HEAP32[$375+4>>2]=0|0;HEAP32[$375+8>>2]=0|0;
          $376 = (($$sroa$7) + 12|0);
          $377 = (($368) + -12|0);
          ;HEAP32[$376+0>>2]=HEAP32[$377+0>>2]|0;HEAP32[$376+4>>2]=HEAP32[$377+4>>2]|0;HEAP32[$376+8>>2]=HEAP32[$377+8>>2]|0;
          ;HEAP32[$377+0>>2]=0|0;HEAP32[$377+4>>2]=0|0;HEAP32[$377+8>>2]=0|0;
          $378 = HEAP32[$367>>2]|0;
          $379 = (($378) + -24|0);
          $381 = $378;
          while(1) {
           $380 = (($381) + -24|0);
           HEAP32[$367>>2] = $380;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($380);
           $382 = HEAP32[$367>>2]|0;
           $383 = ($382|0)==($379|0);
           if ($383) {
            break;
           } else {
            $381 = $382;
           }
          }
          $384 = (($378) + -48|0);
          ;HEAP32[$4+0>>2]=HEAP32[$384+0>>2]|0;HEAP32[$4+4>>2]=HEAP32[$384+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$384+8>>2]|0;
          ;HEAP32[$384+0>>2]=0|0;HEAP32[$384+4>>2]=0|0;HEAP32[$384+8>>2]=0|0;
          $385 = (($4) + 12|0);
          $386 = (($378) + -36|0);
          ;HEAP32[$385+0>>2]=HEAP32[$386+0>>2]|0;HEAP32[$385+4>>2]=HEAP32[$386+4>>2]|0;HEAP32[$385+8>>2]=HEAP32[$386+8>>2]|0;
          ;HEAP32[$386+0>>2]=0|0;HEAP32[$386+4>>2]=0|0;HEAP32[$386+8>>2]=0|0;
          $387 = HEAP32[$367>>2]|0;
          $388 = (($387) + -24|0);
          $389 = HEAP8[$388>>0]|0;
          $390 = $389 & 1;
          $391 = ($390<<24>>24)==(0);
          do {
           if ($391) {
            $392 = (($388) + 1|0);
            HEAP8[$392>>0] = 0;
            HEAP8[$388>>0] = 0;
           } else {
            $393 = (($387) + -16|0);
            $394 = HEAP32[$393>>2]|0;
            HEAP8[$394>>0] = 0;
            $395 = (($387) + -20|0);
            HEAP32[$395>>2] = 0;
            $$pre$i$i$i$i277 = HEAP8[$388>>0]|0;
            $396 = $$pre$i$i$i$i277 & 1;
            $397 = ($396<<24>>24)==(0);
            if ($397) {
             $402 = $$pre$i$i$i$i277;$411 = 10;
            } else {
             $398 = HEAP32[$388>>2]|0;
             $399 = $398 & -2;
             $phitmp$i$i$i$i$i$i$i279 = (($399) + -1)|0;
             $400 = $398&255;
             $402 = $400;$411 = $phitmp$i$i$i$i$i$i$i279;
            }
            $401 = $402 & 1;
            $403 = ($401<<24>>24)==(0);
            if ($403) {
             $404 = $402&255;
             $405 = $404 >>> 1;
             $406 = ($402&255)<(22);
             if ($406) {
              $2782 = 1;$410 = 10;$430 = $405;
             } else {
              $407 = (($405) + 16)|0;
              $408 = $407 & 240;
              $phitmp$i2$i$i$i$i$i$i282 = (($408) + -1)|0;
              $2782 = 1;$410 = $phitmp$i2$i$i$i$i$i$i282;$430 = $405;
             }
            } else {
             $2782 = 0;$410 = 10;$430 = 0;
            }
            $409 = ($410|0)==($411|0);
            if (!($409)) {
             $412 = ($410|0)==(10);
             if ($412) {
              $417 = (($388) + 1|0);
              $418 = HEAP32[$393>>2]|0;
              if ($2782) {
               $419 = $402&255;
               $420 = $419 >>> 1;
               $421 = (($420) + 1)|0;
               _memcpy(($417|0),($418|0),($421|0))|0;
               _free($418);
              } else {
               $426 = HEAP8[$418>>0]|0;
               HEAP8[$417>>0] = $426;
               _free($418);
              }
              $431 = $430 << 1;
              $432 = $431&255;
              HEAP8[$388>>0] = $432;
              break;
             }
             $413 = ($410>>>0)<=($411>>>0);
             $414 = (($410) + 1)|0;
             $415 = (_malloc($414)|0);
             $416 = ($415|0)==(0|0);
             $or$cond$i$i$i$i$i$i284 = $413 & $416;
             if (!($or$cond$i$i$i$i$i$i284)) {
              if ($2782) {
               $422 = (($388) + 1|0);
               $423 = $402&255;
               $424 = $423 >>> 1;
               $425 = (($424) + 1)|0;
               _memcpy(($415|0),($422|0),($425|0))|0;
              } else {
               $427 = HEAP32[$393>>2]|0;
               $428 = HEAP8[$427>>0]|0;
               HEAP8[$415>>0] = $428;
               _free($427);
              }
              $429 = $414 | 1;
              HEAP32[$388>>2] = $429;
              HEAP32[$395>>2] = $430;
              HEAP32[$393>>2] = $415;
             }
            }
           }
          } while(0);
          ;HEAP32[$388+0>>2]=HEAP32[$$sroa$7+0>>2]|0;HEAP32[$388+4>>2]=HEAP32[$$sroa$7+4>>2]|0;HEAP32[$388+8>>2]=HEAP32[$$sroa$7+8>>2]|0;
          ;HEAP32[$$sroa$7+0>>2]=0|0;HEAP32[$$sroa$7+4>>2]=0|0;HEAP32[$$sroa$7+8>>2]=0|0;
          $433 = HEAP8[$376>>0]|0;
          $434 = $433 & 1;
          $435 = ($434<<24>>24)==(0);
          if ($435) {
           $440 = $433&255;
           $441 = $440 >>> 1;
           $442 = (($376) + 1|0);
           $444 = $441;$446 = $442;
          } else {
           $436 = (($$sroa$7) + 16|0);
           $437 = HEAP32[$436>>2]|0;
           $438 = (($$sroa$7) + 20|0);
           $439 = HEAP32[$438>>2]|0;
           $444 = $437;$446 = $439;
          }
          $443 = ($444>>>0)<(2);
          $445 = $443 ? $444 : 2;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($5,$446,$445);
          $447 = HEAP8[$5>>0]|0;
          $448 = $447 & 1;
          $449 = ($448<<24>>24)==(0);
          if ($449) {
           $454 = $447&255;
           $455 = $454 >>> 1;
           $456 = (($5) + 1|0);
           $2783 = $456;$458 = $455;
          } else {
           $450 = (($5) + 4|0);
           $451 = HEAP32[$450>>2]|0;
           $452 = (($5) + 8|0);
           $453 = HEAP32[$452>>2]|0;
           $2783 = $453;$458 = $451;
          }
          $457 = ($458>>>0)>(2);
          $459 = $457 ? 2 : $458;
          $460 = ($459|0)==(0);
          L526: do {
           if ($460) {
            $469 = 0;
           } else {
            $$02$i52 = $459;$l$03$i51 = $2783;$r$04$i50 = 48720;
            while(1) {
             $461 = HEAP8[$l$03$i51>>0]|0;
             $462 = HEAP8[$r$04$i50>>0]|0;
             $463 = ($461<<24>>24)==($462<<24>>24);
             if (!($463)) {
              $469 = 1;
              break L526;
             }
             $464 = (($$02$i52) + -1)|0;
             $465 = (($l$03$i51) + 1|0);
             $466 = (($r$04$i50) + 1|0);
             $467 = ($464|0)==(0);
             if ($467) {
              $469 = 0;
              break;
             } else {
              $$02$i52 = $464;$l$03$i51 = $465;$r$04$i50 = $466;
             }
            }
           }
          } while(0);
          $468 = ($458>>>0)<(2);
          $or$cond346 = $469 | $468;
          if (!($449)) {
           $470 = (($5) + 8|0);
           $471 = HEAP32[$470>>2]|0;
           _free($471);
          }
          $brmerge348 = $or$cond346 | $457;
          if (!($brmerge348)) {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($376);
          }
          $472 = HEAP32[$367>>2]|0;
          $473 = (($472) + -12|0);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($8,$4);
          $474 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($8,0,48720,2)|0);
          ;HEAP32[$7+0>>2]=HEAP32[$474+0>>2]|0;HEAP32[$7+4>>2]=HEAP32[$474+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$474+8>>2]|0;
          ;HEAP32[$474+0>>2]=0|0;HEAP32[$474+4>>2]=0|0;HEAP32[$474+8>>2]=0|0;
          $475 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($7,48856,1)|0);
          ;HEAP32[$6+0>>2]=HEAP32[$475+0>>2]|0;HEAP32[$6+4>>2]=HEAP32[$475+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$475+8>>2]|0;
          ;HEAP32[$475+0>>2]=0|0;HEAP32[$475+4>>2]=0|0;HEAP32[$475+8>>2]=0|0;
          $476 = HEAP8[$376>>0]|0;
          $477 = $476 & 1;
          $478 = ($477<<24>>24)==(0);
          if ($478) {
           $483 = (($376) + 1|0);
           $484 = $476&255;
           $485 = $484 >>> 1;
           $486 = $483;$487 = $485;
          } else {
           $479 = (($$sroa$7) + 20|0);
           $480 = HEAP32[$479>>2]|0;
           $481 = (($$sroa$7) + 16|0);
           $482 = HEAP32[$481>>2]|0;
           $486 = $480;$487 = $482;
          }
          $488 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($6,$486,$487)|0);
          $489 = HEAP8[$488>>0]|0;
          $490 = (($488) + 1|0);
          ;HEAP8[$num1$i+0>>0]=HEAP8[$490+0>>0]|0;HEAP8[$num1$i+1>>0]=HEAP8[$490+1>>0]|0;HEAP8[$num1$i+2>>0]=HEAP8[$490+2>>0]|0;HEAP8[$num1$i+3>>0]=HEAP8[$490+3>>0]|0;HEAP8[$num1$i+4>>0]=HEAP8[$490+4>>0]|0;HEAP8[$num1$i+5>>0]=HEAP8[$490+5>>0]|0;HEAP8[$num1$i+6>>0]=HEAP8[$490+6>>0]|0;
          $491 = (($488) + 8|0);
          $492 = HEAP32[$491>>2]|0;
          ;HEAP32[$488+0>>2]=0|0;HEAP32[$488+4>>2]=0|0;HEAP32[$488+8>>2]=0|0;
          $493 = HEAP8[$473>>0]|0;
          $494 = $493 & 1;
          $495 = ($494<<24>>24)==(0);
          do {
           if ($495) {
            $496 = (($473) + 1|0);
            HEAP8[$496>>0] = 0;
            HEAP8[$473>>0] = 0;
           } else {
            $497 = (($472) + -4|0);
            $498 = HEAP32[$497>>2]|0;
            HEAP8[$498>>0] = 0;
            $499 = (($472) + -8|0);
            HEAP32[$499>>2] = 0;
            $$pre$i$i$i28$i = HEAP8[$473>>0]|0;
            $500 = $$pre$i$i$i28$i & 1;
            $501 = ($500<<24>>24)==(0);
            if ($501) {
             $506 = $$pre$i$i$i28$i;$515 = 10;
            } else {
             $502 = HEAP32[$473>>2]|0;
             $503 = $502 & -2;
             $phitmp$i$i$i$i$i$i30$i = (($503) + -1)|0;
             $504 = $502&255;
             $506 = $504;$515 = $phitmp$i$i$i$i$i$i30$i;
            }
            $505 = $506 & 1;
            $507 = ($505<<24>>24)==(0);
            do {
             if ($507) {
              $508 = $506&255;
              $509 = $508 >>> 1;
              $510 = ($506&255)<(22);
              if ($510) {
               $2784 = 1;$514 = 10;$534 = $509;
               break;
              }
              $511 = (($509) + 16)|0;
              $512 = $511 & 240;
              $phitmp$i2$i$i$i$i$i33$i = (($512) + -1)|0;
              $2784 = 1;$514 = $phitmp$i2$i$i$i$i$i33$i;$534 = $509;
             } else {
              $2784 = 0;$514 = 10;$534 = 0;
             }
            } while(0);
            $513 = ($514|0)==($515|0);
            if ($513) {
             break;
            }
            $516 = ($514|0)==(10);
            if ($516) {
             $521 = (($473) + 1|0);
             $522 = HEAP32[$497>>2]|0;
             if ($2784) {
              $523 = $506&255;
              $524 = $523 >>> 1;
              $525 = (($524) + 1)|0;
              _memcpy(($521|0),($522|0),($525|0))|0;
              _free($522);
             } else {
              $530 = HEAP8[$522>>0]|0;
              HEAP8[$521>>0] = $530;
              _free($522);
             }
             $535 = $534 << 1;
             $536 = $535&255;
             HEAP8[$473>>0] = $536;
             break;
            }
            $517 = ($514>>>0)<=($515>>>0);
            $518 = (($514) + 1)|0;
            $519 = (_malloc($518)|0);
            $520 = ($519|0)==(0|0);
            $or$cond$i$i$i$i$i35$i = $517 & $520;
            if ($or$cond$i$i$i$i$i35$i) {
             break;
            }
            if ($2784) {
             $526 = (($473) + 1|0);
             $527 = $506&255;
             $528 = $527 >>> 1;
             $529 = (($528) + 1)|0;
             _memcpy(($519|0),($526|0),($529|0))|0;
            } else {
             $531 = HEAP32[$497>>2]|0;
             $532 = HEAP8[$531>>0]|0;
             HEAP8[$519>>0] = $532;
             _free($531);
            }
            $533 = $518 | 1;
            HEAP32[$473>>2] = $533;
            HEAP32[$499>>2] = $534;
            HEAP32[$497>>2] = $519;
           }
          } while(0);
          $537 = (($472) + -12|0);
          HEAP8[$537>>0] = $489;
          $538 = (($472) + -11|0);
          ;HEAP8[$538+0>>0]=HEAP8[$num1$i+0>>0]|0;HEAP8[$538+1>>0]=HEAP8[$num1$i+1>>0]|0;HEAP8[$538+2>>0]=HEAP8[$num1$i+2>>0]|0;HEAP8[$538+3>>0]=HEAP8[$num1$i+3>>0]|0;HEAP8[$538+4>>0]=HEAP8[$num1$i+4>>0]|0;HEAP8[$538+5>>0]=HEAP8[$num1$i+5>>0]|0;HEAP8[$538+6>>0]=HEAP8[$num1$i+6>>0]|0;
          $539 = (($472) + -4|0);
          HEAP32[$539>>2] = $492;
          ;HEAP8[$num1$i+0>>0]=0|0;HEAP8[$num1$i+1>>0]=0|0;HEAP8[$num1$i+2>>0]=0|0;HEAP8[$num1$i+3>>0]=0|0;HEAP8[$num1$i+4>>0]=0|0;HEAP8[$num1$i+5>>0]=0|0;HEAP8[$num1$i+6>>0]=0|0;
          $$pre204 = HEAP8[$6>>0]|0;
          $phitmp225 = $$pre204 & 1;
          $phitmp226 = ($phitmp225<<24>>24)==(0);
          if (!($phitmp226)) {
           $540 = (($6) + 8|0);
           $541 = HEAP32[$540>>2]|0;
           _free($541);
          }
          $542 = HEAP8[$7>>0]|0;
          $543 = $542 & 1;
          $544 = ($543<<24>>24)==(0);
          if (!($544)) {
           $545 = (($7) + 8|0);
           $546 = HEAP32[$545>>2]|0;
           _free($546);
          }
          $547 = HEAP8[$8>>0]|0;
          $548 = $547 & 1;
          $549 = ($548<<24>>24)==(0);
          if (!($549)) {
           $550 = (($8) + 8|0);
           $551 = HEAP32[$550>>2]|0;
           _free($551);
          }
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($$sroa$7);
          $$0$i = $365;
         }
        }
       } else {
        $$0$i = $first;
       }
      }
     }
    } else {
     $$0$i = $first;
    }
   } while(0);
   $552 = ($$0$i|0)==($first|0);
   if ($552) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $553 = HEAP32[$db>>2]|0;
   $554 = (($db) + 4|0);
   $555 = HEAP32[$554>>2]|0;
   $556 = ($553|0)==($555|0);
   if ($556) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $557 = (($db) + 16|0);
   $558 = (($555) + -24|0);
   $559 = (($db) + 12|0);
   $560 = HEAP32[$559>>2]|0;
   HEAP32[$10>>2] = $560;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($9,$558,$10);
   $561 = (($db) + 20|0);
   $562 = HEAP32[$561>>2]|0;
   $563 = (($db) + 24|0);
   $564 = HEAP32[$563>>2]|0;
   $565 = ($562>>>0)<($564>>>0);
   if ($565) {
    $566 = ($562|0)==(0|0);
    if ($566) {
     $578 = 0;
    } else {
     $567 = (($562) + 4|0);
     $568 = (($9) + 12|0);
     $569 = HEAP32[$568>>2]|0;
     $570 = (($562) + 8|0);
     $571 = (($562) + 12|0);
     HEAP32[$571>>2] = $569;
     $572 = HEAP32[$9>>2]|0;
     HEAP32[$562>>2] = $572;
     $573 = (($9) + 4|0);
     $574 = HEAP32[$573>>2]|0;
     HEAP32[$567>>2] = $574;
     $575 = (($9) + 8|0);
     $576 = HEAP32[$575>>2]|0;
     HEAP32[$570>>2] = $576;
     HEAP32[$575>>2] = 0;
     HEAP32[$573>>2] = 0;
     HEAP32[$9>>2] = 0;
     $$pre$i76 = HEAP32[$561>>2]|0;
     $578 = $$pre$i76;
    }
    $577 = (($578) + 16|0);
    HEAP32[$561>>2] = $577;
   } else {
    $579 = (($db) + 28|0);
    $580 = HEAP32[$557>>2]|0;
    $581 = $562;
    $582 = $580;
    $583 = (($581) - ($582))|0;
    $584 = $583 >> 4;
    $585 = (($584) + 1)|0;
    $586 = ($585|0)<(0);
    if ($586) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $587 = $564;
    $588 = (($587) - ($582))|0;
    $589 = $588 >> 4;
    $590 = ($589>>>0)<(1073741823);
    if ($590) {
     $591 = $588 >> 3;
     $592 = ($591>>>0)<($585>>>0);
     $593 = $592 ? $585 : $591;
     $$0$i$i$i78 = $593;
    } else {
     $$0$i$i$i78 = 2147483647;
    }
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i78,$584,$579);
    $594 = (($__v$i$i$i) + 8|0);
    $595 = HEAP32[$594>>2]|0;
    $596 = ($595|0)==(0|0);
    if (!($596)) {
     $597 = (($595) + 4|0);
     $598 = (($9) + 12|0);
     $599 = HEAP32[$598>>2]|0;
     $600 = (($595) + 8|0);
     $601 = (($595) + 12|0);
     HEAP32[$601>>2] = $599;
     $602 = HEAP32[$9>>2]|0;
     HEAP32[$595>>2] = $602;
     $603 = (($9) + 4|0);
     $604 = HEAP32[$603>>2]|0;
     HEAP32[$597>>2] = $604;
     $605 = (($9) + 8|0);
     $606 = HEAP32[$605>>2]|0;
     HEAP32[$600>>2] = $606;
     HEAP32[$605>>2] = 0;
     HEAP32[$603>>2] = 0;
     HEAP32[$9>>2] = 0;
    }
    $607 = (($595) + 16|0);
    HEAP32[$594>>2] = $607;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($557,$__v$i$i$i);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
   }
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($9);
   $$0 = $$0$i;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 67:  {
   $608 = (($first) + 1|0);
   $609 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($608,$last,$db)|0);
   $610 = ($609|0)==($608|0);
   if ($610) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $611 = HEAP32[$db>>2]|0;
   $612 = (($db) + 4|0);
   $613 = HEAP32[$612>>2]|0;
   $614 = ($611|0)==($613|0);
   if ($614) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $615 = (($613) + -24|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($615,48688,8)|0);
   $616 = (($db) + 16|0);
   $617 = HEAP32[$612>>2]|0;
   $618 = (($617) + -24|0);
   $619 = (($db) + 12|0);
   $620 = HEAP32[$619>>2]|0;
   HEAP32[$12>>2] = $620;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($11,$618,$12);
   $621 = (($db) + 20|0);
   $622 = HEAP32[$621>>2]|0;
   $623 = (($db) + 24|0);
   $624 = HEAP32[$623>>2]|0;
   $625 = ($622>>>0)<($624>>>0);
   if ($625) {
    $626 = ($622|0)==(0|0);
    if ($626) {
     $638 = 0;
    } else {
     $627 = (($622) + 4|0);
     $628 = (($11) + 12|0);
     $629 = HEAP32[$628>>2]|0;
     $630 = (($622) + 8|0);
     $631 = (($622) + 12|0);
     HEAP32[$631>>2] = $629;
     $632 = HEAP32[$11>>2]|0;
     HEAP32[$622>>2] = $632;
     $633 = (($11) + 4|0);
     $634 = HEAP32[$633>>2]|0;
     HEAP32[$627>>2] = $634;
     $635 = (($11) + 8|0);
     $636 = HEAP32[$635>>2]|0;
     HEAP32[$630>>2] = $636;
     HEAP32[$635>>2] = 0;
     HEAP32[$633>>2] = 0;
     HEAP32[$11>>2] = 0;
     $$pre$i84 = HEAP32[$621>>2]|0;
     $638 = $$pre$i84;
    }
    $637 = (($638) + 16|0);
    HEAP32[$621>>2] = $637;
   } else {
    $639 = (($db) + 28|0);
    $640 = HEAP32[$616>>2]|0;
    $641 = $622;
    $642 = $640;
    $643 = (($641) - ($642))|0;
    $644 = $643 >> 4;
    $645 = (($644) + 1)|0;
    $646 = ($645|0)<(0);
    if ($646) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $647 = $624;
    $648 = (($647) - ($642))|0;
    $649 = $648 >> 4;
    $650 = ($649>>>0)<(1073741823);
    if ($650) {
     $651 = $648 >> 3;
     $652 = ($651>>>0)<($645>>>0);
     $653 = $652 ? $645 : $651;
     $$0$i$i$i86 = $653;
    } else {
     $$0$i$i$i86 = 2147483647;
    }
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i86,$644,$639);
    $654 = (($__v$i$i$i) + 8|0);
    $655 = HEAP32[$654>>2]|0;
    $656 = ($655|0)==(0|0);
    if (!($656)) {
     $657 = (($655) + 4|0);
     $658 = (($11) + 12|0);
     $659 = HEAP32[$658>>2]|0;
     $660 = (($655) + 8|0);
     $661 = (($655) + 12|0);
     HEAP32[$661>>2] = $659;
     $662 = HEAP32[$11>>2]|0;
     HEAP32[$655>>2] = $662;
     $663 = (($11) + 4|0);
     $664 = HEAP32[$663>>2]|0;
     HEAP32[$657>>2] = $664;
     $665 = (($11) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     HEAP32[$660>>2] = $666;
     HEAP32[$665>>2] = 0;
     HEAP32[$663>>2] = 0;
     HEAP32[$11>>2] = 0;
    }
    $667 = (($655) + 16|0);
    HEAP32[$654>>2] = $667;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($616,$__v$i$i$i);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
   }
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($11);
   $$0 = $609;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 71:  {
   $829 = (($first) + 1|0);
   $830 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($829,$last,$db)|0);
   $831 = ($830|0)==($829|0);
   if ($831) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $832 = HEAP32[$db>>2]|0;
   $833 = (($db) + 4|0);
   $834 = HEAP32[$833>>2]|0;
   $835 = ($832|0)==($834|0);
   if ($835) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $836 = (($834) + -24|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($836,48704,10)|0);
   $837 = (($db) + 16|0);
   $838 = HEAP32[$833>>2]|0;
   $839 = (($838) + -24|0);
   $840 = (($db) + 12|0);
   $841 = HEAP32[$840>>2]|0;
   HEAP32[$16>>2] = $841;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($15,$839,$16);
   $842 = (($db) + 20|0);
   $843 = HEAP32[$842>>2]|0;
   $844 = (($db) + 24|0);
   $845 = HEAP32[$844>>2]|0;
   $846 = ($843>>>0)<($845>>>0);
   if ($846) {
    $847 = ($843|0)==(0|0);
    if ($847) {
     $859 = 0;
    } else {
     $848 = (($843) + 4|0);
     $849 = (($15) + 12|0);
     $850 = HEAP32[$849>>2]|0;
     $851 = (($843) + 8|0);
     $852 = (($843) + 12|0);
     HEAP32[$852>>2] = $850;
     $853 = HEAP32[$15>>2]|0;
     HEAP32[$843>>2] = $853;
     $854 = (($15) + 4|0);
     $855 = HEAP32[$854>>2]|0;
     HEAP32[$848>>2] = $855;
     $856 = (($15) + 8|0);
     $857 = HEAP32[$856>>2]|0;
     HEAP32[$851>>2] = $857;
     HEAP32[$856>>2] = 0;
     HEAP32[$854>>2] = 0;
     HEAP32[$15>>2] = 0;
     $$pre$i100 = HEAP32[$842>>2]|0;
     $859 = $$pre$i100;
    }
    $858 = (($859) + 16|0);
    HEAP32[$842>>2] = $858;
   } else {
    $860 = (($db) + 28|0);
    $861 = HEAP32[$837>>2]|0;
    $862 = $843;
    $863 = $861;
    $864 = (($862) - ($863))|0;
    $865 = $864 >> 4;
    $866 = (($865) + 1)|0;
    $867 = ($866|0)<(0);
    if ($867) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $868 = $845;
    $869 = (($868) - ($863))|0;
    $870 = $869 >> 4;
    $871 = ($870>>>0)<(1073741823);
    if ($871) {
     $872 = $869 >> 3;
     $873 = ($872>>>0)<($866>>>0);
     $874 = $873 ? $866 : $872;
     $$0$i$i$i102 = $874;
    } else {
     $$0$i$i$i102 = 2147483647;
    }
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i102,$865,$860);
    $875 = (($__v$i$i$i) + 8|0);
    $876 = HEAP32[$875>>2]|0;
    $877 = ($876|0)==(0|0);
    if (!($877)) {
     $878 = (($876) + 4|0);
     $879 = (($15) + 12|0);
     $880 = HEAP32[$879>>2]|0;
     $881 = (($876) + 8|0);
     $882 = (($876) + 12|0);
     HEAP32[$882>>2] = $880;
     $883 = HEAP32[$15>>2]|0;
     HEAP32[$876>>2] = $883;
     $884 = (($15) + 4|0);
     $885 = HEAP32[$884>>2]|0;
     HEAP32[$878>>2] = $885;
     $886 = (($15) + 8|0);
     $887 = HEAP32[$886>>2]|0;
     HEAP32[$881>>2] = $887;
     HEAP32[$886>>2] = 0;
     HEAP32[$884>>2] = 0;
     HEAP32[$15>>2] = 0;
    }
    $888 = (($876) + 16|0);
    HEAP32[$875>>2] = $888;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($837,$__v$i$i$i);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
   }
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($15);
   $$0 = $830;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 77:  {
   $889 = ($197<<24>>24)==(77);
   if ($889) {
    $890 = (($first) + 1|0);
    $891 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($890,$last,$db)|0);
    $892 = ($891|0)==($890|0);
    if ($892) {
     $$08$i = $first;
    } else {
     $893 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($891,$last,$db)|0);
     $894 = ($893|0)==($891|0);
     if ($894) {
      $$08$i = $first;
     } else {
      $895 = (($db) + 4|0);
      $896 = HEAP32[$895>>2]|0;
      $897 = HEAP32[$db>>2]|0;
      $898 = $896;
      $899 = $897;
      $900 = (($898) - ($899))|0;
      $901 = (($900|0) / 24)&-1;
      $902 = ($901>>>0)<(2);
      if ($902) {
       $$08$i = $first;
      } else {
       $903 = (($896) + -24|0);
       ;HEAP32[$__v$i$i$i+0>>2]=HEAP32[$903+0>>2]|0;HEAP32[$__v$i$i$i+4>>2]=HEAP32[$903+4>>2]|0;HEAP32[$__v$i$i$i+8>>2]=HEAP32[$903+8>>2]|0;
       ;HEAP32[$903+0>>2]=0|0;HEAP32[$903+4>>2]=0|0;HEAP32[$903+8>>2]=0|0;
       $904 = (($__v$i$i$i) + 12|0);
       $905 = (($896) + -12|0);
       ;HEAP32[$904+0>>2]=HEAP32[$905+0>>2]|0;HEAP32[$904+4>>2]=HEAP32[$905+4>>2]|0;HEAP32[$904+8>>2]=HEAP32[$905+8>>2]|0;
       ;HEAP32[$905+0>>2]=0|0;HEAP32[$905+4>>2]=0|0;HEAP32[$905+8>>2]=0|0;
       $906 = HEAP32[$895>>2]|0;
       $907 = (($906) + -24|0);
       $909 = $906;
       while(1) {
        $908 = (($909) + -24|0);
        HEAP32[$895>>2] = $908;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($908);
        $910 = HEAP32[$895>>2]|0;
        $911 = ($910|0)==($907|0);
        if ($911) {
         break;
        } else {
         $909 = $910;
        }
       }
       $912 = (($906) + -48|0);
       ;HEAP32[$0+0>>2]=HEAP32[$912+0>>2]|0;HEAP32[$0+4>>2]=HEAP32[$912+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$912+8>>2]|0;
       ;HEAP32[$912+0>>2]=0|0;HEAP32[$912+4>>2]=0|0;HEAP32[$912+8>>2]=0|0;
       $913 = (($0) + 12|0);
       $914 = (($906) + -36|0);
       ;HEAP32[$913+0>>2]=HEAP32[$914+0>>2]|0;HEAP32[$913+4>>2]=HEAP32[$914+4>>2]|0;HEAP32[$913+8>>2]=HEAP32[$914+8>>2]|0;
       ;HEAP32[$914+0>>2]=0|0;HEAP32[$914+4>>2]=0|0;HEAP32[$914+8>>2]=0|0;
       $915 = HEAP8[$904>>0]|0;
       $916 = $915 & 1;
       $917 = ($916<<24>>24)==(0);
       if ($917) {
        $920 = (($904) + 1|0);
        $922 = $920;
       } else {
        $918 = (($__v$i$i$i) + 20|0);
        $919 = HEAP32[$918>>2]|0;
        $922 = $919;
       }
       $921 = HEAP8[$922>>0]|0;
       $923 = ($921<<24>>24)==(40);
       $924 = HEAP32[$895>>2]|0;
       $925 = (($924) + -24|0);
       if ($923) {
        $926 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($__v$i$i$i,48744,1)|0);
        ;HEAP32[$3+0>>2]=HEAP32[$926+0>>2]|0;HEAP32[$3+4>>2]=HEAP32[$926+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$926+8>>2]|0;
        ;HEAP32[$926+0>>2]=0|0;HEAP32[$926+4>>2]=0|0;HEAP32[$926+8>>2]=0|0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($$sroa$7,$0);
        $927 = HEAP8[$$sroa$7>>0]|0;
        $928 = $927 & 1;
        $929 = ($928<<24>>24)==(0);
        if ($929) {
         $934 = (($$sroa$7) + 1|0);
         $935 = $927&255;
         $936 = $935 >>> 1;
         $937 = $934;$938 = $936;
        } else {
         $930 = (($$sroa$7) + 8|0);
         $931 = HEAP32[$930>>2]|0;
         $932 = (($$sroa$7) + 4|0);
         $933 = HEAP32[$932>>2]|0;
         $937 = $931;$938 = $933;
        }
        $939 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($3,$937,$938)|0);
        ;HEAP32[$2+0>>2]=HEAP32[$939+0>>2]|0;HEAP32[$2+4>>2]=HEAP32[$939+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$939+8>>2]|0;
        ;HEAP32[$939+0>>2]=0|0;HEAP32[$939+4>>2]=0|0;HEAP32[$939+8>>2]=0|0;
        $940 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($2,50632,3)|0);
        $941 = HEAP8[$940>>0]|0;
        $942 = (($940) + 1|0);
        ;HEAP8[$1+0>>0]=HEAP8[$942+0>>0]|0;HEAP8[$1+1>>0]=HEAP8[$942+1>>0]|0;HEAP8[$1+2>>0]=HEAP8[$942+2>>0]|0;HEAP8[$1+3>>0]=HEAP8[$942+3>>0]|0;HEAP8[$1+4>>0]=HEAP8[$942+4>>0]|0;HEAP8[$1+5>>0]=HEAP8[$942+5>>0]|0;HEAP8[$1+6>>0]=HEAP8[$942+6>>0]|0;
        $943 = (($940) + 8|0);
        $944 = HEAP32[$943>>2]|0;
        ;HEAP32[$940+0>>2]=0|0;HEAP32[$940+4>>2]=0|0;HEAP32[$940+8>>2]=0|0;
        $945 = HEAP8[$925>>0]|0;
        $946 = $945 & 1;
        $947 = ($946<<24>>24)==(0);
        do {
         if ($947) {
          $948 = (($925) + 1|0);
          HEAP8[$948>>0] = 0;
          HEAP8[$925>>0] = 0;
         } else {
          $949 = (($924) + -16|0);
          $950 = HEAP32[$949>>2]|0;
          HEAP8[$950>>0] = 0;
          $951 = (($924) + -20|0);
          HEAP32[$951>>2] = 0;
          $$pre$i$i$i$i = HEAP8[$925>>0]|0;
          $952 = $$pre$i$i$i$i & 1;
          $953 = ($952<<24>>24)==(0);
          if ($953) {
           $958 = $$pre$i$i$i$i;$967 = 10;
          } else {
           $954 = HEAP32[$925>>2]|0;
           $955 = $954 & -2;
           $phitmp$i$i$i$i$i$i$i = (($955) + -1)|0;
           $956 = $954&255;
           $958 = $956;$967 = $phitmp$i$i$i$i$i$i$i;
          }
          $957 = $958 & 1;
          $959 = ($957<<24>>24)==(0);
          if ($959) {
           $960 = $958&255;
           $961 = $960 >>> 1;
           $962 = ($958&255)<(22);
           if ($962) {
            $2785 = 1;$966 = 10;$986 = $961;
           } else {
            $963 = (($961) + 16)|0;
            $964 = $963 & 240;
            $phitmp$i2$i$i$i$i$i$i = (($964) + -1)|0;
            $2785 = 1;$966 = $phitmp$i2$i$i$i$i$i$i;$986 = $961;
           }
          } else {
           $2785 = 0;$966 = 10;$986 = 0;
          }
          $965 = ($966|0)==($967|0);
          if (!($965)) {
           $968 = ($966|0)==(10);
           if ($968) {
            $973 = (($925) + 1|0);
            $974 = HEAP32[$949>>2]|0;
            if ($2785) {
             $975 = $958&255;
             $976 = $975 >>> 1;
             $977 = (($976) + 1)|0;
             _memcpy(($973|0),($974|0),($977|0))|0;
             _free($974);
            } else {
             $982 = HEAP8[$974>>0]|0;
             HEAP8[$973>>0] = $982;
             _free($974);
            }
            $987 = $986 << 1;
            $988 = $987&255;
            HEAP8[$925>>0] = $988;
            break;
           }
           $969 = ($966>>>0)<=($967>>>0);
           $970 = (($966) + 1)|0;
           $971 = (_malloc($970)|0);
           $972 = ($971|0)==(0|0);
           $or$cond$i$i$i$i$i$i = $969 & $972;
           if (!($or$cond$i$i$i$i$i$i)) {
            if ($2785) {
             $978 = (($925) + 1|0);
             $979 = $958&255;
             $980 = $979 >>> 1;
             $981 = (($980) + 1)|0;
             _memcpy(($971|0),($978|0),($981|0))|0;
            } else {
             $983 = HEAP32[$949>>2]|0;
             $984 = HEAP8[$983>>0]|0;
             HEAP8[$971>>0] = $984;
             _free($983);
            }
            $985 = $970 | 1;
            HEAP32[$925>>2] = $985;
            HEAP32[$951>>2] = $986;
            HEAP32[$949>>2] = $971;
           }
          }
         }
        } while(0);
        $989 = (($924) + -24|0);
        HEAP8[$989>>0] = $941;
        $990 = (($924) + -23|0);
        ;HEAP8[$990+0>>0]=HEAP8[$1+0>>0]|0;HEAP8[$990+1>>0]=HEAP8[$1+1>>0]|0;HEAP8[$990+2>>0]=HEAP8[$1+2>>0]|0;HEAP8[$990+3>>0]=HEAP8[$1+3>>0]|0;HEAP8[$990+4>>0]=HEAP8[$1+4>>0]|0;HEAP8[$990+5>>0]=HEAP8[$1+5>>0]|0;HEAP8[$990+6>>0]=HEAP8[$1+6>>0]|0;
        $991 = (($924) + -16|0);
        HEAP32[$991>>2] = $944;
        ;HEAP8[$1+0>>0]=0|0;HEAP8[$1+1>>0]=0|0;HEAP8[$1+2>>0]=0|0;HEAP8[$1+3>>0]=0|0;HEAP8[$1+4>>0]=0|0;HEAP8[$1+5>>0]=0|0;HEAP8[$1+6>>0]=0|0;
        $$pre205 = HEAP8[$2>>0]|0;
        $phitmp223 = $$pre205 & 1;
        $phitmp224 = ($phitmp223<<24>>24)==(0);
        if (!($phitmp224)) {
         $992 = (($2) + 8|0);
         $993 = HEAP32[$992>>2]|0;
         _free($993);
        }
        if (!($929)) {
         $994 = (($$sroa$7) + 8|0);
         $995 = HEAP32[$994>>2]|0;
         _free($995);
        }
        $996 = HEAP8[$3>>0]|0;
        $997 = $996 & 1;
        $998 = ($997<<24>>24)==(0);
        if (!($998)) {
         $999 = (($3) + 8|0);
         $1000 = HEAP32[$999>>2]|0;
         _free($1000);
        }
        $1001 = HEAP32[$895>>2]|0;
        $1002 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($904,0,48736,1)|0);
        $1003 = HEAP8[$1002>>0]|0;
        $1004 = (($1002) + 1|0);
        ;HEAP8[$4+0>>0]=HEAP8[$1004+0>>0]|0;HEAP8[$4+1>>0]=HEAP8[$1004+1>>0]|0;HEAP8[$4+2>>0]=HEAP8[$1004+2>>0]|0;HEAP8[$4+3>>0]=HEAP8[$1004+3>>0]|0;HEAP8[$4+4>>0]=HEAP8[$1004+4>>0]|0;HEAP8[$4+5>>0]=HEAP8[$1004+5>>0]|0;HEAP8[$4+6>>0]=HEAP8[$1004+6>>0]|0;
        $1005 = (($1002) + 8|0);
        $1006 = HEAP32[$1005>>2]|0;
        ;HEAP32[$1002+0>>2]=0|0;HEAP32[$1002+4>>2]=0|0;HEAP32[$1002+8>>2]=0|0;
        $1007 = (($1001) + -12|0);
        $1008 = HEAP8[$1007>>0]|0;
        $1009 = $1008 & 1;
        $1010 = ($1009<<24>>24)==(0);
        do {
         if ($1010) {
          $1011 = (($1007) + 1|0);
          HEAP8[$1011>>0] = 0;
          HEAP8[$1007>>0] = 0;
         } else {
          $1012 = (($1001) + -4|0);
          $1013 = HEAP32[$1012>>2]|0;
          HEAP8[$1013>>0] = 0;
          $1014 = (($1001) + -8|0);
          HEAP32[$1014>>2] = 0;
          $$pre$i$i$i12$i = HEAP8[$1007>>0]|0;
          $1015 = $$pre$i$i$i12$i & 1;
          $1016 = ($1015<<24>>24)==(0);
          if ($1016) {
           $1021 = $$pre$i$i$i12$i;$1030 = 10;
          } else {
           $1017 = HEAP32[$1007>>2]|0;
           $1018 = $1017 & -2;
           $phitmp$i$i$i$i$i$i14$i = (($1018) + -1)|0;
           $1019 = $1017&255;
           $1021 = $1019;$1030 = $phitmp$i$i$i$i$i$i14$i;
          }
          $1020 = $1021 & 1;
          $1022 = ($1020<<24>>24)==(0);
          do {
           if ($1022) {
            $1023 = $1021&255;
            $1024 = $1023 >>> 1;
            $1025 = ($1021&255)<(22);
            if ($1025) {
             $1029 = 10;$1049 = $1024;$2786 = 1;
             break;
            }
            $1026 = (($1024) + 16)|0;
            $1027 = $1026 & 240;
            $phitmp$i2$i$i$i$i$i17$i = (($1027) + -1)|0;
            $1029 = $phitmp$i2$i$i$i$i$i17$i;$1049 = $1024;$2786 = 1;
           } else {
            $1029 = 10;$1049 = 0;$2786 = 0;
           }
          } while(0);
          $1028 = ($1029|0)==($1030|0);
          if ($1028) {
           break;
          }
          $1031 = ($1029|0)==(10);
          if ($1031) {
           $1036 = (($1007) + 1|0);
           $1037 = HEAP32[$1012>>2]|0;
           if ($2786) {
            $1038 = $1021&255;
            $1039 = $1038 >>> 1;
            $1040 = (($1039) + 1)|0;
            _memcpy(($1036|0),($1037|0),($1040|0))|0;
            _free($1037);
           } else {
            $1045 = HEAP8[$1037>>0]|0;
            HEAP8[$1036>>0] = $1045;
            _free($1037);
           }
           $1050 = $1049 << 1;
           $1051 = $1050&255;
           HEAP8[$1007>>0] = $1051;
           break;
          }
          $1032 = ($1029>>>0)<=($1030>>>0);
          $1033 = (($1029) + 1)|0;
          $1034 = (_malloc($1033)|0);
          $1035 = ($1034|0)==(0|0);
          $or$cond$i$i$i$i$i19$i = $1032 & $1035;
          if ($or$cond$i$i$i$i$i19$i) {
           break;
          }
          if ($2786) {
           $1041 = (($1007) + 1|0);
           $1042 = $1021&255;
           $1043 = $1042 >>> 1;
           $1044 = (($1043) + 1)|0;
           _memcpy(($1034|0),($1041|0),($1044|0))|0;
          } else {
           $1046 = HEAP32[$1012>>2]|0;
           $1047 = HEAP8[$1046>>0]|0;
           HEAP8[$1034>>0] = $1047;
           _free($1046);
          }
          $1048 = $1033 | 1;
          HEAP32[$1007>>2] = $1048;
          HEAP32[$1014>>2] = $1049;
          HEAP32[$1012>>2] = $1034;
         }
        } while(0);
        $1052 = (($1001) + -12|0);
        HEAP8[$1052>>0] = $1003;
        $1053 = (($1001) + -11|0);
        ;HEAP8[$1053+0>>0]=HEAP8[$4+0>>0]|0;HEAP8[$1053+1>>0]=HEAP8[$4+1>>0]|0;HEAP8[$1053+2>>0]=HEAP8[$4+2>>0]|0;HEAP8[$1053+3>>0]=HEAP8[$4+3>>0]|0;HEAP8[$1053+4>>0]=HEAP8[$4+4>>0]|0;HEAP8[$1053+5>>0]=HEAP8[$4+5>>0]|0;HEAP8[$1053+6>>0]=HEAP8[$4+6>>0]|0;
        $1054 = (($1001) + -4|0);
        HEAP32[$1054>>2] = $1006;
        ;HEAP8[$4+0>>0]=0|0;HEAP8[$4+1>>0]=0|0;HEAP8[$4+2>>0]=0|0;HEAP8[$4+3>>0]=0|0;HEAP8[$4+4>>0]=0|0;HEAP8[$4+5>>0]=0|0;HEAP8[$4+6>>0]=0|0;
       } else {
        $1055 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($__v$i$i$i,48816,1)|0);
        ;HEAP32[$6+0>>2]=HEAP32[$1055+0>>2]|0;HEAP32[$6+4>>2]=HEAP32[$1055+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$1055+8>>2]|0;
        ;HEAP32[$1055+0>>2]=0|0;HEAP32[$1055+4>>2]=0|0;HEAP32[$1055+8>>2]=0|0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($7,$0);
        $1056 = HEAP8[$7>>0]|0;
        $1057 = $1056 & 1;
        $1058 = ($1057<<24>>24)==(0);
        if ($1058) {
         $1063 = (($7) + 1|0);
         $1064 = $1056&255;
         $1065 = $1064 >>> 1;
         $1066 = $1063;$1067 = $1065;
        } else {
         $1059 = (($7) + 8|0);
         $1060 = HEAP32[$1059>>2]|0;
         $1061 = (($7) + 4|0);
         $1062 = HEAP32[$1061>>2]|0;
         $1066 = $1060;$1067 = $1062;
        }
        $1068 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($6,$1066,$1067)|0);
        ;HEAP32[$num1$i+0>>2]=HEAP32[$1068+0>>2]|0;HEAP32[$num1$i+4>>2]=HEAP32[$1068+4>>2]|0;HEAP32[$num1$i+8>>2]=HEAP32[$1068+8>>2]|0;
        ;HEAP32[$1068+0>>2]=0|0;HEAP32[$1068+4>>2]=0|0;HEAP32[$1068+8>>2]=0|0;
        $1069 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($num1$i,50632,3)|0);
        $1070 = HEAP8[$1069>>0]|0;
        $1071 = (($1069) + 1|0);
        ;HEAP8[$5+0>>0]=HEAP8[$1071+0>>0]|0;HEAP8[$5+1>>0]=HEAP8[$1071+1>>0]|0;HEAP8[$5+2>>0]=HEAP8[$1071+2>>0]|0;HEAP8[$5+3>>0]=HEAP8[$1071+3>>0]|0;HEAP8[$5+4>>0]=HEAP8[$1071+4>>0]|0;HEAP8[$5+5>>0]=HEAP8[$1071+5>>0]|0;HEAP8[$5+6>>0]=HEAP8[$1071+6>>0]|0;
        $1072 = (($1069) + 8|0);
        $1073 = HEAP32[$1072>>2]|0;
        ;HEAP32[$1069+0>>2]=0|0;HEAP32[$1069+4>>2]=0|0;HEAP32[$1069+8>>2]=0|0;
        $1074 = HEAP8[$925>>0]|0;
        $1075 = $1074 & 1;
        $1076 = ($1075<<24>>24)==(0);
        do {
         if ($1076) {
          $1077 = (($925) + 1|0);
          HEAP8[$1077>>0] = 0;
          HEAP8[$925>>0] = 0;
         } else {
          $1078 = (($924) + -16|0);
          $1079 = HEAP32[$1078>>2]|0;
          HEAP8[$1079>>0] = 0;
          $1080 = (($924) + -20|0);
          HEAP32[$1080>>2] = 0;
          $$pre$i$i$i32$i = HEAP8[$925>>0]|0;
          $1081 = $$pre$i$i$i32$i & 1;
          $1082 = ($1081<<24>>24)==(0);
          if ($1082) {
           $1087 = $$pre$i$i$i32$i;$1096 = 10;
          } else {
           $1083 = HEAP32[$925>>2]|0;
           $1084 = $1083 & -2;
           $phitmp$i$i$i$i$i$i34$i = (($1084) + -1)|0;
           $1085 = $1083&255;
           $1087 = $1085;$1096 = $phitmp$i$i$i$i$i$i34$i;
          }
          $1086 = $1087 & 1;
          $1088 = ($1086<<24>>24)==(0);
          if ($1088) {
           $1089 = $1087&255;
           $1090 = $1089 >>> 1;
           $1091 = ($1087&255)<(22);
           if ($1091) {
            $1095 = 10;$1115 = $1090;$2787 = 1;
           } else {
            $1092 = (($1090) + 16)|0;
            $1093 = $1092 & 240;
            $phitmp$i2$i$i$i$i$i37$i = (($1093) + -1)|0;
            $1095 = $phitmp$i2$i$i$i$i$i37$i;$1115 = $1090;$2787 = 1;
           }
          } else {
           $1095 = 10;$1115 = 0;$2787 = 0;
          }
          $1094 = ($1095|0)==($1096|0);
          if (!($1094)) {
           $1097 = ($1095|0)==(10);
           if ($1097) {
            $1102 = (($925) + 1|0);
            $1103 = HEAP32[$1078>>2]|0;
            if ($2787) {
             $1104 = $1087&255;
             $1105 = $1104 >>> 1;
             $1106 = (($1105) + 1)|0;
             _memcpy(($1102|0),($1103|0),($1106|0))|0;
             _free($1103);
            } else {
             $1111 = HEAP8[$1103>>0]|0;
             HEAP8[$1102>>0] = $1111;
             _free($1103);
            }
            $1116 = $1115 << 1;
            $1117 = $1116&255;
            HEAP8[$925>>0] = $1117;
            break;
           }
           $1098 = ($1095>>>0)<=($1096>>>0);
           $1099 = (($1095) + 1)|0;
           $1100 = (_malloc($1099)|0);
           $1101 = ($1100|0)==(0|0);
           $or$cond$i$i$i$i$i39$i = $1098 & $1101;
           if (!($or$cond$i$i$i$i$i39$i)) {
            if ($2787) {
             $1107 = (($925) + 1|0);
             $1108 = $1087&255;
             $1109 = $1108 >>> 1;
             $1110 = (($1109) + 1)|0;
             _memcpy(($1100|0),($1107|0),($1110|0))|0;
            } else {
             $1112 = HEAP32[$1078>>2]|0;
             $1113 = HEAP8[$1112>>0]|0;
             HEAP8[$1100>>0] = $1113;
             _free($1112);
            }
            $1114 = $1099 | 1;
            HEAP32[$925>>2] = $1114;
            HEAP32[$1080>>2] = $1115;
            HEAP32[$1078>>2] = $1100;
           }
          }
         }
        } while(0);
        $1118 = (($924) + -24|0);
        HEAP8[$1118>>0] = $1070;
        $1119 = (($924) + -23|0);
        ;HEAP8[$1119+0>>0]=HEAP8[$5+0>>0]|0;HEAP8[$1119+1>>0]=HEAP8[$5+1>>0]|0;HEAP8[$1119+2>>0]=HEAP8[$5+2>>0]|0;HEAP8[$1119+3>>0]=HEAP8[$5+3>>0]|0;HEAP8[$1119+4>>0]=HEAP8[$5+4>>0]|0;HEAP8[$1119+5>>0]=HEAP8[$5+5>>0]|0;HEAP8[$1119+6>>0]=HEAP8[$5+6>>0]|0;
        $1120 = (($924) + -16|0);
        HEAP32[$1120>>2] = $1073;
        ;HEAP8[$5+0>>0]=0|0;HEAP8[$5+1>>0]=0|0;HEAP8[$5+2>>0]=0|0;HEAP8[$5+3>>0]=0|0;HEAP8[$5+4>>0]=0|0;HEAP8[$5+5>>0]=0|0;HEAP8[$5+6>>0]=0|0;
        $$pre206 = HEAP8[$num1$i>>0]|0;
        $phitmp221 = $$pre206 & 1;
        $phitmp222 = ($phitmp221<<24>>24)==(0);
        if (!($phitmp222)) {
         $1121 = (($num1$i) + 8|0);
         $1122 = HEAP32[$1121>>2]|0;
         _free($1122);
        }
        if (!($1058)) {
         $1123 = (($7) + 8|0);
         $1124 = HEAP32[$1123>>2]|0;
         _free($1124);
        }
        $1125 = HEAP8[$6>>0]|0;
        $1126 = $1125 & 1;
        $1127 = ($1126<<24>>24)==(0);
        if (!($1127)) {
         $1128 = (($6) + 8|0);
         $1129 = HEAP32[$1128>>2]|0;
         _free($1129);
        }
        $1130 = HEAP32[$895>>2]|0;
        $1131 = (($1130) + -12|0);
        $1132 = HEAP8[$1131>>0]|0;
        $1133 = $1132 & 1;
        $1134 = ($1133<<24>>24)==(0);
        do {
         if ($1134) {
          $1135 = (($1131) + 1|0);
          HEAP8[$1135>>0] = 0;
          HEAP8[$1131>>0] = 0;
         } else {
          $1136 = (($1130) + -4|0);
          $1137 = HEAP32[$1136>>2]|0;
          HEAP8[$1137>>0] = 0;
          $1138 = (($1130) + -8|0);
          HEAP32[$1138>>2] = 0;
          $$pre$i$i$i48$i = HEAP8[$1131>>0]|0;
          $1139 = $$pre$i$i$i48$i & 1;
          $1140 = ($1139<<24>>24)==(0);
          if ($1140) {
           $1145 = $$pre$i$i$i48$i;$1154 = 10;
          } else {
           $1141 = HEAP32[$1131>>2]|0;
           $1142 = $1141 & -2;
           $phitmp$i$i$i$i$i$i50$i = (($1142) + -1)|0;
           $1143 = $1141&255;
           $1145 = $1143;$1154 = $phitmp$i$i$i$i$i$i50$i;
          }
          $1144 = $1145 & 1;
          $1146 = ($1144<<24>>24)==(0);
          do {
           if ($1146) {
            $1147 = $1145&255;
            $1148 = $1147 >>> 1;
            $1149 = ($1145&255)<(22);
            if ($1149) {
             $1153 = 10;$1173 = $1148;$2788 = 1;
             break;
            }
            $1150 = (($1148) + 16)|0;
            $1151 = $1150 & 240;
            $phitmp$i2$i$i$i$i$i53$i = (($1151) + -1)|0;
            $1153 = $phitmp$i2$i$i$i$i$i53$i;$1173 = $1148;$2788 = 1;
           } else {
            $1153 = 10;$1173 = 0;$2788 = 0;
           }
          } while(0);
          $1152 = ($1153|0)==($1154|0);
          if ($1152) {
           break;
          }
          $1155 = ($1153|0)==(10);
          if ($1155) {
           $1160 = (($1131) + 1|0);
           $1161 = HEAP32[$1136>>2]|0;
           if ($2788) {
            $1162 = $1145&255;
            $1163 = $1162 >>> 1;
            $1164 = (($1163) + 1)|0;
            _memcpy(($1160|0),($1161|0),($1164|0))|0;
            _free($1161);
           } else {
            $1169 = HEAP8[$1161>>0]|0;
            HEAP8[$1160>>0] = $1169;
            _free($1161);
           }
           $1174 = $1173 << 1;
           $1175 = $1174&255;
           HEAP8[$1131>>0] = $1175;
           break;
          }
          $1156 = ($1153>>>0)<=($1154>>>0);
          $1157 = (($1153) + 1)|0;
          $1158 = (_malloc($1157)|0);
          $1159 = ($1158|0)==(0|0);
          $or$cond$i$i$i$i$i55$i = $1156 & $1159;
          if ($or$cond$i$i$i$i$i55$i) {
           break;
          }
          if ($2788) {
           $1165 = (($1131) + 1|0);
           $1166 = $1145&255;
           $1167 = $1166 >>> 1;
           $1168 = (($1167) + 1)|0;
           _memcpy(($1158|0),($1165|0),($1168|0))|0;
          } else {
           $1170 = HEAP32[$1136>>2]|0;
           $1171 = HEAP8[$1170>>0]|0;
           HEAP8[$1158>>0] = $1171;
           _free($1170);
          }
          $1172 = $1157 | 1;
          HEAP32[$1131>>2] = $1172;
          HEAP32[$1138>>2] = $1173;
          HEAP32[$1136>>2] = $1158;
         }
        } while(0);
        ;HEAP32[$1131+0>>2]=HEAP32[$904+0>>2]|0;HEAP32[$1131+4>>2]=HEAP32[$904+4>>2]|0;HEAP32[$1131+8>>2]=HEAP32[$904+8>>2]|0;
        ;HEAP32[$904+0>>2]=0|0;HEAP32[$904+4>>2]=0|0;HEAP32[$904+8>>2]=0|0;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($__v$i$i$i);
       $$08$i = $893;
      }
     }
    }
   } else {
    $$08$i = $first;
   }
   $1176 = ($$08$i|0)==($first|0);
   if ($1176) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1177 = HEAP32[$db>>2]|0;
   $1178 = (($db) + 4|0);
   $1179 = HEAP32[$1178>>2]|0;
   $1180 = ($1177|0)==($1179|0);
   if ($1180) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1181 = (($db) + 16|0);
   $1182 = (($1179) + -24|0);
   $1183 = (($db) + 12|0);
   $1184 = HEAP32[$1183>>2]|0;
   HEAP32[$18>>2] = $1184;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($17,$1182,$18);
   $1185 = (($db) + 20|0);
   $1186 = HEAP32[$1185>>2]|0;
   $1187 = (($db) + 24|0);
   $1188 = HEAP32[$1187>>2]|0;
   $1189 = ($1186>>>0)<($1188>>>0);
   if ($1189) {
    $1190 = ($1186|0)==(0|0);
    if ($1190) {
     $1202 = 0;
    } else {
     $1191 = (($1186) + 4|0);
     $1192 = (($17) + 12|0);
     $1193 = HEAP32[$1192>>2]|0;
     $1194 = (($1186) + 8|0);
     $1195 = (($1186) + 12|0);
     HEAP32[$1195>>2] = $1193;
     $1196 = HEAP32[$17>>2]|0;
     HEAP32[$1186>>2] = $1196;
     $1197 = (($17) + 4|0);
     $1198 = HEAP32[$1197>>2]|0;
     HEAP32[$1191>>2] = $1198;
     $1199 = (($17) + 8|0);
     $1200 = HEAP32[$1199>>2]|0;
     HEAP32[$1194>>2] = $1200;
     HEAP32[$1199>>2] = 0;
     HEAP32[$1197>>2] = 0;
     HEAP32[$17>>2] = 0;
     $$pre$i108 = HEAP32[$1185>>2]|0;
     $1202 = $$pre$i108;
    }
    $1201 = (($1202) + 16|0);
    HEAP32[$1185>>2] = $1201;
   } else {
    $1203 = (($db) + 28|0);
    $1204 = HEAP32[$1181>>2]|0;
    $1205 = $1186;
    $1206 = $1204;
    $1207 = (($1205) - ($1206))|0;
    $1208 = $1207 >> 4;
    $1209 = (($1208) + 1)|0;
    $1210 = ($1209|0)<(0);
    if ($1210) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $1211 = $1188;
    $1212 = (($1211) - ($1206))|0;
    $1213 = $1212 >> 4;
    $1214 = ($1213>>>0)<(1073741823);
    if ($1214) {
     $1215 = $1212 >> 3;
     $1216 = ($1215>>>0)<($1209>>>0);
     $1217 = $1216 ? $1209 : $1215;
     $$0$i$i$i110 = $1217;
    } else {
     $$0$i$i$i110 = 2147483647;
    }
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i110,$1208,$1203);
    $1218 = (($__v$i$i$i) + 8|0);
    $1219 = HEAP32[$1218>>2]|0;
    $1220 = ($1219|0)==(0|0);
    if (!($1220)) {
     $1221 = (($1219) + 4|0);
     $1222 = (($17) + 12|0);
     $1223 = HEAP32[$1222>>2]|0;
     $1224 = (($1219) + 8|0);
     $1225 = (($1219) + 12|0);
     HEAP32[$1225>>2] = $1223;
     $1226 = HEAP32[$17>>2]|0;
     HEAP32[$1219>>2] = $1226;
     $1227 = (($17) + 4|0);
     $1228 = HEAP32[$1227>>2]|0;
     HEAP32[$1221>>2] = $1228;
     $1229 = (($17) + 8|0);
     $1230 = HEAP32[$1229>>2]|0;
     HEAP32[$1224>>2] = $1230;
     HEAP32[$1229>>2] = 0;
     HEAP32[$1227>>2] = 0;
     HEAP32[$17>>2] = 0;
    }
    $1231 = (($1219) + 16|0);
    HEAP32[$1218>>2] = $1231;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1181,$__v$i$i$i);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
   }
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($17);
   $$0 = $$08$i;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 79:  {
   $1232 = (($db) + 4|0);
   $1233 = HEAP32[$1232>>2]|0;
   $1234 = HEAP32[$db>>2]|0;
   $1235 = $1233;
   $1236 = $1234;
   $1237 = (($1235) - ($1236))|0;
   $1238 = (($1237|0) / 24)&-1;
   $1239 = (($first) + 1|0);
   $1240 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1239,$last,$db)|0);
   $1241 = HEAP32[$1232>>2]|0;
   $1242 = HEAP32[$db>>2]|0;
   $1243 = $1241;
   $1244 = $1242;
   $1245 = (($1243) - ($1244))|0;
   $1246 = (($1245|0) / 24)&-1;
   $1247 = ($1240|0)==($1239|0);
   if ($1247) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1248 = (($db) + 16|0);
   $1249 = (($db) + 12|0);
   $1250 = HEAP32[$1249>>2]|0;
   $1251 = (($db) + 20|0);
   $1252 = HEAP32[$1251>>2]|0;
   $1253 = (($db) + 24|0);
   $1254 = HEAP32[$1253>>2]|0;
   $1255 = ($1252>>>0)<($1254>>>0);
   if ($1255) {
    $1256 = ($1252|0)==(0|0);
    if ($1256) {
     $1261 = 0;
    } else {
     HEAP32[$1252>>2] = 0;
     $1257 = (($1252) + 4|0);
     HEAP32[$1257>>2] = 0;
     $1258 = (($1252) + 8|0);
     HEAP32[$1258>>2] = 0;
     $1259 = (($1252) + 12|0);
     HEAP32[$1259>>2] = $1250;
     $$pre$i116 = HEAP32[$1251>>2]|0;
     $1261 = $$pre$i116;
    }
    $1260 = (($1261) + 16|0);
    HEAP32[$1251>>2] = $1260;
   } else {
    $1262 = (($db) + 28|0);
    $1263 = HEAP32[$1248>>2]|0;
    $1264 = $1252;
    $1265 = $1263;
    $1266 = (($1264) - ($1265))|0;
    $1267 = $1266 >> 4;
    $1268 = (($1267) + 1)|0;
    $1269 = ($1268|0)<(0);
    if ($1269) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $1270 = $1254;
    $1271 = (($1270) - ($1265))|0;
    $1272 = $1271 >> 4;
    $1273 = ($1272>>>0)<(1073741823);
    if ($1273) {
     $1274 = $1271 >> 3;
     $1275 = ($1274>>>0)<($1268>>>0);
     $1276 = $1275 ? $1268 : $1274;
     $$0$i$i$i118 = $1276;
    } else {
     $$0$i$i$i118 = 2147483647;
    }
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i118,$1267,$1262);
    $1277 = (($__v$i$i$i) + 8|0);
    $1278 = HEAP32[$1277>>2]|0;
    $1279 = ($1278|0)==(0|0);
    if (!($1279)) {
     HEAP32[$1278>>2] = 0;
     $1280 = (($1278) + 4|0);
     HEAP32[$1280>>2] = 0;
     $1281 = (($1278) + 8|0);
     HEAP32[$1281>>2] = 0;
     $1282 = (($1278) + 12|0);
     HEAP32[$1282>>2] = $1250;
    }
    $1283 = (($1278) + 16|0);
    HEAP32[$1277>>2] = $1283;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1248,$__v$i$i$i);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
   }
   $1284 = ($1238>>>0)<($1246>>>0);
   if (!($1284)) {
    $$0 = $1240;
    STACKTOP = sp;return ($$0|0);
   }
   $1285 = (($19) + 1|0);
   $1286 = (($__v$i$i$i) + 8|0);
   $1287 = (($19) + 8|0);
   $1288 = (($19) + 4|0);
   $k5$0377 = $1238;
   while(1) {
    $1289 = HEAP32[$db>>2]|0;
    $1290 = ((($1289) + (($k5$0377*24)|0)|0) + 12|0);
    $1291 = HEAP8[$1290>>0]|0;
    $1292 = $1291 & 1;
    $1293 = ($1292<<24>>24)==(0);
    if ($1293) {
     $1298 = $1291&255;
     $1299 = $1298 >>> 1;
     $1300 = (($1290) + 1|0);
     $1302 = $1299;$1304 = $1300;
    } else {
     $1294 = ((($1289) + (($k5$0377*24)|0)|0) + 16|0);
     $1295 = HEAP32[$1294>>2]|0;
     $1296 = ((($1289) + (($k5$0377*24)|0)|0) + 20|0);
     $1297 = HEAP32[$1296>>2]|0;
     $1302 = $1295;$1304 = $1297;
    }
    $1301 = ($1302>>>0)<(2);
    $1303 = $1301 ? $1302 : 2;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($19,$1304,$1303);
    $1305 = HEAP8[$19>>0]|0;
    $1306 = $1305 & 1;
    $1307 = ($1306<<24>>24)==(0);
    if ($1307) {
     $1310 = $1305&255;
     $1311 = $1310 >>> 1;
     $1313 = $1311;$2789 = $1285;
    } else {
     $1308 = HEAP32[$1288>>2]|0;
     $1309 = HEAP32[$1287>>2]|0;
     $1313 = $1308;$2789 = $1309;
    }
    $1312 = ($1313>>>0)>(2);
    $1314 = $1312 ? 2 : $1313;
    $1315 = ($1314|0)==(0);
    L842: do {
     if ($1315) {
      label = 418;
     } else {
      $$02$i111 = $1314;$l$03$i110 = $2789;$r$04$i109 = 48720;
      while(1) {
       $1316 = HEAP8[$l$03$i110>>0]|0;
       $1317 = HEAP8[$r$04$i109>>0]|0;
       $1318 = ($1316<<24>>24)==($1317<<24>>24);
       if (!($1318)) {
        label = 419;
        break L842;
       }
       $1319 = (($$02$i111) + -1)|0;
       $1320 = (($l$03$i110) + 1|0);
       $1321 = (($r$04$i109) + 1|0);
       $1322 = ($1319|0)==(0);
       if ($1322) {
        label = 418;
        break;
       } else {
        $$02$i111 = $1319;$l$03$i110 = $1320;$r$04$i109 = $1321;
       }
      }
     }
    } while(0);
    if ((label|0) == 418) {
     label = 0;
     $1323 = ($1313>>>0)<(2);
     if ($1323) {
      label = 419;
     } else {
      if (!($1307)) {
       $1326 = HEAP32[$1287>>2]|0;
       _free($1326);
      }
      $1327 = HEAP32[$db>>2]|0;
      if ($1312) {
       $1332 = $1327;
       label = 426;
      } else {
       $1328 = (($1327) + (($k5$0377*24)|0)|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1328,48728,2)|0);
       $1329 = HEAP32[$db>>2]|0;
       $1330 = ((($1329) + (($k5$0377*24)|0)|0) + 12|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($1330,0,48736,1)|0);
      }
     }
    }
    if ((label|0) == 419) {
     label = 0;
     if (!($1307)) {
      $1324 = HEAP32[$1287>>2]|0;
      _free($1324);
     }
     $1325 = HEAP32[$db>>2]|0;
     $1332 = $1325;
     label = 426;
    }
    if ((label|0) == 426) {
     label = 0;
     $1331 = ((($1332) + (($k5$0377*24)|0)|0) + 12|0);
     $1333 = HEAP8[$1331>>0]|0;
     $1334 = $1333 & 1;
     $1335 = ($1334<<24>>24)==(0);
     if ($1335) {
      $1338 = (($1331) + 1|0);
      $1340 = $1338;
     } else {
      $1336 = ((($1332) + (($k5$0377*24)|0)|0) + 20|0);
      $1337 = HEAP32[$1336>>2]|0;
      $1340 = $1337;
     }
     $1339 = HEAP8[$1340>>0]|0;
     $1341 = ($1339<<24>>24)==(40);
     if ($1341) {
      $1342 = (($1332) + (($k5$0377*24)|0)|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1342,48744,1)|0);
      $1343 = HEAP32[$db>>2]|0;
      $1344 = ((($1343) + (($k5$0377*24)|0)|0) + 12|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($1344,0,48736,1)|0);
     }
    }
    $1345 = HEAP32[$db>>2]|0;
    $1346 = (($1345) + (($k5$0377*24)|0)|0);
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1346,48752,2)|0);
    $1347 = HEAP32[$1251>>2]|0;
    $1348 = (($1347) + -16|0);
    $1349 = HEAP32[$db>>2]|0;
    $1350 = (($1349) + (($k5$0377*24)|0)|0);
    $1351 = (($1347) + -12|0);
    $1352 = HEAP32[$1351>>2]|0;
    $1353 = (($1347) + -8|0);
    $1354 = HEAP32[$1353>>2]|0;
    $1355 = ($1352|0)==($1354|0);
    if ($1355) {
     $1361 = (($1347) + -4|0);
     $1362 = HEAP32[$1348>>2]|0;
     $1363 = $1352;
     $1364 = $1362;
     $1365 = (($1363) - ($1364))|0;
     $1366 = (($1365|0) / 24)&-1;
     $1367 = (($1366) + 1)|0;
     $1368 = ($1367|0)<(0);
     if ($1368) {
      label = 436;
      break;
     }
     $1369 = ($1366>>>0)<(1073741823);
     if ($1369) {
      $1370 = $1366 << 1;
      $1371 = ($1370>>>0)<($1367>>>0);
      $1372 = $1371 ? $1367 : $1370;
      $$0$i$i$i127 = $1372;
     } else {
      $$0$i$i$i127 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i,$$0$i$i$i127,$1366,$1361);
     $1373 = HEAP32[$1286>>2]|0;
     $1374 = ($1373|0)==(0|0);
     if (!($1374)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1373,$1350);
      $1375 = (($1373) + 12|0);
      $1376 = ((($1349) + (($k5$0377*24)|0)|0) + 12|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1375,$1376);
     }
     $1377 = (($1373) + 24|0);
     HEAP32[$1286>>2] = $1377;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($1348,$__v$i$i$i);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
    } else {
     $1356 = ($1352|0)==(0|0);
     if ($1356) {
      $1360 = 0;
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1352,$1350);
      $1357 = (($1352) + 12|0);
      $1358 = ((($1349) + (($k5$0377*24)|0)|0) + 12|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1357,$1358);
      $$pre$i124 = HEAP32[$1351>>2]|0;
      $1360 = $$pre$i124;
     }
     $1359 = (($1360) + 24|0);
     HEAP32[$1351>>2] = $1359;
    }
    $1378 = (($k5$0377) + 1)|0;
    $1379 = ($1378>>>0)<($1246>>>0);
    if ($1379) {
     $k5$0377 = $1378;
    } else {
     $$0 = $1240;
     label = 860;
     break;
    }
   }
   if ((label|0) == 436) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   else if ((label|0) == 860) {
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 80:  {
   $1380 = (($db) + 4|0);
   $1381 = HEAP32[$1380>>2]|0;
   $1382 = HEAP32[$db>>2]|0;
   $1383 = $1381;
   $1384 = $1382;
   $1385 = (($1383) - ($1384))|0;
   $1386 = (($1385|0) / 24)&-1;
   $1387 = (($first) + 1|0);
   $1388 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1387,$last,$db)|0);
   $1389 = HEAP32[$1380>>2]|0;
   $1390 = HEAP32[$db>>2]|0;
   $1391 = $1389;
   $1392 = $1390;
   $1393 = (($1391) - ($1392))|0;
   $1394 = (($1393|0) / 24)&-1;
   $1395 = ($1388|0)==($1387|0);
   if ($1395) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1396 = (($db) + 16|0);
   $1397 = (($db) + 12|0);
   $1398 = HEAP32[$1397>>2]|0;
   $1399 = (($db) + 20|0);
   $1400 = HEAP32[$1399>>2]|0;
   $1401 = (($db) + 24|0);
   $1402 = HEAP32[$1401>>2]|0;
   $1403 = ($1400>>>0)<($1402>>>0);
   if ($1403) {
    $1404 = ($1400|0)==(0|0);
    if ($1404) {
     $1409 = 0;
    } else {
     HEAP32[$1400>>2] = 0;
     $1405 = (($1400) + 4|0);
     HEAP32[$1405>>2] = 0;
     $1406 = (($1400) + 8|0);
     HEAP32[$1406>>2] = 0;
     $1407 = (($1400) + 12|0);
     HEAP32[$1407>>2] = $1398;
     $$pre$i135 = HEAP32[$1399>>2]|0;
     $1409 = $$pre$i135;
    }
    $1408 = (($1409) + 16|0);
    HEAP32[$1399>>2] = $1408;
   } else {
    $1410 = (($db) + 28|0);
    $1411 = HEAP32[$1396>>2]|0;
    $1412 = $1400;
    $1413 = $1411;
    $1414 = (($1412) - ($1413))|0;
    $1415 = $1414 >> 4;
    $1416 = (($1415) + 1)|0;
    $1417 = ($1416|0)<(0);
    if ($1417) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $1418 = $1402;
    $1419 = (($1418) - ($1413))|0;
    $1420 = $1419 >> 4;
    $1421 = ($1420>>>0)<(1073741823);
    if ($1421) {
     $1422 = $1419 >> 3;
     $1423 = ($1422>>>0)<($1416>>>0);
     $1424 = $1423 ? $1416 : $1422;
     $$0$i$i$i137 = $1424;
    } else {
     $$0$i$i$i137 = 2147483647;
    }
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i137,$1415,$1410);
    $1425 = (($__v$i$i$i) + 8|0);
    $1426 = HEAP32[$1425>>2]|0;
    $1427 = ($1426|0)==(0|0);
    if (!($1427)) {
     HEAP32[$1426>>2] = 0;
     $1428 = (($1426) + 4|0);
     HEAP32[$1428>>2] = 0;
     $1429 = (($1426) + 8|0);
     HEAP32[$1429>>2] = 0;
     $1430 = (($1426) + 12|0);
     HEAP32[$1430>>2] = $1398;
    }
    $1431 = (($1426) + 16|0);
    HEAP32[$1425>>2] = $1431;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1396,$__v$i$i$i);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
   }
   $1432 = ($1386>>>0)<($1394>>>0);
   if (!($1432)) {
    $$0 = $1388;
    STACKTOP = sp;return ($$0|0);
   }
   $1433 = (($20) + 1|0);
   $1434 = (($21) + 1|0);
   $1435 = (($21) + 8|0);
   $1436 = (($21) + 4|0);
   $1437 = (($__v$i$i$i) + 8|0);
   $1438 = (($20) + 8|0);
   $1439 = (($20) + 4|0);
   $k8$0389 = $1386;
   while(1) {
    $1440 = HEAP32[$db>>2]|0;
    $1441 = ((($1440) + (($k8$0389*24)|0)|0) + 12|0);
    $1442 = HEAP8[$1441>>0]|0;
    $1443 = $1442 & 1;
    $1444 = ($1443<<24>>24)==(0);
    if ($1444) {
     $1449 = $1442&255;
     $1450 = $1449 >>> 1;
     $1451 = (($1441) + 1|0);
     $1453 = $1450;$1455 = $1451;
    } else {
     $1445 = ((($1440) + (($k8$0389*24)|0)|0) + 16|0);
     $1446 = HEAP32[$1445>>2]|0;
     $1447 = ((($1440) + (($k8$0389*24)|0)|0) + 20|0);
     $1448 = HEAP32[$1447>>2]|0;
     $1453 = $1446;$1455 = $1448;
    }
    $1452 = ($1453>>>0)<(2);
    $1454 = $1452 ? $1453 : 2;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($20,$1455,$1454);
    $1456 = HEAP8[$20>>0]|0;
    $1457 = $1456 & 1;
    $1458 = ($1457<<24>>24)==(0);
    if ($1458) {
     $1461 = $1456&255;
     $1462 = $1461 >>> 1;
     $1464 = $1462;$2790 = $1433;
    } else {
     $1459 = HEAP32[$1439>>2]|0;
     $1460 = HEAP32[$1438>>2]|0;
     $1464 = $1459;$2790 = $1460;
    }
    $1463 = ($1464>>>0)>(2);
    $1465 = $1463 ? 2 : $1464;
    $1466 = ($1465|0)==(0);
    L916: do {
     if ($1466) {
      label = 466;
     } else {
      $$02$i120 = $1465;$l$03$i119 = $2790;$r$04$i118 = 48720;
      while(1) {
       $1467 = HEAP8[$l$03$i119>>0]|0;
       $1468 = HEAP8[$r$04$i118>>0]|0;
       $1469 = ($1467<<24>>24)==($1468<<24>>24);
       if (!($1469)) {
        label = 467;
        break L916;
       }
       $1470 = (($$02$i120) + -1)|0;
       $1471 = (($l$03$i119) + 1|0);
       $1472 = (($r$04$i118) + 1|0);
       $1473 = ($1470|0)==(0);
       if ($1473) {
        label = 466;
        break;
       } else {
        $$02$i120 = $1470;$l$03$i119 = $1471;$r$04$i118 = $1472;
       }
      }
     }
    } while(0);
    if ((label|0) == 466) {
     label = 0;
     $1474 = ($1464>>>0)<(2);
     if ($1474) {
      label = 467;
     } else {
      if (!($1458)) {
       $1477 = HEAP32[$1438>>2]|0;
       _free($1477);
      }
      $1478 = HEAP32[$db>>2]|0;
      if ($1463) {
       $1483 = $1478;
       label = 474;
      } else {
       $1479 = (($1478) + (($k8$0389*24)|0)|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1479,48728,2)|0);
       $1480 = HEAP32[$db>>2]|0;
       $1481 = ((($1480) + (($k8$0389*24)|0)|0) + 12|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($1481,0,48736,1)|0);
      }
     }
    }
    if ((label|0) == 467) {
     label = 0;
     if (!($1458)) {
      $1475 = HEAP32[$1438>>2]|0;
      _free($1475);
     }
     $1476 = HEAP32[$db>>2]|0;
     $1483 = $1476;
     label = 474;
    }
    if ((label|0) == 474) {
     label = 0;
     $1482 = ((($1483) + (($k8$0389*24)|0)|0) + 12|0);
     $1484 = HEAP8[$1482>>0]|0;
     $1485 = $1484 & 1;
     $1486 = ($1485<<24>>24)==(0);
     if ($1486) {
      $1489 = (($1482) + 1|0);
      $1491 = $1489;
     } else {
      $1487 = ((($1483) + (($k8$0389*24)|0)|0) + 20|0);
      $1488 = HEAP32[$1487>>2]|0;
      $1491 = $1488;
     }
     $1490 = HEAP8[$1491>>0]|0;
     $1492 = ($1490<<24>>24)==(40);
     if ($1492) {
      $1493 = (($1483) + (($k8$0389*24)|0)|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1493,48744,1)|0);
      $1494 = HEAP32[$db>>2]|0;
      $1495 = ((($1494) + (($k8$0389*24)|0)|0) + 12|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($1495,0,48736,1)|0);
     }
    }
    $1496 = HEAP8[$1387>>0]|0;
    $1497 = ($1496<<24>>24)==(85);
    $1498 = HEAP32[$db>>2]|0;
    $1499 = (($1498) + (($k8$0389*24)|0)|0);
    do {
     if ($1497) {
      $1500 = HEAP8[$1499>>0]|0;
      $1501 = $1500 & 1;
      $1502 = ($1501<<24>>24)==(0);
      if ($1502) {
       $1507 = $1500&255;
       $1508 = $1507 >>> 1;
       $1509 = (($1499) + 1|0);
       $1511 = $1508;$1513 = $1509;
      } else {
       $1503 = ((($1498) + (($k8$0389*24)|0)|0) + 4|0);
       $1504 = HEAP32[$1503>>2]|0;
       $1505 = ((($1498) + (($k8$0389*24)|0)|0) + 8|0);
       $1506 = HEAP32[$1505>>2]|0;
       $1511 = $1504;$1513 = $1506;
      }
      $1510 = ($1511>>>0)<(12);
      $1512 = $1510 ? $1511 : 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($21,$1513,$1512);
      $1514 = HEAP8[$21>>0]|0;
      $1515 = $1514 & 1;
      $1516 = ($1515<<24>>24)==(0);
      if ($1516) {
       $1519 = $1514&255;
       $1520 = $1519 >>> 1;
       $1522 = $1520;$2791 = $1434;
      } else {
       $1517 = HEAP32[$1436>>2]|0;
       $1518 = HEAP32[$1435>>2]|0;
       $1522 = $1517;$2791 = $1518;
      }
      $1521 = ($1522>>>0)>(12);
      $1523 = $1521 ? 12 : $1522;
      $1524 = ($1523|0)==(0);
      L950: do {
       if ($1524) {
        label = 490;
       } else {
        $$02$i127 = $1523;$l$03$i126 = $2791;$r$04$i125 = 48760;
        while(1) {
         $1525 = HEAP8[$l$03$i126>>0]|0;
         $1526 = HEAP8[$r$04$i125>>0]|0;
         $1527 = ($1525<<24>>24)==($1526<<24>>24);
         if (!($1527)) {
          break;
         }
         $1528 = (($$02$i127) + -1)|0;
         $1529 = (($l$03$i126) + 1|0);
         $1530 = (($r$04$i125) + 1|0);
         $1531 = ($1528|0)==(0);
         if ($1531) {
          label = 490;
          break L950;
         } else {
          $$02$i127 = $1528;$l$03$i126 = $1529;$r$04$i125 = $1530;
         }
        }
        $1532 = $1525&255;
        $1533 = $1526&255;
        $1534 = (($1532) - ($1533))|0;
        $1535 = ($1525<<24>>24)==($1526<<24>>24);
        if ($1535) {
         label = 490;
        } else {
         $1538 = $1534;
        }
       }
      } while(0);
      if ((label|0) == 490) {
       label = 0;
       $1536 = ($1522>>>0)<(12);
       $$$i$i$i$i = $1521&1;
       $$$$i$i$i$i = $1536 ? -1 : $$$i$i$i$i;
       $1538 = $$$$i$i$i$i;
      }
      $1537 = ($1538|0)==(0);
      if (!($1516)) {
       $1539 = HEAP32[$1435>>2]|0;
       _free($1539);
      }
      $1540 = HEAP32[$db>>2]|0;
      $1541 = (($1540) + (($k8$0389*24)|0)|0);
      if ($1537) {
       $1543 = HEAP8[$1541>>0]|0;
       $1544 = $1543 & 1;
       $1545 = ($1544<<24>>24)==(0);
       if ($1545) {
        $1546 = $1543&255;
        $1547 = $1546 >>> 1;
        $1548 = ($1547>>>0)<(11);
        $1549 = $1548 ? $1547 : 11;
        $1558 = $1549;$1559 = $1547;$1561 = 10;$1564 = $1543;
       } else {
        $1550 = ((($1540) + (($k8$0389*24)|0)|0) + 4|0);
        $1551 = HEAP32[$1550>>2]|0;
        $1552 = ($1551>>>0)<(11);
        $1553 = $1552 ? $1551 : 11;
        $1554 = HEAP32[$1541>>2]|0;
        $1555 = $1554 & -2;
        $phitmp$i$i$i = (($1555) + -1)|0;
        $1556 = $1554&255;
        $1558 = $1553;$1559 = $1551;$1561 = $phitmp$i$i$i;$1564 = $1556;
       }
       $1557 = (($1558) - ($1559))|0;
       $1560 = (($1557) + ($1561))|0;
       $1562 = ($1560>>>0)<(2);
       if ($1562) {
        $1598 = (2 - ($1558))|0;
        $1599 = (($1598) + ($1559))|0;
        $1600 = (($1599) - ($1561))|0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($1541,$1561,$1600,$1559,0,$1558,2,48784);
        break;
       }
       $1563 = $1564 & 1;
       $1565 = ($1563<<24>>24)==(0);
       if ($1565) {
        $1568 = (($1541) + 1|0);
        $1573 = $1568;
       } else {
        $1566 = ((($1540) + (($k8$0389*24)|0)|0) + 8|0);
        $1567 = HEAP32[$1566>>2]|0;
        $1573 = $1567;
       }
       $1569 = ($1558|0)==(2);
       do {
        if ($1569) {
         $$1$i$i = 0;$$12$i$i = 48784;$$14$i$i = 2;$2792 = 2;
         label = 511;
        } else {
         $1570 = (($1559) - ($1558))|0;
         $1571 = ($1559|0)==($1558|0);
         if ($1571) {
          $$1$i$i = 0;$$12$i$i = 48784;$$14$i$i = 2;$2792 = $1558;
          label = 511;
          break;
         }
         $1572 = ($1558>>>0)>(2);
         if ($1572) {
          HEAP8[$1573>>0]=25705&255;HEAP8[$1573+1>>0]=25705>>8;
          $1574 = (($1573) + 2|0);
          $1575 = (($1573) + ($1558)|0);
          _memmove(($1574|0),($1575|0),($1570|0))|0;
          $$2$i$i = 2;$1589 = $1558;
          break;
         }
         $1576 = ($1573>>>0)<(48784>>>0);
         $1577 = (($1573) + ($1559)|0);
         $1578 = ($1577>>>0)>(48784>>>0);
         $or$cond$i$i = $1576 & $1578;
         do {
          if ($or$cond$i$i) {
           $1579 = (($1573) + ($1558)|0);
           $1580 = ($1579>>>0)>(48784>>>0);
           if ($1580) {
            _memcpy(($1573|0),(48784|0),($1558|0))|0;
            $1583 = (2 - ($1558))|0;
            $$0$i$i = $1558;$$01$i$i = ((48784 + 2|0));$$03$i$i = $1583;$1585 = 0;
            break;
           } else {
            $1581 = (2 - ($1558))|0;
            $1582 = (48784 + ($1581)|0);
            $$0$i$i = 0;$$01$i$i = $1582;$$03$i$i = 2;$1585 = $1558;
            break;
           }
          } else {
           $$0$i$i = 0;$$01$i$i = 48784;$$03$i$i = 2;$1585 = $1558;
          }
         } while(0);
         $$sum$i$i = (($$0$i$i) + ($$03$i$i))|0;
         $1584 = (($1573) + ($$sum$i$i)|0);
         $$sum1$i$i = (($$0$i$i) + ($1585))|0;
         $1586 = (($1573) + ($$sum1$i$i)|0);
         _memmove(($1584|0),($1586|0),($1570|0))|0;
         $$1$i$i = $$0$i$i;$$12$i$i = $$01$i$i;$$14$i$i = $$03$i$i;$2792 = $1585;
         label = 511;
        }
       } while(0);
       if ((label|0) == 511) {
        label = 0;
        $1587 = (($1573) + ($$1$i$i)|0);
        _memmove(($1587|0),($$12$i$i|0),($$14$i$i|0))|0;
        $$2$i$i = $$14$i$i;$1589 = $2792;
       }
       $1588 = (($$2$i$i) - ($1589))|0;
       $1590 = (($1588) + ($1559))|0;
       $1591 = HEAP8[$1541>>0]|0;
       $1592 = $1591 & 1;
       $1593 = ($1592<<24>>24)==(0);
       if ($1593) {
        $1595 = $1590 << 1;
        $1596 = $1595&255;
        HEAP8[$1541>>0] = $1596;
       } else {
        $1594 = ((($1540) + (($k8$0389*24)|0)|0) + 4|0);
        HEAP32[$1594>>2] = $1590;
       }
       $1597 = (($1573) + ($1590)|0);
       HEAP8[$1597>>0] = 0;
      } else {
       $1542 = $1541;
       label = 494;
      }
     } else {
      $1542 = $1499;
      label = 494;
     }
    } while(0);
    if ((label|0) == 494) {
     label = 0;
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1542,48776,1)|0);
    }
    $1601 = HEAP32[$1399>>2]|0;
    $1602 = (($1601) + -16|0);
    $1603 = HEAP32[$db>>2]|0;
    $1604 = (($1603) + (($k8$0389*24)|0)|0);
    $1605 = (($1601) + -12|0);
    $1606 = HEAP32[$1605>>2]|0;
    $1607 = (($1601) + -8|0);
    $1608 = HEAP32[$1607>>2]|0;
    $1609 = ($1606|0)==($1608|0);
    if ($1609) {
     $1615 = (($1601) + -4|0);
     $1616 = HEAP32[$1602>>2]|0;
     $1617 = $1606;
     $1618 = $1616;
     $1619 = (($1617) - ($1618))|0;
     $1620 = (($1619|0) / 24)&-1;
     $1621 = (($1620) + 1)|0;
     $1622 = ($1621|0)<(0);
     if ($1622) {
      label = 522;
      break;
     }
     $1623 = ($1620>>>0)<(1073741823);
     if ($1623) {
      $1624 = $1620 << 1;
      $1625 = ($1624>>>0)<($1621>>>0);
      $1626 = $1625 ? $1621 : $1624;
      $$0$i$i$i154 = $1626;
     } else {
      $$0$i$i$i154 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i,$$0$i$i$i154,$1620,$1615);
     $1627 = HEAP32[$1437>>2]|0;
     $1628 = ($1627|0)==(0|0);
     if (!($1628)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1627,$1604);
      $1629 = (($1627) + 12|0);
      $1630 = ((($1603) + (($k8$0389*24)|0)|0) + 12|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1629,$1630);
     }
     $1631 = (($1627) + 24|0);
     HEAP32[$1437>>2] = $1631;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($1602,$__v$i$i$i);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
    } else {
     $1610 = ($1606|0)==(0|0);
     if ($1610) {
      $1614 = 0;
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1606,$1604);
      $1611 = (($1606) + 12|0);
      $1612 = ((($1603) + (($k8$0389*24)|0)|0) + 12|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1611,$1612);
      $$pre$i151 = HEAP32[$1605>>2]|0;
      $1614 = $$pre$i151;
     }
     $1613 = (($1614) + 24|0);
     HEAP32[$1605>>2] = $1613;
    }
    $1632 = (($k8$0389) + 1)|0;
    $1633 = ($1632>>>0)<($1394>>>0);
    if ($1633) {
     $k8$0389 = $1632;
    } else {
     $$0 = $1388;
     label = 860;
     break;
    }
   }
   if ((label|0) == 522) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   else if ((label|0) == 860) {
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 82:  {
   $1634 = (($db) + 4|0);
   $1635 = HEAP32[$1634>>2]|0;
   $1636 = HEAP32[$db>>2]|0;
   $1637 = $1635;
   $1638 = $1636;
   $1639 = (($1637) - ($1638))|0;
   $1640 = (($1639|0) / 24)&-1;
   $1641 = (($first) + 1|0);
   $1642 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1641,$last,$db)|0);
   $1643 = HEAP32[$1634>>2]|0;
   $1644 = HEAP32[$db>>2]|0;
   $1645 = $1643;
   $1646 = $1644;
   $1647 = (($1645) - ($1646))|0;
   $1648 = (($1647|0) / 24)&-1;
   $1649 = ($1642|0)==($1641|0);
   if ($1649) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1650 = (($db) + 16|0);
   $1651 = (($db) + 12|0);
   $1652 = HEAP32[$1651>>2]|0;
   $1653 = (($db) + 20|0);
   $1654 = HEAP32[$1653>>2]|0;
   $1655 = (($db) + 24|0);
   $1656 = HEAP32[$1655>>2]|0;
   $1657 = ($1654>>>0)<($1656>>>0);
   if ($1657) {
    $1658 = ($1654|0)==(0|0);
    if ($1658) {
     $1663 = 0;
    } else {
     HEAP32[$1654>>2] = 0;
     $1659 = (($1654) + 4|0);
     HEAP32[$1659>>2] = 0;
     $1660 = (($1654) + 8|0);
     HEAP32[$1660>>2] = 0;
     $1661 = (($1654) + 12|0);
     HEAP32[$1661>>2] = $1652;
     $$pre$i162 = HEAP32[$1653>>2]|0;
     $1663 = $$pre$i162;
    }
    $1662 = (($1663) + 16|0);
    HEAP32[$1653>>2] = $1662;
   } else {
    $1664 = (($db) + 28|0);
    $1665 = HEAP32[$1650>>2]|0;
    $1666 = $1654;
    $1667 = $1665;
    $1668 = (($1666) - ($1667))|0;
    $1669 = $1668 >> 4;
    $1670 = (($1669) + 1)|0;
    $1671 = ($1670|0)<(0);
    if ($1671) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $1672 = $1656;
    $1673 = (($1672) - ($1667))|0;
    $1674 = $1673 >> 4;
    $1675 = ($1674>>>0)<(1073741823);
    if ($1675) {
     $1676 = $1673 >> 3;
     $1677 = ($1676>>>0)<($1670>>>0);
     $1678 = $1677 ? $1670 : $1676;
     $$0$i$i$i164 = $1678;
    } else {
     $$0$i$i$i164 = 2147483647;
    }
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i164,$1669,$1664);
    $1679 = (($__v$i$i$i) + 8|0);
    $1680 = HEAP32[$1679>>2]|0;
    $1681 = ($1680|0)==(0|0);
    if (!($1681)) {
     HEAP32[$1680>>2] = 0;
     $1682 = (($1680) + 4|0);
     HEAP32[$1682>>2] = 0;
     $1683 = (($1680) + 8|0);
     HEAP32[$1683>>2] = 0;
     $1684 = (($1680) + 12|0);
     HEAP32[$1684>>2] = $1652;
    }
    $1685 = (($1680) + 16|0);
    HEAP32[$1679>>2] = $1685;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1650,$__v$i$i$i);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
   }
   $1686 = ($1640>>>0)<($1648>>>0);
   if (!($1686)) {
    $$0 = $1642;
    STACKTOP = sp;return ($$0|0);
   }
   $1687 = (($22) + 1|0);
   $1688 = (($__v$i$i$i) + 8|0);
   $1689 = (($22) + 8|0);
   $1690 = (($22) + 4|0);
   $k11$0403 = $1640;
   while(1) {
    $1691 = HEAP32[$db>>2]|0;
    $1692 = ((($1691) + (($k11$0403*24)|0)|0) + 12|0);
    $1693 = HEAP8[$1692>>0]|0;
    $1694 = $1693 & 1;
    $1695 = ($1694<<24>>24)==(0);
    if ($1695) {
     $1700 = $1693&255;
     $1701 = $1700 >>> 1;
     $1702 = (($1692) + 1|0);
     $1704 = $1701;$1706 = $1702;
    } else {
     $1696 = ((($1691) + (($k11$0403*24)|0)|0) + 16|0);
     $1697 = HEAP32[$1696>>2]|0;
     $1698 = ((($1691) + (($k11$0403*24)|0)|0) + 20|0);
     $1699 = HEAP32[$1698>>2]|0;
     $1704 = $1697;$1706 = $1699;
    }
    $1703 = ($1704>>>0)<(2);
    $1705 = $1703 ? $1704 : 2;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($22,$1706,$1705);
    $1707 = HEAP8[$22>>0]|0;
    $1708 = $1707 & 1;
    $1709 = ($1708<<24>>24)==(0);
    if ($1709) {
     $1712 = $1707&255;
     $1713 = $1712 >>> 1;
     $1715 = $1713;$2793 = $1687;
    } else {
     $1710 = HEAP32[$1690>>2]|0;
     $1711 = HEAP32[$1689>>2]|0;
     $1715 = $1710;$2793 = $1711;
    }
    $1714 = ($1715>>>0)>(2);
    $1716 = $1714 ? 2 : $1715;
    $1717 = ($1716|0)==(0);
    L1045: do {
     if ($1717) {
      label = 552;
     } else {
      $$02$i135 = $1716;$l$03$i134 = $2793;$r$04$i133 = 48720;
      while(1) {
       $1718 = HEAP8[$l$03$i134>>0]|0;
       $1719 = HEAP8[$r$04$i133>>0]|0;
       $1720 = ($1718<<24>>24)==($1719<<24>>24);
       if (!($1720)) {
        label = 553;
        break L1045;
       }
       $1721 = (($$02$i135) + -1)|0;
       $1722 = (($l$03$i134) + 1|0);
       $1723 = (($r$04$i133) + 1|0);
       $1724 = ($1721|0)==(0);
       if ($1724) {
        label = 552;
        break;
       } else {
        $$02$i135 = $1721;$l$03$i134 = $1722;$r$04$i133 = $1723;
       }
      }
     }
    } while(0);
    if ((label|0) == 552) {
     label = 0;
     $1725 = ($1715>>>0)<(2);
     if ($1725) {
      label = 553;
     } else {
      if (!($1709)) {
       $1728 = HEAP32[$1689>>2]|0;
       _free($1728);
      }
      $1729 = HEAP32[$db>>2]|0;
      if ($1714) {
       $1734 = $1729;
       label = 560;
      } else {
       $1730 = (($1729) + (($k11$0403*24)|0)|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1730,48728,2)|0);
       $1731 = HEAP32[$db>>2]|0;
       $1732 = ((($1731) + (($k11$0403*24)|0)|0) + 12|0);
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($1732,0,48736,1)|0);
      }
     }
    }
    if ((label|0) == 553) {
     label = 0;
     if (!($1709)) {
      $1726 = HEAP32[$1689>>2]|0;
      _free($1726);
     }
     $1727 = HEAP32[$db>>2]|0;
     $1734 = $1727;
     label = 560;
    }
    if ((label|0) == 560) {
     label = 0;
     $1733 = ((($1734) + (($k11$0403*24)|0)|0) + 12|0);
     $1735 = HEAP8[$1733>>0]|0;
     $1736 = $1735 & 1;
     $1737 = ($1736<<24>>24)==(0);
     if ($1737) {
      $1740 = (($1733) + 1|0);
      $1742 = $1740;
     } else {
      $1738 = ((($1734) + (($k11$0403*24)|0)|0) + 20|0);
      $1739 = HEAP32[$1738>>2]|0;
      $1742 = $1739;
     }
     $1741 = HEAP8[$1742>>0]|0;
     $1743 = ($1741<<24>>24)==(40);
     if ($1743) {
      $1744 = (($1734) + (($k11$0403*24)|0)|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1744,48744,1)|0);
      $1745 = HEAP32[$db>>2]|0;
      $1746 = ((($1745) + (($k11$0403*24)|0)|0) + 12|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($1746,0,48736,1)|0);
     }
    }
    $1747 = HEAP32[$db>>2]|0;
    $1748 = (($1747) + (($k11$0403*24)|0)|0);
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1748,48792,1)|0);
    $1749 = HEAP32[$1653>>2]|0;
    $1750 = (($1749) + -16|0);
    $1751 = HEAP32[$db>>2]|0;
    $1752 = (($1751) + (($k11$0403*24)|0)|0);
    $1753 = (($1749) + -12|0);
    $1754 = HEAP32[$1753>>2]|0;
    $1755 = (($1749) + -8|0);
    $1756 = HEAP32[$1755>>2]|0;
    $1757 = ($1754|0)==($1756|0);
    if ($1757) {
     $1763 = (($1749) + -4|0);
     $1764 = HEAP32[$1750>>2]|0;
     $1765 = $1754;
     $1766 = $1764;
     $1767 = (($1765) - ($1766))|0;
     $1768 = (($1767|0) / 24)&-1;
     $1769 = (($1768) + 1)|0;
     $1770 = ($1769|0)<(0);
     if ($1770) {
      label = 570;
      break;
     }
     $1771 = ($1768>>>0)<(1073741823);
     if ($1771) {
      $1772 = $1768 << 1;
      $1773 = ($1772>>>0)<($1769>>>0);
      $1774 = $1773 ? $1769 : $1772;
      $$0$i$i$i180 = $1774;
     } else {
      $$0$i$i$i180 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i,$$0$i$i$i180,$1768,$1763);
     $1775 = HEAP32[$1688>>2]|0;
     $1776 = ($1775|0)==(0|0);
     if (!($1776)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1775,$1752);
      $1777 = (($1775) + 12|0);
      $1778 = ((($1751) + (($k11$0403*24)|0)|0) + 12|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1777,$1778);
     }
     $1779 = (($1775) + 24|0);
     HEAP32[$1688>>2] = $1779;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($1750,$__v$i$i$i);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
    } else {
     $1758 = ($1754|0)==(0|0);
     if ($1758) {
      $1762 = 0;
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1754,$1752);
      $1759 = (($1754) + 12|0);
      $1760 = ((($1751) + (($k11$0403*24)|0)|0) + 12|0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1759,$1760);
      $$pre$i177 = HEAP32[$1753>>2]|0;
      $1762 = $$pre$i177;
     }
     $1761 = (($1762) + 24|0);
     HEAP32[$1753>>2] = $1761;
    }
    $1780 = (($k11$0403) + 1)|0;
    $1781 = ($1780>>>0)<($1648>>>0);
    if ($1781) {
     $k11$0403 = $1780;
    } else {
     $$0 = $1642;
     label = 860;
     break;
    }
   }
   if ((label|0) == 570) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   else if ((label|0) == 860) {
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 84:  {
   $1782 = (($db) + 4|0);
   $1783 = HEAP32[$1782>>2]|0;
   $1784 = HEAP32[$db>>2]|0;
   $1785 = $1783;
   $1786 = $1784;
   $1787 = (($1785) - ($1786))|0;
   $1788 = (($1787|0) / 24)&-1;
   $1789 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
   $1790 = HEAP32[$1782>>2]|0;
   $1791 = HEAP32[$db>>2]|0;
   $1792 = $1790;
   $1793 = $1791;
   $1794 = (($1792) - ($1793))|0;
   $1795 = (($1794|0) / 24)&-1;
   $1796 = ($1789|0)==($first|0);
   if ($1796) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1797 = (($db) + 16|0);
   $1798 = (($db) + 12|0);
   $1799 = HEAP32[$1798>>2]|0;
   $1800 = (($db) + 20|0);
   $1801 = HEAP32[$1800>>2]|0;
   $1802 = (($db) + 24|0);
   $1803 = HEAP32[$1802>>2]|0;
   $1804 = ($1801>>>0)<($1803>>>0);
   if ($1804) {
    $1805 = ($1801|0)==(0|0);
    if ($1805) {
     $1810 = 0;
    } else {
     HEAP32[$1801>>2] = 0;
     $1806 = (($1801) + 4|0);
     HEAP32[$1806>>2] = 0;
     $1807 = (($1801) + 8|0);
     HEAP32[$1807>>2] = 0;
     $1808 = (($1801) + 12|0);
     HEAP32[$1808>>2] = $1799;
     $$pre$i188 = HEAP32[$1800>>2]|0;
     $1810 = $$pre$i188;
    }
    $1809 = (($1810) + 16|0);
    HEAP32[$1800>>2] = $1809;
   } else {
    $1811 = (($db) + 28|0);
    $1812 = HEAP32[$1797>>2]|0;
    $1813 = $1801;
    $1814 = $1812;
    $1815 = (($1813) - ($1814))|0;
    $1816 = $1815 >> 4;
    $1817 = (($1816) + 1)|0;
    $1818 = ($1817|0)<(0);
    if ($1818) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $1819 = $1803;
    $1820 = (($1819) - ($1814))|0;
    $1821 = $1820 >> 4;
    $1822 = ($1821>>>0)<(1073741823);
    if ($1822) {
     $1823 = $1820 >> 3;
     $1824 = ($1823>>>0)<($1817>>>0);
     $1825 = $1824 ? $1817 : $1823;
     $$0$i$i$i190 = $1825;
    } else {
     $$0$i$i$i190 = 2147483647;
    }
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i190,$1816,$1811);
    $1826 = (($__v$i$i$i) + 8|0);
    $1827 = HEAP32[$1826>>2]|0;
    $1828 = ($1827|0)==(0|0);
    if (!($1828)) {
     HEAP32[$1827>>2] = 0;
     $1829 = (($1827) + 4|0);
     HEAP32[$1829>>2] = 0;
     $1830 = (($1827) + 8|0);
     HEAP32[$1830>>2] = 0;
     $1831 = (($1827) + 12|0);
     HEAP32[$1831>>2] = $1799;
    }
    $1832 = (($1827) + 16|0);
    HEAP32[$1826>>2] = $1832;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1797,$__v$i$i$i);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
   }
   $1833 = ($1788>>>0)<($1795>>>0);
   L1106: do {
    if ($1833) {
     $1834 = (($__v$i$i$i) + 8|0);
     $k15$0415 = $1788;
     while(1) {
      $1835 = HEAP32[$1800>>2]|0;
      $1836 = (($1835) + -16|0);
      $1837 = HEAP32[$db>>2]|0;
      $1838 = (($1837) + (($k15$0415*24)|0)|0);
      $1839 = (($1835) + -12|0);
      $1840 = HEAP32[$1839>>2]|0;
      $1841 = (($1835) + -8|0);
      $1842 = HEAP32[$1841>>2]|0;
      $1843 = ($1840|0)==($1842|0);
      if ($1843) {
       $1849 = (($1835) + -4|0);
       $1850 = HEAP32[$1836>>2]|0;
       $1851 = $1840;
       $1852 = $1850;
       $1853 = (($1851) - ($1852))|0;
       $1854 = (($1853|0) / 24)&-1;
       $1855 = (($1854) + 1)|0;
       $1856 = ($1855|0)<(0);
       if ($1856) {
        break;
       }
       $1857 = ($1854>>>0)<(1073741823);
       if ($1857) {
        $1858 = $1854 << 1;
        $1859 = ($1858>>>0)<($1855>>>0);
        $1860 = $1859 ? $1855 : $1858;
        $$0$i$i$i198 = $1860;
       } else {
        $$0$i$i$i198 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i,$$0$i$i$i198,$1854,$1849);
       $1861 = HEAP32[$1834>>2]|0;
       $1862 = ($1861|0)==(0|0);
       if (!($1862)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1861,$1838);
        $1863 = (($1861) + 12|0);
        $1864 = ((($1837) + (($k15$0415*24)|0)|0) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1863,$1864);
       }
       $1865 = (($1861) + 24|0);
       HEAP32[$1834>>2] = $1865;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($1836,$__v$i$i$i);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
      } else {
       $1844 = ($1840|0)==(0|0);
       if ($1844) {
        $1848 = 0;
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1840,$1838);
        $1845 = (($1840) + 12|0);
        $1846 = ((($1837) + (($k15$0415*24)|0)|0) + 12|0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($1845,$1846);
        $$pre$i195 = HEAP32[$1839>>2]|0;
        $1848 = $$pre$i195;
       }
       $1847 = (($1848) + 24|0);
       HEAP32[$1839>>2] = $1847;
      }
      $1866 = (($k15$0415) + 1)|0;
      $1867 = ($1866>>>0)<($1795>>>0);
      if ($1867) {
       $k15$0415 = $1866;
      } else {
       break L1106;
      }
     }
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
   } while(0);
   $1868 = (($db) + 63|0);
   $1869 = HEAP8[$1868>>0]|0;
   $1870 = ($1869<<24>>24)!=(0);
   $1871 = (($1788) + 1)|0;
   $1872 = ($1795|0)==($1871|0);
   $or$cond = $1870 & $1872;
   if (!($or$cond)) {
    $$0 = $1789;
    STACKTOP = sp;return ($$0|0);
   }
   $1873 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($1789,$last,$db)|0);
   $1874 = ($1873|0)==($1789|0);
   if ($1874) {
    $$0 = $1789;
    STACKTOP = sp;return ($$0|0);
   }
   $1875 = HEAP32[$1782>>2]|0;
   $1876 = (($1875) + -24|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args,$1876);
   $1877 = HEAP32[$1782>>2]|0;
   $1878 = (($1877) + -24|0);
   $1880 = $1877;
   while(1) {
    $1879 = (($1880) + -24|0);
    HEAP32[$1782>>2] = $1879;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1879);
    $1881 = HEAP32[$1782>>2]|0;
    $1882 = ($1881|0)==($1878|0);
    if ($1882) {
     break;
    } else {
     $1880 = $1881;
    }
   }
   $1883 = (($1877) + -48|0);
   $1884 = HEAP8[$args>>0]|0;
   $1885 = $1884 & 1;
   $1886 = ($1885<<24>>24)==(0);
   if ($1886) {
    $1891 = (($args) + 1|0);
    $1892 = $1884&255;
    $1893 = $1892 >>> 1;
    $1894 = $1891;$1895 = $1893;
   } else {
    $1887 = (($args) + 8|0);
    $1888 = HEAP32[$1887>>2]|0;
    $1889 = (($args) + 4|0);
    $1890 = HEAP32[$1889>>2]|0;
    $1894 = $1888;$1895 = $1890;
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1883,$1894,$1895)|0);
   $1896 = HEAP32[$1782>>2]|0;
   $1897 = (($1896) + -24|0);
   $1898 = HEAP32[$1798>>2]|0;
   HEAP32[$24>>2] = $1898;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($23,$1897,$24);
   $1899 = HEAP32[$1800>>2]|0;
   $1900 = HEAP32[$1802>>2]|0;
   $1901 = ($1899>>>0)<($1900>>>0);
   if ($1901) {
    $1902 = ($1899|0)==(0|0);
    if ($1902) {
     $1914 = 0;
    } else {
     $1903 = (($1899) + 4|0);
     $1904 = (($23) + 12|0);
     $1905 = HEAP32[$1904>>2]|0;
     $1906 = (($1899) + 8|0);
     $1907 = (($1899) + 12|0);
     HEAP32[$1907>>2] = $1905;
     $1908 = HEAP32[$23>>2]|0;
     HEAP32[$1899>>2] = $1908;
     $1909 = (($23) + 4|0);
     $1910 = HEAP32[$1909>>2]|0;
     HEAP32[$1903>>2] = $1910;
     $1911 = (($23) + 8|0);
     $1912 = HEAP32[$1911>>2]|0;
     HEAP32[$1906>>2] = $1912;
     HEAP32[$1911>>2] = 0;
     HEAP32[$1909>>2] = 0;
     HEAP32[$23>>2] = 0;
     $$pre$i211 = HEAP32[$1800>>2]|0;
     $1914 = $$pre$i211;
    }
    $1913 = (($1914) + 16|0);
    HEAP32[$1800>>2] = $1913;
   } else {
    $1915 = (($db) + 28|0);
    $1916 = HEAP32[$1797>>2]|0;
    $1917 = $1899;
    $1918 = $1916;
    $1919 = (($1917) - ($1918))|0;
    $1920 = $1919 >> 4;
    $1921 = (($1920) + 1)|0;
    $1922 = ($1921|0)<(0);
    if ($1922) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $1923 = $1900;
    $1924 = (($1923) - ($1918))|0;
    $1925 = $1924 >> 4;
    $1926 = ($1925>>>0)<(1073741823);
    if ($1926) {
     $1927 = $1924 >> 3;
     $1928 = ($1927>>>0)<($1921>>>0);
     $1929 = $1928 ? $1921 : $1927;
     $$0$i$i$i213 = $1929;
    } else {
     $$0$i$i$i213 = 2147483647;
    }
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i213,$1920,$1915);
    $1930 = (($__v$i$i$i) + 8|0);
    $1931 = HEAP32[$1930>>2]|0;
    $1932 = ($1931|0)==(0|0);
    if (!($1932)) {
     $1933 = (($1931) + 4|0);
     $1934 = (($23) + 12|0);
     $1935 = HEAP32[$1934>>2]|0;
     $1936 = (($1931) + 8|0);
     $1937 = (($1931) + 12|0);
     HEAP32[$1937>>2] = $1935;
     $1938 = HEAP32[$23>>2]|0;
     HEAP32[$1931>>2] = $1938;
     $1939 = (($23) + 4|0);
     $1940 = HEAP32[$1939>>2]|0;
     HEAP32[$1933>>2] = $1940;
     $1941 = (($23) + 8|0);
     $1942 = HEAP32[$1941>>2]|0;
     HEAP32[$1936>>2] = $1942;
     HEAP32[$1941>>2] = 0;
     HEAP32[$1939>>2] = 0;
     HEAP32[$23>>2] = 0;
    }
    $1943 = (($1931) + 16|0);
    HEAP32[$1930>>2] = $1943;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($1797,$__v$i$i$i);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
   }
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($23);
   if ($1886) {
    $$0 = $1873;
    STACKTOP = sp;return ($$0|0);
   }
   $1944 = (($args) + 8|0);
   $1945 = HEAP32[$1944>>2]|0;
   _free($1945);
   $$0 = $1873;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 85:  {
   $1946 = (($first) + 1|0);
   $1947 = ($1946|0)==($last|0);
   if ($1947) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1948 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($1946,$last,$db)|0);
   $1949 = ($1948|0)==($1946|0);
   if ($1949) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1950 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1948,$last,$db)|0);
   $1951 = ($1950|0)==($1948|0);
   if ($1951) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1952 = (($db) + 4|0);
   $1953 = HEAP32[$1952>>2]|0;
   $1954 = HEAP32[$db>>2]|0;
   $1955 = $1953;
   $1956 = $1954;
   $1957 = (($1955) - ($1956))|0;
   $1958 = (($1957|0) / 24)&-1;
   $1959 = ($1958>>>0)<(2);
   if ($1959) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1960 = (($1953) + -24|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($type,$1960);
   $1961 = HEAP32[$1952>>2]|0;
   $1962 = (($1961) + -24|0);
   $1964 = $1961;
   while(1) {
    $1963 = (($1964) + -24|0);
    HEAP32[$1952>>2] = $1963;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1963);
    $1965 = HEAP32[$1952>>2]|0;
    $1966 = ($1965|0)==($1962|0);
    if ($1966) {
     break;
    } else {
     $1964 = $1965;
    }
   }
   $1967 = (($1961) + -48|0);
   $1968 = HEAP8[$1967>>0]|0;
   $1969 = $1968 & 1;
   $1970 = ($1969<<24>>24)==(0);
   if ($1970) {
    $1975 = $1968&255;
    $1976 = $1975 >>> 1;
    $1977 = (($1967) + 1|0);
    $1979 = $1976;$1981 = $1977;
   } else {
    $1971 = (($1961) + -44|0);
    $1972 = HEAP32[$1971>>2]|0;
    $1973 = (($1961) + -40|0);
    $1974 = HEAP32[$1973>>2]|0;
    $1979 = $1972;$1981 = $1974;
   }
   $1978 = ($1979>>>0)<(9);
   $1980 = $1978 ? $1979 : 9;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($25,$1981,$1980);
   $1982 = HEAP8[$25>>0]|0;
   $1983 = $1982 & 1;
   $1984 = ($1983<<24>>24)==(0);
   if ($1984) {
    $1989 = $1982&255;
    $1990 = $1989 >>> 1;
    $1991 = (($25) + 1|0);
    $1993 = $1990;$2794 = $1991;
   } else {
    $1985 = (($25) + 4|0);
    $1986 = HEAP32[$1985>>2]|0;
    $1987 = (($25) + 8|0);
    $1988 = HEAP32[$1987>>2]|0;
    $1993 = $1986;$2794 = $1988;
   }
   $1992 = ($1993>>>0)>(9);
   $1994 = $1992 ? 9 : $1993;
   $1995 = ($1994|0)==(0);
   L1183: do {
    if ($1995) {
     label = 639;
    } else {
     $$02$i148 = $1994;$l$03$i147 = $2794;$r$04$i146 = 48800;
     while(1) {
      $1996 = HEAP8[$l$03$i147>>0]|0;
      $1997 = HEAP8[$r$04$i146>>0]|0;
      $1998 = ($1996<<24>>24)==($1997<<24>>24);
      if (!($1998)) {
       break;
      }
      $1999 = (($$02$i148) + -1)|0;
      $2000 = (($l$03$i147) + 1|0);
      $2001 = (($r$04$i146) + 1|0);
      $2002 = ($1999|0)==(0);
      if ($2002) {
       label = 639;
       break L1183;
      } else {
       $$02$i148 = $1999;$l$03$i147 = $2000;$r$04$i146 = $2001;
      }
     }
     $2003 = $1996&255;
     $2004 = $1997&255;
     $2005 = (($2003) - ($2004))|0;
     $2006 = ($1996<<24>>24)==($1997<<24>>24);
     if ($2006) {
      label = 639;
     } else {
      $2009 = $2005;
     }
    }
   } while(0);
   if ((label|0) == 639) {
    $2007 = ($1993>>>0)<(9);
    $$$i$i$i$i233 = $1992&1;
    $$$$i$i$i$i233 = $2007 ? -1 : $$$i$i$i$i233;
    $2009 = $$$$i$i$i$i233;
   }
   $2008 = ($2009|0)==(0);
   if (!($1984)) {
    $2010 = (($25) + 8|0);
    $2011 = HEAP32[$2010>>2]|0;
    _free($2011);
   }
   $2012 = HEAP32[$1952>>2]|0;
   $2013 = (($2012) + -24|0);
   if ($2008) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($proto,$2013);
    $2043 = HEAP32[$1952>>2]|0;
    $2044 = (($2043) + -24|0);
    $2046 = $2043;
    while(1) {
     $2045 = (($2046) + -24|0);
     HEAP32[$1952>>2] = $2045;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2045);
     $2047 = HEAP32[$1952>>2]|0;
     $2048 = ($2047|0)==($2044|0);
     if ($2048) {
      break;
     } else {
      $2046 = $2047;
     }
    }
    $2049 = HEAP8[$proto>>0]|0;
    $2050 = $2049 & 1;
    $2051 = ($2050<<24>>24)==(0);
    if ($2051) {
     $2056 = (($proto) + 1|0);
     $2057 = $2049&255;
     $2058 = $2057 >>> 1;
     $2060 = $2056;$2062 = $2058;
    } else {
     $2052 = (($proto) + 8|0);
     $2053 = HEAP32[$2052>>2]|0;
     $2054 = (($proto) + 4|0);
     $2055 = HEAP32[$2054>>2]|0;
     $2060 = $2053;$2062 = $2055;
    }
    $2059 = (($2060) + 9|0);
    $2061 = (($2060) + ($2062)|0);
    $2063 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($2059,$2061,$db)|0);
    $2064 = HEAP8[$proto>>0]|0;
    $2065 = $2064 & 1;
    $2066 = ($2065<<24>>24)==(0);
    if ($2066) {
     $2069 = (($proto) + 1|0);
     $2071 = $2069;
    } else {
     $2067 = (($proto) + 8|0);
     $2068 = HEAP32[$2067>>2]|0;
     $2071 = $2068;
    }
    $2070 = (($2071) + 9|0);
    $2072 = ($2063|0)==($2070|0);
    do {
     if ($2072) {
      __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($34,$type,48816);
      $2107 = HEAP8[$proto>>0]|0;
      $2108 = $2107 & 1;
      $2109 = ($2108<<24>>24)==(0);
      if ($2109) {
       $2114 = (($proto) + 1|0);
       $2115 = $2107&255;
       $2116 = $2115 >>> 1;
       $2117 = $2114;$2118 = $2116;
      } else {
       $2110 = (($proto) + 8|0);
       $2111 = HEAP32[$2110>>2]|0;
       $2112 = (($proto) + 4|0);
       $2113 = HEAP32[$2112>>2]|0;
       $2117 = $2111;$2118 = $2113;
      }
      $2119 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($34,$2117,$2118)|0);
      $2120 = HEAP8[$2119>>0]|0;
      $2121 = (($2119) + 1|0);
      ;HEAP8[$$sroa$5+0>>0]=HEAP8[$2121+0>>0]|0;HEAP8[$$sroa$5+1>>0]=HEAP8[$2121+1>>0]|0;HEAP8[$$sroa$5+2>>0]=HEAP8[$2121+2>>0]|0;HEAP8[$$sroa$5+3>>0]=HEAP8[$2121+3>>0]|0;HEAP8[$$sroa$5+4>>0]=HEAP8[$2121+4>>0]|0;HEAP8[$$sroa$5+5>>0]=HEAP8[$2121+5>>0]|0;HEAP8[$$sroa$5+6>>0]=HEAP8[$2121+6>>0]|0;
      $2122 = (($2119) + 8|0);
      $2123 = HEAP32[$2122>>2]|0;
      ;HEAP32[$2119+0>>2]=0|0;HEAP32[$2119+4>>2]=0|0;HEAP32[$2119+8>>2]=0|0;
      HEAP8[$33>>0] = $2120;
      $2124 = (($33) + 1|0);
      ;HEAP8[$2124+0>>0]=HEAP8[$$sroa$5+0>>0]|0;HEAP8[$2124+1>>0]=HEAP8[$$sroa$5+1>>0]|0;HEAP8[$2124+2>>0]=HEAP8[$$sroa$5+2>>0]|0;HEAP8[$2124+3>>0]=HEAP8[$$sroa$5+3>>0]|0;HEAP8[$2124+4>>0]=HEAP8[$$sroa$5+4>>0]|0;HEAP8[$2124+5>>0]=HEAP8[$$sroa$5+5>>0]|0;HEAP8[$2124+6>>0]=HEAP8[$$sroa$5+6>>0]|0;
      $2125 = (($33) + 8|0);
      HEAP32[$2125>>2] = $2123;
      ;HEAP8[$$sroa$5+0>>0]=0|0;HEAP8[$$sroa$5+1>>0]=0|0;HEAP8[$$sroa$5+2>>0]=0|0;HEAP8[$$sroa$5+3>>0]=0|0;HEAP8[$$sroa$5+4>>0]=0|0;HEAP8[$$sroa$5+5>>0]=0|0;HEAP8[$$sroa$5+6>>0]=0|0;
      $2126 = (($33) + 12|0);
      ;HEAP32[$2126+0>>2]=0|0;HEAP32[$2126+4>>2]=0|0;HEAP32[$2126+8>>2]=0|0;
      $2127 = HEAP32[$1952>>2]|0;
      $2128 = (($db) + 8|0);
      $2129 = HEAP32[$2128>>2]|0;
      $2130 = ($2127>>>0)<($2129>>>0);
      if ($2130) {
       $2131 = ($2127|0)==(0|0);
       if ($2131) {
        $2134 = 0;
       } else {
        ;HEAP32[$2127+0>>2]=HEAP32[$33+0>>2]|0;HEAP32[$2127+4>>2]=HEAP32[$33+4>>2]|0;HEAP32[$2127+8>>2]=HEAP32[$33+8>>2]|0;
        ;HEAP32[$33+0>>2]=0|0;HEAP32[$33+4>>2]=0|0;HEAP32[$33+8>>2]=0|0;
        $2132 = (($2127) + 12|0);
        ;HEAP32[$2132+0>>2]=HEAP32[$2126+0>>2]|0;HEAP32[$2132+4>>2]=HEAP32[$2126+4>>2]|0;HEAP32[$2132+8>>2]=HEAP32[$2126+8>>2]|0;
        ;HEAP32[$2126+0>>2]=0|0;HEAP32[$2126+4>>2]=0|0;HEAP32[$2126+8>>2]=0|0;
        $$pre$i252 = HEAP32[$1952>>2]|0;
        $2134 = $$pre$i252;
       }
       $2133 = (($2134) + 24|0);
       HEAP32[$1952>>2] = $2133;
      } else {
       $2135 = (($db) + 12|0);
       $2136 = HEAP32[$db>>2]|0;
       $2137 = $2127;
       $2138 = $2136;
       $2139 = (($2137) - ($2138))|0;
       $2140 = (($2139|0) / 24)&-1;
       $2141 = (($2140) + 1)|0;
       $2142 = ($2141|0)<(0);
       if ($2142) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
        // unreachable;
       }
       $2143 = $2129;
       $2144 = (($2143) - ($2138))|0;
       $2145 = (($2144|0) / 24)&-1;
       $2146 = ($2145>>>0)<(1073741823);
       if ($2146) {
        $2147 = $2145 << 1;
        $2148 = ($2147>>>0)<($2141>>>0);
        $2149 = $2148 ? $2141 : $2147;
        $$0$i$i$i253 = $2149;
       } else {
        $$0$i$i$i253 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i$i,$$0$i$i$i253,$2140,$2135);
       $2150 = (($__v$i$i$i) + 8|0);
       $2151 = HEAP32[$2150>>2]|0;
       $2152 = ($2151|0)==(0|0);
       if (!($2152)) {
        ;HEAP32[$2151+0>>2]=HEAP32[$33+0>>2]|0;HEAP32[$2151+4>>2]=HEAP32[$33+4>>2]|0;HEAP32[$2151+8>>2]=HEAP32[$33+8>>2]|0;
        ;HEAP32[$33+0>>2]=0|0;HEAP32[$33+4>>2]=0|0;HEAP32[$33+8>>2]=0|0;
        $2153 = (($2151) + 12|0);
        ;HEAP32[$2153+0>>2]=HEAP32[$2126+0>>2]|0;HEAP32[$2153+4>>2]=HEAP32[$2126+4>>2]|0;HEAP32[$2153+8>>2]=HEAP32[$2126+8>>2]|0;
        ;HEAP32[$2126+0>>2]=0|0;HEAP32[$2126+4>>2]=0|0;HEAP32[$2126+8>>2]=0|0;
       }
       $2154 = (($2151) + 24|0);
       HEAP32[$2150>>2] = $2154;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i$i);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i$i);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($33);
      $$pre207 = HEAP8[$34>>0]|0;
      $phitmp219 = $$pre207 & 1;
      $phitmp220 = ($phitmp219<<24>>24)==(0);
      if ($phitmp220) {
       break;
      }
      $2155 = (($34) + 8|0);
      $2156 = HEAP32[$2155>>2]|0;
      _free($2156);
     } else {
      $2073 = HEAP32[$1952>>2]|0;
      $2074 = (($2073) + -24|0);
      __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($31,$type,48824);
      $2075 = HEAP32[$1952>>2]|0;
      $2076 = (($2075) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($32,$2076);
      $2077 = HEAP8[$32>>0]|0;
      $2078 = $2077 & 1;
      $2079 = ($2078<<24>>24)==(0);
      if ($2079) {
       $2084 = (($32) + 1|0);
       $2085 = $2077&255;
       $2086 = $2085 >>> 1;
       $2087 = $2084;$2088 = $2086;
      } else {
       $2080 = (($32) + 8|0);
       $2081 = HEAP32[$2080>>2]|0;
       $2082 = (($32) + 4|0);
       $2083 = HEAP32[$2082>>2]|0;
       $2087 = $2081;$2088 = $2083;
      }
      $2089 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($31,$2087,$2088)|0);
      ;HEAP32[$30+0>>2]=HEAP32[$2089+0>>2]|0;HEAP32[$30+4>>2]=HEAP32[$2089+4>>2]|0;HEAP32[$30+8>>2]=HEAP32[$2089+8>>2]|0;
      ;HEAP32[$2089+0>>2]=0|0;HEAP32[$2089+4>>2]=0|0;HEAP32[$2089+8>>2]=0|0;
      $2090 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($30,48832,1)|0);
      $2091 = HEAP8[$2090>>0]|0;
      $2092 = (($2090) + 1|0);
      ;HEAP8[$$sroa$4+0>>0]=HEAP8[$2092+0>>0]|0;HEAP8[$$sroa$4+1>>0]=HEAP8[$2092+1>>0]|0;HEAP8[$$sroa$4+2>>0]=HEAP8[$2092+2>>0]|0;HEAP8[$$sroa$4+3>>0]=HEAP8[$2092+3>>0]|0;HEAP8[$$sroa$4+4>>0]=HEAP8[$2092+4>>0]|0;HEAP8[$$sroa$4+5>>0]=HEAP8[$2092+5>>0]|0;HEAP8[$$sroa$4+6>>0]=HEAP8[$2092+6>>0]|0;
      $2093 = (($2090) + 8|0);
      $2094 = HEAP32[$2093>>2]|0;
      ;HEAP32[$2090+0>>2]=0|0;HEAP32[$2090+4>>2]=0|0;HEAP32[$2090+8>>2]=0|0;
      HEAP8[$29>>0] = $2091;
      $2095 = (($29) + 1|0);
      ;HEAP8[$2095+0>>0]=HEAP8[$$sroa$4+0>>0]|0;HEAP8[$2095+1>>0]=HEAP8[$$sroa$4+1>>0]|0;HEAP8[$2095+2>>0]=HEAP8[$$sroa$4+2>>0]|0;HEAP8[$2095+3>>0]=HEAP8[$$sroa$4+3>>0]|0;HEAP8[$2095+4>>0]=HEAP8[$$sroa$4+4>>0]|0;HEAP8[$2095+5>>0]=HEAP8[$$sroa$4+5>>0]|0;HEAP8[$2095+6>>0]=HEAP8[$$sroa$4+6>>0]|0;
      $2096 = (($29) + 8|0);
      HEAP32[$2096>>2] = $2094;
      ;HEAP8[$$sroa$4+0>>0]=0|0;HEAP8[$$sroa$4+1>>0]=0|0;HEAP8[$$sroa$4+2>>0]=0|0;HEAP8[$$sroa$4+3>>0]=0|0;HEAP8[$$sroa$4+4>>0]=0|0;HEAP8[$$sroa$4+5>>0]=0|0;HEAP8[$$sroa$4+6>>0]=0|0;
      $2097 = (($29) + 12|0);
      ;HEAP32[$2097+0>>2]=0|0;HEAP32[$2097+4>>2]=0|0;HEAP32[$2097+8>>2]=0|0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($2074,$29);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($29);
      $$pre208 = HEAP8[$30>>0]|0;
      $phitmp217 = $$pre208 & 1;
      $phitmp218 = ($phitmp217<<24>>24)==(0);
      if (!($phitmp218)) {
       $2098 = (($30) + 8|0);
       $2099 = HEAP32[$2098>>2]|0;
       _free($2099);
      }
      if (!($2079)) {
       $2100 = (($32) + 8|0);
       $2101 = HEAP32[$2100>>2]|0;
       _free($2101);
      }
      $2102 = HEAP8[$31>>0]|0;
      $2103 = $2102 & 1;
      $2104 = ($2103<<24>>24)==(0);
      if ($2104) {
       break;
      }
      $2105 = (($31) + 8|0);
      $2106 = HEAP32[$2105>>2]|0;
      _free($2106);
     }
    } while(0);
    $2157 = HEAP8[$proto>>0]|0;
    $2158 = $2157 & 1;
    $2159 = ($2158<<24>>24)==(0);
    if (!($2159)) {
     $2160 = (($proto) + 8|0);
     $2161 = HEAP32[$2160>>2]|0;
     _free($2161);
    }
   } else {
    __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($27,$type,48816);
    $2014 = HEAP32[$1952>>2]|0;
    $2015 = (($2014) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($28,$2015);
    $2016 = HEAP8[$28>>0]|0;
    $2017 = $2016 & 1;
    $2018 = ($2017<<24>>24)==(0);
    if ($2018) {
     $2023 = (($28) + 1|0);
     $2024 = $2016&255;
     $2025 = $2024 >>> 1;
     $2026 = $2023;$2027 = $2025;
    } else {
     $2019 = (($28) + 8|0);
     $2020 = HEAP32[$2019>>2]|0;
     $2021 = (($28) + 4|0);
     $2022 = HEAP32[$2021>>2]|0;
     $2026 = $2020;$2027 = $2022;
    }
    $2028 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($27,$2026,$2027)|0);
    $2029 = HEAP8[$2028>>0]|0;
    $2030 = (($2028) + 1|0);
    ;HEAP8[$$sroa$4183+0>>0]=HEAP8[$2030+0>>0]|0;HEAP8[$$sroa$4183+1>>0]=HEAP8[$2030+1>>0]|0;HEAP8[$$sroa$4183+2>>0]=HEAP8[$2030+2>>0]|0;HEAP8[$$sroa$4183+3>>0]=HEAP8[$2030+3>>0]|0;HEAP8[$$sroa$4183+4>>0]=HEAP8[$2030+4>>0]|0;HEAP8[$$sroa$4183+5>>0]=HEAP8[$2030+5>>0]|0;HEAP8[$$sroa$4183+6>>0]=HEAP8[$2030+6>>0]|0;
    $2031 = (($2028) + 8|0);
    $2032 = HEAP32[$2031>>2]|0;
    ;HEAP32[$2028+0>>2]=0|0;HEAP32[$2028+4>>2]=0|0;HEAP32[$2028+8>>2]=0|0;
    HEAP8[$26>>0] = $2029;
    $2033 = (($26) + 1|0);
    ;HEAP8[$2033+0>>0]=HEAP8[$$sroa$4183+0>>0]|0;HEAP8[$2033+1>>0]=HEAP8[$$sroa$4183+1>>0]|0;HEAP8[$2033+2>>0]=HEAP8[$$sroa$4183+2>>0]|0;HEAP8[$2033+3>>0]=HEAP8[$$sroa$4183+3>>0]|0;HEAP8[$2033+4>>0]=HEAP8[$$sroa$4183+4>>0]|0;HEAP8[$2033+5>>0]=HEAP8[$$sroa$4183+5>>0]|0;HEAP8[$2033+6>>0]=HEAP8[$$sroa$4183+6>>0]|0;
    $2034 = (($26) + 8|0);
    HEAP32[$2034>>2] = $2032;
    ;HEAP8[$$sroa$4183+0>>0]=0|0;HEAP8[$$sroa$4183+1>>0]=0|0;HEAP8[$$sroa$4183+2>>0]=0|0;HEAP8[$$sroa$4183+3>>0]=0|0;HEAP8[$$sroa$4183+4>>0]=0|0;HEAP8[$$sroa$4183+5>>0]=0|0;HEAP8[$$sroa$4183+6>>0]=0|0;
    $2035 = (($26) + 12|0);
    ;HEAP32[$2035+0>>2]=0|0;HEAP32[$2035+4>>2]=0|0;HEAP32[$2035+8>>2]=0|0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($2013,$26);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26);
    if (!($2018)) {
     $2036 = (($28) + 8|0);
     $2037 = HEAP32[$2036>>2]|0;
     _free($2037);
    }
    $2038 = HEAP8[$27>>0]|0;
    $2039 = $2038 & 1;
    $2040 = ($2039<<24>>24)==(0);
    if (!($2040)) {
     $2041 = (($27) + 8|0);
     $2042 = HEAP32[$2041>>2]|0;
     _free($2042);
    }
   }
   $2162 = HEAP32[$1952>>2]|0;
   $2163 = (($2162) + -24|0);
   $2164 = (($db) + 12|0);
   $2165 = HEAP32[$2164>>2]|0;
   HEAP32[$36>>2] = $2165;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($35,$2163,$36);
   $2166 = (($db) + 16|0);
   $2167 = (($db) + 20|0);
   $2168 = HEAP32[$2167>>2]|0;
   $2169 = (($db) + 24|0);
   $2170 = HEAP32[$2169>>2]|0;
   $2171 = ($2168>>>0)<($2170>>>0);
   if ($2171) {
    $2172 = ($2168|0)==(0|0);
    if ($2172) {
     $2184 = 0;
    } else {
     $2173 = (($2168) + 4|0);
     $2174 = (($35) + 12|0);
     $2175 = HEAP32[$2174>>2]|0;
     $2176 = (($2168) + 8|0);
     $2177 = (($2168) + 12|0);
     HEAP32[$2177>>2] = $2175;
     $2178 = HEAP32[$35>>2]|0;
     HEAP32[$2168>>2] = $2178;
     $2179 = (($35) + 4|0);
     $2180 = HEAP32[$2179>>2]|0;
     HEAP32[$2173>>2] = $2180;
     $2181 = (($35) + 8|0);
     $2182 = HEAP32[$2181>>2]|0;
     HEAP32[$2176>>2] = $2182;
     HEAP32[$2181>>2] = 0;
     HEAP32[$2179>>2] = 0;
     HEAP32[$35>>2] = 0;
     $$pre$i219 = HEAP32[$2167>>2]|0;
     $2184 = $$pre$i219;
    }
    $2183 = (($2184) + 16|0);
    HEAP32[$2167>>2] = $2183;
   } else {
    $2185 = (($db) + 28|0);
    $2186 = HEAP32[$2166>>2]|0;
    $2187 = $2168;
    $2188 = $2186;
    $2189 = (($2187) - ($2188))|0;
    $2190 = $2189 >> 4;
    $2191 = (($2190) + 1)|0;
    $2192 = ($2191|0)<(0);
    if ($2192) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $2193 = $2170;
    $2194 = (($2193) - ($2188))|0;
    $2195 = $2194 >> 4;
    $2196 = ($2195>>>0)<(1073741823);
    if ($2196) {
     $2197 = $2194 >> 3;
     $2198 = ($2197>>>0)<($2191>>>0);
     $2199 = $2198 ? $2191 : $2197;
     $$0$i$i$i221 = $2199;
    } else {
     $$0$i$i$i221 = 2147483647;
    }
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i221,$2190,$2185);
    $2200 = (($__v$i$i$i) + 8|0);
    $2201 = HEAP32[$2200>>2]|0;
    $2202 = ($2201|0)==(0|0);
    if (!($2202)) {
     $2203 = (($2201) + 4|0);
     $2204 = (($35) + 12|0);
     $2205 = HEAP32[$2204>>2]|0;
     $2206 = (($2201) + 8|0);
     $2207 = (($2201) + 12|0);
     HEAP32[$2207>>2] = $2205;
     $2208 = HEAP32[$35>>2]|0;
     HEAP32[$2201>>2] = $2208;
     $2209 = (($35) + 4|0);
     $2210 = HEAP32[$2209>>2]|0;
     HEAP32[$2203>>2] = $2210;
     $2211 = (($35) + 8|0);
     $2212 = HEAP32[$2211>>2]|0;
     HEAP32[$2206>>2] = $2212;
     HEAP32[$2211>>2] = 0;
     HEAP32[$2209>>2] = 0;
     HEAP32[$35>>2] = 0;
    }
    $2213 = (($2201) + 16|0);
    HEAP32[$2200>>2] = $2213;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2166,$__v$i$i$i);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
   }
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($35);
   $2214 = HEAP8[$type>>0]|0;
   $2215 = $2214 & 1;
   $2216 = ($2215<<24>>24)==(0);
   if ($2216) {
    $$0 = $1950;
    STACKTOP = sp;return ($$0|0);
   }
   $2217 = (($type) + 8|0);
   $2218 = HEAP32[$2217>>2]|0;
   _free($2218);
   $$0 = $1950;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  default: {
  }
  }
 } while(0);
 $2721 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 $2722 = ($2721|0)==($first|0);
 if (!($2722)) {
  $$0 = $2721;
  STACKTOP = sp;return ($$0|0);
 }
 $2723 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 $2724 = ($2723|0)==($first|0);
 if ($2724) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $2725 = HEAP32[$db>>2]|0;
 $2726 = (($db) + 4|0);
 $2727 = HEAP32[$2726>>2]|0;
 $2728 = ($2725|0)==($2727|0);
 if ($2728) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $2729 = (($db) + 16|0);
 $2730 = (($2727) + -24|0);
 $2731 = (($db) + 12|0);
 $2732 = HEAP32[$2731>>2]|0;
 HEAP32[$46>>2] = $2732;
 __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($45,$2730,$46);
 $2733 = (($db) + 20|0);
 $2734 = HEAP32[$2733>>2]|0;
 $2735 = (($db) + 24|0);
 $2736 = HEAP32[$2735>>2]|0;
 $2737 = ($2734>>>0)<($2736>>>0);
 if ($2737) {
  $2738 = ($2734|0)==(0|0);
  if ($2738) {
   $2750 = 0;
  } else {
   $2739 = (($2734) + 4|0);
   $2740 = (($45) + 12|0);
   $2741 = HEAP32[$2740>>2]|0;
   $2742 = (($2734) + 8|0);
   $2743 = (($2734) + 12|0);
   HEAP32[$2743>>2] = $2741;
   $2744 = HEAP32[$45>>2]|0;
   HEAP32[$2734>>2] = $2744;
   $2745 = (($45) + 4|0);
   $2746 = HEAP32[$2745>>2]|0;
   HEAP32[$2739>>2] = $2746;
   $2747 = (($45) + 8|0);
   $2748 = HEAP32[$2747>>2]|0;
   HEAP32[$2742>>2] = $2748;
   HEAP32[$2747>>2] = 0;
   HEAP32[$2745>>2] = 0;
   HEAP32[$45>>2] = 0;
   $$pre$i = HEAP32[$2733>>2]|0;
   $2750 = $$pre$i;
  }
  $2749 = (($2750) + 16|0);
  HEAP32[$2733>>2] = $2749;
 } else {
  $2751 = (($db) + 28|0);
  $2752 = HEAP32[$2729>>2]|0;
  $2753 = $2734;
  $2754 = $2752;
  $2755 = (($2753) - ($2754))|0;
  $2756 = $2755 >> 4;
  $2757 = (($2756) + 1)|0;
  $2758 = ($2757|0)<(0);
  if ($2758) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
   // unreachable;
  }
  $2759 = $2736;
  $2760 = (($2759) - ($2754))|0;
  $2761 = $2760 >> 4;
  $2762 = ($2761>>>0)<(1073741823);
  if ($2762) {
   $2763 = $2760 >> 3;
   $2764 = ($2763>>>0)<($2757>>>0);
   $2765 = $2764 ? $2757 : $2763;
   $$0$i$i$i = $2765;
  } else {
   $$0$i$i$i = 2147483647;
  }
  __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i$i,$$0$i$i$i,$2756,$2751);
  $2766 = (($__v$i$i$i) + 8|0);
  $2767 = HEAP32[$2766>>2]|0;
  $2768 = ($2767|0)==(0|0);
  if (!($2768)) {
   $2769 = (($2767) + 4|0);
   $2770 = (($45) + 12|0);
   $2771 = HEAP32[$2770>>2]|0;
   $2772 = (($2767) + 8|0);
   $2773 = (($2767) + 12|0);
   HEAP32[$2773>>2] = $2771;
   $2774 = HEAP32[$45>>2]|0;
   HEAP32[$2767>>2] = $2774;
   $2775 = (($45) + 4|0);
   $2776 = HEAP32[$2775>>2]|0;
   HEAP32[$2769>>2] = $2776;
   $2777 = (($45) + 8|0);
   $2778 = HEAP32[$2777>>2]|0;
   HEAP32[$2772>>2] = $2778;
   HEAP32[$2777>>2] = 0;
   HEAP32[$2775>>2] = 0;
   HEAP32[$45>>2] = 0;
  }
  $2779 = (($2767) + 16|0);
  HEAP32[$2766>>2] = $2779;
  __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($2729,$__v$i$i$i);
  __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i$i);
 }
 __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($45);
 $$0 = $2723;
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_del,$__n_add,$__p_new_stuff) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_del = $__n_del|0;
 $__n_add = $__n_add|0;
 $__p_new_stuff = $__p_new_stuff|0;
 var $$sum = 0, $$sum1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-18 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 1|0);
  $19 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $19 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  if ($13) {
   $16 = 11;
  } else {
   $14 = (($12) + 16)|0;
   $15 = $14 & -16;
   $16 = $15;
  }
 } else {
  $16 = -17;
 }
 $17 = (_malloc($16)|0);
 $18 = ($__n_copy|0)==(0);
 if (!($18)) {
  _memcpy(($17|0),($19|0),($__n_copy|0))|0;
 }
 $20 = ($__n_add|0)==(0);
 if (!($20)) {
  $21 = (($17) + ($__n_copy)|0);
  _memcpy(($21|0),($__p_new_stuff|0),($__n_add|0))|0;
 }
 $22 = (($__old_sz) - ($__n_del))|0;
 $23 = ($22|0)==($__n_copy|0);
 if (!($23)) {
  $24 = (($22) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $25 = (($17) + ($$sum)|0);
  $$sum1 = (($__n_del) + ($__n_copy))|0;
  $26 = (($19) + ($$sum1)|0);
  _memcpy(($25|0),($26|0),($24|0))|0;
 }
 $27 = ($__old_cap|0)==(10);
 if ($27) {
  $28 = (($this) + 8|0);
  HEAP32[$28>>2] = $17;
  $29 = $16 | 1;
  HEAP32[$this>>2] = $29;
  $30 = (($22) + ($__n_add))|0;
  $31 = (($this) + 4|0);
  HEAP32[$31>>2] = $30;
  $32 = (($17) + ($30)|0);
  HEAP8[$32>>0] = 0;
  STACKTOP = sp;return;
 }
 _free($19);
 $28 = (($this) + 8|0);
 HEAP32[$28>>2] = $17;
 $29 = $16 | 1;
 HEAP32[$this>>2] = $29;
 $30 = (($22) + ($__n_add))|0;
 $31 = (($this) + 4|0);
 HEAP32[$31>>2] = $30;
 $32 = (($17) + ($30)|0);
 HEAP8[$32>>0] = 0;
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _free($p);
 $0 = HEAP32[51184>>2]|0;
 $1 = (_pthread_setspecific(($0|0),(0|0))|0);
 $2 = ($1|0)==(0);
 if ($2) {
  STACKTOP = sp;return;
 } else {
  _abort_message(51312,$vararg_buffer);
  // unreachable;
 }
}
function __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($first,$last) {
 $first = $first|0;
 $last = $last|0;
 var $$0 = 0, $$first = 0, $$first3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond1 = 0, $or$cond2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($first|0)==($last|0);
 do {
  if ($0) {
   $$0 = $first;
  } else {
   $1 = HEAP8[$first>>0]|0;
   $2 = $1 << 24 >> 24;
   if ((($2|0) == 104)) {
    $3 = (($first) + 1|0);
    $4 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($3,$last)|0);
    $5 = ($4|0)==($3|0);
    $6 = ($4|0)==($last|0);
    $or$cond = $5 | $6;
    if ($or$cond) {
     $$0 = $first;
     break;
    }
    $7 = HEAP8[$4>>0]|0;
    $8 = ($7<<24>>24)==(95);
    $9 = (($4) + 1|0);
    $$first = $8 ? $9 : $first;
    $$0 = $$first;
    break;
   } else if (!((($2|0) == 118))) {
    $$0 = $first;
    break;
   }
   $10 = (($first) + 1|0);
   $11 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($10,$last)|0);
   $12 = ($11|0)==($10|0);
   $13 = ($11|0)==($last|0);
   $or$cond1 = $12 | $13;
   if ($or$cond1) {
    $$0 = $first;
   } else {
    $14 = HEAP8[$11>>0]|0;
    $15 = ($14<<24>>24)==(95);
    if ($15) {
     $16 = (($11) + 1|0);
     $17 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($16,$last)|0);
     $18 = ($17|0)==($16|0);
     $19 = ($17|0)==($last|0);
     $or$cond2 = $18 | $19;
     if ($or$cond2) {
      $$0 = $first;
     } else {
      $20 = HEAP8[$17>>0]|0;
      $21 = ($20<<24>>24)==(95);
      $22 = (($17) + 1|0);
      $$first3 = $21 ? $22 : $first;
      STACKTOP = sp;return ($$first3|0);
     }
    } else {
     $$0 = $first;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($first,$last) {
 $first = $first|0;
 $last = $last|0;
 var $$0 = 0, $$1 = 0, $$first = 0, $$off = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isdigit = 0, $isdigittmp = 0, $t$0$pn = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = ($first|0)==($last|0);
 L1: do {
  if ($0) {
   $$1 = $first;
  } else {
   $1 = HEAP8[$first>>0]|0;
   $2 = ($1<<24>>24)==(110);
   $3 = (($first) + 1|0);
   $$first = $2 ? $3 : $first;
   $4 = ($$first|0)==($last|0);
   if ($4) {
    $$1 = $first;
   } else {
    $5 = HEAP8[$$first>>0]|0;
    $6 = ($5<<24>>24)==(48);
    if ($6) {
     $7 = (($$first) + 1|0);
     $$1 = $7;
     break;
    }
    $$off = (($5) + -49)<<24>>24;
    $8 = ($$off&255)<(9);
    if ($8) {
     $t$0$pn = $$first;
     while(1) {
      $$0 = (($t$0$pn) + 1|0);
      $9 = ($$0|0)==($last|0);
      if ($9) {
       $$1 = $last;
       break L1;
      }
      $10 = HEAP8[$$0>>0]|0;
      $11 = $10 << 24 >> 24;
      $isdigittmp = (($11) + -48)|0;
      $isdigit = ($isdigittmp>>>0)<(10);
      if ($isdigit) {
       $t$0$pn = $$0;
      } else {
       $$1 = $$0;
       break;
      }
     }
    } else {
     $$1 = $first;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($agg$result,$this) {
 $agg$result = $agg$result|0;
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $8 = (($0) + 1|0);
  $9 = $1&255;
  $10 = $9 >>> 1;
  $11 = $8;$12 = $10;
 } else {
  $4 = (($this) + 20|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (($this) + 16|0);
  $7 = HEAP32[$6>>2]|0;
  $11 = $5;$12 = $7;
 }
 $13 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($this,$11,$12)|0);
 ;HEAP32[$agg$result+0>>2]=HEAP32[$13+0>>2]|0;HEAP32[$agg$result+4>>2]=HEAP32[$13+4>>2]|0;HEAP32[$agg$result+8>>2]=HEAP32[$13+8>>2]|0;
 ;HEAP32[$13+0>>2]=0|0;HEAP32[$13+4>>2]=0|0;HEAP32[$13+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$$i = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i17$i = 0, $$0$i$i$i27$i = 0, $$0$i$i$i41$i = 0, $$0$i$i$i54$i = 0, $$0$i$i$i68$i = 0, $$0$i12 = 0, $$02 = 0, $$07$i = 0, $$first = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i16$i = 0, $$pre$i25$i = 0, $$pre$i39$i = 0, $$pre$i52$i = 0, $$pre$i66$i = 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;
 var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;
 var $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0;
 var $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0;
 var $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0;
 var $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0;
 var $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0;
 var $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0;
 var $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0;
 var $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $St$0$off0$i = 0, $__v$i$i65$i = 0, $brmerge$i = 0, $cv$i = 0, $first$ = 0, $first$4 = 0, $first$mux$i = 0, $name$i13 = 0, $name1$i = 0, $name2$i14 = 0, $name3$i = 0;
 var $name4$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i18 = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond12$i = 0, $or$cond9$i = 0, $pop_subs$0$off0$i$ph84 = 0, $t0$0$i = 0, $t0$0$i15 = 0, $t0$1$i = 0, $t0$2$i$be = 0, $t0$2$i$ph$be = 0, $t0$2$i$ph83 = 0, $t0$2$i38 = 0, $tmp = 0, $tmp3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0;
 $__v$i$i65$i = sp + 252|0;
 $cv$i = sp + 228|0;
 $name$i13 = sp + 112|0;
 $0 = sp + 124|0;
 $1 = sp;
 $2 = sp + 56|0;
 $name1$i = sp + 60|0;
 $3 = sp + 72|0;
 $4 = sp + 88|0;
 $5 = sp + 200|0;
 $name2$i14 = sp + 216|0;
 $6 = sp + 240|0;
 $7 = sp + 272|0;
 $8 = sp + 136|0;
 $name3$i = sp + 140|0;
 $9 = sp + 152|0;
 $10 = sp + 168|0;
 $name4$i = sp + 28|0;
 $11 = sp + 172|0;
 $12 = sp + 40|0;
 $13 = sp + 104|0;
 $14 = sp + 184|0;
 $15 = sp + 108|0;
 $tmp = sp + 204|0;
 $tmp3 = sp + 16|0;
 $16 = $last;
 $17 = $first;
 $18 = (($16) - ($17))|0;
 $19 = ($18|0)>(1);
 if (!($19)) {
  $$02 = $first;
  STACKTOP = sp;return ($$02|0);
 }
 $20 = HEAP8[$first>>0]|0;
 $21 = ($20<<24>>24)==(76);
 $22 = (($first) + 1|0);
 $$first = $21 ? $22 : $first;
 $23 = HEAP8[$$first>>0]|0;
 $24 = $23 << 24 >> 24;
 if ((($24|0) == 78)) {
  $25 = ($$first|0)==($last|0);
  L6: do {
   if ($25) {
    $$07$i = $last;
   } else {
    $26 = ($23<<24>>24)==(78);
    if ($26) {
     $27 = (($$first) + 1|0);
     $28 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($27,$last,$cv$i)|0);
     $29 = ($28|0)==($last|0);
     if ($29) {
      $$07$i = $$first;
     } else {
      $30 = (($db) + 52|0);
      HEAP32[$30>>2] = 0;
      $31 = HEAP8[$28>>0]|0;
      if ((($31<<24>>24) == 82)) {
       HEAP32[$30>>2] = 1;
       $32 = (($28) + 1|0);
       $t0$0$i15 = $32;
      } else if ((($31<<24>>24) == 79)) {
       HEAP32[$30>>2] = 2;
       $33 = (($28) + 1|0);
       $t0$0$i15 = $33;
      } else {
       $t0$0$i15 = $28;
      }
      $34 = (($db) + 4|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = (($db) + 8|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = ($35>>>0)<($37>>>0);
      if ($38) {
       $39 = ($35|0)==(0|0);
       if ($39) {
        $41 = 0;
       } else {
        ;HEAP32[$35+0>>2]=0|0;HEAP32[$35+4>>2]=0|0;HEAP32[$35+8>>2]=0|0;HEAP32[$35+12>>2]=0|0;HEAP32[$35+16>>2]=0|0;HEAP32[$35+20>>2]=0|0;
        $$pre$i$i = HEAP32[$34>>2]|0;
        $41 = $$pre$i$i;
       }
       $40 = (($41) + 24|0);
       HEAP32[$34>>2] = $40;
      } else {
       $42 = (($db) + 12|0);
       $43 = HEAP32[$db>>2]|0;
       $44 = $35;
       $45 = $43;
       $46 = (($44) - ($45))|0;
       $47 = (($46|0) / 24)&-1;
       $48 = (($47) + 1)|0;
       $49 = ($48|0)<(0);
       if ($49) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
        // unreachable;
       }
       $50 = $37;
       $51 = (($50) - ($45))|0;
       $52 = (($51|0) / 24)&-1;
       $53 = ($52>>>0)<(1073741823);
       if ($53) {
        $54 = $52 << 1;
        $55 = ($54>>>0)<($48>>>0);
        $56 = $55 ? $48 : $54;
        $$0$i$i$i$i = $56;
       } else {
        $$0$i$i$i$i = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i65$i,$$0$i$i$i$i,$47,$42);
       $57 = (($__v$i$i65$i) + 8|0);
       $58 = HEAP32[$57>>2]|0;
       $59 = ($58|0)==(0|0);
       if (!($59)) {
        ;HEAP32[$58+0>>2]=0|0;HEAP32[$58+4>>2]=0|0;HEAP32[$58+8>>2]=0|0;HEAP32[$58+12>>2]=0|0;HEAP32[$58+16>>2]=0|0;HEAP32[$58+20>>2]=0|0;
       }
       $60 = (($58) + 24|0);
       HEAP32[$57>>2] = $60;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i65$i);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i65$i);
      }
      $61 = $t0$0$i15;
      $62 = (($16) - ($61))|0;
      $63 = ($62|0)>(1);
      if ($63) {
       $64 = HEAP8[$t0$0$i15>>0]|0;
       $65 = ($64<<24>>24)==(83);
       if ($65) {
        $66 = (($t0$0$i15) + 1|0);
        $67 = HEAP8[$66>>0]|0;
        $68 = ($67<<24>>24)==(116);
        if ($68) {
         $69 = (($t0$0$i15) + 2|0);
         $70 = HEAP32[$34>>2]|0;
         $71 = (($70) + -24|0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($71,50576,3);
         $t0$1$i = $69;
        } else {
         $t0$1$i = $t0$0$i15;
        }
       } else {
        $t0$1$i = $t0$0$i15;
       }
      } else {
       $t0$1$i = $t0$0$i15;
      }
      $72 = ($t0$1$i|0)==($last|0);
      if ($72) {
       $122 = HEAP32[$34>>2]|0;
       $123 = (($122) + -24|0);
       $125 = $122;
       while(1) {
        $124 = (($125) + -24|0);
        HEAP32[$34>>2] = $124;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($124);
        $126 = HEAP32[$34>>2]|0;
        $127 = ($126|0)==($123|0);
        if ($127) {
         $$07$i = $$first;
         break L6;
        } else {
         $125 = $126;
        }
       }
      }
      $73 = HEAP8[$t0$1$i>>0]|0;
      $74 = ($73<<24>>24)==(69);
      if ($74) {
       $75 = (($t0$1$i) + 1|0);
       $76 = HEAP32[$cv$i>>2]|0;
       $77 = (($db) + 48|0);
       HEAP32[$77>>2] = $76;
       $$07$i = $75;
       break;
      }
      $78 = (($name3$i) + 1|0);
      $79 = (($db) + 12|0);
      $80 = (($db) + 16|0);
      $81 = (($db) + 20|0);
      $82 = (($db) + 24|0);
      $83 = (($9) + 12|0);
      $84 = (($9) + 4|0);
      $85 = (($9) + 8|0);
      $86 = (($db) + 28|0);
      $87 = (($__v$i$i65$i) + 8|0);
      $88 = (($name3$i) + 8|0);
      $89 = (($name3$i) + 4|0);
      $90 = (($12) + 12|0);
      $91 = (($12) + 4|0);
      $92 = (($12) + 8|0);
      $93 = (($__v$i$i65$i) + 8|0);
      $94 = (($11) + 1|0);
      $95 = (($11) + 8|0);
      $96 = (($11) + 4|0);
      $97 = (($0) + 1|0);
      $98 = (($1) + 12|0);
      $99 = (($1) + 4|0);
      $100 = (($1) + 8|0);
      $101 = (($__v$i$i65$i) + 8|0);
      $102 = (($0) + 8|0);
      $103 = (($0) + 4|0);
      $104 = (($4) + 12|0);
      $105 = (($4) + 4|0);
      $106 = (($4) + 8|0);
      $107 = (($__v$i$i65$i) + 8|0);
      $108 = (($3) + 1|0);
      $109 = (($3) + 8|0);
      $110 = (($3) + 4|0);
      $111 = (($7) + 12|0);
      $112 = (($7) + 4|0);
      $113 = (($7) + 8|0);
      $114 = (($__v$i$i65$i) + 8|0);
      $115 = (($6) + 1|0);
      $116 = (($6) + 8|0);
      $117 = (($6) + 4|0);
      $118 = (($name4$i) + 8|0);
      $119 = (($name$i13) + 8|0);
      $120 = (($name1$i) + 8|0);
      $121 = (($name2$i14) + 8|0);
      $787 = $73;$pop_subs$0$off0$i$ph84 = 0;$t0$2$i$ph83 = $t0$1$i;
      L43: while(1) {
       $129 = $787;$t0$2$i38 = $t0$2$i$ph83;
       L45: while(1) {
        $128 = $129 << 24 >> 24;
        switch ($128|0) {
        case 83:  {
         label = 31;
         break L45;
         break;
        }
        case 84:  {
         label = 60;
         break L45;
         break;
        }
        case 68:  {
         label = 86;
         break L45;
         break;
        }
        case 76:  {
         $435 = (($t0$2$i38) + 1|0);
         $436 = ($435|0)==($last|0);
         if ($436) {
          $$07$i = $$first;
          break L6;
         } else {
          $t0$2$i$be = $435;
         }
         break;
        }
        case 73:  {
         $371 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($t0$2$i38,$last,$db)|0);
         $372 = ($371|0)==($t0$2$i38|0);
         $373 = ($371|0)==($last|0);
         $or$cond11$i = $372 | $373;
         if ($or$cond11$i) {
          $$07$i = $$first;
          break L6;
         }
         $374 = HEAP32[$34>>2]|0;
         $375 = (($374) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name3$i,$375);
         $376 = HEAP32[$34>>2]|0;
         $377 = (($376) + -24|0);
         $379 = $376;
         while(1) {
          $378 = (($379) + -24|0);
          HEAP32[$34>>2] = $378;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($378);
          $380 = HEAP32[$34>>2]|0;
          $381 = ($380|0)==($377|0);
          if ($381) {
           break;
          } else {
           $379 = $380;
          }
         }
         $382 = (($376) + -48|0);
         $383 = HEAP8[$name3$i>>0]|0;
         $384 = $383 & 1;
         $385 = ($384<<24>>24)==(0);
         if ($385) {
          $388 = $383&255;
          $389 = $388 >>> 1;
          $390 = $78;$391 = $389;
         } else {
          $386 = HEAP32[$88>>2]|0;
          $387 = HEAP32[$89>>2]|0;
          $390 = $386;$391 = $387;
         }
         (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($382,$390,$391)|0);
         $392 = HEAP32[$34>>2]|0;
         $393 = (($392) + -24|0);
         $394 = HEAP32[$79>>2]|0;
         HEAP32[$10>>2] = $394;
         __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($9,$393,$10);
         $395 = HEAP32[$81>>2]|0;
         $396 = HEAP32[$82>>2]|0;
         $397 = ($395>>>0)<($396>>>0);
         if ($397) {
          $398 = ($395|0)==(0|0);
          if ($398) {
           $407 = 0;
          } else {
           $399 = (($395) + 4|0);
           $400 = HEAP32[$83>>2]|0;
           $401 = (($395) + 8|0);
           $402 = (($395) + 12|0);
           HEAP32[$402>>2] = $400;
           $403 = HEAP32[$9>>2]|0;
           HEAP32[$395>>2] = $403;
           $404 = HEAP32[$84>>2]|0;
           HEAP32[$399>>2] = $404;
           $405 = HEAP32[$85>>2]|0;
           HEAP32[$401>>2] = $405;
           HEAP32[$85>>2] = 0;
           HEAP32[$84>>2] = 0;
           HEAP32[$9>>2] = 0;
           $$pre$i52$i = HEAP32[$81>>2]|0;
           $407 = $$pre$i52$i;
          }
          $406 = (($407) + 16|0);
          HEAP32[$81>>2] = $406;
         } else {
          $408 = HEAP32[$80>>2]|0;
          $409 = $395;
          $410 = $408;
          $411 = (($409) - ($410))|0;
          $412 = $411 >> 4;
          $413 = (($412) + 1)|0;
          $414 = ($413|0)<(0);
          if ($414) {
           label = 125;
           break L43;
          }
          $415 = $396;
          $416 = (($415) - ($410))|0;
          $417 = $416 >> 4;
          $418 = ($417>>>0)<(1073741823);
          if ($418) {
           $419 = $416 >> 3;
           $420 = ($419>>>0)<($413>>>0);
           $421 = $420 ? $413 : $419;
           $$0$i$i$i54$i = $421;
          } else {
           $$0$i$i$i54$i = 2147483647;
          }
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i65$i,$$0$i$i$i54$i,$412,$86);
          $422 = HEAP32[$87>>2]|0;
          $423 = ($422|0)==(0|0);
          if (!($423)) {
           $424 = (($422) + 4|0);
           $425 = HEAP32[$83>>2]|0;
           $426 = (($422) + 8|0);
           $427 = (($422) + 12|0);
           HEAP32[$427>>2] = $425;
           $428 = HEAP32[$9>>2]|0;
           HEAP32[$422>>2] = $428;
           $429 = HEAP32[$84>>2]|0;
           HEAP32[$424>>2] = $429;
           $430 = HEAP32[$85>>2]|0;
           HEAP32[$426>>2] = $430;
           HEAP32[$85>>2] = 0;
           HEAP32[$84>>2] = 0;
           HEAP32[$9>>2] = 0;
          }
          $431 = (($422) + 16|0);
          HEAP32[$87>>2] = $431;
          __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($80,$__v$i$i65$i);
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i65$i);
         }
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($9);
         if ($385) {
          $t0$2$i$be = $371;
         } else {
          $432 = HEAP32[$88>>2]|0;
          _free($432);
          $t0$2$i$be = $371;
         }
         break;
        }
        default: {
         label = 135;
         break L45;
        }
        }
        $433 = HEAP8[$t0$2$i$be>>0]|0;
        $434 = ($433<<24>>24)==(69);
        if ($434) {
         label = 164;
         break L43;
        } else {
         $129 = $433;$t0$2$i38 = $t0$2$i$be;
        }
       }
       do {
        if ((label|0) == 31) {
         label = 0;
         $130 = (($t0$2$i38) + 1|0);
         $131 = ($130|0)==($last|0);
         if (!($131)) {
          $132 = HEAP8[$130>>0]|0;
          $133 = ($132<<24>>24)==(116);
          if ($133) {
           label = 135;
           break;
          }
         }
         $134 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($t0$2$i38,$last,$db)|0);
         $135 = ($134|0)==($t0$2$i38|0);
         $136 = ($134|0)==($last|0);
         $or$cond$i18 = $135 | $136;
         if ($or$cond$i18) {
          $$07$i = $$first;
          break L6;
         }
         $137 = HEAP32[$34>>2]|0;
         $138 = (($137) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name$i13,$138);
         $139 = HEAP32[$34>>2]|0;
         $140 = (($139) + -24|0);
         $142 = $139;
         while(1) {
          $141 = (($142) + -24|0);
          HEAP32[$34>>2] = $141;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($141);
          $143 = HEAP32[$34>>2]|0;
          $144 = ($143|0)==($140|0);
          if ($144) {
           break;
          } else {
           $142 = $143;
          }
         }
         $145 = (($139) + -48|0);
         $146 = HEAP8[$145>>0]|0;
         $147 = $146 & 1;
         $148 = ($147<<24>>24)==(0);
         if ($148) {
          $151 = $146&255;
          $152 = $151 >>> 1;
          $154 = $152;
         } else {
          $149 = (($139) + -44|0);
          $150 = HEAP32[$149>>2]|0;
          $154 = $150;
         }
         $153 = ($154|0)==(0);
         if ($153) {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($145,$name$i13);
         } else {
          __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($0,48888,$name$i13);
          $155 = HEAP8[$0>>0]|0;
          $156 = $155 & 1;
          $157 = ($156<<24>>24)==(0);
          if ($157) {
           $160 = $155&255;
           $161 = $160 >>> 1;
           $162 = $97;$163 = $161;
          } else {
           $158 = HEAP32[$102>>2]|0;
           $159 = HEAP32[$103>>2]|0;
           $162 = $158;$163 = $159;
          }
          (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($145,$162,$163)|0);
          $164 = HEAP8[$0>>0]|0;
          $165 = $164 & 1;
          $166 = ($165<<24>>24)==(0);
          if (!($166)) {
           $167 = HEAP32[$102>>2]|0;
           _free($167);
          }
          $168 = HEAP32[$34>>2]|0;
          $169 = (($168) + -24|0);
          $170 = HEAP32[$79>>2]|0;
          HEAP32[$2>>2] = $170;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($1,$169,$2);
          $171 = HEAP32[$81>>2]|0;
          $172 = HEAP32[$82>>2]|0;
          $173 = ($171>>>0)<($172>>>0);
          if ($173) {
           $174 = ($171|0)==(0|0);
           if ($174) {
            $183 = 0;
           } else {
            $175 = (($171) + 4|0);
            $176 = HEAP32[$98>>2]|0;
            $177 = (($171) + 8|0);
            $178 = (($171) + 12|0);
            HEAP32[$178>>2] = $176;
            $179 = HEAP32[$1>>2]|0;
            HEAP32[$171>>2] = $179;
            $180 = HEAP32[$99>>2]|0;
            HEAP32[$175>>2] = $180;
            $181 = HEAP32[$100>>2]|0;
            HEAP32[$177>>2] = $181;
            HEAP32[$100>>2] = 0;
            HEAP32[$99>>2] = 0;
            HEAP32[$1>>2] = 0;
            $$pre$i16$i = HEAP32[$81>>2]|0;
            $183 = $$pre$i16$i;
           }
           $182 = (($183) + 16|0);
           HEAP32[$81>>2] = $182;
          } else {
           $184 = HEAP32[$80>>2]|0;
           $185 = $171;
           $186 = $184;
           $187 = (($185) - ($186))|0;
           $188 = $187 >> 4;
           $189 = (($188) + 1)|0;
           $190 = ($189|0)<(0);
           if ($190) {
            label = 50;
            break L43;
           }
           $191 = $172;
           $192 = (($191) - ($186))|0;
           $193 = $192 >> 4;
           $194 = ($193>>>0)<(1073741823);
           if ($194) {
            $195 = $192 >> 3;
            $196 = ($195>>>0)<($189>>>0);
            $197 = $196 ? $189 : $195;
            $$0$i$i$i17$i = $197;
           } else {
            $$0$i$i$i17$i = 2147483647;
           }
           __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i65$i,$$0$i$i$i17$i,$188,$86);
           $198 = HEAP32[$101>>2]|0;
           $199 = ($198|0)==(0|0);
           if (!($199)) {
            $200 = (($198) + 4|0);
            $201 = HEAP32[$98>>2]|0;
            $202 = (($198) + 8|0);
            $203 = (($198) + 12|0);
            HEAP32[$203>>2] = $201;
            $204 = HEAP32[$1>>2]|0;
            HEAP32[$198>>2] = $204;
            $205 = HEAP32[$99>>2]|0;
            HEAP32[$200>>2] = $205;
            $206 = HEAP32[$100>>2]|0;
            HEAP32[$202>>2] = $206;
            HEAP32[$100>>2] = 0;
            HEAP32[$99>>2] = 0;
            HEAP32[$1>>2] = 0;
           }
           $207 = (($198) + 16|0);
           HEAP32[$101>>2] = $207;
           __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($80,$__v$i$i65$i);
           __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i65$i);
          }
          __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($1);
         }
         $208 = HEAP8[$name$i13>>0]|0;
         $209 = $208 & 1;
         $210 = ($209<<24>>24)==(0);
         if ($210) {
          $t0$2$i$ph$be = $134;
         } else {
          $211 = HEAP32[$119>>2]|0;
          _free($211);
          $t0$2$i$ph$be = $134;
         }
        }
        else if ((label|0) == 60) {
         label = 0;
         $212 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($t0$2$i38,$last,$db)|0);
         $213 = ($212|0)==($t0$2$i38|0);
         $214 = ($212|0)==($last|0);
         $or$cond9$i = $213 | $214;
         if ($or$cond9$i) {
          $$07$i = $$first;
          break L6;
         }
         $215 = HEAP32[$34>>2]|0;
         $216 = (($215) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name1$i,$216);
         $217 = HEAP32[$34>>2]|0;
         $218 = (($217) + -24|0);
         $220 = $217;
         while(1) {
          $219 = (($220) + -24|0);
          HEAP32[$34>>2] = $219;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($219);
          $221 = HEAP32[$34>>2]|0;
          $222 = ($221|0)==($218|0);
          if ($222) {
           break;
          } else {
           $220 = $221;
          }
         }
         $223 = (($217) + -48|0);
         $224 = HEAP8[$223>>0]|0;
         $225 = $224 & 1;
         $226 = ($225<<24>>24)==(0);
         if ($226) {
          $229 = $224&255;
          $230 = $229 >>> 1;
          $232 = $230;
         } else {
          $227 = (($217) + -44|0);
          $228 = HEAP32[$227>>2]|0;
          $232 = $228;
         }
         $231 = ($232|0)==(0);
         if ($231) {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($223,$name1$i);
         } else {
          __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($3,48888,$name1$i);
          $233 = HEAP8[$3>>0]|0;
          $234 = $233 & 1;
          $235 = ($234<<24>>24)==(0);
          if ($235) {
           $238 = $233&255;
           $239 = $238 >>> 1;
           $240 = $108;$241 = $239;
          } else {
           $236 = HEAP32[$109>>2]|0;
           $237 = HEAP32[$110>>2]|0;
           $240 = $236;$241 = $237;
          }
          (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($223,$240,$241)|0);
          $242 = HEAP8[$3>>0]|0;
          $243 = $242 & 1;
          $244 = ($243<<24>>24)==(0);
          if (!($244)) {
           $245 = HEAP32[$109>>2]|0;
           _free($245);
          }
         }
         $246 = HEAP32[$34>>2]|0;
         $247 = (($246) + -24|0);
         $248 = HEAP32[$79>>2]|0;
         HEAP32[$5>>2] = $248;
         __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($4,$247,$5);
         $249 = HEAP32[$81>>2]|0;
         $250 = HEAP32[$82>>2]|0;
         $251 = ($249>>>0)<($250>>>0);
         if ($251) {
          $252 = ($249|0)==(0|0);
          if ($252) {
           $261 = 0;
          } else {
           $253 = (($249) + 4|0);
           $254 = HEAP32[$104>>2]|0;
           $255 = (($249) + 8|0);
           $256 = (($249) + 12|0);
           HEAP32[$256>>2] = $254;
           $257 = HEAP32[$4>>2]|0;
           HEAP32[$249>>2] = $257;
           $258 = HEAP32[$105>>2]|0;
           HEAP32[$253>>2] = $258;
           $259 = HEAP32[$106>>2]|0;
           HEAP32[$255>>2] = $259;
           HEAP32[$106>>2] = 0;
           HEAP32[$105>>2] = 0;
           HEAP32[$4>>2] = 0;
           $$pre$i25$i = HEAP32[$81>>2]|0;
           $261 = $$pre$i25$i;
          }
          $260 = (($261) + 16|0);
          HEAP32[$81>>2] = $260;
         } else {
          $262 = HEAP32[$80>>2]|0;
          $263 = $249;
          $264 = $262;
          $265 = (($263) - ($264))|0;
          $266 = $265 >> 4;
          $267 = (($266) + 1)|0;
          $268 = ($267|0)<(0);
          if ($268) {
           label = 78;
           break L43;
          }
          $269 = $250;
          $270 = (($269) - ($264))|0;
          $271 = $270 >> 4;
          $272 = ($271>>>0)<(1073741823);
          if ($272) {
           $273 = $270 >> 3;
           $274 = ($273>>>0)<($267>>>0);
           $275 = $274 ? $267 : $273;
           $$0$i$i$i27$i = $275;
          } else {
           $$0$i$i$i27$i = 2147483647;
          }
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i65$i,$$0$i$i$i27$i,$266,$86);
          $276 = HEAP32[$107>>2]|0;
          $277 = ($276|0)==(0|0);
          if (!($277)) {
           $278 = (($276) + 4|0);
           $279 = HEAP32[$104>>2]|0;
           $280 = (($276) + 8|0);
           $281 = (($276) + 12|0);
           HEAP32[$281>>2] = $279;
           $282 = HEAP32[$4>>2]|0;
           HEAP32[$276>>2] = $282;
           $283 = HEAP32[$105>>2]|0;
           HEAP32[$278>>2] = $283;
           $284 = HEAP32[$106>>2]|0;
           HEAP32[$280>>2] = $284;
           HEAP32[$106>>2] = 0;
           HEAP32[$105>>2] = 0;
           HEAP32[$4>>2] = 0;
          }
          $285 = (($276) + 16|0);
          HEAP32[$107>>2] = $285;
          __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($80,$__v$i$i65$i);
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i65$i);
         }
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($4);
         $286 = HEAP8[$name1$i>>0]|0;
         $287 = $286 & 1;
         $288 = ($287<<24>>24)==(0);
         if ($288) {
          $t0$2$i$ph$be = $212;
         } else {
          $289 = HEAP32[$120>>2]|0;
          _free($289);
          $t0$2$i$ph$be = $212;
         }
        }
        else if ((label|0) == 86) {
         label = 0;
         $290 = (($t0$2$i38) + 1|0);
         $291 = ($290|0)==($last|0);
         if (!($291)) {
          $292 = HEAP8[$290>>0]|0;
          if (!((($292<<24>>24) == 84) | (($292<<24>>24) == 116))) {
           label = 135;
           break;
          }
         }
         $293 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($t0$2$i38,$last,$db)|0);
         $294 = ($293|0)==($t0$2$i38|0);
         $295 = ($293|0)==($last|0);
         $or$cond10$i = $294 | $295;
         if ($or$cond10$i) {
          $$07$i = $$first;
          break L6;
         }
         $296 = HEAP32[$34>>2]|0;
         $297 = (($296) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name2$i14,$297);
         $298 = HEAP32[$34>>2]|0;
         $299 = (($298) + -24|0);
         $301 = $298;
         while(1) {
          $300 = (($301) + -24|0);
          HEAP32[$34>>2] = $300;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($300);
          $302 = HEAP32[$34>>2]|0;
          $303 = ($302|0)==($299|0);
          if ($303) {
           break;
          } else {
           $301 = $302;
          }
         }
         $304 = (($298) + -48|0);
         $305 = HEAP8[$304>>0]|0;
         $306 = $305 & 1;
         $307 = ($306<<24>>24)==(0);
         if ($307) {
          $310 = $305&255;
          $311 = $310 >>> 1;
          $313 = $311;
         } else {
          $308 = (($298) + -44|0);
          $309 = HEAP32[$308>>2]|0;
          $313 = $309;
         }
         $312 = ($313|0)==(0);
         if ($312) {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($304,$name2$i14);
         } else {
          __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($6,48888,$name2$i14);
          $314 = HEAP8[$6>>0]|0;
          $315 = $314 & 1;
          $316 = ($315<<24>>24)==(0);
          if ($316) {
           $319 = $314&255;
           $320 = $319 >>> 1;
           $321 = $115;$322 = $320;
          } else {
           $317 = HEAP32[$116>>2]|0;
           $318 = HEAP32[$117>>2]|0;
           $321 = $317;$322 = $318;
          }
          (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($304,$321,$322)|0);
          $323 = HEAP8[$6>>0]|0;
          $324 = $323 & 1;
          $325 = ($324<<24>>24)==(0);
          if (!($325)) {
           $326 = HEAP32[$116>>2]|0;
           _free($326);
          }
         }
         $327 = HEAP32[$34>>2]|0;
         $328 = (($327) + -24|0);
         $329 = HEAP32[$79>>2]|0;
         HEAP32[$8>>2] = $329;
         __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($7,$328,$8);
         $330 = HEAP32[$81>>2]|0;
         $331 = HEAP32[$82>>2]|0;
         $332 = ($330>>>0)<($331>>>0);
         if ($332) {
          $333 = ($330|0)==(0|0);
          if ($333) {
           $342 = 0;
          } else {
           $334 = (($330) + 4|0);
           $335 = HEAP32[$111>>2]|0;
           $336 = (($330) + 8|0);
           $337 = (($330) + 12|0);
           HEAP32[$337>>2] = $335;
           $338 = HEAP32[$7>>2]|0;
           HEAP32[$330>>2] = $338;
           $339 = HEAP32[$112>>2]|0;
           HEAP32[$334>>2] = $339;
           $340 = HEAP32[$113>>2]|0;
           HEAP32[$336>>2] = $340;
           HEAP32[$113>>2] = 0;
           HEAP32[$112>>2] = 0;
           HEAP32[$7>>2] = 0;
           $$pre$i39$i = HEAP32[$81>>2]|0;
           $342 = $$pre$i39$i;
          }
          $341 = (($342) + 16|0);
          HEAP32[$81>>2] = $341;
         } else {
          $343 = HEAP32[$80>>2]|0;
          $344 = $330;
          $345 = $343;
          $346 = (($344) - ($345))|0;
          $347 = $346 >> 4;
          $348 = (($347) + 1)|0;
          $349 = ($348|0)<(0);
          if ($349) {
           label = 106;
           break L43;
          }
          $350 = $331;
          $351 = (($350) - ($345))|0;
          $352 = $351 >> 4;
          $353 = ($352>>>0)<(1073741823);
          if ($353) {
           $354 = $351 >> 3;
           $355 = ($354>>>0)<($348>>>0);
           $356 = $355 ? $348 : $354;
           $$0$i$i$i41$i = $356;
          } else {
           $$0$i$i$i41$i = 2147483647;
          }
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i65$i,$$0$i$i$i41$i,$347,$86);
          $357 = HEAP32[$114>>2]|0;
          $358 = ($357|0)==(0|0);
          if (!($358)) {
           $359 = (($357) + 4|0);
           $360 = HEAP32[$111>>2]|0;
           $361 = (($357) + 8|0);
           $362 = (($357) + 12|0);
           HEAP32[$362>>2] = $360;
           $363 = HEAP32[$7>>2]|0;
           HEAP32[$357>>2] = $363;
           $364 = HEAP32[$112>>2]|0;
           HEAP32[$359>>2] = $364;
           $365 = HEAP32[$113>>2]|0;
           HEAP32[$361>>2] = $365;
           HEAP32[$113>>2] = 0;
           HEAP32[$112>>2] = 0;
           HEAP32[$7>>2] = 0;
          }
          $366 = (($357) + 16|0);
          HEAP32[$114>>2] = $366;
          __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($80,$__v$i$i65$i);
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i65$i);
         }
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($7);
         $367 = HEAP8[$name2$i14>>0]|0;
         $368 = $367 & 1;
         $369 = ($368<<24>>24)==(0);
         if ($369) {
          $t0$2$i$ph$be = $293;
         } else {
          $370 = HEAP32[$121>>2]|0;
          _free($370);
          $t0$2$i$ph$be = $293;
         }
        }
       } while(0);
       if ((label|0) == 135) {
        label = 0;
        $437 = (__ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($t0$2$i38,$last,$db)|0);
        $438 = ($437|0)==($t0$2$i38|0);
        $439 = ($437|0)==($last|0);
        $or$cond12$i = $438 | $439;
        if ($or$cond12$i) {
         $$07$i = $$first;
         break L6;
        }
        $440 = HEAP32[$34>>2]|0;
        $441 = (($440) + -24|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name4$i,$441);
        $442 = HEAP32[$34>>2]|0;
        $443 = (($442) + -24|0);
        $445 = $442;
        while(1) {
         $444 = (($445) + -24|0);
         HEAP32[$34>>2] = $444;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($444);
         $446 = HEAP32[$34>>2]|0;
         $447 = ($446|0)==($443|0);
         if ($447) {
          break;
         } else {
          $445 = $446;
         }
        }
        $448 = (($442) + -48|0);
        $449 = HEAP8[$448>>0]|0;
        $450 = $449 & 1;
        $451 = ($450<<24>>24)==(0);
        if ($451) {
         $454 = $449&255;
         $455 = $454 >>> 1;
         $457 = $455;
        } else {
         $452 = (($442) + -44|0);
         $453 = HEAP32[$452>>2]|0;
         $457 = $453;
        }
        $456 = ($457|0)==(0);
        if ($456) {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($448,$name4$i);
        } else {
         __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($11,48888,$name4$i);
         $458 = HEAP8[$11>>0]|0;
         $459 = $458 & 1;
         $460 = ($459<<24>>24)==(0);
         if ($460) {
          $463 = $458&255;
          $464 = $463 >>> 1;
          $465 = $94;$466 = $464;
         } else {
          $461 = HEAP32[$95>>2]|0;
          $462 = HEAP32[$96>>2]|0;
          $465 = $461;$466 = $462;
         }
         (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($448,$465,$466)|0);
         $467 = HEAP8[$11>>0]|0;
         $468 = $467 & 1;
         $469 = ($468<<24>>24)==(0);
         if (!($469)) {
          $470 = HEAP32[$95>>2]|0;
          _free($470);
         }
        }
        $471 = HEAP32[$34>>2]|0;
        $472 = (($471) + -24|0);
        $473 = HEAP32[$79>>2]|0;
        HEAP32[$13>>2] = $473;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($12,$472,$13);
        $474 = HEAP32[$81>>2]|0;
        $475 = HEAP32[$82>>2]|0;
        $476 = ($474>>>0)<($475>>>0);
        if ($476) {
         $477 = ($474|0)==(0|0);
         if ($477) {
          $486 = 0;
         } else {
          $478 = (($474) + 4|0);
          $479 = HEAP32[$90>>2]|0;
          $480 = (($474) + 8|0);
          $481 = (($474) + 12|0);
          HEAP32[$481>>2] = $479;
          $482 = HEAP32[$12>>2]|0;
          HEAP32[$474>>2] = $482;
          $483 = HEAP32[$91>>2]|0;
          HEAP32[$478>>2] = $483;
          $484 = HEAP32[$92>>2]|0;
          HEAP32[$480>>2] = $484;
          HEAP32[$92>>2] = 0;
          HEAP32[$91>>2] = 0;
          HEAP32[$12>>2] = 0;
          $$pre$i66$i = HEAP32[$81>>2]|0;
          $486 = $$pre$i66$i;
         }
         $485 = (($486) + 16|0);
         HEAP32[$81>>2] = $485;
        } else {
         $487 = HEAP32[$80>>2]|0;
         $488 = $474;
         $489 = $487;
         $490 = (($488) - ($489))|0;
         $491 = $490 >> 4;
         $492 = (($491) + 1)|0;
         $493 = ($492|0)<(0);
         if ($493) {
          label = 153;
          break;
         }
         $494 = $475;
         $495 = (($494) - ($489))|0;
         $496 = $495 >> 4;
         $497 = ($496>>>0)<(1073741823);
         if ($497) {
          $498 = $495 >> 3;
          $499 = ($498>>>0)<($492>>>0);
          $500 = $499 ? $492 : $498;
          $$0$i$i$i68$i = $500;
         } else {
          $$0$i$i$i68$i = 2147483647;
         }
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i65$i,$$0$i$i$i68$i,$491,$86);
         $501 = HEAP32[$93>>2]|0;
         $502 = ($501|0)==(0|0);
         if (!($502)) {
          $503 = (($501) + 4|0);
          $504 = HEAP32[$90>>2]|0;
          $505 = (($501) + 8|0);
          $506 = (($501) + 12|0);
          HEAP32[$506>>2] = $504;
          $507 = HEAP32[$12>>2]|0;
          HEAP32[$501>>2] = $507;
          $508 = HEAP32[$91>>2]|0;
          HEAP32[$503>>2] = $508;
          $509 = HEAP32[$92>>2]|0;
          HEAP32[$505>>2] = $509;
          HEAP32[$92>>2] = 0;
          HEAP32[$91>>2] = 0;
          HEAP32[$12>>2] = 0;
         }
         $510 = (($501) + 16|0);
         HEAP32[$93>>2] = $510;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($80,$__v$i$i65$i);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i65$i);
        }
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($12);
        $511 = HEAP8[$name4$i>>0]|0;
        $512 = $511 & 1;
        $513 = ($512<<24>>24)==(0);
        if ($513) {
         $t0$2$i$ph$be = $437;
        } else {
         $514 = HEAP32[$118>>2]|0;
         _free($514);
         $t0$2$i$ph$be = $437;
        }
       }
       $515 = HEAP8[$t0$2$i$ph$be>>0]|0;
       $516 = ($515<<24>>24)==(69);
       if ($516) {
        label = 162;
        break;
       } else {
        $787 = $515;$pop_subs$0$off0$i$ph84 = 1;$t0$2$i$ph83 = $t0$2$i$ph$be;
       }
      }
      if ((label|0) == 50) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
       // unreachable;
      }
      else if ((label|0) == 78) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
       // unreachable;
      }
      else if ((label|0) == 106) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
       // unreachable;
      }
      else if ((label|0) == 125) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
       // unreachable;
      }
      else if ((label|0) == 153) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
       // unreachable;
      }
      else if ((label|0) == 162) {
       $517 = (($t0$2$i$ph$be) + 1|0);
       $518 = HEAP32[$cv$i>>2]|0;
       $519 = (($db) + 48|0);
       HEAP32[$519>>2] = $518;
       $788 = $517;
      }
      else if ((label|0) == 164) {
       $520 = (($t0$2$i$be) + 1|0);
       $521 = HEAP32[$cv$i>>2]|0;
       $522 = (($db) + 48|0);
       HEAP32[$522>>2] = $521;
       if ($pop_subs$0$off0$i$ph84) {
        $788 = $520;
       } else {
        $$07$i = $520;
        break;
       }
      }
      $523 = (($db) + 16|0);
      $524 = HEAP32[$523>>2]|0;
      $525 = HEAP32[$81>>2]|0;
      $526 = ($524|0)==($525|0);
      if ($526) {
       $$07$i = $788;
      } else {
       $527 = (($525) + -16|0);
       $529 = $525;
       while(1) {
        $528 = (($529) + -16|0);
        HEAP32[$81>>2] = $528;
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($528);
        $530 = HEAP32[$81>>2]|0;
        $531 = ($530|0)==($527|0);
        if ($531) {
         $$07$i = $788;
         break;
        } else {
         $529 = $530;
        }
       }
      }
     }
    } else {
     $$07$i = $$first;
    }
   }
  } while(0);
  $532 = ($$07$i|0)==($$first|0);
  $first$ = $532 ? $first : $$07$i;
  $$02 = $first$;
  STACKTOP = sp;return ($$02|0);
 } else if ((($24|0) == 90)) {
  $533 = ($$first|0)==($last|0);
  if ($533) {
   $$0$i12 = $last;
   $640 = ($$0$i12|0)==($$first|0);
   $first$4 = $640 ? $first : $$0$i12;
   STACKTOP = sp;return ($first$4|0);
  }
  $534 = ($23<<24>>24)==(90);
  if (!($534)) {
   $$0$i12 = $$first;
   $640 = ($$0$i12|0)==($$first|0);
   $first$4 = $640 ? $first : $$0$i12;
   STACKTOP = sp;return ($first$4|0);
  }
  $535 = (($$first) + 1|0);
  $536 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($535,$last,$db)|0);
  $537 = ($536|0)==($535|0);
  $538 = ($536|0)==($last|0);
  $or$cond$i = $537 | $538;
  if ($or$cond$i) {
   $$0$i12 = $$first;
   $640 = ($$0$i12|0)==($$first|0);
   $first$4 = $640 ? $first : $$0$i12;
   STACKTOP = sp;return ($first$4|0);
  }
  $539 = HEAP8[$536>>0]|0;
  $540 = ($539<<24>>24)==(69);
  if (!($540)) {
   $$0$i12 = $$first;
   $640 = ($$0$i12|0)==($$first|0);
   $first$4 = $640 ? $first : $$0$i12;
   STACKTOP = sp;return ($first$4|0);
  }
  $541 = (($536) + 1|0);
  $542 = ($541|0)==($last|0);
  if ($542) {
   $$0$i12 = $$first;
   $640 = ($$0$i12|0)==($$first|0);
   $first$4 = $640 ? $first : $$0$i12;
   STACKTOP = sp;return ($first$4|0);
  }
  $543 = HEAP8[$541>>0]|0;
  $544 = $543 << 24 >> 24;
  if ((($544|0) == 100)) {
   $552 = (($536) + 2|0);
   $553 = ($552|0)==($last|0);
   if ($553) {
    $$0$i12 = $$first;
    $640 = ($$0$i12|0)==($$first|0);
    $first$4 = $640 ? $first : $$0$i12;
    STACKTOP = sp;return ($first$4|0);
   }
   $554 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($552,$last)|0);
   $555 = ($554|0)==($last|0);
   if ($555) {
    $$0$i12 = $$first;
    $640 = ($$0$i12|0)==($$first|0);
    $first$4 = $640 ? $first : $$0$i12;
    STACKTOP = sp;return ($first$4|0);
   }
   $556 = HEAP8[$554>>0]|0;
   $557 = ($556<<24>>24)==(95);
   if (!($557)) {
    $$0$i12 = $$first;
    $640 = ($$0$i12|0)==($$first|0);
    $first$4 = $640 ? $first : $$0$i12;
    STACKTOP = sp;return ($first$4|0);
   }
   $558 = (($554) + 1|0);
   $559 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($558,$last,$db)|0);
   $560 = ($559|0)==($558|0);
   $561 = (($db) + 4|0);
   $562 = HEAP32[$561>>2]|0;
   if ($560) {
    $593 = (($562) + -24|0);
    $595 = $562;
    while(1) {
     $594 = (($595) + -24|0);
     HEAP32[$561>>2] = $594;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($594);
     $596 = HEAP32[$561>>2]|0;
     $597 = ($596|0)==($593|0);
     if ($597) {
      $$0$i12 = $$first;
      break;
     } else {
      $595 = $596;
     }
    }
    $640 = ($$0$i12|0)==($$first|0);
    $first$4 = $640 ? $first : $$0$i12;
    STACKTOP = sp;return ($first$4|0);
   }
   $563 = HEAP32[$db>>2]|0;
   $564 = $562;
   $565 = $563;
   $566 = (($564) - ($565))|0;
   $567 = (($566|0) / 24)&-1;
   $568 = ($567>>>0)<(2);
   if ($568) {
    $$0$i12 = $$first;
    $640 = ($$0$i12|0)==($$first|0);
    $first$4 = $640 ? $first : $$0$i12;
    STACKTOP = sp;return ($first$4|0);
   }
   $569 = (($562) + -24|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($__v$i$i65$i,$569);
   $570 = HEAP32[$561>>2]|0;
   $571 = (($570) + -24|0);
   $573 = $570;
   while(1) {
    $572 = (($573) + -24|0);
    HEAP32[$561>>2] = $572;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($572);
    $574 = HEAP32[$561>>2]|0;
    $575 = ($574|0)==($571|0);
    if ($575) {
     break;
    } else {
     $573 = $574;
    }
   }
   $576 = (($570) + -48|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($576,48888,2)|0);
   $577 = HEAP32[$561>>2]|0;
   $578 = (($577) + -24|0);
   $579 = HEAP8[$__v$i$i65$i>>0]|0;
   $580 = $579 & 1;
   $581 = ($580<<24>>24)==(0);
   if ($581) {
    $586 = (($__v$i$i65$i) + 1|0);
    $587 = $579&255;
    $588 = $587 >>> 1;
    $589 = $586;$590 = $588;
   } else {
    $582 = (($__v$i$i65$i) + 8|0);
    $583 = HEAP32[$582>>2]|0;
    $584 = (($__v$i$i65$i) + 4|0);
    $585 = HEAP32[$584>>2]|0;
    $589 = $583;$590 = $585;
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($578,$589,$590)|0);
   if ($581) {
    $$0$i12 = $559;
    $640 = ($$0$i12|0)==($$first|0);
    $first$4 = $640 ? $first : $$0$i12;
    STACKTOP = sp;return ($first$4|0);
   }
   $591 = (($__v$i$i65$i) + 8|0);
   $592 = HEAP32[$591>>2]|0;
   _free($592);
   $$0$i12 = $559;
   $640 = ($$0$i12|0)==($$first|0);
   $first$4 = $640 ? $first : $$0$i12;
   STACKTOP = sp;return ($first$4|0);
  } else if ((($544|0) == 115)) {
   $545 = (($536) + 2|0);
   $546 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($545,$last)|0);
   $547 = HEAP32[$db>>2]|0;
   $548 = (($db) + 4|0);
   $549 = HEAP32[$548>>2]|0;
   $550 = ($547|0)==($549|0);
   if ($550) {
    $$0$i12 = $546;
    $640 = ($$0$i12|0)==($$first|0);
    $first$4 = $640 ? $first : $$0$i12;
    STACKTOP = sp;return ($first$4|0);
   }
   $551 = (($549) + -24|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($551,50552,16)|0);
   $$0$i12 = $546;
   $640 = ($$0$i12|0)==($$first|0);
   $first$4 = $640 ? $first : $$0$i12;
   STACKTOP = sp;return ($first$4|0);
  } else {
   $598 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($541,$last,$db)|0);
   $599 = ($598|0)==($541|0);
   if ($599) {
    $633 = (($db) + 4|0);
    $634 = HEAP32[$633>>2]|0;
    $635 = (($634) + -24|0);
    $637 = $634;
    while(1) {
     $636 = (($637) + -24|0);
     HEAP32[$633>>2] = $636;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($636);
     $638 = HEAP32[$633>>2]|0;
     $639 = ($638|0)==($635|0);
     if ($639) {
      $$0$i12 = $$first;
      break;
     } else {
      $637 = $638;
     }
    }
    $640 = ($$0$i12|0)==($$first|0);
    $first$4 = $640 ? $first : $$0$i12;
    STACKTOP = sp;return ($first$4|0);
   }
   $600 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($598,$last)|0);
   $601 = (($db) + 4|0);
   $602 = HEAP32[$601>>2]|0;
   $603 = HEAP32[$db>>2]|0;
   $604 = $602;
   $605 = $603;
   $606 = (($604) - ($605))|0;
   $607 = (($606|0) / 24)&-1;
   $608 = ($607>>>0)<(2);
   if ($608) {
    $$0$i12 = $600;
    $640 = ($$0$i12|0)==($$first|0);
    $first$4 = $640 ? $first : $$0$i12;
    STACKTOP = sp;return ($first$4|0);
   }
   $609 = (($602) + -24|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($cv$i,$609);
   $610 = HEAP32[$601>>2]|0;
   $611 = (($610) + -24|0);
   $613 = $610;
   while(1) {
    $612 = (($613) + -24|0);
    HEAP32[$601>>2] = $612;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($612);
    $614 = HEAP32[$601>>2]|0;
    $615 = ($614|0)==($611|0);
    if ($615) {
     break;
    } else {
     $613 = $614;
    }
   }
   $616 = (($610) + -48|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($616,48888,2)|0);
   $617 = HEAP32[$601>>2]|0;
   $618 = (($617) + -24|0);
   $619 = HEAP8[$cv$i>>0]|0;
   $620 = $619 & 1;
   $621 = ($620<<24>>24)==(0);
   if ($621) {
    $626 = (($cv$i) + 1|0);
    $627 = $619&255;
    $628 = $627 >>> 1;
    $629 = $626;$630 = $628;
   } else {
    $622 = (($cv$i) + 8|0);
    $623 = HEAP32[$622>>2]|0;
    $624 = (($cv$i) + 4|0);
    $625 = HEAP32[$624>>2]|0;
    $629 = $623;$630 = $625;
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($618,$629,$630)|0);
   if ($621) {
    $$0$i12 = $600;
    $640 = ($$0$i12|0)==($$first|0);
    $first$4 = $640 ? $first : $$0$i12;
    STACKTOP = sp;return ($first$4|0);
   }
   $631 = (($cv$i) + 8|0);
   $632 = HEAP32[$631>>2]|0;
   _free($632);
   $$0$i12 = $600;
   $640 = ($$0$i12|0)==($$first|0);
   $first$4 = $640 ? $first : $$0$i12;
   STACKTOP = sp;return ($first$4|0);
  }
 } else {
  $641 = $$first;
  $642 = (($16) - ($641))|0;
  $643 = ($642|0)>(1);
  do {
   if ($643) {
    $644 = ($23<<24>>24)==(83);
    if ($644) {
     $645 = (($$first) + 1|0);
     $646 = HEAP8[$645>>0]|0;
     $647 = ($646<<24>>24)==(116);
     if ($647) {
      $648 = (($$first) + 2|0);
      $649 = ($648|0)==($last|0);
      if ($649) {
       $St$0$off0$i = 0;$t0$0$i = $last;
      } else {
       $650 = HEAP8[$648>>0]|0;
       $651 = ($650<<24>>24)==(76);
       $652 = (($$first) + 3|0);
       $$$i = $651 ? $652 : $648;
       $St$0$off0$i = 0;$t0$0$i = $$$i;
      }
     } else {
      $St$0$off0$i = 1;$t0$0$i = $$first;
     }
    } else {
     $St$0$off0$i = 1;$t0$0$i = $$first;
    }
    $653 = (__ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($t0$0$i,$last,$db)|0);
    $654 = ($653|0)==($t0$0$i|0);
    $brmerge$i = $654 | $St$0$off0$i;
    $first$mux$i = $654 ? $$first : $653;
    if ($brmerge$i) {
     $$0$i = $first$mux$i;
    } else {
     $655 = HEAP32[$db>>2]|0;
     $656 = (($db) + 4|0);
     $657 = HEAP32[$656>>2]|0;
     $658 = ($655|0)==($657|0);
     if ($658) {
      break;
     }
     $659 = (($657) + -24|0);
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($659,0,49152,5)|0);
     $$0$i = $653;
    }
    $660 = ($$0$i|0)==($$first|0);
    if (!($660)) {
     $661 = ($$0$i|0)==($last|0);
     if ($661) {
      $$02 = $last;
      STACKTOP = sp;return ($$02|0);
     }
     $662 = HEAP8[$$0$i>>0]|0;
     $663 = ($662<<24>>24)==(73);
     if (!($663)) {
      $$02 = $$0$i;
      STACKTOP = sp;return ($$02|0);
     }
     $664 = HEAP32[$db>>2]|0;
     $665 = (($db) + 4|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($664|0)==($666|0);
     if ($667) {
      $$02 = $first;
      STACKTOP = sp;return ($$02|0);
     }
     $668 = (($db) + 16|0);
     $669 = (($666) + -24|0);
     $670 = (($db) + 12|0);
     $671 = HEAP32[$670>>2]|0;
     HEAP32[$15>>2] = $671;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($14,$669,$15);
     $672 = (($db) + 20|0);
     $673 = HEAP32[$672>>2]|0;
     $674 = (($db) + 24|0);
     $675 = HEAP32[$674>>2]|0;
     $676 = ($673>>>0)<($675>>>0);
     if ($676) {
      $677 = ($673|0)==(0|0);
      if ($677) {
       $689 = 0;
      } else {
       $678 = (($673) + 4|0);
       $679 = (($14) + 12|0);
       $680 = HEAP32[$679>>2]|0;
       $681 = (($673) + 8|0);
       $682 = (($673) + 12|0);
       HEAP32[$682>>2] = $680;
       $683 = HEAP32[$14>>2]|0;
       HEAP32[$673>>2] = $683;
       $684 = (($14) + 4|0);
       $685 = HEAP32[$684>>2]|0;
       HEAP32[$678>>2] = $685;
       $686 = (($14) + 8|0);
       $687 = HEAP32[$686>>2]|0;
       HEAP32[$681>>2] = $687;
       HEAP32[$686>>2] = 0;
       HEAP32[$684>>2] = 0;
       HEAP32[$14>>2] = 0;
       $$pre$i = HEAP32[$672>>2]|0;
       $689 = $$pre$i;
      }
      $688 = (($689) + 16|0);
      HEAP32[$672>>2] = $688;
     } else {
      $690 = (($db) + 28|0);
      $691 = HEAP32[$668>>2]|0;
      $692 = $673;
      $693 = $691;
      $694 = (($692) - ($693))|0;
      $695 = $694 >> 4;
      $696 = (($695) + 1)|0;
      $697 = ($696|0)<(0);
      if ($697) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
       // unreachable;
      }
      $698 = $675;
      $699 = (($698) - ($693))|0;
      $700 = $699 >> 4;
      $701 = ($700>>>0)<(1073741823);
      if ($701) {
       $702 = $699 >> 3;
       $703 = ($702>>>0)<($696>>>0);
       $704 = $703 ? $696 : $702;
       $$0$i$i$i = $704;
      } else {
       $$0$i$i$i = 2147483647;
      }
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i65$i,$$0$i$i$i,$695,$690);
      $705 = (($__v$i$i65$i) + 8|0);
      $706 = HEAP32[$705>>2]|0;
      $707 = ($706|0)==(0|0);
      if (!($707)) {
       $708 = (($706) + 4|0);
       $709 = (($14) + 12|0);
       $710 = HEAP32[$709>>2]|0;
       $711 = (($706) + 8|0);
       $712 = (($706) + 12|0);
       HEAP32[$712>>2] = $710;
       $713 = HEAP32[$14>>2]|0;
       HEAP32[$706>>2] = $713;
       $714 = (($14) + 4|0);
       $715 = HEAP32[$714>>2]|0;
       HEAP32[$708>>2] = $715;
       $716 = (($14) + 8|0);
       $717 = HEAP32[$716>>2]|0;
       HEAP32[$711>>2] = $717;
       HEAP32[$716>>2] = 0;
       HEAP32[$714>>2] = 0;
       HEAP32[$14>>2] = 0;
      }
      $718 = (($706) + 16|0);
      HEAP32[$705>>2] = $718;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($668,$__v$i$i65$i);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i65$i);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($14);
     $719 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($$0$i,$last,$db)|0);
     $720 = ($719|0)==($$0$i|0);
     if ($720) {
      $$02 = $first;
      STACKTOP = sp;return ($$02|0);
     }
     $721 = HEAP32[$665>>2]|0;
     $722 = HEAP32[$db>>2]|0;
     $723 = $721;
     $724 = $722;
     $725 = (($723) - ($724))|0;
     $726 = (($725|0) / 24)&-1;
     $727 = ($726>>>0)<(2);
     if ($727) {
      $$02 = $first;
      STACKTOP = sp;return ($$02|0);
     }
     $728 = (($721) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp,$728);
     $729 = HEAP32[$665>>2]|0;
     $730 = (($729) + -24|0);
     $732 = $729;
     while(1) {
      $731 = (($732) + -24|0);
      HEAP32[$665>>2] = $731;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($731);
      $733 = HEAP32[$665>>2]|0;
      $734 = ($733|0)==($730|0);
      if ($734) {
       break;
      } else {
       $732 = $733;
      }
     }
     $735 = (($729) + -48|0);
     $736 = HEAP8[$tmp>>0]|0;
     $737 = $736 & 1;
     $738 = ($737<<24>>24)==(0);
     if ($738) {
      $743 = (($tmp) + 1|0);
      $744 = $736&255;
      $745 = $744 >>> 1;
      $746 = $743;$747 = $745;
     } else {
      $739 = (($tmp) + 8|0);
      $740 = HEAP32[$739>>2]|0;
      $741 = (($tmp) + 4|0);
      $742 = HEAP32[$741>>2]|0;
      $746 = $740;$747 = $742;
     }
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($735,$746,$747)|0);
     if ($738) {
      $$02 = $719;
      STACKTOP = sp;return ($$02|0);
     }
     $748 = (($tmp) + 8|0);
     $749 = HEAP32[$748>>2]|0;
     _free($749);
     $$02 = $719;
     STACKTOP = sp;return ($$02|0);
    }
   }
  } while(0);
  $750 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($$first,$last,$db)|0);
  $751 = ($750|0)==($$first|0);
  $752 = ($750|0)==($last|0);
  $or$cond = $751 | $752;
  if ($or$cond) {
   $$02 = $first;
   STACKTOP = sp;return ($$02|0);
  }
  $753 = HEAP8[$750>>0]|0;
  $754 = ($753<<24>>24)==(73);
  if (!($754)) {
   $$02 = $first;
   STACKTOP = sp;return ($$02|0);
  }
  $755 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($750,$last,$db)|0);
  $756 = ($755|0)==($750|0);
  if ($756) {
   $$02 = $first;
   STACKTOP = sp;return ($$02|0);
  }
  $757 = (($db) + 4|0);
  $758 = HEAP32[$757>>2]|0;
  $759 = HEAP32[$db>>2]|0;
  $760 = $758;
  $761 = $759;
  $762 = (($760) - ($761))|0;
  $763 = (($762|0) / 24)&-1;
  $764 = ($763>>>0)<(2);
  if ($764) {
   $$02 = $first;
   STACKTOP = sp;return ($$02|0);
  }
  $765 = (($758) + -24|0);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp3,$765);
  $766 = HEAP32[$757>>2]|0;
  $767 = (($766) + -24|0);
  $769 = $766;
  while(1) {
   $768 = (($769) + -24|0);
   HEAP32[$757>>2] = $768;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($768);
   $770 = HEAP32[$757>>2]|0;
   $771 = ($770|0)==($767|0);
   if ($771) {
    break;
   } else {
    $769 = $770;
   }
  }
  $772 = (($766) + -48|0);
  $773 = HEAP8[$tmp3>>0]|0;
  $774 = $773 & 1;
  $775 = ($774<<24>>24)==(0);
  if ($775) {
   $780 = (($tmp3) + 1|0);
   $781 = $773&255;
   $782 = $781 >>> 1;
   $783 = $780;$784 = $782;
  } else {
   $776 = (($tmp3) + 8|0);
   $777 = HEAP32[$776>>2]|0;
   $778 = (($tmp3) + 4|0);
   $779 = HEAP32[$778>>2]|0;
   $783 = $777;$784 = $779;
  }
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($772,$783,$784)|0);
  if ($775) {
   $$02 = $755;
   STACKTOP = sp;return ($$02|0);
  }
  $785 = (($tmp3) + 8|0);
  $786 = HEAP32[$785>>2]|0;
  _free($786);
  $$02 = $755;
  STACKTOP = sp;return ($$02|0);
 }
 return (0)|0;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($this,$__c) {
 $this = $this|0;
 $__c = $__c|0;
 var $$pn = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__cap$0 = 0, $__p$0 = 0, $__p$0$sum$pre = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  $5 = HEAP32[$this>>2]|0;
  $6 = $5 & -2;
  $7 = (($6) + -1)|0;
  $8 = (($this) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $__cap$0 = $7;$__sz$0 = $9;
 } else {
  $3 = $0&255;
  $4 = $3 >>> 1;
  $__cap$0 = 10;$__sz$0 = $4;
 }
 $10 = ($__sz$0|0)==($__cap$0|0);
 if ($10) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($this,$__cap$0,1,$__cap$0,$__cap$0,0);
  $11 = HEAP8[$this>>0]|0;
  $12 = $11 & 1;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   label = 7;
  } else {
   label = 8;
  }
 } else {
  if ($2) {
   label = 8;
  } else {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $14 = (($this) + 1|0);
  $15 = $__sz$0 << 1;
  $16 = (($15) + 2)|0;
  $17 = $16&255;
  HEAP8[$this>>0] = $17;
  $__p$0$sum$pre = (($__sz$0) + 1)|0;
  $$pn = $14;$__p$0$sum$pre$phiZZZ2D = $__p$0$sum$pre;
  $__p$0 = (($$pn) + ($__sz$0)|0);
  HEAP8[$__p$0>>0] = $__c;
  $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
  HEAP8[$22>>0] = 0;
  STACKTOP = sp;return;
 }
 else if ((label|0) == 8) {
  $18 = (($this) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($__sz$0) + 1)|0;
  $21 = (($this) + 4|0);
  HEAP32[$21>>2] = $20;
  $$pn = $19;$__p$0$sum$pre$phiZZZ2D = $20;
  $__p$0 = (($$pn) + ($__sz$0)|0);
  HEAP8[$__p$0>>0] = $__c;
  $22 = (($$pn) + ($__p$0$sum$pre$phiZZZ2D)|0);
  HEAP8[$22>>0] = 0;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($this,$__pos,$__s,$__n) {
 $this = $this|0;
 $__pos = $__pos|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $$0 = 0, $$1 = 0, $$pre = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $8 = $6;
 } else {
  $3 = (($this) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $8 = $4;
 }
 $7 = ($8>>>0)<($__pos>>>0);
 if ($7) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv();
  // unreachable;
 }
 if ($2) {
  $13 = 10;$17 = $0;
 } else {
  $9 = HEAP32[$this>>2]|0;
  $10 = $9 & -2;
  $phitmp$i = (($10) + -1)|0;
  $11 = $9&255;
  $13 = $phitmp$i;$17 = $11;
 }
 $12 = (($13) - ($8))|0;
 $14 = ($12>>>0)<($__n>>>0);
 if ($14) {
  $38 = (($8) + ($__n))|0;
  $39 = (($38) - ($13))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$13,$39,$8,$__pos,0,$__n,$__s);
  STACKTOP = sp;return ($this|0);
 }
 $15 = ($__n|0)==(0);
 if ($15) {
  STACKTOP = sp;return ($this|0);
 }
 $16 = $17 & 1;
 $18 = ($16<<24>>24)==(0);
 if ($18) {
  $21 = (($this) + 1|0);
  $24 = $21;
 } else {
  $19 = (($this) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  $24 = $20;
 }
 $22 = (($8) - ($__pos))|0;
 $23 = ($8|0)==($__pos|0);
 $$pre = (($24) + ($__pos)|0);
 if ($23) {
  $$1 = $__s;
 } else {
  $25 = ($$pre>>>0)<=($__s>>>0);
  $26 = (($24) + ($8)|0);
  $27 = ($26>>>0)>($__s>>>0);
  $or$cond = $25 & $27;
  if ($or$cond) {
   $28 = (($__s) + ($__n)|0);
   $$0 = $28;
  } else {
   $$0 = $__s;
  }
  $$sum = (($__n) + ($__pos))|0;
  $29 = (($24) + ($$sum)|0);
  _memmove(($29|0),($$pre|0),($22|0))|0;
  $$1 = $$0;
 }
 _memmove(($$pre|0),($$1|0),($__n|0))|0;
 $30 = (($8) + ($__n))|0;
 $31 = HEAP8[$this>>0]|0;
 $32 = $31 & 1;
 $33 = ($32<<24>>24)==(0);
 if ($33) {
  $35 = $30 << 1;
  $36 = $35&255;
  HEAP8[$this>>0] = $36;
 } else {
  $34 = (($this) + 4|0);
  HEAP32[$34>>2] = $30;
 }
 $37 = (($24) + ($30)|0);
 HEAP8[$37>>0] = 0;
 STACKTOP = sp;return ($this|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($first,$last,$cv) {
 $first = $first|0;
 $last = $last|0;
 $cv = $cv|0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[$cv>>2] = 0;
 $0 = ($first|0)==($last|0);
 if ($0) {
  $$2 = $first;
  STACKTOP = sp;return ($$2|0);
 }
 $1 = HEAP8[$first>>0]|0;
 $2 = ($1<<24>>24)==(114);
 if ($2) {
  HEAP32[$cv>>2] = 4;
  $3 = (($first) + 1|0);
  $$pre = HEAP8[$3>>0]|0;
  $$0 = $3;$5 = $$pre;$7 = 4;
 } else {
  $$0 = $first;$5 = $1;$7 = 0;
 }
 $4 = ($5<<24>>24)==(86);
 if ($4) {
  $6 = $7 | 2;
  HEAP32[$cv>>2] = $6;
  $8 = (($$0) + 1|0);
  $$pre1 = HEAP8[$8>>0]|0;
  $$1 = $8;$10 = $$pre1;$12 = $6;
 } else {
  $$1 = $$0;$10 = $5;$12 = $7;
 }
 $9 = ($10<<24>>24)==(75);
 if (!($9)) {
  $$2 = $$1;
  STACKTOP = sp;return ($$2|0);
 }
 $11 = $12 | 1;
 HEAP32[$cv>>2] = $11;
 $13 = (($$1) + 1|0);
 $$2 = $13;
 STACKTOP = sp;return ($$2|0);
}
function __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = (($this) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $6 = 0;
 } else {
  $3 = HEAP32[$__a>>2]|0;
  $4 = $__cap << 4;
  $5 = (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($3,$4)|0);
  $6 = $5;
 }
 HEAP32[$this>>2] = $6;
 $7 = (($6) + ($__start<<4)|0);
 $8 = (($this) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = (($this) + 4|0);
 HEAP32[$9>>2] = $7;
 $10 = (($6) + ($__cap<<4)|0);
 HEAP32[$0>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $$01$i = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($this) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($__v) + 4|0);
 $4 = ($2|0)==($0|0);
 $$pre1 = HEAP32[$3>>2]|0;
 if ($4) {
  $21 = $$pre1;$22 = $0;
 } else {
  $$01$i = $2;$7 = $$pre1;
  while(1) {
   $5 = (($$01$i) + -16|0);
   $6 = (($7) + -16|0);
   HEAP32[$6>>2] = 0;
   $8 = (($7) + -12|0);
   HEAP32[$8>>2] = 0;
   $9 = (($$01$i) + -4|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($7) + -8|0);
   HEAP32[$11>>2] = 0;
   $12 = (($7) + -4|0);
   HEAP32[$12>>2] = $10;
   $13 = HEAP32[$5>>2]|0;
   HEAP32[$6>>2] = $13;
   $14 = (($$01$i) + -12|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$8>>2] = $15;
   $16 = (($$01$i) + -8|0);
   $17 = HEAP32[$16>>2]|0;
   HEAP32[$11>>2] = $17;
   HEAP32[$16>>2] = 0;
   HEAP32[$14>>2] = 0;
   HEAP32[$5>>2] = 0;
   $18 = HEAP32[$3>>2]|0;
   $19 = (($18) + -16|0);
   HEAP32[$3>>2] = $19;
   $20 = ($5|0)==($0|0);
   if ($20) {
    break;
   } else {
    $$01$i = $5;$7 = $19;
   }
  }
  $$pre = HEAP32[$this>>2]|0;
  $21 = $19;$22 = $$pre;
 }
 HEAP32[$this>>2] = $21;
 HEAP32[$3>>2] = $22;
 $23 = (($__v) + 8|0);
 $24 = HEAP32[$1>>2]|0;
 $25 = HEAP32[$23>>2]|0;
 HEAP32[$1>>2] = $25;
 HEAP32[$23>>2] = $24;
 $26 = (($this) + 8|0);
 $27 = (($__v) + 12|0);
 $28 = HEAP32[$26>>2]|0;
 $29 = HEAP32[$27>>2]|0;
 HEAP32[$26>>2] = $29;
 HEAP32[$27>>2] = $28;
 $30 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $30;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $6 = $3;
  while(1) {
   $5 = (($6) + -16|0);
   HEAP32[$2>>2] = $5;
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($5);
   $7 = HEAP32[$2>>2]|0;
   $8 = ($7|0)==($1|0);
   if ($8) {
    break;
   } else {
    $6 = $7;
   }
  }
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  STACKTOP = sp;return;
 }
 $11 = (($this) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($this) + 12|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $14;
 $16 = $9;
 $17 = (($15) - ($16))|0;
 $18 = HEAP32[$12>>2]|0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($18,$9,$17);
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$__str>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  ;HEAP32[$this+0>>2]=HEAP32[$__str+0>>2]|0;HEAP32[$this+4>>2]=HEAP32[$__str+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$__str+8>>2]|0;
  STACKTOP = sp;return;
 } else {
  $3 = (($__str) + 8|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($__str) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$4,$6);
  STACKTOP = sp;return;
 }
}
function __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($this,$__cap,$__start,$__a) {
 $this = $this|0;
 $__cap = $__cap|0;
 $__start = $__start|0;
 $__a = $__a|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 12|0);
 HEAP32[$0>>2] = 0;
 $1 = (($this) + 16|0);
 HEAP32[$1>>2] = $__a;
 $2 = ($__cap|0)==(0);
 if ($2) {
  $6 = 0;
 } else {
  $3 = HEAP32[$__a>>2]|0;
  $4 = ($__cap*24)|0;
  $5 = (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($3,$4)|0);
  $6 = $5;
 }
 HEAP32[$this>>2] = $6;
 $7 = (($6) + (($__start*24)|0)|0);
 $8 = (($this) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = (($this) + 4|0);
 HEAP32[$9>>2] = $7;
 $10 = (($6) + (($__cap*24)|0)|0);
 HEAP32[$0>>2] = $10;
 STACKTOP = sp;return;
}
function __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($this) {
 $this = $this|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = (($this) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($this) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==($1|0);
 if (!($4)) {
  $6 = $3;
  while(1) {
   $5 = (($6) + -24|0);
   HEAP32[$2>>2] = $5;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
   $7 = HEAP32[$2>>2]|0;
   $8 = ($7|0)==($1|0);
   if ($8) {
    break;
   } else {
    $6 = $7;
   }
  }
 }
 $9 = HEAP32[$this>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  STACKTOP = sp;return;
 }
 $11 = (($this) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($this) + 12|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $14;
 $16 = $9;
 $17 = (($15) - ($16))|0;
 $18 = HEAP32[$12>>2]|0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($18,$9,$17);
 STACKTOP = sp;return;
}
function __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this,$__v) {
 $this = $this|0;
 $__v = $__v|0;
 var $$01$i = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[$this>>2]|0;
 $1 = (($this) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (($__v) + 4|0);
 $4 = ($2|0)==($0|0);
 $$pre1 = HEAP32[$3>>2]|0;
 if ($4) {
  $13 = $$pre1;$14 = $0;
 } else {
  $$01$i = $2;$6 = $$pre1;
  while(1) {
   $5 = (($6) + -24|0);
   $7 = (($$01$i) + -24|0);
   ;HEAP32[$5+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$5+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[$7+8>>2]|0;
   ;HEAP32[$7+0>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;
   $8 = (($6) + -12|0);
   $9 = (($$01$i) + -12|0);
   ;HEAP32[$8+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$8+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$9+8>>2]|0;
   ;HEAP32[$9+0>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
   $10 = HEAP32[$3>>2]|0;
   $11 = (($10) + -24|0);
   HEAP32[$3>>2] = $11;
   $12 = ($7|0)==($0|0);
   if ($12) {
    break;
   } else {
    $$01$i = $7;$6 = $11;
   }
  }
  $$pre = HEAP32[$this>>2]|0;
  $13 = $11;$14 = $$pre;
 }
 HEAP32[$this>>2] = $13;
 HEAP32[$3>>2] = $14;
 $15 = (($__v) + 8|0);
 $16 = HEAP32[$1>>2]|0;
 $17 = HEAP32[$15>>2]|0;
 HEAP32[$1>>2] = $17;
 HEAP32[$15>>2] = $16;
 $18 = (($this) + 8|0);
 $19 = (($__v) + 12|0);
 $20 = HEAP32[$18>>2]|0;
 $21 = HEAP32[$19>>2]|0;
 HEAP32[$18>>2] = $21;
 HEAP32[$19>>2] = $20;
 $22 = HEAP32[$3>>2]|0;
 HEAP32[$__v>>2] = $22;
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i101 = 0, $$0$i$i$i110 = 0, $$0$i$i$i119 = 0, $$0$i$i$i127 = 0, $$0$i$i$i136 = 0, $$0$i$i$i145 = 0, $$0$i$i$i153 = 0, $$0$i$i$i16 = 0, $$0$i$i$i162 = 0, $$0$i$i$i171 = 0, $$0$i$i$i180 = 0, $$0$i$i$i189 = 0, $$0$i$i$i198 = 0, $$0$i$i$i207 = 0, $$0$i$i$i216 = 0, $$0$i$i$i225 = 0, $$0$i$i$i234 = 0, $$0$i$i$i242 = 0;
 var $$0$i$i$i25 = 0, $$0$i$i$i33 = 0, $$0$i$i$i41 = 0, $$0$i$i$i50 = 0, $$0$i$i$i58 = 0, $$0$i$i$i67 = 0, $$0$i$i$i7 = 0, $$0$i$i$i75 = 0, $$0$i$i$i84 = 0, $$0$i$i$i92 = 0, $$pre$i = 0, $$pre$i108 = 0, $$pre$i117 = 0, $$pre$i125 = 0, $$pre$i134 = 0, $$pre$i14 = 0, $$pre$i143 = 0, $$pre$i151 = 0, $$pre$i160 = 0, $$pre$i169 = 0;
 var $$pre$i178 = 0, $$pre$i187 = 0, $$pre$i196 = 0, $$pre$i205 = 0, $$pre$i214 = 0, $$pre$i223 = 0, $$pre$i23 = 0, $$pre$i232 = 0, $$pre$i240 = 0, $$pre$i31 = 0, $$pre$i39 = 0, $$pre$i48 = 0, $$pre$i5 = 0, $$pre$i56 = 0, $$pre$i65 = 0, $$pre$i73 = 0, $$pre$i82 = 0, $$pre$i90 = 0, $$pre$i99 = 0, $0 = 0;
 var $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0;
 var $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;
 var $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;
 var $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0;
 var $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0;
 var $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0;
 var $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0;
 var $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0;
 var $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0;
 var $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0;
 var $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0;
 var $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0;
 var $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0;
 var $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0;
 var $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $__v$i$i239 = 0, $first$ = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 720|0;
 $__v$i$i239 = sp + 336|0;
 $0 = sp + 312|0;
 $1 = sp + 264|0;
 $2 = sp + 648|0;
 $3 = sp + 600|0;
 $4 = sp + 96|0;
 $5 = sp + 120|0;
 $6 = sp + 144|0;
 $7 = sp + 168|0;
 $8 = sp + 192|0;
 $9 = sp + 216|0;
 $10 = sp + 528|0;
 $11 = sp + 576|0;
 $12 = sp + 624|0;
 $13 = sp + 672|0;
 $14 = sp + 696|0;
 $15 = sp + 360|0;
 $16 = sp + 384|0;
 $17 = sp + 408|0;
 $18 = sp + 432|0;
 $19 = sp + 456|0;
 $20 = sp + 480|0;
 $21 = sp + 72|0;
 $22 = sp + 48|0;
 $23 = sp;
 $24 = sp + 24|0;
 $25 = sp + 504|0;
 $26 = sp + 240|0;
 $27 = sp + 552|0;
 $28 = sp + 288|0;
 $29 = ($first|0)==($last|0);
 if ($29) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $30 = HEAP8[$first>>0]|0;
 $31 = $30 << 24 >> 24;
 do {
  switch ($31|0) {
  case 115:  {
   HEAP8[$6>>0] = 10;
   $234 = (($6) + 1|0);
   ;HEAP8[$234+0>>0]=HEAP8[50392+0>>0]|0;HEAP8[$234+1>>0]=HEAP8[50392+1>>0]|0;HEAP8[$234+2>>0]=HEAP8[50392+2>>0]|0;HEAP8[$234+3>>0]=HEAP8[50392+3>>0]|0;HEAP8[$234+4>>0]=HEAP8[50392+4>>0]|0;
   $235 = (($6) + 6|0);
   HEAP8[$235>>0] = 0;
   $236 = (($6) + 12|0);
   ;HEAP32[$236+0>>2]=0|0;HEAP32[$236+4>>2]=0|0;HEAP32[$236+8>>2]=0|0;
   $237 = (($db) + 4|0);
   $238 = HEAP32[$237>>2]|0;
   $239 = (($db) + 8|0);
   $240 = HEAP32[$239>>2]|0;
   $241 = ($238>>>0)<($240>>>0);
   if ($241) {
    $242 = ($238|0)==(0|0);
    if ($242) {
     $245 = 0;
    } else {
     ;HEAP32[$238+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$238+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$238+8>>2]=HEAP32[$6+8>>2]|0;
     ;HEAP32[$6+0>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;
     $243 = (($238) + 12|0);
     ;HEAP32[$243+0>>2]=HEAP32[$236+0>>2]|0;HEAP32[$243+4>>2]=HEAP32[$236+4>>2]|0;HEAP32[$243+8>>2]=HEAP32[$236+8>>2]|0;
     ;HEAP32[$236+0>>2]=0|0;HEAP32[$236+4>>2]=0|0;HEAP32[$236+8>>2]=0|0;
     $$pre$i48 = HEAP32[$237>>2]|0;
     $245 = $$pre$i48;
    }
    $244 = (($245) + 24|0);
    HEAP32[$237>>2] = $244;
   } else {
    $246 = (($db) + 12|0);
    $247 = HEAP32[$db>>2]|0;
    $248 = $238;
    $249 = $247;
    $250 = (($248) - ($249))|0;
    $251 = (($250|0) / 24)&-1;
    $252 = (($251) + 1)|0;
    $253 = ($252|0)<(0);
    if ($253) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $254 = $240;
    $255 = (($254) - ($249))|0;
    $256 = (($255|0) / 24)&-1;
    $257 = ($256>>>0)<(1073741823);
    if ($257) {
     $258 = $256 << 1;
     $259 = ($258>>>0)<($252>>>0);
     $260 = $259 ? $252 : $258;
     $$0$i$i$i50 = $260;
    } else {
     $$0$i$i$i50 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i50,$251,$246);
    $261 = (($__v$i$i239) + 8|0);
    $262 = HEAP32[$261>>2]|0;
    $263 = ($262|0)==(0|0);
    if (!($263)) {
     ;HEAP32[$262+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$262+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$262+8>>2]=HEAP32[$6+8>>2]|0;
     ;HEAP32[$6+0>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;
     $264 = (($262) + 12|0);
     ;HEAP32[$264+0>>2]=HEAP32[$236+0>>2]|0;HEAP32[$264+4>>2]=HEAP32[$236+4>>2]|0;HEAP32[$264+8>>2]=HEAP32[$236+8>>2]|0;
     ;HEAP32[$236+0>>2]=0|0;HEAP32[$236+4>>2]=0|0;HEAP32[$236+8>>2]=0|0;
    }
    $265 = (($262) + 24|0);
    HEAP32[$261>>2] = $265;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
   $266 = (($first) + 1|0);
   $$0 = $266;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 119:  {
   HEAP8[$1>>0] = 14;
   $65 = (($1) + 1|0);
   ;HEAP8[$65+0>>0]=HEAP8[50336+0>>0]|0;HEAP8[$65+1>>0]=HEAP8[50336+1>>0]|0;HEAP8[$65+2>>0]=HEAP8[50336+2>>0]|0;HEAP8[$65+3>>0]=HEAP8[50336+3>>0]|0;HEAP8[$65+4>>0]=HEAP8[50336+4>>0]|0;HEAP8[$65+5>>0]=HEAP8[50336+5>>0]|0;HEAP8[$65+6>>0]=HEAP8[50336+6>>0]|0;
   $66 = (($1) + 8|0);
   HEAP8[$66>>0] = 0;
   $67 = (($1) + 12|0);
   ;HEAP32[$67+0>>2]=0|0;HEAP32[$67+4>>2]=0|0;HEAP32[$67+8>>2]=0|0;
   $68 = (($db) + 4|0);
   $69 = HEAP32[$68>>2]|0;
   $70 = (($db) + 8|0);
   $71 = HEAP32[$70>>2]|0;
   $72 = ($69>>>0)<($71>>>0);
   if ($72) {
    $73 = ($69|0)==(0|0);
    if ($73) {
     $76 = 0;
    } else {
     ;HEAP32[$69+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$69+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$69+8>>2]=HEAP32[$1+8>>2]|0;
     ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
     $74 = (($69) + 12|0);
     ;HEAP32[$74+0>>2]=HEAP32[$67+0>>2]|0;HEAP32[$74+4>>2]=HEAP32[$67+4>>2]|0;HEAP32[$74+8>>2]=HEAP32[$67+8>>2]|0;
     ;HEAP32[$67+0>>2]=0|0;HEAP32[$67+4>>2]=0|0;HEAP32[$67+8>>2]=0|0;
     $$pre$i5 = HEAP32[$68>>2]|0;
     $76 = $$pre$i5;
    }
    $75 = (($76) + 24|0);
    HEAP32[$68>>2] = $75;
   } else {
    $77 = (($db) + 12|0);
    $78 = HEAP32[$db>>2]|0;
    $79 = $69;
    $80 = $78;
    $81 = (($79) - ($80))|0;
    $82 = (($81|0) / 24)&-1;
    $83 = (($82) + 1)|0;
    $84 = ($83|0)<(0);
    if ($84) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $85 = $71;
    $86 = (($85) - ($80))|0;
    $87 = (($86|0) / 24)&-1;
    $88 = ($87>>>0)<(1073741823);
    if ($88) {
     $89 = $87 << 1;
     $90 = ($89>>>0)<($83>>>0);
     $91 = $90 ? $83 : $89;
     $$0$i$i$i7 = $91;
    } else {
     $$0$i$i$i7 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i7,$82,$77);
    $92 = (($__v$i$i239) + 8|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    if (!($94)) {
     ;HEAP32[$93+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$93+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$93+8>>2]=HEAP32[$1+8>>2]|0;
     ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
     $95 = (($93) + 12|0);
     ;HEAP32[$95+0>>2]=HEAP32[$67+0>>2]|0;HEAP32[$95+4>>2]=HEAP32[$67+4>>2]|0;HEAP32[$95+8>>2]=HEAP32[$67+8>>2]|0;
     ;HEAP32[$67+0>>2]=0|0;HEAP32[$67+4>>2]=0|0;HEAP32[$67+8>>2]=0|0;
    }
    $96 = (($93) + 24|0);
    HEAP32[$92>>2] = $96;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
   $97 = (($first) + 1|0);
   $$0 = $97;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 98:  {
   HEAP8[$2>>0] = 8;
   $98 = (($2) + 1|0);
   HEAP8[$98>>0]=1819242338&255;HEAP8[$98+1>>0]=(1819242338>>8)&255;HEAP8[$98+2>>0]=(1819242338>>16)&255;HEAP8[$98+3>>0]=1819242338>>24;
   $99 = (($2) + 5|0);
   HEAP8[$99>>0] = 0;
   $100 = (($2) + 12|0);
   ;HEAP32[$100+0>>2]=0|0;HEAP32[$100+4>>2]=0|0;HEAP32[$100+8>>2]=0|0;
   $101 = (($db) + 4|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = (($db) + 8|0);
   $104 = HEAP32[$103>>2]|0;
   $105 = ($102>>>0)<($104>>>0);
   if ($105) {
    $106 = ($102|0)==(0|0);
    if ($106) {
     $109 = 0;
    } else {
     ;HEAP32[$102+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$102+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$102+8>>2]=HEAP32[$2+8>>2]|0;
     ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
     $107 = (($102) + 12|0);
     ;HEAP32[$107+0>>2]=HEAP32[$100+0>>2]|0;HEAP32[$107+4>>2]=HEAP32[$100+4>>2]|0;HEAP32[$107+8>>2]=HEAP32[$100+8>>2]|0;
     ;HEAP32[$100+0>>2]=0|0;HEAP32[$100+4>>2]=0|0;HEAP32[$100+8>>2]=0|0;
     $$pre$i14 = HEAP32[$101>>2]|0;
     $109 = $$pre$i14;
    }
    $108 = (($109) + 24|0);
    HEAP32[$101>>2] = $108;
   } else {
    $110 = (($db) + 12|0);
    $111 = HEAP32[$db>>2]|0;
    $112 = $102;
    $113 = $111;
    $114 = (($112) - ($113))|0;
    $115 = (($114|0) / 24)&-1;
    $116 = (($115) + 1)|0;
    $117 = ($116|0)<(0);
    if ($117) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $118 = $104;
    $119 = (($118) - ($113))|0;
    $120 = (($119|0) / 24)&-1;
    $121 = ($120>>>0)<(1073741823);
    if ($121) {
     $122 = $120 << 1;
     $123 = ($122>>>0)<($116>>>0);
     $124 = $123 ? $116 : $122;
     $$0$i$i$i16 = $124;
    } else {
     $$0$i$i$i16 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i16,$115,$110);
    $125 = (($__v$i$i239) + 8|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($126|0)==(0|0);
    if (!($127)) {
     ;HEAP32[$126+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$126+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$126+8>>2]=HEAP32[$2+8>>2]|0;
     ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
     $128 = (($126) + 12|0);
     ;HEAP32[$128+0>>2]=HEAP32[$100+0>>2]|0;HEAP32[$128+4>>2]=HEAP32[$100+4>>2]|0;HEAP32[$128+8>>2]=HEAP32[$100+8>>2]|0;
     ;HEAP32[$100+0>>2]=0|0;HEAP32[$100+4>>2]=0|0;HEAP32[$100+8>>2]=0|0;
    }
    $129 = (($126) + 24|0);
    HEAP32[$125>>2] = $129;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
   $130 = (($first) + 1|0);
   $$0 = $130;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 97:  {
   $164 = (_malloc(16)|0);
   $165 = (($4) + 8|0);
   HEAP32[$165>>2] = $164;
   HEAP32[$4>>2] = 17;
   $166 = (($4) + 4|0);
   HEAP32[$166>>2] = 11;
   dest=$164+0|0; src=50360+0|0; stop=dest+11|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $167 = (($164) + 11|0);
   HEAP8[$167>>0] = 0;
   $168 = (($4) + 12|0);
   ;HEAP32[$168+0>>2]=0|0;HEAP32[$168+4>>2]=0|0;HEAP32[$168+8>>2]=0|0;
   $169 = (($db) + 4|0);
   $170 = HEAP32[$169>>2]|0;
   $171 = (($db) + 8|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = ($170>>>0)<($172>>>0);
   if ($173) {
    $174 = ($170|0)==(0|0);
    if ($174) {
     $177 = 0;
    } else {
     ;HEAP32[$170+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$170+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$170+8>>2]=HEAP32[$4+8>>2]|0;
     ;HEAP32[$4+0>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
     $175 = (($170) + 12|0);
     ;HEAP32[$175+0>>2]=HEAP32[$168+0>>2]|0;HEAP32[$175+4>>2]=HEAP32[$168+4>>2]|0;HEAP32[$175+8>>2]=HEAP32[$168+8>>2]|0;
     ;HEAP32[$168+0>>2]=0|0;HEAP32[$168+4>>2]=0|0;HEAP32[$168+8>>2]=0|0;
     $$pre$i31 = HEAP32[$169>>2]|0;
     $177 = $$pre$i31;
    }
    $176 = (($177) + 24|0);
    HEAP32[$169>>2] = $176;
   } else {
    $178 = (($db) + 12|0);
    $179 = HEAP32[$db>>2]|0;
    $180 = $170;
    $181 = $179;
    $182 = (($180) - ($181))|0;
    $183 = (($182|0) / 24)&-1;
    $184 = (($183) + 1)|0;
    $185 = ($184|0)<(0);
    if ($185) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $186 = $172;
    $187 = (($186) - ($181))|0;
    $188 = (($187|0) / 24)&-1;
    $189 = ($188>>>0)<(1073741823);
    if ($189) {
     $190 = $188 << 1;
     $191 = ($190>>>0)<($184>>>0);
     $192 = $191 ? $184 : $190;
     $$0$i$i$i33 = $192;
    } else {
     $$0$i$i$i33 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i33,$183,$178);
    $193 = (($__v$i$i239) + 8|0);
    $194 = HEAP32[$193>>2]|0;
    $195 = ($194|0)==(0|0);
    if (!($195)) {
     ;HEAP32[$194+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$194+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$194+8>>2]=HEAP32[$4+8>>2]|0;
     ;HEAP32[$4+0>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
     $196 = (($194) + 12|0);
     ;HEAP32[$196+0>>2]=HEAP32[$168+0>>2]|0;HEAP32[$196+4>>2]=HEAP32[$168+4>>2]|0;HEAP32[$196+8>>2]=HEAP32[$168+8>>2]|0;
     ;HEAP32[$168+0>>2]=0|0;HEAP32[$168+4>>2]=0|0;HEAP32[$168+8>>2]=0|0;
    }
    $197 = (($194) + 24|0);
    HEAP32[$193>>2] = $197;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
   $198 = (($first) + 1|0);
   $$0 = $198;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 104:  {
   $199 = (_malloc(16)|0);
   $200 = (($5) + 8|0);
   HEAP32[$200>>2] = $199;
   HEAP32[$5>>2] = 17;
   $201 = (($5) + 4|0);
   HEAP32[$201>>2] = 13;
   dest=$199+0|0; src=50376+0|0; stop=dest+13|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $202 = (($199) + 13|0);
   HEAP8[$202>>0] = 0;
   $203 = (($5) + 12|0);
   ;HEAP32[$203+0>>2]=0|0;HEAP32[$203+4>>2]=0|0;HEAP32[$203+8>>2]=0|0;
   $204 = (($db) + 4|0);
   $205 = HEAP32[$204>>2]|0;
   $206 = (($db) + 8|0);
   $207 = HEAP32[$206>>2]|0;
   $208 = ($205>>>0)<($207>>>0);
   if ($208) {
    $209 = ($205|0)==(0|0);
    if ($209) {
     $212 = 0;
    } else {
     ;HEAP32[$205+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$205+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$205+8>>2]=HEAP32[$5+8>>2]|0;
     ;HEAP32[$5+0>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;
     $210 = (($205) + 12|0);
     ;HEAP32[$210+0>>2]=HEAP32[$203+0>>2]|0;HEAP32[$210+4>>2]=HEAP32[$203+4>>2]|0;HEAP32[$210+8>>2]=HEAP32[$203+8>>2]|0;
     ;HEAP32[$203+0>>2]=0|0;HEAP32[$203+4>>2]=0|0;HEAP32[$203+8>>2]=0|0;
     $$pre$i39 = HEAP32[$204>>2]|0;
     $212 = $$pre$i39;
    }
    $211 = (($212) + 24|0);
    HEAP32[$204>>2] = $211;
   } else {
    $213 = (($db) + 12|0);
    $214 = HEAP32[$db>>2]|0;
    $215 = $205;
    $216 = $214;
    $217 = (($215) - ($216))|0;
    $218 = (($217|0) / 24)&-1;
    $219 = (($218) + 1)|0;
    $220 = ($219|0)<(0);
    if ($220) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $221 = $207;
    $222 = (($221) - ($216))|0;
    $223 = (($222|0) / 24)&-1;
    $224 = ($223>>>0)<(1073741823);
    if ($224) {
     $225 = $223 << 1;
     $226 = ($225>>>0)<($219>>>0);
     $227 = $226 ? $219 : $225;
     $$0$i$i$i41 = $227;
    } else {
     $$0$i$i$i41 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i41,$218,$213);
    $228 = (($__v$i$i239) + 8|0);
    $229 = HEAP32[$228>>2]|0;
    $230 = ($229|0)==(0|0);
    if (!($230)) {
     ;HEAP32[$229+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$229+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$229+8>>2]=HEAP32[$5+8>>2]|0;
     ;HEAP32[$5+0>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;
     $231 = (($229) + 12|0);
     ;HEAP32[$231+0>>2]=HEAP32[$203+0>>2]|0;HEAP32[$231+4>>2]=HEAP32[$203+4>>2]|0;HEAP32[$231+8>>2]=HEAP32[$203+8>>2]|0;
     ;HEAP32[$203+0>>2]=0|0;HEAP32[$203+4>>2]=0|0;HEAP32[$203+8>>2]=0|0;
    }
    $232 = (($229) + 24|0);
    HEAP32[$228>>2] = $232;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
   $233 = (($first) + 1|0);
   $$0 = $233;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 105:  {
   HEAP8[$8>>0] = 6;
   $302 = (($8) + 1|0);
   ;HEAP8[$302+0>>0]=HEAP8[50664+0>>0]|0;HEAP8[$302+1>>0]=HEAP8[50664+1>>0]|0;HEAP8[$302+2>>0]=HEAP8[50664+2>>0]|0;
   $303 = (($8) + 4|0);
   HEAP8[$303>>0] = 0;
   $304 = (($8) + 12|0);
   ;HEAP32[$304+0>>2]=0|0;HEAP32[$304+4>>2]=0|0;HEAP32[$304+8>>2]=0|0;
   $305 = (($db) + 4|0);
   $306 = HEAP32[$305>>2]|0;
   $307 = (($db) + 8|0);
   $308 = HEAP32[$307>>2]|0;
   $309 = ($306>>>0)<($308>>>0);
   if ($309) {
    $310 = ($306|0)==(0|0);
    if ($310) {
     $313 = 0;
    } else {
     ;HEAP32[$306+0>>2]=HEAP32[$8+0>>2]|0;HEAP32[$306+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$306+8>>2]=HEAP32[$8+8>>2]|0;
     ;HEAP32[$8+0>>2]=0|0;HEAP32[$8+4>>2]=0|0;HEAP32[$8+8>>2]=0|0;
     $311 = (($306) + 12|0);
     ;HEAP32[$311+0>>2]=HEAP32[$304+0>>2]|0;HEAP32[$311+4>>2]=HEAP32[$304+4>>2]|0;HEAP32[$311+8>>2]=HEAP32[$304+8>>2]|0;
     ;HEAP32[$304+0>>2]=0|0;HEAP32[$304+4>>2]=0|0;HEAP32[$304+8>>2]=0|0;
     $$pre$i65 = HEAP32[$305>>2]|0;
     $313 = $$pre$i65;
    }
    $312 = (($313) + 24|0);
    HEAP32[$305>>2] = $312;
   } else {
    $314 = (($db) + 12|0);
    $315 = HEAP32[$db>>2]|0;
    $316 = $306;
    $317 = $315;
    $318 = (($316) - ($317))|0;
    $319 = (($318|0) / 24)&-1;
    $320 = (($319) + 1)|0;
    $321 = ($320|0)<(0);
    if ($321) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $322 = $308;
    $323 = (($322) - ($317))|0;
    $324 = (($323|0) / 24)&-1;
    $325 = ($324>>>0)<(1073741823);
    if ($325) {
     $326 = $324 << 1;
     $327 = ($326>>>0)<($320>>>0);
     $328 = $327 ? $320 : $326;
     $$0$i$i$i67 = $328;
    } else {
     $$0$i$i$i67 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i67,$319,$314);
    $329 = (($__v$i$i239) + 8|0);
    $330 = HEAP32[$329>>2]|0;
    $331 = ($330|0)==(0|0);
    if (!($331)) {
     ;HEAP32[$330+0>>2]=HEAP32[$8+0>>2]|0;HEAP32[$330+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$330+8>>2]=HEAP32[$8+8>>2]|0;
     ;HEAP32[$8+0>>2]=0|0;HEAP32[$8+4>>2]=0|0;HEAP32[$8+8>>2]=0|0;
     $332 = (($330) + 12|0);
     ;HEAP32[$332+0>>2]=HEAP32[$304+0>>2]|0;HEAP32[$332+4>>2]=HEAP32[$304+4>>2]|0;HEAP32[$332+8>>2]=HEAP32[$304+8>>2]|0;
     ;HEAP32[$304+0>>2]=0|0;HEAP32[$304+4>>2]=0|0;HEAP32[$304+8>>2]=0|0;
    }
    $333 = (($330) + 24|0);
    HEAP32[$329>>2] = $333;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($8);
   $334 = (($first) + 1|0);
   $$0 = $334;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 116:  {
   $267 = (_malloc(16)|0);
   $268 = (($7) + 8|0);
   HEAP32[$268>>2] = $267;
   HEAP32[$7>>2] = 17;
   $269 = (($7) + 4|0);
   HEAP32[$269>>2] = 14;
   dest=$267+0|0; src=50400+0|0; stop=dest+14|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $270 = (($267) + 14|0);
   HEAP8[$270>>0] = 0;
   $271 = (($7) + 12|0);
   ;HEAP32[$271+0>>2]=0|0;HEAP32[$271+4>>2]=0|0;HEAP32[$271+8>>2]=0|0;
   $272 = (($db) + 4|0);
   $273 = HEAP32[$272>>2]|0;
   $274 = (($db) + 8|0);
   $275 = HEAP32[$274>>2]|0;
   $276 = ($273>>>0)<($275>>>0);
   if ($276) {
    $277 = ($273|0)==(0|0);
    if ($277) {
     $280 = 0;
    } else {
     ;HEAP32[$273+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$273+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$273+8>>2]=HEAP32[$7+8>>2]|0;
     ;HEAP32[$7+0>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;
     $278 = (($273) + 12|0);
     ;HEAP32[$278+0>>2]=HEAP32[$271+0>>2]|0;HEAP32[$278+4>>2]=HEAP32[$271+4>>2]|0;HEAP32[$278+8>>2]=HEAP32[$271+8>>2]|0;
     ;HEAP32[$271+0>>2]=0|0;HEAP32[$271+4>>2]=0|0;HEAP32[$271+8>>2]=0|0;
     $$pre$i56 = HEAP32[$272>>2]|0;
     $280 = $$pre$i56;
    }
    $279 = (($280) + 24|0);
    HEAP32[$272>>2] = $279;
   } else {
    $281 = (($db) + 12|0);
    $282 = HEAP32[$db>>2]|0;
    $283 = $273;
    $284 = $282;
    $285 = (($283) - ($284))|0;
    $286 = (($285|0) / 24)&-1;
    $287 = (($286) + 1)|0;
    $288 = ($287|0)<(0);
    if ($288) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $289 = $275;
    $290 = (($289) - ($284))|0;
    $291 = (($290|0) / 24)&-1;
    $292 = ($291>>>0)<(1073741823);
    if ($292) {
     $293 = $291 << 1;
     $294 = ($293>>>0)<($287>>>0);
     $295 = $294 ? $287 : $293;
     $$0$i$i$i58 = $295;
    } else {
     $$0$i$i$i58 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i58,$286,$281);
    $296 = (($__v$i$i239) + 8|0);
    $297 = HEAP32[$296>>2]|0;
    $298 = ($297|0)==(0|0);
    if (!($298)) {
     ;HEAP32[$297+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$297+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$297+8>>2]=HEAP32[$7+8>>2]|0;
     ;HEAP32[$7+0>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;
     $299 = (($297) + 12|0);
     ;HEAP32[$299+0>>2]=HEAP32[$271+0>>2]|0;HEAP32[$299+4>>2]=HEAP32[$271+4>>2]|0;HEAP32[$299+8>>2]=HEAP32[$271+8>>2]|0;
     ;HEAP32[$271+0>>2]=0|0;HEAP32[$271+4>>2]=0|0;HEAP32[$271+8>>2]=0|0;
    }
    $300 = (($297) + 24|0);
    HEAP32[$296>>2] = $300;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
   $301 = (($first) + 1|0);
   $$0 = $301;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 118:  {
   HEAP8[$0>>0] = 8;
   $32 = (($0) + 1|0);
   HEAP8[$32>>0]=1684631414&255;HEAP8[$32+1>>0]=(1684631414>>8)&255;HEAP8[$32+2>>0]=(1684631414>>16)&255;HEAP8[$32+3>>0]=1684631414>>24;
   $33 = (($0) + 5|0);
   HEAP8[$33>>0] = 0;
   $34 = (($0) + 12|0);
   ;HEAP32[$34+0>>2]=0|0;HEAP32[$34+4>>2]=0|0;HEAP32[$34+8>>2]=0|0;
   $35 = (($db) + 4|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = (($db) + 8|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = ($36>>>0)<($38>>>0);
   if ($39) {
    $40 = ($36|0)==(0|0);
    if ($40) {
     $43 = 0;
    } else {
     ;HEAP32[$36+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$36+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$36+8>>2]=HEAP32[$0+8>>2]|0;
     ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
     $41 = (($36) + 12|0);
     ;HEAP32[$41+0>>2]=HEAP32[$34+0>>2]|0;HEAP32[$41+4>>2]=HEAP32[$34+4>>2]|0;HEAP32[$41+8>>2]=HEAP32[$34+8>>2]|0;
     ;HEAP32[$34+0>>2]=0|0;HEAP32[$34+4>>2]=0|0;HEAP32[$34+8>>2]=0|0;
     $$pre$i = HEAP32[$35>>2]|0;
     $43 = $$pre$i;
    }
    $42 = (($43) + 24|0);
    HEAP32[$35>>2] = $42;
   } else {
    $44 = (($db) + 12|0);
    $45 = HEAP32[$db>>2]|0;
    $46 = $36;
    $47 = $45;
    $48 = (($46) - ($47))|0;
    $49 = (($48|0) / 24)&-1;
    $50 = (($49) + 1)|0;
    $51 = ($50|0)<(0);
    if ($51) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $52 = $38;
    $53 = (($52) - ($47))|0;
    $54 = (($53|0) / 24)&-1;
    $55 = ($54>>>0)<(1073741823);
    if ($55) {
     $56 = $54 << 1;
     $57 = ($56>>>0)<($50>>>0);
     $58 = $57 ? $50 : $56;
     $$0$i$i$i = $58;
    } else {
     $$0$i$i$i = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i,$49,$44);
    $59 = (($__v$i$i239) + 8|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = ($60|0)==(0|0);
    if (!($61)) {
     ;HEAP32[$60+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$60+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$60+8>>2]=HEAP32[$0+8>>2]|0;
     ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
     $62 = (($60) + 12|0);
     ;HEAP32[$62+0>>2]=HEAP32[$34+0>>2]|0;HEAP32[$62+4>>2]=HEAP32[$34+4>>2]|0;HEAP32[$62+8>>2]=HEAP32[$34+8>>2]|0;
     ;HEAP32[$34+0>>2]=0|0;HEAP32[$34+4>>2]=0|0;HEAP32[$34+8>>2]=0|0;
    }
    $63 = (($60) + 24|0);
    HEAP32[$59>>2] = $63;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
   $64 = (($first) + 1|0);
   $$0 = $64;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 108:  {
   HEAP8[$10>>0] = 8;
   $370 = (($10) + 1|0);
   HEAP8[$370>>0]=1735290732&255;HEAP8[$370+1>>0]=(1735290732>>8)&255;HEAP8[$370+2>>0]=(1735290732>>16)&255;HEAP8[$370+3>>0]=1735290732>>24;
   $371 = (($10) + 5|0);
   HEAP8[$371>>0] = 0;
   $372 = (($10) + 12|0);
   ;HEAP32[$372+0>>2]=0|0;HEAP32[$372+4>>2]=0|0;HEAP32[$372+8>>2]=0|0;
   $373 = (($db) + 4|0);
   $374 = HEAP32[$373>>2]|0;
   $375 = (($db) + 8|0);
   $376 = HEAP32[$375>>2]|0;
   $377 = ($374>>>0)<($376>>>0);
   if ($377) {
    $378 = ($374|0)==(0|0);
    if ($378) {
     $381 = 0;
    } else {
     ;HEAP32[$374+0>>2]=HEAP32[$10+0>>2]|0;HEAP32[$374+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$374+8>>2]=HEAP32[$10+8>>2]|0;
     ;HEAP32[$10+0>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
     $379 = (($374) + 12|0);
     ;HEAP32[$379+0>>2]=HEAP32[$372+0>>2]|0;HEAP32[$379+4>>2]=HEAP32[$372+4>>2]|0;HEAP32[$379+8>>2]=HEAP32[$372+8>>2]|0;
     ;HEAP32[$372+0>>2]=0|0;HEAP32[$372+4>>2]=0|0;HEAP32[$372+8>>2]=0|0;
     $$pre$i82 = HEAP32[$373>>2]|0;
     $381 = $$pre$i82;
    }
    $380 = (($381) + 24|0);
    HEAP32[$373>>2] = $380;
   } else {
    $382 = (($db) + 12|0);
    $383 = HEAP32[$db>>2]|0;
    $384 = $374;
    $385 = $383;
    $386 = (($384) - ($385))|0;
    $387 = (($386|0) / 24)&-1;
    $388 = (($387) + 1)|0;
    $389 = ($388|0)<(0);
    if ($389) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $390 = $376;
    $391 = (($390) - ($385))|0;
    $392 = (($391|0) / 24)&-1;
    $393 = ($392>>>0)<(1073741823);
    if ($393) {
     $394 = $392 << 1;
     $395 = ($394>>>0)<($388>>>0);
     $396 = $395 ? $388 : $394;
     $$0$i$i$i84 = $396;
    } else {
     $$0$i$i$i84 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i84,$387,$382);
    $397 = (($__v$i$i239) + 8|0);
    $398 = HEAP32[$397>>2]|0;
    $399 = ($398|0)==(0|0);
    if (!($399)) {
     ;HEAP32[$398+0>>2]=HEAP32[$10+0>>2]|0;HEAP32[$398+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$398+8>>2]=HEAP32[$10+8>>2]|0;
     ;HEAP32[$10+0>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
     $400 = (($398) + 12|0);
     ;HEAP32[$400+0>>2]=HEAP32[$372+0>>2]|0;HEAP32[$400+4>>2]=HEAP32[$372+4>>2]|0;HEAP32[$400+8>>2]=HEAP32[$372+8>>2]|0;
     ;HEAP32[$372+0>>2]=0|0;HEAP32[$372+4>>2]=0|0;HEAP32[$372+8>>2]=0|0;
    }
    $401 = (($398) + 24|0);
    HEAP32[$397>>2] = $401;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($10);
   $402 = (($first) + 1|0);
   $$0 = $402;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 109:  {
   $403 = (_malloc(16)|0);
   $404 = (($11) + 8|0);
   HEAP32[$404>>2] = $403;
   HEAP32[$11>>2] = 17;
   $405 = (($11) + 4|0);
   HEAP32[$405>>2] = 13;
   dest=$403+0|0; src=50688+0|0; stop=dest+13|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $406 = (($403) + 13|0);
   HEAP8[$406>>0] = 0;
   $407 = (($11) + 12|0);
   ;HEAP32[$407+0>>2]=0|0;HEAP32[$407+4>>2]=0|0;HEAP32[$407+8>>2]=0|0;
   $408 = (($db) + 4|0);
   $409 = HEAP32[$408>>2]|0;
   $410 = (($db) + 8|0);
   $411 = HEAP32[$410>>2]|0;
   $412 = ($409>>>0)<($411>>>0);
   if ($412) {
    $413 = ($409|0)==(0|0);
    if ($413) {
     $416 = 0;
    } else {
     ;HEAP32[$409+0>>2]=HEAP32[$11+0>>2]|0;HEAP32[$409+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$409+8>>2]=HEAP32[$11+8>>2]|0;
     ;HEAP32[$11+0>>2]=0|0;HEAP32[$11+4>>2]=0|0;HEAP32[$11+8>>2]=0|0;
     $414 = (($409) + 12|0);
     ;HEAP32[$414+0>>2]=HEAP32[$407+0>>2]|0;HEAP32[$414+4>>2]=HEAP32[$407+4>>2]|0;HEAP32[$414+8>>2]=HEAP32[$407+8>>2]|0;
     ;HEAP32[$407+0>>2]=0|0;HEAP32[$407+4>>2]=0|0;HEAP32[$407+8>>2]=0|0;
     $$pre$i90 = HEAP32[$408>>2]|0;
     $416 = $$pre$i90;
    }
    $415 = (($416) + 24|0);
    HEAP32[$408>>2] = $415;
   } else {
    $417 = (($db) + 12|0);
    $418 = HEAP32[$db>>2]|0;
    $419 = $409;
    $420 = $418;
    $421 = (($419) - ($420))|0;
    $422 = (($421|0) / 24)&-1;
    $423 = (($422) + 1)|0;
    $424 = ($423|0)<(0);
    if ($424) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $425 = $411;
    $426 = (($425) - ($420))|0;
    $427 = (($426|0) / 24)&-1;
    $428 = ($427>>>0)<(1073741823);
    if ($428) {
     $429 = $427 << 1;
     $430 = ($429>>>0)<($423>>>0);
     $431 = $430 ? $423 : $429;
     $$0$i$i$i92 = $431;
    } else {
     $$0$i$i$i92 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i92,$422,$417);
    $432 = (($__v$i$i239) + 8|0);
    $433 = HEAP32[$432>>2]|0;
    $434 = ($433|0)==(0|0);
    if (!($434)) {
     ;HEAP32[$433+0>>2]=HEAP32[$11+0>>2]|0;HEAP32[$433+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$433+8>>2]=HEAP32[$11+8>>2]|0;
     ;HEAP32[$11+0>>2]=0|0;HEAP32[$11+4>>2]=0|0;HEAP32[$11+8>>2]=0|0;
     $435 = (($433) + 12|0);
     ;HEAP32[$435+0>>2]=HEAP32[$407+0>>2]|0;HEAP32[$435+4>>2]=HEAP32[$407+4>>2]|0;HEAP32[$435+8>>2]=HEAP32[$407+8>>2]|0;
     ;HEAP32[$407+0>>2]=0|0;HEAP32[$407+4>>2]=0|0;HEAP32[$407+8>>2]=0|0;
    }
    $436 = (($433) + 24|0);
    HEAP32[$432>>2] = $436;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($11);
   $437 = (($first) + 1|0);
   $$0 = $437;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 120:  {
   HEAP8[$12>>0] = 18;
   $438 = (($12) + 1|0);
   dest=$438+0|0; src=50704+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $439 = (($12) + 10|0);
   HEAP8[$439>>0] = 0;
   $440 = (($12) + 12|0);
   ;HEAP32[$440+0>>2]=0|0;HEAP32[$440+4>>2]=0|0;HEAP32[$440+8>>2]=0|0;
   $441 = (($db) + 4|0);
   $442 = HEAP32[$441>>2]|0;
   $443 = (($db) + 8|0);
   $444 = HEAP32[$443>>2]|0;
   $445 = ($442>>>0)<($444>>>0);
   if ($445) {
    $446 = ($442|0)==(0|0);
    if ($446) {
     $449 = 0;
    } else {
     ;HEAP32[$442+0>>2]=HEAP32[$12+0>>2]|0;HEAP32[$442+4>>2]=HEAP32[$12+4>>2]|0;HEAP32[$442+8>>2]=HEAP32[$12+8>>2]|0;
     ;HEAP32[$12+0>>2]=0|0;HEAP32[$12+4>>2]=0|0;HEAP32[$12+8>>2]=0|0;
     $447 = (($442) + 12|0);
     ;HEAP32[$447+0>>2]=HEAP32[$440+0>>2]|0;HEAP32[$447+4>>2]=HEAP32[$440+4>>2]|0;HEAP32[$447+8>>2]=HEAP32[$440+8>>2]|0;
     ;HEAP32[$440+0>>2]=0|0;HEAP32[$440+4>>2]=0|0;HEAP32[$440+8>>2]=0|0;
     $$pre$i99 = HEAP32[$441>>2]|0;
     $449 = $$pre$i99;
    }
    $448 = (($449) + 24|0);
    HEAP32[$441>>2] = $448;
   } else {
    $450 = (($db) + 12|0);
    $451 = HEAP32[$db>>2]|0;
    $452 = $442;
    $453 = $451;
    $454 = (($452) - ($453))|0;
    $455 = (($454|0) / 24)&-1;
    $456 = (($455) + 1)|0;
    $457 = ($456|0)<(0);
    if ($457) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $458 = $444;
    $459 = (($458) - ($453))|0;
    $460 = (($459|0) / 24)&-1;
    $461 = ($460>>>0)<(1073741823);
    if ($461) {
     $462 = $460 << 1;
     $463 = ($462>>>0)<($456>>>0);
     $464 = $463 ? $456 : $462;
     $$0$i$i$i101 = $464;
    } else {
     $$0$i$i$i101 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i101,$455,$450);
    $465 = (($__v$i$i239) + 8|0);
    $466 = HEAP32[$465>>2]|0;
    $467 = ($466|0)==(0|0);
    if (!($467)) {
     ;HEAP32[$466+0>>2]=HEAP32[$12+0>>2]|0;HEAP32[$466+4>>2]=HEAP32[$12+4>>2]|0;HEAP32[$466+8>>2]=HEAP32[$12+8>>2]|0;
     ;HEAP32[$12+0>>2]=0|0;HEAP32[$12+4>>2]=0|0;HEAP32[$12+8>>2]=0|0;
     $468 = (($466) + 12|0);
     ;HEAP32[$468+0>>2]=HEAP32[$440+0>>2]|0;HEAP32[$468+4>>2]=HEAP32[$440+4>>2]|0;HEAP32[$468+8>>2]=HEAP32[$440+8>>2]|0;
     ;HEAP32[$440+0>>2]=0|0;HEAP32[$440+4>>2]=0|0;HEAP32[$440+8>>2]=0|0;
    }
    $469 = (($466) + 24|0);
    HEAP32[$465>>2] = $469;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($12);
   $470 = (($first) + 1|0);
   $$0 = $470;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 121:  {
   $471 = (_malloc(32)|0);
   $472 = (($13) + 8|0);
   HEAP32[$472>>2] = $471;
   HEAP32[$13>>2] = 33;
   $473 = (($13) + 4|0);
   HEAP32[$473>>2] = 18;
   dest=$471+0|0; src=50720+0|0; stop=dest+18|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $474 = (($471) + 18|0);
   HEAP8[$474>>0] = 0;
   $475 = (($13) + 12|0);
   ;HEAP32[$475+0>>2]=0|0;HEAP32[$475+4>>2]=0|0;HEAP32[$475+8>>2]=0|0;
   $476 = (($db) + 4|0);
   $477 = HEAP32[$476>>2]|0;
   $478 = (($db) + 8|0);
   $479 = HEAP32[$478>>2]|0;
   $480 = ($477>>>0)<($479>>>0);
   if ($480) {
    $481 = ($477|0)==(0|0);
    if ($481) {
     $484 = 0;
    } else {
     ;HEAP32[$477+0>>2]=HEAP32[$13+0>>2]|0;HEAP32[$477+4>>2]=HEAP32[$13+4>>2]|0;HEAP32[$477+8>>2]=HEAP32[$13+8>>2]|0;
     ;HEAP32[$13+0>>2]=0|0;HEAP32[$13+4>>2]=0|0;HEAP32[$13+8>>2]=0|0;
     $482 = (($477) + 12|0);
     ;HEAP32[$482+0>>2]=HEAP32[$475+0>>2]|0;HEAP32[$482+4>>2]=HEAP32[$475+4>>2]|0;HEAP32[$482+8>>2]=HEAP32[$475+8>>2]|0;
     ;HEAP32[$475+0>>2]=0|0;HEAP32[$475+4>>2]=0|0;HEAP32[$475+8>>2]=0|0;
     $$pre$i108 = HEAP32[$476>>2]|0;
     $484 = $$pre$i108;
    }
    $483 = (($484) + 24|0);
    HEAP32[$476>>2] = $483;
   } else {
    $485 = (($db) + 12|0);
    $486 = HEAP32[$db>>2]|0;
    $487 = $477;
    $488 = $486;
    $489 = (($487) - ($488))|0;
    $490 = (($489|0) / 24)&-1;
    $491 = (($490) + 1)|0;
    $492 = ($491|0)<(0);
    if ($492) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $493 = $479;
    $494 = (($493) - ($488))|0;
    $495 = (($494|0) / 24)&-1;
    $496 = ($495>>>0)<(1073741823);
    if ($496) {
     $497 = $495 << 1;
     $498 = ($497>>>0)<($491>>>0);
     $499 = $498 ? $491 : $497;
     $$0$i$i$i110 = $499;
    } else {
     $$0$i$i$i110 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i110,$490,$485);
    $500 = (($__v$i$i239) + 8|0);
    $501 = HEAP32[$500>>2]|0;
    $502 = ($501|0)==(0|0);
    if (!($502)) {
     ;HEAP32[$501+0>>2]=HEAP32[$13+0>>2]|0;HEAP32[$501+4>>2]=HEAP32[$13+4>>2]|0;HEAP32[$501+8>>2]=HEAP32[$13+8>>2]|0;
     ;HEAP32[$13+0>>2]=0|0;HEAP32[$13+4>>2]=0|0;HEAP32[$13+8>>2]=0|0;
     $503 = (($501) + 12|0);
     ;HEAP32[$503+0>>2]=HEAP32[$475+0>>2]|0;HEAP32[$503+4>>2]=HEAP32[$475+4>>2]|0;HEAP32[$503+8>>2]=HEAP32[$475+8>>2]|0;
     ;HEAP32[$475+0>>2]=0|0;HEAP32[$475+4>>2]=0|0;HEAP32[$475+8>>2]=0|0;
    }
    $504 = (($501) + 24|0);
    HEAP32[$500>>2] = $504;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($13);
   $505 = (($first) + 1|0);
   $$0 = $505;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 110:  {
   HEAP8[$14>>0] = 16;
   $506 = (($14) + 1|0);
   $507 = $506;
   $508 = $507;
   HEAP8[$508>>0]=1852399455&255;HEAP8[$508+1>>0]=(1852399455>>8)&255;HEAP8[$508+2>>0]=(1852399455>>16)&255;HEAP8[$508+3>>0]=1852399455>>24;
   $509 = (($507) + 4)|0;
   $510 = $509;
   HEAP8[$510>>0]=942813556&255;HEAP8[$510+1>>0]=(942813556>>8)&255;HEAP8[$510+2>>0]=(942813556>>16)&255;HEAP8[$510+3>>0]=942813556>>24;
   $511 = (($14) + 9|0);
   HEAP8[$511>>0] = 0;
   $512 = (($14) + 12|0);
   ;HEAP32[$512+0>>2]=0|0;HEAP32[$512+4>>2]=0|0;HEAP32[$512+8>>2]=0|0;
   $513 = (($db) + 4|0);
   $514 = HEAP32[$513>>2]|0;
   $515 = (($db) + 8|0);
   $516 = HEAP32[$515>>2]|0;
   $517 = ($514>>>0)<($516>>>0);
   if ($517) {
    $518 = ($514|0)==(0|0);
    if ($518) {
     $521 = 0;
    } else {
     ;HEAP32[$514+0>>2]=HEAP32[$14+0>>2]|0;HEAP32[$514+4>>2]=HEAP32[$14+4>>2]|0;HEAP32[$514+8>>2]=HEAP32[$14+8>>2]|0;
     ;HEAP32[$14+0>>2]=0|0;HEAP32[$14+4>>2]=0|0;HEAP32[$14+8>>2]=0|0;
     $519 = (($514) + 12|0);
     ;HEAP32[$519+0>>2]=HEAP32[$512+0>>2]|0;HEAP32[$519+4>>2]=HEAP32[$512+4>>2]|0;HEAP32[$519+8>>2]=HEAP32[$512+8>>2]|0;
     ;HEAP32[$512+0>>2]=0|0;HEAP32[$512+4>>2]=0|0;HEAP32[$512+8>>2]=0|0;
     $$pre$i117 = HEAP32[$513>>2]|0;
     $521 = $$pre$i117;
    }
    $520 = (($521) + 24|0);
    HEAP32[$513>>2] = $520;
   } else {
    $522 = (($db) + 12|0);
    $523 = HEAP32[$db>>2]|0;
    $524 = $514;
    $525 = $523;
    $526 = (($524) - ($525))|0;
    $527 = (($526|0) / 24)&-1;
    $528 = (($527) + 1)|0;
    $529 = ($528|0)<(0);
    if ($529) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $530 = $516;
    $531 = (($530) - ($525))|0;
    $532 = (($531|0) / 24)&-1;
    $533 = ($532>>>0)<(1073741823);
    if ($533) {
     $534 = $532 << 1;
     $535 = ($534>>>0)<($528>>>0);
     $536 = $535 ? $528 : $534;
     $$0$i$i$i119 = $536;
    } else {
     $$0$i$i$i119 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i119,$527,$522);
    $537 = (($__v$i$i239) + 8|0);
    $538 = HEAP32[$537>>2]|0;
    $539 = ($538|0)==(0|0);
    if (!($539)) {
     ;HEAP32[$538+0>>2]=HEAP32[$14+0>>2]|0;HEAP32[$538+4>>2]=HEAP32[$14+4>>2]|0;HEAP32[$538+8>>2]=HEAP32[$14+8>>2]|0;
     ;HEAP32[$14+0>>2]=0|0;HEAP32[$14+4>>2]=0|0;HEAP32[$14+8>>2]=0|0;
     $540 = (($538) + 12|0);
     ;HEAP32[$540+0>>2]=HEAP32[$512+0>>2]|0;HEAP32[$540+4>>2]=HEAP32[$512+4>>2]|0;HEAP32[$540+8>>2]=HEAP32[$512+8>>2]|0;
     ;HEAP32[$512+0>>2]=0|0;HEAP32[$512+4>>2]=0|0;HEAP32[$512+8>>2]=0|0;
    }
    $541 = (($538) + 24|0);
    HEAP32[$537>>2] = $541;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($14);
   $542 = (($first) + 1|0);
   $$0 = $542;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 111:  {
   $543 = (_malloc(32)|0);
   $544 = (($15) + 8|0);
   HEAP32[$544>>2] = $543;
   HEAP32[$15>>2] = 33;
   $545 = (($15) + 4|0);
   HEAP32[$545>>2] = 17;
   dest=$543+0|0; src=50448+0|0; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $546 = (($543) + 17|0);
   HEAP8[$546>>0] = 0;
   $547 = (($15) + 12|0);
   ;HEAP32[$547+0>>2]=0|0;HEAP32[$547+4>>2]=0|0;HEAP32[$547+8>>2]=0|0;
   $548 = (($db) + 4|0);
   $549 = HEAP32[$548>>2]|0;
   $550 = (($db) + 8|0);
   $551 = HEAP32[$550>>2]|0;
   $552 = ($549>>>0)<($551>>>0);
   if ($552) {
    $553 = ($549|0)==(0|0);
    if ($553) {
     $556 = 0;
    } else {
     ;HEAP32[$549+0>>2]=HEAP32[$15+0>>2]|0;HEAP32[$549+4>>2]=HEAP32[$15+4>>2]|0;HEAP32[$549+8>>2]=HEAP32[$15+8>>2]|0;
     ;HEAP32[$15+0>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;
     $554 = (($549) + 12|0);
     ;HEAP32[$554+0>>2]=HEAP32[$547+0>>2]|0;HEAP32[$554+4>>2]=HEAP32[$547+4>>2]|0;HEAP32[$554+8>>2]=HEAP32[$547+8>>2]|0;
     ;HEAP32[$547+0>>2]=0|0;HEAP32[$547+4>>2]=0|0;HEAP32[$547+8>>2]=0|0;
     $$pre$i125 = HEAP32[$548>>2]|0;
     $556 = $$pre$i125;
    }
    $555 = (($556) + 24|0);
    HEAP32[$548>>2] = $555;
   } else {
    $557 = (($db) + 12|0);
    $558 = HEAP32[$db>>2]|0;
    $559 = $549;
    $560 = $558;
    $561 = (($559) - ($560))|0;
    $562 = (($561|0) / 24)&-1;
    $563 = (($562) + 1)|0;
    $564 = ($563|0)<(0);
    if ($564) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $565 = $551;
    $566 = (($565) - ($560))|0;
    $567 = (($566|0) / 24)&-1;
    $568 = ($567>>>0)<(1073741823);
    if ($568) {
     $569 = $567 << 1;
     $570 = ($569>>>0)<($563>>>0);
     $571 = $570 ? $563 : $569;
     $$0$i$i$i127 = $571;
    } else {
     $$0$i$i$i127 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i127,$562,$557);
    $572 = (($__v$i$i239) + 8|0);
    $573 = HEAP32[$572>>2]|0;
    $574 = ($573|0)==(0|0);
    if (!($574)) {
     ;HEAP32[$573+0>>2]=HEAP32[$15+0>>2]|0;HEAP32[$573+4>>2]=HEAP32[$15+4>>2]|0;HEAP32[$573+8>>2]=HEAP32[$15+8>>2]|0;
     ;HEAP32[$15+0>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;
     $575 = (($573) + 12|0);
     ;HEAP32[$575+0>>2]=HEAP32[$547+0>>2]|0;HEAP32[$575+4>>2]=HEAP32[$547+4>>2]|0;HEAP32[$575+8>>2]=HEAP32[$547+8>>2]|0;
     ;HEAP32[$547+0>>2]=0|0;HEAP32[$547+4>>2]=0|0;HEAP32[$547+8>>2]=0|0;
    }
    $576 = (($573) + 24|0);
    HEAP32[$572>>2] = $576;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($15);
   $577 = (($first) + 1|0);
   $$0 = $577;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 102:  {
   HEAP8[$16>>0] = 10;
   $578 = (($16) + 1|0);
   ;HEAP8[$578+0>>0]=HEAP8[50744+0>>0]|0;HEAP8[$578+1>>0]=HEAP8[50744+1>>0]|0;HEAP8[$578+2>>0]=HEAP8[50744+2>>0]|0;HEAP8[$578+3>>0]=HEAP8[50744+3>>0]|0;HEAP8[$578+4>>0]=HEAP8[50744+4>>0]|0;
   $579 = (($16) + 6|0);
   HEAP8[$579>>0] = 0;
   $580 = (($16) + 12|0);
   ;HEAP32[$580+0>>2]=0|0;HEAP32[$580+4>>2]=0|0;HEAP32[$580+8>>2]=0|0;
   $581 = (($db) + 4|0);
   $582 = HEAP32[$581>>2]|0;
   $583 = (($db) + 8|0);
   $584 = HEAP32[$583>>2]|0;
   $585 = ($582>>>0)<($584>>>0);
   if ($585) {
    $586 = ($582|0)==(0|0);
    if ($586) {
     $589 = 0;
    } else {
     ;HEAP32[$582+0>>2]=HEAP32[$16+0>>2]|0;HEAP32[$582+4>>2]=HEAP32[$16+4>>2]|0;HEAP32[$582+8>>2]=HEAP32[$16+8>>2]|0;
     ;HEAP32[$16+0>>2]=0|0;HEAP32[$16+4>>2]=0|0;HEAP32[$16+8>>2]=0|0;
     $587 = (($582) + 12|0);
     ;HEAP32[$587+0>>2]=HEAP32[$580+0>>2]|0;HEAP32[$587+4>>2]=HEAP32[$580+4>>2]|0;HEAP32[$587+8>>2]=HEAP32[$580+8>>2]|0;
     ;HEAP32[$580+0>>2]=0|0;HEAP32[$580+4>>2]=0|0;HEAP32[$580+8>>2]=0|0;
     $$pre$i134 = HEAP32[$581>>2]|0;
     $589 = $$pre$i134;
    }
    $588 = (($589) + 24|0);
    HEAP32[$581>>2] = $588;
   } else {
    $590 = (($db) + 12|0);
    $591 = HEAP32[$db>>2]|0;
    $592 = $582;
    $593 = $591;
    $594 = (($592) - ($593))|0;
    $595 = (($594|0) / 24)&-1;
    $596 = (($595) + 1)|0;
    $597 = ($596|0)<(0);
    if ($597) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $598 = $584;
    $599 = (($598) - ($593))|0;
    $600 = (($599|0) / 24)&-1;
    $601 = ($600>>>0)<(1073741823);
    if ($601) {
     $602 = $600 << 1;
     $603 = ($602>>>0)<($596>>>0);
     $604 = $603 ? $596 : $602;
     $$0$i$i$i136 = $604;
    } else {
     $$0$i$i$i136 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i136,$595,$590);
    $605 = (($__v$i$i239) + 8|0);
    $606 = HEAP32[$605>>2]|0;
    $607 = ($606|0)==(0|0);
    if (!($607)) {
     ;HEAP32[$606+0>>2]=HEAP32[$16+0>>2]|0;HEAP32[$606+4>>2]=HEAP32[$16+4>>2]|0;HEAP32[$606+8>>2]=HEAP32[$16+8>>2]|0;
     ;HEAP32[$16+0>>2]=0|0;HEAP32[$16+4>>2]=0|0;HEAP32[$16+8>>2]=0|0;
     $608 = (($606) + 12|0);
     ;HEAP32[$608+0>>2]=HEAP32[$580+0>>2]|0;HEAP32[$608+4>>2]=HEAP32[$580+4>>2]|0;HEAP32[$608+8>>2]=HEAP32[$580+8>>2]|0;
     ;HEAP32[$580+0>>2]=0|0;HEAP32[$580+4>>2]=0|0;HEAP32[$580+8>>2]=0|0;
    }
    $609 = (($606) + 24|0);
    HEAP32[$605>>2] = $609;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($16);
   $610 = (($first) + 1|0);
   $$0 = $610;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 100:  {
   HEAP8[$17>>0] = 12;
   $611 = (($17) + 1|0);
   ;HEAP8[$611+0>>0]=HEAP8[50752+0>>0]|0;HEAP8[$611+1>>0]=HEAP8[50752+1>>0]|0;HEAP8[$611+2>>0]=HEAP8[50752+2>>0]|0;HEAP8[$611+3>>0]=HEAP8[50752+3>>0]|0;HEAP8[$611+4>>0]=HEAP8[50752+4>>0]|0;HEAP8[$611+5>>0]=HEAP8[50752+5>>0]|0;
   $612 = (($17) + 7|0);
   HEAP8[$612>>0] = 0;
   $613 = (($17) + 12|0);
   ;HEAP32[$613+0>>2]=0|0;HEAP32[$613+4>>2]=0|0;HEAP32[$613+8>>2]=0|0;
   $614 = (($db) + 4|0);
   $615 = HEAP32[$614>>2]|0;
   $616 = (($db) + 8|0);
   $617 = HEAP32[$616>>2]|0;
   $618 = ($615>>>0)<($617>>>0);
   if ($618) {
    $619 = ($615|0)==(0|0);
    if ($619) {
     $622 = 0;
    } else {
     ;HEAP32[$615+0>>2]=HEAP32[$17+0>>2]|0;HEAP32[$615+4>>2]=HEAP32[$17+4>>2]|0;HEAP32[$615+8>>2]=HEAP32[$17+8>>2]|0;
     ;HEAP32[$17+0>>2]=0|0;HEAP32[$17+4>>2]=0|0;HEAP32[$17+8>>2]=0|0;
     $620 = (($615) + 12|0);
     ;HEAP32[$620+0>>2]=HEAP32[$613+0>>2]|0;HEAP32[$620+4>>2]=HEAP32[$613+4>>2]|0;HEAP32[$620+8>>2]=HEAP32[$613+8>>2]|0;
     ;HEAP32[$613+0>>2]=0|0;HEAP32[$613+4>>2]=0|0;HEAP32[$613+8>>2]=0|0;
     $$pre$i143 = HEAP32[$614>>2]|0;
     $622 = $$pre$i143;
    }
    $621 = (($622) + 24|0);
    HEAP32[$614>>2] = $621;
   } else {
    $623 = (($db) + 12|0);
    $624 = HEAP32[$db>>2]|0;
    $625 = $615;
    $626 = $624;
    $627 = (($625) - ($626))|0;
    $628 = (($627|0) / 24)&-1;
    $629 = (($628) + 1)|0;
    $630 = ($629|0)<(0);
    if ($630) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $631 = $617;
    $632 = (($631) - ($626))|0;
    $633 = (($632|0) / 24)&-1;
    $634 = ($633>>>0)<(1073741823);
    if ($634) {
     $635 = $633 << 1;
     $636 = ($635>>>0)<($629>>>0);
     $637 = $636 ? $629 : $635;
     $$0$i$i$i145 = $637;
    } else {
     $$0$i$i$i145 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i145,$628,$623);
    $638 = (($__v$i$i239) + 8|0);
    $639 = HEAP32[$638>>2]|0;
    $640 = ($639|0)==(0|0);
    if (!($640)) {
     ;HEAP32[$639+0>>2]=HEAP32[$17+0>>2]|0;HEAP32[$639+4>>2]=HEAP32[$17+4>>2]|0;HEAP32[$639+8>>2]=HEAP32[$17+8>>2]|0;
     ;HEAP32[$17+0>>2]=0|0;HEAP32[$17+4>>2]=0|0;HEAP32[$17+8>>2]=0|0;
     $641 = (($639) + 12|0);
     ;HEAP32[$641+0>>2]=HEAP32[$613+0>>2]|0;HEAP32[$641+4>>2]=HEAP32[$613+4>>2]|0;HEAP32[$641+8>>2]=HEAP32[$613+8>>2]|0;
     ;HEAP32[$613+0>>2]=0|0;HEAP32[$613+4>>2]=0|0;HEAP32[$613+8>>2]=0|0;
    }
    $642 = (($639) + 24|0);
    HEAP32[$638>>2] = $642;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($17);
   $643 = (($first) + 1|0);
   $$0 = $643;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 106:  {
   $335 = (_malloc(16)|0);
   $336 = (($9) + 8|0);
   HEAP32[$336>>2] = $335;
   HEAP32[$9>>2] = 17;
   $337 = (($9) + 4|0);
   HEAP32[$337>>2] = 12;
   dest=$335+0|0; src=50672+0|0; stop=dest+12|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $338 = (($335) + 12|0);
   HEAP8[$338>>0] = 0;
   $339 = (($9) + 12|0);
   ;HEAP32[$339+0>>2]=0|0;HEAP32[$339+4>>2]=0|0;HEAP32[$339+8>>2]=0|0;
   $340 = (($db) + 4|0);
   $341 = HEAP32[$340>>2]|0;
   $342 = (($db) + 8|0);
   $343 = HEAP32[$342>>2]|0;
   $344 = ($341>>>0)<($343>>>0);
   if ($344) {
    $345 = ($341|0)==(0|0);
    if ($345) {
     $348 = 0;
    } else {
     ;HEAP32[$341+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$341+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$341+8>>2]=HEAP32[$9+8>>2]|0;
     ;HEAP32[$9+0>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
     $346 = (($341) + 12|0);
     ;HEAP32[$346+0>>2]=HEAP32[$339+0>>2]|0;HEAP32[$346+4>>2]=HEAP32[$339+4>>2]|0;HEAP32[$346+8>>2]=HEAP32[$339+8>>2]|0;
     ;HEAP32[$339+0>>2]=0|0;HEAP32[$339+4>>2]=0|0;HEAP32[$339+8>>2]=0|0;
     $$pre$i73 = HEAP32[$340>>2]|0;
     $348 = $$pre$i73;
    }
    $347 = (($348) + 24|0);
    HEAP32[$340>>2] = $347;
   } else {
    $349 = (($db) + 12|0);
    $350 = HEAP32[$db>>2]|0;
    $351 = $341;
    $352 = $350;
    $353 = (($351) - ($352))|0;
    $354 = (($353|0) / 24)&-1;
    $355 = (($354) + 1)|0;
    $356 = ($355|0)<(0);
    if ($356) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $357 = $343;
    $358 = (($357) - ($352))|0;
    $359 = (($358|0) / 24)&-1;
    $360 = ($359>>>0)<(1073741823);
    if ($360) {
     $361 = $359 << 1;
     $362 = ($361>>>0)<($355>>>0);
     $363 = $362 ? $355 : $361;
     $$0$i$i$i75 = $363;
    } else {
     $$0$i$i$i75 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i75,$354,$349);
    $364 = (($__v$i$i239) + 8|0);
    $365 = HEAP32[$364>>2]|0;
    $366 = ($365|0)==(0|0);
    if (!($366)) {
     ;HEAP32[$365+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$365+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$365+8>>2]=HEAP32[$9+8>>2]|0;
     ;HEAP32[$9+0>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
     $367 = (($365) + 12|0);
     ;HEAP32[$367+0>>2]=HEAP32[$339+0>>2]|0;HEAP32[$367+4>>2]=HEAP32[$339+4>>2]|0;HEAP32[$367+8>>2]=HEAP32[$339+8>>2]|0;
     ;HEAP32[$339+0>>2]=0|0;HEAP32[$339+4>>2]=0|0;HEAP32[$339+8>>2]=0|0;
    }
    $368 = (($365) + 24|0);
    HEAP32[$364>>2] = $368;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($9);
   $369 = (($first) + 1|0);
   $$0 = $369;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 101:  {
   $644 = (_malloc(16)|0);
   $645 = (($18) + 8|0);
   HEAP32[$645>>2] = $644;
   HEAP32[$18>>2] = 17;
   $646 = (($18) + 4|0);
   HEAP32[$646>>2] = 11;
   dest=$644+0|0; src=50760+0|0; stop=dest+11|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $647 = (($644) + 11|0);
   HEAP8[$647>>0] = 0;
   $648 = (($18) + 12|0);
   ;HEAP32[$648+0>>2]=0|0;HEAP32[$648+4>>2]=0|0;HEAP32[$648+8>>2]=0|0;
   $649 = (($db) + 4|0);
   $650 = HEAP32[$649>>2]|0;
   $651 = (($db) + 8|0);
   $652 = HEAP32[$651>>2]|0;
   $653 = ($650>>>0)<($652>>>0);
   if ($653) {
    $654 = ($650|0)==(0|0);
    if ($654) {
     $657 = 0;
    } else {
     ;HEAP32[$650+0>>2]=HEAP32[$18+0>>2]|0;HEAP32[$650+4>>2]=HEAP32[$18+4>>2]|0;HEAP32[$650+8>>2]=HEAP32[$18+8>>2]|0;
     ;HEAP32[$18+0>>2]=0|0;HEAP32[$18+4>>2]=0|0;HEAP32[$18+8>>2]=0|0;
     $655 = (($650) + 12|0);
     ;HEAP32[$655+0>>2]=HEAP32[$648+0>>2]|0;HEAP32[$655+4>>2]=HEAP32[$648+4>>2]|0;HEAP32[$655+8>>2]=HEAP32[$648+8>>2]|0;
     ;HEAP32[$648+0>>2]=0|0;HEAP32[$648+4>>2]=0|0;HEAP32[$648+8>>2]=0|0;
     $$pre$i151 = HEAP32[$649>>2]|0;
     $657 = $$pre$i151;
    }
    $656 = (($657) + 24|0);
    HEAP32[$649>>2] = $656;
   } else {
    $658 = (($db) + 12|0);
    $659 = HEAP32[$db>>2]|0;
    $660 = $650;
    $661 = $659;
    $662 = (($660) - ($661))|0;
    $663 = (($662|0) / 24)&-1;
    $664 = (($663) + 1)|0;
    $665 = ($664|0)<(0);
    if ($665) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $666 = $652;
    $667 = (($666) - ($661))|0;
    $668 = (($667|0) / 24)&-1;
    $669 = ($668>>>0)<(1073741823);
    if ($669) {
     $670 = $668 << 1;
     $671 = ($670>>>0)<($664>>>0);
     $672 = $671 ? $664 : $670;
     $$0$i$i$i153 = $672;
    } else {
     $$0$i$i$i153 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i153,$663,$658);
    $673 = (($__v$i$i239) + 8|0);
    $674 = HEAP32[$673>>2]|0;
    $675 = ($674|0)==(0|0);
    if (!($675)) {
     ;HEAP32[$674+0>>2]=HEAP32[$18+0>>2]|0;HEAP32[$674+4>>2]=HEAP32[$18+4>>2]|0;HEAP32[$674+8>>2]=HEAP32[$18+8>>2]|0;
     ;HEAP32[$18+0>>2]=0|0;HEAP32[$18+4>>2]=0|0;HEAP32[$18+8>>2]=0|0;
     $676 = (($674) + 12|0);
     ;HEAP32[$676+0>>2]=HEAP32[$648+0>>2]|0;HEAP32[$676+4>>2]=HEAP32[$648+4>>2]|0;HEAP32[$676+8>>2]=HEAP32[$648+8>>2]|0;
     ;HEAP32[$648+0>>2]=0|0;HEAP32[$648+4>>2]=0|0;HEAP32[$648+8>>2]=0|0;
    }
    $677 = (($674) + 24|0);
    HEAP32[$673>>2] = $677;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($18);
   $678 = (($first) + 1|0);
   $$0 = $678;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 103:  {
   HEAP8[$19>>0] = 20;
   $679 = (($19) + 1|0);
   dest=$679+0|0; src=50776+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $680 = (($19) + 11|0);
   HEAP8[$680>>0] = 0;
   $681 = (($19) + 12|0);
   ;HEAP32[$681+0>>2]=0|0;HEAP32[$681+4>>2]=0|0;HEAP32[$681+8>>2]=0|0;
   $682 = (($db) + 4|0);
   $683 = HEAP32[$682>>2]|0;
   $684 = (($db) + 8|0);
   $685 = HEAP32[$684>>2]|0;
   $686 = ($683>>>0)<($685>>>0);
   if ($686) {
    $687 = ($683|0)==(0|0);
    if ($687) {
     $690 = 0;
    } else {
     ;HEAP32[$683+0>>2]=HEAP32[$19+0>>2]|0;HEAP32[$683+4>>2]=HEAP32[$19+4>>2]|0;HEAP32[$683+8>>2]=HEAP32[$19+8>>2]|0;
     ;HEAP32[$19+0>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;
     $688 = (($683) + 12|0);
     ;HEAP32[$688+0>>2]=HEAP32[$681+0>>2]|0;HEAP32[$688+4>>2]=HEAP32[$681+4>>2]|0;HEAP32[$688+8>>2]=HEAP32[$681+8>>2]|0;
     ;HEAP32[$681+0>>2]=0|0;HEAP32[$681+4>>2]=0|0;HEAP32[$681+8>>2]=0|0;
     $$pre$i160 = HEAP32[$682>>2]|0;
     $690 = $$pre$i160;
    }
    $689 = (($690) + 24|0);
    HEAP32[$682>>2] = $689;
   } else {
    $691 = (($db) + 12|0);
    $692 = HEAP32[$db>>2]|0;
    $693 = $683;
    $694 = $692;
    $695 = (($693) - ($694))|0;
    $696 = (($695|0) / 24)&-1;
    $697 = (($696) + 1)|0;
    $698 = ($697|0)<(0);
    if ($698) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $699 = $685;
    $700 = (($699) - ($694))|0;
    $701 = (($700|0) / 24)&-1;
    $702 = ($701>>>0)<(1073741823);
    if ($702) {
     $703 = $701 << 1;
     $704 = ($703>>>0)<($697>>>0);
     $705 = $704 ? $697 : $703;
     $$0$i$i$i162 = $705;
    } else {
     $$0$i$i$i162 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i162,$696,$691);
    $706 = (($__v$i$i239) + 8|0);
    $707 = HEAP32[$706>>2]|0;
    $708 = ($707|0)==(0|0);
    if (!($708)) {
     ;HEAP32[$707+0>>2]=HEAP32[$19+0>>2]|0;HEAP32[$707+4>>2]=HEAP32[$19+4>>2]|0;HEAP32[$707+8>>2]=HEAP32[$19+8>>2]|0;
     ;HEAP32[$19+0>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;
     $709 = (($707) + 12|0);
     ;HEAP32[$709+0>>2]=HEAP32[$681+0>>2]|0;HEAP32[$709+4>>2]=HEAP32[$681+4>>2]|0;HEAP32[$709+8>>2]=HEAP32[$681+8>>2]|0;
     ;HEAP32[$681+0>>2]=0|0;HEAP32[$681+4>>2]=0|0;HEAP32[$681+8>>2]=0|0;
    }
    $710 = (($707) + 24|0);
    HEAP32[$706>>2] = $710;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($19);
   $711 = (($first) + 1|0);
   $$0 = $711;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 122:  {
   HEAP8[$20>>0] = 6;
   $712 = (($20) + 1|0);
   ;HEAP8[$712+0>>0]=HEAP8[50792+0>>0]|0;HEAP8[$712+1>>0]=HEAP8[50792+1>>0]|0;HEAP8[$712+2>>0]=HEAP8[50792+2>>0]|0;
   $713 = (($20) + 4|0);
   HEAP8[$713>>0] = 0;
   $714 = (($20) + 12|0);
   ;HEAP32[$714+0>>2]=0|0;HEAP32[$714+4>>2]=0|0;HEAP32[$714+8>>2]=0|0;
   $715 = (($db) + 4|0);
   $716 = HEAP32[$715>>2]|0;
   $717 = (($db) + 8|0);
   $718 = HEAP32[$717>>2]|0;
   $719 = ($716>>>0)<($718>>>0);
   if ($719) {
    $720 = ($716|0)==(0|0);
    if ($720) {
     $723 = 0;
    } else {
     ;HEAP32[$716+0>>2]=HEAP32[$20+0>>2]|0;HEAP32[$716+4>>2]=HEAP32[$20+4>>2]|0;HEAP32[$716+8>>2]=HEAP32[$20+8>>2]|0;
     ;HEAP32[$20+0>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;
     $721 = (($716) + 12|0);
     ;HEAP32[$721+0>>2]=HEAP32[$714+0>>2]|0;HEAP32[$721+4>>2]=HEAP32[$714+4>>2]|0;HEAP32[$721+8>>2]=HEAP32[$714+8>>2]|0;
     ;HEAP32[$714+0>>2]=0|0;HEAP32[$714+4>>2]=0|0;HEAP32[$714+8>>2]=0|0;
     $$pre$i169 = HEAP32[$715>>2]|0;
     $723 = $$pre$i169;
    }
    $722 = (($723) + 24|0);
    HEAP32[$715>>2] = $722;
   } else {
    $724 = (($db) + 12|0);
    $725 = HEAP32[$db>>2]|0;
    $726 = $716;
    $727 = $725;
    $728 = (($726) - ($727))|0;
    $729 = (($728|0) / 24)&-1;
    $730 = (($729) + 1)|0;
    $731 = ($730|0)<(0);
    if ($731) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $732 = $718;
    $733 = (($732) - ($727))|0;
    $734 = (($733|0) / 24)&-1;
    $735 = ($734>>>0)<(1073741823);
    if ($735) {
     $736 = $734 << 1;
     $737 = ($736>>>0)<($730>>>0);
     $738 = $737 ? $730 : $736;
     $$0$i$i$i171 = $738;
    } else {
     $$0$i$i$i171 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i171,$729,$724);
    $739 = (($__v$i$i239) + 8|0);
    $740 = HEAP32[$739>>2]|0;
    $741 = ($740|0)==(0|0);
    if (!($741)) {
     ;HEAP32[$740+0>>2]=HEAP32[$20+0>>2]|0;HEAP32[$740+4>>2]=HEAP32[$20+4>>2]|0;HEAP32[$740+8>>2]=HEAP32[$20+8>>2]|0;
     ;HEAP32[$20+0>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;
     $742 = (($740) + 12|0);
     ;HEAP32[$742+0>>2]=HEAP32[$714+0>>2]|0;HEAP32[$742+4>>2]=HEAP32[$714+4>>2]|0;HEAP32[$742+8>>2]=HEAP32[$714+8>>2]|0;
     ;HEAP32[$714+0>>2]=0|0;HEAP32[$714+4>>2]=0|0;HEAP32[$714+8>>2]=0|0;
    }
    $743 = (($740) + 24|0);
    HEAP32[$739>>2] = $743;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($20);
   $744 = (($first) + 1|0);
   $$0 = $744;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 99:  {
   HEAP8[$3>>0] = 8;
   $131 = (($3) + 1|0);
   HEAP8[$131>>0]=1918986339&255;HEAP8[$131+1>>0]=(1918986339>>8)&255;HEAP8[$131+2>>0]=(1918986339>>16)&255;HEAP8[$131+3>>0]=1918986339>>24;
   $132 = (($3) + 5|0);
   HEAP8[$132>>0] = 0;
   $133 = (($3) + 12|0);
   ;HEAP32[$133+0>>2]=0|0;HEAP32[$133+4>>2]=0|0;HEAP32[$133+8>>2]=0|0;
   $134 = (($db) + 4|0);
   $135 = HEAP32[$134>>2]|0;
   $136 = (($db) + 8|0);
   $137 = HEAP32[$136>>2]|0;
   $138 = ($135>>>0)<($137>>>0);
   if ($138) {
    $139 = ($135|0)==(0|0);
    if ($139) {
     $142 = 0;
    } else {
     ;HEAP32[$135+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$135+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$135+8>>2]=HEAP32[$3+8>>2]|0;
     ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
     $140 = (($135) + 12|0);
     ;HEAP32[$140+0>>2]=HEAP32[$133+0>>2]|0;HEAP32[$140+4>>2]=HEAP32[$133+4>>2]|0;HEAP32[$140+8>>2]=HEAP32[$133+8>>2]|0;
     ;HEAP32[$133+0>>2]=0|0;HEAP32[$133+4>>2]=0|0;HEAP32[$133+8>>2]=0|0;
     $$pre$i23 = HEAP32[$134>>2]|0;
     $142 = $$pre$i23;
    }
    $141 = (($142) + 24|0);
    HEAP32[$134>>2] = $141;
   } else {
    $143 = (($db) + 12|0);
    $144 = HEAP32[$db>>2]|0;
    $145 = $135;
    $146 = $144;
    $147 = (($145) - ($146))|0;
    $148 = (($147|0) / 24)&-1;
    $149 = (($148) + 1)|0;
    $150 = ($149|0)<(0);
    if ($150) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $151 = $137;
    $152 = (($151) - ($146))|0;
    $153 = (($152|0) / 24)&-1;
    $154 = ($153>>>0)<(1073741823);
    if ($154) {
     $155 = $153 << 1;
     $156 = ($155>>>0)<($149>>>0);
     $157 = $156 ? $149 : $155;
     $$0$i$i$i25 = $157;
    } else {
     $$0$i$i$i25 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i25,$148,$143);
    $158 = (($__v$i$i239) + 8|0);
    $159 = HEAP32[$158>>2]|0;
    $160 = ($159|0)==(0|0);
    if (!($160)) {
     ;HEAP32[$159+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$159+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$159+8>>2]=HEAP32[$3+8>>2]|0;
     ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
     $161 = (($159) + 12|0);
     ;HEAP32[$161+0>>2]=HEAP32[$133+0>>2]|0;HEAP32[$161+4>>2]=HEAP32[$133+4>>2]|0;HEAP32[$161+8>>2]=HEAP32[$133+8>>2]|0;
     ;HEAP32[$133+0>>2]=0|0;HEAP32[$133+4>>2]=0|0;HEAP32[$133+8>>2]=0|0;
    }
    $162 = (($159) + 24|0);
    HEAP32[$158>>2] = $162;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $163 = (($first) + 1|0);
   $$0 = $163;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 117:  {
   $745 = (($first) + 1|0);
   $746 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($745,$last,$db)|0);
   $747 = ($746|0)==($745|0);
   $first$ = $747 ? $first : $746;
   STACKTOP = sp;return ($first$|0);
   break;
  }
  case 68:  {
   $748 = (($first) + 1|0);
   $749 = ($748|0)==($last|0);
   if ($749) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $750 = HEAP8[$748>>0]|0;
   $751 = $750 << 24 >> 24;
   switch ($751|0) {
   case 102:  {
    HEAP8[$23>>0] = 18;
    $818 = (($23) + 1|0);
    dest=$818+0|0; src=50832+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $819 = (($23) + 10|0);
    HEAP8[$819>>0] = 0;
    $820 = (($23) + 12|0);
    ;HEAP32[$820+0>>2]=0|0;HEAP32[$820+4>>2]=0|0;HEAP32[$820+8>>2]=0|0;
    $821 = (($db) + 4|0);
    $822 = HEAP32[$821>>2]|0;
    $823 = (($db) + 8|0);
    $824 = HEAP32[$823>>2]|0;
    $825 = ($822>>>0)<($824>>>0);
    if ($825) {
     $826 = ($822|0)==(0|0);
     if ($826) {
      $829 = 0;
     } else {
      ;HEAP32[$822+0>>2]=HEAP32[$23+0>>2]|0;HEAP32[$822+4>>2]=HEAP32[$23+4>>2]|0;HEAP32[$822+8>>2]=HEAP32[$23+8>>2]|0;
      ;HEAP32[$23+0>>2]=0|0;HEAP32[$23+4>>2]=0|0;HEAP32[$23+8>>2]=0|0;
      $827 = (($822) + 12|0);
      ;HEAP32[$827+0>>2]=HEAP32[$820+0>>2]|0;HEAP32[$827+4>>2]=HEAP32[$820+4>>2]|0;HEAP32[$827+8>>2]=HEAP32[$820+8>>2]|0;
      ;HEAP32[$820+0>>2]=0|0;HEAP32[$820+4>>2]=0|0;HEAP32[$820+8>>2]=0|0;
      $$pre$i196 = HEAP32[$821>>2]|0;
      $829 = $$pre$i196;
     }
     $828 = (($829) + 24|0);
     HEAP32[$821>>2] = $828;
    } else {
     $830 = (($db) + 12|0);
     $831 = HEAP32[$db>>2]|0;
     $832 = $822;
     $833 = $831;
     $834 = (($832) - ($833))|0;
     $835 = (($834|0) / 24)&-1;
     $836 = (($835) + 1)|0;
     $837 = ($836|0)<(0);
     if ($837) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $838 = $824;
     $839 = (($838) - ($833))|0;
     $840 = (($839|0) / 24)&-1;
     $841 = ($840>>>0)<(1073741823);
     if ($841) {
      $842 = $840 << 1;
      $843 = ($842>>>0)<($836>>>0);
      $844 = $843 ? $836 : $842;
      $$0$i$i$i198 = $844;
     } else {
      $$0$i$i$i198 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i198,$835,$830);
     $845 = (($__v$i$i239) + 8|0);
     $846 = HEAP32[$845>>2]|0;
     $847 = ($846|0)==(0|0);
     if (!($847)) {
      ;HEAP32[$846+0>>2]=HEAP32[$23+0>>2]|0;HEAP32[$846+4>>2]=HEAP32[$23+4>>2]|0;HEAP32[$846+8>>2]=HEAP32[$23+8>>2]|0;
      ;HEAP32[$23+0>>2]=0|0;HEAP32[$23+4>>2]=0|0;HEAP32[$23+8>>2]=0|0;
      $848 = (($846) + 12|0);
      ;HEAP32[$848+0>>2]=HEAP32[$820+0>>2]|0;HEAP32[$848+4>>2]=HEAP32[$820+4>>2]|0;HEAP32[$848+8>>2]=HEAP32[$820+8>>2]|0;
      ;HEAP32[$820+0>>2]=0|0;HEAP32[$820+4>>2]=0|0;HEAP32[$820+8>>2]=0|0;
     }
     $849 = (($846) + 24|0);
     HEAP32[$845>>2] = $849;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($23);
    $850 = (($first) + 2|0);
    $$0 = $850;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 104:  {
    HEAP8[$24>>0] = 18;
    $851 = (($24) + 1|0);
    dest=$851+0|0; src=50848+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $852 = (($24) + 10|0);
    HEAP8[$852>>0] = 0;
    $853 = (($24) + 12|0);
    ;HEAP32[$853+0>>2]=0|0;HEAP32[$853+4>>2]=0|0;HEAP32[$853+8>>2]=0|0;
    $854 = (($db) + 4|0);
    $855 = HEAP32[$854>>2]|0;
    $856 = (($db) + 8|0);
    $857 = HEAP32[$856>>2]|0;
    $858 = ($855>>>0)<($857>>>0);
    if ($858) {
     $859 = ($855|0)==(0|0);
     if ($859) {
      $862 = 0;
     } else {
      ;HEAP32[$855+0>>2]=HEAP32[$24+0>>2]|0;HEAP32[$855+4>>2]=HEAP32[$24+4>>2]|0;HEAP32[$855+8>>2]=HEAP32[$24+8>>2]|0;
      ;HEAP32[$24+0>>2]=0|0;HEAP32[$24+4>>2]=0|0;HEAP32[$24+8>>2]=0|0;
      $860 = (($855) + 12|0);
      ;HEAP32[$860+0>>2]=HEAP32[$853+0>>2]|0;HEAP32[$860+4>>2]=HEAP32[$853+4>>2]|0;HEAP32[$860+8>>2]=HEAP32[$853+8>>2]|0;
      ;HEAP32[$853+0>>2]=0|0;HEAP32[$853+4>>2]=0|0;HEAP32[$853+8>>2]=0|0;
      $$pre$i205 = HEAP32[$854>>2]|0;
      $862 = $$pre$i205;
     }
     $861 = (($862) + 24|0);
     HEAP32[$854>>2] = $861;
    } else {
     $863 = (($db) + 12|0);
     $864 = HEAP32[$db>>2]|0;
     $865 = $855;
     $866 = $864;
     $867 = (($865) - ($866))|0;
     $868 = (($867|0) / 24)&-1;
     $869 = (($868) + 1)|0;
     $870 = ($869|0)<(0);
     if ($870) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $871 = $857;
     $872 = (($871) - ($866))|0;
     $873 = (($872|0) / 24)&-1;
     $874 = ($873>>>0)<(1073741823);
     if ($874) {
      $875 = $873 << 1;
      $876 = ($875>>>0)<($869>>>0);
      $877 = $876 ? $869 : $875;
      $$0$i$i$i207 = $877;
     } else {
      $$0$i$i$i207 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i207,$868,$863);
     $878 = (($__v$i$i239) + 8|0);
     $879 = HEAP32[$878>>2]|0;
     $880 = ($879|0)==(0|0);
     if (!($880)) {
      ;HEAP32[$879+0>>2]=HEAP32[$24+0>>2]|0;HEAP32[$879+4>>2]=HEAP32[$24+4>>2]|0;HEAP32[$879+8>>2]=HEAP32[$24+8>>2]|0;
      ;HEAP32[$24+0>>2]=0|0;HEAP32[$24+4>>2]=0|0;HEAP32[$24+8>>2]=0|0;
      $881 = (($879) + 12|0);
      ;HEAP32[$881+0>>2]=HEAP32[$853+0>>2]|0;HEAP32[$881+4>>2]=HEAP32[$853+4>>2]|0;HEAP32[$881+8>>2]=HEAP32[$853+8>>2]|0;
      ;HEAP32[$853+0>>2]=0|0;HEAP32[$853+4>>2]=0|0;HEAP32[$853+8>>2]=0|0;
     }
     $882 = (($879) + 24|0);
     HEAP32[$878>>2] = $882;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($24);
    $883 = (($first) + 2|0);
    $$0 = $883;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 105:  {
    HEAP8[$25>>0] = 16;
    $884 = (($25) + 1|0);
    $885 = $884;
    $886 = $885;
    HEAP8[$886>>0]=1918986339&255;HEAP8[$886+1>>0]=(1918986339>>8)&255;HEAP8[$886+2>>0]=(1918986339>>16)&255;HEAP8[$886+3>>0]=1918986339>>24;
    $887 = (($885) + 4)|0;
    $888 = $887;
    HEAP8[$888>>0]=1952395827&255;HEAP8[$888+1>>0]=(1952395827>>8)&255;HEAP8[$888+2>>0]=(1952395827>>16)&255;HEAP8[$888+3>>0]=1952395827>>24;
    $889 = (($25) + 9|0);
    HEAP8[$889>>0] = 0;
    $890 = (($25) + 12|0);
    ;HEAP32[$890+0>>2]=0|0;HEAP32[$890+4>>2]=0|0;HEAP32[$890+8>>2]=0|0;
    $891 = (($db) + 4|0);
    $892 = HEAP32[$891>>2]|0;
    $893 = (($db) + 8|0);
    $894 = HEAP32[$893>>2]|0;
    $895 = ($892>>>0)<($894>>>0);
    if ($895) {
     $896 = ($892|0)==(0|0);
     if ($896) {
      $899 = 0;
     } else {
      ;HEAP32[$892+0>>2]=HEAP32[$25+0>>2]|0;HEAP32[$892+4>>2]=HEAP32[$25+4>>2]|0;HEAP32[$892+8>>2]=HEAP32[$25+8>>2]|0;
      ;HEAP32[$25+0>>2]=0|0;HEAP32[$25+4>>2]=0|0;HEAP32[$25+8>>2]=0|0;
      $897 = (($892) + 12|0);
      ;HEAP32[$897+0>>2]=HEAP32[$890+0>>2]|0;HEAP32[$897+4>>2]=HEAP32[$890+4>>2]|0;HEAP32[$897+8>>2]=HEAP32[$890+8>>2]|0;
      ;HEAP32[$890+0>>2]=0|0;HEAP32[$890+4>>2]=0|0;HEAP32[$890+8>>2]=0|0;
      $$pre$i214 = HEAP32[$891>>2]|0;
      $899 = $$pre$i214;
     }
     $898 = (($899) + 24|0);
     HEAP32[$891>>2] = $898;
    } else {
     $900 = (($db) + 12|0);
     $901 = HEAP32[$db>>2]|0;
     $902 = $892;
     $903 = $901;
     $904 = (($902) - ($903))|0;
     $905 = (($904|0) / 24)&-1;
     $906 = (($905) + 1)|0;
     $907 = ($906|0)<(0);
     if ($907) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $908 = $894;
     $909 = (($908) - ($903))|0;
     $910 = (($909|0) / 24)&-1;
     $911 = ($910>>>0)<(1073741823);
     if ($911) {
      $912 = $910 << 1;
      $913 = ($912>>>0)<($906>>>0);
      $914 = $913 ? $906 : $912;
      $$0$i$i$i216 = $914;
     } else {
      $$0$i$i$i216 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i216,$905,$900);
     $915 = (($__v$i$i239) + 8|0);
     $916 = HEAP32[$915>>2]|0;
     $917 = ($916|0)==(0|0);
     if (!($917)) {
      ;HEAP32[$916+0>>2]=HEAP32[$25+0>>2]|0;HEAP32[$916+4>>2]=HEAP32[$25+4>>2]|0;HEAP32[$916+8>>2]=HEAP32[$25+8>>2]|0;
      ;HEAP32[$25+0>>2]=0|0;HEAP32[$25+4>>2]=0|0;HEAP32[$25+8>>2]=0|0;
      $918 = (($916) + 12|0);
      ;HEAP32[$918+0>>2]=HEAP32[$890+0>>2]|0;HEAP32[$918+4>>2]=HEAP32[$890+4>>2]|0;HEAP32[$918+8>>2]=HEAP32[$890+8>>2]|0;
      ;HEAP32[$890+0>>2]=0|0;HEAP32[$890+4>>2]=0|0;HEAP32[$890+8>>2]=0|0;
     }
     $919 = (($916) + 24|0);
     HEAP32[$915>>2] = $919;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($25);
    $920 = (($first) + 2|0);
    $$0 = $920;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 110:  {
    $991 = (_malloc(16)|0);
    $992 = (($28) + 8|0);
    HEAP32[$992>>2] = $991;
    HEAP32[$28>>2] = 17;
    $993 = (($28) + 4|0);
    HEAP32[$993>>2] = 14;
    dest=$991+0|0; src=50864+0|0; stop=dest+14|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $994 = (($991) + 14|0);
    HEAP8[$994>>0] = 0;
    $995 = (($28) + 12|0);
    ;HEAP32[$995+0>>2]=0|0;HEAP32[$995+4>>2]=0|0;HEAP32[$995+8>>2]=0|0;
    $996 = (($db) + 4|0);
    $997 = HEAP32[$996>>2]|0;
    $998 = (($db) + 8|0);
    $999 = HEAP32[$998>>2]|0;
    $1000 = ($997>>>0)<($999>>>0);
    if ($1000) {
     $1001 = ($997|0)==(0|0);
     if ($1001) {
      $1004 = 0;
     } else {
      ;HEAP32[$997+0>>2]=HEAP32[$28+0>>2]|0;HEAP32[$997+4>>2]=HEAP32[$28+4>>2]|0;HEAP32[$997+8>>2]=HEAP32[$28+8>>2]|0;
      ;HEAP32[$28+0>>2]=0|0;HEAP32[$28+4>>2]=0|0;HEAP32[$28+8>>2]=0|0;
      $1002 = (($997) + 12|0);
      ;HEAP32[$1002+0>>2]=HEAP32[$995+0>>2]|0;HEAP32[$1002+4>>2]=HEAP32[$995+4>>2]|0;HEAP32[$1002+8>>2]=HEAP32[$995+8>>2]|0;
      ;HEAP32[$995+0>>2]=0|0;HEAP32[$995+4>>2]=0|0;HEAP32[$995+8>>2]=0|0;
      $$pre$i240 = HEAP32[$996>>2]|0;
      $1004 = $$pre$i240;
     }
     $1003 = (($1004) + 24|0);
     HEAP32[$996>>2] = $1003;
    } else {
     $1005 = (($db) + 12|0);
     $1006 = HEAP32[$db>>2]|0;
     $1007 = $997;
     $1008 = $1006;
     $1009 = (($1007) - ($1008))|0;
     $1010 = (($1009|0) / 24)&-1;
     $1011 = (($1010) + 1)|0;
     $1012 = ($1011|0)<(0);
     if ($1012) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1013 = $999;
     $1014 = (($1013) - ($1008))|0;
     $1015 = (($1014|0) / 24)&-1;
     $1016 = ($1015>>>0)<(1073741823);
     if ($1016) {
      $1017 = $1015 << 1;
      $1018 = ($1017>>>0)<($1011>>>0);
      $1019 = $1018 ? $1011 : $1017;
      $$0$i$i$i242 = $1019;
     } else {
      $$0$i$i$i242 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i242,$1010,$1005);
     $1020 = (($__v$i$i239) + 8|0);
     $1021 = HEAP32[$1020>>2]|0;
     $1022 = ($1021|0)==(0|0);
     if (!($1022)) {
      ;HEAP32[$1021+0>>2]=HEAP32[$28+0>>2]|0;HEAP32[$1021+4>>2]=HEAP32[$28+4>>2]|0;HEAP32[$1021+8>>2]=HEAP32[$28+8>>2]|0;
      ;HEAP32[$28+0>>2]=0|0;HEAP32[$28+4>>2]=0|0;HEAP32[$28+8>>2]=0|0;
      $1023 = (($1021) + 12|0);
      ;HEAP32[$1023+0>>2]=HEAP32[$995+0>>2]|0;HEAP32[$1023+4>>2]=HEAP32[$995+4>>2]|0;HEAP32[$1023+8>>2]=HEAP32[$995+8>>2]|0;
      ;HEAP32[$995+0>>2]=0|0;HEAP32[$995+4>>2]=0|0;HEAP32[$995+8>>2]=0|0;
     }
     $1024 = (($1021) + 24|0);
     HEAP32[$1020>>2] = $1024;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($28);
    $1025 = (($first) + 2|0);
    $$0 = $1025;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 101:  {
    HEAP8[$22>>0] = 20;
    $785 = (($22) + 1|0);
    dest=$785+0|0; src=50816+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $786 = (($22) + 11|0);
    HEAP8[$786>>0] = 0;
    $787 = (($22) + 12|0);
    ;HEAP32[$787+0>>2]=0|0;HEAP32[$787+4>>2]=0|0;HEAP32[$787+8>>2]=0|0;
    $788 = (($db) + 4|0);
    $789 = HEAP32[$788>>2]|0;
    $790 = (($db) + 8|0);
    $791 = HEAP32[$790>>2]|0;
    $792 = ($789>>>0)<($791>>>0);
    if ($792) {
     $793 = ($789|0)==(0|0);
     if ($793) {
      $796 = 0;
     } else {
      ;HEAP32[$789+0>>2]=HEAP32[$22+0>>2]|0;HEAP32[$789+4>>2]=HEAP32[$22+4>>2]|0;HEAP32[$789+8>>2]=HEAP32[$22+8>>2]|0;
      ;HEAP32[$22+0>>2]=0|0;HEAP32[$22+4>>2]=0|0;HEAP32[$22+8>>2]=0|0;
      $794 = (($789) + 12|0);
      ;HEAP32[$794+0>>2]=HEAP32[$787+0>>2]|0;HEAP32[$794+4>>2]=HEAP32[$787+4>>2]|0;HEAP32[$794+8>>2]=HEAP32[$787+8>>2]|0;
      ;HEAP32[$787+0>>2]=0|0;HEAP32[$787+4>>2]=0|0;HEAP32[$787+8>>2]=0|0;
      $$pre$i187 = HEAP32[$788>>2]|0;
      $796 = $$pre$i187;
     }
     $795 = (($796) + 24|0);
     HEAP32[$788>>2] = $795;
    } else {
     $797 = (($db) + 12|0);
     $798 = HEAP32[$db>>2]|0;
     $799 = $789;
     $800 = $798;
     $801 = (($799) - ($800))|0;
     $802 = (($801|0) / 24)&-1;
     $803 = (($802) + 1)|0;
     $804 = ($803|0)<(0);
     if ($804) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $805 = $791;
     $806 = (($805) - ($800))|0;
     $807 = (($806|0) / 24)&-1;
     $808 = ($807>>>0)<(1073741823);
     if ($808) {
      $809 = $807 << 1;
      $810 = ($809>>>0)<($803>>>0);
      $811 = $810 ? $803 : $809;
      $$0$i$i$i189 = $811;
     } else {
      $$0$i$i$i189 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i189,$802,$797);
     $812 = (($__v$i$i239) + 8|0);
     $813 = HEAP32[$812>>2]|0;
     $814 = ($813|0)==(0|0);
     if (!($814)) {
      ;HEAP32[$813+0>>2]=HEAP32[$22+0>>2]|0;HEAP32[$813+4>>2]=HEAP32[$22+4>>2]|0;HEAP32[$813+8>>2]=HEAP32[$22+8>>2]|0;
      ;HEAP32[$22+0>>2]=0|0;HEAP32[$22+4>>2]=0|0;HEAP32[$22+8>>2]=0|0;
      $815 = (($813) + 12|0);
      ;HEAP32[$815+0>>2]=HEAP32[$787+0>>2]|0;HEAP32[$815+4>>2]=HEAP32[$787+4>>2]|0;HEAP32[$815+8>>2]=HEAP32[$787+8>>2]|0;
      ;HEAP32[$787+0>>2]=0|0;HEAP32[$787+4>>2]=0|0;HEAP32[$787+8>>2]=0|0;
     }
     $816 = (($813) + 24|0);
     HEAP32[$812>>2] = $816;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($22);
    $817 = (($first) + 2|0);
    $$0 = $817;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 97:  {
    HEAP8[$27>>0] = 8;
    $958 = (($27) + 1|0);
    HEAP8[$958>>0]=1869903201&255;HEAP8[$958+1>>0]=(1869903201>>8)&255;HEAP8[$958+2>>0]=(1869903201>>16)&255;HEAP8[$958+3>>0]=1869903201>>24;
    $959 = (($27) + 5|0);
    HEAP8[$959>>0] = 0;
    $960 = (($27) + 12|0);
    ;HEAP32[$960+0>>2]=0|0;HEAP32[$960+4>>2]=0|0;HEAP32[$960+8>>2]=0|0;
    $961 = (($db) + 4|0);
    $962 = HEAP32[$961>>2]|0;
    $963 = (($db) + 8|0);
    $964 = HEAP32[$963>>2]|0;
    $965 = ($962>>>0)<($964>>>0);
    if ($965) {
     $966 = ($962|0)==(0|0);
     if ($966) {
      $969 = 0;
     } else {
      ;HEAP32[$962+0>>2]=HEAP32[$27+0>>2]|0;HEAP32[$962+4>>2]=HEAP32[$27+4>>2]|0;HEAP32[$962+8>>2]=HEAP32[$27+8>>2]|0;
      ;HEAP32[$27+0>>2]=0|0;HEAP32[$27+4>>2]=0|0;HEAP32[$27+8>>2]=0|0;
      $967 = (($962) + 12|0);
      ;HEAP32[$967+0>>2]=HEAP32[$960+0>>2]|0;HEAP32[$967+4>>2]=HEAP32[$960+4>>2]|0;HEAP32[$967+8>>2]=HEAP32[$960+8>>2]|0;
      ;HEAP32[$960+0>>2]=0|0;HEAP32[$960+4>>2]=0|0;HEAP32[$960+8>>2]=0|0;
      $$pre$i232 = HEAP32[$961>>2]|0;
      $969 = $$pre$i232;
     }
     $968 = (($969) + 24|0);
     HEAP32[$961>>2] = $968;
    } else {
     $970 = (($db) + 12|0);
     $971 = HEAP32[$db>>2]|0;
     $972 = $962;
     $973 = $971;
     $974 = (($972) - ($973))|0;
     $975 = (($974|0) / 24)&-1;
     $976 = (($975) + 1)|0;
     $977 = ($976|0)<(0);
     if ($977) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $978 = $964;
     $979 = (($978) - ($973))|0;
     $980 = (($979|0) / 24)&-1;
     $981 = ($980>>>0)<(1073741823);
     if ($981) {
      $982 = $980 << 1;
      $983 = ($982>>>0)<($976>>>0);
      $984 = $983 ? $976 : $982;
      $$0$i$i$i234 = $984;
     } else {
      $$0$i$i$i234 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i234,$975,$970);
     $985 = (($__v$i$i239) + 8|0);
     $986 = HEAP32[$985>>2]|0;
     $987 = ($986|0)==(0|0);
     if (!($987)) {
      ;HEAP32[$986+0>>2]=HEAP32[$27+0>>2]|0;HEAP32[$986+4>>2]=HEAP32[$27+4>>2]|0;HEAP32[$986+8>>2]=HEAP32[$27+8>>2]|0;
      ;HEAP32[$27+0>>2]=0|0;HEAP32[$27+4>>2]=0|0;HEAP32[$27+8>>2]=0|0;
      $988 = (($986) + 12|0);
      ;HEAP32[$988+0>>2]=HEAP32[$960+0>>2]|0;HEAP32[$988+4>>2]=HEAP32[$960+4>>2]|0;HEAP32[$988+8>>2]=HEAP32[$960+8>>2]|0;
      ;HEAP32[$960+0>>2]=0|0;HEAP32[$960+4>>2]=0|0;HEAP32[$960+8>>2]=0|0;
     }
     $989 = (($986) + 24|0);
     HEAP32[$985>>2] = $989;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27);
    $990 = (($first) + 2|0);
    $$0 = $990;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 100:  {
    HEAP8[$21>>0] = 18;
    $752 = (($21) + 1|0);
    dest=$752+0|0; src=50800+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $753 = (($21) + 10|0);
    HEAP8[$753>>0] = 0;
    $754 = (($21) + 12|0);
    ;HEAP32[$754+0>>2]=0|0;HEAP32[$754+4>>2]=0|0;HEAP32[$754+8>>2]=0|0;
    $755 = (($db) + 4|0);
    $756 = HEAP32[$755>>2]|0;
    $757 = (($db) + 8|0);
    $758 = HEAP32[$757>>2]|0;
    $759 = ($756>>>0)<($758>>>0);
    if ($759) {
     $760 = ($756|0)==(0|0);
     if ($760) {
      $763 = 0;
     } else {
      ;HEAP32[$756+0>>2]=HEAP32[$21+0>>2]|0;HEAP32[$756+4>>2]=HEAP32[$21+4>>2]|0;HEAP32[$756+8>>2]=HEAP32[$21+8>>2]|0;
      ;HEAP32[$21+0>>2]=0|0;HEAP32[$21+4>>2]=0|0;HEAP32[$21+8>>2]=0|0;
      $761 = (($756) + 12|0);
      ;HEAP32[$761+0>>2]=HEAP32[$754+0>>2]|0;HEAP32[$761+4>>2]=HEAP32[$754+4>>2]|0;HEAP32[$761+8>>2]=HEAP32[$754+8>>2]|0;
      ;HEAP32[$754+0>>2]=0|0;HEAP32[$754+4>>2]=0|0;HEAP32[$754+8>>2]=0|0;
      $$pre$i178 = HEAP32[$755>>2]|0;
      $763 = $$pre$i178;
     }
     $762 = (($763) + 24|0);
     HEAP32[$755>>2] = $762;
    } else {
     $764 = (($db) + 12|0);
     $765 = HEAP32[$db>>2]|0;
     $766 = $756;
     $767 = $765;
     $768 = (($766) - ($767))|0;
     $769 = (($768|0) / 24)&-1;
     $770 = (($769) + 1)|0;
     $771 = ($770|0)<(0);
     if ($771) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $772 = $758;
     $773 = (($772) - ($767))|0;
     $774 = (($773|0) / 24)&-1;
     $775 = ($774>>>0)<(1073741823);
     if ($775) {
      $776 = $774 << 1;
      $777 = ($776>>>0)<($770>>>0);
      $778 = $777 ? $770 : $776;
      $$0$i$i$i180 = $778;
     } else {
      $$0$i$i$i180 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i180,$769,$764);
     $779 = (($__v$i$i239) + 8|0);
     $780 = HEAP32[$779>>2]|0;
     $781 = ($780|0)==(0|0);
     if (!($781)) {
      ;HEAP32[$780+0>>2]=HEAP32[$21+0>>2]|0;HEAP32[$780+4>>2]=HEAP32[$21+4>>2]|0;HEAP32[$780+8>>2]=HEAP32[$21+8>>2]|0;
      ;HEAP32[$21+0>>2]=0|0;HEAP32[$21+4>>2]=0|0;HEAP32[$21+8>>2]=0|0;
      $782 = (($780) + 12|0);
      ;HEAP32[$782+0>>2]=HEAP32[$754+0>>2]|0;HEAP32[$782+4>>2]=HEAP32[$754+4>>2]|0;HEAP32[$782+8>>2]=HEAP32[$754+8>>2]|0;
      ;HEAP32[$754+0>>2]=0|0;HEAP32[$754+4>>2]=0|0;HEAP32[$754+8>>2]=0|0;
     }
     $783 = (($780) + 24|0);
     HEAP32[$779>>2] = $783;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($21);
    $784 = (($first) + 2|0);
    $$0 = $784;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 115:  {
    HEAP8[$26>>0] = 16;
    $921 = (($26) + 1|0);
    $922 = $921;
    $923 = $922;
    HEAP8[$923>>0]=1918986339&255;HEAP8[$923+1>>0]=(1918986339>>8)&255;HEAP8[$923+2>>0]=(1918986339>>16)&255;HEAP8[$923+3>>0]=1918986339>>24;
    $924 = (($922) + 4)|0;
    $925 = $924;
    HEAP8[$925>>0]=1952396849&255;HEAP8[$925+1>>0]=(1952396849>>8)&255;HEAP8[$925+2>>0]=(1952396849>>16)&255;HEAP8[$925+3>>0]=1952396849>>24;
    $926 = (($26) + 9|0);
    HEAP8[$926>>0] = 0;
    $927 = (($26) + 12|0);
    ;HEAP32[$927+0>>2]=0|0;HEAP32[$927+4>>2]=0|0;HEAP32[$927+8>>2]=0|0;
    $928 = (($db) + 4|0);
    $929 = HEAP32[$928>>2]|0;
    $930 = (($db) + 8|0);
    $931 = HEAP32[$930>>2]|0;
    $932 = ($929>>>0)<($931>>>0);
    if ($932) {
     $933 = ($929|0)==(0|0);
     if ($933) {
      $936 = 0;
     } else {
      ;HEAP32[$929+0>>2]=HEAP32[$26+0>>2]|0;HEAP32[$929+4>>2]=HEAP32[$26+4>>2]|0;HEAP32[$929+8>>2]=HEAP32[$26+8>>2]|0;
      ;HEAP32[$26+0>>2]=0|0;HEAP32[$26+4>>2]=0|0;HEAP32[$26+8>>2]=0|0;
      $934 = (($929) + 12|0);
      ;HEAP32[$934+0>>2]=HEAP32[$927+0>>2]|0;HEAP32[$934+4>>2]=HEAP32[$927+4>>2]|0;HEAP32[$934+8>>2]=HEAP32[$927+8>>2]|0;
      ;HEAP32[$927+0>>2]=0|0;HEAP32[$927+4>>2]=0|0;HEAP32[$927+8>>2]=0|0;
      $$pre$i223 = HEAP32[$928>>2]|0;
      $936 = $$pre$i223;
     }
     $935 = (($936) + 24|0);
     HEAP32[$928>>2] = $935;
    } else {
     $937 = (($db) + 12|0);
     $938 = HEAP32[$db>>2]|0;
     $939 = $929;
     $940 = $938;
     $941 = (($939) - ($940))|0;
     $942 = (($941|0) / 24)&-1;
     $943 = (($942) + 1)|0;
     $944 = ($943|0)<(0);
     if ($944) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $945 = $931;
     $946 = (($945) - ($940))|0;
     $947 = (($946|0) / 24)&-1;
     $948 = ($947>>>0)<(1073741823);
     if ($948) {
      $949 = $947 << 1;
      $950 = ($949>>>0)<($943>>>0);
      $951 = $950 ? $943 : $949;
      $$0$i$i$i225 = $951;
     } else {
      $$0$i$i$i225 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i239,$$0$i$i$i225,$942,$937);
     $952 = (($__v$i$i239) + 8|0);
     $953 = HEAP32[$952>>2]|0;
     $954 = ($953|0)==(0|0);
     if (!($954)) {
      ;HEAP32[$953+0>>2]=HEAP32[$26+0>>2]|0;HEAP32[$953+4>>2]=HEAP32[$26+4>>2]|0;HEAP32[$953+8>>2]=HEAP32[$26+8>>2]|0;
      ;HEAP32[$26+0>>2]=0|0;HEAP32[$26+4>>2]=0|0;HEAP32[$26+8>>2]=0|0;
      $955 = (($953) + 12|0);
      ;HEAP32[$955+0>>2]=HEAP32[$927+0>>2]|0;HEAP32[$955+4>>2]=HEAP32[$927+4>>2]|0;HEAP32[$955+8>>2]=HEAP32[$927+8>>2]|0;
      ;HEAP32[$927+0>>2]=0|0;HEAP32[$927+4>>2]=0|0;HEAP32[$927+8>>2]=0|0;
     }
     $956 = (($953) + 24|0);
     HEAP32[$952>>2] = $956;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i239);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i239);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26);
    $957 = (($first) + 2|0);
    $$0 = $957;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  default: {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  }
 } while(0);
 return (0)|0;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($this,$__s,$__sz) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__sz>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $1 = ($__sz>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__sz) + 16)|0;
  $6 = $5 & -16;
  $7 = (_malloc($6)|0);
  $8 = (($this) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = (($this) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($this) {
 $this = $this|0;
 var $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $7 = $0&255;
  $8 = $7 >>> 1;
  $9 = (($this) + 1|0);
  $10 = $8;$14 = $9;
 } else {
  $3 = (($this) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $10 = $4;$14 = $6;
 }
 $not$ = ($10|0)!=(0);
 $11 = $not$&1;
 $12 = ($10|0)==($11|0);
 $$pre1 = (($10) - ($11))|0;
 if ($12) {
  $16 = $0;
 } else {
  $13 = (($14) + ($11)|0);
  _memmove(($14|0),($13|0),($$pre1|0))|0;
  $$pre = HEAP8[$this>>0]|0;
  $16 = $$pre;
 }
 $15 = $16 & 1;
 $17 = ($15<<24>>24)==(0);
 if ($17) {
  $19 = $$pre1 << 1;
  $20 = $19&255;
  HEAP8[$this>>0] = $20;
  $21 = (($14) + ($$pre1)|0);
  HEAP8[$21>>0] = 0;
  STACKTOP = sp;return;
 } else {
  $18 = (($this) + 4|0);
  HEAP32[$18>>2] = $$pre1;
  $21 = (($14) + ($$pre1)|0);
  HEAP8[$21>>0] = 0;
  STACKTOP = sp;return;
 }
}
function __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i211 = 0, $$0$i$i$i$i254 = 0, $$019$i = 0, $$03$i180 = 0, $$2$i215 = 0, $$221$i = 0, $$first = 0, $$first$i = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i$i$i274 = 0, $$pre$i$i$i$i320 = 0, $$pre$i$i$i$i341 = 0;
 var $$pre$i$i$i77 = 0, $$pre$i$i208 = 0, $$pre$i$i253 = 0, $$pre$i125 = 0, $$pre$phiZ2D = 0, $$pre408 = 0, $$pre411 = 0, $$pre430 = 0, $$pre431 = 0, $$pre432 = 0, $$pre433 = 0, $$pre434 = 0, $$pre435 = 0, $$pre436 = 0, $$pre437 = 0, $$pre438 = 0, $$pre439 = 0, $$pre440 = 0, $$pre441 = 0, $$pre442 = 0;
 var $$pre443 = 0, $$pre444 = 0, $$pre445 = 0, $$pre446 = 0, $$pre447 = 0, $$pre448 = 0, $$pre449 = 0, $$pre450 = 0, $$pre451 = 0, $$pre452 = 0, $$sroa$4 = 0, $$sroa$4364 = 0, $$sroa$4367 = 0, $$sroa$4370 = 0, $$sroa$4373 = 0, $$sroa$4376 = 0, $$sroa$5 = 0, $$sroa$5383 = 0, $$sroa$5386 = 0, $$sroa$5389 = 0;
 var $$sroa$5392 = 0, $$sroa$5395 = 0, $$sroa$5398 = 0, $$sroa$5407 = 0, $$sroa$5410 = 0, $$sroa$5413 = 0, $$sroa$5416 = 0, $$sroa$5419 = 0, $$sroa$5422 = 0, $$sroa$6 = 0, $$sroa$6404 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0;
 var $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0;
 var $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0;
 var $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0;
 var $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0;
 var $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0;
 var $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0;
 var $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0;
 var $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0;
 var $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0;
 var $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0;
 var $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0;
 var $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0;
 var $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0;
 var $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0;
 var $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0;
 var $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0;
 var $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0;
 var $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0;
 var $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0;
 var $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0;
 var $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0;
 var $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0;
 var $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0;
 var $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0;
 var $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0;
 var $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0;
 var $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0;
 var $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0;
 var $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0;
 var $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0;
 var $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0;
 var $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0;
 var $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0;
 var $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0;
 var $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0;
 var $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0, $1653 = 0;
 var $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0;
 var $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0;
 var $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0;
 var $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1725 = 0;
 var $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0, $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0, $1743 = 0;
 var $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0, $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0;
 var $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0;
 var $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0;
 var $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0, $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0;
 var $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0;
 var $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1851 = 0;
 var $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0;
 var $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0;
 var $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0, $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0, $1905 = 0;
 var $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0;
 var $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0, $1941 = 0;
 var $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0;
 var $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0;
 var $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0, $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0, $1996 = 0;
 var $1997 = 0, $1998 = 0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0, $2005 = 0, $2006 = 0, $2007 = 0, $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0, $2012 = 0;
 var $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2024 = 0, $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0, $2030 = 0;
 var $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0, $2041 = 0, $2042 = 0, $2043 = 0, $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0, $2049 = 0;
 var $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0;
 var $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0, $208 = 0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0;
 var $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0, $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0;
 var $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0;
 var $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0;
 var $214 = 0, $2140 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0;
 var $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0;
 var $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0;
 var $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0;
 var $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0;
 var $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0;
 var $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0;
 var $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0;
 var $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0;
 var $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0;
 var $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0;
 var $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0;
 var $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0;
 var $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $expr$i = 0, $expr$i152 = 0, $expr$i225 = 0, $expr$i233 = 0, $expr$i299 = 0, $expr_list$i = 0, $first$ = 0, $first$$i = 0;
 var $first$33 = 0, $first$34 = 0, $first$35 = 0, $first$36 = 0, $first$37 = 0, $first$38 = 0, $first$39 = 0, $first$40 = 0, $first$41 = 0, $first$42 = 0, $first$43 = 0, $first$44 = 0, $first$45 = 0, $first$46 = 0, $first$47 = 0, $first$48 = 0, $first$49 = 0, $first$50 = 0, $first$51 = 0, $first$52 = 0;
 var $first$53 = 0, $first$54 = 0, $first$55 = 0, $first$56 = 0, $first$57 = 0, $first$58 = 0, $first$59 = 0, $first$60 = 0, $first$61 = 0, $first$62 = 0, $first$63 = 0, $first$64 = 0, $first$65 = 0, $first$66 = 0, $first$67 = 0, $first$68 = 0, $first$69 = 0, $first$70 = 0, $first$71 = 0, $has_expr_list$0$off0$i = 0;
 var $has_init$0$off0$i414417 = 0, $init_list$i = 0, $k$0$i = 0, $k$08$i = 0, $k$09$i = 0, $k1$06$i = 0, $name$i = 0, $op1 = 0, $op18 = 0, $op2 = 0, $op27 = 0, $op3 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i$i$i$i = 0, $or$cond$i$i$i$i$i$i = 0, $or$cond$i$i$i$i$i$i281 = 0, $or$cond$i$i$i$i$i$i327 = 0, $or$cond$i$i$i$i$i$i348 = 0, $or$cond$i$i$i$i$i84 = 0;
 var $or$cond$i252 = 0, $or$cond$i291 = 0, $or$cond13$i = 0, $or$cond22$i = 0, $or$cond23$i = 0, $or$cond5$i = 0, $parsed_gs$0$off0 = 0, $parsed_gs$0$off0$i = 0, $phitmp = 0, $phitmp$i$i$i$i$i$i = 0, $phitmp$i$i$i$i$i$i$i = 0, $phitmp$i$i$i$i$i$i$i276 = 0, $phitmp$i$i$i$i$i$i$i322 = 0, $phitmp$i$i$i$i$i$i$i343 = 0, $phitmp$i$i$i$i$i$i79 = 0, $phitmp$i2$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i$i279 = 0, $phitmp$i2$i$i$i$i$i$i325 = 0, $phitmp$i2$i$i$i$i$i$i346 = 0;
 var $phitmp$i2$i$i$i$i$i82 = 0, $phitmp453 = 0, $phitmp454 = 0, $phitmp455 = 0, $phitmp456 = 0, $phitmp457 = 0, $phitmp458 = 0, $phitmp459 = 0, $phitmp460 = 0, $phitmp461 = 0, $phitmp462 = 0, $phitmp463 = 0, $phitmp464 = 0, $phitmp465 = 0, $phitmp466 = 0, $phitmp467 = 0, $phitmp468 = 0, $phitmp469 = 0, $phitmp470 = 0, $phitmp471 = 0;
 var $phitmp472 = 0, $phitmp473 = 0, $phitmp474 = 0, $phitmp475 = 0, $phitmp476 = 0, $phitmp477 = 0, $phitmp478 = 0, $phitmp479 = 0, $phitmp480 = 0, $phitmp481 = 0, $phitmp482 = 0, $phitmp483 = 0, $phitmp484 = 0, $phitmp485 = 0, $phitmp486 = 0, $phitmp487 = 0, $phitmp488 = 0, $phitmp489 = 0, $phitmp490 = 0, $phitmp491 = 0;
 var $r$i = 0, $scevgep = 0, $t$0 = 0, $t$0$i = 0, $t$0$i182 = 0, $t$0$i256 = 0, $t$0$i289$lcssa = 0, $t$0$i289363 = 0, $t$1$i = 0, $t$1$i257 = 0, $t$2$i = 0, $t$2$i258 = 0, $t$3$i413419 = 0, $tmp$i = 0, $tmp$i170 = 0, $tmp$i270 = 0, $tmp2$i = 0, $type$i = 0, dest = 0, label = 0;
 var sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2048|0;
 $$sroa$5422 = sp + 1116|0;
 $0 = sp + 1800|0;
 $1 = sp + 1716|0;
 $$sroa$5419 = sp + 1956|0;
 $2 = sp + 48|0;
 $3 = sp;
 $expr$i299 = sp + 884|0;
 $4 = sp + 920|0;
 $$sroa$5416 = sp + 2005|0;
 $5 = sp + 136|0;
 $6 = sp + 148|0;
 $7 = sp + 160|0;
 $8 = sp + 172|0;
 $$sroa$5413 = sp + 1907|0;
 $tmp$i270 = sp + 196|0;
 $tmp2$i = sp + 208|0;
 $9 = sp + 224|0;
 $$sroa$5410 = sp + 1991|0;
 $10 = sp + 260|0;
 $11 = sp + 272|0;
 $12 = sp + 284|0;
 $13 = sp + 296|0;
 $expr$i233 = sp + 308|0;
 $14 = sp + 320|0;
 $$sroa$5407 = sp + 1935|0;
 $15 = sp + 356|0;
 $16 = sp + 368|0;
 $17 = sp + 380|0;
 $18 = sp + 392|0;
 $expr$i225 = sp + 404|0;
 $19 = sp + 416|0;
 $name$i = sp + 428|0;
 $20 = sp + 440|0;
 $init_list$i = sp + 452|0;
 $21 = sp + 464|0;
 $type$i = sp + 476|0;
 $expr_list$i = sp + 488|0;
 $22 = sp + 500|0;
 $r$i = sp + 512|0;
 $23 = sp + 524|0;
 $24 = sp + 536|0;
 $25 = sp + 548|0;
 $26 = sp + 560|0;
 $27 = sp + 576|0;
 $$sroa$6404 = sp + 1963|0;
 $tmp$i170 = sp + 612|0;
 $expr$i152 = sp + 624|0;
 $28 = sp + 640|0;
 $$sroa$5398 = sp + 1928|0;
 $29 = sp + 676|0;
 $30 = sp + 688|0;
 $31 = sp + 700|0;
 $32 = sp + 712|0;
 $expr$i = sp + 724|0;
 $33 = sp + 736|0;
 $$sroa$5395 = sp + 1900|0;
 $34 = sp + 772|0;
 $35 = sp + 784|0;
 $36 = sp + 796|0;
 $37 = sp + 808|0;
 $38 = sp + 824|0;
 $$sroa$5392 = sp + 1949|0;
 $39 = sp + 1704|0;
 $40 = sp + 1728|0;
 $41 = sp + 1752|0;
 $$sroa$5389 = sp + 2033|0;
 $42 = sp + 1812|0;
 $43 = sp + 1836|0;
 $44 = sp + 1864|0;
 $$sroa$5386 = sp + 2012|0;
 $45 = sp + 984|0;
 $46 = sp + 996|0;
 $47 = sp + 1008|0;
 $$sroa$5383 = sp + 1998|0;
 $48 = sp + 1044|0;
 $49 = sp + 1056|0;
 $$sroa$5 = sp + 1984|0;
 $50 = sp + 1092|0;
 $51 = sp + 1104|0;
 $tmp$i = sp + 1888|0;
 $52 = sp + 1136|0;
 $53 = sp + 1148|0;
 $54 = sp + 1160|0;
 $55 = sp + 1176|0;
 $$sroa$6 = sp + 1970|0;
 $56 = sp + 1212|0;
 $57 = sp + 1224|0;
 $58 = sp + 1236|0;
 $59 = sp + 1248|0;
 $60 = sp + 1260|0;
 $61 = sp + 1272|0;
 $62 = sp + 1284|0;
 $$sroa$4376 = sp + 1942|0;
 $63 = sp + 1308|0;
 $64 = sp + 1320|0;
 $65 = sp + 1332|0;
 $66 = sp + 1344|0;
 $$sroa$4373 = sp + 2019|0;
 $67 = sp + 1368|0;
 $68 = sp + 1380|0;
 $69 = sp + 1392|0;
 $70 = sp + 1404|0;
 $71 = sp + 1416|0;
 $72 = sp + 1428|0;
 $73 = sp + 1440|0;
 $74 = sp + 1452|0;
 $75 = sp + 1464|0;
 $76 = sp + 1476|0;
 $op2 = sp + 1488|0;
 $op1 = sp + 1500|0;
 $77 = sp + 1512|0;
 $$sroa$4370 = sp + 1977|0;
 $78 = sp + 1548|0;
 $79 = sp + 1560|0;
 $80 = sp + 1572|0;
 $81 = sp + 1584|0;
 $82 = sp + 1596|0;
 $83 = sp + 1608|0;
 $84 = sp + 1620|0;
 $85 = sp + 1632|0;
 $86 = sp + 1644|0;
 $87 = sp + 1656|0;
 $88 = sp + 1668|0;
 $89 = sp + 1680|0;
 $90 = sp + 112|0;
 $$sroa$4367 = sp + 1921|0;
 $91 = sp + 60|0;
 $92 = sp + 12|0;
 $93 = sp + 96|0;
 $94 = sp + 1692|0;
 $95 = sp + 860|0;
 $96 = sp + 872|0;
 $97 = sp + 1740|0;
 $98 = sp + 896|0;
 $99 = sp + 1776|0;
 $100 = sp + 908|0;
 $101 = sp + 1824|0;
 $102 = sp + 1848|0;
 $103 = sp + 24|0;
 $$sroa$4364 = sp + 1914|0;
 $104 = sp + 1536|0;
 $105 = sp + 1356|0;
 $106 = sp + 1296|0;
 $op3 = sp + 1200|0;
 $op27 = sp + 1080|0;
 $op18 = sp + 1032|0;
 $107 = sp + 960|0;
 $$sroa$4 = sp + 2026|0;
 $108 = sp + 1788|0;
 $109 = sp + 848|0;
 $110 = sp + 760|0;
 $111 = sp + 664|0;
 $112 = sp + 600|0;
 $113 = sp + 344|0;
 $114 = sp + 248|0;
 $115 = sp + 184|0;
 $116 = sp + 944|0;
 $117 = sp + 72|0;
 $118 = $last;
 $119 = $first;
 $120 = (($118) - ($119))|0;
 $121 = ($120|0)>(1);
 if (!($121)) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $122 = ($120|0)>(3);
 if ($122) {
  $123 = HEAP8[$first>>0]|0;
  $124 = ($123<<24>>24)==(103);
  if ($124) {
   $125 = (($first) + 1|0);
   $126 = HEAP8[$125>>0]|0;
   $127 = ($126<<24>>24)==(115);
   $128 = (($first) + 2|0);
   $$first = $127 ? $128 : $first;
   $parsed_gs$0$off0 = $127;$t$0 = $$first;
  } else {
   $parsed_gs$0$off0 = 0;$t$0 = $first;
  }
 } else {
  $parsed_gs$0$off0 = 0;$t$0 = $first;
 }
 $129 = HEAP8[$t$0>>0]|0;
 $130 = $129 << 24 >> 24;
 do {
  switch ($130|0) {
  case 97:  {
   $134 = (($t$0) + 1|0);
   $135 = HEAP8[$134>>0]|0;
   $136 = $135 << 24 >> 24;
   switch ($136|0) {
   case 97:  {
    $137 = (($first) + 2|0);
    HEAP8[$56>>0] = 4;
    $138 = (($56) + 1|0);
    HEAP8[$138>>0]=9766&255;HEAP8[$138+1>>0]=9766>>8;
    $139 = (($56) + 3|0);
    HEAP8[$139>>0] = 0;
    $140 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($137,$last,$56,$db)|0);
    $141 = ($140|0)==($137|0);
    $first$ = $141 ? $first : $140;
    $$0 = $first$;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 116:  {
    $162 = ($120|0)>(2);
    if (!($162)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $163 = HEAP8[$first>>0]|0;
    $164 = ($163<<24>>24)==(97);
    if (!($164)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $165 = (($first) + 1|0);
    $166 = HEAP8[$165>>0]|0;
    $167 = ($166<<24>>24)==(116);
    if (!($167)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $168 = (($first) + 2|0);
    $169 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($168,$last,$db)|0);
    $170 = ($169|0)==($168|0);
    if ($170) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $171 = HEAP32[$db>>2]|0;
    $172 = (($db) + 4|0);
    $173 = HEAP32[$172>>2]|0;
    $174 = ($171|0)==($173|0);
    if ($174) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $175 = (($173) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($1,$175);
    $176 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($1,0,50312,9)|0);
    ;HEAP32[$0+0>>2]=HEAP32[$176+0>>2]|0;HEAP32[$0+4>>2]=HEAP32[$176+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$176+8>>2]|0;
    ;HEAP32[$176+0>>2]=0|0;HEAP32[$176+4>>2]=0|0;HEAP32[$176+8>>2]=0|0;
    $177 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($0,48736,1)|0);
    $178 = HEAP8[$177>>0]|0;
    $179 = (($177) + 1|0);
    ;HEAP8[$$sroa$5422+0>>0]=HEAP8[$179+0>>0]|0;HEAP8[$$sroa$5422+1>>0]=HEAP8[$179+1>>0]|0;HEAP8[$$sroa$5422+2>>0]=HEAP8[$179+2>>0]|0;HEAP8[$$sroa$5422+3>>0]=HEAP8[$179+3>>0]|0;HEAP8[$$sroa$5422+4>>0]=HEAP8[$179+4>>0]|0;HEAP8[$$sroa$5422+5>>0]=HEAP8[$179+5>>0]|0;HEAP8[$$sroa$5422+6>>0]=HEAP8[$179+6>>0]|0;
    $180 = (($177) + 8|0);
    $181 = HEAP32[$180>>2]|0;
    ;HEAP32[$177+0>>2]=0|0;HEAP32[$177+4>>2]=0|0;HEAP32[$177+8>>2]=0|0;
    $182 = HEAP8[$175>>0]|0;
    $183 = $182 & 1;
    $184 = ($183<<24>>24)==(0);
    do {
     if ($184) {
      $185 = (($175) + 1|0);
      HEAP8[$185>>0] = 0;
      HEAP8[$175>>0] = 0;
     } else {
      $186 = (($173) + -16|0);
      $187 = HEAP32[$186>>2]|0;
      HEAP8[$187>>0] = 0;
      $188 = (($173) + -20|0);
      HEAP32[$188>>2] = 0;
      $$pre$i$i$i$i341 = HEAP8[$175>>0]|0;
      $189 = $$pre$i$i$i$i341 & 1;
      $190 = ($189<<24>>24)==(0);
      if ($190) {
       $195 = $$pre$i$i$i$i341;$204 = 10;
      } else {
       $191 = HEAP32[$175>>2]|0;
       $192 = $191 & -2;
       $phitmp$i$i$i$i$i$i$i343 = (($192) + -1)|0;
       $193 = $191&255;
       $195 = $193;$204 = $phitmp$i$i$i$i$i$i$i343;
      }
      $194 = $195 & 1;
      $196 = ($194<<24>>24)==(0);
      if ($196) {
       $197 = $195&255;
       $198 = $197 >>> 1;
       $199 = ($195&255)<(22);
       if ($199) {
        $203 = 10;$2135 = 1;$223 = $198;
       } else {
        $200 = (($198) + 16)|0;
        $201 = $200 & 240;
        $phitmp$i2$i$i$i$i$i$i346 = (($201) + -1)|0;
        $203 = $phitmp$i2$i$i$i$i$i$i346;$2135 = 1;$223 = $198;
       }
      } else {
       $203 = 10;$2135 = 0;$223 = 0;
      }
      $202 = ($203|0)==($204|0);
      if (!($202)) {
       $205 = ($203|0)==(10);
       if ($205) {
        $210 = (($175) + 1|0);
        $211 = HEAP32[$186>>2]|0;
        if ($2135) {
         $212 = $195&255;
         $213 = $212 >>> 1;
         $214 = (($213) + 1)|0;
         _memcpy(($210|0),($211|0),($214|0))|0;
         _free($211);
        } else {
         $219 = HEAP8[$211>>0]|0;
         HEAP8[$210>>0] = $219;
         _free($211);
        }
        $224 = $223 << 1;
        $225 = $224&255;
        HEAP8[$175>>0] = $225;
        break;
       }
       $206 = ($203>>>0)<=($204>>>0);
       $207 = (($203) + 1)|0;
       $208 = (_malloc($207)|0);
       $209 = ($208|0)==(0|0);
       $or$cond$i$i$i$i$i$i348 = $206 & $209;
       if (!($or$cond$i$i$i$i$i$i348)) {
        if ($2135) {
         $215 = (($175) + 1|0);
         $216 = $195&255;
         $217 = $216 >>> 1;
         $218 = (($217) + 1)|0;
         _memcpy(($208|0),($215|0),($218|0))|0;
        } else {
         $220 = HEAP32[$186>>2]|0;
         $221 = HEAP8[$220>>0]|0;
         HEAP8[$208>>0] = $221;
         _free($220);
        }
        $222 = $207 | 1;
        HEAP32[$175>>2] = $222;
        HEAP32[$188>>2] = $223;
        HEAP32[$186>>2] = $208;
       }
      }
     }
    } while(0);
    HEAP8[$175>>0] = $178;
    $226 = (($173) + -23|0);
    ;HEAP8[$226+0>>0]=HEAP8[$$sroa$5422+0>>0]|0;HEAP8[$226+1>>0]=HEAP8[$$sroa$5422+1>>0]|0;HEAP8[$226+2>>0]=HEAP8[$$sroa$5422+2>>0]|0;HEAP8[$226+3>>0]=HEAP8[$$sroa$5422+3>>0]|0;HEAP8[$226+4>>0]=HEAP8[$$sroa$5422+4>>0]|0;HEAP8[$226+5>>0]=HEAP8[$$sroa$5422+5>>0]|0;HEAP8[$226+6>>0]=HEAP8[$$sroa$5422+6>>0]|0;
    $227 = (($173) + -16|0);
    HEAP32[$227>>2] = $181;
    ;HEAP8[$$sroa$5422+0>>0]=0|0;HEAP8[$$sroa$5422+1>>0]=0|0;HEAP8[$$sroa$5422+2>>0]=0|0;HEAP8[$$sroa$5422+3>>0]=0|0;HEAP8[$$sroa$5422+4>>0]=0|0;HEAP8[$$sroa$5422+5>>0]=0|0;HEAP8[$$sroa$5422+6>>0]=0|0;
    $$pre430 = HEAP8[$0>>0]|0;
    $phitmp490 = $$pre430 & 1;
    $phitmp491 = ($phitmp490<<24>>24)==(0);
    if (!($phitmp491)) {
     $228 = (($0) + 8|0);
     $229 = HEAP32[$228>>2]|0;
     _free($229);
    }
    $230 = HEAP8[$1>>0]|0;
    $231 = $230 & 1;
    $232 = ($231<<24>>24)==(0);
    if ($232) {
     $$0 = $169;
     STACKTOP = sp;return ($$0|0);
    }
    $233 = (($1) + 8|0);
    $234 = HEAP32[$233>>2]|0;
    _free($234);
    $$0 = $169;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 122:  {
    $235 = ($120|0)>(2);
    if (!($235)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $236 = HEAP8[$first>>0]|0;
    $237 = ($236<<24>>24)==(97);
    if (!($237)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $238 = (($first) + 1|0);
    $239 = HEAP8[$238>>0]|0;
    $240 = ($239<<24>>24)==(122);
    if (!($240)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $241 = (($first) + 2|0);
    $242 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($241,$last,$db)|0);
    $243 = ($242|0)==($241|0);
    if ($243) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $244 = HEAP32[$db>>2]|0;
    $245 = (($db) + 4|0);
    $246 = HEAP32[$245>>2]|0;
    $247 = ($244|0)==($246|0);
    if ($247) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $248 = (($246) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3,$248);
    $249 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($3,0,50312,9)|0);
    ;HEAP32[$2+0>>2]=HEAP32[$249+0>>2]|0;HEAP32[$2+4>>2]=HEAP32[$249+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$249+8>>2]|0;
    ;HEAP32[$249+0>>2]=0|0;HEAP32[$249+4>>2]=0|0;HEAP32[$249+8>>2]=0|0;
    $250 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($2,48736,1)|0);
    $251 = HEAP8[$250>>0]|0;
    $252 = (($250) + 1|0);
    ;HEAP8[$$sroa$5419+0>>0]=HEAP8[$252+0>>0]|0;HEAP8[$$sroa$5419+1>>0]=HEAP8[$252+1>>0]|0;HEAP8[$$sroa$5419+2>>0]=HEAP8[$252+2>>0]|0;HEAP8[$$sroa$5419+3>>0]=HEAP8[$252+3>>0]|0;HEAP8[$$sroa$5419+4>>0]=HEAP8[$252+4>>0]|0;HEAP8[$$sroa$5419+5>>0]=HEAP8[$252+5>>0]|0;HEAP8[$$sroa$5419+6>>0]=HEAP8[$252+6>>0]|0;
    $253 = (($250) + 8|0);
    $254 = HEAP32[$253>>2]|0;
    ;HEAP32[$250+0>>2]=0|0;HEAP32[$250+4>>2]=0|0;HEAP32[$250+8>>2]=0|0;
    $255 = HEAP8[$248>>0]|0;
    $256 = $255 & 1;
    $257 = ($256<<24>>24)==(0);
    do {
     if ($257) {
      $258 = (($248) + 1|0);
      HEAP8[$258>>0] = 0;
      HEAP8[$248>>0] = 0;
     } else {
      $259 = (($246) + -16|0);
      $260 = HEAP32[$259>>2]|0;
      HEAP8[$260>>0] = 0;
      $261 = (($246) + -20|0);
      HEAP32[$261>>2] = 0;
      $$pre$i$i$i$i320 = HEAP8[$248>>0]|0;
      $262 = $$pre$i$i$i$i320 & 1;
      $263 = ($262<<24>>24)==(0);
      if ($263) {
       $268 = $$pre$i$i$i$i320;$277 = 10;
      } else {
       $264 = HEAP32[$248>>2]|0;
       $265 = $264 & -2;
       $phitmp$i$i$i$i$i$i$i322 = (($265) + -1)|0;
       $266 = $264&255;
       $268 = $266;$277 = $phitmp$i$i$i$i$i$i$i322;
      }
      $267 = $268 & 1;
      $269 = ($267<<24>>24)==(0);
      if ($269) {
       $270 = $268&255;
       $271 = $270 >>> 1;
       $272 = ($268&255)<(22);
       if ($272) {
        $2136 = 1;$276 = 10;$296 = $271;
       } else {
        $273 = (($271) + 16)|0;
        $274 = $273 & 240;
        $phitmp$i2$i$i$i$i$i$i325 = (($274) + -1)|0;
        $2136 = 1;$276 = $phitmp$i2$i$i$i$i$i$i325;$296 = $271;
       }
      } else {
       $2136 = 0;$276 = 10;$296 = 0;
      }
      $275 = ($276|0)==($277|0);
      if (!($275)) {
       $278 = ($276|0)==(10);
       if ($278) {
        $283 = (($248) + 1|0);
        $284 = HEAP32[$259>>2]|0;
        if ($2136) {
         $285 = $268&255;
         $286 = $285 >>> 1;
         $287 = (($286) + 1)|0;
         _memcpy(($283|0),($284|0),($287|0))|0;
         _free($284);
        } else {
         $292 = HEAP8[$284>>0]|0;
         HEAP8[$283>>0] = $292;
         _free($284);
        }
        $297 = $296 << 1;
        $298 = $297&255;
        HEAP8[$248>>0] = $298;
        break;
       }
       $279 = ($276>>>0)<=($277>>>0);
       $280 = (($276) + 1)|0;
       $281 = (_malloc($280)|0);
       $282 = ($281|0)==(0|0);
       $or$cond$i$i$i$i$i$i327 = $279 & $282;
       if (!($or$cond$i$i$i$i$i$i327)) {
        if ($2136) {
         $288 = (($248) + 1|0);
         $289 = $268&255;
         $290 = $289 >>> 1;
         $291 = (($290) + 1)|0;
         _memcpy(($281|0),($288|0),($291|0))|0;
        } else {
         $293 = HEAP32[$259>>2]|0;
         $294 = HEAP8[$293>>0]|0;
         HEAP8[$281>>0] = $294;
         _free($293);
        }
        $295 = $280 | 1;
        HEAP32[$248>>2] = $295;
        HEAP32[$261>>2] = $296;
        HEAP32[$259>>2] = $281;
       }
      }
     }
    } while(0);
    HEAP8[$248>>0] = $251;
    $299 = (($246) + -23|0);
    ;HEAP8[$299+0>>0]=HEAP8[$$sroa$5419+0>>0]|0;HEAP8[$299+1>>0]=HEAP8[$$sroa$5419+1>>0]|0;HEAP8[$299+2>>0]=HEAP8[$$sroa$5419+2>>0]|0;HEAP8[$299+3>>0]=HEAP8[$$sroa$5419+3>>0]|0;HEAP8[$299+4>>0]=HEAP8[$$sroa$5419+4>>0]|0;HEAP8[$299+5>>0]=HEAP8[$$sroa$5419+5>>0]|0;HEAP8[$299+6>>0]=HEAP8[$$sroa$5419+6>>0]|0;
    $300 = (($246) + -16|0);
    HEAP32[$300>>2] = $254;
    ;HEAP8[$$sroa$5419+0>>0]=0|0;HEAP8[$$sroa$5419+1>>0]=0|0;HEAP8[$$sroa$5419+2>>0]=0|0;HEAP8[$$sroa$5419+3>>0]=0|0;HEAP8[$$sroa$5419+4>>0]=0|0;HEAP8[$$sroa$5419+5>>0]=0|0;HEAP8[$$sroa$5419+6>>0]=0|0;
    $$pre431 = HEAP8[$2>>0]|0;
    $phitmp488 = $$pre431 & 1;
    $phitmp489 = ($phitmp488<<24>>24)==(0);
    if (!($phitmp489)) {
     $301 = (($2) + 8|0);
     $302 = HEAP32[$301>>2]|0;
     _free($302);
    }
    $303 = HEAP8[$3>>0]|0;
    $304 = $303 & 1;
    $305 = ($304<<24>>24)==(0);
    if ($305) {
     $$0 = $242;
     STACKTOP = sp;return ($$0|0);
    }
    $306 = (($3) + 8|0);
    $307 = HEAP32[$306>>2]|0;
    _free($307);
    $$0 = $242;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 100:  {
    $142 = (($first) + 2|0);
    HEAP8[$57>>0] = 2;
    $143 = (($57) + 1|0);
    HEAP8[$143>>0] = 38;
    $144 = (($57) + 2|0);
    HEAP8[$144>>0] = 0;
    $145 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($142,$last,$57,$db)|0);
    $146 = ($145|0)==($142|0);
    $first$33 = $146 ? $first : $145;
    $$0 = $first$33;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 83:  {
    $157 = (($first) + 2|0);
    HEAP8[$60>>0] = 2;
    $158 = (($60) + 1|0);
    HEAP8[$158>>0] = 61;
    $159 = (($60) + 2|0);
    HEAP8[$159>>0] = 0;
    $160 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($157,$last,$60,$db)|0);
    $161 = ($160|0)==($157|0);
    $first$36 = $161 ? $first : $160;
    $$0 = $first$36;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 78:  {
    $152 = (($first) + 2|0);
    HEAP8[$59>>0] = 4;
    $153 = (($59) + 1|0);
    HEAP8[$153>>0]=15654&255;HEAP8[$153+1>>0]=15654>>8;
    $154 = (($59) + 3|0);
    HEAP8[$154>>0] = 0;
    $155 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($152,$last,$59,$db)|0);
    $156 = ($155|0)==($152|0);
    $first$35 = $156 ? $first : $155;
    $$0 = $first$35;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 110:  {
    $147 = (($first) + 2|0);
    HEAP8[$58>>0] = 2;
    $148 = (($58) + 1|0);
    HEAP8[$148>>0] = 38;
    $149 = (($58) + 2|0);
    HEAP8[$149>>0] = 0;
    $150 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($147,$last,$58,$db)|0);
    $151 = ($150|0)==($147|0);
    $first$34 = $151 ? $first : $150;
    $$0 = $first$34;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  case 102:  {
   $133 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
   $$0 = $133;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 84:  {
   $132 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
   $$0 = $132;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 99:  {
   $308 = (($t$0) + 1|0);
   $309 = HEAP8[$308>>0]|0;
   $310 = $309 << 24 >> 24;
   switch ($310|0) {
   case 99:  {
    $311 = ($120|0)>(2);
    if (!($311)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $312 = HEAP8[$first>>0]|0;
    $313 = ($312<<24>>24)==(99);
    if (!($313)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $314 = (($first) + 1|0);
    $315 = HEAP8[$314>>0]|0;
    $316 = ($315<<24>>24)==(99);
    if (!($316)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $317 = (($first) + 2|0);
    $318 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($317,$last,$db)|0);
    $319 = ($318|0)==($317|0);
    if ($319) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $320 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($318,$last,$db)|0);
    $321 = ($320|0)==($318|0);
    if ($321) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $322 = (($db) + 4|0);
    $323 = HEAP32[$322>>2]|0;
    $324 = HEAP32[$db>>2]|0;
    $325 = $323;
    $326 = $324;
    $327 = (($325) - ($326))|0;
    $328 = (($327|0) / 24)&-1;
    $329 = ($328>>>0)<(2);
    if ($329) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $330 = (($323) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr$i299,$330);
    $331 = HEAP32[$322>>2]|0;
    $332 = (($331) + -24|0);
    $334 = $331;
    while(1) {
     $333 = (($334) + -24|0);
     HEAP32[$322>>2] = $333;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($333);
     $335 = HEAP32[$322>>2]|0;
     $336 = ($335|0)==($332|0);
     if ($336) {
      break;
     } else {
      $334 = $335;
     }
    }
    $337 = (($331) + -48|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($8,$337);
    $338 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($8,0,50296,11)|0);
    ;HEAP32[$7+0>>2]=HEAP32[$338+0>>2]|0;HEAP32[$7+4>>2]=HEAP32[$338+4>>2]|0;HEAP32[$7+8>>2]=HEAP32[$338+8>>2]|0;
    ;HEAP32[$338+0>>2]=0|0;HEAP32[$338+4>>2]=0|0;HEAP32[$338+8>>2]=0|0;
    $339 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($7,49072,2)|0);
    ;HEAP32[$6+0>>2]=HEAP32[$339+0>>2]|0;HEAP32[$6+4>>2]=HEAP32[$339+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$339+8>>2]|0;
    ;HEAP32[$339+0>>2]=0|0;HEAP32[$339+4>>2]=0|0;HEAP32[$339+8>>2]=0|0;
    $340 = HEAP8[$expr$i299>>0]|0;
    $341 = $340 & 1;
    $342 = ($341<<24>>24)==(0);
    if ($342) {
     $347 = (($expr$i299) + 1|0);
     $348 = $340&255;
     $349 = $348 >>> 1;
     $350 = $347;$351 = $349;
    } else {
     $343 = (($expr$i299) + 8|0);
     $344 = HEAP32[$343>>2]|0;
     $345 = (($expr$i299) + 4|0);
     $346 = HEAP32[$345>>2]|0;
     $350 = $344;$351 = $346;
    }
    $352 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($6,$350,$351)|0);
    ;HEAP32[$5+0>>2]=HEAP32[$352+0>>2]|0;HEAP32[$5+4>>2]=HEAP32[$352+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[$352+8>>2]|0;
    ;HEAP32[$352+0>>2]=0|0;HEAP32[$352+4>>2]=0|0;HEAP32[$352+8>>2]=0|0;
    $353 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($5,48736,1)|0);
    $354 = HEAP8[$353>>0]|0;
    $355 = (($353) + 1|0);
    ;HEAP8[$$sroa$5416+0>>0]=HEAP8[$355+0>>0]|0;HEAP8[$$sroa$5416+1>>0]=HEAP8[$355+1>>0]|0;HEAP8[$$sroa$5416+2>>0]=HEAP8[$355+2>>0]|0;HEAP8[$$sroa$5416+3>>0]=HEAP8[$355+3>>0]|0;HEAP8[$$sroa$5416+4>>0]=HEAP8[$355+4>>0]|0;HEAP8[$$sroa$5416+5>>0]=HEAP8[$355+5>>0]|0;HEAP8[$$sroa$5416+6>>0]=HEAP8[$355+6>>0]|0;
    $356 = (($353) + 8|0);
    $357 = HEAP32[$356>>2]|0;
    ;HEAP32[$353+0>>2]=0|0;HEAP32[$353+4>>2]=0|0;HEAP32[$353+8>>2]=0|0;
    HEAP8[$4>>0] = $354;
    $358 = (($4) + 1|0);
    ;HEAP8[$358+0>>0]=HEAP8[$$sroa$5416+0>>0]|0;HEAP8[$358+1>>0]=HEAP8[$$sroa$5416+1>>0]|0;HEAP8[$358+2>>0]=HEAP8[$$sroa$5416+2>>0]|0;HEAP8[$358+3>>0]=HEAP8[$$sroa$5416+3>>0]|0;HEAP8[$358+4>>0]=HEAP8[$$sroa$5416+4>>0]|0;HEAP8[$358+5>>0]=HEAP8[$$sroa$5416+5>>0]|0;HEAP8[$358+6>>0]=HEAP8[$$sroa$5416+6>>0]|0;
    $359 = (($4) + 8|0);
    HEAP32[$359>>2] = $357;
    ;HEAP8[$$sroa$5416+0>>0]=0|0;HEAP8[$$sroa$5416+1>>0]=0|0;HEAP8[$$sroa$5416+2>>0]=0|0;HEAP8[$$sroa$5416+3>>0]=0|0;HEAP8[$$sroa$5416+4>>0]=0|0;HEAP8[$$sroa$5416+5>>0]=0|0;HEAP8[$$sroa$5416+6>>0]=0|0;
    $360 = (($4) + 12|0);
    ;HEAP32[$360+0>>2]=0|0;HEAP32[$360+4>>2]=0|0;HEAP32[$360+8>>2]=0|0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($337,$4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
    $$pre432 = HEAP8[$5>>0]|0;
    $phitmp486 = $$pre432 & 1;
    $phitmp487 = ($phitmp486<<24>>24)==(0);
    if (!($phitmp487)) {
     $361 = (($5) + 8|0);
     $362 = HEAP32[$361>>2]|0;
     _free($362);
    }
    $363 = HEAP8[$6>>0]|0;
    $364 = $363 & 1;
    $365 = ($364<<24>>24)==(0);
    if (!($365)) {
     $366 = (($6) + 8|0);
     $367 = HEAP32[$366>>2]|0;
     _free($367);
    }
    $368 = HEAP8[$7>>0]|0;
    $369 = $368 & 1;
    $370 = ($369<<24>>24)==(0);
    if (!($370)) {
     $371 = (($7) + 8|0);
     $372 = HEAP32[$371>>2]|0;
     _free($372);
    }
    $373 = HEAP8[$8>>0]|0;
    $374 = $373 & 1;
    $375 = ($374<<24>>24)==(0);
    if (!($375)) {
     $376 = (($8) + 8|0);
     $377 = HEAP32[$376>>2]|0;
     _free($377);
    }
    if ($342) {
     $$0 = $320;
     STACKTOP = sp;return ($$0|0);
    }
    $378 = (($expr$i299) + 8|0);
    $379 = HEAP32[$378>>2]|0;
    _free($379);
    $$0 = $320;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 108:  {
    if (!($122)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $380 = HEAP8[$first>>0]|0;
    $381 = ($380<<24>>24)==(99);
    if (!($381)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $382 = (($first) + 1|0);
    $383 = HEAP8[$382>>0]|0;
    $384 = ($383<<24>>24)==(108);
    if (!($384)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $385 = (($first) + 2|0);
    $386 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($385,$last,$db)|0);
    $387 = ($386|0)==($385|0);
    $388 = ($386|0)==($last|0);
    $or$cond5$i = $387 | $388;
    if ($or$cond5$i) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $389 = HEAP32[$db>>2]|0;
    $390 = (($db) + 4|0);
    $391 = HEAP32[$390>>2]|0;
    $392 = ($389|0)==($391|0);
    if ($392) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $393 = (($391) + -24|0);
    $394 = (($391) + -12|0);
    $395 = HEAP8[$394>>0]|0;
    $396 = $395 & 1;
    $397 = ($396<<24>>24)==(0);
    if ($397) {
     $402 = (($394) + 1|0);
     $403 = $395&255;
     $404 = $403 >>> 1;
     $405 = $402;$406 = $404;
    } else {
     $398 = (($391) + -4|0);
     $399 = HEAP32[$398>>2]|0;
     $400 = (($391) + -8|0);
     $401 = HEAP32[$400>>2]|0;
     $405 = $399;$406 = $401;
    }
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($393,$405,$406)|0);
    $407 = HEAP32[$390>>2]|0;
    $408 = (($407) + -12|0);
    ;HEAP8[$$sroa$5413+0>>0]=0|0;HEAP8[$$sroa$5413+1>>0]=0|0;HEAP8[$$sroa$5413+2>>0]=0|0;HEAP8[$$sroa$5413+3>>0]=0|0;HEAP8[$$sroa$5413+4>>0]=0|0;HEAP8[$$sroa$5413+5>>0]=0|0;HEAP8[$$sroa$5413+6>>0]=0|0;
    $409 = HEAP8[$408>>0]|0;
    $410 = $409 & 1;
    $411 = ($410<<24>>24)==(0);
    do {
     if ($411) {
      $412 = (($408) + 1|0);
      HEAP8[$412>>0] = 0;
      HEAP8[$408>>0] = 0;
     } else {
      $413 = (($407) + -4|0);
      $414 = HEAP32[$413>>2]|0;
      HEAP8[$414>>0] = 0;
      $415 = (($407) + -8|0);
      HEAP32[$415>>2] = 0;
      $$pre$i$i$i$i274 = HEAP8[$408>>0]|0;
      $416 = $$pre$i$i$i$i274 & 1;
      $417 = ($416<<24>>24)==(0);
      if ($417) {
       $422 = $$pre$i$i$i$i274;$431 = 10;
      } else {
       $418 = HEAP32[$408>>2]|0;
       $419 = $418 & -2;
       $phitmp$i$i$i$i$i$i$i276 = (($419) + -1)|0;
       $420 = $418&255;
       $422 = $420;$431 = $phitmp$i$i$i$i$i$i$i276;
      }
      $421 = $422 & 1;
      $423 = ($421<<24>>24)==(0);
      if ($423) {
       $424 = $422&255;
       $425 = $424 >>> 1;
       $426 = ($422&255)<(22);
       if ($426) {
        $2137 = 1;$430 = 10;$450 = $425;
       } else {
        $427 = (($425) + 16)|0;
        $428 = $427 & 240;
        $phitmp$i2$i$i$i$i$i$i279 = (($428) + -1)|0;
        $2137 = 1;$430 = $phitmp$i2$i$i$i$i$i$i279;$450 = $425;
       }
      } else {
       $2137 = 0;$430 = 10;$450 = 0;
      }
      $429 = ($430|0)==($431|0);
      if (!($429)) {
       $432 = ($430|0)==(10);
       if ($432) {
        $437 = (($408) + 1|0);
        $438 = HEAP32[$413>>2]|0;
        if ($2137) {
         $439 = $422&255;
         $440 = $439 >>> 1;
         $441 = (($440) + 1)|0;
         _memcpy(($437|0),($438|0),($441|0))|0;
         _free($438);
        } else {
         $446 = HEAP8[$438>>0]|0;
         HEAP8[$437>>0] = $446;
         _free($438);
        }
        $451 = $450 << 1;
        $452 = $451&255;
        HEAP8[$408>>0] = $452;
        break;
       }
       $433 = ($430>>>0)<=($431>>>0);
       $434 = (($430) + 1)|0;
       $435 = (_malloc($434)|0);
       $436 = ($435|0)==(0|0);
       $or$cond$i$i$i$i$i$i281 = $433 & $436;
       if (!($or$cond$i$i$i$i$i$i281)) {
        if ($2137) {
         $442 = (($408) + 1|0);
         $443 = $422&255;
         $444 = $443 >>> 1;
         $445 = (($444) + 1)|0;
         _memcpy(($435|0),($442|0),($445|0))|0;
        } else {
         $447 = HEAP32[$413>>2]|0;
         $448 = HEAP8[$447>>0]|0;
         HEAP8[$435>>0] = $448;
         _free($447);
        }
        $449 = $434 | 1;
        HEAP32[$408>>2] = $449;
        HEAP32[$415>>2] = $450;
        HEAP32[$413>>2] = $435;
       }
      }
     }
    } while(0);
    $453 = (($407) + -12|0);
    HEAP8[$453>>0] = 0;
    $454 = (($407) + -11|0);
    ;HEAP8[$454+0>>0]=HEAP8[$$sroa$5413+0>>0]|0;HEAP8[$454+1>>0]=HEAP8[$$sroa$5413+1>>0]|0;HEAP8[$454+2>>0]=HEAP8[$$sroa$5413+2>>0]|0;HEAP8[$454+3>>0]=HEAP8[$$sroa$5413+3>>0]|0;HEAP8[$454+4>>0]=HEAP8[$$sroa$5413+4>>0]|0;HEAP8[$454+5>>0]=HEAP8[$$sroa$5413+5>>0]|0;HEAP8[$454+6>>0]=HEAP8[$$sroa$5413+6>>0]|0;
    $455 = (($407) + -4|0);
    HEAP32[$455>>2] = 0;
    ;HEAP8[$$sroa$5413+0>>0]=0|0;HEAP8[$$sroa$5413+1>>0]=0|0;HEAP8[$$sroa$5413+2>>0]=0|0;HEAP8[$$sroa$5413+3>>0]=0|0;HEAP8[$$sroa$5413+4>>0]=0|0;HEAP8[$$sroa$5413+5>>0]=0|0;HEAP8[$$sroa$5413+6>>0]=0|0;
    $$pre433 = HEAP32[$390>>2]|0;
    $456 = (($$pre433) + -24|0);
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($456,48744,1)|0);
    $457 = HEAP8[$386>>0]|0;
    $458 = ($457<<24>>24)==(69);
    L208: do {
     if ($458) {
      $t$0$i289$lcssa = $386;
     } else {
      $459 = (($tmp$i270) + 1|0);
      $460 = (($tmp$i270) + 8|0);
      $461 = (($tmp$i270) + 4|0);
      $t$0$i289363 = $386;
      while(1) {
       $462 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$0$i289363,$last,$db)|0);
       $463 = ($462|0)==($t$0$i289363|0);
       $464 = ($462|0)==($last|0);
       $or$cond$i291 = $463 | $464;
       if ($or$cond$i291) {
        $$0 = $first;
        label = 674;
        break;
       }
       $465 = HEAP32[$db>>2]|0;
       $466 = HEAP32[$390>>2]|0;
       $467 = ($465|0)==($466|0);
       if ($467) {
        $$0 = $first;
        label = 674;
        break;
       }
       $468 = (($466) + -24|0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp$i270,$468);
       $469 = HEAP32[$390>>2]|0;
       $470 = (($469) + -24|0);
       $472 = $469;
       while(1) {
        $471 = (($472) + -24|0);
        HEAP32[$390>>2] = $471;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($471);
        $473 = HEAP32[$390>>2]|0;
        $474 = ($473|0)==($470|0);
        if ($474) {
         break;
        } else {
         $472 = $473;
        }
       }
       $475 = HEAP8[$tmp$i270>>0]|0;
       $476 = $475 & 1;
       $477 = ($476<<24>>24)==(0);
       if ($477) {
        $479 = $475&255;
        $480 = $479 >>> 1;
        $482 = $480;
       } else {
        $478 = HEAP32[$461>>2]|0;
        $482 = $478;
       }
       $481 = ($482|0)==(0);
       if (!($481)) {
        $483 = HEAP32[$db>>2]|0;
        $484 = ($483|0)==($470|0);
        if ($484) {
         label = 135;
         break;
        }
        $485 = (($469) + -48|0);
        if ($477) {
         $488 = $475&255;
         $489 = $488 >>> 1;
         $490 = $459;$491 = $489;
        } else {
         $486 = HEAP32[$460>>2]|0;
         $487 = HEAP32[$461>>2]|0;
         $490 = $486;$491 = $487;
        }
        (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($485,$490,$491)|0);
       }
       if (!($477)) {
        $492 = HEAP32[$460>>2]|0;
        _free($492);
       }
       $493 = HEAP8[$462>>0]|0;
       $494 = ($493<<24>>24)==(69);
       if ($494) {
        $t$0$i289$lcssa = $462;
        break L208;
       } else {
        $t$0$i289363 = $462;
       }
      }
      if ((label|0) == 135) {
       if ($477) {
        $$0 = $first;
        STACKTOP = sp;return ($$0|0);
       }
       $495 = HEAP32[$460>>2]|0;
       _free($495);
       $$0 = $first;
       STACKTOP = sp;return ($$0|0);
      }
      else if ((label|0) == 674) {
       STACKTOP = sp;return ($$0|0);
      }
     }
    } while(0);
    $496 = HEAP32[$db>>2]|0;
    $497 = HEAP32[$390>>2]|0;
    $498 = ($496|0)==($497|0);
    if ($498) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $499 = (($t$0$i289$lcssa) + 1|0);
    $500 = (($497) + -24|0);
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($500,48736,1)|0);
    $$0 = $499;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 109:  {
    $501 = (($first) + 2|0);
    HEAP8[$61>>0] = 2;
    $502 = (($61) + 1|0);
    HEAP8[$502>>0] = 44;
    $503 = (($61) + 2|0);
    HEAP8[$503>>0] = 0;
    $504 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($501,$last,$61,$db)|0);
    $505 = ($504|0)==($501|0);
    $first$37 = $505 ? $first : $504;
    $$0 = $first$37;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 111:  {
    $506 = (($first) + 2|0);
    HEAP8[$62>>0] = 2;
    $507 = (($62) + 1|0);
    HEAP8[$507>>0] = 126;
    $508 = (($62) + 2|0);
    HEAP8[$508>>0] = 0;
    $509 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($506,$last,$62,$db)|0);
    $510 = ($509|0)==($506|0);
    $first$38 = $510 ? $first : $509;
    $$0 = $first$38;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 118:  {
    $511 = ($120|0)>(2);
    if (!($511)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $512 = HEAP8[$first>>0]|0;
    $513 = ($512<<24>>24)==(99);
    if (!($513)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $514 = (($first) + 1|0);
    $515 = HEAP8[$514>>0]|0;
    $516 = ($515<<24>>24)==(118);
    if (!($516)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $517 = (($db) + 63|0);
    $518 = HEAP8[$517>>0]|0;
    HEAP8[$517>>0] = 0;
    $519 = (($first) + 2|0);
    $520 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($519,$last,$db)|0);
    HEAP8[$517>>0] = $518;
    $521 = ($520|0)==($519|0);
    $522 = ($520|0)==($last|0);
    $or$cond$i252 = $521 | $522;
    if ($or$cond$i252) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $523 = HEAP8[$520>>0]|0;
    $524 = ($523<<24>>24)==(95);
    if ($524) {
     $527 = (($520) + 1|0);
     $528 = ($527|0)==($last|0);
     if ($528) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $529 = HEAP8[$527>>0]|0;
     $530 = ($529<<24>>24)==(69);
     L269: do {
      if ($530) {
       $531 = (($db) + 4|0);
       $532 = HEAP32[$531>>2]|0;
       $533 = (($db) + 8|0);
       $534 = HEAP32[$533>>2]|0;
       $535 = ($532>>>0)<($534>>>0);
       if ($535) {
        $536 = ($532|0)==(0|0);
        if ($536) {
         $538 = 0;
        } else {
         ;HEAP32[$532+0>>2]=0|0;HEAP32[$532+4>>2]=0|0;HEAP32[$532+8>>2]=0|0;HEAP32[$532+12>>2]=0|0;HEAP32[$532+16>>2]=0|0;HEAP32[$532+20>>2]=0|0;
         $$pre$i$i253 = HEAP32[$531>>2]|0;
         $538 = $$pre$i$i253;
        }
        $537 = (($538) + 24|0);
        HEAP32[$531>>2] = $537;
        $t$1$i257 = $527;
        break;
       }
       $539 = (($db) + 12|0);
       $540 = HEAP32[$db>>2]|0;
       $541 = $532;
       $542 = $540;
       $543 = (($541) - ($542))|0;
       $544 = (($543|0) / 24)&-1;
       $545 = (($544) + 1)|0;
       $546 = ($545|0)<(0);
       if ($546) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
        // unreachable;
       }
       $547 = $534;
       $548 = (($547) - ($542))|0;
       $549 = (($548|0) / 24)&-1;
       $550 = ($549>>>0)<(1073741823);
       if ($550) {
        $551 = $549 << 1;
        $552 = ($551>>>0)<($545>>>0);
        $553 = $552 ? $545 : $551;
        $$0$i$i$i$i254 = $553;
       } else {
        $$0$i$i$i$i254 = 2147483647;
       }
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($$sroa$5422,$$0$i$i$i$i254,$544,$539);
       $554 = (($$sroa$5422) + 8|0);
       $555 = HEAP32[$554>>2]|0;
       $556 = ($555|0)==(0|0);
       if (!($556)) {
        ;HEAP32[$555+0>>2]=0|0;HEAP32[$555+4>>2]=0|0;HEAP32[$555+8>>2]=0|0;HEAP32[$555+12>>2]=0|0;HEAP32[$555+16>>2]=0|0;HEAP32[$555+20>>2]=0|0;
       }
       $557 = (($555) + 24|0);
       HEAP32[$554>>2] = $557;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$$sroa$5422);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($$sroa$5422);
       $t$1$i257 = $527;
      } else {
       $559 = $529;$t$0$i256 = $527;
       while(1) {
        $558 = ($559<<24>>24)==(69);
        if ($558) {
         $t$1$i257 = $t$0$i256;
         break L269;
        }
        $560 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$0$i256,$last,$db)|0);
        $561 = ($560|0)==($t$0$i256|0);
        $562 = ($560|0)==($last|0);
        $or$cond13$i = $561 | $562;
        if ($or$cond13$i) {
         $$0 = $first;
         break;
        }
        $$pre = HEAP8[$560>>0]|0;
        $559 = $$pre;$t$0$i256 = $560;
       }
       STACKTOP = sp;return ($$0|0);
      }
     } while(0);
     $563 = (($t$1$i257) + 1|0);
     $t$2$i258 = $563;
    } else {
     $525 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($520,$last,$db)|0);
     $526 = ($525|0)==($520|0);
     if ($526) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     } else {
      $t$2$i258 = $525;
     }
    }
    $564 = (($db) + 4|0);
    $565 = HEAP32[$564>>2]|0;
    $566 = HEAP32[$db>>2]|0;
    $567 = $565;
    $568 = $566;
    $569 = (($567) - ($568))|0;
    $570 = (($569|0) / 24)&-1;
    $571 = ($570>>>0)<(2);
    if ($571) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $572 = (($565) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp2$i,$572);
    $573 = HEAP32[$564>>2]|0;
    $574 = (($573) + -24|0);
    $576 = $573;
    while(1) {
     $575 = (($576) + -24|0);
     HEAP32[$564>>2] = $575;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($575);
     $577 = HEAP32[$564>>2]|0;
     $578 = ($577|0)==($574|0);
     if ($578) {
      break;
     } else {
      $576 = $577;
     }
    }
    $579 = (($573) + -48|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($13,$579);
    $580 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($13,0,48744,1)|0);
    ;HEAP32[$12+0>>2]=HEAP32[$580+0>>2]|0;HEAP32[$12+4>>2]=HEAP32[$580+4>>2]|0;HEAP32[$12+8>>2]=HEAP32[$580+8>>2]|0;
    ;HEAP32[$580+0>>2]=0|0;HEAP32[$580+4>>2]=0|0;HEAP32[$580+8>>2]=0|0;
    $581 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($12,50288,2)|0);
    ;HEAP32[$11+0>>2]=HEAP32[$581+0>>2]|0;HEAP32[$11+4>>2]=HEAP32[$581+4>>2]|0;HEAP32[$11+8>>2]=HEAP32[$581+8>>2]|0;
    ;HEAP32[$581+0>>2]=0|0;HEAP32[$581+4>>2]=0|0;HEAP32[$581+8>>2]=0|0;
    $582 = HEAP8[$tmp2$i>>0]|0;
    $583 = $582 & 1;
    $584 = ($583<<24>>24)==(0);
    if ($584) {
     $589 = (($tmp2$i) + 1|0);
     $590 = $582&255;
     $591 = $590 >>> 1;
     $592 = $589;$593 = $591;
    } else {
     $585 = (($tmp2$i) + 8|0);
     $586 = HEAP32[$585>>2]|0;
     $587 = (($tmp2$i) + 4|0);
     $588 = HEAP32[$587>>2]|0;
     $592 = $586;$593 = $588;
    }
    $594 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($11,$592,$593)|0);
    ;HEAP32[$10+0>>2]=HEAP32[$594+0>>2]|0;HEAP32[$10+4>>2]=HEAP32[$594+4>>2]|0;HEAP32[$10+8>>2]=HEAP32[$594+8>>2]|0;
    ;HEAP32[$594+0>>2]=0|0;HEAP32[$594+4>>2]=0|0;HEAP32[$594+8>>2]=0|0;
    $595 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($10,48736,1)|0);
    $596 = HEAP8[$595>>0]|0;
    $597 = (($595) + 1|0);
    ;HEAP8[$$sroa$5410+0>>0]=HEAP8[$597+0>>0]|0;HEAP8[$$sroa$5410+1>>0]=HEAP8[$597+1>>0]|0;HEAP8[$$sroa$5410+2>>0]=HEAP8[$597+2>>0]|0;HEAP8[$$sroa$5410+3>>0]=HEAP8[$597+3>>0]|0;HEAP8[$$sroa$5410+4>>0]=HEAP8[$597+4>>0]|0;HEAP8[$$sroa$5410+5>>0]=HEAP8[$597+5>>0]|0;HEAP8[$$sroa$5410+6>>0]=HEAP8[$597+6>>0]|0;
    $598 = (($595) + 8|0);
    $599 = HEAP32[$598>>2]|0;
    ;HEAP32[$595+0>>2]=0|0;HEAP32[$595+4>>2]=0|0;HEAP32[$595+8>>2]=0|0;
    HEAP8[$9>>0] = $596;
    $600 = (($9) + 1|0);
    ;HEAP8[$600+0>>0]=HEAP8[$$sroa$5410+0>>0]|0;HEAP8[$600+1>>0]=HEAP8[$$sroa$5410+1>>0]|0;HEAP8[$600+2>>0]=HEAP8[$$sroa$5410+2>>0]|0;HEAP8[$600+3>>0]=HEAP8[$$sroa$5410+3>>0]|0;HEAP8[$600+4>>0]=HEAP8[$$sroa$5410+4>>0]|0;HEAP8[$600+5>>0]=HEAP8[$$sroa$5410+5>>0]|0;HEAP8[$600+6>>0]=HEAP8[$$sroa$5410+6>>0]|0;
    $601 = (($9) + 8|0);
    HEAP32[$601>>2] = $599;
    ;HEAP8[$$sroa$5410+0>>0]=0|0;HEAP8[$$sroa$5410+1>>0]=0|0;HEAP8[$$sroa$5410+2>>0]=0|0;HEAP8[$$sroa$5410+3>>0]=0|0;HEAP8[$$sroa$5410+4>>0]=0|0;HEAP8[$$sroa$5410+5>>0]=0|0;HEAP8[$$sroa$5410+6>>0]=0|0;
    $602 = (($9) + 12|0);
    ;HEAP32[$602+0>>2]=0|0;HEAP32[$602+4>>2]=0|0;HEAP32[$602+8>>2]=0|0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($579,$9);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($9);
    $$pre434 = HEAP8[$10>>0]|0;
    $phitmp484 = $$pre434 & 1;
    $phitmp485 = ($phitmp484<<24>>24)==(0);
    if (!($phitmp485)) {
     $603 = (($10) + 8|0);
     $604 = HEAP32[$603>>2]|0;
     _free($604);
    }
    $605 = HEAP8[$11>>0]|0;
    $606 = $605 & 1;
    $607 = ($606<<24>>24)==(0);
    if (!($607)) {
     $608 = (($11) + 8|0);
     $609 = HEAP32[$608>>2]|0;
     _free($609);
    }
    $610 = HEAP8[$12>>0]|0;
    $611 = $610 & 1;
    $612 = ($611<<24>>24)==(0);
    if (!($612)) {
     $613 = (($12) + 8|0);
     $614 = HEAP32[$613>>2]|0;
     _free($614);
    }
    $615 = HEAP8[$13>>0]|0;
    $616 = $615 & 1;
    $617 = ($616<<24>>24)==(0);
    if (!($617)) {
     $618 = (($13) + 8|0);
     $619 = HEAP32[$618>>2]|0;
     _free($619);
    }
    if ($584) {
     $$0 = $t$2$i258;
     STACKTOP = sp;return ($$0|0);
    }
    $620 = (($tmp2$i) + 8|0);
    $621 = HEAP32[$620>>2]|0;
    _free($621);
    $$0 = $t$2$i258;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  case 108:  {
   $1089 = (($t$0) + 1|0);
   $1090 = HEAP8[$1089>>0]|0;
   $1091 = $1090 << 24 >> 24;
   if ((($1091|0) == 101)) {
    $1092 = (($first) + 2|0);
    HEAP8[$81>>0] = 4;
    $1093 = (($81) + 1|0);
    HEAP8[$1093>>0]=15676&255;HEAP8[$1093+1>>0]=15676>>8;
    $1094 = (($81) + 3|0);
    HEAP8[$1094>>0] = 0;
    $1095 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1092,$last,$81,$db)|0);
    $1096 = ($1095|0)==($1092|0);
    $first$47 = $1096 ? $first : $1095;
    $$0 = $first$47;
    STACKTOP = sp;return ($$0|0);
   } else if ((($1091|0) == 115)) {
    $1097 = (($first) + 2|0);
    HEAP8[$82>>0] = 4;
    $1098 = (($82) + 1|0);
    HEAP8[$1098>>0]=15420&255;HEAP8[$1098+1>>0]=15420>>8;
    $1099 = (($82) + 3|0);
    HEAP8[$1099>>0] = 0;
    $1100 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1097,$last,$82,$db)|0);
    $1101 = ($1100|0)==($1097|0);
    $first$48 = $1101 ? $first : $1100;
    $$0 = $first$48;
    STACKTOP = sp;return ($$0|0);
   } else if ((($1091|0) == 83)) {
    $1102 = (($first) + 2|0);
    HEAP8[$83>>0] = 6;
    $1103 = (($83) + 1|0);
    ;HEAP8[$1103+0>>0]=HEAP8[48936+0>>0]|0;HEAP8[$1103+1>>0]=HEAP8[48936+1>>0]|0;HEAP8[$1103+2>>0]=HEAP8[48936+2>>0]|0;
    $1104 = (($83) + 4|0);
    HEAP8[$1104>>0] = 0;
    $1105 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1102,$last,$83,$db)|0);
    $1106 = ($1105|0)==($1102|0);
    $first$49 = $1106 ? $first : $1105;
    $$0 = $first$49;
    STACKTOP = sp;return ($$0|0);
   } else if ((($1091|0) == 116)) {
    $1107 = (($first) + 2|0);
    HEAP8[$84>>0] = 2;
    $1108 = (($84) + 1|0);
    HEAP8[$1108>>0] = 60;
    $1109 = (($84) + 2|0);
    HEAP8[$1109>>0] = 0;
    $1110 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1107,$last,$84,$db)|0);
    $1111 = ($1110|0)==($1107|0);
    $first$50 = $1111 ? $first : $1110;
    $$0 = $first$50;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 109:  {
   $1112 = (($t$0) + 1|0);
   $1113 = HEAP8[$1112>>0]|0;
   $1114 = $1113 << 24 >> 24;
   switch ($1114|0) {
   case 105:  {
    $1115 = (($first) + 2|0);
    HEAP8[$85>>0] = 2;
    $1116 = (($85) + 1|0);
    HEAP8[$1116>>0] = 45;
    $1117 = (($85) + 2|0);
    HEAP8[$1117>>0] = 0;
    $1118 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1115,$last,$85,$db)|0);
    $1119 = ($1118|0)==($1115|0);
    $first$51 = $1119 ? $first : $1118;
    $$0 = $first$51;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 73:  {
    $1120 = (($first) + 2|0);
    HEAP8[$86>>0] = 4;
    $1121 = (($86) + 1|0);
    HEAP8[$1121>>0]=15661&255;HEAP8[$1121+1>>0]=15661>>8;
    $1122 = (($86) + 3|0);
    HEAP8[$1122>>0] = 0;
    $1123 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1120,$last,$86,$db)|0);
    $1124 = ($1123|0)==($1120|0);
    $first$52 = $1124 ? $first : $1123;
    $$0 = $first$52;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 108:  {
    $1125 = (($first) + 2|0);
    HEAP8[$87>>0] = 2;
    $1126 = (($87) + 1|0);
    HEAP8[$1126>>0] = 42;
    $1127 = (($87) + 2|0);
    HEAP8[$1127>>0] = 0;
    $1128 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1125,$last,$87,$db)|0);
    $1129 = ($1128|0)==($1125|0);
    $first$53 = $1129 ? $first : $1128;
    $$0 = $first$53;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 76:  {
    $1130 = (($first) + 2|0);
    HEAP8[$88>>0] = 4;
    $1131 = (($88) + 1|0);
    HEAP8[$1131>>0]=15658&255;HEAP8[$1131+1>>0]=15658>>8;
    $1132 = (($88) + 3|0);
    HEAP8[$1132>>0] = 0;
    $1133 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1130,$last,$88,$db)|0);
    $1134 = ($1133|0)==($1130|0);
    $first$54 = $1134 ? $first : $1133;
    $$0 = $first$54;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 109:  {
    $1135 = (($first) + 2|0);
    $1136 = ($1135|0)==($last|0);
    if (!($1136)) {
     $1137 = HEAP8[$1135>>0]|0;
     $1138 = ($1137<<24>>24)==(95);
     if ($1138) {
      $1139 = (($first) + 3|0);
      HEAP8[$89>>0] = 4;
      $1140 = (($89) + 1|0);
      HEAP8[$1140>>0]=11565&255;HEAP8[$1140+1>>0]=11565>>8;
      $1141 = (($89) + 3|0);
      HEAP8[$1141>>0] = 0;
      $1142 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1139,$last,$89,$db)|0);
      $1143 = ($1142|0)==($1139|0);
      $first$55 = $1143 ? $first : $1142;
      $$0 = $first$55;
      STACKTOP = sp;return ($$0|0);
     }
    }
    $1144 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1135,$last,$db)|0);
    $1145 = ($1144|0)==($1135|0);
    if ($1145) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1146 = HEAP32[$db>>2]|0;
    $1147 = (($db) + 4|0);
    $1148 = HEAP32[$1147>>2]|0;
    $1149 = ($1146|0)==($1148|0);
    if ($1149) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1150 = (($1148) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($92,$1150);
    $1151 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($92,0,48744,1)|0);
    ;HEAP32[$91+0>>2]=HEAP32[$1151+0>>2]|0;HEAP32[$91+4>>2]=HEAP32[$1151+4>>2]|0;HEAP32[$91+8>>2]=HEAP32[$1151+8>>2]|0;
    ;HEAP32[$1151+0>>2]=0|0;HEAP32[$1151+4>>2]=0|0;HEAP32[$1151+8>>2]=0|0;
    $1152 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($91,48944,3)|0);
    $1153 = HEAP8[$1152>>0]|0;
    $1154 = (($1152) + 1|0);
    ;HEAP8[$$sroa$4367+0>>0]=HEAP8[$1154+0>>0]|0;HEAP8[$$sroa$4367+1>>0]=HEAP8[$1154+1>>0]|0;HEAP8[$$sroa$4367+2>>0]=HEAP8[$1154+2>>0]|0;HEAP8[$$sroa$4367+3>>0]=HEAP8[$1154+3>>0]|0;HEAP8[$$sroa$4367+4>>0]=HEAP8[$1154+4>>0]|0;HEAP8[$$sroa$4367+5>>0]=HEAP8[$1154+5>>0]|0;HEAP8[$$sroa$4367+6>>0]=HEAP8[$1154+6>>0]|0;
    $1155 = (($1152) + 8|0);
    $1156 = HEAP32[$1155>>2]|0;
    ;HEAP32[$1152+0>>2]=0|0;HEAP32[$1152+4>>2]=0|0;HEAP32[$1152+8>>2]=0|0;
    HEAP8[$90>>0] = $1153;
    $1157 = (($90) + 1|0);
    ;HEAP8[$1157+0>>0]=HEAP8[$$sroa$4367+0>>0]|0;HEAP8[$1157+1>>0]=HEAP8[$$sroa$4367+1>>0]|0;HEAP8[$1157+2>>0]=HEAP8[$$sroa$4367+2>>0]|0;HEAP8[$1157+3>>0]=HEAP8[$$sroa$4367+3>>0]|0;HEAP8[$1157+4>>0]=HEAP8[$$sroa$4367+4>>0]|0;HEAP8[$1157+5>>0]=HEAP8[$$sroa$4367+5>>0]|0;HEAP8[$1157+6>>0]=HEAP8[$$sroa$4367+6>>0]|0;
    $1158 = (($90) + 8|0);
    HEAP32[$1158>>2] = $1156;
    ;HEAP8[$$sroa$4367+0>>0]=0|0;HEAP8[$$sroa$4367+1>>0]=0|0;HEAP8[$$sroa$4367+2>>0]=0|0;HEAP8[$$sroa$4367+3>>0]=0|0;HEAP8[$$sroa$4367+4>>0]=0|0;HEAP8[$$sroa$4367+5>>0]=0|0;HEAP8[$$sroa$4367+6>>0]=0|0;
    $1159 = (($90) + 12|0);
    ;HEAP32[$1159+0>>2]=0|0;HEAP32[$1159+4>>2]=0|0;HEAP32[$1159+8>>2]=0|0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1150,$90);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($90);
    $$pre437 = HEAP8[$91>>0]|0;
    $phitmp478 = $$pre437 & 1;
    $phitmp479 = ($phitmp478<<24>>24)==(0);
    if (!($phitmp479)) {
     $1160 = (($91) + 8|0);
     $1161 = HEAP32[$1160>>2]|0;
     _free($1161);
    }
    $1162 = HEAP8[$92>>0]|0;
    $1163 = $1162 & 1;
    $1164 = ($1163<<24>>24)==(0);
    if ($1164) {
     $$0 = $1144;
     STACKTOP = sp;return ($$0|0);
    }
    $1165 = (($92) + 8|0);
    $1166 = HEAP32[$1165>>2]|0;
    _free($1166);
    $$0 = $1144;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  case 103:  {
   $1004 = (($t$0) + 1|0);
   $1005 = HEAP8[$1004>>0]|0;
   $1006 = $1005 << 24 >> 24;
   if ((($1006|0) == 101)) {
    $1007 = (($first) + 2|0);
    HEAP8[$75>>0] = 4;
    $1008 = (($75) + 1|0);
    HEAP8[$1008>>0]=15678&255;HEAP8[$1008+1>>0]=15678>>8;
    $1009 = (($75) + 3|0);
    HEAP8[$1009>>0] = 0;
    $1010 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1007,$last,$75,$db)|0);
    $1011 = ($1010|0)==($1007|0);
    $first$45 = $1011 ? $first : $1010;
    $$0 = $first$45;
    STACKTOP = sp;return ($$0|0);
   } else if ((($1006|0) == 116)) {
    $1012 = (($first) + 2|0);
    HEAP8[$76>>0] = 2;
    $1013 = (($76) + 1|0);
    HEAP8[$1013>>0] = 62;
    $1014 = (($76) + 2|0);
    HEAP8[$1014>>0] = 0;
    $1015 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1012,$last,$76,$db)|0);
    $1016 = ($1015|0)==($1012|0);
    $first$46 = $1016 ? $first : $1015;
    $$0 = $first$46;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 105:  {
   $1017 = (($t$0) + 1|0);
   $1018 = HEAP8[$1017>>0]|0;
   $1019 = ($1018<<24>>24)==(120);
   if (!($1019)) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1020 = (($first) + 2|0);
   $1021 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1020,$last,$db)|0);
   $1022 = ($1021|0)==($1020|0);
   if ($1022) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1023 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1021,$last,$db)|0);
   $1024 = ($1023|0)==($1021|0);
   $1025 = (($db) + 4|0);
   $1026 = HEAP32[$1025>>2]|0;
   if ($1024) {
    $1084 = (($1026) + -24|0);
    $1086 = $1026;
    while(1) {
     $1085 = (($1086) + -24|0);
     HEAP32[$1025>>2] = $1085;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1085);
     $1087 = HEAP32[$1025>>2]|0;
     $1088 = ($1087|0)==($1084|0);
     if ($1088) {
      $$0 = $first;
      break;
     } else {
      $1086 = $1087;
     }
    }
    STACKTOP = sp;return ($$0|0);
   }
   $1027 = HEAP32[$db>>2]|0;
   $1028 = $1026;
   $1029 = $1027;
   $1030 = (($1028) - ($1029))|0;
   $1031 = (($1030|0) / 24)&-1;
   $1032 = ($1031>>>0)<(2);
   if ($1032) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1033 = (($1026) + -24|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op2,$1033);
   $1034 = HEAP32[$1025>>2]|0;
   $1035 = (($1034) + -24|0);
   $1037 = $1034;
   while(1) {
    $1036 = (($1037) + -24|0);
    HEAP32[$1025>>2] = $1036;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1036);
    $1038 = HEAP32[$1025>>2]|0;
    $1039 = ($1038|0)==($1035|0);
    if ($1039) {
     break;
    } else {
     $1037 = $1038;
    }
   }
   $1040 = (($1034) + -48|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op1,$1040);
   $1041 = HEAP32[$1025>>2]|0;
   $1042 = (($1041) + -24|0);
   __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($80,48744,$op1);
   $1043 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($80,48928,2)|0);
   ;HEAP32[$79+0>>2]=HEAP32[$1043+0>>2]|0;HEAP32[$79+4>>2]=HEAP32[$1043+4>>2]|0;HEAP32[$79+8>>2]=HEAP32[$1043+8>>2]|0;
   ;HEAP32[$1043+0>>2]=0|0;HEAP32[$1043+4>>2]=0|0;HEAP32[$1043+8>>2]=0|0;
   $1044 = HEAP8[$op2>>0]|0;
   $1045 = $1044 & 1;
   $1046 = ($1045<<24>>24)==(0);
   if ($1046) {
    $1051 = (($op2) + 1|0);
    $1052 = $1044&255;
    $1053 = $1052 >>> 1;
    $1054 = $1051;$1055 = $1053;
   } else {
    $1047 = (($op2) + 8|0);
    $1048 = HEAP32[$1047>>2]|0;
    $1049 = (($op2) + 4|0);
    $1050 = HEAP32[$1049>>2]|0;
    $1054 = $1048;$1055 = $1050;
   }
   $1056 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($79,$1054,$1055)|0);
   ;HEAP32[$78+0>>2]=HEAP32[$1056+0>>2]|0;HEAP32[$78+4>>2]=HEAP32[$1056+4>>2]|0;HEAP32[$78+8>>2]=HEAP32[$1056+8>>2]|0;
   ;HEAP32[$1056+0>>2]=0|0;HEAP32[$1056+4>>2]=0|0;HEAP32[$1056+8>>2]=0|0;
   $1057 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($78,48856,1)|0);
   $1058 = HEAP8[$1057>>0]|0;
   $1059 = (($1057) + 1|0);
   ;HEAP8[$$sroa$4370+0>>0]=HEAP8[$1059+0>>0]|0;HEAP8[$$sroa$4370+1>>0]=HEAP8[$1059+1>>0]|0;HEAP8[$$sroa$4370+2>>0]=HEAP8[$1059+2>>0]|0;HEAP8[$$sroa$4370+3>>0]=HEAP8[$1059+3>>0]|0;HEAP8[$$sroa$4370+4>>0]=HEAP8[$1059+4>>0]|0;HEAP8[$$sroa$4370+5>>0]=HEAP8[$1059+5>>0]|0;HEAP8[$$sroa$4370+6>>0]=HEAP8[$1059+6>>0]|0;
   $1060 = (($1057) + 8|0);
   $1061 = HEAP32[$1060>>2]|0;
   ;HEAP32[$1057+0>>2]=0|0;HEAP32[$1057+4>>2]=0|0;HEAP32[$1057+8>>2]=0|0;
   HEAP8[$77>>0] = $1058;
   $1062 = (($77) + 1|0);
   ;HEAP8[$1062+0>>0]=HEAP8[$$sroa$4370+0>>0]|0;HEAP8[$1062+1>>0]=HEAP8[$$sroa$4370+1>>0]|0;HEAP8[$1062+2>>0]=HEAP8[$$sroa$4370+2>>0]|0;HEAP8[$1062+3>>0]=HEAP8[$$sroa$4370+3>>0]|0;HEAP8[$1062+4>>0]=HEAP8[$$sroa$4370+4>>0]|0;HEAP8[$1062+5>>0]=HEAP8[$$sroa$4370+5>>0]|0;HEAP8[$1062+6>>0]=HEAP8[$$sroa$4370+6>>0]|0;
   $1063 = (($77) + 8|0);
   HEAP32[$1063>>2] = $1061;
   ;HEAP8[$$sroa$4370+0>>0]=0|0;HEAP8[$$sroa$4370+1>>0]=0|0;HEAP8[$$sroa$4370+2>>0]=0|0;HEAP8[$$sroa$4370+3>>0]=0|0;HEAP8[$$sroa$4370+4>>0]=0|0;HEAP8[$$sroa$4370+5>>0]=0|0;HEAP8[$$sroa$4370+6>>0]=0|0;
   $1064 = (($77) + 12|0);
   ;HEAP32[$1064+0>>2]=0|0;HEAP32[$1064+4>>2]=0|0;HEAP32[$1064+8>>2]=0|0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1042,$77);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($77);
   $$pre436 = HEAP8[$78>>0]|0;
   $phitmp480 = $$pre436 & 1;
   $phitmp481 = ($phitmp480<<24>>24)==(0);
   if (!($phitmp481)) {
    $1065 = (($78) + 8|0);
    $1066 = HEAP32[$1065>>2]|0;
    _free($1066);
   }
   $1067 = HEAP8[$79>>0]|0;
   $1068 = $1067 & 1;
   $1069 = ($1068<<24>>24)==(0);
   if (!($1069)) {
    $1070 = (($79) + 8|0);
    $1071 = HEAP32[$1070>>2]|0;
    _free($1071);
   }
   $1072 = HEAP8[$80>>0]|0;
   $1073 = $1072 & 1;
   $1074 = ($1073<<24>>24)==(0);
   if (!($1074)) {
    $1075 = (($80) + 8|0);
    $1076 = HEAP32[$1075>>2]|0;
    _free($1076);
   }
   $1077 = HEAP8[$op1>>0]|0;
   $1078 = $1077 & 1;
   $1079 = ($1078<<24>>24)==(0);
   if (!($1079)) {
    $1080 = (($op1) + 8|0);
    $1081 = HEAP32[$1080>>2]|0;
    _free($1081);
   }
   if ($1046) {
    $$0 = $1023;
    STACKTOP = sp;return ($$0|0);
   }
   $1082 = (($op2) + 8|0);
   $1083 = HEAP32[$1082>>2]|0;
   _free($1083);
   $$0 = $1023;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 101:  {
   $986 = (($t$0) + 1|0);
   $987 = HEAP8[$986>>0]|0;
   $988 = $987 << 24 >> 24;
   if ((($988|0) == 111)) {
    $989 = (($first) + 2|0);
    HEAP8[$72>>0] = 2;
    $990 = (($72) + 1|0);
    HEAP8[$990>>0] = 94;
    $991 = (($72) + 2|0);
    HEAP8[$991>>0] = 0;
    $992 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($989,$last,$72,$db)|0);
    $993 = ($992|0)==($989|0);
    $first$42 = $993 ? $first : $992;
    $$0 = $first$42;
    STACKTOP = sp;return ($$0|0);
   } else if ((($988|0) == 79)) {
    $994 = (($first) + 2|0);
    HEAP8[$73>>0] = 4;
    $995 = (($73) + 1|0);
    HEAP8[$995>>0]=15710&255;HEAP8[$995+1>>0]=15710>>8;
    $996 = (($73) + 3|0);
    HEAP8[$996>>0] = 0;
    $997 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($994,$last,$73,$db)|0);
    $998 = ($997|0)==($994|0);
    $first$43 = $998 ? $first : $997;
    $$0 = $first$43;
    STACKTOP = sp;return ($$0|0);
   } else if ((($988|0) == 113)) {
    $999 = (($first) + 2|0);
    HEAP8[$74>>0] = 4;
    $1000 = (($74) + 1|0);
    HEAP8[$1000>>0]=15677&255;HEAP8[$1000+1>>0]=15677>>8;
    $1001 = (($74) + 3|0);
    HEAP8[$1001>>0] = 0;
    $1002 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($999,$last,$74,$db)|0);
    $1003 = ($1002|0)==($999|0);
    $first$44 = $1003 ? $first : $1002;
    $$0 = $first$44;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 100:  {
   $622 = (($t$0) + 1|0);
   $623 = HEAP8[$622>>0]|0;
   $624 = $623 << 24 >> 24;
   do {
    switch ($624|0) {
    case 118:  {
     $976 = (($first) + 2|0);
     HEAP8[$70>>0] = 2;
     $977 = (($70) + 1|0);
     HEAP8[$977>>0] = 47;
     $978 = (($70) + 2|0);
     HEAP8[$978>>0] = 0;
     $979 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($976,$last,$70,$db)|0);
     $980 = ($979|0)==($976|0);
     $first$40 = $980 ? $first : $979;
     $$0 = $first$40;
     STACKTOP = sp;return ($$0|0);
     break;
    }
    case 86:  {
     $981 = (($first) + 2|0);
     HEAP8[$71>>0] = 4;
     $982 = (($71) + 1|0);
     HEAP8[$982>>0]=15663&255;HEAP8[$982+1>>0]=15663>>8;
     $983 = (($71) + 3|0);
     HEAP8[$983>>0] = 0;
     $984 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($981,$last,$71,$db)|0);
     $985 = ($984|0)==($981|0);
     $first$41 = $985 ? $first : $984;
     $$0 = $first$41;
     STACKTOP = sp;return ($$0|0);
     break;
    }
    case 116:  {
     $927 = ($120|0)>(2);
     if (!($927)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $928 = HEAP8[$first>>0]|0;
     $929 = ($928<<24>>24)==(100);
     if (!($929)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $930 = (($first) + 1|0);
     $931 = HEAP8[$930>>0]|0;
     $932 = ($931<<24>>24)==(116);
     if (!($932)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $933 = (($first) + 2|0);
     $934 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($933,$last,$db)|0);
     $935 = ($934|0)==($933|0);
     if ($935) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $936 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($934,$last,$db)|0);
     $937 = ($936|0)==($934|0);
     if ($937) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $938 = (($db) + 4|0);
     $939 = HEAP32[$938>>2]|0;
     $940 = HEAP32[$db>>2]|0;
     $941 = $939;
     $942 = $940;
     $943 = (($941) - ($942))|0;
     $944 = (($943|0) / 24)&-1;
     $945 = ($944>>>0)<(2);
     if ($945) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $946 = (($939) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($name$i,$946);
     $947 = HEAP32[$938>>2]|0;
     $948 = (($947) + -24|0);
     $950 = $947;
     while(1) {
      $949 = (($950) + -24|0);
      HEAP32[$938>>2] = $949;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($949);
      $951 = HEAP32[$938>>2]|0;
      $952 = ($951|0)==($948|0);
      if ($952) {
       break;
      } else {
       $950 = $951;
      }
     }
     __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($20,54136,$name$i);
     $953 = (($947) + -48|0);
     $954 = HEAP8[$20>>0]|0;
     $955 = $954 & 1;
     $956 = ($955<<24>>24)==(0);
     if ($956) {
      $961 = (($20) + 1|0);
      $962 = $954&255;
      $963 = $962 >>> 1;
      $964 = $961;$965 = $963;
     } else {
      $957 = (($20) + 8|0);
      $958 = HEAP32[$957>>2]|0;
      $959 = (($20) + 4|0);
      $960 = HEAP32[$959>>2]|0;
      $964 = $958;$965 = $960;
     }
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($953,$964,$965)|0);
     $966 = HEAP8[$20>>0]|0;
     $967 = $966 & 1;
     $968 = ($967<<24>>24)==(0);
     if (!($968)) {
      $969 = (($20) + 8|0);
      $970 = HEAP32[$969>>2]|0;
      _free($970);
     }
     $971 = HEAP8[$name$i>>0]|0;
     $972 = $971 & 1;
     $973 = ($972<<24>>24)==(0);
     if ($973) {
      $$0 = $936;
      STACKTOP = sp;return ($$0|0);
     }
     $974 = (($name$i) + 8|0);
     $975 = HEAP32[$974>>2]|0;
     _free($975);
     $$0 = $936;
     STACKTOP = sp;return ($$0|0);
     break;
    }
    case 110:  {
     $877 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
     $$0 = $877;
     STACKTOP = sp;return ($$0|0);
     break;
    }
    case 115:  {
     $878 = ($120|0)>(2);
     if (!($878)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $879 = HEAP8[$first>>0]|0;
     $880 = ($879<<24>>24)==(100);
     if (!($880)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $881 = (($first) + 1|0);
     $882 = HEAP8[$881>>0]|0;
     $883 = ($882<<24>>24)==(115);
     if (!($883)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $884 = (($first) + 2|0);
     $885 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($884,$last,$db)|0);
     $886 = ($885|0)==($884|0);
     if ($886) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $887 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($885,$last,$db)|0);
     $888 = ($887|0)==($885|0);
     if ($888) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $889 = (($db) + 4|0);
     $890 = HEAP32[$889>>2]|0;
     $891 = HEAP32[$db>>2]|0;
     $892 = $890;
     $893 = $891;
     $894 = (($892) - ($893))|0;
     $895 = (($894|0) / 24)&-1;
     $896 = ($895>>>0)<(2);
     if ($896) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $897 = (($890) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr$i225,$897);
     $898 = HEAP32[$889>>2]|0;
     $899 = (($898) + -24|0);
     $901 = $898;
     while(1) {
      $900 = (($901) + -24|0);
      HEAP32[$889>>2] = $900;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($900);
      $902 = HEAP32[$889>>2]|0;
      $903 = ($902|0)==($899|0);
      if ($903) {
       break;
      } else {
       $901 = $902;
      }
     }
     __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($19,49144,$expr$i225);
     $904 = (($898) + -48|0);
     $905 = HEAP8[$19>>0]|0;
     $906 = $905 & 1;
     $907 = ($906<<24>>24)==(0);
     if ($907) {
      $912 = (($19) + 1|0);
      $913 = $905&255;
      $914 = $913 >>> 1;
      $915 = $912;$916 = $914;
     } else {
      $908 = (($19) + 8|0);
      $909 = HEAP32[$908>>2]|0;
      $910 = (($19) + 4|0);
      $911 = HEAP32[$910>>2]|0;
      $915 = $909;$916 = $911;
     }
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($904,$915,$916)|0);
     $917 = HEAP8[$19>>0]|0;
     $918 = $917 & 1;
     $919 = ($918<<24>>24)==(0);
     if (!($919)) {
      $920 = (($19) + 8|0);
      $921 = HEAP32[$920>>2]|0;
      _free($921);
     }
     $922 = HEAP8[$expr$i225>>0]|0;
     $923 = $922 & 1;
     $924 = ($923<<24>>24)==(0);
     if ($924) {
      $$0 = $887;
      STACKTOP = sp;return ($$0|0);
     }
     $925 = (($expr$i225) + 8|0);
     $926 = HEAP32[$925>>2]|0;
     _free($926);
     $$0 = $887;
     STACKTOP = sp;return ($$0|0);
     break;
    }
    case 101:  {
     $783 = (($first) + 2|0);
     HEAP8[$66>>0] = 2;
     $784 = (($66) + 1|0);
     HEAP8[$784>>0] = 42;
     $785 = (($66) + 2|0);
     HEAP8[$785>>0] = 0;
     $786 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($783,$last,$66,$db)|0);
     $787 = ($786|0)==($783|0);
     $first$39 = $787 ? $first : $786;
     $$0 = $first$39;
     STACKTOP = sp;return ($$0|0);
     break;
    }
    case 108:  {
     $788 = (($t$0) + 2|0);
     $789 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($788,$last,$db)|0);
     $790 = ($789|0)==($788|0);
     if ($790) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $791 = HEAP32[$db>>2]|0;
     $792 = (($db) + 4|0);
     $793 = HEAP32[$792>>2]|0;
     $794 = ($791|0)==($793|0);
     if ($794) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $795 = (($793) + -24|0);
     if ($parsed_gs$0$off0) {
      HEAP8[$68>>0] = 4;
      $796 = (($68) + 1|0);
      HEAP8[$796>>0]=14906&255;HEAP8[$796+1>>0]=14906>>8;
      $797 = (($68) + 3|0);
      HEAP8[$797>>0] = 0;
     } else {
      ;HEAP32[$68+0>>2]=0|0;HEAP32[$68+4>>2]=0|0;HEAP32[$68+8>>2]=0|0;
     }
     $798 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($68,48912,7)|0);
     ;HEAP32[$67+0>>2]=HEAP32[$798+0>>2]|0;HEAP32[$67+4>>2]=HEAP32[$798+4>>2]|0;HEAP32[$67+8>>2]=HEAP32[$798+8>>2]|0;
     ;HEAP32[$798+0>>2]=0|0;HEAP32[$798+4>>2]=0|0;HEAP32[$798+8>>2]=0|0;
     $799 = HEAP32[$792>>2]|0;
     $800 = (($799) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($69,$800);
     $801 = HEAP8[$69>>0]|0;
     $802 = $801 & 1;
     $803 = ($802<<24>>24)==(0);
     if ($803) {
      $808 = (($69) + 1|0);
      $809 = $801&255;
      $810 = $809 >>> 1;
      $811 = $808;$812 = $810;
     } else {
      $804 = (($69) + 8|0);
      $805 = HEAP32[$804>>2]|0;
      $806 = (($69) + 4|0);
      $807 = HEAP32[$806>>2]|0;
      $811 = $805;$812 = $807;
     }
     $813 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($67,$811,$812)|0);
     $814 = HEAP8[$813>>0]|0;
     $815 = (($813) + 1|0);
     ;HEAP8[$$sroa$4373+0>>0]=HEAP8[$815+0>>0]|0;HEAP8[$$sroa$4373+1>>0]=HEAP8[$815+1>>0]|0;HEAP8[$$sroa$4373+2>>0]=HEAP8[$815+2>>0]|0;HEAP8[$$sroa$4373+3>>0]=HEAP8[$815+3>>0]|0;HEAP8[$$sroa$4373+4>>0]=HEAP8[$815+4>>0]|0;HEAP8[$$sroa$4373+5>>0]=HEAP8[$815+5>>0]|0;HEAP8[$$sroa$4373+6>>0]=HEAP8[$815+6>>0]|0;
     $816 = (($813) + 8|0);
     $817 = HEAP32[$816>>2]|0;
     ;HEAP32[$813+0>>2]=0|0;HEAP32[$813+4>>2]=0|0;HEAP32[$813+8>>2]=0|0;
     $818 = HEAP8[$795>>0]|0;
     $819 = $818 & 1;
     $820 = ($819<<24>>24)==(0);
     do {
      if ($820) {
       $821 = (($795) + 1|0);
       HEAP8[$821>>0] = 0;
       HEAP8[$795>>0] = 0;
      } else {
       $822 = (($793) + -16|0);
       $823 = HEAP32[$822>>2]|0;
       HEAP8[$823>>0] = 0;
       $824 = (($793) + -20|0);
       HEAP32[$824>>2] = 0;
       $$pre$i$i$i77 = HEAP8[$795>>0]|0;
       $825 = $$pre$i$i$i77 & 1;
       $826 = ($825<<24>>24)==(0);
       if ($826) {
        $831 = $$pre$i$i$i77;$840 = 10;
       } else {
        $827 = HEAP32[$795>>2]|0;
        $828 = $827 & -2;
        $phitmp$i$i$i$i$i$i79 = (($828) + -1)|0;
        $829 = $827&255;
        $831 = $829;$840 = $phitmp$i$i$i$i$i$i79;
       }
       $830 = $831 & 1;
       $832 = ($830<<24>>24)==(0);
       if ($832) {
        $833 = $831&255;
        $834 = $833 >>> 1;
        $835 = ($831&255)<(22);
        if ($835) {
         $2139 = 1;$839 = 10;$859 = $834;
        } else {
         $836 = (($834) + 16)|0;
         $837 = $836 & 240;
         $phitmp$i2$i$i$i$i$i82 = (($837) + -1)|0;
         $2139 = 1;$839 = $phitmp$i2$i$i$i$i$i82;$859 = $834;
        }
       } else {
        $2139 = 0;$839 = 10;$859 = 0;
       }
       $838 = ($839|0)==($840|0);
       if (!($838)) {
        $841 = ($839|0)==(10);
        if ($841) {
         $846 = (($795) + 1|0);
         $847 = HEAP32[$822>>2]|0;
         if ($2139) {
          $848 = $831&255;
          $849 = $848 >>> 1;
          $850 = (($849) + 1)|0;
          _memcpy(($846|0),($847|0),($850|0))|0;
          _free($847);
         } else {
          $855 = HEAP8[$847>>0]|0;
          HEAP8[$846>>0] = $855;
          _free($847);
         }
         $860 = $859 << 1;
         $861 = $860&255;
         HEAP8[$795>>0] = $861;
         break;
        }
        $842 = ($839>>>0)<=($840>>>0);
        $843 = (($839) + 1)|0;
        $844 = (_malloc($843)|0);
        $845 = ($844|0)==(0|0);
        $or$cond$i$i$i$i$i84 = $842 & $845;
        if (!($or$cond$i$i$i$i$i84)) {
         if ($2139) {
          $851 = (($795) + 1|0);
          $852 = $831&255;
          $853 = $852 >>> 1;
          $854 = (($853) + 1)|0;
          _memcpy(($844|0),($851|0),($854|0))|0;
         } else {
          $856 = HEAP32[$822>>2]|0;
          $857 = HEAP8[$856>>0]|0;
          HEAP8[$844>>0] = $857;
          _free($856);
         }
         $858 = $843 | 1;
         HEAP32[$795>>2] = $858;
         HEAP32[$824>>2] = $859;
         HEAP32[$822>>2] = $844;
        }
       }
      }
     } while(0);
     $862 = (($793) + -24|0);
     HEAP8[$862>>0] = $814;
     $863 = (($793) + -23|0);
     ;HEAP8[$863+0>>0]=HEAP8[$$sroa$4373+0>>0]|0;HEAP8[$863+1>>0]=HEAP8[$$sroa$4373+1>>0]|0;HEAP8[$863+2>>0]=HEAP8[$$sroa$4373+2>>0]|0;HEAP8[$863+3>>0]=HEAP8[$$sroa$4373+3>>0]|0;HEAP8[$863+4>>0]=HEAP8[$$sroa$4373+4>>0]|0;HEAP8[$863+5>>0]=HEAP8[$$sroa$4373+5>>0]|0;HEAP8[$863+6>>0]=HEAP8[$$sroa$4373+6>>0]|0;
     $864 = (($793) + -16|0);
     HEAP32[$864>>2] = $817;
     ;HEAP8[$$sroa$4373+0>>0]=0|0;HEAP8[$$sroa$4373+1>>0]=0|0;HEAP8[$$sroa$4373+2>>0]=0|0;HEAP8[$$sroa$4373+3>>0]=0|0;HEAP8[$$sroa$4373+4>>0]=0|0;HEAP8[$$sroa$4373+5>>0]=0|0;HEAP8[$$sroa$4373+6>>0]=0|0;
     if (!($803)) {
      $865 = (($69) + 8|0);
      $866 = HEAP32[$865>>2]|0;
      _free($866);
     }
     $867 = HEAP8[$67>>0]|0;
     $868 = $867 & 1;
     $869 = ($868<<24>>24)==(0);
     if (!($869)) {
      $870 = (($67) + 8|0);
      $871 = HEAP32[$870>>2]|0;
      _free($871);
     }
     $872 = HEAP8[$68>>0]|0;
     $873 = $872 & 1;
     $874 = ($873<<24>>24)==(0);
     if ($874) {
      $$0 = $789;
      STACKTOP = sp;return ($$0|0);
     }
     $875 = (($68) + 8|0);
     $876 = HEAP32[$875>>2]|0;
     _free($876);
     $$0 = $789;
     STACKTOP = sp;return ($$0|0);
     break;
    }
    case 97:  {
     $625 = (($t$0) + 2|0);
     $626 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($625,$last,$db)|0);
     $627 = ($626|0)==($625|0);
     if ($627) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $628 = HEAP32[$db>>2]|0;
     $629 = (($db) + 4|0);
     $630 = HEAP32[$629>>2]|0;
     $631 = ($628|0)==($630|0);
     if ($631) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $632 = (($630) + -24|0);
     if ($parsed_gs$0$off0) {
      HEAP8[$64>>0] = 4;
      $633 = (($64) + 1|0);
      HEAP8[$633>>0]=14906&255;HEAP8[$633+1>>0]=14906>>8;
      $634 = (($64) + 3|0);
      HEAP8[$634>>0] = 0;
     } else {
      ;HEAP32[$64+0>>2]=0|0;HEAP32[$64+4>>2]=0|0;HEAP32[$64+8>>2]=0|0;
     }
     $635 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($64,48896,9)|0);
     ;HEAP32[$63+0>>2]=HEAP32[$635+0>>2]|0;HEAP32[$63+4>>2]=HEAP32[$635+4>>2]|0;HEAP32[$63+8>>2]=HEAP32[$635+8>>2]|0;
     ;HEAP32[$635+0>>2]=0|0;HEAP32[$635+4>>2]=0|0;HEAP32[$635+8>>2]=0|0;
     $636 = HEAP32[$629>>2]|0;
     $637 = (($636) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($65,$637);
     $638 = HEAP8[$65>>0]|0;
     $639 = $638 & 1;
     $640 = ($639<<24>>24)==(0);
     if ($640) {
      $645 = (($65) + 1|0);
      $646 = $638&255;
      $647 = $646 >>> 1;
      $648 = $645;$649 = $647;
     } else {
      $641 = (($65) + 8|0);
      $642 = HEAP32[$641>>2]|0;
      $643 = (($65) + 4|0);
      $644 = HEAP32[$643>>2]|0;
      $648 = $642;$649 = $644;
     }
     $650 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($63,$648,$649)|0);
     $651 = HEAP8[$650>>0]|0;
     $652 = (($650) + 1|0);
     ;HEAP8[$$sroa$4376+0>>0]=HEAP8[$652+0>>0]|0;HEAP8[$$sroa$4376+1>>0]=HEAP8[$652+1>>0]|0;HEAP8[$$sroa$4376+2>>0]=HEAP8[$652+2>>0]|0;HEAP8[$$sroa$4376+3>>0]=HEAP8[$652+3>>0]|0;HEAP8[$$sroa$4376+4>>0]=HEAP8[$652+4>>0]|0;HEAP8[$$sroa$4376+5>>0]=HEAP8[$652+5>>0]|0;HEAP8[$$sroa$4376+6>>0]=HEAP8[$652+6>>0]|0;
     $653 = (($650) + 8|0);
     $654 = HEAP32[$653>>2]|0;
     ;HEAP32[$650+0>>2]=0|0;HEAP32[$650+4>>2]=0|0;HEAP32[$650+8>>2]=0|0;
     $655 = HEAP8[$632>>0]|0;
     $656 = $655 & 1;
     $657 = ($656<<24>>24)==(0);
     do {
      if ($657) {
       $658 = (($632) + 1|0);
       HEAP8[$658>>0] = 0;
       HEAP8[$632>>0] = 0;
      } else {
       $659 = (($630) + -16|0);
       $660 = HEAP32[$659>>2]|0;
       HEAP8[$660>>0] = 0;
       $661 = (($630) + -20|0);
       HEAP32[$661>>2] = 0;
       $$pre$i$i$i = HEAP8[$632>>0]|0;
       $662 = $$pre$i$i$i & 1;
       $663 = ($662<<24>>24)==(0);
       if ($663) {
        $668 = $$pre$i$i$i;$677 = 10;
       } else {
        $664 = HEAP32[$632>>2]|0;
        $665 = $664 & -2;
        $phitmp$i$i$i$i$i$i = (($665) + -1)|0;
        $666 = $664&255;
        $668 = $666;$677 = $phitmp$i$i$i$i$i$i;
       }
       $667 = $668 & 1;
       $669 = ($667<<24>>24)==(0);
       if ($669) {
        $670 = $668&255;
        $671 = $670 >>> 1;
        $672 = ($668&255)<(22);
        if ($672) {
         $2138 = 1;$676 = 10;$696 = $671;
        } else {
         $673 = (($671) + 16)|0;
         $674 = $673 & 240;
         $phitmp$i2$i$i$i$i$i = (($674) + -1)|0;
         $2138 = 1;$676 = $phitmp$i2$i$i$i$i$i;$696 = $671;
        }
       } else {
        $2138 = 0;$676 = 10;$696 = 0;
       }
       $675 = ($676|0)==($677|0);
       if (!($675)) {
        $678 = ($676|0)==(10);
        if ($678) {
         $683 = (($632) + 1|0);
         $684 = HEAP32[$659>>2]|0;
         if ($2138) {
          $685 = $668&255;
          $686 = $685 >>> 1;
          $687 = (($686) + 1)|0;
          _memcpy(($683|0),($684|0),($687|0))|0;
          _free($684);
         } else {
          $692 = HEAP8[$684>>0]|0;
          HEAP8[$683>>0] = $692;
          _free($684);
         }
         $697 = $696 << 1;
         $698 = $697&255;
         HEAP8[$632>>0] = $698;
         break;
        }
        $679 = ($676>>>0)<=($677>>>0);
        $680 = (($676) + 1)|0;
        $681 = (_malloc($680)|0);
        $682 = ($681|0)==(0|0);
        $or$cond$i$i$i$i$i = $679 & $682;
        if (!($or$cond$i$i$i$i$i)) {
         if ($2138) {
          $688 = (($632) + 1|0);
          $689 = $668&255;
          $690 = $689 >>> 1;
          $691 = (($690) + 1)|0;
          _memcpy(($681|0),($688|0),($691|0))|0;
         } else {
          $693 = HEAP32[$659>>2]|0;
          $694 = HEAP8[$693>>0]|0;
          HEAP8[$681>>0] = $694;
          _free($693);
         }
         $695 = $680 | 1;
         HEAP32[$632>>2] = $695;
         HEAP32[$661>>2] = $696;
         HEAP32[$659>>2] = $681;
        }
       }
      }
     } while(0);
     $699 = (($630) + -24|0);
     HEAP8[$699>>0] = $651;
     $700 = (($630) + -23|0);
     ;HEAP8[$700+0>>0]=HEAP8[$$sroa$4376+0>>0]|0;HEAP8[$700+1>>0]=HEAP8[$$sroa$4376+1>>0]|0;HEAP8[$700+2>>0]=HEAP8[$$sroa$4376+2>>0]|0;HEAP8[$700+3>>0]=HEAP8[$$sroa$4376+3>>0]|0;HEAP8[$700+4>>0]=HEAP8[$$sroa$4376+4>>0]|0;HEAP8[$700+5>>0]=HEAP8[$$sroa$4376+5>>0]|0;HEAP8[$700+6>>0]=HEAP8[$$sroa$4376+6>>0]|0;
     $701 = (($630) + -16|0);
     HEAP32[$701>>2] = $654;
     ;HEAP8[$$sroa$4376+0>>0]=0|0;HEAP8[$$sroa$4376+1>>0]=0|0;HEAP8[$$sroa$4376+2>>0]=0|0;HEAP8[$$sroa$4376+3>>0]=0|0;HEAP8[$$sroa$4376+4>>0]=0|0;HEAP8[$$sroa$4376+5>>0]=0|0;HEAP8[$$sroa$4376+6>>0]=0|0;
     if (!($640)) {
      $702 = (($65) + 8|0);
      $703 = HEAP32[$702>>2]|0;
      _free($703);
     }
     $704 = HEAP8[$63>>0]|0;
     $705 = $704 & 1;
     $706 = ($705<<24>>24)==(0);
     if (!($706)) {
      $707 = (($63) + 8|0);
      $708 = HEAP32[$707>>2]|0;
      _free($708);
     }
     $709 = HEAP8[$64>>0]|0;
     $710 = $709 & 1;
     $711 = ($710<<24>>24)==(0);
     if ($711) {
      $$0 = $626;
      STACKTOP = sp;return ($$0|0);
     }
     $712 = (($64) + 8|0);
     $713 = HEAP32[$712>>2]|0;
     _free($713);
     $$0 = $626;
     STACKTOP = sp;return ($$0|0);
     break;
    }
    case 99:  {
     $714 = ($120|0)>(2);
     if (!($714)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $715 = HEAP8[$first>>0]|0;
     $716 = ($715<<24>>24)==(100);
     if (!($716)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $717 = (($first) + 1|0);
     $718 = HEAP8[$717>>0]|0;
     $719 = ($718<<24>>24)==(99);
     if (!($719)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $720 = (($first) + 2|0);
     $721 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($720,$last,$db)|0);
     $722 = ($721|0)==($720|0);
     if ($722) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $723 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($721,$last,$db)|0);
     $724 = ($723|0)==($721|0);
     if ($724) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $725 = (($db) + 4|0);
     $726 = HEAP32[$725>>2]|0;
     $727 = HEAP32[$db>>2]|0;
     $728 = $726;
     $729 = $727;
     $730 = (($728) - ($729))|0;
     $731 = (($730|0) / 24)&-1;
     $732 = ($731>>>0)<(2);
     if ($732) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $733 = (($726) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr$i233,$733);
     $734 = HEAP32[$725>>2]|0;
     $735 = (($734) + -24|0);
     $737 = $734;
     while(1) {
      $736 = (($737) + -24|0);
      HEAP32[$725>>2] = $736;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($736);
      $738 = HEAP32[$725>>2]|0;
      $739 = ($738|0)==($735|0);
      if ($739) {
       break;
      } else {
       $737 = $738;
      }
     }
     $740 = (($734) + -48|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($18,$740);
     $741 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($18,0,50272,13)|0);
     ;HEAP32[$17+0>>2]=HEAP32[$741+0>>2]|0;HEAP32[$17+4>>2]=HEAP32[$741+4>>2]|0;HEAP32[$17+8>>2]=HEAP32[$741+8>>2]|0;
     ;HEAP32[$741+0>>2]=0|0;HEAP32[$741+4>>2]=0|0;HEAP32[$741+8>>2]=0|0;
     $742 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($17,49072,2)|0);
     ;HEAP32[$16+0>>2]=HEAP32[$742+0>>2]|0;HEAP32[$16+4>>2]=HEAP32[$742+4>>2]|0;HEAP32[$16+8>>2]=HEAP32[$742+8>>2]|0;
     ;HEAP32[$742+0>>2]=0|0;HEAP32[$742+4>>2]=0|0;HEAP32[$742+8>>2]=0|0;
     $743 = HEAP8[$expr$i233>>0]|0;
     $744 = $743 & 1;
     $745 = ($744<<24>>24)==(0);
     if ($745) {
      $750 = (($expr$i233) + 1|0);
      $751 = $743&255;
      $752 = $751 >>> 1;
      $753 = $750;$754 = $752;
     } else {
      $746 = (($expr$i233) + 8|0);
      $747 = HEAP32[$746>>2]|0;
      $748 = (($expr$i233) + 4|0);
      $749 = HEAP32[$748>>2]|0;
      $753 = $747;$754 = $749;
     }
     $755 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($16,$753,$754)|0);
     ;HEAP32[$15+0>>2]=HEAP32[$755+0>>2]|0;HEAP32[$15+4>>2]=HEAP32[$755+4>>2]|0;HEAP32[$15+8>>2]=HEAP32[$755+8>>2]|0;
     ;HEAP32[$755+0>>2]=0|0;HEAP32[$755+4>>2]=0|0;HEAP32[$755+8>>2]=0|0;
     $756 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($15,48736,1)|0);
     $757 = HEAP8[$756>>0]|0;
     $758 = (($756) + 1|0);
     ;HEAP8[$$sroa$5407+0>>0]=HEAP8[$758+0>>0]|0;HEAP8[$$sroa$5407+1>>0]=HEAP8[$758+1>>0]|0;HEAP8[$$sroa$5407+2>>0]=HEAP8[$758+2>>0]|0;HEAP8[$$sroa$5407+3>>0]=HEAP8[$758+3>>0]|0;HEAP8[$$sroa$5407+4>>0]=HEAP8[$758+4>>0]|0;HEAP8[$$sroa$5407+5>>0]=HEAP8[$758+5>>0]|0;HEAP8[$$sroa$5407+6>>0]=HEAP8[$758+6>>0]|0;
     $759 = (($756) + 8|0);
     $760 = HEAP32[$759>>2]|0;
     ;HEAP32[$756+0>>2]=0|0;HEAP32[$756+4>>2]=0|0;HEAP32[$756+8>>2]=0|0;
     HEAP8[$14>>0] = $757;
     $761 = (($14) + 1|0);
     ;HEAP8[$761+0>>0]=HEAP8[$$sroa$5407+0>>0]|0;HEAP8[$761+1>>0]=HEAP8[$$sroa$5407+1>>0]|0;HEAP8[$761+2>>0]=HEAP8[$$sroa$5407+2>>0]|0;HEAP8[$761+3>>0]=HEAP8[$$sroa$5407+3>>0]|0;HEAP8[$761+4>>0]=HEAP8[$$sroa$5407+4>>0]|0;HEAP8[$761+5>>0]=HEAP8[$$sroa$5407+5>>0]|0;HEAP8[$761+6>>0]=HEAP8[$$sroa$5407+6>>0]|0;
     $762 = (($14) + 8|0);
     HEAP32[$762>>2] = $760;
     ;HEAP8[$$sroa$5407+0>>0]=0|0;HEAP8[$$sroa$5407+1>>0]=0|0;HEAP8[$$sroa$5407+2>>0]=0|0;HEAP8[$$sroa$5407+3>>0]=0|0;HEAP8[$$sroa$5407+4>>0]=0|0;HEAP8[$$sroa$5407+5>>0]=0|0;HEAP8[$$sroa$5407+6>>0]=0|0;
     $763 = (($14) + 12|0);
     ;HEAP32[$763+0>>2]=0|0;HEAP32[$763+4>>2]=0|0;HEAP32[$763+8>>2]=0|0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($740,$14);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($14);
     $$pre435 = HEAP8[$15>>0]|0;
     $phitmp482 = $$pre435 & 1;
     $phitmp483 = ($phitmp482<<24>>24)==(0);
     if (!($phitmp483)) {
      $764 = (($15) + 8|0);
      $765 = HEAP32[$764>>2]|0;
      _free($765);
     }
     $766 = HEAP8[$16>>0]|0;
     $767 = $766 & 1;
     $768 = ($767<<24>>24)==(0);
     if (!($768)) {
      $769 = (($16) + 8|0);
      $770 = HEAP32[$769>>2]|0;
      _free($770);
     }
     $771 = HEAP8[$17>>0]|0;
     $772 = $771 & 1;
     $773 = ($772<<24>>24)==(0);
     if (!($773)) {
      $774 = (($17) + 8|0);
      $775 = HEAP32[$774>>2]|0;
      _free($775);
     }
     $776 = HEAP8[$18>>0]|0;
     $777 = $776 & 1;
     $778 = ($777<<24>>24)==(0);
     if (!($778)) {
      $779 = (($18) + 8|0);
      $780 = HEAP32[$779>>2]|0;
      _free($780);
     }
     if ($745) {
      $$0 = $723;
      STACKTOP = sp;return ($$0|0);
     }
     $781 = (($expr$i233) + 8|0);
     $782 = HEAP32[$781>>2]|0;
     _free($782);
     $$0 = $723;
     STACKTOP = sp;return ($$0|0);
     break;
    }
    default: {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    }
   } while(0);
   break;
  }
  case 110:  {
   $1167 = (($t$0) + 1|0);
   $1168 = HEAP8[$1167>>0]|0;
   $1169 = $1168 << 24 >> 24;
   switch ($1169|0) {
   case 119: case 97:  {
    if ($122) {
     $1170 = HEAP8[$first>>0]|0;
     $1171 = ($1170<<24>>24)==(103);
     if ($1171) {
      $1172 = (($first) + 1|0);
      $1173 = HEAP8[$1172>>0]|0;
      $1174 = ($1173<<24>>24)==(115);
      $1175 = (($first) + 2|0);
      $$first$i = $1174 ? $1175 : $first;
      $$pre408 = HEAP8[$$first$i>>0]|0;
      $1177 = $$pre408;$parsed_gs$0$off0$i = $1174;$t$0$i182 = $$first$i;
     } else {
      $1177 = $1170;$parsed_gs$0$off0$i = 0;$t$0$i182 = $first;
     }
     $1176 = ($1177<<24>>24)==(110);
     if ($1176) {
      $1178 = (($t$0$i182) + 1|0);
      $1179 = HEAP8[$1178>>0]|0;
      if ((($1179<<24>>24) == 97) | (($1179<<24>>24) == 119)) {
       $1180 = ($1179<<24>>24)==(97);
       $1181 = (($t$0$i182) + 2|0);
       $1182 = ($1181|0)==($last|0);
       if ($1182) {
        $$0 = $first;
        STACKTOP = sp;return ($$0|0);
       } else {
        $has_expr_list$0$off0$i = 0;$t$1$i = $1181;
       }
       while(1) {
        $1183 = HEAP8[$t$1$i>>0]|0;
        $1184 = ($1183<<24>>24)==(95);
        if ($1184) {
         break;
        }
        $1185 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$1$i,$last,$db)|0);
        $1186 = ($1185|0)==($t$1$i|0);
        $1187 = ($1185|0)==($last|0);
        $or$cond$i = $1186 | $1187;
        if ($or$cond$i) {
         $$0 = $first;
         label = 674;
         break;
        } else {
         $has_expr_list$0$off0$i = 1;$t$1$i = $1185;
        }
       }
       if ((label|0) == 674) {
        STACKTOP = sp;return ($$0|0);
       }
       $1188 = (($t$1$i) + 1|0);
       $1189 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1188,$last,$db)|0);
       $1190 = ($1189|0)==($1188|0);
       $1191 = ($1189|0)==($last|0);
       $or$cond22$i = $1190 | $1191;
       if ($or$cond22$i) {
        $$0 = $first;
        STACKTOP = sp;return ($$0|0);
       }
       $1192 = $1189;
       $1193 = (($118) - ($1192))|0;
       $1194 = ($1193|0)>(2);
       $1195 = HEAP8[$1189>>0]|0;
       $1196 = ($1195<<24>>24)==(112);
       $or$cond = $1194 & $1196;
       do {
        if ($or$cond) {
         $1197 = (($1189) + 1|0);
         $1198 = HEAP8[$1197>>0]|0;
         $1199 = ($1198<<24>>24)==(105);
         if (!($1199)) {
          $$0 = $first;
          STACKTOP = sp;return ($$0|0);
         }
         $1200 = (($1189) + 2|0);
         $t$2$i = $1200;
         while(1) {
          $1201 = HEAP8[$t$2$i>>0]|0;
          $1202 = ($1201<<24>>24)==(69);
          if ($1202) {
           break;
          }
          $1203 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($t$2$i,$last,$db)|0);
          $1204 = ($1203|0)==($t$2$i|0);
          $1205 = ($1203|0)==($last|0);
          $or$cond23$i = $1204 | $1205;
          if ($or$cond23$i) {
           $$0 = $first;
           label = 674;
           break;
          } else {
           $t$2$i = $1203;
          }
         }
         if ((label|0) == 674) {
          STACKTOP = sp;return ($$0|0);
         }
         ;HEAP32[$init_list$i+0>>2]=0|0;HEAP32[$init_list$i+4>>2]=0|0;HEAP32[$init_list$i+8>>2]=0|0;
         $1207 = HEAP32[$db>>2]|0;
         $1208 = (($db) + 4|0);
         $1209 = HEAP32[$1208>>2]|0;
         $1210 = ($1207|0)==($1209|0);
         if ($1210) {
          $$0 = $first;
          STACKTOP = sp;return ($$0|0);
         }
         $1211 = (($1209) + -24|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($21,$1211);
         ;HEAP32[$init_list$i+0>>2]=HEAP32[$21+0>>2]|0;HEAP32[$init_list$i+4>>2]=HEAP32[$21+4>>2]|0;HEAP32[$init_list$i+8>>2]=HEAP32[$21+8>>2]|0;
         ;HEAP32[$21+0>>2]=0|0;HEAP32[$21+4>>2]=0|0;HEAP32[$21+8>>2]=0|0;
         $$pre438 = HEAP32[$1208>>2]|0;
         $1212 = (($$pre438) + -24|0);
         $1214 = $$pre438;
         while(1) {
          $1213 = (($1214) + -24|0);
          HEAP32[$1208>>2] = $1213;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1213);
          $1215 = HEAP32[$1208>>2]|0;
          $1216 = ($1215|0)==($1212|0);
          if ($1216) {
           $$pre$phiZ2D = $db;$1220 = $1212;$has_init$0$off0$i414417 = 1;$t$3$i413419 = $t$2$i;
           break;
          } else {
           $1214 = $1215;
          }
         }
        } else {
         $1206 = ($1195<<24>>24)==(69);
         if ($1206) {
          ;HEAP32[$init_list$i+0>>2]=0|0;HEAP32[$init_list$i+4>>2]=0|0;HEAP32[$init_list$i+8>>2]=0|0;
          $$phi$trans$insert = (($db) + 4|0);
          $$pre411 = HEAP32[$$phi$trans$insert>>2]|0;
          $$pre$phiZ2D = $db;$1220 = $$pre411;$has_init$0$off0$i414417 = 0;$t$3$i413419 = $1189;
          break;
         } else {
          $$0 = $first;
          STACKTOP = sp;return ($$0|0);
         }
        }
       } while(0);
       $1217 = HEAP32[$$pre$phiZ2D>>2]|0;
       $1218 = (($db) + 4|0);
       $1219 = ($1217|0)==($1220|0);
       if ($1219) {
        $$pre439 = HEAP8[$init_list$i>>0]|0;
        $phitmp476 = $$pre439 & 1;
        $phitmp477 = ($phitmp476<<24>>24)==(0);
        if ($phitmp477) {
         $$0 = $first;
         STACKTOP = sp;return ($$0|0);
        }
        $1325 = (($init_list$i) + 8|0);
        $1326 = HEAP32[$1325>>2]|0;
        _free($1326);
        $$0 = $first;
        STACKTOP = sp;return ($$0|0);
       }
       $1221 = (($1220) + -24|0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($type$i,$1221);
       $1222 = HEAP32[$1218>>2]|0;
       $1223 = (($1222) + -24|0);
       $1225 = $1222;
       while(1) {
        $1224 = (($1225) + -24|0);
        HEAP32[$1218>>2] = $1224;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1224);
        $1226 = HEAP32[$1218>>2]|0;
        $1227 = ($1226|0)==($1223|0);
        if ($1227) {
         break;
        } else {
         $1225 = $1226;
        }
       }
       ;HEAP32[$expr_list$i+0>>2]=0|0;HEAP32[$expr_list$i+4>>2]=0|0;HEAP32[$expr_list$i+8>>2]=0|0;
       if ($has_expr_list$0$off0$i) {
        $1228 = HEAP32[$$pre$phiZ2D>>2]|0;
        $1229 = ($1228|0)==($1223|0);
        if ($1229) {
         $$019$i = $first;$$2$i215 = 1;
        } else {
         $1230 = (($1222) + -48|0);
         __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($22,$1230);
         ;HEAP32[$expr_list$i+0>>2]=HEAP32[$22+0>>2]|0;HEAP32[$expr_list$i+4>>2]=HEAP32[$22+4>>2]|0;HEAP32[$expr_list$i+8>>2]=HEAP32[$22+8>>2]|0;
         ;HEAP32[$22+0>>2]=0|0;HEAP32[$22+4>>2]=0|0;HEAP32[$22+8>>2]=0|0;
         $$pre440 = HEAP32[$1218>>2]|0;
         $1231 = (($$pre440) + -24|0);
         $1233 = $$pre440;
         while(1) {
          $1232 = (($1233) + -24|0);
          HEAP32[$1218>>2] = $1232;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1232);
          $1234 = HEAP32[$1218>>2]|0;
          $1235 = ($1234|0)==($1231|0);
          if ($1235) {
           label = 374;
           break;
          } else {
           $1233 = $1234;
          }
         }
        }
       } else {
        label = 374;
       }
       do {
        if ((label|0) == 374) {
         ;HEAP32[$r$i+0>>2]=0|0;HEAP32[$r$i+4>>2]=0|0;HEAP32[$r$i+8>>2]=0|0;
         if ($parsed_gs$0$off0$i) {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($r$i,48888,2);
         }
         if ($1180) {
          (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($r$i,49128,3)|0);
         } else {
          (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($r$i,48816,1)|0);
         }
         do {
          if ($has_expr_list$0$off0$i) {
           __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($24,48744,$expr_list$i);
           $1236 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($24,49136,2)|0);
           ;HEAP32[$23+0>>2]=HEAP32[$1236+0>>2]|0;HEAP32[$23+4>>2]=HEAP32[$1236+4>>2]|0;HEAP32[$23+8>>2]=HEAP32[$1236+8>>2]|0;
           ;HEAP32[$1236+0>>2]=0|0;HEAP32[$1236+4>>2]=0|0;HEAP32[$1236+8>>2]=0|0;
           $1237 = HEAP8[$23>>0]|0;
           $1238 = $1237 & 1;
           $1239 = ($1238<<24>>24)==(0);
           if ($1239) {
            $1244 = (($23) + 1|0);
            $1245 = $1237&255;
            $1246 = $1245 >>> 1;
            $1247 = $1244;$1248 = $1246;
           } else {
            $1240 = (($23) + 8|0);
            $1241 = HEAP32[$1240>>2]|0;
            $1242 = (($23) + 4|0);
            $1243 = HEAP32[$1242>>2]|0;
            $1247 = $1241;$1248 = $1243;
           }
           (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($r$i,$1247,$1248)|0);
           if (!($1239)) {
            $1249 = (($23) + 8|0);
            $1250 = HEAP32[$1249>>2]|0;
            _free($1250);
           }
           $1251 = HEAP8[$24>>0]|0;
           $1252 = $1251 & 1;
           $1253 = ($1252<<24>>24)==(0);
           if ($1253) {
            break;
           }
           $1254 = (($24) + 8|0);
           $1255 = HEAP32[$1254>>2]|0;
           _free($1255);
          }
         } while(0);
         $1256 = HEAP8[$type$i>>0]|0;
         $1257 = $1256 & 1;
         $1258 = ($1257<<24>>24)==(0);
         if ($1258) {
          $1263 = (($type$i) + 1|0);
          $1264 = $1256&255;
          $1265 = $1264 >>> 1;
          $1266 = $1263;$1267 = $1265;
         } else {
          $1259 = (($type$i) + 8|0);
          $1260 = HEAP32[$1259>>2]|0;
          $1261 = (($type$i) + 4|0);
          $1262 = HEAP32[$1261>>2]|0;
          $1266 = $1260;$1267 = $1262;
         }
         (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($r$i,$1266,$1267)|0);
         do {
          if ($has_init$0$off0$i414417) {
           __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($26,48728,$init_list$i);
           $1268 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($26,48736,1)|0);
           ;HEAP32[$25+0>>2]=HEAP32[$1268+0>>2]|0;HEAP32[$25+4>>2]=HEAP32[$1268+4>>2]|0;HEAP32[$25+8>>2]=HEAP32[$1268+8>>2]|0;
           ;HEAP32[$1268+0>>2]=0|0;HEAP32[$1268+4>>2]=0|0;HEAP32[$1268+8>>2]=0|0;
           $1269 = HEAP8[$25>>0]|0;
           $1270 = $1269 & 1;
           $1271 = ($1270<<24>>24)==(0);
           if ($1271) {
            $1276 = (($25) + 1|0);
            $1277 = $1269&255;
            $1278 = $1277 >>> 1;
            $1279 = $1276;$1280 = $1278;
           } else {
            $1272 = (($25) + 8|0);
            $1273 = HEAP32[$1272>>2]|0;
            $1274 = (($25) + 4|0);
            $1275 = HEAP32[$1274>>2]|0;
            $1279 = $1273;$1280 = $1275;
           }
           (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($r$i,$1279,$1280)|0);
           if (!($1271)) {
            $1281 = (($25) + 8|0);
            $1282 = HEAP32[$1281>>2]|0;
            _free($1282);
           }
           $1283 = HEAP8[$26>>0]|0;
           $1284 = $1283 & 1;
           $1285 = ($1284<<24>>24)==(0);
           if ($1285) {
            break;
           }
           $1286 = (($26) + 8|0);
           $1287 = HEAP32[$1286>>2]|0;
           _free($1287);
          }
         } while(0);
         $1288 = HEAP8[$r$i>>0]|0;
         $1289 = (($r$i) + 1|0);
         ;HEAP8[$$sroa$6404+0>>0]=HEAP8[$1289+0>>0]|0;HEAP8[$$sroa$6404+1>>0]=HEAP8[$1289+1>>0]|0;HEAP8[$$sroa$6404+2>>0]=HEAP8[$1289+2>>0]|0;HEAP8[$$sroa$6404+3>>0]=HEAP8[$1289+3>>0]|0;HEAP8[$$sroa$6404+4>>0]=HEAP8[$1289+4>>0]|0;HEAP8[$$sroa$6404+5>>0]=HEAP8[$1289+5>>0]|0;HEAP8[$$sroa$6404+6>>0]=HEAP8[$1289+6>>0]|0;
         $1290 = (($r$i) + 8|0);
         $1291 = HEAP32[$1290>>2]|0;
         ;HEAP32[$r$i+0>>2]=0|0;HEAP32[$r$i+4>>2]=0|0;HEAP32[$r$i+8>>2]=0|0;
         HEAP8[$27>>0] = $1288;
         $1292 = (($27) + 1|0);
         ;HEAP8[$1292+0>>0]=HEAP8[$$sroa$6404+0>>0]|0;HEAP8[$1292+1>>0]=HEAP8[$$sroa$6404+1>>0]|0;HEAP8[$1292+2>>0]=HEAP8[$$sroa$6404+2>>0]|0;HEAP8[$1292+3>>0]=HEAP8[$$sroa$6404+3>>0]|0;HEAP8[$1292+4>>0]=HEAP8[$$sroa$6404+4>>0]|0;HEAP8[$1292+5>>0]=HEAP8[$$sroa$6404+5>>0]|0;HEAP8[$1292+6>>0]=HEAP8[$$sroa$6404+6>>0]|0;
         $1293 = (($27) + 8|0);
         HEAP32[$1293>>2] = $1291;
         ;HEAP8[$$sroa$6404+0>>0]=0|0;HEAP8[$$sroa$6404+1>>0]=0|0;HEAP8[$$sroa$6404+2>>0]=0|0;HEAP8[$$sroa$6404+3>>0]=0|0;HEAP8[$$sroa$6404+4>>0]=0|0;HEAP8[$$sroa$6404+5>>0]=0|0;HEAP8[$$sroa$6404+6>>0]=0|0;
         $1294 = (($27) + 12|0);
         ;HEAP32[$1294+0>>2]=0|0;HEAP32[$1294+4>>2]=0|0;HEAP32[$1294+8>>2]=0|0;
         $1295 = HEAP32[$1218>>2]|0;
         $1296 = (($db) + 8|0);
         $1297 = HEAP32[$1296>>2]|0;
         $1298 = ($1295>>>0)<($1297>>>0);
         if ($1298) {
          $1299 = ($1295|0)==(0|0);
          if ($1299) {
           $1302 = 0;
          } else {
           ;HEAP32[$1295+0>>2]=HEAP32[$27+0>>2]|0;HEAP32[$1295+4>>2]=HEAP32[$27+4>>2]|0;HEAP32[$1295+8>>2]=HEAP32[$27+8>>2]|0;
           ;HEAP32[$27+0>>2]=0|0;HEAP32[$27+4>>2]=0|0;HEAP32[$27+8>>2]=0|0;
           $1300 = (($1295) + 12|0);
           ;HEAP32[$1300+0>>2]=HEAP32[$1294+0>>2]|0;HEAP32[$1300+4>>2]=HEAP32[$1294+4>>2]|0;HEAP32[$1300+8>>2]=HEAP32[$1294+8>>2]|0;
           ;HEAP32[$1294+0>>2]=0|0;HEAP32[$1294+4>>2]=0|0;HEAP32[$1294+8>>2]=0|0;
           $$pre$i$i208 = HEAP32[$1218>>2]|0;
           $1302 = $$pre$i$i208;
          }
          $1301 = (($1302) + 24|0);
          HEAP32[$1218>>2] = $1301;
         } else {
          $1303 = (($db) + 12|0);
          $1304 = HEAP32[$$pre$phiZ2D>>2]|0;
          $1305 = $1295;
          $1306 = $1304;
          $1307 = (($1305) - ($1306))|0;
          $1308 = (($1307|0) / 24)&-1;
          $1309 = (($1308) + 1)|0;
          $1310 = ($1309|0)<(0);
          if ($1310) {
           __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
           // unreachable;
          }
          $1311 = $1297;
          $1312 = (($1311) - ($1306))|0;
          $1313 = (($1312|0) / 24)&-1;
          $1314 = ($1313>>>0)<(1073741823);
          if ($1314) {
           $1315 = $1313 << 1;
           $1316 = ($1315>>>0)<($1309>>>0);
           $1317 = $1316 ? $1309 : $1315;
           $$0$i$i$i$i211 = $1317;
          } else {
           $$0$i$i$i$i211 = 2147483647;
          }
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($$sroa$5422,$$0$i$i$i$i211,$1308,$1303);
          $1318 = (($$sroa$5422) + 8|0);
          $1319 = HEAP32[$1318>>2]|0;
          $1320 = ($1319|0)==(0|0);
          if (!($1320)) {
           ;HEAP32[$1319+0>>2]=HEAP32[$27+0>>2]|0;HEAP32[$1319+4>>2]=HEAP32[$27+4>>2]|0;HEAP32[$1319+8>>2]=HEAP32[$27+8>>2]|0;
           ;HEAP32[$27+0>>2]=0|0;HEAP32[$27+4>>2]=0|0;HEAP32[$27+8>>2]=0|0;
           $1321 = (($1319) + 12|0);
           ;HEAP32[$1321+0>>2]=HEAP32[$1294+0>>2]|0;HEAP32[$1321+4>>2]=HEAP32[$1294+4>>2]|0;HEAP32[$1321+8>>2]=HEAP32[$1294+8>>2]|0;
           ;HEAP32[$1294+0>>2]=0|0;HEAP32[$1294+4>>2]=0|0;HEAP32[$1294+8>>2]=0|0;
          }
          $1322 = (($1319) + 24|0);
          HEAP32[$1318>>2] = $1322;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$$sroa$5422);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($$sroa$5422);
         }
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27);
         $$pre441 = HEAP8[$r$i>>0]|0;
         $phitmp474 = $$pre441 & 1;
         $phitmp475 = ($phitmp474<<24>>24)==(0);
         $1323 = (($t$3$i413419) + 1|0);
         if ($phitmp475) {
          $$019$i = $1323;$$2$i215 = 0;
          break;
         }
         $1324 = HEAP32[$1290>>2]|0;
         _free($1324);
         $$019$i = $1323;$$2$i215 = 0;
        }
       } while(0);
       $1327 = HEAP8[$expr_list$i>>0]|0;
       $1328 = $1327 & 1;
       $1329 = ($1328<<24>>24)==(0);
       if (!($1329)) {
        $1330 = (($expr_list$i) + 8|0);
        $1331 = HEAP32[$1330>>2]|0;
        _free($1331);
       }
       $1332 = HEAP8[$type$i>>0]|0;
       $1333 = $1332 & 1;
       $1334 = ($1333<<24>>24)==(0);
       if (!($1334)) {
        $1335 = (($type$i) + 8|0);
        $1336 = HEAP32[$1335>>2]|0;
        _free($1336);
       }
       $1337 = HEAP8[$init_list$i>>0]|0;
       $1338 = $1337 & 1;
       $1339 = ($1338<<24>>24)==(0);
       if (!($1339)) {
        $1340 = (($init_list$i) + 8|0);
        $1341 = HEAP32[$1340>>2]|0;
        _free($1341);
       }
       if ($$2$i215) {
        $$0 = $first;
        STACKTOP = sp;return ($$0|0);
       } else {
        $$221$i = $$019$i;
       }
      } else {
       $$221$i = $first;
      }
     } else {
      $$221$i = $first;
     }
    } else {
     $$221$i = $first;
    }
    $$0 = $$221$i;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 101:  {
    $1342 = (($first) + 2|0);
    HEAP8[$93>>0] = 4;
    $1343 = (($93) + 1|0);
    HEAP8[$1343>>0]=15649&255;HEAP8[$1343+1>>0]=15649>>8;
    $1344 = (($93) + 3|0);
    HEAP8[$1344>>0] = 0;
    $1345 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1342,$last,$93,$db)|0);
    $1346 = ($1345|0)==($1342|0);
    $first$56 = $1346 ? $first : $1345;
    $$0 = $first$56;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 103:  {
    $1347 = (($first) + 2|0);
    HEAP8[$94>>0] = 2;
    $1348 = (($94) + 1|0);
    HEAP8[$1348>>0] = 45;
    $1349 = (($94) + 2|0);
    HEAP8[$1349>>0] = 0;
    $1350 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1347,$last,$94,$db)|0);
    $1351 = ($1350|0)==($1347|0);
    $first$57 = $1351 ? $first : $1350;
    $$0 = $first$57;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 116:  {
    $1352 = (($first) + 2|0);
    HEAP8[$95>>0] = 2;
    $1353 = (($95) + 1|0);
    HEAP8[$1353>>0] = 33;
    $1354 = (($95) + 2|0);
    HEAP8[$1354>>0] = 0;
    $1355 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1352,$last,$95,$db)|0);
    $1356 = ($1355|0)==($1352|0);
    $first$58 = $1356 ? $first : $1355;
    $$0 = $first$58;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 120:  {
    $1357 = (($first) + 2|0);
    $1358 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1357,$last,$db)|0);
    $1359 = ($1358|0)==($1357|0);
    if ($1359) {
     $$03$i180 = $1357;
    } else {
     $1360 = HEAP32[$db>>2]|0;
     $1361 = (($db) + 4|0);
     $1362 = HEAP32[$1361>>2]|0;
     $1363 = ($1360|0)==($1362|0);
     if ($1363) {
      $$03$i180 = $1357;
     } else {
      $1364 = (($1362) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($1,$1364);
      $1365 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($1,0,49112,10)|0);
      ;HEAP32[$0+0>>2]=HEAP32[$1365+0>>2]|0;HEAP32[$0+4>>2]=HEAP32[$1365+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$1365+8>>2]|0;
      ;HEAP32[$1365+0>>2]=0|0;HEAP32[$1365+4>>2]=0|0;HEAP32[$1365+8>>2]=0|0;
      $1366 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($0,48736,1)|0);
      $1367 = HEAP8[$1366>>0]|0;
      $1368 = (($1366) + 1|0);
      ;HEAP8[$$sroa$5422+0>>0]=HEAP8[$1368+0>>0]|0;HEAP8[$$sroa$5422+1>>0]=HEAP8[$1368+1>>0]|0;HEAP8[$$sroa$5422+2>>0]=HEAP8[$1368+2>>0]|0;HEAP8[$$sroa$5422+3>>0]=HEAP8[$1368+3>>0]|0;HEAP8[$$sroa$5422+4>>0]=HEAP8[$1368+4>>0]|0;HEAP8[$$sroa$5422+5>>0]=HEAP8[$1368+5>>0]|0;HEAP8[$$sroa$5422+6>>0]=HEAP8[$1368+6>>0]|0;
      $1369 = (($1366) + 8|0);
      $1370 = HEAP32[$1369>>2]|0;
      ;HEAP32[$1366+0>>2]=0|0;HEAP32[$1366+4>>2]=0|0;HEAP32[$1366+8>>2]=0|0;
      $1371 = HEAP8[$1364>>0]|0;
      $1372 = $1371 & 1;
      $1373 = ($1372<<24>>24)==(0);
      do {
       if ($1373) {
        $1374 = (($1364) + 1|0);
        HEAP8[$1374>>0] = 0;
        HEAP8[$1364>>0] = 0;
       } else {
        $1375 = (($1362) + -16|0);
        $1376 = HEAP32[$1375>>2]|0;
        HEAP8[$1376>>0] = 0;
        $1377 = (($1362) + -20|0);
        HEAP32[$1377>>2] = 0;
        $$pre$i$i$i$i = HEAP8[$1364>>0]|0;
        $1378 = $$pre$i$i$i$i & 1;
        $1379 = ($1378<<24>>24)==(0);
        if ($1379) {
         $1384 = $$pre$i$i$i$i;$1393 = 10;
        } else {
         $1380 = HEAP32[$1364>>2]|0;
         $1381 = $1380 & -2;
         $phitmp$i$i$i$i$i$i$i = (($1381) + -1)|0;
         $1382 = $1380&255;
         $1384 = $1382;$1393 = $phitmp$i$i$i$i$i$i$i;
        }
        $1383 = $1384 & 1;
        $1385 = ($1383<<24>>24)==(0);
        if ($1385) {
         $1386 = $1384&255;
         $1387 = $1386 >>> 1;
         $1388 = ($1384&255)<(22);
         if ($1388) {
          $1392 = 10;$1412 = $1387;$2140 = 1;
         } else {
          $1389 = (($1387) + 16)|0;
          $1390 = $1389 & 240;
          $phitmp$i2$i$i$i$i$i$i = (($1390) + -1)|0;
          $1392 = $phitmp$i2$i$i$i$i$i$i;$1412 = $1387;$2140 = 1;
         }
        } else {
         $1392 = 10;$1412 = 0;$2140 = 0;
        }
        $1391 = ($1392|0)==($1393|0);
        if (!($1391)) {
         $1394 = ($1392|0)==(10);
         if ($1394) {
          $1399 = (($1364) + 1|0);
          $1400 = HEAP32[$1375>>2]|0;
          if ($2140) {
           $1401 = $1384&255;
           $1402 = $1401 >>> 1;
           $1403 = (($1402) + 1)|0;
           _memcpy(($1399|0),($1400|0),($1403|0))|0;
           _free($1400);
          } else {
           $1408 = HEAP8[$1400>>0]|0;
           HEAP8[$1399>>0] = $1408;
           _free($1400);
          }
          $1413 = $1412 << 1;
          $1414 = $1413&255;
          HEAP8[$1364>>0] = $1414;
          break;
         }
         $1395 = ($1392>>>0)<=($1393>>>0);
         $1396 = (($1392) + 1)|0;
         $1397 = (_malloc($1396)|0);
         $1398 = ($1397|0)==(0|0);
         $or$cond$i$i$i$i$i$i = $1395 & $1398;
         if (!($or$cond$i$i$i$i$i$i)) {
          if ($2140) {
           $1404 = (($1364) + 1|0);
           $1405 = $1384&255;
           $1406 = $1405 >>> 1;
           $1407 = (($1406) + 1)|0;
           _memcpy(($1397|0),($1404|0),($1407|0))|0;
          } else {
           $1409 = HEAP32[$1375>>2]|0;
           $1410 = HEAP8[$1409>>0]|0;
           HEAP8[$1397>>0] = $1410;
           _free($1409);
          }
          $1411 = $1396 | 1;
          HEAP32[$1364>>2] = $1411;
          HEAP32[$1377>>2] = $1412;
          HEAP32[$1375>>2] = $1397;
         }
        }
       }
      } while(0);
      HEAP8[$1364>>0] = $1367;
      $1415 = (($1362) + -23|0);
      ;HEAP8[$1415+0>>0]=HEAP8[$$sroa$5422+0>>0]|0;HEAP8[$1415+1>>0]=HEAP8[$$sroa$5422+1>>0]|0;HEAP8[$1415+2>>0]=HEAP8[$$sroa$5422+2>>0]|0;HEAP8[$1415+3>>0]=HEAP8[$$sroa$5422+3>>0]|0;HEAP8[$1415+4>>0]=HEAP8[$$sroa$5422+4>>0]|0;HEAP8[$1415+5>>0]=HEAP8[$$sroa$5422+5>>0]|0;HEAP8[$1415+6>>0]=HEAP8[$$sroa$5422+6>>0]|0;
      $1416 = (($1362) + -16|0);
      HEAP32[$1416>>2] = $1370;
      ;HEAP8[$$sroa$5422+0>>0]=0|0;HEAP8[$$sroa$5422+1>>0]=0|0;HEAP8[$$sroa$5422+2>>0]=0|0;HEAP8[$$sroa$5422+3>>0]=0|0;HEAP8[$$sroa$5422+4>>0]=0|0;HEAP8[$$sroa$5422+5>>0]=0|0;HEAP8[$$sroa$5422+6>>0]=0|0;
      $$pre442 = HEAP8[$0>>0]|0;
      $phitmp472 = $$pre442 & 1;
      $phitmp473 = ($phitmp472<<24>>24)==(0);
      if (!($phitmp473)) {
       $1417 = (($0) + 8|0);
       $1418 = HEAP32[$1417>>2]|0;
       _free($1418);
      }
      $1419 = HEAP8[$1>>0]|0;
      $1420 = $1419 & 1;
      $1421 = ($1420<<24>>24)==(0);
      if ($1421) {
       $$03$i180 = $1358;
      } else {
       $1422 = (($1) + 8|0);
       $1423 = HEAP32[$1422>>2]|0;
       _free($1423);
       $$03$i180 = $1358;
      }
     }
    }
    $1424 = ($$03$i180|0)==($1357|0);
    $first$59 = $1424 ? $first : $$03$i180;
    $$0 = $first$59;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  case 76:  {
   $131 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
   $$0 = $131;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 111:  {
   $1425 = (($t$0) + 1|0);
   $1426 = HEAP8[$1425>>0]|0;
   $1427 = $1426 << 24 >> 24;
   if ((($1427|0) == 110)) {
    $1428 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
    $$0 = $1428;
    STACKTOP = sp;return ($$0|0);
   } else if ((($1427|0) == 111)) {
    $1429 = (($first) + 2|0);
    HEAP8[$96>>0] = 4;
    $1430 = (($96) + 1|0);
    HEAP8[$1430>>0]=31868&255;HEAP8[$1430+1>>0]=31868>>8;
    $1431 = (($96) + 3|0);
    HEAP8[$1431>>0] = 0;
    $1432 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1429,$last,$96,$db)|0);
    $1433 = ($1432|0)==($1429|0);
    $first$60 = $1433 ? $first : $1432;
    $$0 = $first$60;
    STACKTOP = sp;return ($$0|0);
   } else if ((($1427|0) == 114)) {
    $1434 = (($first) + 2|0);
    HEAP8[$97>>0] = 2;
    $1435 = (($97) + 1|0);
    HEAP8[$1435>>0] = 124;
    $1436 = (($97) + 2|0);
    HEAP8[$1436>>0] = 0;
    $1437 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1434,$last,$97,$db)|0);
    $1438 = ($1437|0)==($1434|0);
    $first$61 = $1438 ? $first : $1437;
    $$0 = $first$61;
    STACKTOP = sp;return ($$0|0);
   } else if ((($1427|0) == 82)) {
    $1439 = (($first) + 2|0);
    HEAP8[$98>>0] = 4;
    $1440 = (($98) + 1|0);
    HEAP8[$1440>>0]=15740&255;HEAP8[$1440+1>>0]=15740>>8;
    $1441 = (($98) + 3|0);
    HEAP8[$1441>>0] = 0;
    $1442 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1439,$last,$98,$db)|0);
    $1443 = ($1442|0)==($1439|0);
    $first$62 = $1443 ? $first : $1442;
    $$0 = $first$62;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 112:  {
   $1444 = (($t$0) + 1|0);
   $1445 = HEAP8[$1444>>0]|0;
   $1446 = $1445 << 24 >> 24;
   switch ($1446|0) {
   case 109:  {
    $1447 = (($first) + 2|0);
    HEAP8[$99>>0] = 6;
    $1448 = (($99) + 1|0);
    ;HEAP8[$1448+0>>0]=HEAP8[48952+0>>0]|0;HEAP8[$1448+1>>0]=HEAP8[48952+1>>0]|0;HEAP8[$1448+2>>0]=HEAP8[48952+2>>0]|0;
    $1449 = (($99) + 4|0);
    HEAP8[$1449>>0] = 0;
    $1450 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1447,$last,$99,$db)|0);
    $1451 = ($1450|0)==($1447|0);
    $first$63 = $1451 ? $first : $1450;
    $$0 = $first$63;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 108:  {
    $1452 = (($first) + 2|0);
    HEAP8[$100>>0] = 2;
    $1453 = (($100) + 1|0);
    HEAP8[$1453>>0] = 43;
    $1454 = (($100) + 2|0);
    HEAP8[$1454>>0] = 0;
    $1455 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1452,$last,$100,$db)|0);
    $1456 = ($1455|0)==($1452|0);
    $first$64 = $1456 ? $first : $1455;
    $$0 = $first$64;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 76:  {
    $1457 = (($first) + 2|0);
    HEAP8[$101>>0] = 4;
    $1458 = (($101) + 1|0);
    HEAP8[$1458>>0]=15659&255;HEAP8[$1458+1>>0]=15659>>8;
    $1459 = (($101) + 3|0);
    HEAP8[$1459>>0] = 0;
    $1460 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1457,$last,$101,$db)|0);
    $1461 = ($1460|0)==($1457|0);
    $first$65 = $1461 ? $first : $1460;
    $$0 = $first$65;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 112:  {
    $1462 = (($first) + 2|0);
    $1463 = ($1462|0)==($last|0);
    if (!($1463)) {
     $1464 = HEAP8[$1462>>0]|0;
     $1465 = ($1464<<24>>24)==(95);
     if ($1465) {
      $1466 = (($first) + 3|0);
      HEAP8[$102>>0] = 4;
      $1467 = (($102) + 1|0);
      HEAP8[$1467>>0]=11051&255;HEAP8[$1467+1>>0]=11051>>8;
      $1468 = (($102) + 3|0);
      HEAP8[$1468>>0] = 0;
      $1469 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1466,$last,$102,$db)|0);
      $1470 = ($1469|0)==($1466|0);
      $first$66 = $1470 ? $first : $1469;
      $$0 = $first$66;
      STACKTOP = sp;return ($$0|0);
     }
    }
    $1471 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1462,$last,$db)|0);
    $1472 = ($1471|0)==($1462|0);
    if ($1472) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1473 = HEAP32[$db>>2]|0;
    $1474 = (($db) + 4|0);
    $1475 = HEAP32[$1474>>2]|0;
    $1476 = ($1473|0)==($1475|0);
    if ($1476) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1477 = (($1475) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($105,$1477);
    $1478 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($105,0,48744,1)|0);
    ;HEAP32[$104+0>>2]=HEAP32[$1478+0>>2]|0;HEAP32[$104+4>>2]=HEAP32[$1478+4>>2]|0;HEAP32[$104+8>>2]=HEAP32[$1478+8>>2]|0;
    ;HEAP32[$1478+0>>2]=0|0;HEAP32[$1478+4>>2]=0|0;HEAP32[$1478+8>>2]=0|0;
    $1479 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($104,48960,3)|0);
    $1480 = HEAP8[$1479>>0]|0;
    $1481 = (($1479) + 1|0);
    ;HEAP8[$$sroa$4364+0>>0]=HEAP8[$1481+0>>0]|0;HEAP8[$$sroa$4364+1>>0]=HEAP8[$1481+1>>0]|0;HEAP8[$$sroa$4364+2>>0]=HEAP8[$1481+2>>0]|0;HEAP8[$$sroa$4364+3>>0]=HEAP8[$1481+3>>0]|0;HEAP8[$$sroa$4364+4>>0]=HEAP8[$1481+4>>0]|0;HEAP8[$$sroa$4364+5>>0]=HEAP8[$1481+5>>0]|0;HEAP8[$$sroa$4364+6>>0]=HEAP8[$1481+6>>0]|0;
    $1482 = (($1479) + 8|0);
    $1483 = HEAP32[$1482>>2]|0;
    ;HEAP32[$1479+0>>2]=0|0;HEAP32[$1479+4>>2]=0|0;HEAP32[$1479+8>>2]=0|0;
    HEAP8[$103>>0] = $1480;
    $1484 = (($103) + 1|0);
    ;HEAP8[$1484+0>>0]=HEAP8[$$sroa$4364+0>>0]|0;HEAP8[$1484+1>>0]=HEAP8[$$sroa$4364+1>>0]|0;HEAP8[$1484+2>>0]=HEAP8[$$sroa$4364+2>>0]|0;HEAP8[$1484+3>>0]=HEAP8[$$sroa$4364+3>>0]|0;HEAP8[$1484+4>>0]=HEAP8[$$sroa$4364+4>>0]|0;HEAP8[$1484+5>>0]=HEAP8[$$sroa$4364+5>>0]|0;HEAP8[$1484+6>>0]=HEAP8[$$sroa$4364+6>>0]|0;
    $1485 = (($103) + 8|0);
    HEAP32[$1485>>2] = $1483;
    ;HEAP8[$$sroa$4364+0>>0]=0|0;HEAP8[$$sroa$4364+1>>0]=0|0;HEAP8[$$sroa$4364+2>>0]=0|0;HEAP8[$$sroa$4364+3>>0]=0|0;HEAP8[$$sroa$4364+4>>0]=0|0;HEAP8[$$sroa$4364+5>>0]=0|0;HEAP8[$$sroa$4364+6>>0]=0|0;
    $1486 = (($103) + 12|0);
    ;HEAP32[$1486+0>>2]=0|0;HEAP32[$1486+4>>2]=0|0;HEAP32[$1486+8>>2]=0|0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1477,$103);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($103);
    $$pre443 = HEAP8[$104>>0]|0;
    $phitmp470 = $$pre443 & 1;
    $phitmp471 = ($phitmp470<<24>>24)==(0);
    if (!($phitmp471)) {
     $1487 = (($104) + 8|0);
     $1488 = HEAP32[$1487>>2]|0;
     _free($1488);
    }
    $1489 = HEAP8[$105>>0]|0;
    $1490 = $1489 & 1;
    $1491 = ($1490<<24>>24)==(0);
    if ($1491) {
     $$0 = $1471;
     STACKTOP = sp;return ($$0|0);
    }
    $1492 = (($105) + 8|0);
    $1493 = HEAP32[$1492>>2]|0;
    _free($1493);
    $$0 = $1471;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 115:  {
    $1494 = (($first) + 2|0);
    HEAP8[$106>>0] = 2;
    $1495 = (($106) + 1|0);
    HEAP8[$1495>>0] = 43;
    $1496 = (($106) + 2|0);
    HEAP8[$1496>>0] = 0;
    $1497 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1494,$last,$106,$db)|0);
    $1498 = ($1497|0)==($1494|0);
    $first$67 = $1498 ? $first : $1497;
    $$0 = $first$67;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 116:  {
    $1499 = ($120|0)>(2);
    if (!($1499)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1500 = HEAP8[$first>>0]|0;
    $1501 = ($1500<<24>>24)==(112);
    if (!($1501)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1502 = (($first) + 1|0);
    $1503 = HEAP8[$1502>>0]|0;
    $1504 = ($1503<<24>>24)==(116);
    if (!($1504)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1505 = (($first) + 2|0);
    $1506 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1505,$last,$db)|0);
    $1507 = ($1506|0)==($1505|0);
    if ($1507) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1508 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1506,$last,$db)|0);
    $1509 = ($1508|0)==($1506|0);
    if ($1509) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1510 = (($db) + 4|0);
    $1511 = HEAP32[$1510>>2]|0;
    $1512 = HEAP32[$db>>2]|0;
    $1513 = $1511;
    $1514 = $1512;
    $1515 = (($1513) - ($1514))|0;
    $1516 = (($1515|0) / 24)&-1;
    $1517 = ($1516>>>0)<(2);
    if ($1517) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1518 = (($1511) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp$i170,$1518);
    $1519 = HEAP32[$1510>>2]|0;
    $1520 = (($1519) + -24|0);
    $1522 = $1519;
    while(1) {
     $1521 = (($1522) + -24|0);
     HEAP32[$1510>>2] = $1521;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1521);
     $1523 = HEAP32[$1510>>2]|0;
     $1524 = ($1523|0)==($1520|0);
     if ($1524) {
      break;
     } else {
      $1522 = $1523;
     }
    }
    $1525 = (($1519) + -48|0);
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1525,49104,2)|0);
    $1526 = HEAP32[$1510>>2]|0;
    $1527 = (($1526) + -24|0);
    $1528 = HEAP8[$tmp$i170>>0]|0;
    $1529 = $1528 & 1;
    $1530 = ($1529<<24>>24)==(0);
    if ($1530) {
     $1535 = (($tmp$i170) + 1|0);
     $1536 = $1528&255;
     $1537 = $1536 >>> 1;
     $1538 = $1535;$1539 = $1537;
    } else {
     $1531 = (($tmp$i170) + 8|0);
     $1532 = HEAP32[$1531>>2]|0;
     $1533 = (($tmp$i170) + 4|0);
     $1534 = HEAP32[$1533>>2]|0;
     $1538 = $1532;$1539 = $1534;
    }
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1527,$1538,$1539)|0);
    if ($1530) {
     $$0 = $1508;
     STACKTOP = sp;return ($$0|0);
    }
    $1540 = (($tmp$i170) + 8|0);
    $1541 = HEAP32[$1540>>2]|0;
    _free($1541);
    $$0 = $1508;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  case 113:  {
   $1542 = (($t$0) + 1|0);
   $1543 = HEAP8[$1542>>0]|0;
   $1544 = ($1543<<24>>24)==(117);
   if (!($1544)) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1545 = (($first) + 2|0);
   $1546 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1545,$last,$db)|0);
   $1547 = ($1546|0)==($1545|0);
   if ($1547) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1548 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1546,$last,$db)|0);
   $1549 = ($1548|0)==($1546|0);
   if ($1549) {
    $1654 = (($db) + 4|0);
    $1655 = HEAP32[$1654>>2]|0;
    $1656 = (($1655) + -24|0);
    $1658 = $1655;
    while(1) {
     $1657 = (($1658) + -24|0);
     HEAP32[$1654>>2] = $1657;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1657);
     $1659 = HEAP32[$1654>>2]|0;
     $1660 = ($1659|0)==($1656|0);
     if ($1660) {
      $$0 = $first;
      break;
     } else {
      $1658 = $1659;
     }
    }
    STACKTOP = sp;return ($$0|0);
   }
   $1550 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1548,$last,$db)|0);
   $1551 = ($1550|0)==($1548|0);
   $1552 = (($db) + 4|0);
   $1553 = HEAP32[$1552>>2]|0;
   if ($1551) {
    $1644 = (($1553) + -24|0);
    $1646 = $1553;
    while(1) {
     $1645 = (($1646) + -24|0);
     HEAP32[$1552>>2] = $1645;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1645);
     $1647 = HEAP32[$1552>>2]|0;
     $1648 = ($1647|0)==($1644|0);
     if ($1648) {
      break;
     } else {
      $1646 = $1647;
     }
    }
    $1649 = (($1553) + -48|0);
    $1651 = $1644;
    while(1) {
     $1650 = (($1651) + -24|0);
     HEAP32[$1552>>2] = $1650;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1650);
     $1652 = HEAP32[$1552>>2]|0;
     $1653 = ($1652|0)==($1649|0);
     if ($1653) {
      $$0 = $first;
      break;
     } else {
      $1651 = $1652;
     }
    }
    STACKTOP = sp;return ($$0|0);
   }
   $1554 = HEAP32[$db>>2]|0;
   $1555 = $1553;
   $1556 = $1554;
   $1557 = (($1555) - ($1556))|0;
   $1558 = (($1557|0) / 24)&-1;
   $1559 = ($1558>>>0)<(3);
   if ($1559) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1560 = (($1553) + -24|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op3,$1560);
   $1561 = HEAP32[$1552>>2]|0;
   $1562 = (($1561) + -24|0);
   $1564 = $1561;
   while(1) {
    $1563 = (($1564) + -24|0);
    HEAP32[$1552>>2] = $1563;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1563);
    $1565 = HEAP32[$1552>>2]|0;
    $1566 = ($1565|0)==($1562|0);
    if ($1566) {
     break;
    } else {
     $1564 = $1565;
    }
   }
   $1567 = (($1561) + -48|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op27,$1567);
   $1568 = HEAP32[$1552>>2]|0;
   $1569 = (($1568) + -24|0);
   $1571 = $1568;
   while(1) {
    $1570 = (($1571) + -24|0);
    HEAP32[$1552>>2] = $1570;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1570);
    $1572 = HEAP32[$1552>>2]|0;
    $1573 = ($1572|0)==($1569|0);
    if ($1573) {
     break;
    } else {
     $1571 = $1572;
    }
   }
   $1574 = (($1568) + -48|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op18,$1574);
   $1575 = HEAP32[$1552>>2]|0;
   $1576 = (($1575) + -24|0);
   __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($112,48744,$op18);
   $1577 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($112,48968,5)|0);
   ;HEAP32[$111+0>>2]=HEAP32[$1577+0>>2]|0;HEAP32[$111+4>>2]=HEAP32[$1577+4>>2]|0;HEAP32[$111+8>>2]=HEAP32[$1577+8>>2]|0;
   ;HEAP32[$1577+0>>2]=0|0;HEAP32[$1577+4>>2]=0|0;HEAP32[$1577+8>>2]=0|0;
   $1578 = HEAP8[$op27>>0]|0;
   $1579 = $1578 & 1;
   $1580 = ($1579<<24>>24)==(0);
   if ($1580) {
    $1585 = (($op27) + 1|0);
    $1586 = $1578&255;
    $1587 = $1586 >>> 1;
    $1588 = $1585;$1589 = $1587;
   } else {
    $1581 = (($op27) + 8|0);
    $1582 = HEAP32[$1581>>2]|0;
    $1583 = (($op27) + 4|0);
    $1584 = HEAP32[$1583>>2]|0;
    $1588 = $1582;$1589 = $1584;
   }
   $1590 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($111,$1588,$1589)|0);
   ;HEAP32[$110+0>>2]=HEAP32[$1590+0>>2]|0;HEAP32[$110+4>>2]=HEAP32[$1590+4>>2]|0;HEAP32[$110+8>>2]=HEAP32[$1590+8>>2]|0;
   ;HEAP32[$1590+0>>2]=0|0;HEAP32[$1590+4>>2]=0|0;HEAP32[$1590+8>>2]=0|0;
   $1591 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($110,48976,5)|0);
   ;HEAP32[$109+0>>2]=HEAP32[$1591+0>>2]|0;HEAP32[$109+4>>2]=HEAP32[$1591+4>>2]|0;HEAP32[$109+8>>2]=HEAP32[$1591+8>>2]|0;
   ;HEAP32[$1591+0>>2]=0|0;HEAP32[$1591+4>>2]=0|0;HEAP32[$1591+8>>2]=0|0;
   $1592 = HEAP8[$op3>>0]|0;
   $1593 = $1592 & 1;
   $1594 = ($1593<<24>>24)==(0);
   if ($1594) {
    $1599 = (($op3) + 1|0);
    $1600 = $1592&255;
    $1601 = $1600 >>> 1;
    $1602 = $1599;$1603 = $1601;
   } else {
    $1595 = (($op3) + 8|0);
    $1596 = HEAP32[$1595>>2]|0;
    $1597 = (($op3) + 4|0);
    $1598 = HEAP32[$1597>>2]|0;
    $1602 = $1596;$1603 = $1598;
   }
   $1604 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($109,$1602,$1603)|0);
   ;HEAP32[$108+0>>2]=HEAP32[$1604+0>>2]|0;HEAP32[$108+4>>2]=HEAP32[$1604+4>>2]|0;HEAP32[$108+8>>2]=HEAP32[$1604+8>>2]|0;
   ;HEAP32[$1604+0>>2]=0|0;HEAP32[$1604+4>>2]=0|0;HEAP32[$1604+8>>2]=0|0;
   $1605 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($108,48736,1)|0);
   $1606 = HEAP8[$1605>>0]|0;
   $1607 = (($1605) + 1|0);
   ;HEAP8[$$sroa$4+0>>0]=HEAP8[$1607+0>>0]|0;HEAP8[$$sroa$4+1>>0]=HEAP8[$1607+1>>0]|0;HEAP8[$$sroa$4+2>>0]=HEAP8[$1607+2>>0]|0;HEAP8[$$sroa$4+3>>0]=HEAP8[$1607+3>>0]|0;HEAP8[$$sroa$4+4>>0]=HEAP8[$1607+4>>0]|0;HEAP8[$$sroa$4+5>>0]=HEAP8[$1607+5>>0]|0;HEAP8[$$sroa$4+6>>0]=HEAP8[$1607+6>>0]|0;
   $1608 = (($1605) + 8|0);
   $1609 = HEAP32[$1608>>2]|0;
   ;HEAP32[$1605+0>>2]=0|0;HEAP32[$1605+4>>2]=0|0;HEAP32[$1605+8>>2]=0|0;
   HEAP8[$107>>0] = $1606;
   $1610 = (($107) + 1|0);
   ;HEAP8[$1610+0>>0]=HEAP8[$$sroa$4+0>>0]|0;HEAP8[$1610+1>>0]=HEAP8[$$sroa$4+1>>0]|0;HEAP8[$1610+2>>0]=HEAP8[$$sroa$4+2>>0]|0;HEAP8[$1610+3>>0]=HEAP8[$$sroa$4+3>>0]|0;HEAP8[$1610+4>>0]=HEAP8[$$sroa$4+4>>0]|0;HEAP8[$1610+5>>0]=HEAP8[$$sroa$4+5>>0]|0;HEAP8[$1610+6>>0]=HEAP8[$$sroa$4+6>>0]|0;
   $1611 = (($107) + 8|0);
   HEAP32[$1611>>2] = $1609;
   ;HEAP8[$$sroa$4+0>>0]=0|0;HEAP8[$$sroa$4+1>>0]=0|0;HEAP8[$$sroa$4+2>>0]=0|0;HEAP8[$$sroa$4+3>>0]=0|0;HEAP8[$$sroa$4+4>>0]=0|0;HEAP8[$$sroa$4+5>>0]=0|0;HEAP8[$$sroa$4+6>>0]=0|0;
   $1612 = (($107) + 12|0);
   ;HEAP32[$1612+0>>2]=0|0;HEAP32[$1612+4>>2]=0|0;HEAP32[$1612+8>>2]=0|0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1576,$107);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($107);
   $$pre444 = HEAP8[$108>>0]|0;
   $phitmp468 = $$pre444 & 1;
   $phitmp469 = ($phitmp468<<24>>24)==(0);
   if (!($phitmp469)) {
    $1613 = (($108) + 8|0);
    $1614 = HEAP32[$1613>>2]|0;
    _free($1614);
   }
   $1615 = HEAP8[$109>>0]|0;
   $1616 = $1615 & 1;
   $1617 = ($1616<<24>>24)==(0);
   if (!($1617)) {
    $1618 = (($109) + 8|0);
    $1619 = HEAP32[$1618>>2]|0;
    _free($1619);
   }
   $1620 = HEAP8[$110>>0]|0;
   $1621 = $1620 & 1;
   $1622 = ($1621<<24>>24)==(0);
   if (!($1622)) {
    $1623 = (($110) + 8|0);
    $1624 = HEAP32[$1623>>2]|0;
    _free($1624);
   }
   $1625 = HEAP8[$111>>0]|0;
   $1626 = $1625 & 1;
   $1627 = ($1626<<24>>24)==(0);
   if (!($1627)) {
    $1628 = (($111) + 8|0);
    $1629 = HEAP32[$1628>>2]|0;
    _free($1629);
   }
   $1630 = HEAP8[$112>>0]|0;
   $1631 = $1630 & 1;
   $1632 = ($1631<<24>>24)==(0);
   if (!($1632)) {
    $1633 = (($112) + 8|0);
    $1634 = HEAP32[$1633>>2]|0;
    _free($1634);
   }
   $1635 = HEAP8[$op18>>0]|0;
   $1636 = $1635 & 1;
   $1637 = ($1636<<24>>24)==(0);
   if (!($1637)) {
    $1638 = (($op18) + 8|0);
    $1639 = HEAP32[$1638>>2]|0;
    _free($1639);
   }
   if (!($1580)) {
    $1640 = (($op27) + 8|0);
    $1641 = HEAP32[$1640>>2]|0;
    _free($1641);
   }
   if ($1594) {
    $$0 = $1550;
    STACKTOP = sp;return ($$0|0);
   }
   $1642 = (($op3) + 8|0);
   $1643 = HEAP32[$1642>>2]|0;
   _free($1643);
   $$0 = $1550;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 114:  {
   $1661 = (($t$0) + 1|0);
   $1662 = HEAP8[$1661>>0]|0;
   $1663 = $1662 << 24 >> 24;
   switch ($1663|0) {
   case 99:  {
    $1664 = ($120|0)>(2);
    if (!($1664)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1665 = HEAP8[$first>>0]|0;
    $1666 = ($1665<<24>>24)==(114);
    if (!($1666)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1667 = (($first) + 1|0);
    $1668 = HEAP8[$1667>>0]|0;
    $1669 = ($1668<<24>>24)==(99);
    if (!($1669)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1670 = (($first) + 2|0);
    $1671 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1670,$last,$db)|0);
    $1672 = ($1671|0)==($1670|0);
    if ($1672) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1673 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1671,$last,$db)|0);
    $1674 = ($1673|0)==($1671|0);
    if ($1674) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1675 = (($db) + 4|0);
    $1676 = HEAP32[$1675>>2]|0;
    $1677 = HEAP32[$db>>2]|0;
    $1678 = $1676;
    $1679 = $1677;
    $1680 = (($1678) - ($1679))|0;
    $1681 = (($1680|0) / 24)&-1;
    $1682 = ($1681>>>0)<(2);
    if ($1682) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1683 = (($1676) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr$i152,$1683);
    $1684 = HEAP32[$1675>>2]|0;
    $1685 = (($1684) + -24|0);
    $1687 = $1684;
    while(1) {
     $1686 = (($1687) + -24|0);
     HEAP32[$1675>>2] = $1686;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1686);
     $1688 = HEAP32[$1675>>2]|0;
     $1689 = ($1688|0)==($1685|0);
     if ($1689) {
      break;
     } else {
      $1687 = $1688;
     }
    }
    $1690 = (($1684) + -48|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($32,$1690);
    $1691 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($32,0,49080,17)|0);
    ;HEAP32[$31+0>>2]=HEAP32[$1691+0>>2]|0;HEAP32[$31+4>>2]=HEAP32[$1691+4>>2]|0;HEAP32[$31+8>>2]=HEAP32[$1691+8>>2]|0;
    ;HEAP32[$1691+0>>2]=0|0;HEAP32[$1691+4>>2]=0|0;HEAP32[$1691+8>>2]=0|0;
    $1692 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($31,49072,2)|0);
    ;HEAP32[$30+0>>2]=HEAP32[$1692+0>>2]|0;HEAP32[$30+4>>2]=HEAP32[$1692+4>>2]|0;HEAP32[$30+8>>2]=HEAP32[$1692+8>>2]|0;
    ;HEAP32[$1692+0>>2]=0|0;HEAP32[$1692+4>>2]=0|0;HEAP32[$1692+8>>2]=0|0;
    $1693 = HEAP8[$expr$i152>>0]|0;
    $1694 = $1693 & 1;
    $1695 = ($1694<<24>>24)==(0);
    if ($1695) {
     $1700 = (($expr$i152) + 1|0);
     $1701 = $1693&255;
     $1702 = $1701 >>> 1;
     $1703 = $1700;$1704 = $1702;
    } else {
     $1696 = (($expr$i152) + 8|0);
     $1697 = HEAP32[$1696>>2]|0;
     $1698 = (($expr$i152) + 4|0);
     $1699 = HEAP32[$1698>>2]|0;
     $1703 = $1697;$1704 = $1699;
    }
    $1705 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($30,$1703,$1704)|0);
    ;HEAP32[$29+0>>2]=HEAP32[$1705+0>>2]|0;HEAP32[$29+4>>2]=HEAP32[$1705+4>>2]|0;HEAP32[$29+8>>2]=HEAP32[$1705+8>>2]|0;
    ;HEAP32[$1705+0>>2]=0|0;HEAP32[$1705+4>>2]=0|0;HEAP32[$1705+8>>2]=0|0;
    $1706 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($29,48736,1)|0);
    $1707 = HEAP8[$1706>>0]|0;
    $1708 = (($1706) + 1|0);
    ;HEAP8[$$sroa$5398+0>>0]=HEAP8[$1708+0>>0]|0;HEAP8[$$sroa$5398+1>>0]=HEAP8[$1708+1>>0]|0;HEAP8[$$sroa$5398+2>>0]=HEAP8[$1708+2>>0]|0;HEAP8[$$sroa$5398+3>>0]=HEAP8[$1708+3>>0]|0;HEAP8[$$sroa$5398+4>>0]=HEAP8[$1708+4>>0]|0;HEAP8[$$sroa$5398+5>>0]=HEAP8[$1708+5>>0]|0;HEAP8[$$sroa$5398+6>>0]=HEAP8[$1708+6>>0]|0;
    $1709 = (($1706) + 8|0);
    $1710 = HEAP32[$1709>>2]|0;
    ;HEAP32[$1706+0>>2]=0|0;HEAP32[$1706+4>>2]=0|0;HEAP32[$1706+8>>2]=0|0;
    HEAP8[$28>>0] = $1707;
    $1711 = (($28) + 1|0);
    ;HEAP8[$1711+0>>0]=HEAP8[$$sroa$5398+0>>0]|0;HEAP8[$1711+1>>0]=HEAP8[$$sroa$5398+1>>0]|0;HEAP8[$1711+2>>0]=HEAP8[$$sroa$5398+2>>0]|0;HEAP8[$1711+3>>0]=HEAP8[$$sroa$5398+3>>0]|0;HEAP8[$1711+4>>0]=HEAP8[$$sroa$5398+4>>0]|0;HEAP8[$1711+5>>0]=HEAP8[$$sroa$5398+5>>0]|0;HEAP8[$1711+6>>0]=HEAP8[$$sroa$5398+6>>0]|0;
    $1712 = (($28) + 8|0);
    HEAP32[$1712>>2] = $1710;
    ;HEAP8[$$sroa$5398+0>>0]=0|0;HEAP8[$$sroa$5398+1>>0]=0|0;HEAP8[$$sroa$5398+2>>0]=0|0;HEAP8[$$sroa$5398+3>>0]=0|0;HEAP8[$$sroa$5398+4>>0]=0|0;HEAP8[$$sroa$5398+5>>0]=0|0;HEAP8[$$sroa$5398+6>>0]=0|0;
    $1713 = (($28) + 12|0);
    ;HEAP32[$1713+0>>2]=0|0;HEAP32[$1713+4>>2]=0|0;HEAP32[$1713+8>>2]=0|0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1690,$28);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($28);
    $$pre445 = HEAP8[$29>>0]|0;
    $phitmp466 = $$pre445 & 1;
    $phitmp467 = ($phitmp466<<24>>24)==(0);
    if (!($phitmp467)) {
     $1714 = (($29) + 8|0);
     $1715 = HEAP32[$1714>>2]|0;
     _free($1715);
    }
    $1716 = HEAP8[$30>>0]|0;
    $1717 = $1716 & 1;
    $1718 = ($1717<<24>>24)==(0);
    if (!($1718)) {
     $1719 = (($30) + 8|0);
     $1720 = HEAP32[$1719>>2]|0;
     _free($1720);
    }
    $1721 = HEAP8[$31>>0]|0;
    $1722 = $1721 & 1;
    $1723 = ($1722<<24>>24)==(0);
    if (!($1723)) {
     $1724 = (($31) + 8|0);
     $1725 = HEAP32[$1724>>2]|0;
     _free($1725);
    }
    $1726 = HEAP8[$32>>0]|0;
    $1727 = $1726 & 1;
    $1728 = ($1727<<24>>24)==(0);
    if (!($1728)) {
     $1729 = (($32) + 8|0);
     $1730 = HEAP32[$1729>>2]|0;
     _free($1730);
    }
    if ($1695) {
     $$0 = $1673;
     STACKTOP = sp;return ($$0|0);
    }
    $1731 = (($expr$i152) + 8|0);
    $1732 = HEAP32[$1731>>2]|0;
    _free($1732);
    $$0 = $1673;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 109:  {
    $1733 = (($first) + 2|0);
    HEAP8[$113>>0] = 2;
    $1734 = (($113) + 1|0);
    HEAP8[$1734>>0] = 37;
    $1735 = (($113) + 2|0);
    HEAP8[$1735>>0] = 0;
    $1736 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1733,$last,$113,$db)|0);
    $1737 = ($1736|0)==($1733|0);
    $first$68 = $1737 ? $first : $1736;
    $$0 = $first$68;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 77:  {
    $1738 = (($first) + 2|0);
    HEAP8[$114>>0] = 4;
    $1739 = (($114) + 1|0);
    HEAP8[$1739>>0]=15653&255;HEAP8[$1739+1>>0]=15653>>8;
    $1740 = (($114) + 3|0);
    HEAP8[$1740>>0] = 0;
    $1741 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1738,$last,$114,$db)|0);
    $1742 = ($1741|0)==($1738|0);
    $first$69 = $1742 ? $first : $1741;
    $$0 = $first$69;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 115:  {
    $1743 = (($first) + 2|0);
    HEAP8[$115>>0] = 4;
    $1744 = (($115) + 1|0);
    HEAP8[$1744>>0]=15934&255;HEAP8[$1744+1>>0]=15934>>8;
    $1745 = (($115) + 3|0);
    HEAP8[$1745>>0] = 0;
    $1746 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1743,$last,$115,$db)|0);
    $1747 = ($1746|0)==($1743|0);
    $first$70 = $1747 ? $first : $1746;
    $$0 = $first$70;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 83:  {
    $1748 = (($first) + 2|0);
    HEAP8[$116>>0] = 6;
    $1749 = (($116) + 1|0);
    ;HEAP8[$1749+0>>0]=HEAP8[48984+0>>0]|0;HEAP8[$1749+1>>0]=HEAP8[48984+1>>0]|0;HEAP8[$1749+2>>0]=HEAP8[48984+2>>0]|0;
    $1750 = (($116) + 4|0);
    HEAP8[$1750>>0] = 0;
    $1751 = (__ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($1748,$last,$116,$db)|0);
    $1752 = ($1751|0)==($1748|0);
    $first$71 = $1752 ? $first : $1751;
    STACKTOP = sp;return ($first$71|0);
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  case 115:  {
   $1753 = (($t$0) + 1|0);
   $1754 = HEAP8[$1753>>0]|0;
   $1755 = $1754 << 24 >> 24;
   switch ($1755|0) {
   case 99:  {
    $1756 = ($120|0)>(2);
    if (!($1756)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1757 = HEAP8[$first>>0]|0;
    $1758 = ($1757<<24>>24)==(115);
    if (!($1758)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1759 = (($first) + 1|0);
    $1760 = HEAP8[$1759>>0]|0;
    $1761 = ($1760<<24>>24)==(99);
    if (!($1761)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1762 = (($first) + 2|0);
    $1763 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1762,$last,$db)|0);
    $1764 = ($1763|0)==($1762|0);
    if ($1764) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1765 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1763,$last,$db)|0);
    $1766 = ($1765|0)==($1763|0);
    if ($1766) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1767 = (($db) + 4|0);
    $1768 = HEAP32[$1767>>2]|0;
    $1769 = HEAP32[$db>>2]|0;
    $1770 = $1768;
    $1771 = $1769;
    $1772 = (($1770) - ($1771))|0;
    $1773 = (($1772|0) / 24)&-1;
    $1774 = ($1773>>>0)<(2);
    if ($1774) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1775 = (($1768) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($expr$i,$1775);
    $1776 = HEAP32[$1767>>2]|0;
    $1777 = (($1776) + -24|0);
    $1779 = $1776;
    while(1) {
     $1778 = (($1779) + -24|0);
     HEAP32[$1767>>2] = $1778;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1778);
     $1780 = HEAP32[$1767>>2]|0;
     $1781 = ($1780|0)==($1777|0);
     if ($1781) {
      break;
     } else {
      $1779 = $1780;
     }
    }
    $1782 = (($1776) + -48|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($37,$1782);
    $1783 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($37,0,49056,12)|0);
    ;HEAP32[$36+0>>2]=HEAP32[$1783+0>>2]|0;HEAP32[$36+4>>2]=HEAP32[$1783+4>>2]|0;HEAP32[$36+8>>2]=HEAP32[$1783+8>>2]|0;
    ;HEAP32[$1783+0>>2]=0|0;HEAP32[$1783+4>>2]=0|0;HEAP32[$1783+8>>2]=0|0;
    $1784 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($36,49072,2)|0);
    ;HEAP32[$35+0>>2]=HEAP32[$1784+0>>2]|0;HEAP32[$35+4>>2]=HEAP32[$1784+4>>2]|0;HEAP32[$35+8>>2]=HEAP32[$1784+8>>2]|0;
    ;HEAP32[$1784+0>>2]=0|0;HEAP32[$1784+4>>2]=0|0;HEAP32[$1784+8>>2]=0|0;
    $1785 = HEAP8[$expr$i>>0]|0;
    $1786 = $1785 & 1;
    $1787 = ($1786<<24>>24)==(0);
    if ($1787) {
     $1792 = (($expr$i) + 1|0);
     $1793 = $1785&255;
     $1794 = $1793 >>> 1;
     $1795 = $1792;$1796 = $1794;
    } else {
     $1788 = (($expr$i) + 8|0);
     $1789 = HEAP32[$1788>>2]|0;
     $1790 = (($expr$i) + 4|0);
     $1791 = HEAP32[$1790>>2]|0;
     $1795 = $1789;$1796 = $1791;
    }
    $1797 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($35,$1795,$1796)|0);
    ;HEAP32[$34+0>>2]=HEAP32[$1797+0>>2]|0;HEAP32[$34+4>>2]=HEAP32[$1797+4>>2]|0;HEAP32[$34+8>>2]=HEAP32[$1797+8>>2]|0;
    ;HEAP32[$1797+0>>2]=0|0;HEAP32[$1797+4>>2]=0|0;HEAP32[$1797+8>>2]=0|0;
    $1798 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($34,48736,1)|0);
    $1799 = HEAP8[$1798>>0]|0;
    $1800 = (($1798) + 1|0);
    ;HEAP8[$$sroa$5395+0>>0]=HEAP8[$1800+0>>0]|0;HEAP8[$$sroa$5395+1>>0]=HEAP8[$1800+1>>0]|0;HEAP8[$$sroa$5395+2>>0]=HEAP8[$1800+2>>0]|0;HEAP8[$$sroa$5395+3>>0]=HEAP8[$1800+3>>0]|0;HEAP8[$$sroa$5395+4>>0]=HEAP8[$1800+4>>0]|0;HEAP8[$$sroa$5395+5>>0]=HEAP8[$1800+5>>0]|0;HEAP8[$$sroa$5395+6>>0]=HEAP8[$1800+6>>0]|0;
    $1801 = (($1798) + 8|0);
    $1802 = HEAP32[$1801>>2]|0;
    ;HEAP32[$1798+0>>2]=0|0;HEAP32[$1798+4>>2]=0|0;HEAP32[$1798+8>>2]=0|0;
    HEAP8[$33>>0] = $1799;
    $1803 = (($33) + 1|0);
    ;HEAP8[$1803+0>>0]=HEAP8[$$sroa$5395+0>>0]|0;HEAP8[$1803+1>>0]=HEAP8[$$sroa$5395+1>>0]|0;HEAP8[$1803+2>>0]=HEAP8[$$sroa$5395+2>>0]|0;HEAP8[$1803+3>>0]=HEAP8[$$sroa$5395+3>>0]|0;HEAP8[$1803+4>>0]=HEAP8[$$sroa$5395+4>>0]|0;HEAP8[$1803+5>>0]=HEAP8[$$sroa$5395+5>>0]|0;HEAP8[$1803+6>>0]=HEAP8[$$sroa$5395+6>>0]|0;
    $1804 = (($33) + 8|0);
    HEAP32[$1804>>2] = $1802;
    ;HEAP8[$$sroa$5395+0>>0]=0|0;HEAP8[$$sroa$5395+1>>0]=0|0;HEAP8[$$sroa$5395+2>>0]=0|0;HEAP8[$$sroa$5395+3>>0]=0|0;HEAP8[$$sroa$5395+4>>0]=0|0;HEAP8[$$sroa$5395+5>>0]=0|0;HEAP8[$$sroa$5395+6>>0]=0|0;
    $1805 = (($33) + 12|0);
    ;HEAP32[$1805+0>>2]=0|0;HEAP32[$1805+4>>2]=0|0;HEAP32[$1805+8>>2]=0|0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1782,$33);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($33);
    $$pre446 = HEAP8[$34>>0]|0;
    $phitmp464 = $$pre446 & 1;
    $phitmp465 = ($phitmp464<<24>>24)==(0);
    if (!($phitmp465)) {
     $1806 = (($34) + 8|0);
     $1807 = HEAP32[$1806>>2]|0;
     _free($1807);
    }
    $1808 = HEAP8[$35>>0]|0;
    $1809 = $1808 & 1;
    $1810 = ($1809<<24>>24)==(0);
    if (!($1810)) {
     $1811 = (($35) + 8|0);
     $1812 = HEAP32[$1811>>2]|0;
     _free($1812);
    }
    $1813 = HEAP8[$36>>0]|0;
    $1814 = $1813 & 1;
    $1815 = ($1814<<24>>24)==(0);
    if (!($1815)) {
     $1816 = (($36) + 8|0);
     $1817 = HEAP32[$1816>>2]|0;
     _free($1817);
    }
    $1818 = HEAP8[$37>>0]|0;
    $1819 = $1818 & 1;
    $1820 = ($1819<<24>>24)==(0);
    if (!($1820)) {
     $1821 = (($37) + 8|0);
     $1822 = HEAP32[$1821>>2]|0;
     _free($1822);
    }
    if ($1787) {
     $$0 = $1765;
     STACKTOP = sp;return ($$0|0);
    }
    $1823 = (($expr$i) + 8|0);
    $1824 = HEAP32[$1823>>2]|0;
    _free($1824);
    $$0 = $1765;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 112:  {
    $1825 = ($120|0)>(2);
    if (!($1825)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1826 = HEAP8[$first>>0]|0;
    $1827 = ($1826<<24>>24)==(115);
    if (!($1827)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1828 = (($first) + 1|0);
    $1829 = HEAP8[$1828>>0]|0;
    $1830 = ($1829<<24>>24)==(112);
    if (!($1830)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1831 = (($first) + 2|0);
    $1832 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1831,$last,$db)|0);
    $1833 = ($1832|0)==($1831|0);
    $first$$i = $1833 ? $first : $1832;
    $$0 = $first$$i;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 114:  {
    $1834 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
    $$0 = $1834;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 116:  {
    $1835 = ($120|0)>(2);
    if (!($1835)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1836 = HEAP8[$first>>0]|0;
    $1837 = ($1836<<24>>24)==(115);
    if (!($1837)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1838 = (($first) + 1|0);
    $1839 = HEAP8[$1838>>0]|0;
    $1840 = ($1839<<24>>24)==(116);
    if (!($1840)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1841 = (($first) + 2|0);
    $1842 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($1841,$last,$db)|0);
    $1843 = ($1842|0)==($1841|0);
    if ($1843) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1844 = HEAP32[$db>>2]|0;
    $1845 = (($db) + 4|0);
    $1846 = HEAP32[$1845>>2]|0;
    $1847 = ($1844|0)==($1846|0);
    if ($1847) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1848 = (($1846) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($40,$1848);
    $1849 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($40,0,49040,8)|0);
    ;HEAP32[$39+0>>2]=HEAP32[$1849+0>>2]|0;HEAP32[$39+4>>2]=HEAP32[$1849+4>>2]|0;HEAP32[$39+8>>2]=HEAP32[$1849+8>>2]|0;
    ;HEAP32[$1849+0>>2]=0|0;HEAP32[$1849+4>>2]=0|0;HEAP32[$1849+8>>2]=0|0;
    $1850 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($39,48736,1)|0);
    $1851 = HEAP8[$1850>>0]|0;
    $1852 = (($1850) + 1|0);
    ;HEAP8[$$sroa$5392+0>>0]=HEAP8[$1852+0>>0]|0;HEAP8[$$sroa$5392+1>>0]=HEAP8[$1852+1>>0]|0;HEAP8[$$sroa$5392+2>>0]=HEAP8[$1852+2>>0]|0;HEAP8[$$sroa$5392+3>>0]=HEAP8[$1852+3>>0]|0;HEAP8[$$sroa$5392+4>>0]=HEAP8[$1852+4>>0]|0;HEAP8[$$sroa$5392+5>>0]=HEAP8[$1852+5>>0]|0;HEAP8[$$sroa$5392+6>>0]=HEAP8[$1852+6>>0]|0;
    $1853 = (($1850) + 8|0);
    $1854 = HEAP32[$1853>>2]|0;
    ;HEAP32[$1850+0>>2]=0|0;HEAP32[$1850+4>>2]=0|0;HEAP32[$1850+8>>2]=0|0;
    HEAP8[$38>>0] = $1851;
    $1855 = (($38) + 1|0);
    ;HEAP8[$1855+0>>0]=HEAP8[$$sroa$5392+0>>0]|0;HEAP8[$1855+1>>0]=HEAP8[$$sroa$5392+1>>0]|0;HEAP8[$1855+2>>0]=HEAP8[$$sroa$5392+2>>0]|0;HEAP8[$1855+3>>0]=HEAP8[$$sroa$5392+3>>0]|0;HEAP8[$1855+4>>0]=HEAP8[$$sroa$5392+4>>0]|0;HEAP8[$1855+5>>0]=HEAP8[$$sroa$5392+5>>0]|0;HEAP8[$1855+6>>0]=HEAP8[$$sroa$5392+6>>0]|0;
    $1856 = (($38) + 8|0);
    HEAP32[$1856>>2] = $1854;
    ;HEAP8[$$sroa$5392+0>>0]=0|0;HEAP8[$$sroa$5392+1>>0]=0|0;HEAP8[$$sroa$5392+2>>0]=0|0;HEAP8[$$sroa$5392+3>>0]=0|0;HEAP8[$$sroa$5392+4>>0]=0|0;HEAP8[$$sroa$5392+5>>0]=0|0;HEAP8[$$sroa$5392+6>>0]=0|0;
    $1857 = (($38) + 12|0);
    ;HEAP32[$1857+0>>2]=0|0;HEAP32[$1857+4>>2]=0|0;HEAP32[$1857+8>>2]=0|0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1848,$38);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($38);
    $$pre447 = HEAP8[$39>>0]|0;
    $phitmp462 = $$pre447 & 1;
    $phitmp463 = ($phitmp462<<24>>24)==(0);
    if (!($phitmp463)) {
     $1858 = (($39) + 8|0);
     $1859 = HEAP32[$1858>>2]|0;
     _free($1859);
    }
    $1860 = HEAP8[$40>>0]|0;
    $1861 = $1860 & 1;
    $1862 = ($1861<<24>>24)==(0);
    if ($1862) {
     $$0 = $1842;
     STACKTOP = sp;return ($$0|0);
    }
    $1863 = (($40) + 8|0);
    $1864 = HEAP32[$1863>>2]|0;
    _free($1864);
    $$0 = $1842;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 122:  {
    $1865 = ($120|0)>(2);
    if (!($1865)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1866 = HEAP8[$first>>0]|0;
    $1867 = ($1866<<24>>24)==(115);
    if (!($1867)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1868 = (($first) + 1|0);
    $1869 = HEAP8[$1868>>0]|0;
    $1870 = ($1869<<24>>24)==(122);
    if (!($1870)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1871 = (($first) + 2|0);
    $1872 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($1871,$last,$db)|0);
    $1873 = ($1872|0)==($1871|0);
    if ($1873) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1874 = HEAP32[$db>>2]|0;
    $1875 = (($db) + 4|0);
    $1876 = HEAP32[$1875>>2]|0;
    $1877 = ($1874|0)==($1876|0);
    if ($1877) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1878 = (($1876) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($43,$1878);
    $1879 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($43,0,49040,8)|0);
    ;HEAP32[$42+0>>2]=HEAP32[$1879+0>>2]|0;HEAP32[$42+4>>2]=HEAP32[$1879+4>>2]|0;HEAP32[$42+8>>2]=HEAP32[$1879+8>>2]|0;
    ;HEAP32[$1879+0>>2]=0|0;HEAP32[$1879+4>>2]=0|0;HEAP32[$1879+8>>2]=0|0;
    $1880 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($42,48736,1)|0);
    $1881 = HEAP8[$1880>>0]|0;
    $1882 = (($1880) + 1|0);
    ;HEAP8[$$sroa$5389+0>>0]=HEAP8[$1882+0>>0]|0;HEAP8[$$sroa$5389+1>>0]=HEAP8[$1882+1>>0]|0;HEAP8[$$sroa$5389+2>>0]=HEAP8[$1882+2>>0]|0;HEAP8[$$sroa$5389+3>>0]=HEAP8[$1882+3>>0]|0;HEAP8[$$sroa$5389+4>>0]=HEAP8[$1882+4>>0]|0;HEAP8[$$sroa$5389+5>>0]=HEAP8[$1882+5>>0]|0;HEAP8[$$sroa$5389+6>>0]=HEAP8[$1882+6>>0]|0;
    $1883 = (($1880) + 8|0);
    $1884 = HEAP32[$1883>>2]|0;
    ;HEAP32[$1880+0>>2]=0|0;HEAP32[$1880+4>>2]=0|0;HEAP32[$1880+8>>2]=0|0;
    HEAP8[$41>>0] = $1881;
    $1885 = (($41) + 1|0);
    ;HEAP8[$1885+0>>0]=HEAP8[$$sroa$5389+0>>0]|0;HEAP8[$1885+1>>0]=HEAP8[$$sroa$5389+1>>0]|0;HEAP8[$1885+2>>0]=HEAP8[$$sroa$5389+2>>0]|0;HEAP8[$1885+3>>0]=HEAP8[$$sroa$5389+3>>0]|0;HEAP8[$1885+4>>0]=HEAP8[$$sroa$5389+4>>0]|0;HEAP8[$1885+5>>0]=HEAP8[$$sroa$5389+5>>0]|0;HEAP8[$1885+6>>0]=HEAP8[$$sroa$5389+6>>0]|0;
    $1886 = (($41) + 8|0);
    HEAP32[$1886>>2] = $1884;
    ;HEAP8[$$sroa$5389+0>>0]=0|0;HEAP8[$$sroa$5389+1>>0]=0|0;HEAP8[$$sroa$5389+2>>0]=0|0;HEAP8[$$sroa$5389+3>>0]=0|0;HEAP8[$$sroa$5389+4>>0]=0|0;HEAP8[$$sroa$5389+5>>0]=0|0;HEAP8[$$sroa$5389+6>>0]=0|0;
    $1887 = (($41) + 12|0);
    ;HEAP32[$1887+0>>2]=0|0;HEAP32[$1887+4>>2]=0|0;HEAP32[$1887+8>>2]=0|0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($1878,$41);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($41);
    $$pre448 = HEAP8[$42>>0]|0;
    $phitmp460 = $$pre448 & 1;
    $phitmp461 = ($phitmp460<<24>>24)==(0);
    if (!($phitmp461)) {
     $1888 = (($42) + 8|0);
     $1889 = HEAP32[$1888>>2]|0;
     _free($1889);
    }
    $1890 = HEAP8[$43>>0]|0;
    $1891 = $1890 & 1;
    $1892 = ($1891<<24>>24)==(0);
    if ($1892) {
     $$0 = $1872;
     STACKTOP = sp;return ($$0|0);
    }
    $1893 = (($43) + 8|0);
    $1894 = HEAP32[$1893>>2]|0;
    _free($1894);
    $$0 = $1872;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 90:  {
    $1895 = $t$0;
    $1896 = (($118) - ($1895))|0;
    $1897 = ($1896|0)>(2);
    if (!($1897)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $1898 = (($t$0) + 2|0);
    $1899 = HEAP8[$1898>>0]|0;
    $1900 = $1899 << 24 >> 24;
    if ((($1900|0) == 84)) {
     $1901 = ($120|0)>(2);
     if (!($1901)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $1902 = HEAP8[$first>>0]|0;
     $1903 = ($1902<<24>>24)==(115);
     if (!($1903)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $1904 = (($first) + 1|0);
     $1905 = HEAP8[$1904>>0]|0;
     $1906 = ($1905<<24>>24)==(90);
     if (!($1906)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $1907 = (($first) + 2|0);
     $1908 = HEAP8[$1907>>0]|0;
     $1909 = ($1908<<24>>24)==(84);
     if (!($1909)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $1910 = (($db) + 4|0);
     $1911 = HEAP32[$1910>>2]|0;
     $1912 = HEAP32[$db>>2]|0;
     $1913 = $1911;
     $1914 = $1912;
     $1915 = (($1913) - ($1914))|0;
     $1916 = (($1915|0) / 24)&-1;
     $1917 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($1907,$last,$db)|0);
     $1918 = HEAP32[$1910>>2]|0;
     $1919 = HEAP32[$db>>2]|0;
     $1920 = $1918;
     $1921 = $1919;
     $1922 = (($1920) - ($1921))|0;
     $1923 = (($1922|0) / 24)&-1;
     $1924 = ($1917|0)==($1907|0);
     if ($1924) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     HEAP8[$tmp$i>>0] = 20;
     $1925 = (($tmp$i) + 1|0);
     dest=$1925+0|0; src=49016+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
     $1926 = (($tmp$i) + 11|0);
     HEAP8[$1926>>0] = 0;
     $1927 = ($1916|0)==($1923|0);
     if (!($1927)) {
      $1928 = (($1919) + (($1916*24)|0)|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($52,$1928);
      $1929 = HEAP8[$52>>0]|0;
      $1930 = $1929 & 1;
      $1931 = ($1930<<24>>24)==(0);
      if ($1931) {
       $1936 = (($52) + 1|0);
       $1937 = $1929&255;
       $1938 = $1937 >>> 1;
       $1939 = $1936;$1940 = $1938;
      } else {
       $1932 = (($52) + 8|0);
       $1933 = HEAP32[$1932>>2]|0;
       $1934 = (($52) + 4|0);
       $1935 = HEAP32[$1934>>2]|0;
       $1939 = $1933;$1940 = $1935;
      }
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($tmp$i,$1939,$1940)|0);
      if (!($1931)) {
       $1941 = (($52) + 8|0);
       $1942 = HEAP32[$1941>>2]|0;
       _free($1942);
      }
      $k$08$i = (($1916) + 1)|0;
      $1943 = ($k$08$i|0)==($1923|0);
      if (!($1943)) {
       $1944 = (($53) + 1|0);
       $1945 = (($53) + 8|0);
       $1946 = (($53) + 4|0);
       $1947 = (($54) + 8|0);
       $k$09$i = $k$08$i;
       while(1) {
        $1948 = HEAP32[$db>>2]|0;
        $1949 = (($1948) + (($k$09$i*24)|0)|0);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($54,$1949);
        $1950 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($54,0,49032,2)|0);
        ;HEAP32[$53+0>>2]=HEAP32[$1950+0>>2]|0;HEAP32[$53+4>>2]=HEAP32[$1950+4>>2]|0;HEAP32[$53+8>>2]=HEAP32[$1950+8>>2]|0;
        ;HEAP32[$1950+0>>2]=0|0;HEAP32[$1950+4>>2]=0|0;HEAP32[$1950+8>>2]=0|0;
        $1951 = HEAP8[$53>>0]|0;
        $1952 = $1951 & 1;
        $1953 = ($1952<<24>>24)==(0);
        if ($1953) {
         $1956 = $1951&255;
         $1957 = $1956 >>> 1;
         $1958 = $1944;$1959 = $1957;
        } else {
         $1954 = HEAP32[$1945>>2]|0;
         $1955 = HEAP32[$1946>>2]|0;
         $1958 = $1954;$1959 = $1955;
        }
        (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($tmp$i,$1958,$1959)|0);
        if (!($1953)) {
         $1960 = HEAP32[$1945>>2]|0;
         _free($1960);
        }
        $1961 = HEAP8[$54>>0]|0;
        $1962 = $1961 & 1;
        $1963 = ($1962<<24>>24)==(0);
        if (!($1963)) {
         $1964 = HEAP32[$1947>>2]|0;
         _free($1964);
        }
        $k$0$i = (($k$09$i) + 1)|0;
        $1965 = ($k$0$i|0)==($1923|0);
        if ($1965) {
         break;
        } else {
         $k$09$i = $k$0$i;
        }
       }
      }
     }
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($tmp$i,48736,1)|0);
     $$pre$i = HEAP32[$1910>>2]|0;
     if ($1927) {
      $1985 = $$pre$i;
     } else {
      $1966 = (($1916) - ($1923))|0;
      $1968 = $$pre$i;$k1$06$i = $1923;
      while(1) {
       $1967 = (($1968) + -24|0);
       $1970 = $1968;
       while(1) {
        $1969 = (($1970) + -24|0);
        HEAP32[$1910>>2] = $1969;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1969);
        $1971 = HEAP32[$1910>>2]|0;
        $1972 = ($1971|0)==($1967|0);
        if ($1972) {
         break;
        } else {
         $1970 = $1971;
        }
       }
       $1973 = (($k1$06$i) + -1)|0;
       $1974 = ($1973|0)==($1916|0);
       if ($1974) {
        break;
       } else {
        $1968 = $1967;$k1$06$i = $1973;
       }
      }
      $scevgep = (($$pre$i) + (($1966*24)|0)|0);
      $1985 = $scevgep;
     }
     $1975 = HEAP8[$tmp$i>>0]|0;
     $1976 = (($tmp$i) + 1|0);
     ;HEAP8[$$sroa$6+0>>0]=HEAP8[$1976+0>>0]|0;HEAP8[$$sroa$6+1>>0]=HEAP8[$1976+1>>0]|0;HEAP8[$$sroa$6+2>>0]=HEAP8[$1976+2>>0]|0;HEAP8[$$sroa$6+3>>0]=HEAP8[$1976+3>>0]|0;HEAP8[$$sroa$6+4>>0]=HEAP8[$1976+4>>0]|0;HEAP8[$$sroa$6+5>>0]=HEAP8[$1976+5>>0]|0;HEAP8[$$sroa$6+6>>0]=HEAP8[$1976+6>>0]|0;
     $1977 = (($tmp$i) + 8|0);
     $1978 = HEAP32[$1977>>2]|0;
     ;HEAP32[$tmp$i+0>>2]=0|0;HEAP32[$tmp$i+4>>2]=0|0;HEAP32[$tmp$i+8>>2]=0|0;
     HEAP8[$55>>0] = $1975;
     $1979 = (($55) + 1|0);
     ;HEAP8[$1979+0>>0]=HEAP8[$$sroa$6+0>>0]|0;HEAP8[$1979+1>>0]=HEAP8[$$sroa$6+1>>0]|0;HEAP8[$1979+2>>0]=HEAP8[$$sroa$6+2>>0]|0;HEAP8[$1979+3>>0]=HEAP8[$$sroa$6+3>>0]|0;HEAP8[$1979+4>>0]=HEAP8[$$sroa$6+4>>0]|0;HEAP8[$1979+5>>0]=HEAP8[$$sroa$6+5>>0]|0;HEAP8[$1979+6>>0]=HEAP8[$$sroa$6+6>>0]|0;
     $1980 = (($55) + 8|0);
     HEAP32[$1980>>2] = $1978;
     ;HEAP8[$$sroa$6+0>>0]=0|0;HEAP8[$$sroa$6+1>>0]=0|0;HEAP8[$$sroa$6+2>>0]=0|0;HEAP8[$$sroa$6+3>>0]=0|0;HEAP8[$$sroa$6+4>>0]=0|0;HEAP8[$$sroa$6+5>>0]=0|0;HEAP8[$$sroa$6+6>>0]=0|0;
     $1981 = (($55) + 12|0);
     ;HEAP32[$1981+0>>2]=0|0;HEAP32[$1981+4>>2]=0|0;HEAP32[$1981+8>>2]=0|0;
     $1982 = (($db) + 8|0);
     $1983 = HEAP32[$1982>>2]|0;
     $1984 = ($1985>>>0)<($1983>>>0);
     if ($1984) {
      $1986 = ($1985|0)==(0|0);
      if ($1986) {
       $1989 = 0;
      } else {
       ;HEAP32[$1985+0>>2]=HEAP32[$55+0>>2]|0;HEAP32[$1985+4>>2]=HEAP32[$55+4>>2]|0;HEAP32[$1985+8>>2]=HEAP32[$55+8>>2]|0;
       ;HEAP32[$55+0>>2]=0|0;HEAP32[$55+4>>2]=0|0;HEAP32[$55+8>>2]=0|0;
       $1987 = (($1985) + 12|0);
       ;HEAP32[$1987+0>>2]=HEAP32[$1981+0>>2]|0;HEAP32[$1987+4>>2]=HEAP32[$1981+4>>2]|0;HEAP32[$1987+8>>2]=HEAP32[$1981+8>>2]|0;
       ;HEAP32[$1981+0>>2]=0|0;HEAP32[$1981+4>>2]=0|0;HEAP32[$1981+8>>2]=0|0;
       $$pre$i$i = HEAP32[$1910>>2]|0;
       $1989 = $$pre$i$i;
      }
      $1988 = (($1989) + 24|0);
      HEAP32[$1910>>2] = $1988;
     } else {
      $1990 = (($db) + 12|0);
      $1991 = HEAP32[$db>>2]|0;
      $1992 = $1985;
      $1993 = $1991;
      $1994 = (($1992) - ($1993))|0;
      $1995 = (($1994|0) / 24)&-1;
      $1996 = (($1995) + 1)|0;
      $1997 = ($1996|0)<(0);
      if ($1997) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
       // unreachable;
      }
      $1998 = $1983;
      $1999 = (($1998) - ($1993))|0;
      $2000 = (($1999|0) / 24)&-1;
      $2001 = ($2000>>>0)<(1073741823);
      if ($2001) {
       $2002 = $2000 << 1;
       $2003 = ($2002>>>0)<($1996>>>0);
       $2004 = $2003 ? $1996 : $2002;
       $$0$i$i$i$i = $2004;
      } else {
       $$0$i$i$i$i = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($$sroa$5422,$$0$i$i$i$i,$1995,$1990);
      $2005 = (($$sroa$5422) + 8|0);
      $2006 = HEAP32[$2005>>2]|0;
      $2007 = ($2006|0)==(0|0);
      if (!($2007)) {
       ;HEAP32[$2006+0>>2]=HEAP32[$55+0>>2]|0;HEAP32[$2006+4>>2]=HEAP32[$55+4>>2]|0;HEAP32[$2006+8>>2]=HEAP32[$55+8>>2]|0;
       ;HEAP32[$55+0>>2]=0|0;HEAP32[$55+4>>2]=0|0;HEAP32[$55+8>>2]=0|0;
       $2008 = (($2006) + 12|0);
       ;HEAP32[$2008+0>>2]=HEAP32[$1981+0>>2]|0;HEAP32[$2008+4>>2]=HEAP32[$1981+4>>2]|0;HEAP32[$2008+8>>2]=HEAP32[$1981+8>>2]|0;
       ;HEAP32[$1981+0>>2]=0|0;HEAP32[$1981+4>>2]=0|0;HEAP32[$1981+8>>2]=0|0;
      }
      $2009 = (($2006) + 24|0);
      HEAP32[$2005>>2] = $2009;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$$sroa$5422);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($$sroa$5422);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($55);
     $$pre449 = HEAP8[$tmp$i>>0]|0;
     $phitmp458 = $$pre449 & 1;
     $phitmp459 = ($phitmp458<<24>>24)==(0);
     if ($phitmp459) {
      $$0 = $1917;
      STACKTOP = sp;return ($$0|0);
     }
     $2010 = HEAP32[$1977>>2]|0;
     _free($2010);
     $$0 = $1917;
     STACKTOP = sp;return ($$0|0);
    } else if ((($1900|0) == 102)) {
     $2011 = ($120|0)>(2);
     if (!($2011)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $2012 = HEAP8[$first>>0]|0;
     $2013 = ($2012<<24>>24)==(115);
     if (!($2013)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $2014 = (($first) + 1|0);
     $2015 = HEAP8[$2014>>0]|0;
     $2016 = ($2015<<24>>24)==(90);
     if (!($2016)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $2017 = (($first) + 2|0);
     $2018 = HEAP8[$2017>>0]|0;
     $2019 = ($2018<<24>>24)==(102);
     if (!($2019)) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $2020 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($2017,$last,$db)|0);
     $2021 = ($2020|0)==($2017|0);
     if ($2021) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $2022 = HEAP32[$db>>2]|0;
     $2023 = (($db) + 4|0);
     $2024 = HEAP32[$2023>>2]|0;
     $2025 = ($2022|0)==($2024|0);
     if ($2025) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $2026 = (($2024) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($51,$2026);
     $2027 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($51,0,49016,10)|0);
     ;HEAP32[$50+0>>2]=HEAP32[$2027+0>>2]|0;HEAP32[$50+4>>2]=HEAP32[$2027+4>>2]|0;HEAP32[$50+8>>2]=HEAP32[$2027+8>>2]|0;
     ;HEAP32[$2027+0>>2]=0|0;HEAP32[$2027+4>>2]=0|0;HEAP32[$2027+8>>2]=0|0;
     $2028 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($50,48736,1)|0);
     $2029 = HEAP8[$2028>>0]|0;
     $2030 = (($2028) + 1|0);
     ;HEAP8[$$sroa$5+0>>0]=HEAP8[$2030+0>>0]|0;HEAP8[$$sroa$5+1>>0]=HEAP8[$2030+1>>0]|0;HEAP8[$$sroa$5+2>>0]=HEAP8[$2030+2>>0]|0;HEAP8[$$sroa$5+3>>0]=HEAP8[$2030+3>>0]|0;HEAP8[$$sroa$5+4>>0]=HEAP8[$2030+4>>0]|0;HEAP8[$$sroa$5+5>>0]=HEAP8[$2030+5>>0]|0;HEAP8[$$sroa$5+6>>0]=HEAP8[$2030+6>>0]|0;
     $2031 = (($2028) + 8|0);
     $2032 = HEAP32[$2031>>2]|0;
     ;HEAP32[$2028+0>>2]=0|0;HEAP32[$2028+4>>2]=0|0;HEAP32[$2028+8>>2]=0|0;
     HEAP8[$49>>0] = $2029;
     $2033 = (($49) + 1|0);
     ;HEAP8[$2033+0>>0]=HEAP8[$$sroa$5+0>>0]|0;HEAP8[$2033+1>>0]=HEAP8[$$sroa$5+1>>0]|0;HEAP8[$2033+2>>0]=HEAP8[$$sroa$5+2>>0]|0;HEAP8[$2033+3>>0]=HEAP8[$$sroa$5+3>>0]|0;HEAP8[$2033+4>>0]=HEAP8[$$sroa$5+4>>0]|0;HEAP8[$2033+5>>0]=HEAP8[$$sroa$5+5>>0]|0;HEAP8[$2033+6>>0]=HEAP8[$$sroa$5+6>>0]|0;
     $2034 = (($49) + 8|0);
     HEAP32[$2034>>2] = $2032;
     ;HEAP8[$$sroa$5+0>>0]=0|0;HEAP8[$$sroa$5+1>>0]=0|0;HEAP8[$$sroa$5+2>>0]=0|0;HEAP8[$$sroa$5+3>>0]=0|0;HEAP8[$$sroa$5+4>>0]=0|0;HEAP8[$$sroa$5+5>>0]=0|0;HEAP8[$$sroa$5+6>>0]=0|0;
     $2035 = (($49) + 12|0);
     ;HEAP32[$2035+0>>2]=0|0;HEAP32[$2035+4>>2]=0|0;HEAP32[$2035+8>>2]=0|0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($2026,$49);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($49);
     $$pre450 = HEAP8[$50>>0]|0;
     $phitmp456 = $$pre450 & 1;
     $phitmp457 = ($phitmp456<<24>>24)==(0);
     if (!($phitmp457)) {
      $2036 = (($50) + 8|0);
      $2037 = HEAP32[$2036>>2]|0;
      _free($2037);
     }
     $2038 = HEAP8[$51>>0]|0;
     $2039 = $2038 & 1;
     $2040 = ($2039<<24>>24)==(0);
     if ($2040) {
      $$0 = $2020;
      STACKTOP = sp;return ($$0|0);
     }
     $2041 = (($51) + 8|0);
     $2042 = HEAP32[$2041>>2]|0;
     _free($2042);
     $$0 = $2020;
     STACKTOP = sp;return ($$0|0);
    } else {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  case 116:  {
   $2043 = (($t$0) + 1|0);
   $2044 = HEAP8[$2043>>0]|0;
   $2045 = $2044 << 24 >> 24;
   if ((($2045|0) == 105) | (($2045|0) == 101)) {
    $2046 = ($120|0)>(2);
    if (!($2046)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $2047 = HEAP8[$first>>0]|0;
    $2048 = ($2047<<24>>24)==(116);
    if (!($2048)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $2049 = (($first) + 1|0);
    $2050 = HEAP8[$2049>>0]|0;
    if (!((($2050<<24>>24) == 105) | (($2050<<24>>24) == 101))) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $2051 = ($2050<<24>>24)==(101);
    $2052 = (($first) + 2|0);
    if ($2051) {
     $2053 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($2052,$last,$db)|0);
     $t$0$i = $2053;
    } else {
     $2054 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($2052,$last,$db)|0);
     $t$0$i = $2054;
    }
    $2055 = ($t$0$i|0)==($2052|0);
    if ($2055) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $2056 = HEAP32[$db>>2]|0;
    $2057 = (($db) + 4|0);
    $2058 = HEAP32[$2057>>2]|0;
    $2059 = ($2056|0)==($2058|0);
    if ($2059) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $2060 = (($2058) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($46,$2060);
    $2061 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($46,0,49008,7)|0);
    ;HEAP32[$45+0>>2]=HEAP32[$2061+0>>2]|0;HEAP32[$45+4>>2]=HEAP32[$2061+4>>2]|0;HEAP32[$45+8>>2]=HEAP32[$2061+8>>2]|0;
    ;HEAP32[$2061+0>>2]=0|0;HEAP32[$2061+4>>2]=0|0;HEAP32[$2061+8>>2]=0|0;
    $2062 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($45,48736,1)|0);
    $2063 = HEAP8[$2062>>0]|0;
    $2064 = (($2062) + 1|0);
    ;HEAP8[$$sroa$5386+0>>0]=HEAP8[$2064+0>>0]|0;HEAP8[$$sroa$5386+1>>0]=HEAP8[$2064+1>>0]|0;HEAP8[$$sroa$5386+2>>0]=HEAP8[$2064+2>>0]|0;HEAP8[$$sroa$5386+3>>0]=HEAP8[$2064+3>>0]|0;HEAP8[$$sroa$5386+4>>0]=HEAP8[$2064+4>>0]|0;HEAP8[$$sroa$5386+5>>0]=HEAP8[$2064+5>>0]|0;HEAP8[$$sroa$5386+6>>0]=HEAP8[$2064+6>>0]|0;
    $2065 = (($2062) + 8|0);
    $2066 = HEAP32[$2065>>2]|0;
    ;HEAP32[$2062+0>>2]=0|0;HEAP32[$2062+4>>2]=0|0;HEAP32[$2062+8>>2]=0|0;
    HEAP8[$44>>0] = $2063;
    $2067 = (($44) + 1|0);
    ;HEAP8[$2067+0>>0]=HEAP8[$$sroa$5386+0>>0]|0;HEAP8[$2067+1>>0]=HEAP8[$$sroa$5386+1>>0]|0;HEAP8[$2067+2>>0]=HEAP8[$$sroa$5386+2>>0]|0;HEAP8[$2067+3>>0]=HEAP8[$$sroa$5386+3>>0]|0;HEAP8[$2067+4>>0]=HEAP8[$$sroa$5386+4>>0]|0;HEAP8[$2067+5>>0]=HEAP8[$$sroa$5386+5>>0]|0;HEAP8[$2067+6>>0]=HEAP8[$$sroa$5386+6>>0]|0;
    $2068 = (($44) + 8|0);
    HEAP32[$2068>>2] = $2066;
    ;HEAP8[$$sroa$5386+0>>0]=0|0;HEAP8[$$sroa$5386+1>>0]=0|0;HEAP8[$$sroa$5386+2>>0]=0|0;HEAP8[$$sroa$5386+3>>0]=0|0;HEAP8[$$sroa$5386+4>>0]=0|0;HEAP8[$$sroa$5386+5>>0]=0|0;HEAP8[$$sroa$5386+6>>0]=0|0;
    $2069 = (($44) + 12|0);
    ;HEAP32[$2069+0>>2]=0|0;HEAP32[$2069+4>>2]=0|0;HEAP32[$2069+8>>2]=0|0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($2060,$44);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($44);
    $$pre451 = HEAP8[$45>>0]|0;
    $phitmp454 = $$pre451 & 1;
    $phitmp455 = ($phitmp454<<24>>24)==(0);
    if (!($phitmp455)) {
     $2070 = (($45) + 8|0);
     $2071 = HEAP32[$2070>>2]|0;
     _free($2071);
    }
    $2072 = HEAP8[$46>>0]|0;
    $2073 = $2072 & 1;
    $2074 = ($2073<<24>>24)==(0);
    if ($2074) {
     $$0 = $t$0$i;
     STACKTOP = sp;return ($$0|0);
    }
    $2075 = (($46) + 8|0);
    $2076 = HEAP32[$2075>>2]|0;
    _free($2076);
    $$0 = $t$0$i;
    STACKTOP = sp;return ($$0|0);
   } else if ((($2045|0) == 114)) {
    HEAP8[$117>>0] = 10;
    $2077 = (($117) + 1|0);
    ;HEAP8[$2077+0>>0]=HEAP8[48992+0>>0]|0;HEAP8[$2077+1>>0]=HEAP8[48992+1>>0]|0;HEAP8[$2077+2>>0]=HEAP8[48992+2>>0]|0;HEAP8[$2077+3>>0]=HEAP8[48992+3>>0]|0;HEAP8[$2077+4>>0]=HEAP8[48992+4>>0]|0;
    $2078 = (($117) + 6|0);
    HEAP8[$2078>>0] = 0;
    $2079 = (($117) + 12|0);
    ;HEAP32[$2079+0>>2]=0|0;HEAP32[$2079+4>>2]=0|0;HEAP32[$2079+8>>2]=0|0;
    $2080 = (($db) + 4|0);
    $2081 = HEAP32[$2080>>2]|0;
    $2082 = (($db) + 8|0);
    $2083 = HEAP32[$2082>>2]|0;
    $2084 = ($2081>>>0)<($2083>>>0);
    if ($2084) {
     $2085 = ($2081|0)==(0|0);
     if ($2085) {
      $2088 = 0;
     } else {
      ;HEAP32[$2081+0>>2]=HEAP32[$117+0>>2]|0;HEAP32[$2081+4>>2]=HEAP32[$117+4>>2]|0;HEAP32[$2081+8>>2]=HEAP32[$117+8>>2]|0;
      ;HEAP32[$117+0>>2]=0|0;HEAP32[$117+4>>2]=0|0;HEAP32[$117+8>>2]=0|0;
      $2086 = (($2081) + 12|0);
      ;HEAP32[$2086+0>>2]=HEAP32[$2079+0>>2]|0;HEAP32[$2086+4>>2]=HEAP32[$2079+4>>2]|0;HEAP32[$2086+8>>2]=HEAP32[$2079+8>>2]|0;
      ;HEAP32[$2079+0>>2]=0|0;HEAP32[$2079+4>>2]=0|0;HEAP32[$2079+8>>2]=0|0;
      $$pre$i125 = HEAP32[$2080>>2]|0;
      $2088 = $$pre$i125;
     }
     $2087 = (($2088) + 24|0);
     HEAP32[$2080>>2] = $2087;
    } else {
     $2089 = (($db) + 12|0);
     $2090 = HEAP32[$db>>2]|0;
     $2091 = $2081;
     $2092 = $2090;
     $2093 = (($2091) - ($2092))|0;
     $2094 = (($2093|0) / 24)&-1;
     $2095 = (($2094) + 1)|0;
     $2096 = ($2095|0)<(0);
     if ($2096) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $2097 = $2083;
     $2098 = (($2097) - ($2092))|0;
     $2099 = (($2098|0) / 24)&-1;
     $2100 = ($2099>>>0)<(1073741823);
     if ($2100) {
      $2101 = $2099 << 1;
      $2102 = ($2101>>>0)<($2095>>>0);
      $2103 = $2102 ? $2095 : $2101;
      $$0$i$i$i = $2103;
     } else {
      $$0$i$i$i = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($$sroa$5422,$$0$i$i$i,$2094,$2089);
     $2104 = (($$sroa$5422) + 8|0);
     $2105 = HEAP32[$2104>>2]|0;
     $2106 = ($2105|0)==(0|0);
     if (!($2106)) {
      ;HEAP32[$2105+0>>2]=HEAP32[$117+0>>2]|0;HEAP32[$2105+4>>2]=HEAP32[$117+4>>2]|0;HEAP32[$2105+8>>2]=HEAP32[$117+8>>2]|0;
      ;HEAP32[$117+0>>2]=0|0;HEAP32[$117+4>>2]=0|0;HEAP32[$117+8>>2]=0|0;
      $2107 = (($2105) + 12|0);
      ;HEAP32[$2107+0>>2]=HEAP32[$2079+0>>2]|0;HEAP32[$2107+4>>2]=HEAP32[$2079+4>>2]|0;HEAP32[$2107+8>>2]=HEAP32[$2079+8>>2]|0;
      ;HEAP32[$2079+0>>2]=0|0;HEAP32[$2079+4>>2]=0|0;HEAP32[$2079+8>>2]=0|0;
     }
     $2108 = (($2105) + 24|0);
     HEAP32[$2104>>2] = $2108;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$$sroa$5422);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($$sroa$5422);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($117);
    $2109 = (($first) + 2|0);
    $$0 = $2109;
    STACKTOP = sp;return ($$0|0);
   } else if ((($2045|0) == 119)) {
    $2110 = ($120|0)>(2);
    if (!($2110)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $2111 = HEAP8[$first>>0]|0;
    $2112 = ($2111<<24>>24)==(116);
    if (!($2112)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $2113 = (($first) + 1|0);
    $2114 = HEAP8[$2113>>0]|0;
    $2115 = ($2114<<24>>24)==(119);
    if (!($2115)) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $2116 = (($first) + 2|0);
    $2117 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($2116,$last,$db)|0);
    $2118 = ($2117|0)==($2116|0);
    if ($2118) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $2119 = HEAP32[$db>>2]|0;
    $2120 = (($db) + 4|0);
    $2121 = HEAP32[$2120>>2]|0;
    $2122 = ($2119|0)==($2121|0);
    if ($2122) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $2123 = (($2121) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($48,$2123);
    $2124 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($48,0,49000,6)|0);
    $2125 = HEAP8[$2124>>0]|0;
    $2126 = (($2124) + 1|0);
    ;HEAP8[$$sroa$5383+0>>0]=HEAP8[$2126+0>>0]|0;HEAP8[$$sroa$5383+1>>0]=HEAP8[$2126+1>>0]|0;HEAP8[$$sroa$5383+2>>0]=HEAP8[$2126+2>>0]|0;HEAP8[$$sroa$5383+3>>0]=HEAP8[$2126+3>>0]|0;HEAP8[$$sroa$5383+4>>0]=HEAP8[$2126+4>>0]|0;HEAP8[$$sroa$5383+5>>0]=HEAP8[$2126+5>>0]|0;HEAP8[$$sroa$5383+6>>0]=HEAP8[$2126+6>>0]|0;
    $2127 = (($2124) + 8|0);
    $2128 = HEAP32[$2127>>2]|0;
    ;HEAP32[$2124+0>>2]=0|0;HEAP32[$2124+4>>2]=0|0;HEAP32[$2124+8>>2]=0|0;
    HEAP8[$47>>0] = $2125;
    $2129 = (($47) + 1|0);
    ;HEAP8[$2129+0>>0]=HEAP8[$$sroa$5383+0>>0]|0;HEAP8[$2129+1>>0]=HEAP8[$$sroa$5383+1>>0]|0;HEAP8[$2129+2>>0]=HEAP8[$$sroa$5383+2>>0]|0;HEAP8[$2129+3>>0]=HEAP8[$$sroa$5383+3>>0]|0;HEAP8[$2129+4>>0]=HEAP8[$$sroa$5383+4>>0]|0;HEAP8[$2129+5>>0]=HEAP8[$$sroa$5383+5>>0]|0;HEAP8[$2129+6>>0]=HEAP8[$$sroa$5383+6>>0]|0;
    $2130 = (($47) + 8|0);
    HEAP32[$2130>>2] = $2128;
    ;HEAP8[$$sroa$5383+0>>0]=0|0;HEAP8[$$sroa$5383+1>>0]=0|0;HEAP8[$$sroa$5383+2>>0]=0|0;HEAP8[$$sroa$5383+3>>0]=0|0;HEAP8[$$sroa$5383+4>>0]=0|0;HEAP8[$$sroa$5383+5>>0]=0|0;HEAP8[$$sroa$5383+6>>0]=0|0;
    $2131 = (($47) + 12|0);
    ;HEAP32[$2131+0>>2]=0|0;HEAP32[$2131+4>>2]=0|0;HEAP32[$2131+8>>2]=0|0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($2123,$47);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($47);
    $$pre452 = HEAP8[$48>>0]|0;
    $phitmp = $$pre452 & 1;
    $phitmp453 = ($phitmp<<24>>24)==(0);
    if ($phitmp453) {
     $$0 = $2117;
     STACKTOP = sp;return ($$0|0);
    }
    $2132 = (($48) + 8|0);
    $2133 = HEAP32[$2132>>2]|0;
    _free($2133);
    $$0 = $2117;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 57: case 56: case 55: case 54: case 53: case 52: case 51: case 50: case 49:  {
   $2134 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
   $$0 = $2134;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  default: {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  }
 } while(0);
 return (0)|0;
}
function __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($this,$__x,$__a) {
 $this = $this|0;
 $__x = $__x|0;
 $__a = $__a|0;
 var $$0$i = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$this>>2] = 0;
 $0 = (($this) + 4|0);
 HEAP32[$0>>2] = 0;
 $1 = HEAP32[$__a>>2]|0;
 $2 = (($this) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = (($this) + 12|0);
 HEAP32[$3>>2] = $1;
 $4 = (($1) + 4096|0);
 $5 = (($1) + 4096|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $4;
 $8 = $6;
 $9 = (($7) - ($8))|0;
 $10 = ($9>>>0)<(32);
 if ($10) {
  $12 = (_malloc(32)|0);
  $$0$i = $12;
 } else {
  $11 = (($6) + 32|0);
  HEAP32[$5>>2] = $11;
  $$0$i = $6;
 }
 HEAP32[$0>>2] = $$0$i;
 HEAP32[$this>>2] = $$0$i;
 $13 = (($$0$i) + 24|0);
 HEAP32[$2>>2] = $13;
 $14 = ($$0$i|0)==(0|0);
 if ($14) {
  $18 = 0;
  $17 = (($18) + 24|0);
  HEAP32[$0>>2] = $17;
  STACKTOP = sp;return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($$0$i,$__x);
 $15 = (($$0$i) + 12|0);
 $16 = (($__x) + 12|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($15,$16);
 $$pre$i = HEAP32[$0>>2]|0;
 $18 = $$pre$i;
 $17 = (($18) + 24|0);
 HEAP32[$0>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i14 = 0, $$0$i$i$i23 = 0, $$0$i$i$i8 = 0, $$02$i$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i12 = 0, $$pre$i20 = 0, $$pre$i7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__p$0$lcssa$i$i = 0, $__p$0$ph$i$i = 0, $__p$01$i$i = 0, $__v$i$i19 = 0;
 var $isdigit = 0, $isdigit5 = 0, $isdigittmp = 0, $isdigittmp4 = 0, $scevgep4$i$i = 0, $sub$042 = 0, $t1$041 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $__v$i$i19 = sp + 64|0;
 $0 = sp + 40|0;
 $1 = sp + 16|0;
 $2 = sp;
 $3 = $last;
 $4 = $first;
 $5 = (($3) - ($4))|0;
 $6 = ($5|0)>(1);
 if (!($6)) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $7 = HEAP8[$first>>0]|0;
 $8 = ($7<<24>>24)==(84);
 if (!($8)) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $9 = (($first) + 1|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = ($10<<24>>24)==(95);
 if ($11) {
  $12 = (($db) + 32|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($db) + 36|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ($13|0)==($15|0);
  if ($16) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $17 = (($15) + -16|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($15) + -12|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($18|0)==($20|0);
  if ($21) {
   HEAP8[$0>>0] = 4;
   $58 = (($0) + 1|0);
   HEAP8[$58>>0]=24404&255;HEAP8[$58+1>>0]=24404>>8;
   $59 = (($0) + 3|0);
   HEAP8[$59>>0] = 0;
   $60 = (($0) + 12|0);
   ;HEAP32[$60+0>>2]=0|0;HEAP32[$60+4>>2]=0|0;HEAP32[$60+8>>2]=0|0;
   $61 = (($db) + 4|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = (($db) + 8|0);
   $64 = HEAP32[$63>>2]|0;
   $65 = ($62>>>0)<($64>>>0);
   if ($65) {
    $66 = ($62|0)==(0|0);
    if ($66) {
     $69 = 0;
    } else {
     ;HEAP32[$62+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$62+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$62+8>>2]=HEAP32[$0+8>>2]|0;
     ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
     $67 = (($62) + 12|0);
     ;HEAP32[$67+0>>2]=HEAP32[$60+0>>2]|0;HEAP32[$67+4>>2]=HEAP32[$60+4>>2]|0;HEAP32[$67+8>>2]=HEAP32[$60+8>>2]|0;
     ;HEAP32[$60+0>>2]=0|0;HEAP32[$60+4>>2]=0|0;HEAP32[$60+8>>2]=0|0;
     $$pre$i12 = HEAP32[$61>>2]|0;
     $69 = $$pre$i12;
    }
    $68 = (($69) + 24|0);
    HEAP32[$61>>2] = $68;
   } else {
    $70 = (($db) + 12|0);
    $71 = HEAP32[$db>>2]|0;
    $72 = $62;
    $73 = $71;
    $74 = (($72) - ($73))|0;
    $75 = (($74|0) / 24)&-1;
    $76 = (($75) + 1)|0;
    $77 = ($76|0)<(0);
    if ($77) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $78 = $64;
    $79 = (($78) - ($73))|0;
    $80 = (($79|0) / 24)&-1;
    $81 = ($80>>>0)<(1073741823);
    if ($81) {
     $82 = $80 << 1;
     $83 = ($82>>>0)<($76>>>0);
     $84 = $83 ? $76 : $82;
     $$0$i$i$i14 = $84;
    } else {
     $$0$i$i$i14 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i19,$$0$i$i$i14,$75,$70);
    $85 = (($__v$i$i19) + 8|0);
    $86 = HEAP32[$85>>2]|0;
    $87 = ($86|0)==(0|0);
    if (!($87)) {
     ;HEAP32[$86+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$86+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$86+8>>2]=HEAP32[$0+8>>2]|0;
     ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
     $88 = (($86) + 12|0);
     ;HEAP32[$88+0>>2]=HEAP32[$60+0>>2]|0;HEAP32[$88+4>>2]=HEAP32[$60+4>>2]|0;HEAP32[$88+8>>2]=HEAP32[$60+8>>2]|0;
     ;HEAP32[$60+0>>2]=0|0;HEAP32[$60+4>>2]=0|0;HEAP32[$60+8>>2]=0|0;
    }
    $89 = (($86) + 24|0);
    HEAP32[$85>>2] = $89;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i19);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i19);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
   $90 = (($first) + 2|0);
   $91 = (($db) + 62|0);
   HEAP8[$91>>0] = 1;
   $$0 = $90;
   STACKTOP = sp;return ($$0|0);
  }
  $22 = HEAP32[$18>>2]|0;
  $23 = (($18) + 4|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ($22|0)==($24|0);
  L32: do {
   if (!($25)) {
    $26 = (($db) + 4|0);
    $27 = (($db) + 8|0);
    $28 = (($db) + 12|0);
    $29 = (($__v$i$i19) + 8|0);
    $34 = $22;
    while(1) {
     $30 = HEAP32[$26>>2]|0;
     $31 = HEAP32[$27>>2]|0;
     $32 = ($30|0)==($31|0);
     if ($32) {
      $39 = HEAP32[$db>>2]|0;
      $40 = $30;
      $41 = $39;
      $42 = (($40) - ($41))|0;
      $43 = (($42|0) / 24)&-1;
      $44 = (($43) + 1)|0;
      $45 = ($44|0)<(0);
      if ($45) {
       break;
      }
      $46 = ($43>>>0)<(1073741823);
      if ($46) {
       $47 = $43 << 1;
       $48 = ($47>>>0)<($44>>>0);
       $49 = $48 ? $44 : $47;
       $$0$i$i$i8 = $49;
      } else {
       $$0$i$i$i8 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i19,$$0$i$i$i8,$43,$28);
      $50 = HEAP32[$29>>2]|0;
      $51 = ($50|0)==(0|0);
      if (!($51)) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($50,$34);
       $52 = (($50) + 12|0);
       $53 = (($34) + 12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($52,$53);
      }
      $54 = (($50) + 24|0);
      HEAP32[$29>>2] = $54;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i19);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i19);
     } else {
      $33 = ($30|0)==(0|0);
      if ($33) {
       $38 = 0;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($30,$34);
       $35 = (($30) + 12|0);
       $36 = (($34) + 12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($35,$36);
       $$pre$i7 = HEAP32[$26>>2]|0;
       $38 = $$pre$i7;
      }
      $37 = (($38) + 24|0);
      HEAP32[$26>>2] = $37;
     }
     $55 = (($34) + 24|0);
     $56 = ($55|0)==($24|0);
     if ($56) {
      break L32;
     } else {
      $34 = $55;
     }
    }
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
  } while(0);
  $57 = (($first) + 2|0);
  $$0 = $57;
  STACKTOP = sp;return ($$0|0);
 }
 $92 = $10 << 24 >> 24;
 $isdigittmp = (($92) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 if (!($isdigit)) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $93 = (($first) + 2|0);
 $94 = ($93|0)==($last|0);
 if ($94) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 } else {
  $sub$042 = $isdigittmp;$t1$041 = $93;
 }
 while(1) {
  $95 = HEAP8[$t1$041>>0]|0;
  $96 = $95 << 24 >> 24;
  $isdigittmp4 = (($96) + -48)|0;
  $isdigit5 = ($isdigittmp4>>>0)<(10);
  if (!($isdigit5)) {
   break;
  }
  $97 = ($sub$042*10)|0;
  $98 = (($97) + -48)|0;
  $99 = (($98) + ($96))|0;
  $100 = (($t1$041) + 1|0);
  $101 = ($100|0)==($last|0);
  if ($101) {
   $$0 = $first;
   label = 76;
   break;
  } else {
   $sub$042 = $99;$t1$041 = $100;
  }
 }
 if ((label|0) == 76) {
  STACKTOP = sp;return ($$0|0);
 }
 $102 = ($95<<24>>24)==(95);
 if (!($102)) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $103 = (($db) + 32|0);
 $104 = HEAP32[$103>>2]|0;
 $105 = (($db) + 36|0);
 $106 = HEAP32[$105>>2]|0;
 $107 = ($104|0)==($106|0);
 if ($107) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $108 = (($sub$042) + 1)|0;
 $109 = (($106) + -12|0);
 $110 = HEAP32[$109>>2]|0;
 $111 = (($106) + -16|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $110;
 $114 = $112;
 $115 = (($113) - ($114))|0;
 $116 = $115 >> 4;
 $117 = ($108>>>0)<($116>>>0);
 if ($117) {
  $118 = (($112) + ($108<<4)|0);
  $119 = HEAP32[$118>>2]|0;
  $120 = ((($112) + ($108<<4)|0) + 4|0);
  $121 = HEAP32[$120>>2]|0;
  $122 = ($119|0)==($121|0);
  L73: do {
   if (!($122)) {
    $123 = (($db) + 4|0);
    $124 = (($db) + 8|0);
    $125 = (($db) + 12|0);
    $126 = (($__v$i$i19) + 8|0);
    $131 = $119;
    while(1) {
     $127 = HEAP32[$123>>2]|0;
     $128 = HEAP32[$124>>2]|0;
     $129 = ($127|0)==($128|0);
     if ($129) {
      $136 = HEAP32[$db>>2]|0;
      $137 = $127;
      $138 = $136;
      $139 = (($137) - ($138))|0;
      $140 = (($139|0) / 24)&-1;
      $141 = (($140) + 1)|0;
      $142 = ($141|0)<(0);
      if ($142) {
       break;
      }
      $143 = ($140>>>0)<(1073741823);
      if ($143) {
       $144 = $140 << 1;
       $145 = ($144>>>0)<($141>>>0);
       $146 = $145 ? $141 : $144;
       $$0$i$i$i23 = $146;
      } else {
       $$0$i$i$i23 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i19,$$0$i$i$i23,$140,$125);
      $147 = HEAP32[$126>>2]|0;
      $148 = ($147|0)==(0|0);
      if (!($148)) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($147,$131);
       $149 = (($147) + 12|0);
       $150 = (($131) + 12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($149,$150);
      }
      $151 = (($147) + 24|0);
      HEAP32[$126>>2] = $151;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i19);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i19);
     } else {
      $130 = ($127|0)==(0|0);
      if ($130) {
       $135 = 0;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($127,$131);
       $132 = (($127) + 12|0);
       $133 = (($131) + 12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($132,$133);
       $$pre$i20 = HEAP32[$123>>2]|0;
       $135 = $$pre$i20;
      }
      $134 = (($135) + 24|0);
      HEAP32[$123>>2] = $134;
     }
     $152 = (($131) + 24|0);
     $153 = ($152|0)==($121|0);
     if ($153) {
      break L73;
     } else {
      $131 = $152;
     }
    }
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
  } while(0);
  $154 = (($t1$041) + 1|0);
  $$0 = $154;
  STACKTOP = sp;return ($$0|0);
 }
 $155 = (($t1$041) + 1|0);
 $156 = $155;
 $157 = (($156) - ($4))|0;
 $158 = ($157>>>0)>(4294967279);
 if ($158) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $159 = ($157>>>0)<(11);
 if ($159) {
  $160 = $157 << 1;
  $161 = $160&255;
  HEAP8[$2>>0] = $161;
  $162 = (($2) + 1|0);
  $__p$0$ph$i$i = $162;
 } else {
  $163 = (($157) + 16)|0;
  $164 = $163 & -16;
  $165 = (_malloc($164)|0);
  $166 = (($2) + 8|0);
  HEAP32[$166>>2] = $165;
  $167 = $164 | 1;
  HEAP32[$2>>2] = $167;
  $168 = (($2) + 4|0);
  HEAP32[$168>>2] = $157;
  $__p$0$ph$i$i = $165;
 }
 $169 = ($155|0)==($first|0);
 if ($169) {
  $__p$0$lcssa$i$i = $__p$0$ph$i$i;
 } else {
  $$02$i$i = $first;$170 = 84;$__p$01$i$i = $__p$0$ph$i$i;
  while(1) {
   HEAP8[$__p$01$i$i>>0] = $170;
   $171 = (($$02$i$i) + 1|0);
   $172 = ($$02$i$i|0)==($t1$041|0);
   if ($172) {
    break;
   }
   $173 = (($__p$01$i$i) + 1|0);
   $$pre = HEAP8[$171>>0]|0;
   $$02$i$i = $171;$170 = $$pre;$__p$01$i$i = $173;
  }
  $scevgep4$i$i = (($__p$0$ph$i$i) + ($157)|0);
  $__p$0$lcssa$i$i = $scevgep4$i$i;
 }
 HEAP8[$__p$0$lcssa$i$i>>0] = 0;
 ;HEAP32[$1+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$1+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$2+8>>2]|0;
 ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
 $174 = (($1) + 12|0);
 ;HEAP32[$174+0>>2]=0|0;HEAP32[$174+4>>2]=0|0;HEAP32[$174+8>>2]=0|0;
 $175 = (($db) + 4|0);
 $176 = HEAP32[$175>>2]|0;
 $177 = (($db) + 8|0);
 $178 = HEAP32[$177>>2]|0;
 $179 = ($176>>>0)<($178>>>0);
 if ($179) {
  $180 = ($176|0)==(0|0);
  if ($180) {
   $183 = 0;
  } else {
   ;HEAP32[$176+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$176+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$176+8>>2]=HEAP32[$1+8>>2]|0;
   ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
   $181 = (($176) + 12|0);
   ;HEAP32[$181+0>>2]=HEAP32[$174+0>>2]|0;HEAP32[$181+4>>2]=HEAP32[$174+4>>2]|0;HEAP32[$181+8>>2]=HEAP32[$174+8>>2]|0;
   ;HEAP32[$174+0>>2]=0|0;HEAP32[$174+4>>2]=0|0;HEAP32[$174+8>>2]=0|0;
   $$pre$i = HEAP32[$175>>2]|0;
   $183 = $$pre$i;
  }
  $182 = (($183) + 24|0);
  HEAP32[$175>>2] = $182;
 } else {
  $184 = (($db) + 12|0);
  $185 = HEAP32[$db>>2]|0;
  $186 = $176;
  $187 = $185;
  $188 = (($186) - ($187))|0;
  $189 = (($188|0) / 24)&-1;
  $190 = (($189) + 1)|0;
  $191 = ($190|0)<(0);
  if ($191) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
   // unreachable;
  }
  $192 = $178;
  $193 = (($192) - ($187))|0;
  $194 = (($193|0) / 24)&-1;
  $195 = ($194>>>0)<(1073741823);
  if ($195) {
   $196 = $194 << 1;
   $197 = ($196>>>0)<($190>>>0);
   $198 = $197 ? $190 : $196;
   $$0$i$i$i = $198;
  } else {
   $$0$i$i$i = 2147483647;
  }
  __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i19,$$0$i$i$i,$189,$184);
  $199 = (($__v$i$i19) + 8|0);
  $200 = HEAP32[$199>>2]|0;
  $201 = ($200|0)==(0|0);
  if (!($201)) {
   ;HEAP32[$200+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$200+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$200+8>>2]=HEAP32[$1+8>>2]|0;
   ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
   $202 = (($200) + 12|0);
   ;HEAP32[$202+0>>2]=HEAP32[$174+0>>2]|0;HEAP32[$202+4>>2]=HEAP32[$174+4>>2]|0;HEAP32[$202+8>>2]=HEAP32[$174+8>>2]|0;
   ;HEAP32[$174+0>>2]=0|0;HEAP32[$174+4>>2]=0|0;HEAP32[$174+8>>2]=0|0;
  }
  $203 = (($200) + 24|0);
  HEAP32[$199>>2] = $203;
  __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i19);
  __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i19);
 }
 __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
 $204 = (($db) + 62|0);
 HEAP8[$204>>0] = 1;
 $$0 = $155;
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0$i$i$i = 0, $$0$i$i$i13 = 0, $$0$i$i$i25 = 0, $$0$i$i$i9 = 0, $$1 = 0, $$pre = 0, $$pre$i = 0, $$pre$i12 = 0, $$pre$i24 = 0, $$pre$i8 = 0, $$pre15 = 0, $$pre16 = 0, $$sroa$5 = 0, $$sum$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__v$i$i23 = 0, $args = 0, $k$036 = 0;
 var $k1$045 = 0, $k2$042 = 0, $or$cond = 0, $phitmp = 0, $phitmp17 = 0, $t$066 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $__v$i$i23 = sp + 48|0;
 $args = sp + 36|0;
 $0 = sp + 24|0;
 $1 = sp;
 $$sroa$5 = sp + 68|0;
 $2 = $last;
 $3 = $first;
 $4 = (($2) - ($3))|0;
 $5 = ($4|0)>(1);
 if (!($5)) {
  $$1 = $first;
  STACKTOP = sp;return ($$1|0);
 }
 $6 = HEAP8[$first>>0]|0;
 $7 = ($6<<24>>24)==(73);
 if (!($7)) {
  $$1 = $first;
  STACKTOP = sp;return ($$1|0);
 }
 $8 = (($db) + 61|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = ($9<<24>>24)==(0);
 if (!($10)) {
  $11 = (($db) + 36|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($12) + -16|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($12) + -12|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==($14|0);
  if (!($17)) {
   $19 = $16;
   while(1) {
    $18 = (($19) + -16|0);
    HEAP32[$15>>2] = $18;
    __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($18);
    $20 = HEAP32[$15>>2]|0;
    $21 = ($20|0)==($14|0);
    if ($21) {
     break;
    } else {
     $19 = $20;
    }
   }
  }
 }
 $22 = (($first) + 1|0);
 HEAP8[$args>>0] = 2;
 $23 = (($args) + 1|0);
 HEAP8[$23>>0] = 60;
 $24 = (($args) + 2|0);
 HEAP8[$24>>0] = 0;
 $25 = HEAP8[$22>>0]|0;
 $26 = ($25<<24>>24)==(69);
 do {
  if ($26) {
   $27 = (($22) + 1|0);
   $216 = 2;$261 = $27;
   label = 72;
  } else {
   $28 = (($db) + 4|0);
   $29 = (($db) + 36|0);
   $30 = (($db) + 12|0);
   $31 = (($__v$i$i23) + 8|0);
   $32 = (($__v$i$i23) + 8|0);
   $33 = (($0) + 1|0);
   $34 = (($0) + 8|0);
   $35 = (($0) + 4|0);
   $36 = (($args) + 4|0);
   $37 = (($db) + 32|0);
   $38 = (($db) + 40|0);
   $39 = (($db) + 44|0);
   $40 = (($__v$i$i23) + 8|0);
   $t$066 = $22;
   L14: while(1) {
    $44 = HEAP8[$8>>0]|0;
    $45 = ($44<<24>>24)==(0);
    do {
     if (!($45)) {
      $46 = HEAP32[$30>>2]|0;
      $47 = HEAP32[$29>>2]|0;
      $48 = HEAP32[$38>>2]|0;
      $49 = ($47>>>0)<($48>>>0);
      if ($49) {
       $50 = ($47|0)==(0|0);
       if ($50) {
        $55 = 0;
       } else {
        HEAP32[$47>>2] = 0;
        $51 = (($47) + 4|0);
        HEAP32[$51>>2] = 0;
        $52 = (($47) + 8|0);
        HEAP32[$52>>2] = 0;
        $53 = (($47) + 12|0);
        HEAP32[$53>>2] = $46;
        $$pre$i = HEAP32[$29>>2]|0;
        $55 = $$pre$i;
       }
       $54 = (($55) + 16|0);
       HEAP32[$29>>2] = $54;
       break;
      }
      $56 = HEAP32[$37>>2]|0;
      $57 = $47;
      $58 = $56;
      $59 = (($57) - ($58))|0;
      $60 = $59 >> 4;
      $61 = (($60) + 1)|0;
      $62 = ($61|0)<(0);
      if ($62) {
       label = 16;
       break L14;
      }
      $63 = $48;
      $64 = (($63) - ($58))|0;
      $65 = $64 >> 4;
      $66 = ($65>>>0)<(1073741823);
      if ($66) {
       $67 = $64 >> 3;
       $68 = ($67>>>0)<($61>>>0);
       $69 = $68 ? $61 : $67;
       $$0$i$i$i = $69;
      } else {
       $$0$i$i$i = 2147483647;
      }
      __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($__v$i$i23,$$0$i$i$i,$60,$39);
      $70 = HEAP32[$40>>2]|0;
      $71 = ($70|0)==(0|0);
      if (!($71)) {
       HEAP32[$70>>2] = 0;
       $72 = (($70) + 4|0);
       HEAP32[$72>>2] = 0;
       $73 = (($70) + 8|0);
       HEAP32[$73>>2] = 0;
       $74 = (($70) + 12|0);
       HEAP32[$74>>2] = $46;
      }
      $75 = (($70) + 16|0);
      HEAP32[$40>>2] = $75;
      __ZNSt3__16vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($37,$__v$i$i23);
      __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($__v$i$i23);
     }
    } while(0);
    $76 = HEAP32[$28>>2]|0;
    $77 = HEAP32[$db>>2]|0;
    $78 = $76;
    $79 = $77;
    $80 = (($78) - ($79))|0;
    $81 = (($80|0) / 24)&-1;
    $42 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($t$066,$last,$db)|0);
    $82 = HEAP32[$28>>2]|0;
    $83 = HEAP32[$db>>2]|0;
    $84 = $82;
    $85 = $83;
    $86 = (($84) - ($85))|0;
    $87 = (($86|0) / 24)&-1;
    $88 = HEAP8[$8>>0]|0;
    $89 = ($88<<24>>24)==(0);
    if (!($89)) {
     $90 = HEAP32[$29>>2]|0;
     $91 = (($90) + -16|0);
     $93 = $90;
     while(1) {
      $92 = (($93) + -16|0);
      HEAP32[$29>>2] = $92;
      __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($92);
      $94 = HEAP32[$29>>2]|0;
      $95 = ($94|0)==($91|0);
      if ($95) {
       break;
      } else {
       $93 = $94;
      }
     }
    }
    $96 = ($42|0)==($t$066|0);
    $97 = ($42|0)==($last|0);
    $or$cond = $96 | $97;
    if ($or$cond) {
     label = 26;
     break;
    }
    $103 = HEAP8[$8>>0]|0;
    $104 = ($103<<24>>24)==(0);
    if (!($104)) {
     $105 = HEAP32[$29>>2]|0;
     $106 = (($105) + -16|0);
     $107 = HEAP32[$30>>2]|0;
     $108 = (($105) + -12|0);
     $109 = HEAP32[$108>>2]|0;
     $110 = (($105) + -8|0);
     $111 = HEAP32[$110>>2]|0;
     $112 = ($109>>>0)<($111>>>0);
     if ($112) {
      $113 = ($109|0)==(0|0);
      if ($113) {
       $118 = 0;
      } else {
       HEAP32[$109>>2] = 0;
       $114 = (($109) + 4|0);
       HEAP32[$114>>2] = 0;
       $115 = (($109) + 8|0);
       HEAP32[$115>>2] = 0;
       $116 = (($109) + 12|0);
       HEAP32[$116>>2] = $107;
       $$pre$i8 = HEAP32[$108>>2]|0;
       $118 = $$pre$i8;
      }
      $117 = (($118) + 16|0);
      HEAP32[$108>>2] = $117;
     } else {
      $119 = (($105) + -4|0);
      $120 = HEAP32[$106>>2]|0;
      $121 = $109;
      $122 = $120;
      $123 = (($121) - ($122))|0;
      $124 = $123 >> 4;
      $125 = (($124) + 1)|0;
      $126 = ($125|0)<(0);
      if ($126) {
       label = 34;
       break;
      }
      $127 = $111;
      $128 = (($127) - ($122))|0;
      $129 = $128 >> 4;
      $130 = ($129>>>0)<(1073741823);
      if ($130) {
       $131 = $128 >> 3;
       $132 = ($131>>>0)<($125>>>0);
       $133 = $132 ? $125 : $131;
       $$0$i$i$i9 = $133;
      } else {
       $$0$i$i$i9 = 2147483647;
      }
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i23,$$0$i$i$i9,$124,$119);
      $134 = HEAP32[$31>>2]|0;
      $135 = ($134|0)==(0|0);
      if (!($135)) {
       HEAP32[$134>>2] = 0;
       $136 = (($134) + 4|0);
       HEAP32[$136>>2] = 0;
       $137 = (($134) + 8|0);
       HEAP32[$137>>2] = 0;
       $138 = (($134) + 12|0);
       HEAP32[$138>>2] = $107;
      }
      $139 = (($134) + 16|0);
      HEAP32[$31>>2] = $139;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($106,$__v$i$i23);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i23);
     }
     $140 = ($81>>>0)<($87>>>0);
     if ($140) {
      $k$036 = $81;
      while(1) {
       $141 = HEAP32[$29>>2]|0;
       $142 = (($141) + -12|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = (($143) + -16|0);
       $145 = HEAP32[$db>>2]|0;
       $146 = (($145) + (($k$036*24)|0)|0);
       $147 = (($143) + -12|0);
       $148 = HEAP32[$147>>2]|0;
       $149 = (($143) + -8|0);
       $150 = HEAP32[$149>>2]|0;
       $151 = ($148|0)==($150|0);
       if ($151) {
        $157 = (($143) + -4|0);
        $158 = HEAP32[$144>>2]|0;
        $159 = $148;
        $160 = $158;
        $161 = (($159) - ($160))|0;
        $162 = (($161|0) / 24)&-1;
        $163 = (($162) + 1)|0;
        $164 = ($163|0)<(0);
        if ($164) {
         label = 46;
         break L14;
        }
        $165 = ($162>>>0)<(1073741823);
        if ($165) {
         $166 = $162 << 1;
         $167 = ($166>>>0)<($163>>>0);
         $168 = $167 ? $163 : $166;
         $$0$i$i$i13 = $168;
        } else {
         $$0$i$i$i13 = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i23,$$0$i$i$i13,$162,$157);
        $169 = HEAP32[$32>>2]|0;
        $170 = ($169|0)==(0|0);
        if (!($170)) {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($169,$146);
         $171 = (($169) + 12|0);
         $172 = ((($145) + (($k$036*24)|0)|0) + 12|0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($171,$172);
        }
        $173 = (($169) + 24|0);
        HEAP32[$32>>2] = $173;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($144,$__v$i$i23);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i23);
       } else {
        $152 = ($148|0)==(0|0);
        if ($152) {
         $156 = 0;
        } else {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($148,$146);
         $153 = (($148) + 12|0);
         $154 = ((($145) + (($k$036*24)|0)|0) + 12|0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($153,$154);
         $$pre$i12 = HEAP32[$147>>2]|0;
         $156 = $$pre$i12;
        }
        $155 = (($156) + 24|0);
        HEAP32[$147>>2] = $155;
       }
       $174 = (($k$036) + 1)|0;
       $175 = ($174>>>0)<($87>>>0);
       if ($175) {
        $k$036 = $174;
       } else {
        break;
       }
      }
     }
    }
    $176 = ($81>>>0)<($87>>>0);
    if ($176) {
     $k2$042 = $81;
     while(1) {
      $177 = HEAP8[$args>>0]|0;
      $178 = $177 & 1;
      $179 = ($178<<24>>24)==(0);
      if ($179) {
       $181 = $177&255;
       $182 = $181 >>> 1;
       $184 = $182;
      } else {
       $180 = HEAP32[$36>>2]|0;
       $184 = $180;
      }
      $183 = ($184>>>0)>(1);
      if ($183) {
       (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($args,49032,2)|0);
      }
      $185 = HEAP32[$db>>2]|0;
      $186 = (($185) + (($k2$042*24)|0)|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($0,$186);
      $187 = HEAP8[$0>>0]|0;
      $188 = $187 & 1;
      $189 = ($188<<24>>24)==(0);
      if ($189) {
       $192 = $187&255;
       $193 = $192 >>> 1;
       $194 = $33;$195 = $193;
      } else {
       $190 = HEAP32[$34>>2]|0;
       $191 = HEAP32[$35>>2]|0;
       $194 = $190;$195 = $191;
      }
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($args,$194,$195)|0);
      if (!($189)) {
       $196 = HEAP32[$34>>2]|0;
       _free($196);
      }
      $197 = (($k2$042) + 1)|0;
      $198 = ($197>>>0)<($87>>>0);
      if ($198) {
       $k2$042 = $197;
      } else {
       break;
      }
     }
    }
    $199 = ($87|0)==($81|0);
    if (!($199)) {
     $$pre = HEAP32[$28>>2]|0;
     $201 = $$pre;$k1$045 = $87;
     while(1) {
      $200 = (($201) + -24|0);
      $203 = $201;
      while(1) {
       $202 = (($203) + -24|0);
       HEAP32[$28>>2] = $202;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($202);
       $204 = HEAP32[$28>>2]|0;
       $205 = ($204|0)==($200|0);
       if ($205) {
        break;
       } else {
        $203 = $204;
       }
      }
      $206 = (($k1$045) + -1)|0;
      $207 = ($206|0)==($81|0);
      if ($207) {
       break;
      } else {
       $201 = $200;$k1$045 = $206;
      }
     }
    }
    $41 = HEAP8[$42>>0]|0;
    $43 = ($41<<24>>24)==(69);
    if ($43) {
     label = 70;
     break;
    } else {
     $t$066 = $42;
    }
   }
   if ((label|0) == 16) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   else if ((label|0) == 26) {
    $98 = HEAP8[$args>>0]|0;
    $99 = $98 & 1;
    $100 = ($99<<24>>24)==(0);
    if ($100) {
     $$1 = $first;
     STACKTOP = sp;return ($$1|0);
    }
    $101 = (($args) + 8|0);
    $102 = HEAP32[$101>>2]|0;
    _free($102);
    $$1 = $first;
    STACKTOP = sp;return ($$1|0);
   }
   else if ((label|0) == 34) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   else if ((label|0) == 46) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   else if ((label|0) == 70) {
    $$pre15 = HEAP8[$args>>0]|0;
    $208 = (($42) + 1|0);
    $209 = $$pre15 & 1;
    $210 = ($209<<24>>24)==(0);
    if ($210) {
     $216 = $$pre15;$261 = $208;
     label = 72;
     break;
    }
    $211 = (($args) + 8|0);
    $212 = HEAP32[$211>>2]|0;
    $213 = (($args) + 4|0);
    $214 = HEAP32[$213>>2]|0;
    $218 = $214;$220 = $212;$262 = $208;
    break;
   }
  }
 } while(0);
 if ((label|0) == 72) {
  $215 = $216&255;
  $217 = $215 >>> 1;
  $218 = $217;$220 = $23;$262 = $261;
 }
 $$sum$i = (($218) + -1)|0;
 $219 = (($220) + ($$sum$i)|0);
 $221 = HEAP8[$219>>0]|0;
 $222 = ($221<<24>>24)==(62);
 if ($222) {
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($args,50624,2)|0);
 } else {
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($args,48832,1)|0);
 }
 $223 = HEAP8[$args>>0]|0;
 $224 = (($args) + 1|0);
 ;HEAP8[$$sroa$5+0>>0]=HEAP8[$224+0>>0]|0;HEAP8[$$sroa$5+1>>0]=HEAP8[$224+1>>0]|0;HEAP8[$$sroa$5+2>>0]=HEAP8[$224+2>>0]|0;HEAP8[$$sroa$5+3>>0]=HEAP8[$224+3>>0]|0;HEAP8[$$sroa$5+4>>0]=HEAP8[$224+4>>0]|0;HEAP8[$$sroa$5+5>>0]=HEAP8[$224+5>>0]|0;HEAP8[$$sroa$5+6>>0]=HEAP8[$224+6>>0]|0;
 $225 = (($args) + 8|0);
 $226 = HEAP32[$225>>2]|0;
 ;HEAP32[$args+0>>2]=0|0;HEAP32[$args+4>>2]=0|0;HEAP32[$args+8>>2]=0|0;
 HEAP8[$1>>0] = $223;
 $227 = (($1) + 1|0);
 ;HEAP8[$227+0>>0]=HEAP8[$$sroa$5+0>>0]|0;HEAP8[$227+1>>0]=HEAP8[$$sroa$5+1>>0]|0;HEAP8[$227+2>>0]=HEAP8[$$sroa$5+2>>0]|0;HEAP8[$227+3>>0]=HEAP8[$$sroa$5+3>>0]|0;HEAP8[$227+4>>0]=HEAP8[$$sroa$5+4>>0]|0;HEAP8[$227+5>>0]=HEAP8[$$sroa$5+5>>0]|0;HEAP8[$227+6>>0]=HEAP8[$$sroa$5+6>>0]|0;
 $228 = (($1) + 8|0);
 HEAP32[$228>>2] = $226;
 ;HEAP8[$$sroa$5+0>>0]=0|0;HEAP8[$$sroa$5+1>>0]=0|0;HEAP8[$$sroa$5+2>>0]=0|0;HEAP8[$$sroa$5+3>>0]=0|0;HEAP8[$$sroa$5+4>>0]=0|0;HEAP8[$$sroa$5+5>>0]=0|0;HEAP8[$$sroa$5+6>>0]=0|0;
 $229 = (($1) + 12|0);
 ;HEAP32[$229+0>>2]=0|0;HEAP32[$229+4>>2]=0|0;HEAP32[$229+8>>2]=0|0;
 $230 = (($db) + 4|0);
 $231 = HEAP32[$230>>2]|0;
 $232 = (($db) + 8|0);
 $233 = HEAP32[$232>>2]|0;
 $234 = ($231>>>0)<($233>>>0);
 if ($234) {
  $235 = ($231|0)==(0|0);
  if ($235) {
   $238 = 0;
  } else {
   ;HEAP32[$231+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$231+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$231+8>>2]=HEAP32[$1+8>>2]|0;
   ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
   $236 = (($231) + 12|0);
   ;HEAP32[$236+0>>2]=HEAP32[$229+0>>2]|0;HEAP32[$236+4>>2]=HEAP32[$229+4>>2]|0;HEAP32[$236+8>>2]=HEAP32[$229+8>>2]|0;
   ;HEAP32[$229+0>>2]=0|0;HEAP32[$229+4>>2]=0|0;HEAP32[$229+8>>2]=0|0;
   $$pre$i24 = HEAP32[$230>>2]|0;
   $238 = $$pre$i24;
  }
  $237 = (($238) + 24|0);
  HEAP32[$230>>2] = $237;
 } else {
  $239 = (($db) + 12|0);
  $240 = HEAP32[$db>>2]|0;
  $241 = $231;
  $242 = $240;
  $243 = (($241) - ($242))|0;
  $244 = (($243|0) / 24)&-1;
  $245 = (($244) + 1)|0;
  $246 = ($245|0)<(0);
  if ($246) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
   // unreachable;
  }
  $247 = $233;
  $248 = (($247) - ($242))|0;
  $249 = (($248|0) / 24)&-1;
  $250 = ($249>>>0)<(1073741823);
  if ($250) {
   $251 = $249 << 1;
   $252 = ($251>>>0)<($245>>>0);
   $253 = $252 ? $245 : $251;
   $$0$i$i$i25 = $253;
  } else {
   $$0$i$i$i25 = 2147483647;
  }
  __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i23,$$0$i$i$i25,$244,$239);
  $254 = (($__v$i$i23) + 8|0);
  $255 = HEAP32[$254>>2]|0;
  $256 = ($255|0)==(0|0);
  if (!($256)) {
   ;HEAP32[$255+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$255+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$255+8>>2]=HEAP32[$1+8>>2]|0;
   ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
   $257 = (($255) + 12|0);
   ;HEAP32[$257+0>>2]=HEAP32[$229+0>>2]|0;HEAP32[$257+4>>2]=HEAP32[$229+4>>2]|0;HEAP32[$257+8>>2]=HEAP32[$229+8>>2]|0;
   ;HEAP32[$229+0>>2]=0|0;HEAP32[$229+4>>2]=0|0;HEAP32[$229+8>>2]=0|0;
  }
  $258 = (($255) + 24|0);
  HEAP32[$254>>2] = $258;
  __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i23);
  __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i23);
 }
 __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
 $$pre16 = HEAP8[$args>>0]|0;
 $phitmp = $$pre16 & 1;
 $phitmp17 = ($phitmp<<24>>24)==(0);
 if ($phitmp17) {
  $$1 = $262;
  STACKTOP = sp;return ($$1|0);
 }
 $259 = (($args) + 8|0);
 $260 = HEAP32[$259>>2]|0;
 _free($260);
 $$1 = $262;
 STACKTOP = sp;return ($$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0$i$i$i = 0, $$0$i$i$i10 = 0, $$02 = 0, $$02$i = 0, $$pre$i = 0, $$pre$i8 = 0, $$sroa$5 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__v$i$i7 = 0, $brmerge = 0, $c$0 = 0, $c$0$in$lcssa = 0, $c$0$in20 = 0, $c$017 = 0, $isdigit = 0, $isdigit5 = 0, $isdigit519 = 0, $isdigittmp = 0, $isdigittmp4 = 0, $isdigittmp418 = 0, $l$03$i = 0, $n$0$lcssa = 0, $n$021 = 0, $or$cond = 0, $phitmp = 0, $phitmp6 = 0, $r = 0, $r$04$i = 0;
 var dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $__v$i$i7 = sp + 72|0;
 $r = sp + 60|0;
 $0 = sp + 48|0;
 $1 = sp + 24|0;
 $2 = sp;
 $$sroa$5 = sp + 92|0;
 $3 = ($first|0)==($last|0);
 if ($3) {
  $$02 = $first;
  STACKTOP = sp;return ($$02|0);
 }
 $4 = HEAP8[$first>>0]|0;
 $5 = $4 << 24 >> 24;
 $isdigittmp = (($5) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 if (!($isdigit)) {
  $$02 = $first;
  STACKTOP = sp;return ($$02|0);
 }
 $6 = (($first) + 1|0);
 $7 = ($6|0)==($last|0);
 if ($7) {
  $$02 = $first;
  STACKTOP = sp;return ($$02|0);
 }
 $c$017 = HEAP8[$6>>0]|0;
 $8 = $c$017 << 24 >> 24;
 $isdigittmp418 = (($8) + -48)|0;
 $isdigit519 = ($isdigittmp418>>>0)<(10);
 L10: do {
  if ($isdigit519) {
   $14 = $8;$c$0$in20 = $6;$n$021 = $isdigittmp;
   while(1) {
    $9 = (($c$0$in20) + 1|0);
    $10 = ($9|0)==($last|0);
    if ($10) {
     $$02 = $first;
     break;
    }
    $11 = ($n$021*10)|0;
    $12 = (($11) + -48)|0;
    $13 = (($12) + ($14))|0;
    $c$0 = HEAP8[$9>>0]|0;
    $15 = $c$0 << 24 >> 24;
    $isdigittmp4 = (($15) + -48)|0;
    $isdigit5 = ($isdigittmp4>>>0)<(10);
    if ($isdigit5) {
     $14 = $15;$c$0$in20 = $9;$n$021 = $13;
    } else {
     $c$0$in$lcssa = $9;$n$0$lcssa = $13;
     break L10;
    }
   }
   STACKTOP = sp;return ($$02|0);
  } else {
   $c$0$in$lcssa = $6;$n$0$lcssa = $isdigittmp;
  }
 } while(0);
 $16 = $last;
 $17 = $c$0$in$lcssa;
 $18 = (($16) - ($17))|0;
 $19 = ($18>>>0)<($n$0$lcssa>>>0);
 if ($19) {
  $$02 = $first;
  STACKTOP = sp;return ($$02|0);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($r,$c$0$in$lcssa,$n$0$lcssa);
 $20 = HEAP8[$r>>0]|0;
 $21 = $20 & 1;
 $22 = ($21<<24>>24)==(0);
 if ($22) {
  $27 = $20&255;
  $28 = $27 >>> 1;
  $29 = (($r) + 1|0);
  $31 = $28;$33 = $29;
 } else {
  $23 = (($r) + 4|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = (($r) + 8|0);
  $26 = HEAP32[$25>>2]|0;
  $31 = $24;$33 = $26;
 }
 $30 = ($31>>>0)<(10);
 $32 = $30 ? $31 : 10;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0,$33,$32);
 $34 = HEAP8[$0>>0]|0;
 $35 = $34 & 1;
 $36 = ($35<<24>>24)==(0);
 if ($36) {
  $41 = $34&255;
  $42 = $41 >>> 1;
  $43 = (($0) + 1|0);
  $132 = $43;$45 = $42;
 } else {
  $37 = (($0) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = (($0) + 8|0);
  $40 = HEAP32[$39>>2]|0;
  $132 = $40;$45 = $38;
 }
 $44 = ($45>>>0)>(10);
 $46 = $44 ? 10 : $45;
 $47 = ($46|0)==(0);
 L27: do {
  if ($47) {
   $56 = 0;
  } else {
   $$02$i = $46;$l$03$i = $132;$r$04$i = 50584;
   while(1) {
    $48 = HEAP8[$l$03$i>>0]|0;
    $49 = HEAP8[$r$04$i>>0]|0;
    $50 = ($48<<24>>24)==($49<<24>>24);
    if (!($50)) {
     $56 = 1;
     break L27;
    }
    $51 = (($$02$i) + -1)|0;
    $52 = (($l$03$i) + 1|0);
    $53 = (($r$04$i) + 1|0);
    $54 = ($51|0)==(0);
    if ($54) {
     $56 = 0;
     break;
    } else {
     $$02$i = $51;$l$03$i = $52;$r$04$i = $53;
    }
   }
  }
 } while(0);
 $55 = ($45>>>0)<(10);
 $or$cond = $56 | $55;
 if (!($36)) {
  $57 = (($0) + 8|0);
  $58 = HEAP32[$57>>2]|0;
  _free($58);
 }
 $brmerge = $or$cond | $44;
 if ($brmerge) {
  $93 = (($r) + 1|0);
  ;HEAP8[$$sroa$5+0>>0]=HEAP8[$93+0>>0]|0;HEAP8[$$sroa$5+1>>0]=HEAP8[$93+1>>0]|0;HEAP8[$$sroa$5+2>>0]=HEAP8[$93+2>>0]|0;HEAP8[$$sroa$5+3>>0]=HEAP8[$93+3>>0]|0;HEAP8[$$sroa$5+4>>0]=HEAP8[$93+4>>0]|0;HEAP8[$$sroa$5+5>>0]=HEAP8[$93+5>>0]|0;HEAP8[$$sroa$5+6>>0]=HEAP8[$93+6>>0]|0;
  $94 = (($r) + 8|0);
  $95 = HEAP32[$94>>2]|0;
  ;HEAP32[$r+0>>2]=0|0;HEAP32[$r+4>>2]=0|0;HEAP32[$r+8>>2]=0|0;
  HEAP8[$2>>0] = $20;
  $96 = (($2) + 1|0);
  ;HEAP8[$96+0>>0]=HEAP8[$$sroa$5+0>>0]|0;HEAP8[$96+1>>0]=HEAP8[$$sroa$5+1>>0]|0;HEAP8[$96+2>>0]=HEAP8[$$sroa$5+2>>0]|0;HEAP8[$96+3>>0]=HEAP8[$$sroa$5+3>>0]|0;HEAP8[$96+4>>0]=HEAP8[$$sroa$5+4>>0]|0;HEAP8[$96+5>>0]=HEAP8[$$sroa$5+5>>0]|0;HEAP8[$96+6>>0]=HEAP8[$$sroa$5+6>>0]|0;
  $97 = (($2) + 8|0);
  HEAP32[$97>>2] = $95;
  ;HEAP8[$$sroa$5+0>>0]=0|0;HEAP8[$$sroa$5+1>>0]=0|0;HEAP8[$$sroa$5+2>>0]=0|0;HEAP8[$$sroa$5+3>>0]=0|0;HEAP8[$$sroa$5+4>>0]=0|0;HEAP8[$$sroa$5+5>>0]=0|0;HEAP8[$$sroa$5+6>>0]=0|0;
  $98 = (($2) + 12|0);
  ;HEAP32[$98+0>>2]=0|0;HEAP32[$98+4>>2]=0|0;HEAP32[$98+8>>2]=0|0;
  $99 = (($db) + 4|0);
  $100 = HEAP32[$99>>2]|0;
  $101 = (($db) + 8|0);
  $102 = HEAP32[$101>>2]|0;
  $103 = ($100>>>0)<($102>>>0);
  if ($103) {
   $104 = ($100|0)==(0|0);
   if ($104) {
    $107 = 0;
   } else {
    ;HEAP32[$100+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$100+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$100+8>>2]=HEAP32[$2+8>>2]|0;
    ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
    $105 = (($100) + 12|0);
    ;HEAP32[$105+0>>2]=HEAP32[$98+0>>2]|0;HEAP32[$105+4>>2]=HEAP32[$98+4>>2]|0;HEAP32[$105+8>>2]=HEAP32[$98+8>>2]|0;
    ;HEAP32[$98+0>>2]=0|0;HEAP32[$98+4>>2]=0|0;HEAP32[$98+8>>2]=0|0;
    $$pre$i8 = HEAP32[$99>>2]|0;
    $107 = $$pre$i8;
   }
   $106 = (($107) + 24|0);
   HEAP32[$99>>2] = $106;
  } else {
   $108 = (($db) + 12|0);
   $109 = HEAP32[$db>>2]|0;
   $110 = $100;
   $111 = $109;
   $112 = (($110) - ($111))|0;
   $113 = (($112|0) / 24)&-1;
   $114 = (($113) + 1)|0;
   $115 = ($114|0)<(0);
   if ($115) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $116 = $102;
   $117 = (($116) - ($111))|0;
   $118 = (($117|0) / 24)&-1;
   $119 = ($118>>>0)<(1073741823);
   if ($119) {
    $120 = $118 << 1;
    $121 = ($120>>>0)<($114>>>0);
    $122 = $121 ? $114 : $120;
    $$0$i$i$i10 = $122;
   } else {
    $$0$i$i$i10 = 2147483647;
   }
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i7,$$0$i$i$i10,$113,$108);
   $123 = (($__v$i$i7) + 8|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ($124|0)==(0|0);
   if (!($125)) {
    ;HEAP32[$124+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$124+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$124+8>>2]=HEAP32[$2+8>>2]|0;
    ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
    $126 = (($124) + 12|0);
    ;HEAP32[$126+0>>2]=HEAP32[$98+0>>2]|0;HEAP32[$126+4>>2]=HEAP32[$98+4>>2]|0;HEAP32[$126+8>>2]=HEAP32[$98+8>>2]|0;
    ;HEAP32[$98+0>>2]=0|0;HEAP32[$98+4>>2]=0|0;HEAP32[$98+8>>2]=0|0;
   }
   $127 = (($124) + 24|0);
   HEAP32[$123>>2] = $127;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i7);
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i7);
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
  $128 = (($c$0$in$lcssa) + ($n$0$lcssa)|0);
  $$02 = $128;
  STACKTOP = sp;return ($$02|0);
 }
 $59 = (_malloc(32)|0);
 $60 = (($1) + 8|0);
 HEAP32[$60>>2] = $59;
 HEAP32[$1>>2] = 33;
 $61 = (($1) + 4|0);
 HEAP32[$61>>2] = 21;
 dest=$59+0|0; src=50600+0|0; stop=dest+21|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $62 = (($59) + 21|0);
 HEAP8[$62>>0] = 0;
 $63 = (($1) + 12|0);
 ;HEAP32[$63+0>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;
 $64 = (($db) + 4|0);
 $65 = HEAP32[$64>>2]|0;
 $66 = (($db) + 8|0);
 $67 = HEAP32[$66>>2]|0;
 $68 = ($65>>>0)<($67>>>0);
 if ($68) {
  $69 = ($65|0)==(0|0);
  if ($69) {
   $72 = 0;
  } else {
   ;HEAP32[$65+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$65+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$65+8>>2]=HEAP32[$1+8>>2]|0;
   ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
   $70 = (($65) + 12|0);
   ;HEAP32[$70+0>>2]=HEAP32[$63+0>>2]|0;HEAP32[$70+4>>2]=HEAP32[$63+4>>2]|0;HEAP32[$70+8>>2]=HEAP32[$63+8>>2]|0;
   ;HEAP32[$63+0>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;
   $$pre$i = HEAP32[$64>>2]|0;
   $72 = $$pre$i;
  }
  $71 = (($72) + 24|0);
  HEAP32[$64>>2] = $71;
 } else {
  $73 = (($db) + 12|0);
  $74 = HEAP32[$db>>2]|0;
  $75 = $65;
  $76 = $74;
  $77 = (($75) - ($76))|0;
  $78 = (($77|0) / 24)&-1;
  $79 = (($78) + 1)|0;
  $80 = ($79|0)<(0);
  if ($80) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
   // unreachable;
  }
  $81 = $67;
  $82 = (($81) - ($76))|0;
  $83 = (($82|0) / 24)&-1;
  $84 = ($83>>>0)<(1073741823);
  if ($84) {
   $85 = $83 << 1;
   $86 = ($85>>>0)<($79>>>0);
   $87 = $86 ? $79 : $85;
   $$0$i$i$i = $87;
  } else {
   $$0$i$i$i = 2147483647;
  }
  __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i7,$$0$i$i$i,$78,$73);
  $88 = (($__v$i$i7) + 8|0);
  $89 = HEAP32[$88>>2]|0;
  $90 = ($89|0)==(0|0);
  if (!($90)) {
   ;HEAP32[$89+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$89+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$89+8>>2]=HEAP32[$1+8>>2]|0;
   ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
   $91 = (($89) + 12|0);
   ;HEAP32[$91+0>>2]=HEAP32[$63+0>>2]|0;HEAP32[$91+4>>2]=HEAP32[$63+4>>2]|0;HEAP32[$91+8>>2]=HEAP32[$63+8>>2]|0;
   ;HEAP32[$63+0>>2]=0|0;HEAP32[$63+4>>2]=0|0;HEAP32[$63+8>>2]=0|0;
  }
  $92 = (($89) + 24|0);
  HEAP32[$88>>2] = $92;
  __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i7);
  __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i7);
 }
 __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
 $phitmp = $20 & 1;
 $phitmp6 = ($phitmp<<24>>24)==(0);
 $129 = (($c$0$in$lcssa) + ($n$0$lcssa)|0);
 if ($phitmp6) {
  $$02 = $129;
  STACKTOP = sp;return ($$02|0);
 }
 $130 = (($r) + 8|0);
 $131 = HEAP32[$130>>2]|0;
 _free($131);
 $$02 = $129;
 STACKTOP = sp;return ($$02|0);
}
function __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($agg$result,$__lhs,$__rhs) {
 $agg$result = $agg$result|0;
 $__lhs = $__lhs|0;
 $__rhs = $__rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 $0 = HEAP8[$__lhs>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $8 = $0&255;
  $9 = $8 >>> 1;
  $10 = (_strlen(($__rhs|0))|0);
  $11 = (($__lhs) + 1|0);
  $13 = $10;$14 = $9;$15 = $11;
 } else {
  $3 = (($__lhs) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = (_strlen(($__rhs|0))|0);
  $6 = (($__lhs) + 8|0);
  $7 = HEAP32[$6>>2]|0;
  $13 = $5;$14 = $4;$15 = $7;
 }
 $12 = (($13) + ($14))|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj($agg$result,$15,$14,$12);
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($agg$result,$__rhs,$13)|0);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($this,$0) {
 $this = $this|0;
 $0 = $0|0;
 var $$pre$i$i$i = 0, $$pre$i$i$i2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $or$cond$i$i$i$i$i = 0, $or$cond$i$i$i$i$i9 = 0, $phitmp$i$i$i$i$i$i = 0, $phitmp$i$i$i$i$i$i4 = 0, $phitmp$i2$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i7 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 do {
  if ($3) {
   $4 = (($this) + 1|0);
   HEAP8[$4>>0] = 0;
   HEAP8[$this>>0] = 0;
  } else {
   $5 = (($this) + 8|0);
   $6 = HEAP32[$5>>2]|0;
   HEAP8[$6>>0] = 0;
   $7 = (($this) + 4|0);
   HEAP32[$7>>2] = 0;
   $$pre$i$i$i = HEAP8[$this>>0]|0;
   $8 = $$pre$i$i$i & 1;
   $9 = ($8<<24>>24)==(0);
   if ($9) {
    $14 = $$pre$i$i$i;$23 = 10;
   } else {
    $10 = HEAP32[$this>>2]|0;
    $11 = $10 & -2;
    $phitmp$i$i$i$i$i$i = (($11) + -1)|0;
    $12 = $10&255;
    $14 = $12;$23 = $phitmp$i$i$i$i$i$i;
   }
   $13 = $14 & 1;
   $15 = ($13<<24>>24)==(0);
   if ($15) {
    $16 = $14&255;
    $17 = $16 >>> 1;
    $18 = ($14&255)<(22);
    if ($18) {
     $22 = 10;$42 = $17;$91 = 1;
    } else {
     $19 = (($17) + 16)|0;
     $20 = $19 & 240;
     $phitmp$i2$i$i$i$i$i = (($20) + -1)|0;
     $22 = $phitmp$i2$i$i$i$i$i;$42 = $17;$91 = 1;
    }
   } else {
    $22 = 10;$42 = 0;$91 = 0;
   }
   $21 = ($22|0)==($23|0);
   if (!($21)) {
    $24 = ($22|0)==(10);
    if ($24) {
     $29 = (($this) + 1|0);
     $30 = HEAP32[$5>>2]|0;
     if ($91) {
      $31 = $14&255;
      $32 = $31 >>> 1;
      $33 = (($32) + 1)|0;
      _memcpy(($29|0),($30|0),($33|0))|0;
      _free($30);
     } else {
      $38 = HEAP8[$30>>0]|0;
      HEAP8[$29>>0] = $38;
      _free($30);
     }
     $43 = $42 << 1;
     $44 = $43&255;
     HEAP8[$this>>0] = $44;
     break;
    }
    $25 = ($22>>>0)<=($23>>>0);
    $26 = (($22) + 1)|0;
    $27 = (_malloc($26)|0);
    $28 = ($27|0)==(0|0);
    $or$cond$i$i$i$i$i = $25 & $28;
    if (!($or$cond$i$i$i$i$i)) {
     if ($91) {
      $34 = (($this) + 1|0);
      $35 = $14&255;
      $36 = $35 >>> 1;
      $37 = (($36) + 1)|0;
      _memcpy(($27|0),($34|0),($37|0))|0;
     } else {
      $39 = HEAP32[$5>>2]|0;
      $40 = HEAP8[$39>>0]|0;
      HEAP8[$27>>0] = $40;
      _free($39);
     }
     $41 = $26 | 1;
     HEAP32[$this>>2] = $41;
     HEAP32[$7>>2] = $42;
     HEAP32[$5>>2] = $27;
    }
   }
  }
 } while(0);
 ;HEAP32[$this+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$this+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$this+8>>2]=HEAP32[$0+8>>2]|0;
 ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
 $45 = (($this) + 12|0);
 $46 = (($0) + 12|0);
 $47 = HEAP8[$45>>0]|0;
 $48 = $47 & 1;
 $49 = ($48<<24>>24)==(0);
 do {
  if ($49) {
   $50 = (($45) + 1|0);
   HEAP8[$50>>0] = 0;
   HEAP8[$45>>0] = 0;
  } else {
   $51 = (($this) + 20|0);
   $52 = HEAP32[$51>>2]|0;
   HEAP8[$52>>0] = 0;
   $53 = (($this) + 16|0);
   HEAP32[$53>>2] = 0;
   $$pre$i$i$i2 = HEAP8[$45>>0]|0;
   $54 = $$pre$i$i$i2 & 1;
   $55 = ($54<<24>>24)==(0);
   if ($55) {
    $60 = $$pre$i$i$i2;$69 = 10;
   } else {
    $56 = HEAP32[$45>>2]|0;
    $57 = $56 & -2;
    $phitmp$i$i$i$i$i$i4 = (($57) + -1)|0;
    $58 = $56&255;
    $60 = $58;$69 = $phitmp$i$i$i$i$i$i4;
   }
   $59 = $60 & 1;
   $61 = ($59<<24>>24)==(0);
   if ($61) {
    $62 = $60&255;
    $63 = $62 >>> 1;
    $64 = ($60&255)<(22);
    if ($64) {
     $68 = 10;$88 = $63;$92 = 1;
    } else {
     $65 = (($63) + 16)|0;
     $66 = $65 & 240;
     $phitmp$i2$i$i$i$i$i7 = (($66) + -1)|0;
     $68 = $phitmp$i2$i$i$i$i$i7;$88 = $63;$92 = 1;
    }
   } else {
    $68 = 10;$88 = 0;$92 = 0;
   }
   $67 = ($68|0)==($69|0);
   if (!($67)) {
    $70 = ($68|0)==(10);
    if ($70) {
     $75 = (($45) + 1|0);
     $76 = HEAP32[$51>>2]|0;
     if ($92) {
      $77 = $60&255;
      $78 = $77 >>> 1;
      $79 = (($78) + 1)|0;
      _memcpy(($75|0),($76|0),($79|0))|0;
      _free($76);
     } else {
      $84 = HEAP8[$76>>0]|0;
      HEAP8[$75>>0] = $84;
      _free($76);
     }
     $89 = $88 << 1;
     $90 = $89&255;
     HEAP8[$45>>0] = $90;
     break;
    }
    $71 = ($68>>>0)<=($69>>>0);
    $72 = (($68) + 1)|0;
    $73 = (_malloc($72)|0);
    $74 = ($73|0)==(0|0);
    $or$cond$i$i$i$i$i9 = $71 & $74;
    if (!($or$cond$i$i$i$i$i9)) {
     if ($92) {
      $80 = (($45) + 1|0);
      $81 = $60&255;
      $82 = $81 >>> 1;
      $83 = (($82) + 1)|0;
      _memcpy(($73|0),($80|0),($83|0))|0;
     } else {
      $85 = HEAP32[$51>>2]|0;
      $86 = HEAP8[$85>>0]|0;
      HEAP8[$73>>0] = $86;
      _free($85);
     }
     $87 = $72 | 1;
     HEAP32[$45>>2] = $87;
     HEAP32[$53>>2] = $88;
     HEAP32[$51>>2] = $73;
    }
   }
  }
 } while(0);
 ;HEAP32[$45+0>>2]=HEAP32[$46+0>>2]|0;HEAP32[$45+4>>2]=HEAP32[$46+4>>2]|0;HEAP32[$45+8>>2]=HEAP32[$46+8>>2]|0;
 ;HEAP32[$46+0>>2]=0|0;HEAP32[$46+4>>2]=0|0;HEAP32[$46+8>>2]=0|0;
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i13 = 0, $$0$i$i$i21 = 0, $$0$i$i$i29 = 0, $$0$i$i$i37 = 0, $$0$i$i$i45 = 0, $$0$i$i$i52 = 0, $$0$i$i$i58 = 0, $$pn = 0, $$pn$v = 0, $$pre$i = 0, $$pre$i11 = 0, $$pre$i19 = 0, $$pre$i27 = 0, $$pre$i35 = 0, $$pre$i43 = 0, $$pre$i51 = 0, $$pre$i55 = 0, $0 = 0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__v$i$i54 = 0, $isdigit = 0, $isdigit7 = 0, $isdigittmp = 0, $isdigittmp6 = 0, $or$cond = 0, $or$cond11 = 0, $sub$0 = 0, $sub$0$v = 0, $sub$171 = 0, $sub$2 = 0, $t$072 = 0, dest = 0, label = 0, sp = 0, src = 0;
 var stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0;
 $__v$i$i54 = sp + 48|0;
 $0 = sp + 96|0;
 $1 = sp + 120|0;
 $2 = sp + 144|0;
 $3 = sp + 24|0;
 $4 = sp;
 $5 = sp + 72|0;
 $6 = $last;
 $7 = $first;
 $8 = (($6) - ($7))|0;
 $9 = ($8|0)>(1);
 if (!($9)) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $10 = HEAP8[$first>>0]|0;
 $11 = ($10<<24>>24)==(83);
 if (!($11)) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $12 = (($first) + 1|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = $13 << 24 >> 24;
 switch ($14|0) {
 case 98:  {
  $50 = (_malloc(32)|0);
  $51 = (($1) + 8|0);
  HEAP32[$51>>2] = $50;
  HEAP32[$1>>2] = 33;
  $52 = (($1) + 4|0);
  HEAP32[$52>>2] = 17;
  dest=$50+0|0; src=50528+0|0; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $53 = (($50) + 17|0);
  HEAP8[$53>>0] = 0;
  $54 = (($1) + 12|0);
  ;HEAP32[$54+0>>2]=0|0;HEAP32[$54+4>>2]=0|0;HEAP32[$54+8>>2]=0|0;
  $55 = (($db) + 4|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = (($db) + 8|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ($56>>>0)<($58>>>0);
  if ($59) {
   $60 = ($56|0)==(0|0);
   if ($60) {
    $63 = 0;
   } else {
    ;HEAP32[$56+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$56+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$56+8>>2]=HEAP32[$1+8>>2]|0;
    ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
    $61 = (($56) + 12|0);
    ;HEAP32[$61+0>>2]=HEAP32[$54+0>>2]|0;HEAP32[$61+4>>2]=HEAP32[$54+4>>2]|0;HEAP32[$61+8>>2]=HEAP32[$54+8>>2]|0;
    ;HEAP32[$54+0>>2]=0|0;HEAP32[$54+4>>2]=0|0;HEAP32[$54+8>>2]=0|0;
    $$pre$i11 = HEAP32[$55>>2]|0;
    $63 = $$pre$i11;
   }
   $62 = (($63) + 24|0);
   HEAP32[$55>>2] = $62;
  } else {
   $64 = (($db) + 12|0);
   $65 = HEAP32[$db>>2]|0;
   $66 = $56;
   $67 = $65;
   $68 = (($66) - ($67))|0;
   $69 = (($68|0) / 24)&-1;
   $70 = (($69) + 1)|0;
   $71 = ($70|0)<(0);
   if ($71) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $72 = $58;
   $73 = (($72) - ($67))|0;
   $74 = (($73|0) / 24)&-1;
   $75 = ($74>>>0)<(1073741823);
   if ($75) {
    $76 = $74 << 1;
    $77 = ($76>>>0)<($70>>>0);
    $78 = $77 ? $70 : $76;
    $$0$i$i$i13 = $78;
   } else {
    $$0$i$i$i13 = 2147483647;
   }
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i54,$$0$i$i$i13,$69,$64);
   $79 = (($__v$i$i54) + 8|0);
   $80 = HEAP32[$79>>2]|0;
   $81 = ($80|0)==(0|0);
   if (!($81)) {
    ;HEAP32[$80+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$80+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$80+8>>2]=HEAP32[$1+8>>2]|0;
    ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
    $82 = (($80) + 12|0);
    ;HEAP32[$82+0>>2]=HEAP32[$54+0>>2]|0;HEAP32[$82+4>>2]=HEAP32[$54+4>>2]|0;HEAP32[$82+8>>2]=HEAP32[$54+8>>2]|0;
    ;HEAP32[$54+0>>2]=0|0;HEAP32[$54+4>>2]=0|0;HEAP32[$54+8>>2]=0|0;
   }
   $83 = (($80) + 24|0);
   HEAP32[$79>>2] = $83;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i54);
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i54);
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
  $84 = (($first) + 2|0);
  $$0 = $84;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 97:  {
  $15 = (_malloc(16)|0);
  $16 = (($0) + 8|0);
  HEAP32[$16>>2] = $15;
  HEAP32[$0>>2] = 17;
  $17 = (($0) + 4|0);
  HEAP32[$17>>2] = 14;
  dest=$15+0|0; src=50512+0|0; stop=dest+14|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $18 = (($15) + 14|0);
  HEAP8[$18>>0] = 0;
  $19 = (($0) + 12|0);
  ;HEAP32[$19+0>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;
  $20 = (($db) + 4|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (($db) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ($21>>>0)<($23>>>0);
  if ($24) {
   $25 = ($21|0)==(0|0);
   if ($25) {
    $28 = 0;
   } else {
    ;HEAP32[$21+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$21+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$21+8>>2]=HEAP32[$0+8>>2]|0;
    ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
    $26 = (($21) + 12|0);
    ;HEAP32[$26+0>>2]=HEAP32[$19+0>>2]|0;HEAP32[$26+4>>2]=HEAP32[$19+4>>2]|0;HEAP32[$26+8>>2]=HEAP32[$19+8>>2]|0;
    ;HEAP32[$19+0>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;
    $$pre$i = HEAP32[$20>>2]|0;
    $28 = $$pre$i;
   }
   $27 = (($28) + 24|0);
   HEAP32[$20>>2] = $27;
  } else {
   $29 = (($db) + 12|0);
   $30 = HEAP32[$db>>2]|0;
   $31 = $21;
   $32 = $30;
   $33 = (($31) - ($32))|0;
   $34 = (($33|0) / 24)&-1;
   $35 = (($34) + 1)|0;
   $36 = ($35|0)<(0);
   if ($36) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $37 = $23;
   $38 = (($37) - ($32))|0;
   $39 = (($38|0) / 24)&-1;
   $40 = ($39>>>0)<(1073741823);
   if ($40) {
    $41 = $39 << 1;
    $42 = ($41>>>0)<($35>>>0);
    $43 = $42 ? $35 : $41;
    $$0$i$i$i = $43;
   } else {
    $$0$i$i$i = 2147483647;
   }
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i54,$$0$i$i$i,$34,$29);
   $44 = (($__v$i$i54) + 8|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ($45|0)==(0|0);
   if (!($46)) {
    ;HEAP32[$45+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$45+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$45+8>>2]=HEAP32[$0+8>>2]|0;
    ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
    $47 = (($45) + 12|0);
    ;HEAP32[$47+0>>2]=HEAP32[$19+0>>2]|0;HEAP32[$47+4>>2]=HEAP32[$19+4>>2]|0;HEAP32[$47+8>>2]=HEAP32[$19+8>>2]|0;
    ;HEAP32[$19+0>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;
   }
   $48 = (($45) + 24|0);
   HEAP32[$44>>2] = $48;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i54);
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i54);
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
  $49 = (($first) + 2|0);
  $$0 = $49;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 115:  {
  $85 = (_malloc(16)|0);
  $86 = (($2) + 8|0);
  HEAP32[$86>>2] = $85;
  HEAP32[$2>>2] = 17;
  $87 = (($2) + 4|0);
  HEAP32[$87>>2] = 11;
  dest=$85+0|0; src=49904+0|0; stop=dest+11|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $88 = (($85) + 11|0);
  HEAP8[$88>>0] = 0;
  $89 = (($2) + 12|0);
  ;HEAP32[$89+0>>2]=0|0;HEAP32[$89+4>>2]=0|0;HEAP32[$89+8>>2]=0|0;
  $90 = (($db) + 4|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = (($db) + 8|0);
  $93 = HEAP32[$92>>2]|0;
  $94 = ($91>>>0)<($93>>>0);
  if ($94) {
   $95 = ($91|0)==(0|0);
   if ($95) {
    $98 = 0;
   } else {
    ;HEAP32[$91+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$91+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$91+8>>2]=HEAP32[$2+8>>2]|0;
    ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
    $96 = (($91) + 12|0);
    ;HEAP32[$96+0>>2]=HEAP32[$89+0>>2]|0;HEAP32[$96+4>>2]=HEAP32[$89+4>>2]|0;HEAP32[$96+8>>2]=HEAP32[$89+8>>2]|0;
    ;HEAP32[$89+0>>2]=0|0;HEAP32[$89+4>>2]=0|0;HEAP32[$89+8>>2]=0|0;
    $$pre$i19 = HEAP32[$90>>2]|0;
    $98 = $$pre$i19;
   }
   $97 = (($98) + 24|0);
   HEAP32[$90>>2] = $97;
  } else {
   $99 = (($db) + 12|0);
   $100 = HEAP32[$db>>2]|0;
   $101 = $91;
   $102 = $100;
   $103 = (($101) - ($102))|0;
   $104 = (($103|0) / 24)&-1;
   $105 = (($104) + 1)|0;
   $106 = ($105|0)<(0);
   if ($106) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $107 = $93;
   $108 = (($107) - ($102))|0;
   $109 = (($108|0) / 24)&-1;
   $110 = ($109>>>0)<(1073741823);
   if ($110) {
    $111 = $109 << 1;
    $112 = ($111>>>0)<($105>>>0);
    $113 = $112 ? $105 : $111;
    $$0$i$i$i21 = $113;
   } else {
    $$0$i$i$i21 = 2147483647;
   }
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i54,$$0$i$i$i21,$104,$99);
   $114 = (($__v$i$i54) + 8|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = ($115|0)==(0|0);
   if (!($116)) {
    ;HEAP32[$115+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$115+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$115+8>>2]=HEAP32[$2+8>>2]|0;
    ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
    $117 = (($115) + 12|0);
    ;HEAP32[$117+0>>2]=HEAP32[$89+0>>2]|0;HEAP32[$117+4>>2]=HEAP32[$89+4>>2]|0;HEAP32[$117+8>>2]=HEAP32[$89+8>>2]|0;
    ;HEAP32[$89+0>>2]=0|0;HEAP32[$89+4>>2]=0|0;HEAP32[$89+8>>2]=0|0;
   }
   $118 = (($115) + 24|0);
   HEAP32[$114>>2] = $118;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i54);
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i54);
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
  $119 = (($first) + 2|0);
  $$0 = $119;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 105:  {
  $120 = (_malloc(16)|0);
  $121 = (($3) + 8|0);
  HEAP32[$121>>2] = $120;
  HEAP32[$3>>2] = 17;
  $122 = (($3) + 4|0);
  HEAP32[$122>>2] = 12;
  dest=$120+0|0; src=50008+0|0; stop=dest+12|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $123 = (($120) + 12|0);
  HEAP8[$123>>0] = 0;
  $124 = (($3) + 12|0);
  ;HEAP32[$124+0>>2]=0|0;HEAP32[$124+4>>2]=0|0;HEAP32[$124+8>>2]=0|0;
  $125 = (($db) + 4|0);
  $126 = HEAP32[$125>>2]|0;
  $127 = (($db) + 8|0);
  $128 = HEAP32[$127>>2]|0;
  $129 = ($126>>>0)<($128>>>0);
  if ($129) {
   $130 = ($126|0)==(0|0);
   if ($130) {
    $133 = 0;
   } else {
    ;HEAP32[$126+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$126+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$126+8>>2]=HEAP32[$3+8>>2]|0;
    ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
    $131 = (($126) + 12|0);
    ;HEAP32[$131+0>>2]=HEAP32[$124+0>>2]|0;HEAP32[$131+4>>2]=HEAP32[$124+4>>2]|0;HEAP32[$131+8>>2]=HEAP32[$124+8>>2]|0;
    ;HEAP32[$124+0>>2]=0|0;HEAP32[$124+4>>2]=0|0;HEAP32[$124+8>>2]=0|0;
    $$pre$i27 = HEAP32[$125>>2]|0;
    $133 = $$pre$i27;
   }
   $132 = (($133) + 24|0);
   HEAP32[$125>>2] = $132;
  } else {
   $134 = (($db) + 12|0);
   $135 = HEAP32[$db>>2]|0;
   $136 = $126;
   $137 = $135;
   $138 = (($136) - ($137))|0;
   $139 = (($138|0) / 24)&-1;
   $140 = (($139) + 1)|0;
   $141 = ($140|0)<(0);
   if ($141) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $142 = $128;
   $143 = (($142) - ($137))|0;
   $144 = (($143|0) / 24)&-1;
   $145 = ($144>>>0)<(1073741823);
   if ($145) {
    $146 = $144 << 1;
    $147 = ($146>>>0)<($140>>>0);
    $148 = $147 ? $140 : $146;
    $$0$i$i$i29 = $148;
   } else {
    $$0$i$i$i29 = 2147483647;
   }
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i54,$$0$i$i$i29,$139,$134);
   $149 = (($__v$i$i54) + 8|0);
   $150 = HEAP32[$149>>2]|0;
   $151 = ($150|0)==(0|0);
   if (!($151)) {
    ;HEAP32[$150+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$150+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$150+8>>2]=HEAP32[$3+8>>2]|0;
    ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
    $152 = (($150) + 12|0);
    ;HEAP32[$152+0>>2]=HEAP32[$124+0>>2]|0;HEAP32[$152+4>>2]=HEAP32[$124+4>>2]|0;HEAP32[$152+8>>2]=HEAP32[$124+8>>2]|0;
    ;HEAP32[$124+0>>2]=0|0;HEAP32[$124+4>>2]=0|0;HEAP32[$124+8>>2]=0|0;
   }
   $153 = (($150) + 24|0);
   HEAP32[$149>>2] = $153;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i54);
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i54);
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
  $154 = (($first) + 2|0);
  $$0 = $154;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 111:  {
  $155 = (_malloc(16)|0);
  $156 = (($4) + 8|0);
  HEAP32[$156>>2] = $155;
  HEAP32[$4>>2] = 17;
  $157 = (($4) + 4|0);
  HEAP32[$157>>2] = 12;
  dest=$155+0|0; src=50096+0|0; stop=dest+12|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $158 = (($155) + 12|0);
  HEAP8[$158>>0] = 0;
  $159 = (($4) + 12|0);
  ;HEAP32[$159+0>>2]=0|0;HEAP32[$159+4>>2]=0|0;HEAP32[$159+8>>2]=0|0;
  $160 = (($db) + 4|0);
  $161 = HEAP32[$160>>2]|0;
  $162 = (($db) + 8|0);
  $163 = HEAP32[$162>>2]|0;
  $164 = ($161>>>0)<($163>>>0);
  if ($164) {
   $165 = ($161|0)==(0|0);
   if ($165) {
    $168 = 0;
   } else {
    ;HEAP32[$161+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$161+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$161+8>>2]=HEAP32[$4+8>>2]|0;
    ;HEAP32[$4+0>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
    $166 = (($161) + 12|0);
    ;HEAP32[$166+0>>2]=HEAP32[$159+0>>2]|0;HEAP32[$166+4>>2]=HEAP32[$159+4>>2]|0;HEAP32[$166+8>>2]=HEAP32[$159+8>>2]|0;
    ;HEAP32[$159+0>>2]=0|0;HEAP32[$159+4>>2]=0|0;HEAP32[$159+8>>2]=0|0;
    $$pre$i35 = HEAP32[$160>>2]|0;
    $168 = $$pre$i35;
   }
   $167 = (($168) + 24|0);
   HEAP32[$160>>2] = $167;
  } else {
   $169 = (($db) + 12|0);
   $170 = HEAP32[$db>>2]|0;
   $171 = $161;
   $172 = $170;
   $173 = (($171) - ($172))|0;
   $174 = (($173|0) / 24)&-1;
   $175 = (($174) + 1)|0;
   $176 = ($175|0)<(0);
   if ($176) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $177 = $163;
   $178 = (($177) - ($172))|0;
   $179 = (($178|0) / 24)&-1;
   $180 = ($179>>>0)<(1073741823);
   if ($180) {
    $181 = $179 << 1;
    $182 = ($181>>>0)<($175>>>0);
    $183 = $182 ? $175 : $181;
    $$0$i$i$i37 = $183;
   } else {
    $$0$i$i$i37 = 2147483647;
   }
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i54,$$0$i$i$i37,$174,$169);
   $184 = (($__v$i$i54) + 8|0);
   $185 = HEAP32[$184>>2]|0;
   $186 = ($185|0)==(0|0);
   if (!($186)) {
    ;HEAP32[$185+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$185+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$185+8>>2]=HEAP32[$4+8>>2]|0;
    ;HEAP32[$4+0>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
    $187 = (($185) + 12|0);
    ;HEAP32[$187+0>>2]=HEAP32[$159+0>>2]|0;HEAP32[$187+4>>2]=HEAP32[$159+4>>2]|0;HEAP32[$187+8>>2]=HEAP32[$159+8>>2]|0;
    ;HEAP32[$159+0>>2]=0|0;HEAP32[$159+4>>2]=0|0;HEAP32[$159+8>>2]=0|0;
   }
   $188 = (($185) + 24|0);
   HEAP32[$184>>2] = $188;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i54);
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i54);
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
  $189 = (($first) + 2|0);
  $$0 = $189;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 100:  {
  $190 = (_malloc(16)|0);
  $191 = (($5) + 8|0);
  HEAP32[$191>>2] = $190;
  HEAP32[$5>>2] = 17;
  $192 = (($5) + 4|0);
  HEAP32[$192>>2] = 13;
  dest=$190+0|0; src=50184+0|0; stop=dest+13|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $193 = (($190) + 13|0);
  HEAP8[$193>>0] = 0;
  $194 = (($5) + 12|0);
  ;HEAP32[$194+0>>2]=0|0;HEAP32[$194+4>>2]=0|0;HEAP32[$194+8>>2]=0|0;
  $195 = (($db) + 4|0);
  $196 = HEAP32[$195>>2]|0;
  $197 = (($db) + 8|0);
  $198 = HEAP32[$197>>2]|0;
  $199 = ($196>>>0)<($198>>>0);
  if ($199) {
   $200 = ($196|0)==(0|0);
   if ($200) {
    $203 = 0;
   } else {
    ;HEAP32[$196+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$196+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$196+8>>2]=HEAP32[$5+8>>2]|0;
    ;HEAP32[$5+0>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;
    $201 = (($196) + 12|0);
    ;HEAP32[$201+0>>2]=HEAP32[$194+0>>2]|0;HEAP32[$201+4>>2]=HEAP32[$194+4>>2]|0;HEAP32[$201+8>>2]=HEAP32[$194+8>>2]|0;
    ;HEAP32[$194+0>>2]=0|0;HEAP32[$194+4>>2]=0|0;HEAP32[$194+8>>2]=0|0;
    $$pre$i43 = HEAP32[$195>>2]|0;
    $203 = $$pre$i43;
   }
   $202 = (($203) + 24|0);
   HEAP32[$195>>2] = $202;
  } else {
   $204 = (($db) + 12|0);
   $205 = HEAP32[$db>>2]|0;
   $206 = $196;
   $207 = $205;
   $208 = (($206) - ($207))|0;
   $209 = (($208|0) / 24)&-1;
   $210 = (($209) + 1)|0;
   $211 = ($210|0)<(0);
   if ($211) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $212 = $198;
   $213 = (($212) - ($207))|0;
   $214 = (($213|0) / 24)&-1;
   $215 = ($214>>>0)<(1073741823);
   if ($215) {
    $216 = $214 << 1;
    $217 = ($216>>>0)<($210>>>0);
    $218 = $217 ? $210 : $216;
    $$0$i$i$i45 = $218;
   } else {
    $$0$i$i$i45 = 2147483647;
   }
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i54,$$0$i$i$i45,$209,$204);
   $219 = (($__v$i$i54) + 8|0);
   $220 = HEAP32[$219>>2]|0;
   $221 = ($220|0)==(0|0);
   if (!($221)) {
    ;HEAP32[$220+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$220+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$220+8>>2]=HEAP32[$5+8>>2]|0;
    ;HEAP32[$5+0>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;
    $222 = (($220) + 12|0);
    ;HEAP32[$222+0>>2]=HEAP32[$194+0>>2]|0;HEAP32[$222+4>>2]=HEAP32[$194+4>>2]|0;HEAP32[$222+8>>2]=HEAP32[$194+8>>2]|0;
    ;HEAP32[$194+0>>2]=0|0;HEAP32[$194+4>>2]=0|0;HEAP32[$194+8>>2]=0|0;
   }
   $223 = (($220) + 24|0);
   HEAP32[$219>>2] = $223;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i54);
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i54);
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
  $224 = (($first) + 2|0);
  $$0 = $224;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 case 95:  {
  $225 = (($db) + 16|0);
  $226 = HEAP32[$225>>2]|0;
  $227 = (($db) + 20|0);
  $228 = HEAP32[$227>>2]|0;
  $229 = ($226|0)==($228|0);
  if ($229) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $230 = HEAP32[$226>>2]|0;
  $231 = (($226) + 4|0);
  $232 = HEAP32[$231>>2]|0;
  $233 = ($230|0)==($232|0);
  L120: do {
   if (!($233)) {
    $234 = (($db) + 4|0);
    $235 = (($db) + 8|0);
    $236 = (($db) + 12|0);
    $237 = (($__v$i$i54) + 8|0);
    $242 = $230;
    while(1) {
     $238 = HEAP32[$234>>2]|0;
     $239 = HEAP32[$235>>2]|0;
     $240 = ($238|0)==($239|0);
     if ($240) {
      $247 = HEAP32[$db>>2]|0;
      $248 = $238;
      $249 = $247;
      $250 = (($248) - ($249))|0;
      $251 = (($250|0) / 24)&-1;
      $252 = (($251) + 1)|0;
      $253 = ($252|0)<(0);
      if ($253) {
       break;
      }
      $254 = ($251>>>0)<(1073741823);
      if ($254) {
       $255 = $251 << 1;
       $256 = ($255>>>0)<($252>>>0);
       $257 = $256 ? $252 : $255;
       $$0$i$i$i52 = $257;
      } else {
       $$0$i$i$i52 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i54,$$0$i$i$i52,$251,$236);
      $258 = HEAP32[$237>>2]|0;
      $259 = ($258|0)==(0|0);
      if (!($259)) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($258,$242);
       $260 = (($258) + 12|0);
       $261 = (($242) + 12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($260,$261);
      }
      $262 = (($258) + 24|0);
      HEAP32[$237>>2] = $262;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i54);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i54);
     } else {
      $241 = ($238|0)==(0|0);
      if ($241) {
       $246 = 0;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($238,$242);
       $243 = (($238) + 12|0);
       $244 = (($242) + 12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($243,$244);
       $$pre$i51 = HEAP32[$234>>2]|0;
       $246 = $$pre$i51;
      }
      $245 = (($246) + 24|0);
      HEAP32[$234>>2] = $245;
     }
     $263 = (($242) + 24|0);
     $264 = ($263|0)==($232|0);
     if ($264) {
      break L120;
     } else {
      $242 = $263;
     }
    }
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
  } while(0);
  $265 = (($first) + 2|0);
  $$0 = $265;
  STACKTOP = sp;return ($$0|0);
  break;
 }
 default: {
  $isdigittmp = (($14) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  $266 = (($14) + -65)|0;
  $267 = ($266>>>0)<(26);
  $or$cond = $isdigit | $267;
  if (!($or$cond)) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $268 = (($first) + 2|0);
  $269 = ($268|0)==($last|0);
  if ($269) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $sub$0$v = $isdigit ? -48 : -55;
  $sub$0 = (($sub$0$v) + ($14))|0;
  $sub$171 = $sub$0;$t$072 = $268;
  while(1) {
   $270 = HEAP8[$t$072>>0]|0;
   $271 = $270 << 24 >> 24;
   $isdigittmp6 = (($271) + -48)|0;
   $isdigit7 = ($isdigittmp6>>>0)<(10);
   $272 = (($271) + -65)|0;
   $273 = ($272>>>0)<(26);
   $or$cond11 = $isdigit7 | $273;
   if (!($or$cond11)) {
    break;
   }
   $274 = ($sub$171*36)|0;
   $$pn$v = $isdigit7 ? -48 : -55;
   $$pn = (($271) + ($274))|0;
   $sub$2 = (($$pn) + ($$pn$v))|0;
   $275 = (($t$072) + 1|0);
   $276 = ($275|0)==($last|0);
   if ($276) {
    $$0 = $first;
    label = 114;
    break;
   } else {
    $sub$171 = $sub$2;$t$072 = $275;
   }
  }
  if ((label|0) == 114) {
   STACKTOP = sp;return ($$0|0);
  }
  $277 = ($270<<24>>24)==(95);
  if (!($277)) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $278 = (($sub$171) + 1)|0;
  $279 = (($db) + 20|0);
  $280 = HEAP32[$279>>2]|0;
  $281 = (($db) + 16|0);
  $282 = HEAP32[$281>>2]|0;
  $283 = $280;
  $284 = $282;
  $285 = (($283) - ($284))|0;
  $286 = $285 >> 4;
  $287 = ($278>>>0)<($286>>>0);
  if (!($287)) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $288 = (($282) + ($278<<4)|0);
  $289 = HEAP32[$288>>2]|0;
  $290 = ((($282) + ($278<<4)|0) + 4|0);
  $291 = HEAP32[$290>>2]|0;
  $292 = ($289|0)==($291|0);
  L160: do {
   if (!($292)) {
    $293 = (($db) + 4|0);
    $294 = (($db) + 8|0);
    $295 = (($db) + 12|0);
    $296 = (($__v$i$i54) + 8|0);
    $301 = $289;
    while(1) {
     $297 = HEAP32[$293>>2]|0;
     $298 = HEAP32[$294>>2]|0;
     $299 = ($297|0)==($298|0);
     if ($299) {
      $306 = HEAP32[$db>>2]|0;
      $307 = $297;
      $308 = $306;
      $309 = (($307) - ($308))|0;
      $310 = (($309|0) / 24)&-1;
      $311 = (($310) + 1)|0;
      $312 = ($311|0)<(0);
      if ($312) {
       break;
      }
      $313 = ($310>>>0)<(1073741823);
      if ($313) {
       $314 = $310 << 1;
       $315 = ($314>>>0)<($311>>>0);
       $316 = $315 ? $311 : $314;
       $$0$i$i$i58 = $316;
      } else {
       $$0$i$i$i58 = 2147483647;
      }
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i54,$$0$i$i$i58,$310,$295);
      $317 = HEAP32[$296>>2]|0;
      $318 = ($317|0)==(0|0);
      if (!($318)) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($317,$301);
       $319 = (($317) + 12|0);
       $320 = (($301) + 12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($319,$320);
      }
      $321 = (($317) + 24|0);
      HEAP32[$296>>2] = $321;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i54);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i54);
     } else {
      $300 = ($297|0)==(0|0);
      if ($300) {
       $305 = 0;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($297,$301);
       $302 = (($297) + 12|0);
       $303 = (($301) + 12|0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($302,$303);
       $$pre$i55 = HEAP32[$293>>2]|0;
       $305 = $$pre$i55;
      }
      $304 = (($305) + 24|0);
      HEAP32[$293>>2] = $304;
     }
     $322 = (($301) + 24|0);
     $323 = ($322|0)==($291|0);
     if ($323) {
      break L160;
     } else {
      $301 = $322;
     }
    }
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
  } while(0);
  $324 = (($t$072) + 1|0);
  $$0 = $324;
  STACKTOP = sp;return ($$0|0);
 }
 }
 return (0)|0;
}
function __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$03 = 0, $$pre = 0, $$sroa$4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $phitmp = 0, $phitmp6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $0 = sp + 24|0;
 $$sroa$4 = sp + 48|0;
 $1 = sp + 12|0;
 $2 = sp;
 $3 = $last;
 $4 = $first;
 $5 = (($3) - ($4))|0;
 $6 = ($5|0)>(3);
 if (!($6)) {
  $$03 = $first;
  STACKTOP = sp;return ($$03|0);
 }
 $7 = HEAP8[$first>>0]|0;
 $8 = ($7<<24>>24)==(68);
 if (!($8)) {
  $$03 = $first;
  STACKTOP = sp;return ($$03|0);
 }
 $9 = (($first) + 1|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = $10 << 24 >> 24;
 if (!((($11|0) == 84) | (($11|0) == 116))) {
  $$03 = $first;
  STACKTOP = sp;return ($$03|0);
 }
 $12 = (($first) + 2|0);
 $13 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($12,$last,$db)|0);
 $14 = ($13|0)==($12|0);
 $15 = ($13|0)==($last|0);
 $or$cond = $14 | $15;
 if ($or$cond) {
  $$03 = $first;
  STACKTOP = sp;return ($$03|0);
 }
 $16 = HEAP8[$13>>0]|0;
 $17 = ($16<<24>>24)==(69);
 if (!($17)) {
  $$03 = $first;
  STACKTOP = sp;return ($$03|0);
 }
 $18 = HEAP32[$db>>2]|0;
 $19 = (($db) + 4|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($18|0)==($20|0);
 if ($21) {
  $$03 = $first;
  STACKTOP = sp;return ($$03|0);
 }
 $22 = (($20) + -24|0);
 __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($2,$22);
 $23 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($2,0,50496,9)|0);
 ;HEAP32[$1+0>>2]=HEAP32[$23+0>>2]|0;HEAP32[$1+4>>2]=HEAP32[$23+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$23+8>>2]|0;
 ;HEAP32[$23+0>>2]=0|0;HEAP32[$23+4>>2]=0|0;HEAP32[$23+8>>2]=0|0;
 $24 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1,48736,1)|0);
 $25 = HEAP8[$24>>0]|0;
 $26 = (($24) + 1|0);
 ;HEAP8[$$sroa$4+0>>0]=HEAP8[$26+0>>0]|0;HEAP8[$$sroa$4+1>>0]=HEAP8[$26+1>>0]|0;HEAP8[$$sroa$4+2>>0]=HEAP8[$26+2>>0]|0;HEAP8[$$sroa$4+3>>0]=HEAP8[$26+3>>0]|0;HEAP8[$$sroa$4+4>>0]=HEAP8[$26+4>>0]|0;HEAP8[$$sroa$4+5>>0]=HEAP8[$26+5>>0]|0;HEAP8[$$sroa$4+6>>0]=HEAP8[$26+6>>0]|0;
 $27 = (($24) + 8|0);
 $28 = HEAP32[$27>>2]|0;
 ;HEAP32[$24+0>>2]=0|0;HEAP32[$24+4>>2]=0|0;HEAP32[$24+8>>2]=0|0;
 HEAP8[$0>>0] = $25;
 $29 = (($0) + 1|0);
 ;HEAP8[$29+0>>0]=HEAP8[$$sroa$4+0>>0]|0;HEAP8[$29+1>>0]=HEAP8[$$sroa$4+1>>0]|0;HEAP8[$29+2>>0]=HEAP8[$$sroa$4+2>>0]|0;HEAP8[$29+3>>0]=HEAP8[$$sroa$4+3>>0]|0;HEAP8[$29+4>>0]=HEAP8[$$sroa$4+4>>0]|0;HEAP8[$29+5>>0]=HEAP8[$$sroa$4+5>>0]|0;HEAP8[$29+6>>0]=HEAP8[$$sroa$4+6>>0]|0;
 $30 = (($0) + 8|0);
 HEAP32[$30>>2] = $28;
 ;HEAP8[$$sroa$4+0>>0]=0|0;HEAP8[$$sroa$4+1>>0]=0|0;HEAP8[$$sroa$4+2>>0]=0|0;HEAP8[$$sroa$4+3>>0]=0|0;HEAP8[$$sroa$4+4>>0]=0|0;HEAP8[$$sroa$4+5>>0]=0|0;HEAP8[$$sroa$4+6>>0]=0|0;
 $31 = (($0) + 12|0);
 ;HEAP32[$31+0>>2]=0|0;HEAP32[$31+4>>2]=0|0;HEAP32[$31+8>>2]=0|0;
 __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($22,$0);
 __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
 $$pre = HEAP8[$1>>0]|0;
 $phitmp = $$pre & 1;
 $phitmp6 = ($phitmp<<24>>24)==(0);
 if (!($phitmp6)) {
  $32 = (($1) + 8|0);
  $33 = HEAP32[$32>>2]|0;
  _free($33);
 }
 $34 = HEAP8[$2>>0]|0;
 $35 = $34 & 1;
 $36 = ($35<<24>>24)==(0);
 if (!($36)) {
  $37 = (($2) + 8|0);
  $38 = HEAP32[$37>>2]|0;
  _free($38);
 }
 $39 = (($13) + 1|0);
 $$03 = $39;
 STACKTOP = sp;return ($$03|0);
}
function __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($agg$result,$__lhs,$__rhs) {
 $agg$result = $agg$result|0;
 $__lhs = $__lhs|0;
 $__rhs = $__rhs|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
 $0 = (_strlen(($__lhs|0))|0);
 $1 = HEAP8[$__rhs>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $6 = $1&255;
  $7 = $6 >>> 1;
  $9 = $7;
 } else {
  $4 = (($__rhs) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $9 = $5;
 }
 $8 = (($9) + ($0))|0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj($agg$result,$__lhs,$0,$8);
 $10 = HEAP8[$__rhs>>0]|0;
 $11 = $10 & 1;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $15 = (($__rhs) + 1|0);
  $16 = $15;
 } else {
  $13 = (($__rhs) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  $16 = $14;
 }
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($agg$result,$16,$9)|0);
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($this,$__s,$__n) {
 $this = $this|0;
 $__s = $__s|0;
 $__n = $__n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$this>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $7 = 10;$9 = $0;
 } else {
  $3 = HEAP32[$this>>2]|0;
  $4 = $3 & -2;
  $phitmp$i = (($4) + -1)|0;
  $5 = $3&255;
  $7 = $phitmp$i;$9 = $5;
 }
 $6 = ($7>>>0)<($__n>>>0);
 $8 = $9 & 1;
 $10 = ($8<<24>>24)==(0);
 if ($6) {
  if ($10) {
   $24 = $9&255;
   $25 = $24 >>> 1;
   $27 = $25;
  } else {
   $22 = (($this) + 4|0);
   $23 = HEAP32[$22>>2]|0;
   $27 = $23;
  }
  $26 = (($__n) - ($7))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($this,$7,$26,$27,0,$27,$__n,$__s);
  STACKTOP = sp;return;
 }
 if ($10) {
  $13 = (($this) + 1|0);
  $14 = $13;
 } else {
  $11 = (($this) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $14 = $12;
 }
 _memmove(($14|0),($__s|0),($__n|0))|0;
 $15 = (($14) + ($__n)|0);
 HEAP8[$15>>0] = 0;
 $16 = HEAP8[$this>>0]|0;
 $17 = $16 & 1;
 $18 = ($17<<24>>24)==(0);
 if ($18) {
  $20 = $__n << 1;
  $21 = $20&255;
  HEAP8[$this>>0] = $21;
  STACKTOP = sp;return;
 } else {
  $19 = (($this) + 4|0);
  HEAP32[$19>>2] = $__n;
  STACKTOP = sp;return;
 }
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($this,$__str) {
 $this = $this|0;
 $__str = $__str|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($this|0)==($__str|0);
 if ($0) {
  STACKTOP = sp;return;
 }
 $1 = HEAP8[$__str>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $8 = (($__str) + 1|0);
  $9 = $1&255;
  $10 = $9 >>> 1;
  $11 = $8;$12 = $10;
 } else {
  $4 = (($__str) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (($__str) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $11 = $5;$12 = $7;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($this,$11,$12);
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i9 = 0, $$0$i$i$i10$i = 0, $$0$i$i$i21$i = 0, $$04$i$i = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$i$i = 0, $$pre$i$i6 = 0, $$pre$i19$i = 0, $$pre$i8$i = 0, $$pre25 = 0, $$pre26 = 0, $$sroa$6 = 0, $$sroa$619 = 0, $$sum$i$i = 0, $0 = 0, $1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;
 var $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0;
 var $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0;
 var $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0;
 var $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__p$0$i$i = 0, $__p$13$i$i = 0, $__v$i$i18$i = 0;
 var $isdigit$i = 0, $isdigit11$i = 0, $isdigit13$i = 0, $isdigit9$i = 0, $isdigittmp$i = 0, $isdigittmp10$i = 0, $isdigittmp12$i = 0, $isdigittmp8$i = 0, $or$cond = 0, $or$cond$i$i$i$i$i$i = 0, $phitmp = 0, $phitmp$i$i$i = 0, $phitmp$i$i$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i$i = 0, $phitmp28 = 0, $phitmp29 = 0, $t0$0$i = 0, $t01$0$i = 0, $t01$1$i = 0, $t01$2$i = 0;
 var $t1$0$i$lcssa = 0, $t1$0$i19 = 0, $t13$0$i$lcssa = 0, $t13$0$i23 = 0, $tmp$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0;
 $__v$i$i18$i = sp + 12|0;
 $0 = sp + 32|0;
 $$sroa$619 = sp;
 $1 = sp + 104|0;
 $tmp$i = sp + 152|0;
 $2 = sp + 164|0;
 $3 = sp + 56|0;
 $4 = sp + 140|0;
 $5 = sp + 80|0;
 $$sroa$6 = sp + 176|0;
 $6 = sp + 128|0;
 $7 = ($first|0)==($last|0);
 if ($7) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $8 = HEAP8[$first>>0]|0;
 $9 = $8 << 24 >> 24;
 switch ($9|0) {
 case 85:  {
  $97 = $last;
  $98 = $first;
  $99 = (($97) - ($98))|0;
  $100 = ($99|0)>(2);
  $101 = ($8<<24>>24)==(85);
  $or$cond = $100 & $101;
  if (!($or$cond)) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $102 = (($first) + 1|0);
  $103 = HEAP8[$102>>0]|0;
  $104 = $103 << 24 >> 24;
  if ((($104|0) == 116)) {
   $105 = $$sroa$619;
   $106 = $105;
   HEAP32[$106>>2] = 1852732711;
   $107 = (($105) + 4)|0;
   $108 = $107;
   HEAP32[$108>>2] = 1684368737;
   $109 = (($$sroa$619) + 8|0);
   HEAP8[$109>>0] = 0;
   HEAP8[$0>>0] = 16;
   $110 = (($0) + 1|0);
   dest=$110+0|0; src=$$sroa$619+0|0; stop=dest+11|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   ;HEAP32[$$sroa$619+0>>2]=0|0;HEAP32[$$sroa$619+4>>2]=0|0;HEAP16[$$sroa$619+8>>1]=0|0;HEAP8[$$sroa$619+10>>0]=0|0;
   $111 = (($0) + 12|0);
   ;HEAP32[$111+0>>2]=0|0;HEAP32[$111+4>>2]=0|0;HEAP32[$111+8>>2]=0|0;
   $112 = (($db) + 4|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = (($db) + 8|0);
   $115 = HEAP32[$114>>2]|0;
   $116 = ($113>>>0)<($115>>>0);
   if ($116) {
    $117 = ($113|0)==(0|0);
    if ($117) {
     $120 = 0;
    } else {
     ;HEAP32[$113+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$113+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$113+8>>2]=HEAP32[$0+8>>2]|0;
     ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
     $118 = (($113) + 12|0);
     ;HEAP32[$118+0>>2]=HEAP32[$111+0>>2]|0;HEAP32[$118+4>>2]=HEAP32[$111+4>>2]|0;HEAP32[$118+8>>2]=HEAP32[$111+8>>2]|0;
     ;HEAP32[$111+0>>2]=0|0;HEAP32[$111+4>>2]=0|0;HEAP32[$111+8>>2]=0|0;
     $$pre$i$i6 = HEAP32[$112>>2]|0;
     $120 = $$pre$i$i6;
    }
    $119 = (($120) + 24|0);
    HEAP32[$112>>2] = $119;
   } else {
    $121 = (($db) + 12|0);
    $122 = HEAP32[$db>>2]|0;
    $123 = $113;
    $124 = $122;
    $125 = (($123) - ($124))|0;
    $126 = (($125|0) / 24)&-1;
    $127 = (($126) + 1)|0;
    $128 = ($127|0)<(0);
    if ($128) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $129 = $115;
    $130 = (($129) - ($124))|0;
    $131 = (($130|0) / 24)&-1;
    $132 = ($131>>>0)<(1073741823);
    if ($132) {
     $133 = $131 << 1;
     $134 = ($133>>>0)<($127>>>0);
     $135 = $134 ? $127 : $133;
     $$0$i$i$i$i9 = $135;
    } else {
     $$0$i$i$i$i9 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i18$i,$$0$i$i$i$i9,$126,$121);
    $136 = (($__v$i$i18$i) + 8|0);
    $137 = HEAP32[$136>>2]|0;
    $138 = ($137|0)==(0|0);
    if (!($138)) {
     ;HEAP32[$137+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$137+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$137+8>>2]=HEAP32[$0+8>>2]|0;
     ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
     $139 = (($137) + 12|0);
     ;HEAP32[$139+0>>2]=HEAP32[$111+0>>2]|0;HEAP32[$139+4>>2]=HEAP32[$111+4>>2]|0;HEAP32[$139+8>>2]=HEAP32[$111+8>>2]|0;
     ;HEAP32[$111+0>>2]=0|0;HEAP32[$111+4>>2]=0|0;HEAP32[$111+8>>2]=0|0;
    }
    $140 = (($137) + 24|0);
    HEAP32[$136>>2] = $140;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i18$i);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i18$i);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
   $141 = (($first) + 2|0);
   $142 = ($141|0)==($last|0);
   if ($142) {
    $143 = HEAP32[$112>>2]|0;
    $144 = (($143) + -24|0);
    $146 = $143;
    while(1) {
     $145 = (($146) + -24|0);
     HEAP32[$112>>2] = $145;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($145);
     $147 = HEAP32[$112>>2]|0;
     $148 = ($147|0)==($144|0);
     if ($148) {
      $$0 = $first;
      break;
     } else {
      $146 = $147;
     }
    }
    STACKTOP = sp;return ($$0|0);
   }
   $149 = HEAP8[$141>>0]|0;
   $150 = $149 << 24 >> 24;
   $isdigittmp10$i = (($150) + -48)|0;
   $isdigit11$i = ($isdigittmp10$i>>>0)<(10);
   if ($isdigit11$i) {
    $151 = (($first) + 3|0);
    $152 = ($151|0)==($last|0);
    L35: do {
     if ($152) {
      $t1$0$i$lcssa = $last;
     } else {
      $t1$0$i19 = $151;
      while(1) {
       $155 = HEAP8[$t1$0$i19>>0]|0;
       $156 = $155 << 24 >> 24;
       $isdigittmp12$i = (($156) + -48)|0;
       $isdigit13$i = ($isdigittmp12$i>>>0)<(10);
       $154 = (($t1$0$i19) + 1|0);
       if (!($isdigit13$i)) {
        $t1$0$i$lcssa = $t1$0$i19;
        break L35;
       }
       $153 = ($154|0)==($last|0);
       if ($153) {
        $t1$0$i$lcssa = $last;
        break;
       } else {
        $t1$0$i19 = $154;
       }
      }
     }
    } while(0);
    $157 = HEAP32[$112>>2]|0;
    $158 = (($157) + -24|0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS7_E4typeESC_SC_($158,$141,$t1$0$i$lcssa);
    $t0$0$i = $t1$0$i$lcssa;
   } else {
    $t0$0$i = $141;
   }
   $159 = HEAP32[$112>>2]|0;
   $160 = (($159) + -24|0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($160,39);
   $161 = ($t0$0$i|0)==($last|0);
   if (!($161)) {
    $162 = HEAP8[$t0$0$i>>0]|0;
    $163 = ($162<<24>>24)==(95);
    if ($163) {
     $170 = (($t0$0$i) + 1|0);
     $$0 = $170;
     STACKTOP = sp;return ($$0|0);
    }
   }
   $164 = HEAP32[$112>>2]|0;
   $165 = (($164) + -24|0);
   $167 = $164;
   while(1) {
    $166 = (($167) + -24|0);
    HEAP32[$112>>2] = $166;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($166);
    $168 = HEAP32[$112>>2]|0;
    $169 = ($168|0)==($165|0);
    if ($169) {
     $$0 = $first;
     break;
    } else {
     $167 = $168;
    }
   }
   STACKTOP = sp;return ($$0|0);
  } else if ((($104|0) == 108)) {
   HEAP8[$1>>0] = 18;
   $171 = (($1) + 1|0);
   ;HEAP8[$171+0>>0]=HEAP8[49888+0>>0]|0;HEAP8[$171+1>>0]=HEAP8[49888+1>>0]|0;HEAP8[$171+2>>0]=HEAP8[49888+2>>0]|0;HEAP8[$171+3>>0]=HEAP8[49888+3>>0]|0;HEAP8[$171+4>>0]=HEAP8[49888+4>>0]|0;HEAP8[$171+5>>0]=HEAP8[49888+5>>0]|0;HEAP8[$171+6>>0]=HEAP8[49888+6>>0]|0;
   $172 = (($1) + 8|0);
   HEAP32[$172>>2] = (10279);
   $173 = (($1) + 12|0);
   ;HEAP32[$173+0>>2]=0|0;HEAP32[$173+4>>2]=0|0;HEAP32[$173+8>>2]=0|0;
   $174 = (($db) + 4|0);
   $175 = HEAP32[$174>>2]|0;
   $176 = (($db) + 8|0);
   $177 = HEAP32[$176>>2]|0;
   $178 = ($175>>>0)<($177>>>0);
   if ($178) {
    $179 = ($175|0)==(0|0);
    if ($179) {
     $182 = 0;
    } else {
     ;HEAP32[$175+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$175+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$175+8>>2]=HEAP32[$1+8>>2]|0;
     ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
     $180 = (($175) + 12|0);
     ;HEAP32[$180+0>>2]=HEAP32[$173+0>>2]|0;HEAP32[$180+4>>2]=HEAP32[$173+4>>2]|0;HEAP32[$180+8>>2]=HEAP32[$173+8>>2]|0;
     ;HEAP32[$173+0>>2]=0|0;HEAP32[$173+4>>2]=0|0;HEAP32[$173+8>>2]=0|0;
     $$pre$i19$i = HEAP32[$174>>2]|0;
     $182 = $$pre$i19$i;
    }
    $181 = (($182) + 24|0);
    HEAP32[$174>>2] = $181;
   } else {
    $183 = (($db) + 12|0);
    $184 = HEAP32[$db>>2]|0;
    $185 = $175;
    $186 = $184;
    $187 = (($185) - ($186))|0;
    $188 = (($187|0) / 24)&-1;
    $189 = (($188) + 1)|0;
    $190 = ($189|0)<(0);
    if ($190) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $191 = $177;
    $192 = (($191) - ($186))|0;
    $193 = (($192|0) / 24)&-1;
    $194 = ($193>>>0)<(1073741823);
    if ($194) {
     $195 = $193 << 1;
     $196 = ($195>>>0)<($189>>>0);
     $197 = $196 ? $189 : $195;
     $$0$i$i$i21$i = $197;
    } else {
     $$0$i$i$i21$i = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i18$i,$$0$i$i$i21$i,$188,$183);
    $198 = (($__v$i$i18$i) + 8|0);
    $199 = HEAP32[$198>>2]|0;
    $200 = ($199|0)==(0|0);
    if (!($200)) {
     ;HEAP32[$199+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$199+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$199+8>>2]=HEAP32[$1+8>>2]|0;
     ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
     $201 = (($199) + 12|0);
     ;HEAP32[$201+0>>2]=HEAP32[$173+0>>2]|0;HEAP32[$201+4>>2]=HEAP32[$173+4>>2]|0;HEAP32[$201+8>>2]=HEAP32[$173+8>>2]|0;
     ;HEAP32[$173+0>>2]=0|0;HEAP32[$173+4>>2]=0|0;HEAP32[$173+8>>2]=0|0;
    }
    $202 = (($199) + 24|0);
    HEAP32[$198>>2] = $202;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i18$i);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i18$i);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
   $$phi$trans$insert = (($first) + 2|0);
   $$pre25 = HEAP8[$$phi$trans$insert>>0]|0;
   $phitmp = ($$pre25<<24>>24)==(118);
   do {
    if ($phitmp) {
     $203 = HEAP32[$174>>2]|0;
     $204 = (($203) + -24|0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($204,41);
     $205 = (($first) + 3|0);
     $t01$1$i = $205;
    } else {
     $206 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($$phi$trans$insert,$last,$db)|0);
     $207 = ($206|0)==($$phi$trans$insert|0);
     $208 = HEAP32[$174>>2]|0;
     if ($207) {
      $209 = (($208) + -24|0);
      $211 = $208;
      while(1) {
       $210 = (($211) + -24|0);
       HEAP32[$174>>2] = $210;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($210);
       $212 = HEAP32[$174>>2]|0;
       $213 = ($212|0)==($209|0);
       if ($213) {
        $$0 = $first;
        break;
       } else {
        $211 = $212;
       }
      }
      STACKTOP = sp;return ($$0|0);
     }
     $214 = HEAP32[$db>>2]|0;
     $215 = $208;
     $216 = $214;
     $217 = (($215) - ($216))|0;
     $218 = (($217|0) / 24)&-1;
     $219 = ($218>>>0)<(2);
     if ($219) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $220 = (($208) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($tmp$i,$220);
     $221 = HEAP32[$174>>2]|0;
     $222 = (($221) + -24|0);
     $224 = $221;
     while(1) {
      $223 = (($224) + -24|0);
      HEAP32[$174>>2] = $223;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($223);
      $225 = HEAP32[$174>>2]|0;
      $226 = ($225|0)==($222|0);
      if ($226) {
       break;
      } else {
       $224 = $225;
      }
     }
     $227 = (($221) + -48|0);
     $228 = HEAP8[$tmp$i>>0]|0;
     $229 = $228 & 1;
     $230 = ($229<<24>>24)==(0);
     if ($230) {
      $235 = (($tmp$i) + 1|0);
      $236 = $228&255;
      $237 = $236 >>> 1;
      $238 = $235;$239 = $237;
     } else {
      $231 = (($tmp$i) + 8|0);
      $232 = HEAP32[$231>>2]|0;
      $233 = (($tmp$i) + 4|0);
      $234 = HEAP32[$233>>2]|0;
      $238 = $232;$239 = $234;
     }
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($227,$238,$239)|0);
     $240 = (($tmp$i) + 1|0);
     $241 = (($tmp$i) + 8|0);
     $242 = (($tmp$i) + 4|0);
     $254 = $228;$t01$0$i = $206;
     while(1) {
      $243 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($t01$0$i,$last,$db)|0);
      $244 = ($243|0)==($t01$0$i|0);
      $245 = HEAP32[$174>>2]|0;
      if ($244) {
       label = 111;
       break;
      }
      $246 = HEAP32[$db>>2]|0;
      $247 = $245;
      $248 = $246;
      $249 = (($247) - ($248))|0;
      $250 = (($249|0) / 24)&-1;
      $251 = ($250>>>0)<(2);
      if ($251) {
       break;
      }
      $252 = (($245) + -24|0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($2,$252);
      $253 = $254 & 1;
      $255 = ($253<<24>>24)==(0);
      do {
       if ($255) {
        HEAP8[$240>>0] = 0;
        HEAP8[$tmp$i>>0] = 0;
       } else {
        $256 = HEAP32[$241>>2]|0;
        HEAP8[$256>>0] = 0;
        HEAP32[$242>>2] = 0;
        $257 = HEAP32[$tmp$i>>2]|0;
        $258 = $257 & -2;
        $phitmp$i$i$i$i$i$i$i = (($258) + -1)|0;
        $259 = $257&255;
        $260 = $259 & 1;
        $261 = ($260<<24>>24)==(0);
        if ($261) {
         $262 = $257 >>> 1;
         $263 = $262 & 127;
         $264 = ($259&255)<(22);
         if ($264) {
          $268 = 10;$282 = $263;$399 = 1;
         } else {
          $265 = (($263) + 16)|0;
          $266 = $265 & 240;
          $phitmp$i2$i$i$i$i$i$i = (($266) + -1)|0;
          $268 = $phitmp$i2$i$i$i$i$i$i;$282 = $263;$399 = 1;
         }
        } else {
         $268 = 10;$282 = 0;$399 = 0;
        }
        $267 = ($268|0)==($phitmp$i$i$i$i$i$i$i|0);
        if (!($267)) {
         $269 = ($268|0)==(10);
         if ($269) {
          if ($399) {
           $274 = $257 >>> 1;
           $275 = $274 & 127;
           $276 = (($275) + 1)|0;
           _memcpy(($240|0),($256|0),($276|0))|0;
           _free($256);
          } else {
           HEAP8[$240>>0] = 0;
           _free($256);
          }
          $283 = $282 << 1;
          $284 = $283&255;
          HEAP8[$tmp$i>>0] = $284;
          break;
         }
         $270 = ($268>>>0)<=($phitmp$i$i$i$i$i$i$i>>>0);
         $271 = (($268) + 1)|0;
         $272 = (_malloc($271)|0);
         $273 = ($272|0)==(0|0);
         $or$cond$i$i$i$i$i$i = $270 & $273;
         if (!($or$cond$i$i$i$i$i$i)) {
          if ($399) {
           $277 = $257 >>> 1;
           $278 = $277 & 127;
           $279 = (($278) + 1)|0;
           _memcpy(($272|0),($240|0),($279|0))|0;
          } else {
           $280 = HEAP8[$256>>0]|0;
           HEAP8[$272>>0] = $280;
           _free($256);
          }
          $281 = $271 | 1;
          HEAP32[$tmp$i>>2] = $281;
          HEAP32[$242>>2] = $282;
          HEAP32[$241>>2] = $272;
         }
        }
       }
      } while(0);
      ;HEAP32[$tmp$i+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$tmp$i+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$tmp$i+8>>2]=HEAP32[$2+8>>2]|0;
      ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
      $$pre26 = HEAP32[$174>>2]|0;
      $285 = (($$pre26) + -24|0);
      $287 = $$pre26;
      while(1) {
       $286 = (($287) + -24|0);
       HEAP32[$174>>2] = $286;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($286);
       $288 = HEAP32[$174>>2]|0;
       $289 = ($288|0)==($285|0);
       if ($289) {
        break;
       } else {
        $287 = $288;
       }
      }
      $290 = HEAP8[$tmp$i>>0]|0;
      $291 = $290 & 1;
      $292 = ($291<<24>>24)==(0);
      if ($292) {
       $294 = $290&255;
       $295 = $294 >>> 1;
       $297 = $295;
      } else {
       $293 = HEAP32[$242>>2]|0;
       $297 = $293;
      }
      $296 = ($297|0)==(0);
      if ($296) {
       $254 = $290;$t01$0$i = $243;
       continue;
      }
      $298 = (($$pre26) + -48|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($298,49032,2)|0);
      $299 = HEAP32[$174>>2]|0;
      $300 = (($299) + -24|0);
      if ($292) {
       $303 = $290&255;
       $304 = $303 >>> 1;
       $305 = $240;$306 = $304;
      } else {
       $301 = HEAP32[$241>>2]|0;
       $302 = HEAP32[$242>>2]|0;
       $305 = $301;$306 = $302;
      }
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($300,$305,$306)|0);
      $254 = $290;$t01$0$i = $243;
     }
     if ((label|0) == 111) {
      $307 = (($245) + -24|0);
      (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($307,48736,1)|0);
      $308 = $254 & 1;
      $309 = ($308<<24>>24)==(0);
      if ($309) {
       $t01$1$i = $t01$0$i;
       break;
      }
      $310 = HEAP32[$241>>2]|0;
      _free($310);
      $t01$1$i = $t01$0$i;
      break;
     }
     $394 = $254 & 1;
     $395 = ($394<<24>>24)==(0);
     if ($395) {
      $$0 = $first;
      STACKTOP = sp;return ($$0|0);
     }
     $396 = HEAP32[$241>>2]|0;
     _free($396);
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
   } while(0);
   $311 = ($t01$1$i|0)==($last|0);
   if (!($311)) {
    $312 = HEAP8[$t01$1$i>>0]|0;
    $313 = ($312<<24>>24)==(69);
    if ($313) {
     $320 = (($t01$1$i) + 1|0);
     $321 = ($320|0)==($last|0);
     if ($321) {
      $322 = HEAP32[$174>>2]|0;
      $323 = (($322) + -24|0);
      $325 = $322;
      while(1) {
       $324 = (($325) + -24|0);
       HEAP32[$174>>2] = $324;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($324);
       $326 = HEAP32[$174>>2]|0;
       $327 = ($326|0)==($323|0);
       if ($327) {
        $$0 = $first;
        break;
       } else {
        $325 = $326;
       }
      }
      STACKTOP = sp;return ($$0|0);
     }
     $328 = HEAP8[$320>>0]|0;
     $329 = $328 << 24 >> 24;
     $isdigittmp$i = (($329) + -48)|0;
     $isdigit$i = ($isdigittmp$i>>>0)<(10);
     if ($isdigit$i) {
      $330 = (($t01$1$i) + 2|0);
      $331 = ($330|0)==($last|0);
      L142: do {
       if ($331) {
        $t13$0$i$lcssa = $last;
       } else {
        $t13$0$i23 = $330;
        while(1) {
         $334 = HEAP8[$t13$0$i23>>0]|0;
         $335 = $334 << 24 >> 24;
         $isdigittmp8$i = (($335) + -48)|0;
         $isdigit9$i = ($isdigittmp8$i>>>0)<(10);
         $333 = (($t13$0$i23) + 1|0);
         if (!($isdigit9$i)) {
          $t13$0$i$lcssa = $t13$0$i23;
          break L142;
         }
         $332 = ($333|0)==($last|0);
         if ($332) {
          $t13$0$i$lcssa = $last;
          break;
         } else {
          $t13$0$i23 = $333;
         }
        }
       }
      } while(0);
      $336 = HEAP32[$174>>2]|0;
      $337 = (($336) + -24|0);
      $338 = HEAP8[$337>>0]|0;
      $339 = $338 & 1;
      $340 = ($339<<24>>24)==(0);
      if ($340) {
       $341 = $338&255;
       $342 = $341 >>> 1;
       $353 = 10;$354 = $342;$357 = $338;
      } else {
       $343 = (($336) + -20|0);
       $344 = HEAP32[$343>>2]|0;
       $345 = HEAP32[$337>>2]|0;
       $346 = $345 & -2;
       $phitmp$i$i$i = (($346) + -1)|0;
       $347 = $345&255;
       $353 = $phitmp$i$i$i;$354 = $344;$357 = $347;
      }
      $348 = $t13$0$i$lcssa;
      $349 = $320;
      $350 = (($348) - ($349))|0;
      $351 = ($t13$0$i$lcssa|0)==($320|0);
      if ($351) {
       $t01$2$i = $320;
      } else {
       $352 = (($353) - ($354))|0;
       $355 = ($352>>>0)<($350>>>0);
       if ($355) {
        $367 = (($354) + ($350))|0;
        $368 = (($367) - ($353))|0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($337,$353,$368,$354,7,$350);
        $369 = (($336) + -16|0);
        $370 = HEAP32[$369>>2]|0;
        $__p$0$i$i = $370;
       } else {
        $356 = $357 & 1;
        $358 = ($356<<24>>24)==(0);
        if ($358) {
         $361 = (($337) + 1|0);
         $365 = $361;
        } else {
         $359 = (($336) + -16|0);
         $360 = HEAP32[$359>>2]|0;
         $365 = $360;
        }
        $362 = ($354|0)==(7);
        if ($362) {
         $__p$0$i$i = $365;
        } else {
         $363 = (($354) + -7)|0;
         $364 = (($365) + 7|0);
         $$sum$i$i = (($350) + 7)|0;
         $366 = (($365) + ($$sum$i$i)|0);
         _memmove(($366|0),($364|0),($363|0))|0;
         $__p$0$i$i = $365;
        }
       }
       $371 = (($354) + ($350))|0;
       $372 = HEAP8[$337>>0]|0;
       $373 = $372 & 1;
       $374 = ($373<<24>>24)==(0);
       if ($374) {
        $376 = $371 << 1;
        $377 = $376&255;
        HEAP8[$337>>0] = $377;
       } else {
        $375 = (($336) + -20|0);
        HEAP32[$375>>2] = $371;
       }
       $378 = (($__p$0$i$i) + ($371)|0);
       HEAP8[$378>>0] = 0;
       $379 = (($__p$0$i$i) + 7|0);
       $$04$i$i = $320;$__p$13$i$i = $379;
       while(1) {
        $380 = HEAP8[$$04$i$i>>0]|0;
        HEAP8[$__p$13$i$i>>0] = $380;
        $381 = (($__p$13$i$i) + 1|0);
        $382 = (($$04$i$i) + 1|0);
        $383 = ($382|0)==($t13$0$i$lcssa|0);
        if ($383) {
         $t01$2$i = $t13$0$i$lcssa;
         break;
        } else {
         $$04$i$i = $382;$__p$13$i$i = $381;
        }
       }
      }
     } else {
      $t01$2$i = $320;
     }
     $384 = ($t01$2$i|0)==($last|0);
     if (!($384)) {
      $385 = HEAP8[$t01$2$i>>0]|0;
      $386 = ($385<<24>>24)==(95);
      if ($386) {
       $393 = (($t01$2$i) + 1|0);
       $$0 = $393;
       STACKTOP = sp;return ($$0|0);
      }
     }
     $387 = HEAP32[$174>>2]|0;
     $388 = (($387) + -24|0);
     $390 = $387;
     while(1) {
      $389 = (($390) + -24|0);
      HEAP32[$174>>2] = $389;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($389);
      $391 = HEAP32[$174>>2]|0;
      $392 = ($391|0)==($388|0);
      if ($392) {
       $$0 = $first;
       break;
      } else {
       $390 = $391;
      }
     }
     STACKTOP = sp;return ($$0|0);
    }
   }
   $314 = HEAP32[$174>>2]|0;
   $315 = (($314) + -24|0);
   $317 = $314;
   while(1) {
    $316 = (($317) + -24|0);
    HEAP32[$174>>2] = $316;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($316);
    $318 = HEAP32[$174>>2]|0;
    $319 = ($318|0)==($315|0);
    if ($319) {
     $$0 = $first;
     break;
    } else {
     $317 = $318;
    }
   }
   STACKTOP = sp;return ($$0|0);
  } else {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  break;
 }
 case 68: case 67:  {
  $10 = $last;
  $11 = $first;
  $12 = (($10) - ($11))|0;
  $13 = ($12|0)>(1);
  if (!($13)) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $14 = HEAP32[$db>>2]|0;
  $15 = (($db) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($14|0)==($16|0);
  if ($17) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  if ((($9|0) == 68)) {
   $53 = (($first) + 1|0);
   $54 = HEAP8[$53>>0]|0;
   $55 = $54 << 24 >> 24;
   if (!((($55|0) == 53) | (($55|0) == 50) | (($55|0) == 49) | (($55|0) == 48))) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $56 = (($16) + -24|0);
   __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($6,$56);
   $57 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($6,0,48880,1)|0);
   $58 = HEAP8[$57>>0]|0;
   $59 = (($57) + 1|0);
   ;HEAP8[$$sroa$6+0>>0]=HEAP8[$59+0>>0]|0;HEAP8[$$sroa$6+1>>0]=HEAP8[$59+1>>0]|0;HEAP8[$$sroa$6+2>>0]=HEAP8[$59+2>>0]|0;HEAP8[$$sroa$6+3>>0]=HEAP8[$59+3>>0]|0;HEAP8[$$sroa$6+4>>0]=HEAP8[$59+4>>0]|0;HEAP8[$$sroa$6+5>>0]=HEAP8[$59+5>>0]|0;HEAP8[$$sroa$6+6>>0]=HEAP8[$59+6>>0]|0;
   $60 = (($57) + 8|0);
   $61 = HEAP32[$60>>2]|0;
   ;HEAP32[$57+0>>2]=0|0;HEAP32[$57+4>>2]=0|0;HEAP32[$57+8>>2]=0|0;
   HEAP8[$5>>0] = $58;
   $62 = (($5) + 1|0);
   ;HEAP8[$62+0>>0]=HEAP8[$$sroa$6+0>>0]|0;HEAP8[$62+1>>0]=HEAP8[$$sroa$6+1>>0]|0;HEAP8[$62+2>>0]=HEAP8[$$sroa$6+2>>0]|0;HEAP8[$62+3>>0]=HEAP8[$$sroa$6+3>>0]|0;HEAP8[$62+4>>0]=HEAP8[$$sroa$6+4>>0]|0;HEAP8[$62+5>>0]=HEAP8[$$sroa$6+5>>0]|0;HEAP8[$62+6>>0]=HEAP8[$$sroa$6+6>>0]|0;
   $63 = (($5) + 8|0);
   HEAP32[$63>>2] = $61;
   ;HEAP8[$$sroa$6+0>>0]=0|0;HEAP8[$$sroa$6+1>>0]=0|0;HEAP8[$$sroa$6+2>>0]=0|0;HEAP8[$$sroa$6+3>>0]=0|0;HEAP8[$$sroa$6+4>>0]=0|0;HEAP8[$$sroa$6+5>>0]=0|0;HEAP8[$$sroa$6+6>>0]=0|0;
   $64 = (($5) + 12|0);
   ;HEAP32[$64+0>>2]=0|0;HEAP32[$64+4>>2]=0|0;HEAP32[$64+8>>2]=0|0;
   $65 = HEAP32[$15>>2]|0;
   $66 = (($db) + 8|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = ($65>>>0)<($67>>>0);
   if ($68) {
    $69 = ($65|0)==(0|0);
    if ($69) {
     $72 = 0;
    } else {
     ;HEAP32[$65+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$65+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$65+8>>2]=HEAP32[$5+8>>2]|0;
     ;HEAP32[$5+0>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;
     $70 = (($65) + 12|0);
     ;HEAP32[$70+0>>2]=HEAP32[$64+0>>2]|0;HEAP32[$70+4>>2]=HEAP32[$64+4>>2]|0;HEAP32[$70+8>>2]=HEAP32[$64+8>>2]|0;
     ;HEAP32[$64+0>>2]=0|0;HEAP32[$64+4>>2]=0|0;HEAP32[$64+8>>2]=0|0;
     $$pre$i8$i = HEAP32[$15>>2]|0;
     $72 = $$pre$i8$i;
    }
    $71 = (($72) + 24|0);
    HEAP32[$15>>2] = $71;
   } else {
    $73 = (($db) + 12|0);
    $74 = HEAP32[$db>>2]|0;
    $75 = $65;
    $76 = $74;
    $77 = (($75) - ($76))|0;
    $78 = (($77|0) / 24)&-1;
    $79 = (($78) + 1)|0;
    $80 = ($79|0)<(0);
    if ($80) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $81 = $67;
    $82 = (($81) - ($76))|0;
    $83 = (($82|0) / 24)&-1;
    $84 = ($83>>>0)<(1073741823);
    if ($84) {
     $85 = $83 << 1;
     $86 = ($85>>>0)<($79>>>0);
     $87 = $86 ? $79 : $85;
     $$0$i$i$i10$i = $87;
    } else {
     $$0$i$i$i10$i = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i18$i,$$0$i$i$i10$i,$78,$73);
    $88 = (($__v$i$i18$i) + 8|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = ($89|0)==(0|0);
    if (!($90)) {
     ;HEAP32[$89+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$89+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$89+8>>2]=HEAP32[$5+8>>2]|0;
     ;HEAP32[$5+0>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;
     $91 = (($89) + 12|0);
     ;HEAP32[$91+0>>2]=HEAP32[$64+0>>2]|0;HEAP32[$91+4>>2]=HEAP32[$64+4>>2]|0;HEAP32[$91+8>>2]=HEAP32[$64+8>>2]|0;
     ;HEAP32[$64+0>>2]=0|0;HEAP32[$64+4>>2]=0|0;HEAP32[$64+8>>2]=0|0;
    }
    $92 = (($89) + 24|0);
    HEAP32[$88>>2] = $92;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i18$i);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i18$i);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
   $$pre = HEAP8[$6>>0]|0;
   $phitmp28 = $$pre & 1;
   $phitmp29 = ($phitmp28<<24>>24)==(0);
   if (!($phitmp29)) {
    $93 = (($6) + 8|0);
    $94 = HEAP32[$93>>2]|0;
    _free($94);
   }
   $95 = (($first) + 2|0);
   $96 = (($db) + 60|0);
   HEAP8[$96>>0] = 1;
   $$0 = $95;
   STACKTOP = sp;return ($$0|0);
  } else if ((($9|0) == 67)) {
   $18 = (($first) + 1|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = $19 << 24 >> 24;
   if (!((($20|0) == 53) | (($20|0) == 51) | (($20|0) == 50) | (($20|0) == 49))) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $21 = (($16) + -24|0);
   __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($4,$21);
   ;HEAP32[$3+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$3+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$4+8>>2]|0;
   ;HEAP32[$4+0>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
   $22 = (($3) + 12|0);
   ;HEAP32[$22+0>>2]=0|0;HEAP32[$22+4>>2]=0|0;HEAP32[$22+8>>2]=0|0;
   $23 = HEAP32[$15>>2]|0;
   $24 = (($db) + 8|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($23>>>0)<($25>>>0);
   if ($26) {
    $27 = ($23|0)==(0|0);
    if ($27) {
     $30 = 0;
    } else {
     ;HEAP32[$23+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$23+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$23+8>>2]=HEAP32[$3+8>>2]|0;
     ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
     $28 = (($23) + 12|0);
     ;HEAP32[$28+0>>2]=HEAP32[$22+0>>2]|0;HEAP32[$28+4>>2]=HEAP32[$22+4>>2]|0;HEAP32[$28+8>>2]=HEAP32[$22+8>>2]|0;
     ;HEAP32[$22+0>>2]=0|0;HEAP32[$22+4>>2]=0|0;HEAP32[$22+8>>2]=0|0;
     $$pre$i$i = HEAP32[$15>>2]|0;
     $30 = $$pre$i$i;
    }
    $29 = (($30) + 24|0);
    HEAP32[$15>>2] = $29;
   } else {
    $31 = (($db) + 12|0);
    $32 = HEAP32[$db>>2]|0;
    $33 = $23;
    $34 = $32;
    $35 = (($33) - ($34))|0;
    $36 = (($35|0) / 24)&-1;
    $37 = (($36) + 1)|0;
    $38 = ($37|0)<(0);
    if ($38) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $39 = $25;
    $40 = (($39) - ($34))|0;
    $41 = (($40|0) / 24)&-1;
    $42 = ($41>>>0)<(1073741823);
    if ($42) {
     $43 = $41 << 1;
     $44 = ($43>>>0)<($37>>>0);
     $45 = $44 ? $37 : $43;
     $$0$i$i$i$i = $45;
    } else {
     $$0$i$i$i$i = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i18$i,$$0$i$i$i$i,$36,$31);
    $46 = (($__v$i$i18$i) + 8|0);
    $47 = HEAP32[$46>>2]|0;
    $48 = ($47|0)==(0|0);
    if (!($48)) {
     ;HEAP32[$47+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$47+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$47+8>>2]=HEAP32[$3+8>>2]|0;
     ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
     $49 = (($47) + 12|0);
     ;HEAP32[$49+0>>2]=HEAP32[$22+0>>2]|0;HEAP32[$49+4>>2]=HEAP32[$22+4>>2]|0;HEAP32[$49+8>>2]=HEAP32[$22+8>>2]|0;
     ;HEAP32[$22+0>>2]=0|0;HEAP32[$22+4>>2]=0|0;HEAP32[$22+8>>2]=0|0;
    }
    $50 = (($47) + 24|0);
    HEAP32[$46>>2] = $50;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i18$i);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i18$i);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $51 = (($first) + 2|0);
   $52 = (($db) + 60|0);
   HEAP8[$52>>0] = 1;
   $$0 = $51;
   STACKTOP = sp;return ($$0|0);
  } else {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  break;
 }
 case 57: case 56: case 55: case 54: case 53: case 52: case 51: case 50: case 49:  {
  $397 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
  STACKTOP = sp;return ($397|0);
  break;
 }
 default: {
  $398 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
  $$0 = $398;
  STACKTOP = sp;return ($$0|0);
 }
 }
 return (0)|0;
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($first,$last) {
 $first = $first|0;
 $last = $last|0;
 var $$0 = 0, $$first = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $first$pn = 0, $isdigit = 0, $isdigit2 = 0, $isdigit4 = 0, $isdigit6 = 0, $isdigittmp = 0, $isdigittmp1 = 0, $isdigittmp3 = 0, $isdigittmp5 = 0, $t1$08 = 0, $t11$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($first|0)==($last|0);
 L1: do {
  if ($0) {
   $$0 = $first;
  } else {
   $1 = HEAP8[$first>>0]|0;
   $2 = ($1<<24>>24)==(95);
   if (!($2)) {
    $16 = $1 << 24 >> 24;
    $isdigittmp = (($16) + -48)|0;
    $isdigit = ($isdigittmp>>>0)<(10);
    if ($isdigit) {
     $first$pn = $first;
    } else {
     $$0 = $first;
     break;
    }
    while(1) {
     $t11$0 = (($first$pn) + 1|0);
     $17 = ($t11$0|0)==($last|0);
     if ($17) {
      $$0 = $last;
      break L1;
     }
     $18 = HEAP8[$t11$0>>0]|0;
     $19 = $18 << 24 >> 24;
     $isdigittmp1 = (($19) + -48)|0;
     $isdigit2 = ($isdigittmp1>>>0)<(10);
     if ($isdigit2) {
      $first$pn = $t11$0;
     } else {
      $$0 = $t11$0;
      break L1;
     }
    }
   }
   $3 = (($first) + 1|0);
   $4 = ($3|0)==($last|0);
   if ($4) {
    $$0 = $first;
   } else {
    $5 = HEAP8[$3>>0]|0;
    $6 = $5 << 24 >> 24;
    $isdigittmp3 = (($6) + -48)|0;
    $isdigit4 = ($isdigittmp3>>>0)<(10);
    if ($isdigit4) {
     $7 = (($first) + 2|0);
     $$0 = $7;
     break;
    }
    $8 = ($5<<24>>24)==(95);
    if ($8) {
     $9 = (($first) + 2|0);
     $10 = ($9|0)==($last|0);
     if ($10) {
      $$0 = $first;
     } else {
      $t1$08 = $9;
      while(1) {
       $13 = HEAP8[$t1$08>>0]|0;
       $14 = $13 << 24 >> 24;
       $isdigittmp5 = (($14) + -48)|0;
       $isdigit6 = ($isdigittmp5>>>0)<(10);
       $12 = (($t1$08) + 1|0);
       if (!($isdigit6)) {
        break;
       }
       $11 = ($12|0)==($last|0);
       if ($11) {
        $$0 = $first;
        break L1;
       } else {
        $t1$08 = $12;
       }
      }
      $15 = ($13<<24>>24)==(95);
      $$first = $15 ? $12 : $first;
      STACKTOP = sp;return ($$first|0);
     }
    } else {
     $$0 = $first;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($this,$__old_cap,$__delta_cap,$__old_sz,$__n_copy,$__n_add) {
 $this = $this|0;
 $__old_cap = $__old_cap|0;
 $__delta_cap = $__delta_cap|0;
 $__old_sz = $__old_sz|0;
 $__n_copy = $__n_copy|0;
 $__n_add = $__n_add|0;
 var $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (-17 - ($__old_cap))|0;
 $1 = ($0>>>0)<($__delta_cap>>>0);
 if ($1) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $2 = HEAP8[$this>>0]|0;
 $3 = $2 & 1;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  $7 = (($this) + 1|0);
  $19 = $7;
 } else {
  $5 = (($this) + 8|0);
  $6 = HEAP32[$5>>2]|0;
  $19 = $6;
 }
 $8 = ($__old_cap>>>0)<(2147483623);
 if ($8) {
  $9 = (($__delta_cap) + ($__old_cap))|0;
  $10 = $__old_cap << 1;
  $11 = ($9>>>0)<($10>>>0);
  $12 = $11 ? $10 : $9;
  $13 = ($12>>>0)<(11);
  if ($13) {
   $16 = 11;
  } else {
   $14 = (($12) + 16)|0;
   $15 = $14 & -16;
   $16 = $15;
  }
 } else {
  $16 = -17;
 }
 $17 = (_malloc($16)|0);
 $18 = ($__n_copy|0)==(0);
 if (!($18)) {
  _memcpy(($17|0),($19|0),($__n_copy|0))|0;
 }
 $20 = ($__old_sz|0)==($__n_copy|0);
 if (!($20)) {
  $21 = (($__old_sz) - ($__n_copy))|0;
  $$sum = (($__n_add) + ($__n_copy))|0;
  $22 = (($17) + ($$sum)|0);
  $23 = (($19) + ($__n_copy)|0);
  _memcpy(($22|0),($23|0),($21|0))|0;
 }
 $24 = ($__old_cap|0)==(10);
 if ($24) {
  $25 = (($this) + 8|0);
  HEAP32[$25>>2] = $17;
  $26 = $16 | 1;
  HEAP32[$this>>2] = $26;
  STACKTOP = sp;return;
 }
 _free($19);
 $25 = (($this) + 8|0);
 HEAP32[$25>>2] = $17;
 $26 = $16 | 1;
 HEAP32[$this>>2] = $26;
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i54 = 0, $$0$i$i$i$i74 = 0, $$0$i$i$i29 = 0, $$0$i58 = 0, $$012$i$i$i = 0, $$012$i$i$i47 = 0, $$012$i$i$i67 = 0, $$02$i$i = 0, $$1$i = 0, $$first = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i51 = 0, $$pre$i$i71 = 0, $$pre$i27 = 0;
 var $$pre110 = 0, $$pre111 = 0, $$pre112 = 0, $$pre113 = 0, $$sroa$4 = 0, $$v$i = 0, $$v$i41 = 0, $$v$i64 = 0, $$v4$i = 0, $$v4$i44 = 0, $$v6$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0.0, $218 = 0.0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0.0, $285 = 0, $286 = 0;
 var $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0;
 var $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0;
 var $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0;
 var $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0.0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0;
 var $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0;
 var $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0;
 var $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0;
 var $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0;
 var $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0;
 var $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0;
 var $467 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__p$0$ph$i$i = 0;
 var $__p$01$i$i = 0, $e$010$i = 0, $e$08$i = 0, $e$08$i38 = 0, $first$ = 0, $first$10 = 0, $first$11 = 0, $first$12 = 0, $first$13 = 0, $first$14 = 0, $first$15 = 0, $first$16 = 0, $first$17 = 0, $first$18 = 0, $first$19 = 0, $first$20 = 0, $first$21 = 0, $first$22 = 0, $first$23 = 0, $first$8 = 0;
 var $first$9 = 0, $isdigit = 0, $isdigit$i29 = 0, $isdigit$i33 = 0, $isdigit$i38 = 0, $isdigit3$i = 0, $isdigit3$i43 = 0, $isdigit5$i = 0, $isdigittmp = 0, $isdigittmp$i28 = 0, $isdigittmp$i32 = 0, $isdigittmp$i37 = 0, $isdigittmp2$i = 0, $isdigittmp2$i42 = 0, $isdigittmp4$i = 0, $n$090 = 0, $num$i60 = 0, $or$cond = 0, $or$cond115 = 0, $or$cond24 = 0;
 var $or$cond84 = 0, $or$cond85 = 0, $or$cond86 = 0, $phitmp$i = 0, $phitmp$i45 = 0, $phitmp$i65 = 0, $scevgep4$i$i = 0, $t$011$i = 0, $t$09$i = 0, $t$09$i37 = 0, $vararg_buffer4 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0;
 $vararg_buffer4 = sp;
 $0 = sp + 24|0;
 $num$i60 = sp + 368|0;
 $1 = sp + 56|0;
 $2 = sp + 240|0;
 $3 = sp + 32|0;
 $4 = sp + 80|0;
 $5 = sp + 216|0;
 $6 = sp + 104|0;
 $7 = sp + 128|0;
 $8 = sp + 140|0;
 $9 = sp + 152|0;
 $10 = sp + 340|0;
 $11 = sp + 176|0;
 $12 = sp + 188|0;
 $13 = sp + 200|0;
 $14 = sp + 116|0;
 $15 = sp + 252|0;
 $16 = sp + 264|0;
 $17 = sp + 276|0;
 $18 = sp + 288|0;
 $19 = sp + 304|0;
 $$sroa$4 = sp + 408|0;
 $20 = sp + 44|0;
 $21 = sp + 164|0;
 $22 = sp + 328|0;
 $23 = sp + 352|0;
 $24 = $last;
 $25 = $first;
 $26 = (($24) - ($25))|0;
 $27 = ($26|0)>(3);
 if (!($27)) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $28 = HEAP8[$first>>0]|0;
 $29 = ($28<<24>>24)==(76);
 if (!($29)) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $30 = (($first) + 1|0);
 $31 = HEAP8[$30>>0]|0;
 $32 = $31 << 24 >> 24;
 do {
  switch ($32|0) {
  case 111:  {
   $179 = (($first) + 2|0);
   $180 = (_malloc(32)|0);
   $181 = (($18) + 8|0);
   HEAP32[$181>>2] = $180;
   HEAP32[$18>>2] = 33;
   $182 = (($18) + 4|0);
   HEAP32[$182>>2] = 17;
   dest=$180+0|0; src=50448+0|0; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $183 = (($180) + 17|0);
   HEAP8[$183>>0] = 0;
   $184 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($179,$last,$18,$db)|0);
   _free($180);
   $185 = ($184|0)==($179|0);
   $first$20 = $185 ? $first : $184;
   $$0 = $first$20;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 102:  {
   $186 = (($first) + 2|0);
   $187 = $186;
   $188 = (($24) - ($187))|0;
   $189 = ($188>>>0)>(8);
   L11: do {
    if ($189) {
     $190 = (($first) + 10|0);
     $191 = HEAP8[$186>>0]|0;
     $193 = $191;$e$08$i = $0;$t$09$i = $186;
     while(1) {
      $192 = $193 << 24 >> 24;
      $isdigittmp$i28 = (($192) + -48)|0;
      $isdigit$i29 = ($isdigittmp$i28>>>0)<(10);
      if (!($isdigit$i29)) {
       $194 = $192 | 32;
       $195 = (($194) + -97)|0;
       $196 = ($195>>>0)<(6);
       if (!($196)) {
        $$0$i = $186;
        break L11;
       }
      }
      $$v$i = $isdigit$i29 ? 0 : 9;
      $197 = (($$v$i) + ($192))|0;
      $198 = (($t$09$i) + 1|0);
      $199 = HEAP8[$198>>0]|0;
      $200 = $199 << 24 >> 24;
      $isdigittmp2$i = (($200) + -48)|0;
      $isdigit3$i = ($isdigittmp2$i>>>0)<(10);
      $$v4$i = $isdigit3$i ? 208 : 169;
      $201 = (($$v4$i) + ($200))|0;
      $202 = $197 << 4;
      $203 = (($201) + ($202))|0;
      $204 = $203&255;
      HEAP8[$e$08$i>>0] = $204;
      $205 = (($t$09$i) + 2|0);
      $206 = (($e$08$i) + 1|0);
      $207 = ($205|0)==($190|0);
      $208 = HEAP8[$205>>0]|0;
      if ($207) {
       break;
      } else {
       $193 = $208;$e$08$i = $206;$t$09$i = $205;
      }
     }
     $phitmp$i = ($208<<24>>24)==(69);
     if ($phitmp$i) {
      $209 = ($0|0)!=($206|0);
      $210 = ($e$08$i>>>0)>($0>>>0);
      $or$cond84 = $209 & $210;
      L20: do {
       if ($or$cond84) {
        $$012$i$i$i = $0;$212 = $204;$213 = $e$08$i;
        while(1) {
         $211 = HEAP8[$$012$i$i$i>>0]|0;
         HEAP8[$$012$i$i$i>>0] = $212;
         HEAP8[$213>>0] = $211;
         $214 = (($$012$i$i$i) + 1|0);
         $215 = (($213) + -1|0);
         $216 = ($214>>>0)<($215>>>0);
         if (!($216)) {
          break L20;
         }
         $$pre111 = HEAP8[$215>>0]|0;
         $$012$i$i$i = $214;$212 = $$pre111;$213 = $215;
        }
       }
      } while(0);
      dest=$num$i60+0|0; stop=dest+24|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $217 = +HEAPF32[$0>>2];
      $218 = $217;
      HEAPF64[tempDoublePtr>>3]=$218;HEAP32[$vararg_buffer4>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_buffer4+4>>2]=HEAP32[tempDoublePtr+4>>2];
      $219 = (_snprintf($num$i60,24,50488,$vararg_buffer4)|0);
      $220 = ($219>>>0)>(23);
      if ($220) {
       $$0$i = $186;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($2,$num$i60,$219);
       ;HEAP32[$1+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$1+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$2+8>>2]|0;
       ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
       $221 = (($1) + 12|0);
       ;HEAP32[$221+0>>2]=0|0;HEAP32[$221+4>>2]=0|0;HEAP32[$221+8>>2]=0|0;
       $222 = (($db) + 4|0);
       $223 = HEAP32[$222>>2]|0;
       $224 = (($db) + 8|0);
       $225 = HEAP32[$224>>2]|0;
       $226 = ($223>>>0)<($225>>>0);
       if ($226) {
        $227 = ($223|0)==(0|0);
        if ($227) {
         $230 = 0;
        } else {
         ;HEAP32[$223+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$223+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$223+8>>2]=HEAP32[$1+8>>2]|0;
         ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
         $228 = (($223) + 12|0);
         ;HEAP32[$228+0>>2]=HEAP32[$221+0>>2]|0;HEAP32[$228+4>>2]=HEAP32[$221+4>>2]|0;HEAP32[$228+8>>2]=HEAP32[$221+8>>2]|0;
         ;HEAP32[$221+0>>2]=0|0;HEAP32[$221+4>>2]=0|0;HEAP32[$221+8>>2]=0|0;
         $$pre$i$i = HEAP32[$222>>2]|0;
         $230 = $$pre$i$i;
        }
        $229 = (($230) + 24|0);
        HEAP32[$222>>2] = $229;
       } else {
        $231 = (($db) + 12|0);
        $232 = HEAP32[$db>>2]|0;
        $233 = $223;
        $234 = $232;
        $235 = (($233) - ($234))|0;
        $236 = (($235|0) / 24)&-1;
        $237 = (($236) + 1)|0;
        $238 = ($237|0)<(0);
        if ($238) {
         __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
         // unreachable;
        }
        $239 = $225;
        $240 = (($239) - ($234))|0;
        $241 = (($240|0) / 24)&-1;
        $242 = ($241>>>0)<(1073741823);
        if ($242) {
         $243 = $241 << 1;
         $244 = ($243>>>0)<($237>>>0);
         $245 = $244 ? $237 : $243;
         $$0$i$i$i$i = $245;
        } else {
         $$0$i$i$i$i = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($vararg_buffer4,$$0$i$i$i$i,$236,$231);
        $246 = (($vararg_buffer4) + 8|0);
        $247 = HEAP32[$246>>2]|0;
        $248 = ($247|0)==(0|0);
        if (!($248)) {
         ;HEAP32[$247+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$247+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$247+8>>2]=HEAP32[$1+8>>2]|0;
         ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
         $249 = (($247) + 12|0);
         ;HEAP32[$249+0>>2]=HEAP32[$221+0>>2]|0;HEAP32[$249+4>>2]=HEAP32[$221+4>>2]|0;HEAP32[$249+8>>2]=HEAP32[$221+8>>2]|0;
         ;HEAP32[$221+0>>2]=0|0;HEAP32[$221+4>>2]=0|0;HEAP32[$221+8>>2]=0|0;
        }
        $250 = (($247) + 24|0);
        HEAP32[$246>>2] = $250;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$vararg_buffer4);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($vararg_buffer4);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
       $251 = (($first) + 11|0);
       $$0$i = $251;
      }
     } else {
      $$0$i = $186;
     }
    } else {
     $$0$i = $186;
    }
   } while(0);
   $252 = ($$0$i|0)==($186|0);
   $first$21 = $252 ? $first : $$0$i;
   $$0 = $first$21;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 119:  {
   $33 = (($first) + 2|0);
   HEAP8[$3>>0] = 14;
   $34 = (($3) + 1|0);
   ;HEAP8[$34+0>>0]=HEAP8[50336+0>>0]|0;HEAP8[$34+1>>0]=HEAP8[50336+1>>0]|0;HEAP8[$34+2>>0]=HEAP8[50336+2>>0]|0;HEAP8[$34+3>>0]=HEAP8[50336+3>>0]|0;HEAP8[$34+4>>0]=HEAP8[50336+4>>0]|0;HEAP8[$34+5>>0]=HEAP8[50336+5>>0]|0;HEAP8[$34+6>>0]=HEAP8[50336+6>>0]|0;
   $35 = (($3) + 8|0);
   HEAP8[$35>>0] = 0;
   $36 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($33,$last,$3,$db)|0);
   $37 = ($36|0)==($33|0);
   $first$ = $37 ? $first : $36;
   $$0 = $first$;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 116:  {
   $134 = (($first) + 2|0);
   $135 = (_malloc(16)|0);
   $136 = (($10) + 8|0);
   HEAP32[$136>>2] = $135;
   HEAP32[$10>>2] = 17;
   $137 = (($10) + 4|0);
   HEAP32[$137>>2] = 14;
   dest=$135+0|0; src=50400+0|0; stop=dest+14|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $138 = (($135) + 14|0);
   HEAP8[$138>>0] = 0;
   $139 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($134,$last,$10,$db)|0);
   _free($135);
   $140 = ($139|0)==($134|0);
   $first$12 = $140 ? $first : $139;
   $$0 = $first$12;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 105:  {
   $141 = (($first) + 2|0);
   HEAP8[$11>>0] = 0;
   $142 = (($11) + 1|0);
   HEAP8[$142>>0] = 0;
   $143 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($141,$last,$11,$db)|0);
   $144 = ($143|0)==($141|0);
   $first$13 = $144 ? $first : $143;
   $$0 = $first$13;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 106:  {
   $145 = (($first) + 2|0);
   HEAP8[$12>>0] = 2;
   $146 = (($12) + 1|0);
   HEAP8[$146>>0] = 117;
   $147 = (($12) + 2|0);
   HEAP8[$147>>0] = 0;
   $148 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($145,$last,$12,$db)|0);
   $149 = ($148|0)==($145|0);
   $first$14 = $149 ? $first : $148;
   $$0 = $first$14;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 108:  {
   $150 = (($first) + 2|0);
   HEAP8[$13>>0] = 2;
   $151 = (($13) + 1|0);
   HEAP8[$151>>0] = 108;
   $152 = (($13) + 2|0);
   HEAP8[$152>>0] = 0;
   $153 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($150,$last,$13,$db)|0);
   $154 = ($153|0)==($150|0);
   $first$15 = $154 ? $first : $153;
   $$0 = $first$15;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 109:  {
   $155 = (($first) + 2|0);
   HEAP8[$14>>0] = 4;
   $156 = (($14) + 1|0);
   HEAP8[$156>>0]=27765&255;HEAP8[$156+1>>0]=27765>>8;
   $157 = (($14) + 3|0);
   HEAP8[$157>>0] = 0;
   $158 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($155,$last,$14,$db)|0);
   $159 = ($158|0)==($155|0);
   $first$16 = $159 ? $first : $158;
   $$0 = $first$16;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 99:  {
   $110 = (($first) + 2|0);
   HEAP8[$6>>0] = 8;
   $111 = (($6) + 1|0);
   HEAP8[$111>>0]=1918986339&255;HEAP8[$111+1>>0]=(1918986339>>8)&255;HEAP8[$111+2>>0]=(1918986339>>16)&255;HEAP8[$111+3>>0]=1918986339>>24;
   $112 = (($6) + 5|0);
   HEAP8[$112>>0] = 0;
   $113 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($110,$last,$6,$db)|0);
   $114 = ($113|0)==($110|0);
   $first$8 = $114 ? $first : $113;
   $$0 = $first$8;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 97:  {
   $115 = (($first) + 2|0);
   $116 = (_malloc(16)|0);
   $117 = (($7) + 8|0);
   HEAP32[$117>>2] = $116;
   HEAP32[$7>>2] = 17;
   $118 = (($7) + 4|0);
   HEAP32[$118>>2] = 11;
   dest=$116+0|0; src=50360+0|0; stop=dest+11|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $119 = (($116) + 11|0);
   HEAP8[$119>>0] = 0;
   $120 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($115,$last,$7,$db)|0);
   _free($116);
   $121 = ($120|0)==($115|0);
   $first$9 = $121 ? $first : $120;
   $$0 = $first$9;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 104:  {
   $122 = (($first) + 2|0);
   $123 = (_malloc(16)|0);
   $124 = (($8) + 8|0);
   HEAP32[$124>>2] = $123;
   HEAP32[$8>>2] = 17;
   $125 = (($8) + 4|0);
   HEAP32[$125>>2] = 13;
   dest=$123+0|0; src=50376+0|0; stop=dest+13|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $126 = (($123) + 13|0);
   HEAP8[$126>>0] = 0;
   $127 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($122,$last,$8,$db)|0);
   _free($123);
   $128 = ($127|0)==($122|0);
   $first$10 = $128 ? $first : $127;
   $$0 = $first$10;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 115:  {
   $129 = (($first) + 2|0);
   HEAP8[$9>>0] = 10;
   $130 = (($9) + 1|0);
   ;HEAP8[$130+0>>0]=HEAP8[50392+0>>0]|0;HEAP8[$130+1>>0]=HEAP8[50392+1>>0]|0;HEAP8[$130+2>>0]=HEAP8[50392+2>>0]|0;HEAP8[$130+3>>0]=HEAP8[50392+3>>0]|0;HEAP8[$130+4>>0]=HEAP8[50392+4>>0]|0;
   $131 = (($9) + 6|0);
   HEAP8[$131>>0] = 0;
   $132 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($129,$last,$9,$db)|0);
   $133 = ($132|0)==($129|0);
   $first$11 = $133 ? $first : $132;
   $$0 = $first$11;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 95:  {
   $385 = (($first) + 2|0);
   $386 = HEAP8[$385>>0]|0;
   $387 = ($386<<24>>24)==(90);
   if (!($387)) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $388 = (($first) + 3|0);
   $389 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($388,$last,$db)|0);
   $390 = ($389|0)==($388|0);
   $391 = ($389|0)==($last|0);
   $or$cond = $390 | $391;
   if ($or$cond) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   } else {
    $392 = HEAP8[$389>>0]|0;
    $393 = ($392<<24>>24)==(69);
    $394 = (($389) + 1|0);
    $$first = $393 ? $394 : $first;
    STACKTOP = sp;return ($$first|0);
   }
   break;
  }
  case 100:  {
   $253 = (($first) + 2|0);
   $254 = $253;
   $255 = (($24) - ($254))|0;
   $256 = ($255>>>0)>(16);
   L119: do {
    if ($256) {
     $257 = (($first) + 18|0);
     $258 = HEAP8[$253>>0]|0;
     $260 = $258;$e$08$i38 = $0;$t$09$i37 = $253;
     while(1) {
      $259 = $260 << 24 >> 24;
      $isdigittmp$i32 = (($259) + -48)|0;
      $isdigit$i33 = ($isdigittmp$i32>>>0)<(10);
      if (!($isdigit$i33)) {
       $261 = $259 | 32;
       $262 = (($261) + -97)|0;
       $263 = ($262>>>0)<(6);
       if (!($263)) {
        $$0$i58 = $253;
        break L119;
       }
      }
      $$v$i41 = $isdigit$i33 ? 0 : 9;
      $264 = (($$v$i41) + ($259))|0;
      $265 = (($t$09$i37) + 1|0);
      $266 = HEAP8[$265>>0]|0;
      $267 = $266 << 24 >> 24;
      $isdigittmp2$i42 = (($267) + -48)|0;
      $isdigit3$i43 = ($isdigittmp2$i42>>>0)<(10);
      $$v4$i44 = $isdigit3$i43 ? 208 : 169;
      $268 = (($$v4$i44) + ($267))|0;
      $269 = $264 << 4;
      $270 = (($268) + ($269))|0;
      $271 = $270&255;
      HEAP8[$e$08$i38>>0] = $271;
      $272 = (($t$09$i37) + 2|0);
      $273 = (($e$08$i38) + 1|0);
      $274 = ($272|0)==($257|0);
      $275 = HEAP8[$272>>0]|0;
      if ($274) {
       break;
      } else {
       $260 = $275;$e$08$i38 = $273;$t$09$i37 = $272;
      }
     }
     $phitmp$i45 = ($275<<24>>24)==(69);
     if ($phitmp$i45) {
      $276 = ($0|0)!=($273|0);
      $277 = ($e$08$i38>>>0)>($0>>>0);
      $or$cond85 = $276 & $277;
      L128: do {
       if ($or$cond85) {
        $$012$i$i$i47 = $0;$279 = $271;$280 = $e$08$i38;
        while(1) {
         $278 = HEAP8[$$012$i$i$i47>>0]|0;
         HEAP8[$$012$i$i$i47>>0] = $279;
         HEAP8[$280>>0] = $278;
         $281 = (($$012$i$i$i47) + 1|0);
         $282 = (($280) + -1|0);
         $283 = ($281>>>0)<($282>>>0);
         if (!($283)) {
          break L128;
         }
         $$pre112 = HEAP8[$282>>0]|0;
         $$012$i$i$i47 = $281;$279 = $$pre112;$280 = $282;
        }
       }
      } while(0);
      dest=$num$i60+0|0; stop=dest+32|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $284 = +HEAPF64[$0>>3];
      HEAPF64[tempDoublePtr>>3]=$284;HEAP32[$vararg_buffer4>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_buffer4+4>>2]=HEAP32[tempDoublePtr+4>>2];
      $285 = (_snprintf($num$i60,32,50480,$vararg_buffer4)|0);
      $286 = ($285>>>0)>(31);
      if ($286) {
       $$0$i58 = $253;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($2,$num$i60,$285);
       ;HEAP32[$1+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$1+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$2+8>>2]|0;
       ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
       $287 = (($1) + 12|0);
       ;HEAP32[$287+0>>2]=0|0;HEAP32[$287+4>>2]=0|0;HEAP32[$287+8>>2]=0|0;
       $288 = (($db) + 4|0);
       $289 = HEAP32[$288>>2]|0;
       $290 = (($db) + 8|0);
       $291 = HEAP32[$290>>2]|0;
       $292 = ($289>>>0)<($291>>>0);
       if ($292) {
        $293 = ($289|0)==(0|0);
        if ($293) {
         $296 = 0;
        } else {
         ;HEAP32[$289+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$289+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$289+8>>2]=HEAP32[$1+8>>2]|0;
         ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
         $294 = (($289) + 12|0);
         ;HEAP32[$294+0>>2]=HEAP32[$287+0>>2]|0;HEAP32[$294+4>>2]=HEAP32[$287+4>>2]|0;HEAP32[$294+8>>2]=HEAP32[$287+8>>2]|0;
         ;HEAP32[$287+0>>2]=0|0;HEAP32[$287+4>>2]=0|0;HEAP32[$287+8>>2]=0|0;
         $$pre$i$i51 = HEAP32[$288>>2]|0;
         $296 = $$pre$i$i51;
        }
        $295 = (($296) + 24|0);
        HEAP32[$288>>2] = $295;
       } else {
        $297 = (($db) + 12|0);
        $298 = HEAP32[$db>>2]|0;
        $299 = $289;
        $300 = $298;
        $301 = (($299) - ($300))|0;
        $302 = (($301|0) / 24)&-1;
        $303 = (($302) + 1)|0;
        $304 = ($303|0)<(0);
        if ($304) {
         __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
         // unreachable;
        }
        $305 = $291;
        $306 = (($305) - ($300))|0;
        $307 = (($306|0) / 24)&-1;
        $308 = ($307>>>0)<(1073741823);
        if ($308) {
         $309 = $307 << 1;
         $310 = ($309>>>0)<($303>>>0);
         $311 = $310 ? $303 : $309;
         $$0$i$i$i$i54 = $311;
        } else {
         $$0$i$i$i$i54 = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($vararg_buffer4,$$0$i$i$i$i54,$302,$297);
        $312 = (($vararg_buffer4) + 8|0);
        $313 = HEAP32[$312>>2]|0;
        $314 = ($313|0)==(0|0);
        if (!($314)) {
         ;HEAP32[$313+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$313+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$313+8>>2]=HEAP32[$1+8>>2]|0;
         ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
         $315 = (($313) + 12|0);
         ;HEAP32[$315+0>>2]=HEAP32[$287+0>>2]|0;HEAP32[$315+4>>2]=HEAP32[$287+4>>2]|0;HEAP32[$315+8>>2]=HEAP32[$287+8>>2]|0;
         ;HEAP32[$287+0>>2]=0|0;HEAP32[$287+4>>2]=0|0;HEAP32[$287+8>>2]=0|0;
        }
        $316 = (($313) + 24|0);
        HEAP32[$312>>2] = $316;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$vararg_buffer4);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($vararg_buffer4);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
       $317 = (($first) + 19|0);
       $$0$i58 = $317;
      }
     } else {
      $$0$i58 = $253;
     }
    } else {
     $$0$i58 = $253;
    }
   } while(0);
   $318 = ($$0$i58|0)==($253|0);
   $first$22 = $318 ? $first : $$0$i58;
   $$0 = $first$22;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 98:  {
   $38 = (($first) + 3|0);
   $39 = HEAP8[$38>>0]|0;
   $40 = ($39<<24>>24)==(69);
   if (!($40)) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $41 = (($first) + 2|0);
   $42 = HEAP8[$41>>0]|0;
   $43 = $42 << 24 >> 24;
   if ((($43|0) == 49)) {
    HEAP8[$5>>0] = 8;
    $77 = (($5) + 1|0);
    HEAP8[$77>>0]=1702195828&255;HEAP8[$77+1>>0]=(1702195828>>8)&255;HEAP8[$77+2>>0]=(1702195828>>16)&255;HEAP8[$77+3>>0]=1702195828>>24;
    $78 = (($5) + 5|0);
    HEAP8[$78>>0] = 0;
    $79 = (($5) + 12|0);
    ;HEAP32[$79+0>>2]=0|0;HEAP32[$79+4>>2]=0|0;HEAP32[$79+8>>2]=0|0;
    $80 = (($db) + 4|0);
    $81 = HEAP32[$80>>2]|0;
    $82 = (($db) + 8|0);
    $83 = HEAP32[$82>>2]|0;
    $84 = ($81>>>0)<($83>>>0);
    if ($84) {
     $85 = ($81|0)==(0|0);
     if ($85) {
      $88 = 0;
     } else {
      ;HEAP32[$81+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$81+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$81+8>>2]=HEAP32[$5+8>>2]|0;
      ;HEAP32[$5+0>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;
      $86 = (($81) + 12|0);
      ;HEAP32[$86+0>>2]=HEAP32[$79+0>>2]|0;HEAP32[$86+4>>2]=HEAP32[$79+4>>2]|0;HEAP32[$86+8>>2]=HEAP32[$79+8>>2]|0;
      ;HEAP32[$79+0>>2]=0|0;HEAP32[$79+4>>2]=0|0;HEAP32[$79+8>>2]=0|0;
      $$pre$i27 = HEAP32[$80>>2]|0;
      $88 = $$pre$i27;
     }
     $87 = (($88) + 24|0);
     HEAP32[$80>>2] = $87;
    } else {
     $89 = (($db) + 12|0);
     $90 = HEAP32[$db>>2]|0;
     $91 = $81;
     $92 = $90;
     $93 = (($91) - ($92))|0;
     $94 = (($93|0) / 24)&-1;
     $95 = (($94) + 1)|0;
     $96 = ($95|0)<(0);
     if ($96) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $97 = $83;
     $98 = (($97) - ($92))|0;
     $99 = (($98|0) / 24)&-1;
     $100 = ($99>>>0)<(1073741823);
     if ($100) {
      $101 = $99 << 1;
      $102 = ($101>>>0)<($95>>>0);
      $103 = $102 ? $95 : $101;
      $$0$i$i$i29 = $103;
     } else {
      $$0$i$i$i29 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($vararg_buffer4,$$0$i$i$i29,$94,$89);
     $104 = (($vararg_buffer4) + 8|0);
     $105 = HEAP32[$104>>2]|0;
     $106 = ($105|0)==(0|0);
     if (!($106)) {
      ;HEAP32[$105+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$105+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$105+8>>2]=HEAP32[$5+8>>2]|0;
      ;HEAP32[$5+0>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;
      $107 = (($105) + 12|0);
      ;HEAP32[$107+0>>2]=HEAP32[$79+0>>2]|0;HEAP32[$107+4>>2]=HEAP32[$79+4>>2]|0;HEAP32[$107+8>>2]=HEAP32[$79+8>>2]|0;
      ;HEAP32[$79+0>>2]=0|0;HEAP32[$79+4>>2]=0|0;HEAP32[$79+8>>2]=0|0;
     }
     $108 = (($105) + 24|0);
     HEAP32[$104>>2] = $108;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$vararg_buffer4);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($vararg_buffer4);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
    $109 = (($first) + 4|0);
    $$0 = $109;
    STACKTOP = sp;return ($$0|0);
   } else if ((($43|0) == 48)) {
    HEAP8[$4>>0] = 10;
    $44 = (($4) + 1|0);
    ;HEAP8[$44+0>>0]=HEAP8[50344+0>>0]|0;HEAP8[$44+1>>0]=HEAP8[50344+1>>0]|0;HEAP8[$44+2>>0]=HEAP8[50344+2>>0]|0;HEAP8[$44+3>>0]=HEAP8[50344+3>>0]|0;HEAP8[$44+4>>0]=HEAP8[50344+4>>0]|0;
    $45 = (($4) + 6|0);
    HEAP8[$45>>0] = 0;
    $46 = (($4) + 12|0);
    ;HEAP32[$46+0>>2]=0|0;HEAP32[$46+4>>2]=0|0;HEAP32[$46+8>>2]=0|0;
    $47 = (($db) + 4|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = (($db) + 8|0);
    $50 = HEAP32[$49>>2]|0;
    $51 = ($48>>>0)<($50>>>0);
    if ($51) {
     $52 = ($48|0)==(0|0);
     if ($52) {
      $55 = 0;
     } else {
      ;HEAP32[$48+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$48+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$48+8>>2]=HEAP32[$4+8>>2]|0;
      ;HEAP32[$4+0>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
      $53 = (($48) + 12|0);
      ;HEAP32[$53+0>>2]=HEAP32[$46+0>>2]|0;HEAP32[$53+4>>2]=HEAP32[$46+4>>2]|0;HEAP32[$53+8>>2]=HEAP32[$46+8>>2]|0;
      ;HEAP32[$46+0>>2]=0|0;HEAP32[$46+4>>2]=0|0;HEAP32[$46+8>>2]=0|0;
      $$pre$i = HEAP32[$47>>2]|0;
      $55 = $$pre$i;
     }
     $54 = (($55) + 24|0);
     HEAP32[$47>>2] = $54;
    } else {
     $56 = (($db) + 12|0);
     $57 = HEAP32[$db>>2]|0;
     $58 = $48;
     $59 = $57;
     $60 = (($58) - ($59))|0;
     $61 = (($60|0) / 24)&-1;
     $62 = (($61) + 1)|0;
     $63 = ($62|0)<(0);
     if ($63) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $64 = $50;
     $65 = (($64) - ($59))|0;
     $66 = (($65|0) / 24)&-1;
     $67 = ($66>>>0)<(1073741823);
     if ($67) {
      $68 = $66 << 1;
      $69 = ($68>>>0)<($62>>>0);
      $70 = $69 ? $62 : $68;
      $$0$i$i$i = $70;
     } else {
      $$0$i$i$i = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($vararg_buffer4,$$0$i$i$i,$61,$56);
     $71 = (($vararg_buffer4) + 8|0);
     $72 = HEAP32[$71>>2]|0;
     $73 = ($72|0)==(0|0);
     if (!($73)) {
      ;HEAP32[$72+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$72+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$72+8>>2]=HEAP32[$4+8>>2]|0;
      ;HEAP32[$4+0>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
      $74 = (($72) + 12|0);
      ;HEAP32[$74+0>>2]=HEAP32[$46+0>>2]|0;HEAP32[$74+4>>2]=HEAP32[$46+4>>2]|0;HEAP32[$74+8>>2]=HEAP32[$46+8>>2]|0;
      ;HEAP32[$46+0>>2]=0|0;HEAP32[$46+4>>2]=0|0;HEAP32[$46+8>>2]=0|0;
     }
     $75 = (($72) + 24|0);
     HEAP32[$71>>2] = $75;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$vararg_buffer4);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($vararg_buffer4);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
    $76 = (($first) + 4|0);
    $$0 = $76;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 101:  {
   $319 = (($first) + 2|0);
   $320 = $319;
   $321 = (($24) - ($320))|0;
   $322 = ($321>>>0)>(20);
   L195: do {
    if ($322) {
     $323 = (($first) + 22|0);
     $324 = HEAP8[$319>>0]|0;
     $326 = $324;$e$010$i = $0;$t$011$i = $319;
     while(1) {
      $325 = $326 << 24 >> 24;
      $isdigittmp$i37 = (($325) + -48)|0;
      $isdigit$i38 = ($isdigittmp$i37>>>0)<(10);
      if (!($isdigit$i38)) {
       $327 = $325 | 32;
       $328 = (($327) + -97)|0;
       $329 = ($328>>>0)<(6);
       if (!($329)) {
        $$1$i = $319;
        break L195;
       }
      }
      $$v$i64 = $isdigit$i38 ? 0 : 9;
      $330 = (($$v$i64) + ($325))|0;
      $331 = (($t$011$i) + 1|0);
      $332 = HEAP8[$331>>0]|0;
      $333 = $332 << 24 >> 24;
      $isdigittmp4$i = (($333) + -48)|0;
      $isdigit5$i = ($isdigittmp4$i>>>0)<(10);
      $$v6$i = $isdigit5$i ? 208 : 169;
      $334 = (($$v6$i) + ($333))|0;
      $335 = $330 << 4;
      $336 = (($334) + ($335))|0;
      $337 = $336&255;
      HEAP8[$e$010$i>>0] = $337;
      $338 = (($t$011$i) + 2|0);
      $339 = (($e$010$i) + 1|0);
      $340 = ($338|0)==($323|0);
      $341 = HEAP8[$338>>0]|0;
      if ($340) {
       break;
      } else {
       $326 = $341;$e$010$i = $339;$t$011$i = $338;
      }
     }
     $phitmp$i65 = ($341<<24>>24)==(69);
     if ($phitmp$i65) {
      $342 = ($0|0)!=($339|0);
      $343 = ($e$010$i>>>0)>($0>>>0);
      $or$cond86 = $342 & $343;
      L204: do {
       if ($or$cond86) {
        $$012$i$i$i67 = $0;$345 = $337;$346 = $e$010$i;
        while(1) {
         $344 = HEAP8[$$012$i$i$i67>>0]|0;
         HEAP8[$$012$i$i$i67>>0] = $345;
         HEAP8[$346>>0] = $344;
         $347 = (($$012$i$i$i67) + 1|0);
         $348 = (($346) + -1|0);
         $349 = ($347>>>0)<($348>>>0);
         if (!($349)) {
          break L204;
         }
         $$pre113 = HEAP8[$348>>0]|0;
         $$012$i$i$i67 = $347;$345 = $$pre113;$346 = $348;
        }
       }
      } while(0);
      dest=$num$i60+0|0; stop=dest+40|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $350 = +HEAPF64[$0>>3];
      HEAPF64[tempDoublePtr>>3]=$350;HEAP32[$vararg_buffer4>>2]=HEAP32[tempDoublePtr>>2];HEAP32[$vararg_buffer4+4>>2]=HEAP32[tempDoublePtr+4>>2];
      $351 = (_snprintf($num$i60,40,50472,$vararg_buffer4)|0);
      $352 = ($351>>>0)>(39);
      if ($352) {
       $$1$i = $319;
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($2,$num$i60,$351);
       ;HEAP32[$1+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$1+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$2+8>>2]|0;
       ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
       $353 = (($1) + 12|0);
       ;HEAP32[$353+0>>2]=0|0;HEAP32[$353+4>>2]=0|0;HEAP32[$353+8>>2]=0|0;
       $354 = (($db) + 4|0);
       $355 = HEAP32[$354>>2]|0;
       $356 = (($db) + 8|0);
       $357 = HEAP32[$356>>2]|0;
       $358 = ($355>>>0)<($357>>>0);
       if ($358) {
        $359 = ($355|0)==(0|0);
        if ($359) {
         $362 = 0;
        } else {
         ;HEAP32[$355+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$355+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$355+8>>2]=HEAP32[$1+8>>2]|0;
         ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
         $360 = (($355) + 12|0);
         ;HEAP32[$360+0>>2]=HEAP32[$353+0>>2]|0;HEAP32[$360+4>>2]=HEAP32[$353+4>>2]|0;HEAP32[$360+8>>2]=HEAP32[$353+8>>2]|0;
         ;HEAP32[$353+0>>2]=0|0;HEAP32[$353+4>>2]=0|0;HEAP32[$353+8>>2]=0|0;
         $$pre$i$i71 = HEAP32[$354>>2]|0;
         $362 = $$pre$i$i71;
        }
        $361 = (($362) + 24|0);
        HEAP32[$354>>2] = $361;
       } else {
        $363 = (($db) + 12|0);
        $364 = HEAP32[$db>>2]|0;
        $365 = $355;
        $366 = $364;
        $367 = (($365) - ($366))|0;
        $368 = (($367|0) / 24)&-1;
        $369 = (($368) + 1)|0;
        $370 = ($369|0)<(0);
        if ($370) {
         __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
         // unreachable;
        }
        $371 = $357;
        $372 = (($371) - ($366))|0;
        $373 = (($372|0) / 24)&-1;
        $374 = ($373>>>0)<(1073741823);
        if ($374) {
         $375 = $373 << 1;
         $376 = ($375>>>0)<($369>>>0);
         $377 = $376 ? $369 : $375;
         $$0$i$i$i$i74 = $377;
        } else {
         $$0$i$i$i$i74 = 2147483647;
        }
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($vararg_buffer4,$$0$i$i$i$i74,$368,$363);
        $378 = (($vararg_buffer4) + 8|0);
        $379 = HEAP32[$378>>2]|0;
        $380 = ($379|0)==(0|0);
        if (!($380)) {
         ;HEAP32[$379+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$379+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$379+8>>2]=HEAP32[$1+8>>2]|0;
         ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
         $381 = (($379) + 12|0);
         ;HEAP32[$381+0>>2]=HEAP32[$353+0>>2]|0;HEAP32[$381+4>>2]=HEAP32[$353+4>>2]|0;HEAP32[$381+8>>2]=HEAP32[$353+8>>2]|0;
         ;HEAP32[$353+0>>2]=0|0;HEAP32[$353+4>>2]=0|0;HEAP32[$353+8>>2]=0|0;
        }
        $382 = (($379) + 24|0);
        HEAP32[$378>>2] = $382;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$vararg_buffer4);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($vararg_buffer4);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
       $383 = (($first) + 23|0);
       $$1$i = $383;
      }
     } else {
      $$1$i = $319;
     }
    } else {
     $$1$i = $319;
    }
   } while(0);
   $384 = ($$1$i|0)==($319|0);
   $first$23 = $384 ? $first : $$1$i;
   $$0 = $first$23;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 120:  {
   $160 = (($first) + 2|0);
   HEAP8[$15>>0] = 4;
   $161 = (($15) + 1|0);
   HEAP8[$161>>0]=27756&255;HEAP8[$161+1>>0]=27756>>8;
   $162 = (($15) + 3|0);
   HEAP8[$162>>0] = 0;
   $163 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($160,$last,$15,$db)|0);
   $164 = ($163|0)==($160|0);
   $first$17 = $164 ? $first : $163;
   $$0 = $first$17;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 121:  {
   $165 = (($first) + 2|0);
   HEAP8[$16>>0] = 6;
   $166 = (($16) + 1|0);
   ;HEAP8[$166+0>>0]=HEAP8[50440+0>>0]|0;HEAP8[$166+1>>0]=HEAP8[50440+1>>0]|0;HEAP8[$166+2>>0]=HEAP8[50440+2>>0]|0;
   $167 = (($16) + 4|0);
   HEAP8[$167>>0] = 0;
   $168 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($165,$last,$16,$db)|0);
   $169 = ($168|0)==($165|0);
   $first$18 = $169 ? $first : $168;
   $$0 = $first$18;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 110:  {
   $170 = (($first) + 2|0);
   HEAP8[$17>>0] = 16;
   $171 = (($17) + 1|0);
   $172 = $171;
   $173 = $172;
   HEAP8[$173>>0]=1852399455&255;HEAP8[$173+1>>0]=(1852399455>>8)&255;HEAP8[$173+2>>0]=(1852399455>>16)&255;HEAP8[$173+3>>0]=1852399455>>24;
   $174 = (($172) + 4)|0;
   $175 = $174;
   HEAP8[$175>>0]=942813556&255;HEAP8[$175+1>>0]=(942813556>>8)&255;HEAP8[$175+2>>0]=(942813556>>16)&255;HEAP8[$175+3>>0]=942813556>>24;
   $176 = (($17) + 9|0);
   HEAP8[$176>>0] = 0;
   $177 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($170,$last,$17,$db)|0);
   $178 = ($177|0)==($170|0);
   $first$19 = $178 ? $first : $177;
   $$0 = $first$19;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 84:  {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  default: {
   $395 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($30,$last,$db)|0);
   $396 = ($395|0)==($30|0);
   $397 = ($395|0)==($last|0);
   $or$cond24 = $396 | $397;
   if ($or$cond24) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $398 = HEAP8[$395>>0]|0;
   $399 = ($398<<24>>24)==(69);
   if ($399) {
    $467 = (($395) + 1|0);
    $$0 = $467;
    STACKTOP = sp;return ($$0|0);
   } else {
    $403 = $398;$n$090 = $395;
   }
   while(1) {
    $402 = $403 << 24 >> 24;
    $isdigittmp = (($402) + -48)|0;
    $isdigit = ($isdigittmp>>>0)<(10);
    $401 = (($n$090) + 1|0);
    if (!($isdigit)) {
     break;
    }
    $400 = ($401|0)==($last|0);
    if ($400) {
     $$0 = $first;
     label = 142;
     break;
    }
    $$pre = HEAP8[$401>>0]|0;
    $403 = $$pre;$n$090 = $401;
   }
   if ((label|0) == 142) {
    STACKTOP = sp;return ($$0|0);
   }
   $404 = ($n$090|0)!=($395|0);
   $405 = ($403<<24>>24)==(69);
   $or$cond115 = $404 & $405;
   if (!($or$cond115)) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $406 = HEAP32[$db>>2]|0;
   $407 = (($db) + 4|0);
   $408 = HEAP32[$407>>2]|0;
   $409 = ($406|0)==($408|0);
   if ($409) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $410 = (($408) + -24|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($22,$410);
   $411 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($22,0,48744,1)|0);
   ;HEAP32[$21+0>>2]=HEAP32[$411+0>>2]|0;HEAP32[$21+4>>2]=HEAP32[$411+4>>2]|0;HEAP32[$21+8>>2]=HEAP32[$411+8>>2]|0;
   ;HEAP32[$411+0>>2]=0|0;HEAP32[$411+4>>2]=0|0;HEAP32[$411+8>>2]=0|0;
   $412 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($21,48736,1)|0);
   ;HEAP32[$20+0>>2]=HEAP32[$412+0>>2]|0;HEAP32[$20+4>>2]=HEAP32[$412+4>>2]|0;HEAP32[$20+8>>2]=HEAP32[$412+8>>2]|0;
   ;HEAP32[$412+0>>2]=0|0;HEAP32[$412+4>>2]=0|0;HEAP32[$412+8>>2]=0|0;
   $413 = $395;
   $414 = $n$090;
   $415 = (($414) - ($413))|0;
   $416 = ($415>>>0)>(4294967279);
   if ($416) {
    __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $417 = ($415>>>0)<(11);
   if ($417) {
    $418 = $415 << 1;
    $419 = $418&255;
    HEAP8[$23>>0] = $419;
    $420 = (($23) + 1|0);
    $__p$0$ph$i$i = $420;
   } else {
    $421 = (($415) + 16)|0;
    $422 = $421 & -16;
    $423 = (_malloc($422)|0);
    $424 = (($23) + 8|0);
    HEAP32[$424>>2] = $423;
    $425 = $422 | 1;
    HEAP32[$23>>2] = $425;
    $426 = (($23) + 4|0);
    HEAP32[$426>>2] = $415;
    $__p$0$ph$i$i = $423;
   }
   $$02$i$i = $395;$__p$01$i$i = $__p$0$ph$i$i;
   while(1) {
    $427 = HEAP8[$$02$i$i>>0]|0;
    HEAP8[$__p$01$i$i>>0] = $427;
    $428 = (($$02$i$i) + 1|0);
    $429 = (($__p$01$i$i) + 1|0);
    $430 = ($428|0)==($n$090|0);
    if ($430) {
     break;
    } else {
     $$02$i$i = $428;$__p$01$i$i = $429;
    }
   }
   $scevgep4$i$i = (($__p$0$ph$i$i) + ($415)|0);
   $$pre110 = HEAP8[$23>>0]|0;
   HEAP8[$scevgep4$i$i>>0] = 0;
   $431 = $$pre110 & 1;
   $432 = ($431<<24>>24)==(0);
   if ($432) {
    $437 = (($23) + 1|0);
    $438 = $$pre110&255;
    $439 = $438 >>> 1;
    $440 = $437;$441 = $439;
   } else {
    $433 = (($23) + 8|0);
    $434 = HEAP32[$433>>2]|0;
    $435 = (($23) + 4|0);
    $436 = HEAP32[$435>>2]|0;
    $440 = $434;$441 = $436;
   }
   $442 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($20,$440,$441)|0);
   $443 = HEAP8[$442>>0]|0;
   $444 = (($442) + 1|0);
   ;HEAP8[$$sroa$4+0>>0]=HEAP8[$444+0>>0]|0;HEAP8[$$sroa$4+1>>0]=HEAP8[$444+1>>0]|0;HEAP8[$$sroa$4+2>>0]=HEAP8[$444+2>>0]|0;HEAP8[$$sroa$4+3>>0]=HEAP8[$444+3>>0]|0;HEAP8[$$sroa$4+4>>0]=HEAP8[$444+4>>0]|0;HEAP8[$$sroa$4+5>>0]=HEAP8[$444+5>>0]|0;HEAP8[$$sroa$4+6>>0]=HEAP8[$444+6>>0]|0;
   $445 = (($442) + 8|0);
   $446 = HEAP32[$445>>2]|0;
   ;HEAP32[$442+0>>2]=0|0;HEAP32[$442+4>>2]=0|0;HEAP32[$442+8>>2]=0|0;
   HEAP8[$19>>0] = $443;
   $447 = (($19) + 1|0);
   ;HEAP8[$447+0>>0]=HEAP8[$$sroa$4+0>>0]|0;HEAP8[$447+1>>0]=HEAP8[$$sroa$4+1>>0]|0;HEAP8[$447+2>>0]=HEAP8[$$sroa$4+2>>0]|0;HEAP8[$447+3>>0]=HEAP8[$$sroa$4+3>>0]|0;HEAP8[$447+4>>0]=HEAP8[$$sroa$4+4>>0]|0;HEAP8[$447+5>>0]=HEAP8[$$sroa$4+5>>0]|0;HEAP8[$447+6>>0]=HEAP8[$$sroa$4+6>>0]|0;
   $448 = (($19) + 8|0);
   HEAP32[$448>>2] = $446;
   ;HEAP8[$$sroa$4+0>>0]=0|0;HEAP8[$$sroa$4+1>>0]=0|0;HEAP8[$$sroa$4+2>>0]=0|0;HEAP8[$$sroa$4+3>>0]=0|0;HEAP8[$$sroa$4+4>>0]=0|0;HEAP8[$$sroa$4+5>>0]=0|0;HEAP8[$$sroa$4+6>>0]=0|0;
   $449 = (($19) + 12|0);
   ;HEAP32[$449+0>>2]=0|0;HEAP32[$449+4>>2]=0|0;HEAP32[$449+8>>2]=0|0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($410,$19);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($19);
   if (!($432)) {
    $450 = (($23) + 8|0);
    $451 = HEAP32[$450>>2]|0;
    _free($451);
   }
   $452 = HEAP8[$20>>0]|0;
   $453 = $452 & 1;
   $454 = ($453<<24>>24)==(0);
   if (!($454)) {
    $455 = (($20) + 8|0);
    $456 = HEAP32[$455>>2]|0;
    _free($456);
   }
   $457 = HEAP8[$21>>0]|0;
   $458 = $457 & 1;
   $459 = ($458<<24>>24)==(0);
   if (!($459)) {
    $460 = (($21) + 8|0);
    $461 = HEAP32[$460>>2]|0;
    _free($461);
   }
   $462 = HEAP8[$22>>0]|0;
   $463 = $462 & 1;
   $464 = ($463<<24>>24)==(0);
   if ($464) {
    $$0 = $401;
    STACKTOP = sp;return ($$0|0);
   }
   $465 = (($22) + 8|0);
   $466 = HEAP32[$465>>2]|0;
   _free($466);
   $$0 = $401;
   STACKTOP = sp;return ($$0|0);
  }
  }
 } while(0);
 return (0)|0;
}
function __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i21 = 0, $$02$i$i = 0, $$02$i$i8 = 0, $$pre = 0, $$pre$i = 0, $$pre$i19 = 0, $$pre16 = 0, $$sroa$5 = 0, $$sroa$513 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__p$0$lcssa$i$i = 0, $__p$0$lcssa$i$i13 = 0;
 var $__p$0$ph$i$i = 0, $__p$0$ph$i$i6 = 0, $__p$01$i$i = 0, $__p$01$i$i9 = 0, $__v$i$i18 = 0, $cv = 0, $cv1 = 0, $phitmp = 0, $phitmp20 = 0, $phitmp21 = 0, $phitmp22 = 0, $scevgep4$i$i = 0, $scevgep4$i$i11 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $__v$i$i18 = sp + 4|0;
 $cv = sp + 64|0;
 $0 = sp + 40|0;
 $$sroa$513 = sp + 108|0;
 $1 = sp + 96|0;
 $cv1 = sp;
 $2 = sp + 72|0;
 $$sroa$5 = sp + 115|0;
 $3 = sp + 24|0;
 $4 = $last;
 $5 = $first;
 $6 = (($4) - ($5))|0;
 $7 = ($6|0)>(2);
 if (!($7)) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $8 = HEAP8[$first>>0]|0;
 $9 = ($8<<24>>24)==(102);
 if (!($9)) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $10 = (($first) + 1|0);
 $11 = HEAP8[$10>>0]|0;
 if ((($11<<24>>24) == 76)) {
  $77 = (($first) + 2|0);
  $78 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($77,$last)|0);
  $79 = ($78|0)==($last|0);
  if ($79) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $80 = HEAP8[$78>>0]|0;
  $81 = ($80<<24>>24)==(112);
  if (!($81)) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $82 = (($78) + 1|0);
  $83 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($82,$last,$cv1)|0);
  $84 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($83,$last)|0);
  $85 = ($84|0)==($last|0);
  if ($85) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $86 = HEAP8[$84>>0]|0;
  $87 = ($86<<24>>24)==(95);
  if (!($87)) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $88 = $83;
  $89 = $84;
  $90 = (($89) - ($88))|0;
  $91 = ($90>>>0)>(4294967279);
  if ($91) {
   __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
   // unreachable;
  }
  $92 = ($90>>>0)<(11);
  if ($92) {
   $93 = $90 << 1;
   $94 = $93&255;
   HEAP8[$3>>0] = $94;
   $95 = (($3) + 1|0);
   $__p$0$ph$i$i6 = $95;
  } else {
   $96 = (($90) + 16)|0;
   $97 = $96 & -16;
   $98 = (_malloc($97)|0);
   $99 = (($3) + 8|0);
   HEAP32[$99>>2] = $98;
   $100 = $97 | 1;
   HEAP32[$3>>2] = $100;
   $101 = (($3) + 4|0);
   HEAP32[$101>>2] = $90;
   $__p$0$ph$i$i6 = $98;
  }
  $102 = ($83|0)==($84|0);
  if ($102) {
   $__p$0$lcssa$i$i13 = $__p$0$ph$i$i6;
  } else {
   $$02$i$i8 = $83;$__p$01$i$i9 = $__p$0$ph$i$i6;
   while(1) {
    $103 = HEAP8[$$02$i$i8>>0]|0;
    HEAP8[$__p$01$i$i9>>0] = $103;
    $104 = (($$02$i$i8) + 1|0);
    $105 = (($__p$01$i$i9) + 1|0);
    $106 = ($104|0)==($84|0);
    if ($106) {
     break;
    } else {
     $$02$i$i8 = $104;$__p$01$i$i9 = $105;
    }
   }
   $scevgep4$i$i11 = (($__p$0$ph$i$i6) + ($90)|0);
   $__p$0$lcssa$i$i13 = $scevgep4$i$i11;
  }
  HEAP8[$__p$0$lcssa$i$i13>>0] = 0;
  $107 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($3,0,50328,2)|0);
  $108 = HEAP8[$107>>0]|0;
  $109 = (($107) + 1|0);
  ;HEAP8[$$sroa$5+0>>0]=HEAP8[$109+0>>0]|0;HEAP8[$$sroa$5+1>>0]=HEAP8[$109+1>>0]|0;HEAP8[$$sroa$5+2>>0]=HEAP8[$109+2>>0]|0;HEAP8[$$sroa$5+3>>0]=HEAP8[$109+3>>0]|0;HEAP8[$$sroa$5+4>>0]=HEAP8[$109+4>>0]|0;HEAP8[$$sroa$5+5>>0]=HEAP8[$109+5>>0]|0;HEAP8[$$sroa$5+6>>0]=HEAP8[$109+6>>0]|0;
  $110 = (($107) + 8|0);
  $111 = HEAP32[$110>>2]|0;
  ;HEAP32[$107+0>>2]=0|0;HEAP32[$107+4>>2]=0|0;HEAP32[$107+8>>2]=0|0;
  HEAP8[$2>>0] = $108;
  $112 = (($2) + 1|0);
  ;HEAP8[$112+0>>0]=HEAP8[$$sroa$5+0>>0]|0;HEAP8[$112+1>>0]=HEAP8[$$sroa$5+1>>0]|0;HEAP8[$112+2>>0]=HEAP8[$$sroa$5+2>>0]|0;HEAP8[$112+3>>0]=HEAP8[$$sroa$5+3>>0]|0;HEAP8[$112+4>>0]=HEAP8[$$sroa$5+4>>0]|0;HEAP8[$112+5>>0]=HEAP8[$$sroa$5+5>>0]|0;HEAP8[$112+6>>0]=HEAP8[$$sroa$5+6>>0]|0;
  $113 = (($2) + 8|0);
  HEAP32[$113>>2] = $111;
  ;HEAP8[$$sroa$5+0>>0]=0|0;HEAP8[$$sroa$5+1>>0]=0|0;HEAP8[$$sroa$5+2>>0]=0|0;HEAP8[$$sroa$5+3>>0]=0|0;HEAP8[$$sroa$5+4>>0]=0|0;HEAP8[$$sroa$5+5>>0]=0|0;HEAP8[$$sroa$5+6>>0]=0|0;
  $114 = (($2) + 12|0);
  ;HEAP32[$114+0>>2]=0|0;HEAP32[$114+4>>2]=0|0;HEAP32[$114+8>>2]=0|0;
  $115 = (($db) + 4|0);
  $116 = HEAP32[$115>>2]|0;
  $117 = (($db) + 8|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = ($116>>>0)<($118>>>0);
  if ($119) {
   $120 = ($116|0)==(0|0);
   if ($120) {
    $123 = 0;
   } else {
    ;HEAP32[$116+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$116+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$116+8>>2]=HEAP32[$2+8>>2]|0;
    ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
    $121 = (($116) + 12|0);
    ;HEAP32[$121+0>>2]=HEAP32[$114+0>>2]|0;HEAP32[$121+4>>2]=HEAP32[$114+4>>2]|0;HEAP32[$121+8>>2]=HEAP32[$114+8>>2]|0;
    ;HEAP32[$114+0>>2]=0|0;HEAP32[$114+4>>2]=0|0;HEAP32[$114+8>>2]=0|0;
    $$pre$i19 = HEAP32[$115>>2]|0;
    $123 = $$pre$i19;
   }
   $122 = (($123) + 24|0);
   HEAP32[$115>>2] = $122;
  } else {
   $124 = (($db) + 12|0);
   $125 = HEAP32[$db>>2]|0;
   $126 = $116;
   $127 = $125;
   $128 = (($126) - ($127))|0;
   $129 = (($128|0) / 24)&-1;
   $130 = (($129) + 1)|0;
   $131 = ($130|0)<(0);
   if ($131) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $132 = $118;
   $133 = (($132) - ($127))|0;
   $134 = (($133|0) / 24)&-1;
   $135 = ($134>>>0)<(1073741823);
   if ($135) {
    $136 = $134 << 1;
    $137 = ($136>>>0)<($130>>>0);
    $138 = $137 ? $130 : $136;
    $$0$i$i$i21 = $138;
   } else {
    $$0$i$i$i21 = 2147483647;
   }
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i18,$$0$i$i$i21,$129,$124);
   $139 = (($__v$i$i18) + 8|0);
   $140 = HEAP32[$139>>2]|0;
   $141 = ($140|0)==(0|0);
   if (!($141)) {
    ;HEAP32[$140+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$140+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$140+8>>2]=HEAP32[$2+8>>2]|0;
    ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
    $142 = (($140) + 12|0);
    ;HEAP32[$142+0>>2]=HEAP32[$114+0>>2]|0;HEAP32[$142+4>>2]=HEAP32[$114+4>>2]|0;HEAP32[$142+8>>2]=HEAP32[$114+8>>2]|0;
    ;HEAP32[$114+0>>2]=0|0;HEAP32[$114+4>>2]=0|0;HEAP32[$114+8>>2]=0|0;
   }
   $143 = (($140) + 24|0);
   HEAP32[$139>>2] = $143;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i18);
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i18);
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
  $$pre16 = HEAP8[$3>>0]|0;
  $phitmp = $$pre16 & 1;
  $phitmp20 = ($phitmp<<24>>24)==(0);
  if (!($phitmp20)) {
   $144 = (($3) + 8|0);
   $145 = HEAP32[$144>>2]|0;
   _free($145);
  }
  $146 = (($84) + 1|0);
  $$0 = $146;
  STACKTOP = sp;return ($$0|0);
 } else if ((($11<<24>>24) == 112)) {
  $12 = (($first) + 2|0);
  $13 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($12,$last,$cv)|0);
  $14 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($13,$last)|0);
  $15 = ($14|0)==($last|0);
  if ($15) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $16 = HEAP8[$14>>0]|0;
  $17 = ($16<<24>>24)==(95);
  if (!($17)) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $18 = $13;
  $19 = $14;
  $20 = (($19) - ($18))|0;
  $21 = ($20>>>0)>(4294967279);
  if ($21) {
   __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
   // unreachable;
  }
  $22 = ($20>>>0)<(11);
  if ($22) {
   $23 = $20 << 1;
   $24 = $23&255;
   HEAP8[$1>>0] = $24;
   $25 = (($1) + 1|0);
   $__p$0$ph$i$i = $25;
  } else {
   $26 = (($20) + 16)|0;
   $27 = $26 & -16;
   $28 = (_malloc($27)|0);
   $29 = (($1) + 8|0);
   HEAP32[$29>>2] = $28;
   $30 = $27 | 1;
   HEAP32[$1>>2] = $30;
   $31 = (($1) + 4|0);
   HEAP32[$31>>2] = $20;
   $__p$0$ph$i$i = $28;
  }
  $32 = ($13|0)==($14|0);
  if ($32) {
   $__p$0$lcssa$i$i = $__p$0$ph$i$i;
  } else {
   $$02$i$i = $13;$__p$01$i$i = $__p$0$ph$i$i;
   while(1) {
    $33 = HEAP8[$$02$i$i>>0]|0;
    HEAP8[$__p$01$i$i>>0] = $33;
    $34 = (($$02$i$i) + 1|0);
    $35 = (($__p$01$i$i) + 1|0);
    $36 = ($34|0)==($14|0);
    if ($36) {
     break;
    } else {
     $$02$i$i = $34;$__p$01$i$i = $35;
    }
   }
   $scevgep4$i$i = (($__p$0$ph$i$i) + ($20)|0);
   $__p$0$lcssa$i$i = $scevgep4$i$i;
  }
  HEAP8[$__p$0$lcssa$i$i>>0] = 0;
  $37 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($1,0,50328,2)|0);
  $38 = HEAP8[$37>>0]|0;
  $39 = (($37) + 1|0);
  ;HEAP8[$$sroa$513+0>>0]=HEAP8[$39+0>>0]|0;HEAP8[$$sroa$513+1>>0]=HEAP8[$39+1>>0]|0;HEAP8[$$sroa$513+2>>0]=HEAP8[$39+2>>0]|0;HEAP8[$$sroa$513+3>>0]=HEAP8[$39+3>>0]|0;HEAP8[$$sroa$513+4>>0]=HEAP8[$39+4>>0]|0;HEAP8[$$sroa$513+5>>0]=HEAP8[$39+5>>0]|0;HEAP8[$$sroa$513+6>>0]=HEAP8[$39+6>>0]|0;
  $40 = (($37) + 8|0);
  $41 = HEAP32[$40>>2]|0;
  ;HEAP32[$37+0>>2]=0|0;HEAP32[$37+4>>2]=0|0;HEAP32[$37+8>>2]=0|0;
  HEAP8[$0>>0] = $38;
  $42 = (($0) + 1|0);
  ;HEAP8[$42+0>>0]=HEAP8[$$sroa$513+0>>0]|0;HEAP8[$42+1>>0]=HEAP8[$$sroa$513+1>>0]|0;HEAP8[$42+2>>0]=HEAP8[$$sroa$513+2>>0]|0;HEAP8[$42+3>>0]=HEAP8[$$sroa$513+3>>0]|0;HEAP8[$42+4>>0]=HEAP8[$$sroa$513+4>>0]|0;HEAP8[$42+5>>0]=HEAP8[$$sroa$513+5>>0]|0;HEAP8[$42+6>>0]=HEAP8[$$sroa$513+6>>0]|0;
  $43 = (($0) + 8|0);
  HEAP32[$43>>2] = $41;
  ;HEAP8[$$sroa$513+0>>0]=0|0;HEAP8[$$sroa$513+1>>0]=0|0;HEAP8[$$sroa$513+2>>0]=0|0;HEAP8[$$sroa$513+3>>0]=0|0;HEAP8[$$sroa$513+4>>0]=0|0;HEAP8[$$sroa$513+5>>0]=0|0;HEAP8[$$sroa$513+6>>0]=0|0;
  $44 = (($0) + 12|0);
  ;HEAP32[$44+0>>2]=0|0;HEAP32[$44+4>>2]=0|0;HEAP32[$44+8>>2]=0|0;
  $45 = (($db) + 4|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = (($db) + 8|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ($46>>>0)<($48>>>0);
  if ($49) {
   $50 = ($46|0)==(0|0);
   if ($50) {
    $53 = 0;
   } else {
    ;HEAP32[$46+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$46+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$46+8>>2]=HEAP32[$0+8>>2]|0;
    ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
    $51 = (($46) + 12|0);
    ;HEAP32[$51+0>>2]=HEAP32[$44+0>>2]|0;HEAP32[$51+4>>2]=HEAP32[$44+4>>2]|0;HEAP32[$51+8>>2]=HEAP32[$44+8>>2]|0;
    ;HEAP32[$44+0>>2]=0|0;HEAP32[$44+4>>2]=0|0;HEAP32[$44+8>>2]=0|0;
    $$pre$i = HEAP32[$45>>2]|0;
    $53 = $$pre$i;
   }
   $52 = (($53) + 24|0);
   HEAP32[$45>>2] = $52;
  } else {
   $54 = (($db) + 12|0);
   $55 = HEAP32[$db>>2]|0;
   $56 = $46;
   $57 = $55;
   $58 = (($56) - ($57))|0;
   $59 = (($58|0) / 24)&-1;
   $60 = (($59) + 1)|0;
   $61 = ($60|0)<(0);
   if ($61) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $62 = $48;
   $63 = (($62) - ($57))|0;
   $64 = (($63|0) / 24)&-1;
   $65 = ($64>>>0)<(1073741823);
   if ($65) {
    $66 = $64 << 1;
    $67 = ($66>>>0)<($60>>>0);
    $68 = $67 ? $60 : $66;
    $$0$i$i$i = $68;
   } else {
    $$0$i$i$i = 2147483647;
   }
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i18,$$0$i$i$i,$59,$54);
   $69 = (($__v$i$i18) + 8|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ($70|0)==(0|0);
   if (!($71)) {
    ;HEAP32[$70+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$70+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$70+8>>2]=HEAP32[$0+8>>2]|0;
    ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
    $72 = (($70) + 12|0);
    ;HEAP32[$72+0>>2]=HEAP32[$44+0>>2]|0;HEAP32[$72+4>>2]=HEAP32[$44+4>>2]|0;HEAP32[$72+8>>2]=HEAP32[$44+8>>2]|0;
    ;HEAP32[$44+0>>2]=0|0;HEAP32[$44+4>>2]=0|0;HEAP32[$44+8>>2]=0|0;
   }
   $73 = (($70) + 24|0);
   HEAP32[$69>>2] = $73;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i18);
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i18);
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
  $$pre = HEAP8[$1>>0]|0;
  $phitmp21 = $$pre & 1;
  $phitmp22 = ($phitmp21<<24>>24)==(0);
  if (!($phitmp22)) {
   $74 = (($1) + 8|0);
   $75 = HEAP32[$74>>2]|0;
   _free($75);
  }
  $76 = (($14) + 1|0);
  $$0 = $76;
  STACKTOP = sp;return ($$0|0);
 } else {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($first,$last,$op,$db) {
 $first = $first|0;
 $last = $last|0;
 $op = $op|0;
 $db = $db|0;
 var $$0 = 0, $$02$i = 0, $$02$i10 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $l$03$i = 0, $l$03$i9 = 0, $op1 = 0, $op2 = 0, $or$cond = 0, $or$cond25 = 0, $r$04$i = 0, $r$04$i8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $op2 = sp + 12|0;
 $op1 = sp + 48|0;
 $0 = sp + 24|0;
 $1 = sp + 60|0;
 $2 = sp + 84|0;
 $3 = sp;
 $4 = sp + 36|0;
 $5 = sp + 72|0;
 $6 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 $7 = ($6|0)==($first|0);
 if ($7) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $8 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($6,$last,$db)|0);
 $9 = ($8|0)==($6|0);
 $10 = (($db) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 if ($9) {
  $156 = (($11) + -24|0);
  $158 = $11;
  while(1) {
   $157 = (($158) + -24|0);
   HEAP32[$10>>2] = $157;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($157);
   $159 = HEAP32[$10>>2]|0;
   $160 = ($159|0)==($156|0);
   if ($160) {
    $$0 = $first;
    break;
   } else {
    $158 = $159;
   }
  }
  STACKTOP = sp;return ($$0|0);
 }
 $12 = HEAP32[$db>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) - ($14))|0;
 $16 = (($15|0) / 24)&-1;
 $17 = ($16>>>0)<(2);
 if ($17) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $18 = (($11) + -24|0);
 __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op2,$18);
 $19 = HEAP32[$10>>2]|0;
 $20 = (($19) + -24|0);
 $22 = $19;
 while(1) {
  $21 = (($22) + -24|0);
  HEAP32[$10>>2] = $21;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($21);
  $23 = HEAP32[$10>>2]|0;
  $24 = ($23|0)==($20|0);
  if ($24) {
   break;
  } else {
   $22 = $23;
  }
 }
 $25 = (($19) + -48|0);
 __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($op1,$25);
 $26 = HEAP32[$10>>2]|0;
 $27 = (($26) + -24|0);
 $28 = HEAP8[$27>>0]|0;
 $29 = $28 & 1;
 $30 = ($29<<24>>24)==(0);
 if ($30) {
  $34 = (($27) + 1|0);
  HEAP8[$34>>0] = 0;
  HEAP8[$27>>0] = 0;
 } else {
  $31 = (($26) + -16|0);
  $32 = HEAP32[$31>>2]|0;
  HEAP8[$32>>0] = 0;
  $33 = (($26) + -20|0);
  HEAP32[$33>>2] = 0;
 }
 $35 = HEAP8[$op>>0]|0;
 $36 = $35 & 1;
 $37 = ($36<<24>>24)==(0);
 if ($37) {
  $42 = $35&255;
  $43 = $42 >>> 1;
  $44 = (($op) + 1|0);
  $161 = $44;$46 = $43;
 } else {
  $38 = (($op) + 4|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = (($op) + 8|0);
  $41 = HEAP32[$40>>2]|0;
  $161 = $41;$46 = $39;
 }
 $45 = ($46>>>0)>(1);
 $47 = $45 ? 1 : $46;
 $48 = ($47|0)==(0);
 L24: do {
  if ($48) {
   label = 15;
  } else {
   $$02$i = $47;$l$03$i = $161;$r$04$i = 48832;
   while(1) {
    $49 = HEAP8[$l$03$i>>0]|0;
    $50 = HEAP8[$r$04$i>>0]|0;
    $51 = ($49<<24>>24)==($50<<24>>24);
    if (!($51)) {
     break L24;
    }
    $52 = (($$02$i) + -1)|0;
    $53 = (($l$03$i) + 1|0);
    $54 = (($r$04$i) + 1|0);
    $55 = ($52|0)==(0);
    if ($55) {
     label = 15;
     break;
    } else {
     $$02$i = $52;$l$03$i = $53;$r$04$i = $54;
    }
   }
  }
 } while(0);
 if ((label|0) == 15) {
  $56 = ($46|0)!=(0);
  $57 = $45 ^ 1;
  $or$cond = $56 & $57;
  if ($or$cond) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($27,40);
  }
 }
 __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($5,48744,$op1);
 $58 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($5,49136,2)|0);
 ;HEAP32[$4+0>>2]=HEAP32[$58+0>>2]|0;HEAP32[$4+4>>2]=HEAP32[$58+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$58+8>>2]|0;
 ;HEAP32[$58+0>>2]=0|0;HEAP32[$58+4>>2]=0|0;HEAP32[$58+8>>2]=0|0;
 $59 = HEAP8[$op>>0]|0;
 $60 = $59 & 1;
 $61 = ($60<<24>>24)==(0);
 if ($61) {
  $66 = (($op) + 1|0);
  $67 = $59&255;
  $68 = $67 >>> 1;
  $69 = $66;$70 = $68;
 } else {
  $62 = (($op) + 8|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = (($op) + 4|0);
  $65 = HEAP32[$64>>2]|0;
  $69 = $63;$70 = $65;
 }
 $71 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($4,$69,$70)|0);
 ;HEAP32[$3+0>>2]=HEAP32[$71+0>>2]|0;HEAP32[$3+4>>2]=HEAP32[$71+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$71+8>>2]|0;
 ;HEAP32[$71+0>>2]=0|0;HEAP32[$71+4>>2]=0|0;HEAP32[$71+8>>2]=0|0;
 $72 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($3,48728,2)|0);
 ;HEAP32[$2+0>>2]=HEAP32[$72+0>>2]|0;HEAP32[$2+4>>2]=HEAP32[$72+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$72+8>>2]|0;
 ;HEAP32[$72+0>>2]=0|0;HEAP32[$72+4>>2]=0|0;HEAP32[$72+8>>2]=0|0;
 $73 = HEAP8[$op2>>0]|0;
 $74 = $73 & 1;
 $75 = ($74<<24>>24)==(0);
 if ($75) {
  $80 = (($op2) + 1|0);
  $81 = $73&255;
  $82 = $81 >>> 1;
  $83 = $80;$84 = $82;
 } else {
  $76 = (($op2) + 8|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = (($op2) + 4|0);
  $79 = HEAP32[$78>>2]|0;
  $83 = $77;$84 = $79;
 }
 $85 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($2,$83,$84)|0);
 ;HEAP32[$1+0>>2]=HEAP32[$85+0>>2]|0;HEAP32[$1+4>>2]=HEAP32[$85+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$85+8>>2]|0;
 ;HEAP32[$85+0>>2]=0|0;HEAP32[$85+4>>2]=0|0;HEAP32[$85+8>>2]=0|0;
 $86 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1,48736,1)|0);
 ;HEAP32[$0+0>>2]=HEAP32[$86+0>>2]|0;HEAP32[$0+4>>2]=HEAP32[$86+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$86+8>>2]|0;
 ;HEAP32[$86+0>>2]=0|0;HEAP32[$86+4>>2]=0|0;HEAP32[$86+8>>2]=0|0;
 $87 = HEAP8[$0>>0]|0;
 $88 = $87 & 1;
 $89 = ($88<<24>>24)==(0);
 if ($89) {
  $94 = (($0) + 1|0);
  $95 = $87&255;
  $96 = $95 >>> 1;
  $97 = $94;$98 = $96;
 } else {
  $90 = (($0) + 8|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = (($0) + 4|0);
  $93 = HEAP32[$92>>2]|0;
  $97 = $91;$98 = $93;
 }
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($27,$97,$98)|0);
 if (!($89)) {
  $99 = (($0) + 8|0);
  $100 = HEAP32[$99>>2]|0;
  _free($100);
 }
 $101 = HEAP8[$1>>0]|0;
 $102 = $101 & 1;
 $103 = ($102<<24>>24)==(0);
 if (!($103)) {
  $104 = (($1) + 8|0);
  $105 = HEAP32[$104>>2]|0;
  _free($105);
 }
 $106 = HEAP8[$2>>0]|0;
 $107 = $106 & 1;
 $108 = ($107<<24>>24)==(0);
 if (!($108)) {
  $109 = (($2) + 8|0);
  $110 = HEAP32[$109>>2]|0;
  _free($110);
 }
 $111 = HEAP8[$3>>0]|0;
 $112 = $111 & 1;
 $113 = ($112<<24>>24)==(0);
 if (!($113)) {
  $114 = (($3) + 8|0);
  $115 = HEAP32[$114>>2]|0;
  _free($115);
 }
 $116 = HEAP8[$4>>0]|0;
 $117 = $116 & 1;
 $118 = ($117<<24>>24)==(0);
 if (!($118)) {
  $119 = (($4) + 8|0);
  $120 = HEAP32[$119>>2]|0;
  _free($120);
 }
 $121 = HEAP8[$5>>0]|0;
 $122 = $121 & 1;
 $123 = ($122<<24>>24)==(0);
 if (!($123)) {
  $124 = (($5) + 8|0);
  $125 = HEAP32[$124>>2]|0;
  _free($125);
 }
 $126 = HEAP8[$op>>0]|0;
 $127 = $126 & 1;
 $128 = ($127<<24>>24)==(0);
 if ($128) {
  $133 = $126&255;
  $134 = $133 >>> 1;
  $135 = (($op) + 1|0);
  $137 = $134;$162 = $135;
 } else {
  $129 = (($op) + 4|0);
  $130 = HEAP32[$129>>2]|0;
  $131 = (($op) + 8|0);
  $132 = HEAP32[$131>>2]|0;
  $137 = $130;$162 = $132;
 }
 $136 = ($137>>>0)>(1);
 $138 = $136 ? 1 : $137;
 $139 = ($138|0)==(0);
 L66: do {
  if ($139) {
   label = 44;
  } else {
   $$02$i10 = $138;$l$03$i9 = $162;$r$04$i8 = 48832;
   while(1) {
    $140 = HEAP8[$l$03$i9>>0]|0;
    $141 = HEAP8[$r$04$i8>>0]|0;
    $142 = ($140<<24>>24)==($141<<24>>24);
    if (!($142)) {
     break L66;
    }
    $143 = (($$02$i10) + -1)|0;
    $144 = (($l$03$i9) + 1|0);
    $145 = (($r$04$i8) + 1|0);
    $146 = ($143|0)==(0);
    if ($146) {
     label = 44;
     break;
    } else {
     $$02$i10 = $143;$l$03$i9 = $144;$r$04$i8 = $145;
    }
   }
  }
 } while(0);
 if ((label|0) == 44) {
  $147 = ($137|0)!=(0);
  $148 = $136 ^ 1;
  $or$cond25 = $147 & $148;
  if ($or$cond25) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($27,41);
  }
 }
 $149 = HEAP8[$op1>>0]|0;
 $150 = $149 & 1;
 $151 = ($150<<24>>24)==(0);
 if (!($151)) {
  $152 = (($op1) + 8|0);
  $153 = HEAP32[$152>>2]|0;
  _free($153);
 }
 if ($75) {
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 }
 $154 = (($op2) + 8|0);
 $155 = HEAP32[$154>>2]|0;
 _free($155);
 $$0 = $8;
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($first,$last,$op,$db) {
 $first = $first|0;
 $last = $last|0;
 $op = $op|0;
 $db = $db|0;
 var $$04 = 0, $$pre = 0, $$pre$i$i$i = 0, $$sroa$4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $or$cond$i$i$i$i$i = 0, $phitmp = 0, $phitmp$i$i$i$i$i$i = 0, $phitmp$i2$i$i$i$i$i = 0, $phitmp8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $$sroa$4 = sp + 36|0;
 $0 = sp + 24|0;
 $1 = sp + 12|0;
 $2 = sp;
 $3 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 $4 = ($3|0)==($first|0);
 if ($4) {
  $$04 = $first;
  STACKTOP = sp;return ($$04|0);
 }
 $5 = HEAP32[$db>>2]|0;
 $6 = (($db) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5|0)==($7|0);
 if ($8) {
  $$04 = $first;
  STACKTOP = sp;return ($$04|0);
 }
 $9 = (($7) + -24|0);
 __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($1,$op,48744);
 $10 = HEAP32[$6>>2]|0;
 $11 = (($10) + -24|0);
 __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($2,$11);
 $12 = HEAP8[$2>>0]|0;
 $13 = $12 & 1;
 $14 = ($13<<24>>24)==(0);
 if ($14) {
  $19 = (($2) + 1|0);
  $20 = $12&255;
  $21 = $20 >>> 1;
  $22 = $19;$23 = $21;
 } else {
  $15 = (($2) + 8|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = (($2) + 4|0);
  $18 = HEAP32[$17>>2]|0;
  $22 = $16;$23 = $18;
 }
 $24 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1,$22,$23)|0);
 ;HEAP32[$0+0>>2]=HEAP32[$24+0>>2]|0;HEAP32[$0+4>>2]=HEAP32[$24+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$24+8>>2]|0;
 ;HEAP32[$24+0>>2]=0|0;HEAP32[$24+4>>2]=0|0;HEAP32[$24+8>>2]=0|0;
 $25 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($0,48736,1)|0);
 $26 = HEAP8[$25>>0]|0;
 $27 = (($25) + 1|0);
 ;HEAP8[$$sroa$4+0>>0]=HEAP8[$27+0>>0]|0;HEAP8[$$sroa$4+1>>0]=HEAP8[$27+1>>0]|0;HEAP8[$$sroa$4+2>>0]=HEAP8[$27+2>>0]|0;HEAP8[$$sroa$4+3>>0]=HEAP8[$27+3>>0]|0;HEAP8[$$sroa$4+4>>0]=HEAP8[$27+4>>0]|0;HEAP8[$$sroa$4+5>>0]=HEAP8[$27+5>>0]|0;HEAP8[$$sroa$4+6>>0]=HEAP8[$27+6>>0]|0;
 $28 = (($25) + 8|0);
 $29 = HEAP32[$28>>2]|0;
 ;HEAP32[$25+0>>2]=0|0;HEAP32[$25+4>>2]=0|0;HEAP32[$25+8>>2]=0|0;
 $30 = HEAP8[$9>>0]|0;
 $31 = $30 & 1;
 $32 = ($31<<24>>24)==(0);
 do {
  if ($32) {
   $33 = (($9) + 1|0);
   HEAP8[$33>>0] = 0;
   HEAP8[$9>>0] = 0;
  } else {
   $34 = (($7) + -16|0);
   $35 = HEAP32[$34>>2]|0;
   HEAP8[$35>>0] = 0;
   $36 = (($7) + -20|0);
   HEAP32[$36>>2] = 0;
   $$pre$i$i$i = HEAP8[$9>>0]|0;
   $37 = $$pre$i$i$i & 1;
   $38 = ($37<<24>>24)==(0);
   if ($38) {
    $43 = $$pre$i$i$i;$52 = 10;
   } else {
    $39 = HEAP32[$9>>2]|0;
    $40 = $39 & -2;
    $phitmp$i$i$i$i$i$i = (($40) + -1)|0;
    $41 = $39&255;
    $43 = $41;$52 = $phitmp$i$i$i$i$i$i;
   }
   $42 = $43 & 1;
   $44 = ($42<<24>>24)==(0);
   if ($44) {
    $45 = $43&255;
    $46 = $45 >>> 1;
    $47 = ($43&255)<(22);
    if ($47) {
     $51 = 10;$71 = $46;$86 = 1;
    } else {
     $48 = (($46) + 16)|0;
     $49 = $48 & 240;
     $phitmp$i2$i$i$i$i$i = (($49) + -1)|0;
     $51 = $phitmp$i2$i$i$i$i$i;$71 = $46;$86 = 1;
    }
   } else {
    $51 = 10;$71 = 0;$86 = 0;
   }
   $50 = ($51|0)==($52|0);
   if (!($50)) {
    $53 = ($51|0)==(10);
    if ($53) {
     $58 = (($9) + 1|0);
     $59 = HEAP32[$34>>2]|0;
     if ($86) {
      $60 = $43&255;
      $61 = $60 >>> 1;
      $62 = (($61) + 1)|0;
      _memcpy(($58|0),($59|0),($62|0))|0;
      _free($59);
     } else {
      $67 = HEAP8[$59>>0]|0;
      HEAP8[$58>>0] = $67;
      _free($59);
     }
     $72 = $71 << 1;
     $73 = $72&255;
     HEAP8[$9>>0] = $73;
     break;
    }
    $54 = ($51>>>0)<=($52>>>0);
    $55 = (($51) + 1)|0;
    $56 = (_malloc($55)|0);
    $57 = ($56|0)==(0|0);
    $or$cond$i$i$i$i$i = $54 & $57;
    if (!($or$cond$i$i$i$i$i)) {
     if ($86) {
      $63 = (($9) + 1|0);
      $64 = $43&255;
      $65 = $64 >>> 1;
      $66 = (($65) + 1)|0;
      _memcpy(($56|0),($63|0),($66|0))|0;
     } else {
      $68 = HEAP32[$34>>2]|0;
      $69 = HEAP8[$68>>0]|0;
      HEAP8[$56>>0] = $69;
      _free($68);
     }
     $70 = $55 | 1;
     HEAP32[$9>>2] = $70;
     HEAP32[$36>>2] = $71;
     HEAP32[$34>>2] = $56;
    }
   }
  }
 } while(0);
 $74 = (($7) + -24|0);
 HEAP8[$74>>0] = $26;
 $75 = (($7) + -23|0);
 ;HEAP8[$75+0>>0]=HEAP8[$$sroa$4+0>>0]|0;HEAP8[$75+1>>0]=HEAP8[$$sroa$4+1>>0]|0;HEAP8[$75+2>>0]=HEAP8[$$sroa$4+2>>0]|0;HEAP8[$75+3>>0]=HEAP8[$$sroa$4+3>>0]|0;HEAP8[$75+4>>0]=HEAP8[$$sroa$4+4>>0]|0;HEAP8[$75+5>>0]=HEAP8[$$sroa$4+5>>0]|0;HEAP8[$75+6>>0]=HEAP8[$$sroa$4+6>>0]|0;
 $76 = (($7) + -16|0);
 HEAP32[$76>>2] = $29;
 ;HEAP8[$$sroa$4+0>>0]=0|0;HEAP8[$$sroa$4+1>>0]=0|0;HEAP8[$$sroa$4+2>>0]=0|0;HEAP8[$$sroa$4+3>>0]=0|0;HEAP8[$$sroa$4+4>>0]=0|0;HEAP8[$$sroa$4+5>>0]=0|0;HEAP8[$$sroa$4+6>>0]=0|0;
 $$pre = HEAP8[$0>>0]|0;
 $phitmp = $$pre & 1;
 $phitmp8 = ($phitmp<<24>>24)==(0);
 if (!($phitmp8)) {
  $77 = (($0) + 8|0);
  $78 = HEAP32[$77>>2]|0;
  _free($78);
 }
 if (!($14)) {
  $79 = (($2) + 8|0);
  $80 = HEAP32[$79>>2]|0;
  _free($80);
 }
 $81 = HEAP8[$1>>0]|0;
 $82 = $81 & 1;
 $83 = ($82<<24>>24)==(0);
 if ($83) {
  $$04 = $3;
  STACKTOP = sp;return ($$04|0);
 }
 $84 = (($1) + 8|0);
 $85 = HEAP32[$84>>2]|0;
 _free($85);
 $$04 = $3;
 STACKTOP = sp;return ($$04|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$19 = 0, $$first = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $args = 0, $args3 = 0, $global$0$off0 = 0, $or$cond = 0, $or$cond11 = 0, $or$cond12 = 0, $or$cond13 = 0, $s = 0, $s1 = 0, $s4 = 0, $s5 = 0;
 var $s6 = 0, $t$0 = 0, $t$1$lcssa = 0, $t$1$ph = 0, $t$155 = 0, $t$2 = 0, $t$3$lcssa = 0, $t$365 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $args = sp + 12|0;
 $s = sp + 48|0;
 $0 = sp + 108|0;
 $s1 = sp;
 $1 = sp + 96|0;
 $args3 = sp + 120|0;
 $s4 = sp + 132|0;
 $2 = sp + 72|0;
 $s5 = sp + 60|0;
 $3 = sp + 24|0;
 $s6 = sp + 36|0;
 $4 = sp + 84|0;
 $5 = $last;
 $6 = $first;
 $7 = (($5) - ($6))|0;
 $8 = ($7|0)>(2);
 if (!($8)) {
  $$19 = $first;
  STACKTOP = sp;return ($$19|0);
 }
 $9 = HEAP8[$first>>0]|0;
 $10 = ($9<<24>>24)==(103);
 if ($10) {
  $11 = (($first) + 1|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = ($12<<24>>24)==(115);
  $14 = (($first) + 2|0);
  $$first = $13 ? $14 : $first;
  $global$0$off0 = $13;$t$0 = $$first;
 } else {
  $global$0$off0 = 0;$t$0 = $first;
 }
 $15 = (__ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($t$0,$last,$db)|0);
 $16 = ($15|0)==($t$0|0);
 if (!($16)) {
  if (!($global$0$off0)) {
   $$19 = $15;
   STACKTOP = sp;return ($$19|0);
  }
  $17 = HEAP32[$db>>2]|0;
  $18 = (($db) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ($17|0)==($19|0);
  if ($20) {
   $$19 = $first;
   STACKTOP = sp;return ($$19|0);
  }
  $21 = (($19) + -24|0);
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($21,0,48888,2)|0);
  $$19 = $15;
  STACKTOP = sp;return ($$19|0);
 }
 $22 = $t$0;
 $23 = (($5) - ($22))|0;
 $24 = ($23|0)>(2);
 if (!($24)) {
  $$19 = $first;
  STACKTOP = sp;return ($$19|0);
 }
 $25 = HEAP8[$t$0>>0]|0;
 $26 = ($25<<24>>24)==(115);
 if (!($26)) {
  $$19 = $first;
  STACKTOP = sp;return ($$19|0);
 }
 $27 = (($t$0) + 1|0);
 $28 = HEAP8[$27>>0]|0;
 $29 = ($28<<24>>24)==(114);
 if (!($29)) {
  $$19 = $first;
  STACKTOP = sp;return ($$19|0);
 }
 $30 = (($t$0) + 2|0);
 $31 = HEAP8[$30>>0]|0;
 $32 = ($31<<24>>24)==(78);
 if ($32) {
  $33 = (($t$0) + 3|0);
  $34 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($33,$last,$db)|0);
  $35 = ($34|0)==($33|0);
  $36 = ($34|0)==($last|0);
  $or$cond = $35 | $36;
  if ($or$cond) {
   $$19 = $first;
   STACKTOP = sp;return ($$19|0);
  }
  $37 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($34,$last,$db)|0);
  $38 = ($37|0)==($34|0);
  do {
   if ($38) {
    $t$1$ph = $34;
   } else {
    $39 = (($db) + 4|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = HEAP32[$db>>2]|0;
    $42 = $40;
    $43 = $41;
    $44 = (($42) - ($43))|0;
    $45 = (($44|0) / 24)&-1;
    $46 = ($45>>>0)<(2);
    if ($46) {
     $$19 = $first;
     STACKTOP = sp;return ($$19|0);
    }
    $47 = (($40) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args,$47);
    $48 = HEAP32[$39>>2]|0;
    $49 = (($48) + -24|0);
    $51 = $48;
    while(1) {
     $50 = (($51) + -24|0);
     HEAP32[$39>>2] = $50;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($50);
     $52 = HEAP32[$39>>2]|0;
     $53 = ($52|0)==($49|0);
     if ($53) {
      break;
     } else {
      $51 = $52;
     }
    }
    $54 = (($48) + -48|0);
    $55 = HEAP8[$args>>0]|0;
    $56 = $55 & 1;
    $57 = ($56<<24>>24)==(0);
    if ($57) {
     $62 = (($args) + 1|0);
     $63 = $55&255;
     $64 = $63 >>> 1;
     $65 = $62;$66 = $64;
    } else {
     $58 = (($args) + 8|0);
     $59 = HEAP32[$58>>2]|0;
     $60 = (($args) + 4|0);
     $61 = HEAP32[$60>>2]|0;
     $65 = $59;$66 = $61;
    }
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($54,$65,$66)|0);
    $67 = ($37|0)==($last|0);
    if (!($67)) {
     if ($57) {
      $t$1$ph = $37;
      break;
     }
     $76 = (($args) + 8|0);
     $77 = HEAP32[$76>>2]|0;
     _free($77);
     $t$1$ph = $37;
     break;
    }
    $68 = HEAP32[$39>>2]|0;
    $69 = (($68) + -24|0);
    $71 = $68;
    while(1) {
     $70 = (($71) + -24|0);
     HEAP32[$39>>2] = $70;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($70);
     $72 = HEAP32[$39>>2]|0;
     $73 = ($72|0)==($69|0);
     if ($73) {
      break;
     } else {
      $71 = $72;
     }
    }
    if ($57) {
     $$19 = $first;
     STACKTOP = sp;return ($$19|0);
    }
    $74 = (($args) + 8|0);
    $75 = HEAP32[$74>>2]|0;
    _free($75);
    $$19 = $first;
    STACKTOP = sp;return ($$19|0);
   }
  } while(0);
  $78 = HEAP8[$t$1$ph>>0]|0;
  $79 = ($78<<24>>24)==(69);
  L55: do {
   if ($79) {
    $t$1$lcssa = $t$1$ph;
   } else {
    $80 = (($db) + 4|0);
    $81 = (($0) + 1|0);
    $82 = (($0) + 8|0);
    $83 = (($0) + 4|0);
    $84 = (($s) + 8|0);
    $t$155 = $t$1$ph;
    while(1) {
     $85 = (__ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($t$155,$last,$db)|0);
     $86 = ($85|0)==($t$155|0);
     $87 = ($85|0)==($last|0);
     $or$cond11 = $86 | $87;
     if ($or$cond11) {
      $$19 = $first;
      label = 111;
      break;
     }
     $88 = HEAP32[$80>>2]|0;
     $89 = HEAP32[$db>>2]|0;
     $90 = $88;
     $91 = $89;
     $92 = (($90) - ($91))|0;
     $93 = (($92|0) / 24)&-1;
     $94 = ($93>>>0)<(2);
     if ($94) {
      $$19 = $first;
      label = 111;
      break;
     }
     $95 = (($88) + -24|0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s,$95);
     $96 = HEAP32[$80>>2]|0;
     $97 = (($96) + -24|0);
     $99 = $96;
     while(1) {
      $98 = (($99) + -24|0);
      HEAP32[$80>>2] = $98;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($98);
      $100 = HEAP32[$80>>2]|0;
      $101 = ($100|0)==($97|0);
      if ($101) {
       break;
      } else {
       $99 = $100;
      }
     }
     $102 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($s,0,48888,2)|0);
     ;HEAP32[$0+0>>2]=HEAP32[$102+0>>2]|0;HEAP32[$0+4>>2]=HEAP32[$102+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[$102+8>>2]|0;
     ;HEAP32[$102+0>>2]=0|0;HEAP32[$102+4>>2]=0|0;HEAP32[$102+8>>2]=0|0;
     $103 = (($96) + -48|0);
     $104 = HEAP8[$0>>0]|0;
     $105 = $104 & 1;
     $106 = ($105<<24>>24)==(0);
     if ($106) {
      $109 = $104&255;
      $110 = $109 >>> 1;
      $111 = $81;$112 = $110;
     } else {
      $107 = HEAP32[$82>>2]|0;
      $108 = HEAP32[$83>>2]|0;
      $111 = $107;$112 = $108;
     }
     (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($103,$111,$112)|0);
     if (!($106)) {
      $113 = HEAP32[$82>>2]|0;
      _free($113);
     }
     $114 = HEAP8[$s>>0]|0;
     $115 = $114 & 1;
     $116 = ($115<<24>>24)==(0);
     if (!($116)) {
      $117 = HEAP32[$84>>2]|0;
      _free($117);
     }
     $118 = HEAP8[$85>>0]|0;
     $119 = ($118<<24>>24)==(69);
     if ($119) {
      $t$1$lcssa = $85;
      break L55;
     } else {
      $t$155 = $85;
     }
    }
    if ((label|0) == 111) {
     STACKTOP = sp;return ($$19|0);
    }
   }
  } while(0);
  $120 = (($t$1$lcssa) + 1|0);
  $121 = (__ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($120,$last,$db)|0);
  $122 = ($121|0)==($120|0);
  if ($122) {
   $123 = HEAP32[$db>>2]|0;
   $124 = (($db) + 4|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = ($123|0)==($125|0);
   if ($126) {
    $$19 = $first;
    STACKTOP = sp;return ($$19|0);
   }
   $127 = (($125) + -24|0);
   $129 = $125;
   while(1) {
    $128 = (($129) + -24|0);
    HEAP32[$124>>2] = $128;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($128);
    $130 = HEAP32[$124>>2]|0;
    $131 = ($130|0)==($127|0);
    if ($131) {
     $$19 = $first;
     break;
    } else {
     $129 = $130;
    }
   }
   STACKTOP = sp;return ($$19|0);
  }
  $132 = (($db) + 4|0);
  $133 = HEAP32[$132>>2]|0;
  $134 = HEAP32[$db>>2]|0;
  $135 = $133;
  $136 = $134;
  $137 = (($135) - ($136))|0;
  $138 = (($137|0) / 24)&-1;
  $139 = ($138>>>0)<(2);
  if ($139) {
   $$19 = $first;
   STACKTOP = sp;return ($$19|0);
  }
  $140 = (($133) + -24|0);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s1,$140);
  $141 = HEAP32[$132>>2]|0;
  $142 = (($141) + -24|0);
  $144 = $141;
  while(1) {
   $143 = (($144) + -24|0);
   HEAP32[$132>>2] = $143;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($143);
   $145 = HEAP32[$132>>2]|0;
   $146 = ($145|0)==($142|0);
   if ($146) {
    break;
   } else {
    $144 = $145;
   }
  }
  $147 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($s1,0,48888,2)|0);
  ;HEAP32[$1+0>>2]=HEAP32[$147+0>>2]|0;HEAP32[$1+4>>2]=HEAP32[$147+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[$147+8>>2]|0;
  ;HEAP32[$147+0>>2]=0|0;HEAP32[$147+4>>2]=0|0;HEAP32[$147+8>>2]=0|0;
  $148 = (($141) + -48|0);
  $149 = HEAP8[$1>>0]|0;
  $150 = $149 & 1;
  $151 = ($150<<24>>24)==(0);
  if ($151) {
   $156 = (($1) + 1|0);
   $157 = $149&255;
   $158 = $157 >>> 1;
   $159 = $156;$160 = $158;
  } else {
   $152 = (($1) + 8|0);
   $153 = HEAP32[$152>>2]|0;
   $154 = (($1) + 4|0);
   $155 = HEAP32[$154>>2]|0;
   $159 = $153;$160 = $155;
  }
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($148,$159,$160)|0);
  if (!($151)) {
   $161 = (($1) + 8|0);
   $162 = HEAP32[$161>>2]|0;
   _free($162);
  }
  $163 = HEAP8[$s1>>0]|0;
  $164 = $163 & 1;
  $165 = ($164<<24>>24)==(0);
  if ($165) {
   $$19 = $121;
   STACKTOP = sp;return ($$19|0);
  }
  $166 = (($s1) + 8|0);
  $167 = HEAP32[$166>>2]|0;
  _free($167);
  $$19 = $121;
  STACKTOP = sp;return ($$19|0);
 }
 $168 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($30,$last,$db)|0);
 $169 = ($168|0)==($30|0);
 if (!($169)) {
  $170 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($168,$last,$db)|0);
  $171 = ($170|0)==($168|0);
  if ($171) {
   $t$2 = $168;
  } else {
   $172 = (($db) + 4|0);
   $173 = HEAP32[$172>>2]|0;
   $174 = HEAP32[$db>>2]|0;
   $175 = $173;
   $176 = $174;
   $177 = (($175) - ($176))|0;
   $178 = (($177|0) / 24)&-1;
   $179 = ($178>>>0)<(2);
   if ($179) {
    $$19 = $first;
    STACKTOP = sp;return ($$19|0);
   }
   $180 = (($173) + -24|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args3,$180);
   $181 = HEAP32[$172>>2]|0;
   $182 = (($181) + -24|0);
   $184 = $181;
   while(1) {
    $183 = (($184) + -24|0);
    HEAP32[$172>>2] = $183;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($183);
    $185 = HEAP32[$172>>2]|0;
    $186 = ($185|0)==($182|0);
    if ($186) {
     break;
    } else {
     $184 = $185;
    }
   }
   $187 = (($181) + -48|0);
   $188 = HEAP8[$args3>>0]|0;
   $189 = $188 & 1;
   $190 = ($189<<24>>24)==(0);
   if ($190) {
    $195 = (($args3) + 1|0);
    $196 = $188&255;
    $197 = $196 >>> 1;
    $198 = $195;$199 = $197;
   } else {
    $191 = (($args3) + 8|0);
    $192 = HEAP32[$191>>2]|0;
    $193 = (($args3) + 4|0);
    $194 = HEAP32[$193>>2]|0;
    $198 = $192;$199 = $194;
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($187,$198,$199)|0);
   if ($190) {
    $t$2 = $170;
   } else {
    $200 = (($args3) + 8|0);
    $201 = HEAP32[$200>>2]|0;
    _free($201);
    $t$2 = $170;
   }
  }
  $202 = (__ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($t$2,$last,$db)|0);
  $203 = ($202|0)==($t$2|0);
  if ($203) {
   $204 = HEAP32[$db>>2]|0;
   $205 = (($db) + 4|0);
   $206 = HEAP32[$205>>2]|0;
   $207 = ($204|0)==($206|0);
   if ($207) {
    $$19 = $first;
    STACKTOP = sp;return ($$19|0);
   }
   $208 = (($206) + -24|0);
   $210 = $206;
   while(1) {
    $209 = (($210) + -24|0);
    HEAP32[$205>>2] = $209;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($209);
    $211 = HEAP32[$205>>2]|0;
    $212 = ($211|0)==($208|0);
    if ($212) {
     $$19 = $first;
     break;
    } else {
     $210 = $211;
    }
   }
   STACKTOP = sp;return ($$19|0);
  }
  $213 = (($db) + 4|0);
  $214 = HEAP32[$213>>2]|0;
  $215 = HEAP32[$db>>2]|0;
  $216 = $214;
  $217 = $215;
  $218 = (($216) - ($217))|0;
  $219 = (($218|0) / 24)&-1;
  $220 = ($219>>>0)<(2);
  if ($220) {
   $$19 = $first;
   STACKTOP = sp;return ($$19|0);
  }
  $221 = (($214) + -24|0);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s4,$221);
  $222 = HEAP32[$213>>2]|0;
  $223 = (($222) + -24|0);
  $225 = $222;
  while(1) {
   $224 = (($225) + -24|0);
   HEAP32[$213>>2] = $224;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($224);
   $226 = HEAP32[$213>>2]|0;
   $227 = ($226|0)==($223|0);
   if ($227) {
    break;
   } else {
    $225 = $226;
   }
  }
  $228 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($s4,0,48888,2)|0);
  ;HEAP32[$2+0>>2]=HEAP32[$228+0>>2]|0;HEAP32[$2+4>>2]=HEAP32[$228+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$228+8>>2]|0;
  ;HEAP32[$228+0>>2]=0|0;HEAP32[$228+4>>2]=0|0;HEAP32[$228+8>>2]=0|0;
  $229 = (($222) + -48|0);
  $230 = HEAP8[$2>>0]|0;
  $231 = $230 & 1;
  $232 = ($231<<24>>24)==(0);
  if ($232) {
   $237 = (($2) + 1|0);
   $238 = $230&255;
   $239 = $238 >>> 1;
   $240 = $237;$241 = $239;
  } else {
   $233 = (($2) + 8|0);
   $234 = HEAP32[$233>>2]|0;
   $235 = (($2) + 4|0);
   $236 = HEAP32[$235>>2]|0;
   $240 = $234;$241 = $236;
  }
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($229,$240,$241)|0);
  if (!($232)) {
   $242 = (($2) + 8|0);
   $243 = HEAP32[$242>>2]|0;
   _free($243);
  }
  $244 = HEAP8[$s4>>0]|0;
  $245 = $244 & 1;
  $246 = ($245<<24>>24)==(0);
  if ($246) {
   $$19 = $202;
   STACKTOP = sp;return ($$19|0);
  }
  $247 = (($s4) + 8|0);
  $248 = HEAP32[$247>>2]|0;
  _free($248);
  $$19 = $202;
  STACKTOP = sp;return ($$19|0);
 }
 $249 = (__ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($30,$last,$db)|0);
 $250 = ($249|0)==($30|0);
 $251 = ($249|0)==($last|0);
 $or$cond12 = $250 | $251;
 if ($or$cond12) {
  $$19 = $first;
  STACKTOP = sp;return ($$19|0);
 }
 do {
  if ($global$0$off0) {
   $252 = HEAP32[$db>>2]|0;
   $253 = (($db) + 4|0);
   $254 = HEAP32[$253>>2]|0;
   $255 = ($252|0)==($254|0);
   if ($255) {
    $$19 = $first;
    STACKTOP = sp;return ($$19|0);
   } else {
    $256 = (($254) + -24|0);
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($256,0,48888,2)|0);
    break;
   }
  }
 } while(0);
 $257 = HEAP8[$249>>0]|0;
 $258 = ($257<<24>>24)==(69);
 L157: do {
  if ($258) {
   $t$3$lcssa = $249;
  } else {
   $259 = (($db) + 4|0);
   $260 = (($3) + 1|0);
   $261 = (($3) + 8|0);
   $262 = (($3) + 4|0);
   $263 = (($s5) + 8|0);
   $t$365 = $249;
   while(1) {
    $264 = (__ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($t$365,$last,$db)|0);
    $265 = ($264|0)==($t$365|0);
    $266 = ($264|0)==($last|0);
    $or$cond13 = $265 | $266;
    if ($or$cond13) {
     $$19 = $first;
     label = 111;
     break;
    }
    $267 = HEAP32[$259>>2]|0;
    $268 = HEAP32[$db>>2]|0;
    $269 = $267;
    $270 = $268;
    $271 = (($269) - ($270))|0;
    $272 = (($271|0) / 24)&-1;
    $273 = ($272>>>0)<(2);
    if ($273) {
     $$19 = $first;
     label = 111;
     break;
    }
    $274 = (($267) + -24|0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s5,$274);
    $275 = HEAP32[$259>>2]|0;
    $276 = (($275) + -24|0);
    $278 = $275;
    while(1) {
     $277 = (($278) + -24|0);
     HEAP32[$259>>2] = $277;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($277);
     $279 = HEAP32[$259>>2]|0;
     $280 = ($279|0)==($276|0);
     if ($280) {
      break;
     } else {
      $278 = $279;
     }
    }
    $281 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($s5,0,48888,2)|0);
    ;HEAP32[$3+0>>2]=HEAP32[$281+0>>2]|0;HEAP32[$3+4>>2]=HEAP32[$281+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[$281+8>>2]|0;
    ;HEAP32[$281+0>>2]=0|0;HEAP32[$281+4>>2]=0|0;HEAP32[$281+8>>2]=0|0;
    $282 = (($275) + -48|0);
    $283 = HEAP8[$3>>0]|0;
    $284 = $283 & 1;
    $285 = ($284<<24>>24)==(0);
    if ($285) {
     $288 = $283&255;
     $289 = $288 >>> 1;
     $290 = $260;$291 = $289;
    } else {
     $286 = HEAP32[$261>>2]|0;
     $287 = HEAP32[$262>>2]|0;
     $290 = $286;$291 = $287;
    }
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($282,$290,$291)|0);
    if (!($285)) {
     $292 = HEAP32[$261>>2]|0;
     _free($292);
    }
    $293 = HEAP8[$s5>>0]|0;
    $294 = $293 & 1;
    $295 = ($294<<24>>24)==(0);
    if (!($295)) {
     $296 = HEAP32[$263>>2]|0;
     _free($296);
    }
    $297 = HEAP8[$264>>0]|0;
    $298 = ($297<<24>>24)==(69);
    if ($298) {
     $t$3$lcssa = $264;
     break L157;
    } else {
     $t$365 = $264;
    }
   }
   if ((label|0) == 111) {
    STACKTOP = sp;return ($$19|0);
   }
  }
 } while(0);
 $299 = (($t$3$lcssa) + 1|0);
 $300 = (__ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($299,$last,$db)|0);
 $301 = ($300|0)==($299|0);
 if ($301) {
  $302 = HEAP32[$db>>2]|0;
  $303 = (($db) + 4|0);
  $304 = HEAP32[$303>>2]|0;
  $305 = ($302|0)==($304|0);
  if ($305) {
   $$19 = $first;
   STACKTOP = sp;return ($$19|0);
  }
  $306 = (($304) + -24|0);
  $308 = $304;
  while(1) {
   $307 = (($308) + -24|0);
   HEAP32[$303>>2] = $307;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($307);
   $309 = HEAP32[$303>>2]|0;
   $310 = ($309|0)==($306|0);
   if ($310) {
    $$19 = $first;
    break;
   } else {
    $308 = $309;
   }
  }
  STACKTOP = sp;return ($$19|0);
 }
 $311 = (($db) + 4|0);
 $312 = HEAP32[$311>>2]|0;
 $313 = HEAP32[$db>>2]|0;
 $314 = $312;
 $315 = $313;
 $316 = (($314) - ($315))|0;
 $317 = (($316|0) / 24)&-1;
 $318 = ($317>>>0)<(2);
 if ($318) {
  $$19 = $first;
  STACKTOP = sp;return ($$19|0);
 }
 $319 = (($312) + -24|0);
 __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($s6,$319);
 $320 = HEAP32[$311>>2]|0;
 $321 = (($320) + -24|0);
 $323 = $320;
 while(1) {
  $322 = (($323) + -24|0);
  HEAP32[$311>>2] = $322;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($322);
  $324 = HEAP32[$311>>2]|0;
  $325 = ($324|0)==($321|0);
  if ($325) {
   break;
  } else {
   $323 = $324;
  }
 }
 $326 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($s6,0,48888,2)|0);
 ;HEAP32[$4+0>>2]=HEAP32[$326+0>>2]|0;HEAP32[$4+4>>2]=HEAP32[$326+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$326+8>>2]|0;
 ;HEAP32[$326+0>>2]=0|0;HEAP32[$326+4>>2]=0|0;HEAP32[$326+8>>2]=0|0;
 $327 = (($320) + -48|0);
 $328 = HEAP8[$4>>0]|0;
 $329 = $328 & 1;
 $330 = ($329<<24>>24)==(0);
 if ($330) {
  $335 = (($4) + 1|0);
  $336 = $328&255;
  $337 = $336 >>> 1;
  $338 = $335;$339 = $337;
 } else {
  $331 = (($4) + 8|0);
  $332 = HEAP32[$331>>2]|0;
  $333 = (($4) + 4|0);
  $334 = HEAP32[$333>>2]|0;
  $338 = $332;$339 = $334;
 }
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($327,$338,$339)|0);
 if (!($330)) {
  $340 = (($4) + 8|0);
  $341 = HEAP32[$340>>2]|0;
  _free($341);
 }
 $342 = HEAP8[$s6>>0]|0;
 $343 = $342 & 1;
 $344 = ($343<<24>>24)==(0);
 if ($344) {
  $$19 = $300;
  STACKTOP = sp;return ($$19|0);
 }
 $345 = (($s6) + 8|0);
 $346 = HEAP32[$345>>2]|0;
 _free($346);
 $$19 = $300;
 STACKTOP = sp;return ($$19|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$first = 0, $$first3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond2 = 0, $t$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($first|0)==($last|0);
 if ($0) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $1 = HEAP8[$first>>0]|0;
 $2 = $1 << 24 >> 24;
 if ((($2|0) == 76)) {
  $17 = (($first) + 1|0);
  $18 = ($17|0)==($last|0);
  if (!($18)) {
   $19 = HEAP8[$17>>0]|0;
   $20 = ($19<<24>>24)==(90);
   if ($20) {
    $21 = (($first) + 2|0);
    $22 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($21,$last,$db)|0);
    $23 = ($22|0)==($21|0);
    $24 = ($22|0)==($last|0);
    $or$cond2 = $23 | $24;
    if ($or$cond2) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    } else {
     $25 = HEAP8[$22>>0]|0;
     $26 = ($25<<24>>24)==(69);
     $27 = (($22) + 1|0);
     $$first3 = $26 ? $27 : $first;
     STACKTOP = sp;return ($$first3|0);
    }
   }
  }
  $28 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
  $$0 = $28;
  STACKTOP = sp;return ($$0|0);
 } else if ((($2|0) == 74)) {
  $10 = (($first) + 1|0);
  $11 = ($10|0)==($last|0);
  if ($11) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  } else {
   $t$0 = $10;
  }
  while(1) {
   $12 = HEAP8[$t$0>>0]|0;
   $13 = ($12<<24>>24)==(69);
   if ($13) {
    break;
   }
   $14 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($t$0,$last,$db)|0);
   $15 = ($14|0)==($t$0|0);
   if ($15) {
    $$0 = $first;
    label = 15;
    break;
   } else {
    $t$0 = $14;
   }
  }
  if ((label|0) == 15) {
   STACKTOP = sp;return ($$0|0);
  }
  $16 = (($t$0) + 1|0);
  $$0 = $16;
  STACKTOP = sp;return ($$0|0);
 } else if ((($2|0) == 88)) {
  $3 = (($first) + 1|0);
  $4 = (__ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($3,$last,$db)|0);
  $5 = ($4|0)==($3|0);
  $6 = ($4|0)==($last|0);
  $or$cond = $5 | $6;
  if ($or$cond) {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  $7 = HEAP8[$4>>0]|0;
  $8 = ($7<<24>>24)==(69);
  $9 = (($4) + 1|0);
  $$first = $8 ? $9 : $first;
  $$0 = $$first;
  STACKTOP = sp;return ($$0|0);
 } else {
  $29 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
  $$0 = $29;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj($this,$__s,$__sz,$__reserve) {
 $this = $this|0;
 $__s = $__s|0;
 $__sz = $__sz|0;
 $__reserve = $__reserve|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__p$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($__reserve>>>0)>(4294967279);
 if ($0) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $1 = ($__reserve>>>0)<(11);
 if ($1) {
  $2 = $__sz << 1;
  $3 = $2&255;
  HEAP8[$this>>0] = $3;
  $4 = (($this) + 1|0);
  $__p$0 = $4;
 } else {
  $5 = (($__reserve) + 16)|0;
  $6 = $5 & -16;
  $7 = (_malloc($6)|0);
  $8 = (($this) + 8|0);
  HEAP32[$8>>2] = $7;
  $9 = $6 | 1;
  HEAP32[$this>>2] = $9;
  $10 = (($this) + 4|0);
  HEAP32[$10>>2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy(($__p$0|0),($__s|0),($__sz|0))|0;
 $11 = (($__p$0) + ($__sz)|0);
 HEAP8[$11>>0] = 0;
 STACKTOP = sp;return;
}
function __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($agg$result,$s) {
 $agg$result = $agg$result|0;
 $s = $s|0;
 var $$02$i = 0, $$02$i$i = 0, $$02$i13 = 0, $$02$i3 = 0, $$02$i8 = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__p$0$lcssa$i$i = 0, $__p$0$ph$i$i = 0, $__p$01$i$i = 0;
 var $c$0$ph = 0, $l$03$i = 0, $l$03$i12 = 0, $l$03$i2 = 0, $l$03$i7 = 0, $or$cond = 0, $or$cond22 = 0, $or$cond23 = 0, $or$cond24 = 0, $p0$0 = 0, $p0$1 = 0, $pe$0 = 0, $pe$0$ph = 0, $pe$1 = 0, $pe$1$pn = 0, $r$04$i = 0, $r$04$i1 = 0, $r$04$i11 = 0, $r$04$i6 = 0, $scevgep4$i$i = 0;
 var dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 $0 = HEAP8[$s>>0]|0;
 $1 = $0 & 1;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $5 = $0&255;
  $6 = $5 >>> 1;
  $8 = $6;
 } else {
  $3 = (($s) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $8 = $4;
 }
 $7 = ($8|0)==(0);
 if ($7) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($agg$result,$s);
  STACKTOP = sp;return;
 }
 if ($2) {
  $13 = $0&255;
  $14 = $13 >>> 1;
  $15 = (($s) + 1|0);
  $147 = $15;$17 = $14;
 } else {
  $9 = (($s) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (($s) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $147 = $12;$17 = $10;
 }
 $16 = ($17>>>0)>(11);
 $18 = $16 ? 11 : $17;
 $19 = ($18|0)==(0);
 L13: do {
  if ($19) {
   label = 12;
  } else {
   $$02$i = $18;$l$03$i = $147;$r$04$i = 49904;
   while(1) {
    $20 = HEAP8[$l$03$i>>0]|0;
    $21 = HEAP8[$r$04$i>>0]|0;
    $22 = ($20<<24>>24)==($21<<24>>24);
    if (!($22)) {
     break L13;
    }
    $23 = (($$02$i) + -1)|0;
    $24 = (($l$03$i) + 1|0);
    $25 = (($r$04$i) + 1|0);
    $26 = ($23|0)==(0);
    if ($26) {
     label = 12;
     break;
    } else {
     $$02$i = $23;$l$03$i = $24;$r$04$i = $25;
    }
   }
  }
 } while(0);
 if ((label|0) == 12) {
  $27 = ($17>>>0)>(10);
  $28 = $16 ^ 1;
  $or$cond = $27 & $28;
  if ($or$cond) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($s,49920,70);
   $29 = (_malloc(16)|0);
   $30 = (($agg$result) + 8|0);
   HEAP32[$30>>2] = $29;
   HEAP32[$agg$result>>2] = 17;
   $31 = (($agg$result) + 4|0);
   HEAP32[$31>>2] = 12;
   dest=$29+0|0; src=49992+0|0; stop=dest+12|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $32 = (($29) + 12|0);
   HEAP8[$32>>0] = 0;
   STACKTOP = sp;return;
  }
 }
 if ($2) {
  $37 = $0&255;
  $38 = $37 >>> 1;
  $39 = (($s) + 1|0);
  $148 = $39;$41 = $38;
 } else {
  $33 = (($s) + 4|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = (($s) + 8|0);
  $36 = HEAP32[$35>>2]|0;
  $148 = $36;$41 = $34;
 }
 $40 = ($41>>>0)>(12);
 $42 = $40 ? 12 : $41;
 $43 = ($42|0)==(0);
 L26: do {
  if ($43) {
   label = 20;
  } else {
   $$02$i3 = $42;$l$03$i2 = $148;$r$04$i1 = 50008;
   while(1) {
    $44 = HEAP8[$l$03$i2>>0]|0;
    $45 = HEAP8[$r$04$i1>>0]|0;
    $46 = ($44<<24>>24)==($45<<24>>24);
    if (!($46)) {
     break L26;
    }
    $47 = (($$02$i3) + -1)|0;
    $48 = (($l$03$i2) + 1|0);
    $49 = (($r$04$i1) + 1|0);
    $50 = ($47|0)==(0);
    if ($50) {
     label = 20;
     break;
    } else {
     $$02$i3 = $47;$l$03$i2 = $48;$r$04$i1 = $49;
    }
   }
  }
 } while(0);
 if ((label|0) == 20) {
  $51 = ($41>>>0)>(11);
  $52 = $40 ^ 1;
  $or$cond22 = $51 & $52;
  if ($or$cond22) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($s,50024,49);
   $53 = (_malloc(16)|0);
   $54 = (($agg$result) + 8|0);
   HEAP32[$54>>2] = $53;
   HEAP32[$agg$result>>2] = 17;
   $55 = (($agg$result) + 4|0);
   HEAP32[$55>>2] = 13;
   dest=$53+0|0; src=50080+0|0; stop=dest+13|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $56 = (($53) + 13|0);
   HEAP8[$56>>0] = 0;
   STACKTOP = sp;return;
  }
 }
 if ($2) {
  $61 = $0&255;
  $62 = $61 >>> 1;
  $63 = (($s) + 1|0);
  $149 = $63;$65 = $62;
 } else {
  $57 = (($s) + 4|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = (($s) + 8|0);
  $60 = HEAP32[$59>>2]|0;
  $149 = $60;$65 = $58;
 }
 $64 = ($65>>>0)>(12);
 $66 = $64 ? 12 : $65;
 $67 = ($66|0)==(0);
 L39: do {
  if ($67) {
   label = 28;
  } else {
   $$02$i8 = $66;$l$03$i7 = $149;$r$04$i6 = 50096;
   while(1) {
    $68 = HEAP8[$l$03$i7>>0]|0;
    $69 = HEAP8[$r$04$i6>>0]|0;
    $70 = ($68<<24>>24)==($69<<24>>24);
    if (!($70)) {
     break L39;
    }
    $71 = (($$02$i8) + -1)|0;
    $72 = (($l$03$i7) + 1|0);
    $73 = (($r$04$i6) + 1|0);
    $74 = ($71|0)==(0);
    if ($74) {
     label = 28;
     break;
    } else {
     $$02$i8 = $71;$l$03$i7 = $72;$r$04$i6 = $73;
    }
   }
  }
 } while(0);
 if ((label|0) == 28) {
  $75 = ($65>>>0)>(11);
  $76 = $64 ^ 1;
  $or$cond23 = $75 & $76;
  if ($or$cond23) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($s,50112,49);
   $77 = (_malloc(16)|0);
   $78 = (($agg$result) + 8|0);
   HEAP32[$78>>2] = $77;
   HEAP32[$agg$result>>2] = 17;
   $79 = (($agg$result) + 4|0);
   HEAP32[$79>>2] = 13;
   dest=$77+0|0; src=50168+0|0; stop=dest+13|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $80 = (($77) + 13|0);
   HEAP8[$80>>0] = 0;
   STACKTOP = sp;return;
  }
 }
 if ($2) {
  $85 = $0&255;
  $86 = $85 >>> 1;
  $87 = (($s) + 1|0);
  $150 = $87;$89 = $86;
 } else {
  $81 = (($s) + 4|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = (($s) + 8|0);
  $84 = HEAP32[$83>>2]|0;
  $150 = $84;$89 = $82;
 }
 $88 = ($89>>>0)>(13);
 $90 = $88 ? 13 : $89;
 $91 = ($90|0)==(0);
 L52: do {
  if ($91) {
   label = 36;
  } else {
   $$02$i13 = $90;$l$03$i12 = $150;$r$04$i11 = 50184;
   while(1) {
    $92 = HEAP8[$l$03$i12>>0]|0;
    $93 = HEAP8[$r$04$i11>>0]|0;
    $94 = ($92<<24>>24)==($93<<24>>24);
    if (!($94)) {
     break L52;
    }
    $95 = (($$02$i13) + -1)|0;
    $96 = (($l$03$i12) + 1|0);
    $97 = (($r$04$i11) + 1|0);
    $98 = ($95|0)==(0);
    if ($98) {
     label = 36;
     break;
    } else {
     $$02$i13 = $95;$l$03$i12 = $96;$r$04$i11 = $97;
    }
   }
  }
 } while(0);
 if ((label|0) == 36) {
  $99 = ($89>>>0)>(12);
  $100 = $88 ^ 1;
  $or$cond24 = $99 & $100;
  if ($or$cond24) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($s,50200,50);
   $101 = (_malloc(16)|0);
   $102 = (($agg$result) + 8|0);
   HEAP32[$102>>2] = $101;
   HEAP32[$agg$result>>2] = 17;
   $103 = (($agg$result) + 4|0);
   HEAP32[$103>>2] = 14;
   dest=$101+0|0; src=50256+0|0; stop=dest+14|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $104 = (($101) + 14|0);
   HEAP8[$104>>0] = 0;
   STACKTOP = sp;return;
  }
 }
 if ($2) {
  $109 = (($s) + 1|0);
  $110 = $0&255;
  $111 = $110 >>> 1;
  $113 = $109;$114 = $111;
 } else {
  $105 = (($s) + 8|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($s) + 4|0);
  $108 = HEAP32[$107>>2]|0;
  $113 = $106;$114 = $108;
 }
 $112 = (($113) + ($114)|0);
 $$sum = (($114) + -1)|0;
 $115 = (($113) + ($$sum)|0);
 $116 = HEAP8[$115>>0]|0;
 $117 = ($116<<24>>24)==(62);
 L65: do {
  if ($117) {
   $c$0$ph = 1;$pe$0$ph = $112;
   L66: while(1) {
    $pe$0 = $pe$0$ph;
    while(1) {
     $118 = (($pe$0) + -1|0);
     $119 = ($118|0)==($113|0);
     if ($119) {
      break L66;
     }
     $120 = (($pe$0) + -2|0);
     $121 = HEAP8[$120>>0]|0;
     if ((($121<<24>>24) == 62)) {
      label = 47;
      break;
     } else if ((($121<<24>>24) == 60)) {
      label = 46;
      break;
     } else {
      $pe$0 = $118;
     }
    }
    if ((label|0) == 46) {
     label = 0;
     $122 = (($c$0$ph) + -1)|0;
     $123 = ($122|0)==(0);
     if ($123) {
      $pe$1 = $120;
      break L65;
     } else {
      $c$0$ph = $122;$pe$0$ph = $118;
      continue;
     }
    }
    else if ((label|0) == 47) {
     label = 0;
     $124 = (($c$0$ph) + 1)|0;
     $c$0$ph = $124;$pe$0$ph = $118;
     continue;
    }
   }
   ;HEAP32[$agg$result+0>>2]=0|0;HEAP32[$agg$result+4>>2]=0|0;HEAP32[$agg$result+8>>2]=0|0;
   STACKTOP = sp;return;
  } else {
   $pe$1 = $112;
  }
 } while(0);
 $pe$1$pn = $pe$1;
 while(1) {
  $p0$0 = (($pe$1$pn) + -1|0);
  $125 = ($p0$0|0)==($113|0);
  if ($125) {
   $p0$1 = $113;
   break;
  }
  $126 = HEAP8[$p0$0>>0]|0;
  $127 = ($126<<24>>24)==(58);
  if ($127) {
   $p0$1 = $pe$1$pn;
   break;
  } else {
   $pe$1$pn = $p0$0;
  }
 }
 $128 = $p0$1;
 $129 = $pe$1;
 $130 = (($129) - ($128))|0;
 $131 = ($130>>>0)>(4294967279);
 if ($131) {
  __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv();
  // unreachable;
 }
 $132 = ($130>>>0)<(11);
 if ($132) {
  $133 = $130 << 1;
  $134 = $133&255;
  HEAP8[$agg$result>>0] = $134;
  $135 = (($agg$result) + 1|0);
  $__p$0$ph$i$i = $135;
 } else {
  $136 = (($130) + 16)|0;
  $137 = $136 & -16;
  $138 = (_malloc($137)|0);
  $139 = (($agg$result) + 8|0);
  HEAP32[$139>>2] = $138;
  $140 = $137 | 1;
  HEAP32[$agg$result>>2] = $140;
  $141 = (($agg$result) + 4|0);
  HEAP32[$141>>2] = $130;
  $__p$0$ph$i$i = $138;
 }
 $142 = ($p0$1|0)==($pe$1|0);
 if ($142) {
  $__p$0$lcssa$i$i = $__p$0$ph$i$i;
 } else {
  $$02$i$i = $p0$1;$__p$01$i$i = $__p$0$ph$i$i;
  while(1) {
   $143 = HEAP8[$$02$i$i>>0]|0;
   HEAP8[$__p$01$i$i>>0] = $143;
   $144 = (($$02$i$i) + 1|0);
   $145 = (($__p$01$i$i) + 1|0);
   $146 = ($144|0)==($pe$1|0);
   if ($146) {
    break;
   } else {
    $$02$i$i = $144;$__p$01$i$i = $145;
   }
  }
  $scevgep4$i$i = (($__p$0$ph$i$i) + ($130)|0);
  $__p$0$lcssa$i$i = $scevgep4$i$i;
 }
 HEAP8[$__p$0$lcssa$i$i>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS7_E4typeESC_SC_($this,$__first,$__last) {
 $this = $this|0;
 $__first = $__first|0;
 $__last = $__last|0;
 var $$01 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__p$02 = 0, $phitmp$i = 0, $scevgep = 0, $scevgep3 = 0, $scevgep4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $__first;
 $1 = HEAP8[$this>>0]|0;
 $2 = $1 & 1;
 $3 = ($2<<24>>24)==(0);
 if ($3) {
  $4 = $1&255;
  $5 = $4 >>> 1;
  $15 = 10;$16 = $5;$40 = $1;
 } else {
  $6 = (($this) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$this>>2]|0;
  $9 = $8 & -2;
  $phitmp$i = (($9) + -1)|0;
  $10 = $8&255;
  $15 = $phitmp$i;$16 = $7;$40 = $10;
 }
 $11 = $__last;
 $12 = (($11) - ($0))|0;
 $13 = ($__last|0)==($__first|0);
 if ($13) {
  STACKTOP = sp;return;
 }
 $14 = (($15) - ($16))|0;
 $17 = ($14>>>0)<($12>>>0);
 if ($17) {
  $18 = (($16) + ($12))|0;
  $19 = (($18) - ($15))|0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($this,$15,$19,$16,$16,0);
  $$pre = HEAP8[$this>>0]|0;
  $21 = $$pre;
 } else {
  $21 = $40;
 }
 $20 = $21 & 1;
 $22 = ($20<<24>>24)==(0);
 if ($22) {
  $25 = (($this) + 1|0);
  $27 = $25;
 } else {
  $23 = (($this) + 8|0);
  $24 = HEAP32[$23>>2]|0;
  $27 = $24;
 }
 $26 = (($27) + ($16)|0);
 $28 = (($16) - ($0))|0;
 $scevgep = (($__last) + ($28)|0);
 $scevgep3 = $scevgep;
 $$01 = $__first;$__p$02 = $26;
 while(1) {
  $29 = HEAP8[$$01>>0]|0;
  HEAP8[$__p$02>>0] = $29;
  $30 = (($__p$02) + 1|0);
  $31 = (($$01) + 1|0);
  $32 = ($31|0)==($__last|0);
  if ($32) {
   break;
  } else {
   $$01 = $31;$__p$02 = $30;
  }
 }
 $scevgep4 = (($27) + ($scevgep3)|0);
 HEAP8[$scevgep4>>0] = 0;
 $33 = (($16) + ($12))|0;
 $34 = HEAP8[$this>>0]|0;
 $35 = $34 & 1;
 $36 = ($35<<24>>24)==(0);
 if ($36) {
  $38 = $33 << 1;
  $39 = $38&255;
  HEAP8[$this>>0] = $39;
  STACKTOP = sp;return;
 } else {
  $37 = (($this) + 4|0);
  HEAP32[$37>>2] = $33;
  STACKTOP = sp;return;
 }
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i106 = 0, $$0$i$i$i115 = 0, $$0$i$i$i124 = 0, $$0$i$i$i133 = 0, $$0$i$i$i142 = 0, $$0$i$i$i151 = 0, $$0$i$i$i160 = 0, $$0$i$i$i169 = 0, $$0$i$i$i17 = 0, $$0$i$i$i177 = 0, $$0$i$i$i186 = 0, $$0$i$i$i195 = 0, $$0$i$i$i204 = 0, $$0$i$i$i213 = 0, $$0$i$i$i222 = 0, $$0$i$i$i231 = 0, $$0$i$i$i239 = 0, $$0$i$i$i248 = 0;
 var $$0$i$i$i257 = 0, $$0$i$i$i26 = 0, $$0$i$i$i266 = 0, $$0$i$i$i274 = 0, $$0$i$i$i283 = 0, $$0$i$i$i292 = 0, $$0$i$i$i301 = 0, $$0$i$i$i309 = 0, $$0$i$i$i318 = 0, $$0$i$i$i327 = 0, $$0$i$i$i336 = 0, $$0$i$i$i345 = 0, $$0$i$i$i35 = 0, $$0$i$i$i354 = 0, $$0$i$i$i363 = 0, $$0$i$i$i372 = 0, $$0$i$i$i381 = 0, $$0$i$i$i390 = 0, $$0$i$i$i398 = 0, $$0$i$i$i44 = 0;
 var $$0$i$i$i53 = 0, $$0$i$i$i61 = 0, $$0$i$i$i70 = 0, $$0$i$i$i79 = 0, $$0$i$i$i8 = 0, $$0$i$i$i88 = 0, $$0$i$i$i97 = 0, $$pre$i = 0, $$pre$i104 = 0, $$pre$i113 = 0, $$pre$i122 = 0, $$pre$i131 = 0, $$pre$i140 = 0, $$pre$i149 = 0, $$pre$i15 = 0, $$pre$i158 = 0, $$pre$i167 = 0, $$pre$i175 = 0, $$pre$i184 = 0, $$pre$i193 = 0;
 var $$pre$i202 = 0, $$pre$i211 = 0, $$pre$i220 = 0, $$pre$i229 = 0, $$pre$i237 = 0, $$pre$i24 = 0, $$pre$i246 = 0, $$pre$i255 = 0, $$pre$i264 = 0, $$pre$i272 = 0, $$pre$i281 = 0, $$pre$i290 = 0, $$pre$i299 = 0, $$pre$i307 = 0, $$pre$i316 = 0, $$pre$i325 = 0, $$pre$i33 = 0, $$pre$i334 = 0, $$pre$i343 = 0, $$pre$i352 = 0;
 var $$pre$i361 = 0, $$pre$i370 = 0, $$pre$i379 = 0, $$pre$i388 = 0, $$pre$i396 = 0, $$pre$i42 = 0, $$pre$i51 = 0, $$pre$i59 = 0, $$pre$i6 = 0, $$pre$i68 = 0, $$pre$i77 = 0, $$pre$i86 = 0, $$pre$i95 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0;
 var $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0;
 var $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0;
 var $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0;
 var $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0;
 var $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0;
 var $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0;
 var $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0;
 var $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0;
 var $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0;
 var $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0;
 var $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0;
 var $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0;
 var $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0;
 var $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0;
 var $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0;
 var $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0;
 var $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0;
 var $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0;
 var $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0;
 var $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0;
 var $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0;
 var $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0;
 var $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0;
 var $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0;
 var $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0;
 var $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0;
 var $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0;
 var $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0;
 var $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0;
 var $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0;
 var $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0;
 var $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0;
 var $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0;
 var $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0;
 var $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0;
 var $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0;
 var $1652 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;
 var $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0;
 var $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0;
 var $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0;
 var $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0;
 var $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0;
 var $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0;
 var $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0;
 var $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0;
 var $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0;
 var $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0;
 var $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0;
 var $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0;
 var $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0;
 var $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0;
 var $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0;
 var $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0;
 var $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0;
 var $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0;
 var $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0;
 var $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0;
 var $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0;
 var $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0;
 var $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0;
 var $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0;
 var $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0;
 var $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0;
 var $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0;
 var $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0;
 var $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0;
 var $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0;
 var $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0;
 var $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0;
 var $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0;
 var $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0;
 var $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0;
 var $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0;
 var $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0;
 var $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0;
 var $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0;
 var $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $__v$i$i395 = 0, $isdigit = 0, $isdigittmp = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1136|0;
 $__v$i$i395 = sp + 1080|0;
 $0 = sp + 1032|0;
 $1 = sp + 984|0;
 $2 = sp + 504|0;
 $3 = sp + 528|0;
 $4 = sp + 480|0;
 $5 = sp + 120|0;
 $6 = sp + 144|0;
 $7 = sp + 168|0;
 $8 = sp + 192|0;
 $9 = sp + 216|0;
 $10 = sp + 240|0;
 $11 = sp + 264|0;
 $12 = sp + 288|0;
 $13 = sp + 312|0;
 $14 = sp + 336|0;
 $15 = sp + 360|0;
 $16 = sp + 384|0;
 $17 = sp + 408|0;
 $18 = sp + 912|0;
 $19 = sp + 960|0;
 $20 = sp + 1008|0;
 $21 = sp + 1056|0;
 $22 = sp + 1104|0;
 $23 = sp + 552|0;
 $24 = sp + 576|0;
 $25 = sp + 600|0;
 $26 = sp + 624|0;
 $27 = sp + 648|0;
 $28 = sp + 672|0;
 $29 = sp + 696|0;
 $30 = sp + 720|0;
 $31 = sp + 744|0;
 $32 = sp + 768|0;
 $33 = sp + 792|0;
 $34 = sp + 816|0;
 $35 = sp + 840|0;
 $36 = sp + 96|0;
 $37 = sp + 72|0;
 $38 = sp + 864|0;
 $39 = sp + 48|0;
 $40 = sp;
 $41 = sp + 432|0;
 $42 = sp + 888|0;
 $43 = sp + 24|0;
 $44 = sp + 456|0;
 $45 = sp + 936|0;
 $46 = $last;
 $47 = $first;
 $48 = (($46) - ($47))|0;
 $49 = ($48|0)>(1);
 if (!($49)) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $50 = HEAP8[$first>>0]|0;
 $51 = $50 << 24 >> 24;
 do {
  switch ($51|0) {
  case 100:  {
   $300 = (($first) + 1|0);
   $301 = HEAP8[$300>>0]|0;
   $302 = $301 << 24 >> 24;
   switch ($302|0) {
   case 101:  {
    HEAP8[$8>>0] = 18;
    $338 = (($8) + 1|0);
    dest=$338+0|0; src=49312+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $339 = (($8) + 10|0);
    HEAP8[$339>>0] = 0;
    $340 = (($8) + 12|0);
    ;HEAP32[$340+0>>2]=0|0;HEAP32[$340+4>>2]=0|0;HEAP32[$340+8>>2]=0|0;
    $341 = (($db) + 4|0);
    $342 = HEAP32[$341>>2]|0;
    $343 = (($db) + 8|0);
    $344 = HEAP32[$343>>2]|0;
    $345 = ($342>>>0)<($344>>>0);
    if ($345) {
     $346 = ($342|0)==(0|0);
     if ($346) {
      $349 = 0;
     } else {
      ;HEAP32[$342+0>>2]=HEAP32[$8+0>>2]|0;HEAP32[$342+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$342+8>>2]=HEAP32[$8+8>>2]|0;
      ;HEAP32[$8+0>>2]=0|0;HEAP32[$8+4>>2]=0|0;HEAP32[$8+8>>2]=0|0;
      $347 = (($342) + 12|0);
      ;HEAP32[$347+0>>2]=HEAP32[$340+0>>2]|0;HEAP32[$347+4>>2]=HEAP32[$340+4>>2]|0;HEAP32[$347+8>>2]=HEAP32[$340+8>>2]|0;
      ;HEAP32[$340+0>>2]=0|0;HEAP32[$340+4>>2]=0|0;HEAP32[$340+8>>2]=0|0;
      $$pre$i68 = HEAP32[$341>>2]|0;
      $349 = $$pre$i68;
     }
     $348 = (($349) + 24|0);
     HEAP32[$341>>2] = $348;
    } else {
     $350 = (($db) + 12|0);
     $351 = HEAP32[$db>>2]|0;
     $352 = $342;
     $353 = $351;
     $354 = (($352) - ($353))|0;
     $355 = (($354|0) / 24)&-1;
     $356 = (($355) + 1)|0;
     $357 = ($356|0)<(0);
     if ($357) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $358 = $344;
     $359 = (($358) - ($353))|0;
     $360 = (($359|0) / 24)&-1;
     $361 = ($360>>>0)<(1073741823);
     if ($361) {
      $362 = $360 << 1;
      $363 = ($362>>>0)<($356>>>0);
      $364 = $363 ? $356 : $362;
      $$0$i$i$i70 = $364;
     } else {
      $$0$i$i$i70 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i70,$355,$350);
     $365 = (($__v$i$i395) + 8|0);
     $366 = HEAP32[$365>>2]|0;
     $367 = ($366|0)==(0|0);
     if (!($367)) {
      ;HEAP32[$366+0>>2]=HEAP32[$8+0>>2]|0;HEAP32[$366+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$366+8>>2]=HEAP32[$8+8>>2]|0;
      ;HEAP32[$8+0>>2]=0|0;HEAP32[$8+4>>2]=0|0;HEAP32[$8+8>>2]=0|0;
      $368 = (($366) + 12|0);
      ;HEAP32[$368+0>>2]=HEAP32[$340+0>>2]|0;HEAP32[$368+4>>2]=HEAP32[$340+4>>2]|0;HEAP32[$368+8>>2]=HEAP32[$340+8>>2]|0;
      ;HEAP32[$340+0>>2]=0|0;HEAP32[$340+4>>2]=0|0;HEAP32[$340+8>>2]=0|0;
     }
     $369 = (($366) + 24|0);
     HEAP32[$365>>2] = $369;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($8);
    $370 = (($first) + 2|0);
    $$0 = $370;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 86:  {
    HEAP8[$11>>0] = 20;
    $439 = (($11) + 1|0);
    dest=$439+0|0; src=49360+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $440 = (($11) + 11|0);
    HEAP8[$440>>0] = 0;
    $441 = (($11) + 12|0);
    ;HEAP32[$441+0>>2]=0|0;HEAP32[$441+4>>2]=0|0;HEAP32[$441+8>>2]=0|0;
    $442 = (($db) + 4|0);
    $443 = HEAP32[$442>>2]|0;
    $444 = (($db) + 8|0);
    $445 = HEAP32[$444>>2]|0;
    $446 = ($443>>>0)<($445>>>0);
    if ($446) {
     $447 = ($443|0)==(0|0);
     if ($447) {
      $450 = 0;
     } else {
      ;HEAP32[$443+0>>2]=HEAP32[$11+0>>2]|0;HEAP32[$443+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$443+8>>2]=HEAP32[$11+8>>2]|0;
      ;HEAP32[$11+0>>2]=0|0;HEAP32[$11+4>>2]=0|0;HEAP32[$11+8>>2]=0|0;
      $448 = (($443) + 12|0);
      ;HEAP32[$448+0>>2]=HEAP32[$441+0>>2]|0;HEAP32[$448+4>>2]=HEAP32[$441+4>>2]|0;HEAP32[$448+8>>2]=HEAP32[$441+8>>2]|0;
      ;HEAP32[$441+0>>2]=0|0;HEAP32[$441+4>>2]=0|0;HEAP32[$441+8>>2]=0|0;
      $$pre$i95 = HEAP32[$442>>2]|0;
      $450 = $$pre$i95;
     }
     $449 = (($450) + 24|0);
     HEAP32[$442>>2] = $449;
    } else {
     $451 = (($db) + 12|0);
     $452 = HEAP32[$db>>2]|0;
     $453 = $443;
     $454 = $452;
     $455 = (($453) - ($454))|0;
     $456 = (($455|0) / 24)&-1;
     $457 = (($456) + 1)|0;
     $458 = ($457|0)<(0);
     if ($458) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $459 = $445;
     $460 = (($459) - ($454))|0;
     $461 = (($460|0) / 24)&-1;
     $462 = ($461>>>0)<(1073741823);
     if ($462) {
      $463 = $461 << 1;
      $464 = ($463>>>0)<($457>>>0);
      $465 = $464 ? $457 : $463;
      $$0$i$i$i97 = $465;
     } else {
      $$0$i$i$i97 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i97,$456,$451);
     $466 = (($__v$i$i395) + 8|0);
     $467 = HEAP32[$466>>2]|0;
     $468 = ($467|0)==(0|0);
     if (!($468)) {
      ;HEAP32[$467+0>>2]=HEAP32[$11+0>>2]|0;HEAP32[$467+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$467+8>>2]=HEAP32[$11+8>>2]|0;
      ;HEAP32[$11+0>>2]=0|0;HEAP32[$11+4>>2]=0|0;HEAP32[$11+8>>2]=0|0;
      $469 = (($467) + 12|0);
      ;HEAP32[$469+0>>2]=HEAP32[$441+0>>2]|0;HEAP32[$469+4>>2]=HEAP32[$441+4>>2]|0;HEAP32[$469+8>>2]=HEAP32[$441+8>>2]|0;
      ;HEAP32[$441+0>>2]=0|0;HEAP32[$441+4>>2]=0|0;HEAP32[$441+8>>2]=0|0;
     }
     $470 = (($467) + 24|0);
     HEAP32[$466>>2] = $470;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($11);
    $471 = (($first) + 2|0);
    $$0 = $471;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 108:  {
    $371 = (_malloc(16)|0);
    $372 = (($9) + 8|0);
    HEAP32[$372>>2] = $371;
    HEAP32[$9>>2] = 17;
    $373 = (($9) + 4|0);
    HEAP32[$373>>2] = 15;
    dest=$371+0|0; src=49328+0|0; stop=dest+15|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $374 = (($371) + 15|0);
    HEAP8[$374>>0] = 0;
    $375 = (($9) + 12|0);
    ;HEAP32[$375+0>>2]=0|0;HEAP32[$375+4>>2]=0|0;HEAP32[$375+8>>2]=0|0;
    $376 = (($db) + 4|0);
    $377 = HEAP32[$376>>2]|0;
    $378 = (($db) + 8|0);
    $379 = HEAP32[$378>>2]|0;
    $380 = ($377>>>0)<($379>>>0);
    if ($380) {
     $381 = ($377|0)==(0|0);
     if ($381) {
      $384 = 0;
     } else {
      ;HEAP32[$377+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$377+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$377+8>>2]=HEAP32[$9+8>>2]|0;
      ;HEAP32[$9+0>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
      $382 = (($377) + 12|0);
      ;HEAP32[$382+0>>2]=HEAP32[$375+0>>2]|0;HEAP32[$382+4>>2]=HEAP32[$375+4>>2]|0;HEAP32[$382+8>>2]=HEAP32[$375+8>>2]|0;
      ;HEAP32[$375+0>>2]=0|0;HEAP32[$375+4>>2]=0|0;HEAP32[$375+8>>2]=0|0;
      $$pre$i77 = HEAP32[$376>>2]|0;
      $384 = $$pre$i77;
     }
     $383 = (($384) + 24|0);
     HEAP32[$376>>2] = $383;
    } else {
     $385 = (($db) + 12|0);
     $386 = HEAP32[$db>>2]|0;
     $387 = $377;
     $388 = $386;
     $389 = (($387) - ($388))|0;
     $390 = (($389|0) / 24)&-1;
     $391 = (($390) + 1)|0;
     $392 = ($391|0)<(0);
     if ($392) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $393 = $379;
     $394 = (($393) - ($388))|0;
     $395 = (($394|0) / 24)&-1;
     $396 = ($395>>>0)<(1073741823);
     if ($396) {
      $397 = $395 << 1;
      $398 = ($397>>>0)<($391>>>0);
      $399 = $398 ? $391 : $397;
      $$0$i$i$i79 = $399;
     } else {
      $$0$i$i$i79 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i79,$390,$385);
     $400 = (($__v$i$i395) + 8|0);
     $401 = HEAP32[$400>>2]|0;
     $402 = ($401|0)==(0|0);
     if (!($402)) {
      ;HEAP32[$401+0>>2]=HEAP32[$9+0>>2]|0;HEAP32[$401+4>>2]=HEAP32[$9+4>>2]|0;HEAP32[$401+8>>2]=HEAP32[$9+8>>2]|0;
      ;HEAP32[$9+0>>2]=0|0;HEAP32[$9+4>>2]=0|0;HEAP32[$9+8>>2]=0|0;
      $403 = (($401) + 12|0);
      ;HEAP32[$403+0>>2]=HEAP32[$375+0>>2]|0;HEAP32[$403+4>>2]=HEAP32[$375+4>>2]|0;HEAP32[$403+8>>2]=HEAP32[$375+8>>2]|0;
      ;HEAP32[$375+0>>2]=0|0;HEAP32[$375+4>>2]=0|0;HEAP32[$375+8>>2]=0|0;
     }
     $404 = (($401) + 24|0);
     HEAP32[$400>>2] = $404;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($9);
    $405 = (($first) + 2|0);
    $$0 = $405;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 97:  {
    $303 = (_malloc(32)|0);
    $304 = (($7) + 8|0);
    HEAP32[$304>>2] = $303;
    HEAP32[$7>>2] = 33;
    $305 = (($7) + 4|0);
    HEAP32[$305>>2] = 17;
    dest=$303+0|0; src=49288+0|0; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $306 = (($303) + 17|0);
    HEAP8[$306>>0] = 0;
    $307 = (($7) + 12|0);
    ;HEAP32[$307+0>>2]=0|0;HEAP32[$307+4>>2]=0|0;HEAP32[$307+8>>2]=0|0;
    $308 = (($db) + 4|0);
    $309 = HEAP32[$308>>2]|0;
    $310 = (($db) + 8|0);
    $311 = HEAP32[$310>>2]|0;
    $312 = ($309>>>0)<($311>>>0);
    if ($312) {
     $313 = ($309|0)==(0|0);
     if ($313) {
      $316 = 0;
     } else {
      ;HEAP32[$309+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$309+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$309+8>>2]=HEAP32[$7+8>>2]|0;
      ;HEAP32[$7+0>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;
      $314 = (($309) + 12|0);
      ;HEAP32[$314+0>>2]=HEAP32[$307+0>>2]|0;HEAP32[$314+4>>2]=HEAP32[$307+4>>2]|0;HEAP32[$314+8>>2]=HEAP32[$307+8>>2]|0;
      ;HEAP32[$307+0>>2]=0|0;HEAP32[$307+4>>2]=0|0;HEAP32[$307+8>>2]=0|0;
      $$pre$i59 = HEAP32[$308>>2]|0;
      $316 = $$pre$i59;
     }
     $315 = (($316) + 24|0);
     HEAP32[$308>>2] = $315;
    } else {
     $317 = (($db) + 12|0);
     $318 = HEAP32[$db>>2]|0;
     $319 = $309;
     $320 = $318;
     $321 = (($319) - ($320))|0;
     $322 = (($321|0) / 24)&-1;
     $323 = (($322) + 1)|0;
     $324 = ($323|0)<(0);
     if ($324) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $325 = $311;
     $326 = (($325) - ($320))|0;
     $327 = (($326|0) / 24)&-1;
     $328 = ($327>>>0)<(1073741823);
     if ($328) {
      $329 = $327 << 1;
      $330 = ($329>>>0)<($323>>>0);
      $331 = $330 ? $323 : $329;
      $$0$i$i$i61 = $331;
     } else {
      $$0$i$i$i61 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i61,$322,$317);
     $332 = (($__v$i$i395) + 8|0);
     $333 = HEAP32[$332>>2]|0;
     $334 = ($333|0)==(0|0);
     if (!($334)) {
      ;HEAP32[$333+0>>2]=HEAP32[$7+0>>2]|0;HEAP32[$333+4>>2]=HEAP32[$7+4>>2]|0;HEAP32[$333+8>>2]=HEAP32[$7+8>>2]|0;
      ;HEAP32[$7+0>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;
      $335 = (($333) + 12|0);
      ;HEAP32[$335+0>>2]=HEAP32[$307+0>>2]|0;HEAP32[$335+4>>2]=HEAP32[$307+4>>2]|0;HEAP32[$335+8>>2]=HEAP32[$307+8>>2]|0;
      ;HEAP32[$307+0>>2]=0|0;HEAP32[$307+4>>2]=0|0;HEAP32[$307+8>>2]=0|0;
     }
     $336 = (($333) + 24|0);
     HEAP32[$332>>2] = $336;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
    $337 = (($first) + 2|0);
    $$0 = $337;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 118:  {
    HEAP8[$10>>0] = 18;
    $406 = (($10) + 1|0);
    dest=$406+0|0; src=49344+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $407 = (($10) + 10|0);
    HEAP8[$407>>0] = 0;
    $408 = (($10) + 12|0);
    ;HEAP32[$408+0>>2]=0|0;HEAP32[$408+4>>2]=0|0;HEAP32[$408+8>>2]=0|0;
    $409 = (($db) + 4|0);
    $410 = HEAP32[$409>>2]|0;
    $411 = (($db) + 8|0);
    $412 = HEAP32[$411>>2]|0;
    $413 = ($410>>>0)<($412>>>0);
    if ($413) {
     $414 = ($410|0)==(0|0);
     if ($414) {
      $417 = 0;
     } else {
      ;HEAP32[$410+0>>2]=HEAP32[$10+0>>2]|0;HEAP32[$410+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$410+8>>2]=HEAP32[$10+8>>2]|0;
      ;HEAP32[$10+0>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
      $415 = (($410) + 12|0);
      ;HEAP32[$415+0>>2]=HEAP32[$408+0>>2]|0;HEAP32[$415+4>>2]=HEAP32[$408+4>>2]|0;HEAP32[$415+8>>2]=HEAP32[$408+8>>2]|0;
      ;HEAP32[$408+0>>2]=0|0;HEAP32[$408+4>>2]=0|0;HEAP32[$408+8>>2]=0|0;
      $$pre$i86 = HEAP32[$409>>2]|0;
      $417 = $$pre$i86;
     }
     $416 = (($417) + 24|0);
     HEAP32[$409>>2] = $416;
    } else {
     $418 = (($db) + 12|0);
     $419 = HEAP32[$db>>2]|0;
     $420 = $410;
     $421 = $419;
     $422 = (($420) - ($421))|0;
     $423 = (($422|0) / 24)&-1;
     $424 = (($423) + 1)|0;
     $425 = ($424|0)<(0);
     if ($425) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $426 = $412;
     $427 = (($426) - ($421))|0;
     $428 = (($427|0) / 24)&-1;
     $429 = ($428>>>0)<(1073741823);
     if ($429) {
      $430 = $428 << 1;
      $431 = ($430>>>0)<($424>>>0);
      $432 = $431 ? $424 : $430;
      $$0$i$i$i88 = $432;
     } else {
      $$0$i$i$i88 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i88,$423,$418);
     $433 = (($__v$i$i395) + 8|0);
     $434 = HEAP32[$433>>2]|0;
     $435 = ($434|0)==(0|0);
     if (!($435)) {
      ;HEAP32[$434+0>>2]=HEAP32[$10+0>>2]|0;HEAP32[$434+4>>2]=HEAP32[$10+4>>2]|0;HEAP32[$434+8>>2]=HEAP32[$10+8>>2]|0;
      ;HEAP32[$10+0>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;
      $436 = (($434) + 12|0);
      ;HEAP32[$436+0>>2]=HEAP32[$408+0>>2]|0;HEAP32[$436+4>>2]=HEAP32[$408+4>>2]|0;HEAP32[$436+8>>2]=HEAP32[$408+8>>2]|0;
      ;HEAP32[$408+0>>2]=0|0;HEAP32[$408+4>>2]=0|0;HEAP32[$408+8>>2]=0|0;
     }
     $437 = (($434) + 24|0);
     HEAP32[$433>>2] = $437;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($10);
    $438 = (($first) + 2|0);
    $$0 = $438;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  case 99:  {
   $187 = (($first) + 1|0);
   $188 = HEAP8[$187>>0]|0;
   $189 = $188 << 24 >> 24;
   if ((($189|0) == 118)) {
    $289 = (($db) + 63|0);
    $290 = HEAP8[$289>>0]|0;
    HEAP8[$289>>0] = 0;
    $291 = (($first) + 2|0);
    $292 = (__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($291,$last,$db)|0);
    HEAP8[$289>>0] = $290;
    $293 = ($292|0)==($291|0);
    if ($293) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $294 = HEAP32[$db>>2]|0;
    $295 = (($db) + 4|0);
    $296 = HEAP32[$295>>2]|0;
    $297 = ($294|0)==($296|0);
    if ($297) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $298 = (($296) + -24|0);
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($298,0,49272,9)|0);
    $299 = (($db) + 60|0);
    HEAP8[$299>>0] = 1;
    $$0 = $292;
    STACKTOP = sp;return ($$0|0);
   } else if ((($189|0) == 108)) {
    HEAP8[$4>>0] = 20;
    $190 = (($4) + 1|0);
    dest=$190+0|0; src=49224+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $191 = (($4) + 11|0);
    HEAP8[$191>>0] = 0;
    $192 = (($4) + 12|0);
    ;HEAP32[$192+0>>2]=0|0;HEAP32[$192+4>>2]=0|0;HEAP32[$192+8>>2]=0|0;
    $193 = (($db) + 4|0);
    $194 = HEAP32[$193>>2]|0;
    $195 = (($db) + 8|0);
    $196 = HEAP32[$195>>2]|0;
    $197 = ($194>>>0)<($196>>>0);
    if ($197) {
     $198 = ($194|0)==(0|0);
     if ($198) {
      $201 = 0;
     } else {
      ;HEAP32[$194+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$194+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$194+8>>2]=HEAP32[$4+8>>2]|0;
      ;HEAP32[$4+0>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
      $199 = (($194) + 12|0);
      ;HEAP32[$199+0>>2]=HEAP32[$192+0>>2]|0;HEAP32[$199+4>>2]=HEAP32[$192+4>>2]|0;HEAP32[$199+8>>2]=HEAP32[$192+8>>2]|0;
      ;HEAP32[$192+0>>2]=0|0;HEAP32[$192+4>>2]=0|0;HEAP32[$192+8>>2]=0|0;
      $$pre$i33 = HEAP32[$193>>2]|0;
      $201 = $$pre$i33;
     }
     $200 = (($201) + 24|0);
     HEAP32[$193>>2] = $200;
    } else {
     $202 = (($db) + 12|0);
     $203 = HEAP32[$db>>2]|0;
     $204 = $194;
     $205 = $203;
     $206 = (($204) - ($205))|0;
     $207 = (($206|0) / 24)&-1;
     $208 = (($207) + 1)|0;
     $209 = ($208|0)<(0);
     if ($209) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $210 = $196;
     $211 = (($210) - ($205))|0;
     $212 = (($211|0) / 24)&-1;
     $213 = ($212>>>0)<(1073741823);
     if ($213) {
      $214 = $212 << 1;
      $215 = ($214>>>0)<($208>>>0);
      $216 = $215 ? $208 : $214;
      $$0$i$i$i35 = $216;
     } else {
      $$0$i$i$i35 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i35,$207,$202);
     $217 = (($__v$i$i395) + 8|0);
     $218 = HEAP32[$217>>2]|0;
     $219 = ($218|0)==(0|0);
     if (!($219)) {
      ;HEAP32[$218+0>>2]=HEAP32[$4+0>>2]|0;HEAP32[$218+4>>2]=HEAP32[$4+4>>2]|0;HEAP32[$218+8>>2]=HEAP32[$4+8>>2]|0;
      ;HEAP32[$4+0>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;
      $220 = (($218) + 12|0);
      ;HEAP32[$220+0>>2]=HEAP32[$192+0>>2]|0;HEAP32[$220+4>>2]=HEAP32[$192+4>>2]|0;HEAP32[$220+8>>2]=HEAP32[$192+8>>2]|0;
      ;HEAP32[$192+0>>2]=0|0;HEAP32[$192+4>>2]=0|0;HEAP32[$192+8>>2]=0|0;
     }
     $221 = (($218) + 24|0);
     HEAP32[$217>>2] = $221;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
    $222 = (($first) + 2|0);
    $$0 = $222;
    STACKTOP = sp;return ($$0|0);
   } else if ((($189|0) == 111)) {
    HEAP8[$6>>0] = 18;
    $256 = (($6) + 1|0);
    dest=$256+0|0; src=49256+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $257 = (($6) + 10|0);
    HEAP8[$257>>0] = 0;
    $258 = (($6) + 12|0);
    ;HEAP32[$258+0>>2]=0|0;HEAP32[$258+4>>2]=0|0;HEAP32[$258+8>>2]=0|0;
    $259 = (($db) + 4|0);
    $260 = HEAP32[$259>>2]|0;
    $261 = (($db) + 8|0);
    $262 = HEAP32[$261>>2]|0;
    $263 = ($260>>>0)<($262>>>0);
    if ($263) {
     $264 = ($260|0)==(0|0);
     if ($264) {
      $267 = 0;
     } else {
      ;HEAP32[$260+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$260+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$260+8>>2]=HEAP32[$6+8>>2]|0;
      ;HEAP32[$6+0>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;
      $265 = (($260) + 12|0);
      ;HEAP32[$265+0>>2]=HEAP32[$258+0>>2]|0;HEAP32[$265+4>>2]=HEAP32[$258+4>>2]|0;HEAP32[$265+8>>2]=HEAP32[$258+8>>2]|0;
      ;HEAP32[$258+0>>2]=0|0;HEAP32[$258+4>>2]=0|0;HEAP32[$258+8>>2]=0|0;
      $$pre$i51 = HEAP32[$259>>2]|0;
      $267 = $$pre$i51;
     }
     $266 = (($267) + 24|0);
     HEAP32[$259>>2] = $266;
    } else {
     $268 = (($db) + 12|0);
     $269 = HEAP32[$db>>2]|0;
     $270 = $260;
     $271 = $269;
     $272 = (($270) - ($271))|0;
     $273 = (($272|0) / 24)&-1;
     $274 = (($273) + 1)|0;
     $275 = ($274|0)<(0);
     if ($275) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $276 = $262;
     $277 = (($276) - ($271))|0;
     $278 = (($277|0) / 24)&-1;
     $279 = ($278>>>0)<(1073741823);
     if ($279) {
      $280 = $278 << 1;
      $281 = ($280>>>0)<($274>>>0);
      $282 = $281 ? $274 : $280;
      $$0$i$i$i53 = $282;
     } else {
      $$0$i$i$i53 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i53,$273,$268);
     $283 = (($__v$i$i395) + 8|0);
     $284 = HEAP32[$283>>2]|0;
     $285 = ($284|0)==(0|0);
     if (!($285)) {
      ;HEAP32[$284+0>>2]=HEAP32[$6+0>>2]|0;HEAP32[$284+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$284+8>>2]=HEAP32[$6+8>>2]|0;
      ;HEAP32[$6+0>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;
      $286 = (($284) + 12|0);
      ;HEAP32[$286+0>>2]=HEAP32[$258+0>>2]|0;HEAP32[$286+4>>2]=HEAP32[$258+4>>2]|0;HEAP32[$286+8>>2]=HEAP32[$258+8>>2]|0;
      ;HEAP32[$258+0>>2]=0|0;HEAP32[$258+4>>2]=0|0;HEAP32[$258+8>>2]=0|0;
     }
     $287 = (($284) + 24|0);
     HEAP32[$283>>2] = $287;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
    $288 = (($first) + 2|0);
    $$0 = $288;
    STACKTOP = sp;return ($$0|0);
   } else if ((($189|0) == 109)) {
    HEAP8[$5>>0] = 18;
    $223 = (($5) + 1|0);
    dest=$223+0|0; src=49240+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $224 = (($5) + 10|0);
    HEAP8[$224>>0] = 0;
    $225 = (($5) + 12|0);
    ;HEAP32[$225+0>>2]=0|0;HEAP32[$225+4>>2]=0|0;HEAP32[$225+8>>2]=0|0;
    $226 = (($db) + 4|0);
    $227 = HEAP32[$226>>2]|0;
    $228 = (($db) + 8|0);
    $229 = HEAP32[$228>>2]|0;
    $230 = ($227>>>0)<($229>>>0);
    if ($230) {
     $231 = ($227|0)==(0|0);
     if ($231) {
      $234 = 0;
     } else {
      ;HEAP32[$227+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$227+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$227+8>>2]=HEAP32[$5+8>>2]|0;
      ;HEAP32[$5+0>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;
      $232 = (($227) + 12|0);
      ;HEAP32[$232+0>>2]=HEAP32[$225+0>>2]|0;HEAP32[$232+4>>2]=HEAP32[$225+4>>2]|0;HEAP32[$232+8>>2]=HEAP32[$225+8>>2]|0;
      ;HEAP32[$225+0>>2]=0|0;HEAP32[$225+4>>2]=0|0;HEAP32[$225+8>>2]=0|0;
      $$pre$i42 = HEAP32[$226>>2]|0;
      $234 = $$pre$i42;
     }
     $233 = (($234) + 24|0);
     HEAP32[$226>>2] = $233;
    } else {
     $235 = (($db) + 12|0);
     $236 = HEAP32[$db>>2]|0;
     $237 = $227;
     $238 = $236;
     $239 = (($237) - ($238))|0;
     $240 = (($239|0) / 24)&-1;
     $241 = (($240) + 1)|0;
     $242 = ($241|0)<(0);
     if ($242) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $243 = $229;
     $244 = (($243) - ($238))|0;
     $245 = (($244|0) / 24)&-1;
     $246 = ($245>>>0)<(1073741823);
     if ($246) {
      $247 = $245 << 1;
      $248 = ($247>>>0)<($241>>>0);
      $249 = $248 ? $241 : $247;
      $$0$i$i$i44 = $249;
     } else {
      $$0$i$i$i44 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i44,$240,$235);
     $250 = (($__v$i$i395) + 8|0);
     $251 = HEAP32[$250>>2]|0;
     $252 = ($251|0)==(0|0);
     if (!($252)) {
      ;HEAP32[$251+0>>2]=HEAP32[$5+0>>2]|0;HEAP32[$251+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$251+8>>2]=HEAP32[$5+8>>2]|0;
      ;HEAP32[$5+0>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;
      $253 = (($251) + 12|0);
      ;HEAP32[$253+0>>2]=HEAP32[$225+0>>2]|0;HEAP32[$253+4>>2]=HEAP32[$225+4>>2]|0;HEAP32[$253+8>>2]=HEAP32[$225+8>>2]|0;
      ;HEAP32[$225+0>>2]=0|0;HEAP32[$225+4>>2]=0|0;HEAP32[$225+8>>2]=0|0;
     }
     $254 = (($251) + 24|0);
     HEAP32[$250>>2] = $254;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
    $255 = (($first) + 2|0);
    $$0 = $255;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 101:  {
   $472 = (($first) + 1|0);
   $473 = HEAP8[$472>>0]|0;
   $474 = $473 << 24 >> 24;
   if ((($474|0) == 111)) {
    HEAP8[$12>>0] = 18;
    $475 = (($12) + 1|0);
    dest=$475+0|0; src=49376+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $476 = (($12) + 10|0);
    HEAP8[$476>>0] = 0;
    $477 = (($12) + 12|0);
    ;HEAP32[$477+0>>2]=0|0;HEAP32[$477+4>>2]=0|0;HEAP32[$477+8>>2]=0|0;
    $478 = (($db) + 4|0);
    $479 = HEAP32[$478>>2]|0;
    $480 = (($db) + 8|0);
    $481 = HEAP32[$480>>2]|0;
    $482 = ($479>>>0)<($481>>>0);
    if ($482) {
     $483 = ($479|0)==(0|0);
     if ($483) {
      $486 = 0;
     } else {
      ;HEAP32[$479+0>>2]=HEAP32[$12+0>>2]|0;HEAP32[$479+4>>2]=HEAP32[$12+4>>2]|0;HEAP32[$479+8>>2]=HEAP32[$12+8>>2]|0;
      ;HEAP32[$12+0>>2]=0|0;HEAP32[$12+4>>2]=0|0;HEAP32[$12+8>>2]=0|0;
      $484 = (($479) + 12|0);
      ;HEAP32[$484+0>>2]=HEAP32[$477+0>>2]|0;HEAP32[$484+4>>2]=HEAP32[$477+4>>2]|0;HEAP32[$484+8>>2]=HEAP32[$477+8>>2]|0;
      ;HEAP32[$477+0>>2]=0|0;HEAP32[$477+4>>2]=0|0;HEAP32[$477+8>>2]=0|0;
      $$pre$i104 = HEAP32[$478>>2]|0;
      $486 = $$pre$i104;
     }
     $485 = (($486) + 24|0);
     HEAP32[$478>>2] = $485;
    } else {
     $487 = (($db) + 12|0);
     $488 = HEAP32[$db>>2]|0;
     $489 = $479;
     $490 = $488;
     $491 = (($489) - ($490))|0;
     $492 = (($491|0) / 24)&-1;
     $493 = (($492) + 1)|0;
     $494 = ($493|0)<(0);
     if ($494) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $495 = $481;
     $496 = (($495) - ($490))|0;
     $497 = (($496|0) / 24)&-1;
     $498 = ($497>>>0)<(1073741823);
     if ($498) {
      $499 = $497 << 1;
      $500 = ($499>>>0)<($493>>>0);
      $501 = $500 ? $493 : $499;
      $$0$i$i$i106 = $501;
     } else {
      $$0$i$i$i106 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i106,$492,$487);
     $502 = (($__v$i$i395) + 8|0);
     $503 = HEAP32[$502>>2]|0;
     $504 = ($503|0)==(0|0);
     if (!($504)) {
      ;HEAP32[$503+0>>2]=HEAP32[$12+0>>2]|0;HEAP32[$503+4>>2]=HEAP32[$12+4>>2]|0;HEAP32[$503+8>>2]=HEAP32[$12+8>>2]|0;
      ;HEAP32[$12+0>>2]=0|0;HEAP32[$12+4>>2]=0|0;HEAP32[$12+8>>2]=0|0;
      $505 = (($503) + 12|0);
      ;HEAP32[$505+0>>2]=HEAP32[$477+0>>2]|0;HEAP32[$505+4>>2]=HEAP32[$477+4>>2]|0;HEAP32[$505+8>>2]=HEAP32[$477+8>>2]|0;
      ;HEAP32[$477+0>>2]=0|0;HEAP32[$477+4>>2]=0|0;HEAP32[$477+8>>2]=0|0;
     }
     $506 = (($503) + 24|0);
     HEAP32[$502>>2] = $506;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($12);
    $507 = (($first) + 2|0);
    $$0 = $507;
    STACKTOP = sp;return ($$0|0);
   } else if ((($474|0) == 79)) {
    HEAP8[$13>>0] = 20;
    $508 = (($13) + 1|0);
    dest=$508+0|0; src=49392+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $509 = (($13) + 11|0);
    HEAP8[$509>>0] = 0;
    $510 = (($13) + 12|0);
    ;HEAP32[$510+0>>2]=0|0;HEAP32[$510+4>>2]=0|0;HEAP32[$510+8>>2]=0|0;
    $511 = (($db) + 4|0);
    $512 = HEAP32[$511>>2]|0;
    $513 = (($db) + 8|0);
    $514 = HEAP32[$513>>2]|0;
    $515 = ($512>>>0)<($514>>>0);
    if ($515) {
     $516 = ($512|0)==(0|0);
     if ($516) {
      $519 = 0;
     } else {
      ;HEAP32[$512+0>>2]=HEAP32[$13+0>>2]|0;HEAP32[$512+4>>2]=HEAP32[$13+4>>2]|0;HEAP32[$512+8>>2]=HEAP32[$13+8>>2]|0;
      ;HEAP32[$13+0>>2]=0|0;HEAP32[$13+4>>2]=0|0;HEAP32[$13+8>>2]=0|0;
      $517 = (($512) + 12|0);
      ;HEAP32[$517+0>>2]=HEAP32[$510+0>>2]|0;HEAP32[$517+4>>2]=HEAP32[$510+4>>2]|0;HEAP32[$517+8>>2]=HEAP32[$510+8>>2]|0;
      ;HEAP32[$510+0>>2]=0|0;HEAP32[$510+4>>2]=0|0;HEAP32[$510+8>>2]=0|0;
      $$pre$i113 = HEAP32[$511>>2]|0;
      $519 = $$pre$i113;
     }
     $518 = (($519) + 24|0);
     HEAP32[$511>>2] = $518;
    } else {
     $520 = (($db) + 12|0);
     $521 = HEAP32[$db>>2]|0;
     $522 = $512;
     $523 = $521;
     $524 = (($522) - ($523))|0;
     $525 = (($524|0) / 24)&-1;
     $526 = (($525) + 1)|0;
     $527 = ($526|0)<(0);
     if ($527) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $528 = $514;
     $529 = (($528) - ($523))|0;
     $530 = (($529|0) / 24)&-1;
     $531 = ($530>>>0)<(1073741823);
     if ($531) {
      $532 = $530 << 1;
      $533 = ($532>>>0)<($526>>>0);
      $534 = $533 ? $526 : $532;
      $$0$i$i$i115 = $534;
     } else {
      $$0$i$i$i115 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i115,$525,$520);
     $535 = (($__v$i$i395) + 8|0);
     $536 = HEAP32[$535>>2]|0;
     $537 = ($536|0)==(0|0);
     if (!($537)) {
      ;HEAP32[$536+0>>2]=HEAP32[$13+0>>2]|0;HEAP32[$536+4>>2]=HEAP32[$13+4>>2]|0;HEAP32[$536+8>>2]=HEAP32[$13+8>>2]|0;
      ;HEAP32[$13+0>>2]=0|0;HEAP32[$13+4>>2]=0|0;HEAP32[$13+8>>2]=0|0;
      $538 = (($536) + 12|0);
      ;HEAP32[$538+0>>2]=HEAP32[$510+0>>2]|0;HEAP32[$538+4>>2]=HEAP32[$510+4>>2]|0;HEAP32[$538+8>>2]=HEAP32[$510+8>>2]|0;
      ;HEAP32[$510+0>>2]=0|0;HEAP32[$510+4>>2]=0|0;HEAP32[$510+8>>2]=0|0;
     }
     $539 = (($536) + 24|0);
     HEAP32[$535>>2] = $539;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($13);
    $540 = (($first) + 2|0);
    $$0 = $540;
    STACKTOP = sp;return ($$0|0);
   } else if ((($474|0) == 113)) {
    HEAP8[$14>>0] = 20;
    $541 = (($14) + 1|0);
    dest=$541+0|0; src=49408+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $542 = (($14) + 11|0);
    HEAP8[$542>>0] = 0;
    $543 = (($14) + 12|0);
    ;HEAP32[$543+0>>2]=0|0;HEAP32[$543+4>>2]=0|0;HEAP32[$543+8>>2]=0|0;
    $544 = (($db) + 4|0);
    $545 = HEAP32[$544>>2]|0;
    $546 = (($db) + 8|0);
    $547 = HEAP32[$546>>2]|0;
    $548 = ($545>>>0)<($547>>>0);
    if ($548) {
     $549 = ($545|0)==(0|0);
     if ($549) {
      $552 = 0;
     } else {
      ;HEAP32[$545+0>>2]=HEAP32[$14+0>>2]|0;HEAP32[$545+4>>2]=HEAP32[$14+4>>2]|0;HEAP32[$545+8>>2]=HEAP32[$14+8>>2]|0;
      ;HEAP32[$14+0>>2]=0|0;HEAP32[$14+4>>2]=0|0;HEAP32[$14+8>>2]=0|0;
      $550 = (($545) + 12|0);
      ;HEAP32[$550+0>>2]=HEAP32[$543+0>>2]|0;HEAP32[$550+4>>2]=HEAP32[$543+4>>2]|0;HEAP32[$550+8>>2]=HEAP32[$543+8>>2]|0;
      ;HEAP32[$543+0>>2]=0|0;HEAP32[$543+4>>2]=0|0;HEAP32[$543+8>>2]=0|0;
      $$pre$i122 = HEAP32[$544>>2]|0;
      $552 = $$pre$i122;
     }
     $551 = (($552) + 24|0);
     HEAP32[$544>>2] = $551;
    } else {
     $553 = (($db) + 12|0);
     $554 = HEAP32[$db>>2]|0;
     $555 = $545;
     $556 = $554;
     $557 = (($555) - ($556))|0;
     $558 = (($557|0) / 24)&-1;
     $559 = (($558) + 1)|0;
     $560 = ($559|0)<(0);
     if ($560) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $561 = $547;
     $562 = (($561) - ($556))|0;
     $563 = (($562|0) / 24)&-1;
     $564 = ($563>>>0)<(1073741823);
     if ($564) {
      $565 = $563 << 1;
      $566 = ($565>>>0)<($559>>>0);
      $567 = $566 ? $559 : $565;
      $$0$i$i$i124 = $567;
     } else {
      $$0$i$i$i124 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i124,$558,$553);
     $568 = (($__v$i$i395) + 8|0);
     $569 = HEAP32[$568>>2]|0;
     $570 = ($569|0)==(0|0);
     if (!($570)) {
      ;HEAP32[$569+0>>2]=HEAP32[$14+0>>2]|0;HEAP32[$569+4>>2]=HEAP32[$14+4>>2]|0;HEAP32[$569+8>>2]=HEAP32[$14+8>>2]|0;
      ;HEAP32[$14+0>>2]=0|0;HEAP32[$14+4>>2]=0|0;HEAP32[$14+8>>2]=0|0;
      $571 = (($569) + 12|0);
      ;HEAP32[$571+0>>2]=HEAP32[$543+0>>2]|0;HEAP32[$571+4>>2]=HEAP32[$543+4>>2]|0;HEAP32[$571+8>>2]=HEAP32[$543+8>>2]|0;
      ;HEAP32[$543+0>>2]=0|0;HEAP32[$543+4>>2]=0|0;HEAP32[$543+8>>2]=0|0;
     }
     $572 = (($569) + 24|0);
     HEAP32[$568>>2] = $572;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($14);
    $573 = (($first) + 2|0);
    $$0 = $573;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 97:  {
   $52 = (($first) + 1|0);
   $53 = HEAP8[$52>>0]|0;
   $54 = $53 << 24 >> 24;
   switch ($54|0) {
   case 78:  {
    HEAP8[$2>>0] = 20;
    $121 = (($2) + 1|0);
    dest=$121+0|0; src=49192+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $122 = (($2) + 11|0);
    HEAP8[$122>>0] = 0;
    $123 = (($2) + 12|0);
    ;HEAP32[$123+0>>2]=0|0;HEAP32[$123+4>>2]=0|0;HEAP32[$123+8>>2]=0|0;
    $124 = (($db) + 4|0);
    $125 = HEAP32[$124>>2]|0;
    $126 = (($db) + 8|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = ($125>>>0)<($127>>>0);
    if ($128) {
     $129 = ($125|0)==(0|0);
     if ($129) {
      $132 = 0;
     } else {
      ;HEAP32[$125+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$125+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$125+8>>2]=HEAP32[$2+8>>2]|0;
      ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
      $130 = (($125) + 12|0);
      ;HEAP32[$130+0>>2]=HEAP32[$123+0>>2]|0;HEAP32[$130+4>>2]=HEAP32[$123+4>>2]|0;HEAP32[$130+8>>2]=HEAP32[$123+8>>2]|0;
      ;HEAP32[$123+0>>2]=0|0;HEAP32[$123+4>>2]=0|0;HEAP32[$123+8>>2]=0|0;
      $$pre$i15 = HEAP32[$124>>2]|0;
      $132 = $$pre$i15;
     }
     $131 = (($132) + 24|0);
     HEAP32[$124>>2] = $131;
    } else {
     $133 = (($db) + 12|0);
     $134 = HEAP32[$db>>2]|0;
     $135 = $125;
     $136 = $134;
     $137 = (($135) - ($136))|0;
     $138 = (($137|0) / 24)&-1;
     $139 = (($138) + 1)|0;
     $140 = ($139|0)<(0);
     if ($140) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $141 = $127;
     $142 = (($141) - ($136))|0;
     $143 = (($142|0) / 24)&-1;
     $144 = ($143>>>0)<(1073741823);
     if ($144) {
      $145 = $143 << 1;
      $146 = ($145>>>0)<($139>>>0);
      $147 = $146 ? $139 : $145;
      $$0$i$i$i17 = $147;
     } else {
      $$0$i$i$i17 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i17,$138,$133);
     $148 = (($__v$i$i395) + 8|0);
     $149 = HEAP32[$148>>2]|0;
     $150 = ($149|0)==(0|0);
     if (!($150)) {
      ;HEAP32[$149+0>>2]=HEAP32[$2+0>>2]|0;HEAP32[$149+4>>2]=HEAP32[$2+4>>2]|0;HEAP32[$149+8>>2]=HEAP32[$2+8>>2]|0;
      ;HEAP32[$2+0>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
      $151 = (($149) + 12|0);
      ;HEAP32[$151+0>>2]=HEAP32[$123+0>>2]|0;HEAP32[$151+4>>2]=HEAP32[$123+4>>2]|0;HEAP32[$151+8>>2]=HEAP32[$123+8>>2]|0;
      ;HEAP32[$123+0>>2]=0|0;HEAP32[$123+4>>2]=0|0;HEAP32[$123+8>>2]=0|0;
     }
     $152 = (($149) + 24|0);
     HEAP32[$148>>2] = $152;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($2);
    $153 = (($first) + 2|0);
    $$0 = $153;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 110: case 100:  {
    HEAP8[$1>>0] = 18;
    $88 = (($1) + 1|0);
    dest=$88+0|0; src=49176+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $89 = (($1) + 10|0);
    HEAP8[$89>>0] = 0;
    $90 = (($1) + 12|0);
    ;HEAP32[$90+0>>2]=0|0;HEAP32[$90+4>>2]=0|0;HEAP32[$90+8>>2]=0|0;
    $91 = (($db) + 4|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = (($db) + 8|0);
    $94 = HEAP32[$93>>2]|0;
    $95 = ($92>>>0)<($94>>>0);
    if ($95) {
     $96 = ($92|0)==(0|0);
     if ($96) {
      $99 = 0;
     } else {
      ;HEAP32[$92+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$92+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$92+8>>2]=HEAP32[$1+8>>2]|0;
      ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
      $97 = (($92) + 12|0);
      ;HEAP32[$97+0>>2]=HEAP32[$90+0>>2]|0;HEAP32[$97+4>>2]=HEAP32[$90+4>>2]|0;HEAP32[$97+8>>2]=HEAP32[$90+8>>2]|0;
      ;HEAP32[$90+0>>2]=0|0;HEAP32[$90+4>>2]=0|0;HEAP32[$90+8>>2]=0|0;
      $$pre$i6 = HEAP32[$91>>2]|0;
      $99 = $$pre$i6;
     }
     $98 = (($99) + 24|0);
     HEAP32[$91>>2] = $98;
    } else {
     $100 = (($db) + 12|0);
     $101 = HEAP32[$db>>2]|0;
     $102 = $92;
     $103 = $101;
     $104 = (($102) - ($103))|0;
     $105 = (($104|0) / 24)&-1;
     $106 = (($105) + 1)|0;
     $107 = ($106|0)<(0);
     if ($107) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $108 = $94;
     $109 = (($108) - ($103))|0;
     $110 = (($109|0) / 24)&-1;
     $111 = ($110>>>0)<(1073741823);
     if ($111) {
      $112 = $110 << 1;
      $113 = ($112>>>0)<($106>>>0);
      $114 = $113 ? $106 : $112;
      $$0$i$i$i8 = $114;
     } else {
      $$0$i$i$i8 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i8,$105,$100);
     $115 = (($__v$i$i395) + 8|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = ($116|0)==(0|0);
     if (!($117)) {
      ;HEAP32[$116+0>>2]=HEAP32[$1+0>>2]|0;HEAP32[$116+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$116+8>>2]=HEAP32[$1+8>>2]|0;
      ;HEAP32[$1+0>>2]=0|0;HEAP32[$1+4>>2]=0|0;HEAP32[$1+8>>2]=0|0;
      $118 = (($116) + 12|0);
      ;HEAP32[$118+0>>2]=HEAP32[$90+0>>2]|0;HEAP32[$118+4>>2]=HEAP32[$90+4>>2]|0;HEAP32[$118+8>>2]=HEAP32[$90+8>>2]|0;
      ;HEAP32[$90+0>>2]=0|0;HEAP32[$90+4>>2]=0|0;HEAP32[$90+8>>2]=0|0;
     }
     $119 = (($116) + 24|0);
     HEAP32[$115>>2] = $119;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($1);
    $120 = (($first) + 2|0);
    $$0 = $120;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 83:  {
    HEAP8[$3>>0] = 18;
    $154 = (($3) + 1|0);
    dest=$154+0|0; src=49208+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $155 = (($3) + 10|0);
    HEAP8[$155>>0] = 0;
    $156 = (($3) + 12|0);
    ;HEAP32[$156+0>>2]=0|0;HEAP32[$156+4>>2]=0|0;HEAP32[$156+8>>2]=0|0;
    $157 = (($db) + 4|0);
    $158 = HEAP32[$157>>2]|0;
    $159 = (($db) + 8|0);
    $160 = HEAP32[$159>>2]|0;
    $161 = ($158>>>0)<($160>>>0);
    if ($161) {
     $162 = ($158|0)==(0|0);
     if ($162) {
      $165 = 0;
     } else {
      ;HEAP32[$158+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$158+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$158+8>>2]=HEAP32[$3+8>>2]|0;
      ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
      $163 = (($158) + 12|0);
      ;HEAP32[$163+0>>2]=HEAP32[$156+0>>2]|0;HEAP32[$163+4>>2]=HEAP32[$156+4>>2]|0;HEAP32[$163+8>>2]=HEAP32[$156+8>>2]|0;
      ;HEAP32[$156+0>>2]=0|0;HEAP32[$156+4>>2]=0|0;HEAP32[$156+8>>2]=0|0;
      $$pre$i24 = HEAP32[$157>>2]|0;
      $165 = $$pre$i24;
     }
     $164 = (($165) + 24|0);
     HEAP32[$157>>2] = $164;
    } else {
     $166 = (($db) + 12|0);
     $167 = HEAP32[$db>>2]|0;
     $168 = $158;
     $169 = $167;
     $170 = (($168) - ($169))|0;
     $171 = (($170|0) / 24)&-1;
     $172 = (($171) + 1)|0;
     $173 = ($172|0)<(0);
     if ($173) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $174 = $160;
     $175 = (($174) - ($169))|0;
     $176 = (($175|0) / 24)&-1;
     $177 = ($176>>>0)<(1073741823);
     if ($177) {
      $178 = $176 << 1;
      $179 = ($178>>>0)<($172>>>0);
      $180 = $179 ? $172 : $178;
      $$0$i$i$i26 = $180;
     } else {
      $$0$i$i$i26 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i26,$171,$166);
     $181 = (($__v$i$i395) + 8|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = ($182|0)==(0|0);
     if (!($183)) {
      ;HEAP32[$182+0>>2]=HEAP32[$3+0>>2]|0;HEAP32[$182+4>>2]=HEAP32[$3+4>>2]|0;HEAP32[$182+8>>2]=HEAP32[$3+8>>2]|0;
      ;HEAP32[$3+0>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;
      $184 = (($182) + 12|0);
      ;HEAP32[$184+0>>2]=HEAP32[$156+0>>2]|0;HEAP32[$184+4>>2]=HEAP32[$156+4>>2]|0;HEAP32[$184+8>>2]=HEAP32[$156+8>>2]|0;
      ;HEAP32[$156+0>>2]=0|0;HEAP32[$156+4>>2]=0|0;HEAP32[$156+8>>2]=0|0;
     }
     $185 = (($182) + 24|0);
     HEAP32[$181>>2] = $185;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $186 = (($first) + 2|0);
    $$0 = $186;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 97:  {
    HEAP8[$0>>0] = 20;
    $55 = (($0) + 1|0);
    dest=$55+0|0; src=49160+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $56 = (($0) + 11|0);
    HEAP8[$56>>0] = 0;
    $57 = (($0) + 12|0);
    ;HEAP32[$57+0>>2]=0|0;HEAP32[$57+4>>2]=0|0;HEAP32[$57+8>>2]=0|0;
    $58 = (($db) + 4|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (($db) + 8|0);
    $61 = HEAP32[$60>>2]|0;
    $62 = ($59>>>0)<($61>>>0);
    if ($62) {
     $63 = ($59|0)==(0|0);
     if ($63) {
      $66 = 0;
     } else {
      ;HEAP32[$59+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$59+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$59+8>>2]=HEAP32[$0+8>>2]|0;
      ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
      $64 = (($59) + 12|0);
      ;HEAP32[$64+0>>2]=HEAP32[$57+0>>2]|0;HEAP32[$64+4>>2]=HEAP32[$57+4>>2]|0;HEAP32[$64+8>>2]=HEAP32[$57+8>>2]|0;
      ;HEAP32[$57+0>>2]=0|0;HEAP32[$57+4>>2]=0|0;HEAP32[$57+8>>2]=0|0;
      $$pre$i = HEAP32[$58>>2]|0;
      $66 = $$pre$i;
     }
     $65 = (($66) + 24|0);
     HEAP32[$58>>2] = $65;
    } else {
     $67 = (($db) + 12|0);
     $68 = HEAP32[$db>>2]|0;
     $69 = $59;
     $70 = $68;
     $71 = (($69) - ($70))|0;
     $72 = (($71|0) / 24)&-1;
     $73 = (($72) + 1)|0;
     $74 = ($73|0)<(0);
     if ($74) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $75 = $61;
     $76 = (($75) - ($70))|0;
     $77 = (($76|0) / 24)&-1;
     $78 = ($77>>>0)<(1073741823);
     if ($78) {
      $79 = $77 << 1;
      $80 = ($79>>>0)<($73>>>0);
      $81 = $80 ? $73 : $79;
      $$0$i$i$i = $81;
     } else {
      $$0$i$i$i = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i,$72,$67);
     $82 = (($__v$i$i395) + 8|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==(0|0);
     if (!($84)) {
      ;HEAP32[$83+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$83+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$83+8>>2]=HEAP32[$0+8>>2]|0;
      ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
      $85 = (($83) + 12|0);
      ;HEAP32[$85+0>>2]=HEAP32[$57+0>>2]|0;HEAP32[$85+4>>2]=HEAP32[$57+4>>2]|0;HEAP32[$85+8>>2]=HEAP32[$57+8>>2]|0;
      ;HEAP32[$57+0>>2]=0|0;HEAP32[$57+4>>2]=0|0;HEAP32[$57+8>>2]=0|0;
     }
     $86 = (($83) + 24|0);
     HEAP32[$82>>2] = $86;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
    $87 = (($first) + 2|0);
    $$0 = $87;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  case 103:  {
   $574 = (($first) + 1|0);
   $575 = HEAP8[$574>>0]|0;
   $576 = $575 << 24 >> 24;
   if ((($576|0) == 101)) {
    HEAP8[$15>>0] = 20;
    $577 = (($15) + 1|0);
    dest=$577+0|0; src=49424+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $578 = (($15) + 11|0);
    HEAP8[$578>>0] = 0;
    $579 = (($15) + 12|0);
    ;HEAP32[$579+0>>2]=0|0;HEAP32[$579+4>>2]=0|0;HEAP32[$579+8>>2]=0|0;
    $580 = (($db) + 4|0);
    $581 = HEAP32[$580>>2]|0;
    $582 = (($db) + 8|0);
    $583 = HEAP32[$582>>2]|0;
    $584 = ($581>>>0)<($583>>>0);
    if ($584) {
     $585 = ($581|0)==(0|0);
     if ($585) {
      $588 = 0;
     } else {
      ;HEAP32[$581+0>>2]=HEAP32[$15+0>>2]|0;HEAP32[$581+4>>2]=HEAP32[$15+4>>2]|0;HEAP32[$581+8>>2]=HEAP32[$15+8>>2]|0;
      ;HEAP32[$15+0>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;
      $586 = (($581) + 12|0);
      ;HEAP32[$586+0>>2]=HEAP32[$579+0>>2]|0;HEAP32[$586+4>>2]=HEAP32[$579+4>>2]|0;HEAP32[$586+8>>2]=HEAP32[$579+8>>2]|0;
      ;HEAP32[$579+0>>2]=0|0;HEAP32[$579+4>>2]=0|0;HEAP32[$579+8>>2]=0|0;
      $$pre$i131 = HEAP32[$580>>2]|0;
      $588 = $$pre$i131;
     }
     $587 = (($588) + 24|0);
     HEAP32[$580>>2] = $587;
    } else {
     $589 = (($db) + 12|0);
     $590 = HEAP32[$db>>2]|0;
     $591 = $581;
     $592 = $590;
     $593 = (($591) - ($592))|0;
     $594 = (($593|0) / 24)&-1;
     $595 = (($594) + 1)|0;
     $596 = ($595|0)<(0);
     if ($596) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $597 = $583;
     $598 = (($597) - ($592))|0;
     $599 = (($598|0) / 24)&-1;
     $600 = ($599>>>0)<(1073741823);
     if ($600) {
      $601 = $599 << 1;
      $602 = ($601>>>0)<($595>>>0);
      $603 = $602 ? $595 : $601;
      $$0$i$i$i133 = $603;
     } else {
      $$0$i$i$i133 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i133,$594,$589);
     $604 = (($__v$i$i395) + 8|0);
     $605 = HEAP32[$604>>2]|0;
     $606 = ($605|0)==(0|0);
     if (!($606)) {
      ;HEAP32[$605+0>>2]=HEAP32[$15+0>>2]|0;HEAP32[$605+4>>2]=HEAP32[$15+4>>2]|0;HEAP32[$605+8>>2]=HEAP32[$15+8>>2]|0;
      ;HEAP32[$15+0>>2]=0|0;HEAP32[$15+4>>2]=0|0;HEAP32[$15+8>>2]=0|0;
      $607 = (($605) + 12|0);
      ;HEAP32[$607+0>>2]=HEAP32[$579+0>>2]|0;HEAP32[$607+4>>2]=HEAP32[$579+4>>2]|0;HEAP32[$607+8>>2]=HEAP32[$579+8>>2]|0;
      ;HEAP32[$579+0>>2]=0|0;HEAP32[$579+4>>2]=0|0;HEAP32[$579+8>>2]=0|0;
     }
     $608 = (($605) + 24|0);
     HEAP32[$604>>2] = $608;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($15);
    $609 = (($first) + 2|0);
    $$0 = $609;
    STACKTOP = sp;return ($$0|0);
   } else if ((($576|0) == 116)) {
    HEAP8[$16>>0] = 18;
    $610 = (($16) + 1|0);
    dest=$610+0|0; src=49440+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $611 = (($16) + 10|0);
    HEAP8[$611>>0] = 0;
    $612 = (($16) + 12|0);
    ;HEAP32[$612+0>>2]=0|0;HEAP32[$612+4>>2]=0|0;HEAP32[$612+8>>2]=0|0;
    $613 = (($db) + 4|0);
    $614 = HEAP32[$613>>2]|0;
    $615 = (($db) + 8|0);
    $616 = HEAP32[$615>>2]|0;
    $617 = ($614>>>0)<($616>>>0);
    if ($617) {
     $618 = ($614|0)==(0|0);
     if ($618) {
      $621 = 0;
     } else {
      ;HEAP32[$614+0>>2]=HEAP32[$16+0>>2]|0;HEAP32[$614+4>>2]=HEAP32[$16+4>>2]|0;HEAP32[$614+8>>2]=HEAP32[$16+8>>2]|0;
      ;HEAP32[$16+0>>2]=0|0;HEAP32[$16+4>>2]=0|0;HEAP32[$16+8>>2]=0|0;
      $619 = (($614) + 12|0);
      ;HEAP32[$619+0>>2]=HEAP32[$612+0>>2]|0;HEAP32[$619+4>>2]=HEAP32[$612+4>>2]|0;HEAP32[$619+8>>2]=HEAP32[$612+8>>2]|0;
      ;HEAP32[$612+0>>2]=0|0;HEAP32[$612+4>>2]=0|0;HEAP32[$612+8>>2]=0|0;
      $$pre$i140 = HEAP32[$613>>2]|0;
      $621 = $$pre$i140;
     }
     $620 = (($621) + 24|0);
     HEAP32[$613>>2] = $620;
    } else {
     $622 = (($db) + 12|0);
     $623 = HEAP32[$db>>2]|0;
     $624 = $614;
     $625 = $623;
     $626 = (($624) - ($625))|0;
     $627 = (($626|0) / 24)&-1;
     $628 = (($627) + 1)|0;
     $629 = ($628|0)<(0);
     if ($629) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $630 = $616;
     $631 = (($630) - ($625))|0;
     $632 = (($631|0) / 24)&-1;
     $633 = ($632>>>0)<(1073741823);
     if ($633) {
      $634 = $632 << 1;
      $635 = ($634>>>0)<($628>>>0);
      $636 = $635 ? $628 : $634;
      $$0$i$i$i142 = $636;
     } else {
      $$0$i$i$i142 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i142,$627,$622);
     $637 = (($__v$i$i395) + 8|0);
     $638 = HEAP32[$637>>2]|0;
     $639 = ($638|0)==(0|0);
     if (!($639)) {
      ;HEAP32[$638+0>>2]=HEAP32[$16+0>>2]|0;HEAP32[$638+4>>2]=HEAP32[$16+4>>2]|0;HEAP32[$638+8>>2]=HEAP32[$16+8>>2]|0;
      ;HEAP32[$16+0>>2]=0|0;HEAP32[$16+4>>2]=0|0;HEAP32[$16+8>>2]=0|0;
      $640 = (($638) + 12|0);
      ;HEAP32[$640+0>>2]=HEAP32[$612+0>>2]|0;HEAP32[$640+4>>2]=HEAP32[$612+4>>2]|0;HEAP32[$640+8>>2]=HEAP32[$612+8>>2]|0;
      ;HEAP32[$612+0>>2]=0|0;HEAP32[$612+4>>2]=0|0;HEAP32[$612+8>>2]=0|0;
     }
     $641 = (($638) + 24|0);
     HEAP32[$637>>2] = $641;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($16);
    $642 = (($first) + 2|0);
    $$0 = $642;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 105:  {
   $643 = (($first) + 1|0);
   $644 = HEAP8[$643>>0]|0;
   $645 = ($644<<24>>24)==(120);
   if (!($645)) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   HEAP8[$17>>0] = 20;
   $646 = (($17) + 1|0);
   dest=$646+0|0; src=49456+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $647 = (($17) + 11|0);
   HEAP8[$647>>0] = 0;
   $648 = (($17) + 12|0);
   ;HEAP32[$648+0>>2]=0|0;HEAP32[$648+4>>2]=0|0;HEAP32[$648+8>>2]=0|0;
   $649 = (($db) + 4|0);
   $650 = HEAP32[$649>>2]|0;
   $651 = (($db) + 8|0);
   $652 = HEAP32[$651>>2]|0;
   $653 = ($650>>>0)<($652>>>0);
   if ($653) {
    $654 = ($650|0)==(0|0);
    if ($654) {
     $657 = 0;
    } else {
     ;HEAP32[$650+0>>2]=HEAP32[$17+0>>2]|0;HEAP32[$650+4>>2]=HEAP32[$17+4>>2]|0;HEAP32[$650+8>>2]=HEAP32[$17+8>>2]|0;
     ;HEAP32[$17+0>>2]=0|0;HEAP32[$17+4>>2]=0|0;HEAP32[$17+8>>2]=0|0;
     $655 = (($650) + 12|0);
     ;HEAP32[$655+0>>2]=HEAP32[$648+0>>2]|0;HEAP32[$655+4>>2]=HEAP32[$648+4>>2]|0;HEAP32[$655+8>>2]=HEAP32[$648+8>>2]|0;
     ;HEAP32[$648+0>>2]=0|0;HEAP32[$648+4>>2]=0|0;HEAP32[$648+8>>2]=0|0;
     $$pre$i149 = HEAP32[$649>>2]|0;
     $657 = $$pre$i149;
    }
    $656 = (($657) + 24|0);
    HEAP32[$649>>2] = $656;
   } else {
    $658 = (($db) + 12|0);
    $659 = HEAP32[$db>>2]|0;
    $660 = $650;
    $661 = $659;
    $662 = (($660) - ($661))|0;
    $663 = (($662|0) / 24)&-1;
    $664 = (($663) + 1)|0;
    $665 = ($664|0)<(0);
    if ($665) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $666 = $652;
    $667 = (($666) - ($661))|0;
    $668 = (($667|0) / 24)&-1;
    $669 = ($668>>>0)<(1073741823);
    if ($669) {
     $670 = $668 << 1;
     $671 = ($670>>>0)<($664>>>0);
     $672 = $671 ? $664 : $670;
     $$0$i$i$i151 = $672;
    } else {
     $$0$i$i$i151 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i151,$663,$658);
    $673 = (($__v$i$i395) + 8|0);
    $674 = HEAP32[$673>>2]|0;
    $675 = ($674|0)==(0|0);
    if (!($675)) {
     ;HEAP32[$674+0>>2]=HEAP32[$17+0>>2]|0;HEAP32[$674+4>>2]=HEAP32[$17+4>>2]|0;HEAP32[$674+8>>2]=HEAP32[$17+8>>2]|0;
     ;HEAP32[$17+0>>2]=0|0;HEAP32[$17+4>>2]=0|0;HEAP32[$17+8>>2]=0|0;
     $676 = (($674) + 12|0);
     ;HEAP32[$676+0>>2]=HEAP32[$648+0>>2]|0;HEAP32[$676+4>>2]=HEAP32[$648+4>>2]|0;HEAP32[$676+8>>2]=HEAP32[$648+8>>2]|0;
     ;HEAP32[$648+0>>2]=0|0;HEAP32[$648+4>>2]=0|0;HEAP32[$648+8>>2]=0|0;
    }
    $677 = (($674) + 24|0);
    HEAP32[$673>>2] = $677;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($17);
   $678 = (($first) + 2|0);
   $$0 = $678;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 108:  {
   $679 = (($first) + 1|0);
   $680 = HEAP8[$679>>0]|0;
   $681 = $680 << 24 >> 24;
   switch ($681|0) {
   case 115:  {
    HEAP8[$19>>0] = 20;
    $723 = (($19) + 1|0);
    dest=$723+0|0; src=49504+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $724 = (($19) + 11|0);
    HEAP8[$724>>0] = 0;
    $725 = (($19) + 12|0);
    ;HEAP32[$725+0>>2]=0|0;HEAP32[$725+4>>2]=0|0;HEAP32[$725+8>>2]=0|0;
    $726 = (($db) + 4|0);
    $727 = HEAP32[$726>>2]|0;
    $728 = (($db) + 8|0);
    $729 = HEAP32[$728>>2]|0;
    $730 = ($727>>>0)<($729>>>0);
    if ($730) {
     $731 = ($727|0)==(0|0);
     if ($731) {
      $734 = 0;
     } else {
      ;HEAP32[$727+0>>2]=HEAP32[$19+0>>2]|0;HEAP32[$727+4>>2]=HEAP32[$19+4>>2]|0;HEAP32[$727+8>>2]=HEAP32[$19+8>>2]|0;
      ;HEAP32[$19+0>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;
      $732 = (($727) + 12|0);
      ;HEAP32[$732+0>>2]=HEAP32[$725+0>>2]|0;HEAP32[$732+4>>2]=HEAP32[$725+4>>2]|0;HEAP32[$732+8>>2]=HEAP32[$725+8>>2]|0;
      ;HEAP32[$725+0>>2]=0|0;HEAP32[$725+4>>2]=0|0;HEAP32[$725+8>>2]=0|0;
      $$pre$i167 = HEAP32[$726>>2]|0;
      $734 = $$pre$i167;
     }
     $733 = (($734) + 24|0);
     HEAP32[$726>>2] = $733;
    } else {
     $735 = (($db) + 12|0);
     $736 = HEAP32[$db>>2]|0;
     $737 = $727;
     $738 = $736;
     $739 = (($737) - ($738))|0;
     $740 = (($739|0) / 24)&-1;
     $741 = (($740) + 1)|0;
     $742 = ($741|0)<(0);
     if ($742) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $743 = $729;
     $744 = (($743) - ($738))|0;
     $745 = (($744|0) / 24)&-1;
     $746 = ($745>>>0)<(1073741823);
     if ($746) {
      $747 = $745 << 1;
      $748 = ($747>>>0)<($741>>>0);
      $749 = $748 ? $741 : $747;
      $$0$i$i$i169 = $749;
     } else {
      $$0$i$i$i169 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i169,$740,$735);
     $750 = (($__v$i$i395) + 8|0);
     $751 = HEAP32[$750>>2]|0;
     $752 = ($751|0)==(0|0);
     if (!($752)) {
      ;HEAP32[$751+0>>2]=HEAP32[$19+0>>2]|0;HEAP32[$751+4>>2]=HEAP32[$19+4>>2]|0;HEAP32[$751+8>>2]=HEAP32[$19+8>>2]|0;
      ;HEAP32[$19+0>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;
      $753 = (($751) + 12|0);
      ;HEAP32[$753+0>>2]=HEAP32[$725+0>>2]|0;HEAP32[$753+4>>2]=HEAP32[$725+4>>2]|0;HEAP32[$753+8>>2]=HEAP32[$725+8>>2]|0;
      ;HEAP32[$725+0>>2]=0|0;HEAP32[$725+4>>2]=0|0;HEAP32[$725+8>>2]=0|0;
     }
     $754 = (($751) + 24|0);
     HEAP32[$750>>2] = $754;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($19);
    $755 = (($first) + 2|0);
    $$0 = $755;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 101:  {
    HEAP8[$18>>0] = 20;
    $682 = (($18) + 1|0);
    dest=$682+0|0; src=49472+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $683 = (($18) + 11|0);
    HEAP8[$683>>0] = 0;
    $684 = (($18) + 12|0);
    ;HEAP32[$684+0>>2]=0|0;HEAP32[$684+4>>2]=0|0;HEAP32[$684+8>>2]=0|0;
    $685 = (($db) + 4|0);
    $686 = HEAP32[$685>>2]|0;
    $687 = (($db) + 8|0);
    $688 = HEAP32[$687>>2]|0;
    $689 = ($686>>>0)<($688>>>0);
    if ($689) {
     $690 = ($686|0)==(0|0);
     if ($690) {
      $693 = 0;
     } else {
      ;HEAP32[$686+0>>2]=HEAP32[$18+0>>2]|0;HEAP32[$686+4>>2]=HEAP32[$18+4>>2]|0;HEAP32[$686+8>>2]=HEAP32[$18+8>>2]|0;
      ;HEAP32[$18+0>>2]=0|0;HEAP32[$18+4>>2]=0|0;HEAP32[$18+8>>2]=0|0;
      $691 = (($686) + 12|0);
      ;HEAP32[$691+0>>2]=HEAP32[$684+0>>2]|0;HEAP32[$691+4>>2]=HEAP32[$684+4>>2]|0;HEAP32[$691+8>>2]=HEAP32[$684+8>>2]|0;
      ;HEAP32[$684+0>>2]=0|0;HEAP32[$684+4>>2]=0|0;HEAP32[$684+8>>2]=0|0;
      $$pre$i158 = HEAP32[$685>>2]|0;
      $693 = $$pre$i158;
     }
     $692 = (($693) + 24|0);
     HEAP32[$685>>2] = $692;
    } else {
     $694 = (($db) + 12|0);
     $695 = HEAP32[$db>>2]|0;
     $696 = $686;
     $697 = $695;
     $698 = (($696) - ($697))|0;
     $699 = (($698|0) / 24)&-1;
     $700 = (($699) + 1)|0;
     $701 = ($700|0)<(0);
     if ($701) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $702 = $688;
     $703 = (($702) - ($697))|0;
     $704 = (($703|0) / 24)&-1;
     $705 = ($704>>>0)<(1073741823);
     if ($705) {
      $706 = $704 << 1;
      $707 = ($706>>>0)<($700>>>0);
      $708 = $707 ? $700 : $706;
      $$0$i$i$i160 = $708;
     } else {
      $$0$i$i$i160 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i160,$699,$694);
     $709 = (($__v$i$i395) + 8|0);
     $710 = HEAP32[$709>>2]|0;
     $711 = ($710|0)==(0|0);
     if (!($711)) {
      ;HEAP32[$710+0>>2]=HEAP32[$18+0>>2]|0;HEAP32[$710+4>>2]=HEAP32[$18+4>>2]|0;HEAP32[$710+8>>2]=HEAP32[$18+8>>2]|0;
      ;HEAP32[$18+0>>2]=0|0;HEAP32[$18+4>>2]=0|0;HEAP32[$18+8>>2]=0|0;
      $712 = (($710) + 12|0);
      ;HEAP32[$712+0>>2]=HEAP32[$684+0>>2]|0;HEAP32[$712+4>>2]=HEAP32[$684+4>>2]|0;HEAP32[$712+8>>2]=HEAP32[$684+8>>2]|0;
      ;HEAP32[$684+0>>2]=0|0;HEAP32[$684+4>>2]=0|0;HEAP32[$684+8>>2]=0|0;
     }
     $713 = (($710) + 24|0);
     HEAP32[$709>>2] = $713;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($18);
    $714 = (($first) + 2|0);
    $$0 = $714;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 105:  {
    $715 = (($first) + 2|0);
    $716 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($715,$last,$db)|0);
    $717 = ($716|0)==($715|0);
    if ($717) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $718 = HEAP32[$db>>2]|0;
    $719 = (($db) + 4|0);
    $720 = HEAP32[$719>>2]|0;
    $721 = ($718|0)==($720|0);
    if ($721) {
     $$0 = $first;
     STACKTOP = sp;return ($$0|0);
    }
    $722 = (($720) + -24|0);
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($722,0,49488,11)|0);
    $$0 = $716;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 83:  {
    $756 = (_malloc(16)|0);
    $757 = (($20) + 8|0);
    HEAP32[$757>>2] = $756;
    HEAP32[$20>>2] = 17;
    $758 = (($20) + 4|0);
    HEAP32[$758>>2] = 11;
    dest=$756+0|0; src=49520+0|0; stop=dest+11|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $759 = (($756) + 11|0);
    HEAP8[$759>>0] = 0;
    $760 = (($20) + 12|0);
    ;HEAP32[$760+0>>2]=0|0;HEAP32[$760+4>>2]=0|0;HEAP32[$760+8>>2]=0|0;
    $761 = (($db) + 4|0);
    $762 = HEAP32[$761>>2]|0;
    $763 = (($db) + 8|0);
    $764 = HEAP32[$763>>2]|0;
    $765 = ($762>>>0)<($764>>>0);
    if ($765) {
     $766 = ($762|0)==(0|0);
     if ($766) {
      $769 = 0;
     } else {
      ;HEAP32[$762+0>>2]=HEAP32[$20+0>>2]|0;HEAP32[$762+4>>2]=HEAP32[$20+4>>2]|0;HEAP32[$762+8>>2]=HEAP32[$20+8>>2]|0;
      ;HEAP32[$20+0>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;
      $767 = (($762) + 12|0);
      ;HEAP32[$767+0>>2]=HEAP32[$760+0>>2]|0;HEAP32[$767+4>>2]=HEAP32[$760+4>>2]|0;HEAP32[$767+8>>2]=HEAP32[$760+8>>2]|0;
      ;HEAP32[$760+0>>2]=0|0;HEAP32[$760+4>>2]=0|0;HEAP32[$760+8>>2]=0|0;
      $$pre$i175 = HEAP32[$761>>2]|0;
      $769 = $$pre$i175;
     }
     $768 = (($769) + 24|0);
     HEAP32[$761>>2] = $768;
    } else {
     $770 = (($db) + 12|0);
     $771 = HEAP32[$db>>2]|0;
     $772 = $762;
     $773 = $771;
     $774 = (($772) - ($773))|0;
     $775 = (($774|0) / 24)&-1;
     $776 = (($775) + 1)|0;
     $777 = ($776|0)<(0);
     if ($777) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $778 = $764;
     $779 = (($778) - ($773))|0;
     $780 = (($779|0) / 24)&-1;
     $781 = ($780>>>0)<(1073741823);
     if ($781) {
      $782 = $780 << 1;
      $783 = ($782>>>0)<($776>>>0);
      $784 = $783 ? $776 : $782;
      $$0$i$i$i177 = $784;
     } else {
      $$0$i$i$i177 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i177,$775,$770);
     $785 = (($__v$i$i395) + 8|0);
     $786 = HEAP32[$785>>2]|0;
     $787 = ($786|0)==(0|0);
     if (!($787)) {
      ;HEAP32[$786+0>>2]=HEAP32[$20+0>>2]|0;HEAP32[$786+4>>2]=HEAP32[$20+4>>2]|0;HEAP32[$786+8>>2]=HEAP32[$20+8>>2]|0;
      ;HEAP32[$20+0>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;
      $788 = (($786) + 12|0);
      ;HEAP32[$788+0>>2]=HEAP32[$760+0>>2]|0;HEAP32[$788+4>>2]=HEAP32[$760+4>>2]|0;HEAP32[$788+8>>2]=HEAP32[$760+8>>2]|0;
      ;HEAP32[$760+0>>2]=0|0;HEAP32[$760+4>>2]=0|0;HEAP32[$760+8>>2]=0|0;
     }
     $789 = (($786) + 24|0);
     HEAP32[$785>>2] = $789;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($20);
    $790 = (($first) + 2|0);
    $$0 = $790;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 116:  {
    HEAP8[$21>>0] = 18;
    $791 = (($21) + 1|0);
    dest=$791+0|0; src=49536+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $792 = (($21) + 10|0);
    HEAP8[$792>>0] = 0;
    $793 = (($21) + 12|0);
    ;HEAP32[$793+0>>2]=0|0;HEAP32[$793+4>>2]=0|0;HEAP32[$793+8>>2]=0|0;
    $794 = (($db) + 4|0);
    $795 = HEAP32[$794>>2]|0;
    $796 = (($db) + 8|0);
    $797 = HEAP32[$796>>2]|0;
    $798 = ($795>>>0)<($797>>>0);
    if ($798) {
     $799 = ($795|0)==(0|0);
     if ($799) {
      $802 = 0;
     } else {
      ;HEAP32[$795+0>>2]=HEAP32[$21+0>>2]|0;HEAP32[$795+4>>2]=HEAP32[$21+4>>2]|0;HEAP32[$795+8>>2]=HEAP32[$21+8>>2]|0;
      ;HEAP32[$21+0>>2]=0|0;HEAP32[$21+4>>2]=0|0;HEAP32[$21+8>>2]=0|0;
      $800 = (($795) + 12|0);
      ;HEAP32[$800+0>>2]=HEAP32[$793+0>>2]|0;HEAP32[$800+4>>2]=HEAP32[$793+4>>2]|0;HEAP32[$800+8>>2]=HEAP32[$793+8>>2]|0;
      ;HEAP32[$793+0>>2]=0|0;HEAP32[$793+4>>2]=0|0;HEAP32[$793+8>>2]=0|0;
      $$pre$i184 = HEAP32[$794>>2]|0;
      $802 = $$pre$i184;
     }
     $801 = (($802) + 24|0);
     HEAP32[$794>>2] = $801;
    } else {
     $803 = (($db) + 12|0);
     $804 = HEAP32[$db>>2]|0;
     $805 = $795;
     $806 = $804;
     $807 = (($805) - ($806))|0;
     $808 = (($807|0) / 24)&-1;
     $809 = (($808) + 1)|0;
     $810 = ($809|0)<(0);
     if ($810) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $811 = $797;
     $812 = (($811) - ($806))|0;
     $813 = (($812|0) / 24)&-1;
     $814 = ($813>>>0)<(1073741823);
     if ($814) {
      $815 = $813 << 1;
      $816 = ($815>>>0)<($809>>>0);
      $817 = $816 ? $809 : $815;
      $$0$i$i$i186 = $817;
     } else {
      $$0$i$i$i186 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i186,$808,$803);
     $818 = (($__v$i$i395) + 8|0);
     $819 = HEAP32[$818>>2]|0;
     $820 = ($819|0)==(0|0);
     if (!($820)) {
      ;HEAP32[$819+0>>2]=HEAP32[$21+0>>2]|0;HEAP32[$819+4>>2]=HEAP32[$21+4>>2]|0;HEAP32[$819+8>>2]=HEAP32[$21+8>>2]|0;
      ;HEAP32[$21+0>>2]=0|0;HEAP32[$21+4>>2]=0|0;HEAP32[$21+8>>2]=0|0;
      $821 = (($819) + 12|0);
      ;HEAP32[$821+0>>2]=HEAP32[$793+0>>2]|0;HEAP32[$821+4>>2]=HEAP32[$793+4>>2]|0;HEAP32[$821+8>>2]=HEAP32[$793+8>>2]|0;
      ;HEAP32[$793+0>>2]=0|0;HEAP32[$793+4>>2]=0|0;HEAP32[$793+8>>2]=0|0;
     }
     $822 = (($819) + 24|0);
     HEAP32[$818>>2] = $822;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($21);
    $823 = (($first) + 2|0);
    $$0 = $823;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  case 109:  {
   $824 = (($first) + 1|0);
   $825 = HEAP8[$824>>0]|0;
   $826 = $825 << 24 >> 24;
   switch ($826|0) {
   case 105:  {
    HEAP8[$22>>0] = 18;
    $827 = (($22) + 1|0);
    dest=$827+0|0; src=49552+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $828 = (($22) + 10|0);
    HEAP8[$828>>0] = 0;
    $829 = (($22) + 12|0);
    ;HEAP32[$829+0>>2]=0|0;HEAP32[$829+4>>2]=0|0;HEAP32[$829+8>>2]=0|0;
    $830 = (($db) + 4|0);
    $831 = HEAP32[$830>>2]|0;
    $832 = (($db) + 8|0);
    $833 = HEAP32[$832>>2]|0;
    $834 = ($831>>>0)<($833>>>0);
    if ($834) {
     $835 = ($831|0)==(0|0);
     if ($835) {
      $838 = 0;
     } else {
      ;HEAP32[$831+0>>2]=HEAP32[$22+0>>2]|0;HEAP32[$831+4>>2]=HEAP32[$22+4>>2]|0;HEAP32[$831+8>>2]=HEAP32[$22+8>>2]|0;
      ;HEAP32[$22+0>>2]=0|0;HEAP32[$22+4>>2]=0|0;HEAP32[$22+8>>2]=0|0;
      $836 = (($831) + 12|0);
      ;HEAP32[$836+0>>2]=HEAP32[$829+0>>2]|0;HEAP32[$836+4>>2]=HEAP32[$829+4>>2]|0;HEAP32[$836+8>>2]=HEAP32[$829+8>>2]|0;
      ;HEAP32[$829+0>>2]=0|0;HEAP32[$829+4>>2]=0|0;HEAP32[$829+8>>2]=0|0;
      $$pre$i193 = HEAP32[$830>>2]|0;
      $838 = $$pre$i193;
     }
     $837 = (($838) + 24|0);
     HEAP32[$830>>2] = $837;
    } else {
     $839 = (($db) + 12|0);
     $840 = HEAP32[$db>>2]|0;
     $841 = $831;
     $842 = $840;
     $843 = (($841) - ($842))|0;
     $844 = (($843|0) / 24)&-1;
     $845 = (($844) + 1)|0;
     $846 = ($845|0)<(0);
     if ($846) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $847 = $833;
     $848 = (($847) - ($842))|0;
     $849 = (($848|0) / 24)&-1;
     $850 = ($849>>>0)<(1073741823);
     if ($850) {
      $851 = $849 << 1;
      $852 = ($851>>>0)<($845>>>0);
      $853 = $852 ? $845 : $851;
      $$0$i$i$i195 = $853;
     } else {
      $$0$i$i$i195 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i195,$844,$839);
     $854 = (($__v$i$i395) + 8|0);
     $855 = HEAP32[$854>>2]|0;
     $856 = ($855|0)==(0|0);
     if (!($856)) {
      ;HEAP32[$855+0>>2]=HEAP32[$22+0>>2]|0;HEAP32[$855+4>>2]=HEAP32[$22+4>>2]|0;HEAP32[$855+8>>2]=HEAP32[$22+8>>2]|0;
      ;HEAP32[$22+0>>2]=0|0;HEAP32[$22+4>>2]=0|0;HEAP32[$22+8>>2]=0|0;
      $857 = (($855) + 12|0);
      ;HEAP32[$857+0>>2]=HEAP32[$829+0>>2]|0;HEAP32[$857+4>>2]=HEAP32[$829+4>>2]|0;HEAP32[$857+8>>2]=HEAP32[$829+8>>2]|0;
      ;HEAP32[$829+0>>2]=0|0;HEAP32[$829+4>>2]=0|0;HEAP32[$829+8>>2]=0|0;
     }
     $858 = (($855) + 24|0);
     HEAP32[$854>>2] = $858;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($22);
    $859 = (($first) + 2|0);
    $$0 = $859;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 73:  {
    HEAP8[$23>>0] = 20;
    $860 = (($23) + 1|0);
    dest=$860+0|0; src=49568+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $861 = (($23) + 11|0);
    HEAP8[$861>>0] = 0;
    $862 = (($23) + 12|0);
    ;HEAP32[$862+0>>2]=0|0;HEAP32[$862+4>>2]=0|0;HEAP32[$862+8>>2]=0|0;
    $863 = (($db) + 4|0);
    $864 = HEAP32[$863>>2]|0;
    $865 = (($db) + 8|0);
    $866 = HEAP32[$865>>2]|0;
    $867 = ($864>>>0)<($866>>>0);
    if ($867) {
     $868 = ($864|0)==(0|0);
     if ($868) {
      $871 = 0;
     } else {
      ;HEAP32[$864+0>>2]=HEAP32[$23+0>>2]|0;HEAP32[$864+4>>2]=HEAP32[$23+4>>2]|0;HEAP32[$864+8>>2]=HEAP32[$23+8>>2]|0;
      ;HEAP32[$23+0>>2]=0|0;HEAP32[$23+4>>2]=0|0;HEAP32[$23+8>>2]=0|0;
      $869 = (($864) + 12|0);
      ;HEAP32[$869+0>>2]=HEAP32[$862+0>>2]|0;HEAP32[$869+4>>2]=HEAP32[$862+4>>2]|0;HEAP32[$869+8>>2]=HEAP32[$862+8>>2]|0;
      ;HEAP32[$862+0>>2]=0|0;HEAP32[$862+4>>2]=0|0;HEAP32[$862+8>>2]=0|0;
      $$pre$i202 = HEAP32[$863>>2]|0;
      $871 = $$pre$i202;
     }
     $870 = (($871) + 24|0);
     HEAP32[$863>>2] = $870;
    } else {
     $872 = (($db) + 12|0);
     $873 = HEAP32[$db>>2]|0;
     $874 = $864;
     $875 = $873;
     $876 = (($874) - ($875))|0;
     $877 = (($876|0) / 24)&-1;
     $878 = (($877) + 1)|0;
     $879 = ($878|0)<(0);
     if ($879) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $880 = $866;
     $881 = (($880) - ($875))|0;
     $882 = (($881|0) / 24)&-1;
     $883 = ($882>>>0)<(1073741823);
     if ($883) {
      $884 = $882 << 1;
      $885 = ($884>>>0)<($878>>>0);
      $886 = $885 ? $878 : $884;
      $$0$i$i$i204 = $886;
     } else {
      $$0$i$i$i204 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i204,$877,$872);
     $887 = (($__v$i$i395) + 8|0);
     $888 = HEAP32[$887>>2]|0;
     $889 = ($888|0)==(0|0);
     if (!($889)) {
      ;HEAP32[$888+0>>2]=HEAP32[$23+0>>2]|0;HEAP32[$888+4>>2]=HEAP32[$23+4>>2]|0;HEAP32[$888+8>>2]=HEAP32[$23+8>>2]|0;
      ;HEAP32[$23+0>>2]=0|0;HEAP32[$23+4>>2]=0|0;HEAP32[$23+8>>2]=0|0;
      $890 = (($888) + 12|0);
      ;HEAP32[$890+0>>2]=HEAP32[$862+0>>2]|0;HEAP32[$890+4>>2]=HEAP32[$862+4>>2]|0;HEAP32[$890+8>>2]=HEAP32[$862+8>>2]|0;
      ;HEAP32[$862+0>>2]=0|0;HEAP32[$862+4>>2]=0|0;HEAP32[$862+8>>2]=0|0;
     }
     $891 = (($888) + 24|0);
     HEAP32[$887>>2] = $891;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($23);
    $892 = (($first) + 2|0);
    $$0 = $892;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 108:  {
    HEAP8[$24>>0] = 18;
    $893 = (($24) + 1|0);
    dest=$893+0|0; src=49312+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $894 = (($24) + 10|0);
    HEAP8[$894>>0] = 0;
    $895 = (($24) + 12|0);
    ;HEAP32[$895+0>>2]=0|0;HEAP32[$895+4>>2]=0|0;HEAP32[$895+8>>2]=0|0;
    $896 = (($db) + 4|0);
    $897 = HEAP32[$896>>2]|0;
    $898 = (($db) + 8|0);
    $899 = HEAP32[$898>>2]|0;
    $900 = ($897>>>0)<($899>>>0);
    if ($900) {
     $901 = ($897|0)==(0|0);
     if ($901) {
      $904 = 0;
     } else {
      ;HEAP32[$897+0>>2]=HEAP32[$24+0>>2]|0;HEAP32[$897+4>>2]=HEAP32[$24+4>>2]|0;HEAP32[$897+8>>2]=HEAP32[$24+8>>2]|0;
      ;HEAP32[$24+0>>2]=0|0;HEAP32[$24+4>>2]=0|0;HEAP32[$24+8>>2]=0|0;
      $902 = (($897) + 12|0);
      ;HEAP32[$902+0>>2]=HEAP32[$895+0>>2]|0;HEAP32[$902+4>>2]=HEAP32[$895+4>>2]|0;HEAP32[$902+8>>2]=HEAP32[$895+8>>2]|0;
      ;HEAP32[$895+0>>2]=0|0;HEAP32[$895+4>>2]=0|0;HEAP32[$895+8>>2]=0|0;
      $$pre$i211 = HEAP32[$896>>2]|0;
      $904 = $$pre$i211;
     }
     $903 = (($904) + 24|0);
     HEAP32[$896>>2] = $903;
    } else {
     $905 = (($db) + 12|0);
     $906 = HEAP32[$db>>2]|0;
     $907 = $897;
     $908 = $906;
     $909 = (($907) - ($908))|0;
     $910 = (($909|0) / 24)&-1;
     $911 = (($910) + 1)|0;
     $912 = ($911|0)<(0);
     if ($912) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $913 = $899;
     $914 = (($913) - ($908))|0;
     $915 = (($914|0) / 24)&-1;
     $916 = ($915>>>0)<(1073741823);
     if ($916) {
      $917 = $915 << 1;
      $918 = ($917>>>0)<($911>>>0);
      $919 = $918 ? $911 : $917;
      $$0$i$i$i213 = $919;
     } else {
      $$0$i$i$i213 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i213,$910,$905);
     $920 = (($__v$i$i395) + 8|0);
     $921 = HEAP32[$920>>2]|0;
     $922 = ($921|0)==(0|0);
     if (!($922)) {
      ;HEAP32[$921+0>>2]=HEAP32[$24+0>>2]|0;HEAP32[$921+4>>2]=HEAP32[$24+4>>2]|0;HEAP32[$921+8>>2]=HEAP32[$24+8>>2]|0;
      ;HEAP32[$24+0>>2]=0|0;HEAP32[$24+4>>2]=0|0;HEAP32[$24+8>>2]=0|0;
      $923 = (($921) + 12|0);
      ;HEAP32[$923+0>>2]=HEAP32[$895+0>>2]|0;HEAP32[$923+4>>2]=HEAP32[$895+4>>2]|0;HEAP32[$923+8>>2]=HEAP32[$895+8>>2]|0;
      ;HEAP32[$895+0>>2]=0|0;HEAP32[$895+4>>2]=0|0;HEAP32[$895+8>>2]=0|0;
     }
     $924 = (($921) + 24|0);
     HEAP32[$920>>2] = $924;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($24);
    $925 = (($first) + 2|0);
    $$0 = $925;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 76:  {
    HEAP8[$25>>0] = 20;
    $926 = (($25) + 1|0);
    dest=$926+0|0; src=49584+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $927 = (($25) + 11|0);
    HEAP8[$927>>0] = 0;
    $928 = (($25) + 12|0);
    ;HEAP32[$928+0>>2]=0|0;HEAP32[$928+4>>2]=0|0;HEAP32[$928+8>>2]=0|0;
    $929 = (($db) + 4|0);
    $930 = HEAP32[$929>>2]|0;
    $931 = (($db) + 8|0);
    $932 = HEAP32[$931>>2]|0;
    $933 = ($930>>>0)<($932>>>0);
    if ($933) {
     $934 = ($930|0)==(0|0);
     if ($934) {
      $937 = 0;
     } else {
      ;HEAP32[$930+0>>2]=HEAP32[$25+0>>2]|0;HEAP32[$930+4>>2]=HEAP32[$25+4>>2]|0;HEAP32[$930+8>>2]=HEAP32[$25+8>>2]|0;
      ;HEAP32[$25+0>>2]=0|0;HEAP32[$25+4>>2]=0|0;HEAP32[$25+8>>2]=0|0;
      $935 = (($930) + 12|0);
      ;HEAP32[$935+0>>2]=HEAP32[$928+0>>2]|0;HEAP32[$935+4>>2]=HEAP32[$928+4>>2]|0;HEAP32[$935+8>>2]=HEAP32[$928+8>>2]|0;
      ;HEAP32[$928+0>>2]=0|0;HEAP32[$928+4>>2]=0|0;HEAP32[$928+8>>2]=0|0;
      $$pre$i220 = HEAP32[$929>>2]|0;
      $937 = $$pre$i220;
     }
     $936 = (($937) + 24|0);
     HEAP32[$929>>2] = $936;
    } else {
     $938 = (($db) + 12|0);
     $939 = HEAP32[$db>>2]|0;
     $940 = $930;
     $941 = $939;
     $942 = (($940) - ($941))|0;
     $943 = (($942|0) / 24)&-1;
     $944 = (($943) + 1)|0;
     $945 = ($944|0)<(0);
     if ($945) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $946 = $932;
     $947 = (($946) - ($941))|0;
     $948 = (($947|0) / 24)&-1;
     $949 = ($948>>>0)<(1073741823);
     if ($949) {
      $950 = $948 << 1;
      $951 = ($950>>>0)<($944>>>0);
      $952 = $951 ? $944 : $950;
      $$0$i$i$i222 = $952;
     } else {
      $$0$i$i$i222 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i222,$943,$938);
     $953 = (($__v$i$i395) + 8|0);
     $954 = HEAP32[$953>>2]|0;
     $955 = ($954|0)==(0|0);
     if (!($955)) {
      ;HEAP32[$954+0>>2]=HEAP32[$25+0>>2]|0;HEAP32[$954+4>>2]=HEAP32[$25+4>>2]|0;HEAP32[$954+8>>2]=HEAP32[$25+8>>2]|0;
      ;HEAP32[$25+0>>2]=0|0;HEAP32[$25+4>>2]=0|0;HEAP32[$25+8>>2]=0|0;
      $956 = (($954) + 12|0);
      ;HEAP32[$956+0>>2]=HEAP32[$928+0>>2]|0;HEAP32[$956+4>>2]=HEAP32[$928+4>>2]|0;HEAP32[$956+8>>2]=HEAP32[$928+8>>2]|0;
      ;HEAP32[$928+0>>2]=0|0;HEAP32[$928+4>>2]=0|0;HEAP32[$928+8>>2]=0|0;
     }
     $957 = (($954) + 24|0);
     HEAP32[$953>>2] = $957;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($25);
    $958 = (($first) + 2|0);
    $$0 = $958;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 109:  {
    HEAP8[$26>>0] = 20;
    $959 = (($26) + 1|0);
    dest=$959+0|0; src=49600+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $960 = (($26) + 11|0);
    HEAP8[$960>>0] = 0;
    $961 = (($26) + 12|0);
    ;HEAP32[$961+0>>2]=0|0;HEAP32[$961+4>>2]=0|0;HEAP32[$961+8>>2]=0|0;
    $962 = (($db) + 4|0);
    $963 = HEAP32[$962>>2]|0;
    $964 = (($db) + 8|0);
    $965 = HEAP32[$964>>2]|0;
    $966 = ($963>>>0)<($965>>>0);
    if ($966) {
     $967 = ($963|0)==(0|0);
     if ($967) {
      $970 = 0;
     } else {
      ;HEAP32[$963+0>>2]=HEAP32[$26+0>>2]|0;HEAP32[$963+4>>2]=HEAP32[$26+4>>2]|0;HEAP32[$963+8>>2]=HEAP32[$26+8>>2]|0;
      ;HEAP32[$26+0>>2]=0|0;HEAP32[$26+4>>2]=0|0;HEAP32[$26+8>>2]=0|0;
      $968 = (($963) + 12|0);
      ;HEAP32[$968+0>>2]=HEAP32[$961+0>>2]|0;HEAP32[$968+4>>2]=HEAP32[$961+4>>2]|0;HEAP32[$968+8>>2]=HEAP32[$961+8>>2]|0;
      ;HEAP32[$961+0>>2]=0|0;HEAP32[$961+4>>2]=0|0;HEAP32[$961+8>>2]=0|0;
      $$pre$i229 = HEAP32[$962>>2]|0;
      $970 = $$pre$i229;
     }
     $969 = (($970) + 24|0);
     HEAP32[$962>>2] = $969;
    } else {
     $971 = (($db) + 12|0);
     $972 = HEAP32[$db>>2]|0;
     $973 = $963;
     $974 = $972;
     $975 = (($973) - ($974))|0;
     $976 = (($975|0) / 24)&-1;
     $977 = (($976) + 1)|0;
     $978 = ($977|0)<(0);
     if ($978) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $979 = $965;
     $980 = (($979) - ($974))|0;
     $981 = (($980|0) / 24)&-1;
     $982 = ($981>>>0)<(1073741823);
     if ($982) {
      $983 = $981 << 1;
      $984 = ($983>>>0)<($977>>>0);
      $985 = $984 ? $977 : $983;
      $$0$i$i$i231 = $985;
     } else {
      $$0$i$i$i231 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i231,$976,$971);
     $986 = (($__v$i$i395) + 8|0);
     $987 = HEAP32[$986>>2]|0;
     $988 = ($987|0)==(0|0);
     if (!($988)) {
      ;HEAP32[$987+0>>2]=HEAP32[$26+0>>2]|0;HEAP32[$987+4>>2]=HEAP32[$26+4>>2]|0;HEAP32[$987+8>>2]=HEAP32[$26+8>>2]|0;
      ;HEAP32[$26+0>>2]=0|0;HEAP32[$26+4>>2]=0|0;HEAP32[$26+8>>2]=0|0;
      $989 = (($987) + 12|0);
      ;HEAP32[$989+0>>2]=HEAP32[$961+0>>2]|0;HEAP32[$989+4>>2]=HEAP32[$961+4>>2]|0;HEAP32[$989+8>>2]=HEAP32[$961+8>>2]|0;
      ;HEAP32[$961+0>>2]=0|0;HEAP32[$961+4>>2]=0|0;HEAP32[$961+8>>2]=0|0;
     }
     $990 = (($987) + 24|0);
     HEAP32[$986>>2] = $990;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26);
    $991 = (($first) + 2|0);
    $$0 = $991;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  case 110:  {
   $992 = (($first) + 1|0);
   $993 = HEAP8[$992>>0]|0;
   $994 = $993 << 24 >> 24;
   switch ($994|0) {
   case 97:  {
    $995 = (_malloc(16)|0);
    $996 = (($27) + 8|0);
    HEAP32[$996>>2] = $995;
    HEAP32[$27>>2] = 17;
    $997 = (($27) + 4|0);
    HEAP32[$997>>2] = 14;
    dest=$995+0|0; src=49616+0|0; stop=dest+14|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $998 = (($995) + 14|0);
    HEAP8[$998>>0] = 0;
    $999 = (($27) + 12|0);
    ;HEAP32[$999+0>>2]=0|0;HEAP32[$999+4>>2]=0|0;HEAP32[$999+8>>2]=0|0;
    $1000 = (($db) + 4|0);
    $1001 = HEAP32[$1000>>2]|0;
    $1002 = (($db) + 8|0);
    $1003 = HEAP32[$1002>>2]|0;
    $1004 = ($1001>>>0)<($1003>>>0);
    if ($1004) {
     $1005 = ($1001|0)==(0|0);
     if ($1005) {
      $1008 = 0;
     } else {
      ;HEAP32[$1001+0>>2]=HEAP32[$27+0>>2]|0;HEAP32[$1001+4>>2]=HEAP32[$27+4>>2]|0;HEAP32[$1001+8>>2]=HEAP32[$27+8>>2]|0;
      ;HEAP32[$27+0>>2]=0|0;HEAP32[$27+4>>2]=0|0;HEAP32[$27+8>>2]=0|0;
      $1006 = (($1001) + 12|0);
      ;HEAP32[$1006+0>>2]=HEAP32[$999+0>>2]|0;HEAP32[$1006+4>>2]=HEAP32[$999+4>>2]|0;HEAP32[$1006+8>>2]=HEAP32[$999+8>>2]|0;
      ;HEAP32[$999+0>>2]=0|0;HEAP32[$999+4>>2]=0|0;HEAP32[$999+8>>2]=0|0;
      $$pre$i237 = HEAP32[$1000>>2]|0;
      $1008 = $$pre$i237;
     }
     $1007 = (($1008) + 24|0);
     HEAP32[$1000>>2] = $1007;
    } else {
     $1009 = (($db) + 12|0);
     $1010 = HEAP32[$db>>2]|0;
     $1011 = $1001;
     $1012 = $1010;
     $1013 = (($1011) - ($1012))|0;
     $1014 = (($1013|0) / 24)&-1;
     $1015 = (($1014) + 1)|0;
     $1016 = ($1015|0)<(0);
     if ($1016) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1017 = $1003;
     $1018 = (($1017) - ($1012))|0;
     $1019 = (($1018|0) / 24)&-1;
     $1020 = ($1019>>>0)<(1073741823);
     if ($1020) {
      $1021 = $1019 << 1;
      $1022 = ($1021>>>0)<($1015>>>0);
      $1023 = $1022 ? $1015 : $1021;
      $$0$i$i$i239 = $1023;
     } else {
      $$0$i$i$i239 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i239,$1014,$1009);
     $1024 = (($__v$i$i395) + 8|0);
     $1025 = HEAP32[$1024>>2]|0;
     $1026 = ($1025|0)==(0|0);
     if (!($1026)) {
      ;HEAP32[$1025+0>>2]=HEAP32[$27+0>>2]|0;HEAP32[$1025+4>>2]=HEAP32[$27+4>>2]|0;HEAP32[$1025+8>>2]=HEAP32[$27+8>>2]|0;
      ;HEAP32[$27+0>>2]=0|0;HEAP32[$27+4>>2]=0|0;HEAP32[$27+8>>2]=0|0;
      $1027 = (($1025) + 12|0);
      ;HEAP32[$1027+0>>2]=HEAP32[$999+0>>2]|0;HEAP32[$1027+4>>2]=HEAP32[$999+4>>2]|0;HEAP32[$1027+8>>2]=HEAP32[$999+8>>2]|0;
      ;HEAP32[$999+0>>2]=0|0;HEAP32[$999+4>>2]=0|0;HEAP32[$999+8>>2]=0|0;
     }
     $1028 = (($1025) + 24|0);
     HEAP32[$1024>>2] = $1028;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27);
    $1029 = (($first) + 2|0);
    $$0 = $1029;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 101:  {
    HEAP8[$28>>0] = 20;
    $1030 = (($28) + 1|0);
    dest=$1030+0|0; src=49632+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1031 = (($28) + 11|0);
    HEAP8[$1031>>0] = 0;
    $1032 = (($28) + 12|0);
    ;HEAP32[$1032+0>>2]=0|0;HEAP32[$1032+4>>2]=0|0;HEAP32[$1032+8>>2]=0|0;
    $1033 = (($db) + 4|0);
    $1034 = HEAP32[$1033>>2]|0;
    $1035 = (($db) + 8|0);
    $1036 = HEAP32[$1035>>2]|0;
    $1037 = ($1034>>>0)<($1036>>>0);
    if ($1037) {
     $1038 = ($1034|0)==(0|0);
     if ($1038) {
      $1041 = 0;
     } else {
      ;HEAP32[$1034+0>>2]=HEAP32[$28+0>>2]|0;HEAP32[$1034+4>>2]=HEAP32[$28+4>>2]|0;HEAP32[$1034+8>>2]=HEAP32[$28+8>>2]|0;
      ;HEAP32[$28+0>>2]=0|0;HEAP32[$28+4>>2]=0|0;HEAP32[$28+8>>2]=0|0;
      $1039 = (($1034) + 12|0);
      ;HEAP32[$1039+0>>2]=HEAP32[$1032+0>>2]|0;HEAP32[$1039+4>>2]=HEAP32[$1032+4>>2]|0;HEAP32[$1039+8>>2]=HEAP32[$1032+8>>2]|0;
      ;HEAP32[$1032+0>>2]=0|0;HEAP32[$1032+4>>2]=0|0;HEAP32[$1032+8>>2]=0|0;
      $$pre$i246 = HEAP32[$1033>>2]|0;
      $1041 = $$pre$i246;
     }
     $1040 = (($1041) + 24|0);
     HEAP32[$1033>>2] = $1040;
    } else {
     $1042 = (($db) + 12|0);
     $1043 = HEAP32[$db>>2]|0;
     $1044 = $1034;
     $1045 = $1043;
     $1046 = (($1044) - ($1045))|0;
     $1047 = (($1046|0) / 24)&-1;
     $1048 = (($1047) + 1)|0;
     $1049 = ($1048|0)<(0);
     if ($1049) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1050 = $1036;
     $1051 = (($1050) - ($1045))|0;
     $1052 = (($1051|0) / 24)&-1;
     $1053 = ($1052>>>0)<(1073741823);
     if ($1053) {
      $1054 = $1052 << 1;
      $1055 = ($1054>>>0)<($1048>>>0);
      $1056 = $1055 ? $1048 : $1054;
      $$0$i$i$i248 = $1056;
     } else {
      $$0$i$i$i248 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i248,$1047,$1042);
     $1057 = (($__v$i$i395) + 8|0);
     $1058 = HEAP32[$1057>>2]|0;
     $1059 = ($1058|0)==(0|0);
     if (!($1059)) {
      ;HEAP32[$1058+0>>2]=HEAP32[$28+0>>2]|0;HEAP32[$1058+4>>2]=HEAP32[$28+4>>2]|0;HEAP32[$1058+8>>2]=HEAP32[$28+8>>2]|0;
      ;HEAP32[$28+0>>2]=0|0;HEAP32[$28+4>>2]=0|0;HEAP32[$28+8>>2]=0|0;
      $1060 = (($1058) + 12|0);
      ;HEAP32[$1060+0>>2]=HEAP32[$1032+0>>2]|0;HEAP32[$1060+4>>2]=HEAP32[$1032+4>>2]|0;HEAP32[$1060+8>>2]=HEAP32[$1032+8>>2]|0;
      ;HEAP32[$1032+0>>2]=0|0;HEAP32[$1032+4>>2]=0|0;HEAP32[$1032+8>>2]=0|0;
     }
     $1061 = (($1058) + 24|0);
     HEAP32[$1057>>2] = $1061;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($28);
    $1062 = (($first) + 2|0);
    $$0 = $1062;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 103:  {
    HEAP8[$29>>0] = 18;
    $1063 = (($29) + 1|0);
    dest=$1063+0|0; src=49552+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1064 = (($29) + 10|0);
    HEAP8[$1064>>0] = 0;
    $1065 = (($29) + 12|0);
    ;HEAP32[$1065+0>>2]=0|0;HEAP32[$1065+4>>2]=0|0;HEAP32[$1065+8>>2]=0|0;
    $1066 = (($db) + 4|0);
    $1067 = HEAP32[$1066>>2]|0;
    $1068 = (($db) + 8|0);
    $1069 = HEAP32[$1068>>2]|0;
    $1070 = ($1067>>>0)<($1069>>>0);
    if ($1070) {
     $1071 = ($1067|0)==(0|0);
     if ($1071) {
      $1074 = 0;
     } else {
      ;HEAP32[$1067+0>>2]=HEAP32[$29+0>>2]|0;HEAP32[$1067+4>>2]=HEAP32[$29+4>>2]|0;HEAP32[$1067+8>>2]=HEAP32[$29+8>>2]|0;
      ;HEAP32[$29+0>>2]=0|0;HEAP32[$29+4>>2]=0|0;HEAP32[$29+8>>2]=0|0;
      $1072 = (($1067) + 12|0);
      ;HEAP32[$1072+0>>2]=HEAP32[$1065+0>>2]|0;HEAP32[$1072+4>>2]=HEAP32[$1065+4>>2]|0;HEAP32[$1072+8>>2]=HEAP32[$1065+8>>2]|0;
      ;HEAP32[$1065+0>>2]=0|0;HEAP32[$1065+4>>2]=0|0;HEAP32[$1065+8>>2]=0|0;
      $$pre$i255 = HEAP32[$1066>>2]|0;
      $1074 = $$pre$i255;
     }
     $1073 = (($1074) + 24|0);
     HEAP32[$1066>>2] = $1073;
    } else {
     $1075 = (($db) + 12|0);
     $1076 = HEAP32[$db>>2]|0;
     $1077 = $1067;
     $1078 = $1076;
     $1079 = (($1077) - ($1078))|0;
     $1080 = (($1079|0) / 24)&-1;
     $1081 = (($1080) + 1)|0;
     $1082 = ($1081|0)<(0);
     if ($1082) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1083 = $1069;
     $1084 = (($1083) - ($1078))|0;
     $1085 = (($1084|0) / 24)&-1;
     $1086 = ($1085>>>0)<(1073741823);
     if ($1086) {
      $1087 = $1085 << 1;
      $1088 = ($1087>>>0)<($1081>>>0);
      $1089 = $1088 ? $1081 : $1087;
      $$0$i$i$i257 = $1089;
     } else {
      $$0$i$i$i257 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i257,$1080,$1075);
     $1090 = (($__v$i$i395) + 8|0);
     $1091 = HEAP32[$1090>>2]|0;
     $1092 = ($1091|0)==(0|0);
     if (!($1092)) {
      ;HEAP32[$1091+0>>2]=HEAP32[$29+0>>2]|0;HEAP32[$1091+4>>2]=HEAP32[$29+4>>2]|0;HEAP32[$1091+8>>2]=HEAP32[$29+8>>2]|0;
      ;HEAP32[$29+0>>2]=0|0;HEAP32[$29+4>>2]=0|0;HEAP32[$29+8>>2]=0|0;
      $1093 = (($1091) + 12|0);
      ;HEAP32[$1093+0>>2]=HEAP32[$1065+0>>2]|0;HEAP32[$1093+4>>2]=HEAP32[$1065+4>>2]|0;HEAP32[$1093+8>>2]=HEAP32[$1065+8>>2]|0;
      ;HEAP32[$1065+0>>2]=0|0;HEAP32[$1065+4>>2]=0|0;HEAP32[$1065+8>>2]=0|0;
     }
     $1094 = (($1091) + 24|0);
     HEAP32[$1090>>2] = $1094;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($29);
    $1095 = (($first) + 2|0);
    $$0 = $1095;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 116:  {
    HEAP8[$30>>0] = 18;
    $1096 = (($30) + 1|0);
    dest=$1096+0|0; src=49648+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1097 = (($30) + 10|0);
    HEAP8[$1097>>0] = 0;
    $1098 = (($30) + 12|0);
    ;HEAP32[$1098+0>>2]=0|0;HEAP32[$1098+4>>2]=0|0;HEAP32[$1098+8>>2]=0|0;
    $1099 = (($db) + 4|0);
    $1100 = HEAP32[$1099>>2]|0;
    $1101 = (($db) + 8|0);
    $1102 = HEAP32[$1101>>2]|0;
    $1103 = ($1100>>>0)<($1102>>>0);
    if ($1103) {
     $1104 = ($1100|0)==(0|0);
     if ($1104) {
      $1107 = 0;
     } else {
      ;HEAP32[$1100+0>>2]=HEAP32[$30+0>>2]|0;HEAP32[$1100+4>>2]=HEAP32[$30+4>>2]|0;HEAP32[$1100+8>>2]=HEAP32[$30+8>>2]|0;
      ;HEAP32[$30+0>>2]=0|0;HEAP32[$30+4>>2]=0|0;HEAP32[$30+8>>2]=0|0;
      $1105 = (($1100) + 12|0);
      ;HEAP32[$1105+0>>2]=HEAP32[$1098+0>>2]|0;HEAP32[$1105+4>>2]=HEAP32[$1098+4>>2]|0;HEAP32[$1105+8>>2]=HEAP32[$1098+8>>2]|0;
      ;HEAP32[$1098+0>>2]=0|0;HEAP32[$1098+4>>2]=0|0;HEAP32[$1098+8>>2]=0|0;
      $$pre$i264 = HEAP32[$1099>>2]|0;
      $1107 = $$pre$i264;
     }
     $1106 = (($1107) + 24|0);
     HEAP32[$1099>>2] = $1106;
    } else {
     $1108 = (($db) + 12|0);
     $1109 = HEAP32[$db>>2]|0;
     $1110 = $1100;
     $1111 = $1109;
     $1112 = (($1110) - ($1111))|0;
     $1113 = (($1112|0) / 24)&-1;
     $1114 = (($1113) + 1)|0;
     $1115 = ($1114|0)<(0);
     if ($1115) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1116 = $1102;
     $1117 = (($1116) - ($1111))|0;
     $1118 = (($1117|0) / 24)&-1;
     $1119 = ($1118>>>0)<(1073741823);
     if ($1119) {
      $1120 = $1118 << 1;
      $1121 = ($1120>>>0)<($1114>>>0);
      $1122 = $1121 ? $1114 : $1120;
      $$0$i$i$i266 = $1122;
     } else {
      $$0$i$i$i266 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i266,$1113,$1108);
     $1123 = (($__v$i$i395) + 8|0);
     $1124 = HEAP32[$1123>>2]|0;
     $1125 = ($1124|0)==(0|0);
     if (!($1125)) {
      ;HEAP32[$1124+0>>2]=HEAP32[$30+0>>2]|0;HEAP32[$1124+4>>2]=HEAP32[$30+4>>2]|0;HEAP32[$1124+8>>2]=HEAP32[$30+8>>2]|0;
      ;HEAP32[$30+0>>2]=0|0;HEAP32[$30+4>>2]=0|0;HEAP32[$30+8>>2]=0|0;
      $1126 = (($1124) + 12|0);
      ;HEAP32[$1126+0>>2]=HEAP32[$1098+0>>2]|0;HEAP32[$1126+4>>2]=HEAP32[$1098+4>>2]|0;HEAP32[$1126+8>>2]=HEAP32[$1098+8>>2]|0;
      ;HEAP32[$1098+0>>2]=0|0;HEAP32[$1098+4>>2]=0|0;HEAP32[$1098+8>>2]=0|0;
     }
     $1127 = (($1124) + 24|0);
     HEAP32[$1123>>2] = $1127;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($30);
    $1128 = (($first) + 2|0);
    $$0 = $1128;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 119:  {
    $1129 = (_malloc(16)|0);
    $1130 = (($31) + 8|0);
    HEAP32[$1130>>2] = $1129;
    HEAP32[$31>>2] = 17;
    $1131 = (($31) + 4|0);
    HEAP32[$1131>>2] = 12;
    dest=$1129+0|0; src=49664+0|0; stop=dest+12|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1132 = (($1129) + 12|0);
    HEAP8[$1132>>0] = 0;
    $1133 = (($31) + 12|0);
    ;HEAP32[$1133+0>>2]=0|0;HEAP32[$1133+4>>2]=0|0;HEAP32[$1133+8>>2]=0|0;
    $1134 = (($db) + 4|0);
    $1135 = HEAP32[$1134>>2]|0;
    $1136 = (($db) + 8|0);
    $1137 = HEAP32[$1136>>2]|0;
    $1138 = ($1135>>>0)<($1137>>>0);
    if ($1138) {
     $1139 = ($1135|0)==(0|0);
     if ($1139) {
      $1142 = 0;
     } else {
      ;HEAP32[$1135+0>>2]=HEAP32[$31+0>>2]|0;HEAP32[$1135+4>>2]=HEAP32[$31+4>>2]|0;HEAP32[$1135+8>>2]=HEAP32[$31+8>>2]|0;
      ;HEAP32[$31+0>>2]=0|0;HEAP32[$31+4>>2]=0|0;HEAP32[$31+8>>2]=0|0;
      $1140 = (($1135) + 12|0);
      ;HEAP32[$1140+0>>2]=HEAP32[$1133+0>>2]|0;HEAP32[$1140+4>>2]=HEAP32[$1133+4>>2]|0;HEAP32[$1140+8>>2]=HEAP32[$1133+8>>2]|0;
      ;HEAP32[$1133+0>>2]=0|0;HEAP32[$1133+4>>2]=0|0;HEAP32[$1133+8>>2]=0|0;
      $$pre$i272 = HEAP32[$1134>>2]|0;
      $1142 = $$pre$i272;
     }
     $1141 = (($1142) + 24|0);
     HEAP32[$1134>>2] = $1141;
    } else {
     $1143 = (($db) + 12|0);
     $1144 = HEAP32[$db>>2]|0;
     $1145 = $1135;
     $1146 = $1144;
     $1147 = (($1145) - ($1146))|0;
     $1148 = (($1147|0) / 24)&-1;
     $1149 = (($1148) + 1)|0;
     $1150 = ($1149|0)<(0);
     if ($1150) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1151 = $1137;
     $1152 = (($1151) - ($1146))|0;
     $1153 = (($1152|0) / 24)&-1;
     $1154 = ($1153>>>0)<(1073741823);
     if ($1154) {
      $1155 = $1153 << 1;
      $1156 = ($1155>>>0)<($1149>>>0);
      $1157 = $1156 ? $1149 : $1155;
      $$0$i$i$i274 = $1157;
     } else {
      $$0$i$i$i274 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i274,$1148,$1143);
     $1158 = (($__v$i$i395) + 8|0);
     $1159 = HEAP32[$1158>>2]|0;
     $1160 = ($1159|0)==(0|0);
     if (!($1160)) {
      ;HEAP32[$1159+0>>2]=HEAP32[$31+0>>2]|0;HEAP32[$1159+4>>2]=HEAP32[$31+4>>2]|0;HEAP32[$1159+8>>2]=HEAP32[$31+8>>2]|0;
      ;HEAP32[$31+0>>2]=0|0;HEAP32[$31+4>>2]=0|0;HEAP32[$31+8>>2]=0|0;
      $1161 = (($1159) + 12|0);
      ;HEAP32[$1161+0>>2]=HEAP32[$1133+0>>2]|0;HEAP32[$1161+4>>2]=HEAP32[$1133+4>>2]|0;HEAP32[$1161+8>>2]=HEAP32[$1133+8>>2]|0;
      ;HEAP32[$1133+0>>2]=0|0;HEAP32[$1133+4>>2]=0|0;HEAP32[$1133+8>>2]=0|0;
     }
     $1162 = (($1159) + 24|0);
     HEAP32[$1158>>2] = $1162;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($31);
    $1163 = (($first) + 2|0);
    $$0 = $1163;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  case 111:  {
   $1164 = (($first) + 1|0);
   $1165 = HEAP8[$1164>>0]|0;
   $1166 = $1165 << 24 >> 24;
   if ((($1166|0) == 111)) {
    HEAP8[$32>>0] = 20;
    $1167 = (($32) + 1|0);
    dest=$1167+0|0; src=49680+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1168 = (($32) + 11|0);
    HEAP8[$1168>>0] = 0;
    $1169 = (($32) + 12|0);
    ;HEAP32[$1169+0>>2]=0|0;HEAP32[$1169+4>>2]=0|0;HEAP32[$1169+8>>2]=0|0;
    $1170 = (($db) + 4|0);
    $1171 = HEAP32[$1170>>2]|0;
    $1172 = (($db) + 8|0);
    $1173 = HEAP32[$1172>>2]|0;
    $1174 = ($1171>>>0)<($1173>>>0);
    if ($1174) {
     $1175 = ($1171|0)==(0|0);
     if ($1175) {
      $1178 = 0;
     } else {
      ;HEAP32[$1171+0>>2]=HEAP32[$32+0>>2]|0;HEAP32[$1171+4>>2]=HEAP32[$32+4>>2]|0;HEAP32[$1171+8>>2]=HEAP32[$32+8>>2]|0;
      ;HEAP32[$32+0>>2]=0|0;HEAP32[$32+4>>2]=0|0;HEAP32[$32+8>>2]=0|0;
      $1176 = (($1171) + 12|0);
      ;HEAP32[$1176+0>>2]=HEAP32[$1169+0>>2]|0;HEAP32[$1176+4>>2]=HEAP32[$1169+4>>2]|0;HEAP32[$1176+8>>2]=HEAP32[$1169+8>>2]|0;
      ;HEAP32[$1169+0>>2]=0|0;HEAP32[$1169+4>>2]=0|0;HEAP32[$1169+8>>2]=0|0;
      $$pre$i281 = HEAP32[$1170>>2]|0;
      $1178 = $$pre$i281;
     }
     $1177 = (($1178) + 24|0);
     HEAP32[$1170>>2] = $1177;
    } else {
     $1179 = (($db) + 12|0);
     $1180 = HEAP32[$db>>2]|0;
     $1181 = $1171;
     $1182 = $1180;
     $1183 = (($1181) - ($1182))|0;
     $1184 = (($1183|0) / 24)&-1;
     $1185 = (($1184) + 1)|0;
     $1186 = ($1185|0)<(0);
     if ($1186) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1187 = $1173;
     $1188 = (($1187) - ($1182))|0;
     $1189 = (($1188|0) / 24)&-1;
     $1190 = ($1189>>>0)<(1073741823);
     if ($1190) {
      $1191 = $1189 << 1;
      $1192 = ($1191>>>0)<($1185>>>0);
      $1193 = $1192 ? $1185 : $1191;
      $$0$i$i$i283 = $1193;
     } else {
      $$0$i$i$i283 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i283,$1184,$1179);
     $1194 = (($__v$i$i395) + 8|0);
     $1195 = HEAP32[$1194>>2]|0;
     $1196 = ($1195|0)==(0|0);
     if (!($1196)) {
      ;HEAP32[$1195+0>>2]=HEAP32[$32+0>>2]|0;HEAP32[$1195+4>>2]=HEAP32[$32+4>>2]|0;HEAP32[$1195+8>>2]=HEAP32[$32+8>>2]|0;
      ;HEAP32[$32+0>>2]=0|0;HEAP32[$32+4>>2]=0|0;HEAP32[$32+8>>2]=0|0;
      $1197 = (($1195) + 12|0);
      ;HEAP32[$1197+0>>2]=HEAP32[$1169+0>>2]|0;HEAP32[$1197+4>>2]=HEAP32[$1169+4>>2]|0;HEAP32[$1197+8>>2]=HEAP32[$1169+8>>2]|0;
      ;HEAP32[$1169+0>>2]=0|0;HEAP32[$1169+4>>2]=0|0;HEAP32[$1169+8>>2]=0|0;
     }
     $1198 = (($1195) + 24|0);
     HEAP32[$1194>>2] = $1198;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($32);
    $1199 = (($first) + 2|0);
    $$0 = $1199;
    STACKTOP = sp;return ($$0|0);
   } else if ((($1166|0) == 114)) {
    HEAP8[$33>>0] = 18;
    $1200 = (($33) + 1|0);
    dest=$1200+0|0; src=49696+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1201 = (($33) + 10|0);
    HEAP8[$1201>>0] = 0;
    $1202 = (($33) + 12|0);
    ;HEAP32[$1202+0>>2]=0|0;HEAP32[$1202+4>>2]=0|0;HEAP32[$1202+8>>2]=0|0;
    $1203 = (($db) + 4|0);
    $1204 = HEAP32[$1203>>2]|0;
    $1205 = (($db) + 8|0);
    $1206 = HEAP32[$1205>>2]|0;
    $1207 = ($1204>>>0)<($1206>>>0);
    if ($1207) {
     $1208 = ($1204|0)==(0|0);
     if ($1208) {
      $1211 = 0;
     } else {
      ;HEAP32[$1204+0>>2]=HEAP32[$33+0>>2]|0;HEAP32[$1204+4>>2]=HEAP32[$33+4>>2]|0;HEAP32[$1204+8>>2]=HEAP32[$33+8>>2]|0;
      ;HEAP32[$33+0>>2]=0|0;HEAP32[$33+4>>2]=0|0;HEAP32[$33+8>>2]=0|0;
      $1209 = (($1204) + 12|0);
      ;HEAP32[$1209+0>>2]=HEAP32[$1202+0>>2]|0;HEAP32[$1209+4>>2]=HEAP32[$1202+4>>2]|0;HEAP32[$1209+8>>2]=HEAP32[$1202+8>>2]|0;
      ;HEAP32[$1202+0>>2]=0|0;HEAP32[$1202+4>>2]=0|0;HEAP32[$1202+8>>2]=0|0;
      $$pre$i290 = HEAP32[$1203>>2]|0;
      $1211 = $$pre$i290;
     }
     $1210 = (($1211) + 24|0);
     HEAP32[$1203>>2] = $1210;
    } else {
     $1212 = (($db) + 12|0);
     $1213 = HEAP32[$db>>2]|0;
     $1214 = $1204;
     $1215 = $1213;
     $1216 = (($1214) - ($1215))|0;
     $1217 = (($1216|0) / 24)&-1;
     $1218 = (($1217) + 1)|0;
     $1219 = ($1218|0)<(0);
     if ($1219) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1220 = $1206;
     $1221 = (($1220) - ($1215))|0;
     $1222 = (($1221|0) / 24)&-1;
     $1223 = ($1222>>>0)<(1073741823);
     if ($1223) {
      $1224 = $1222 << 1;
      $1225 = ($1224>>>0)<($1218>>>0);
      $1226 = $1225 ? $1218 : $1224;
      $$0$i$i$i292 = $1226;
     } else {
      $$0$i$i$i292 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i292,$1217,$1212);
     $1227 = (($__v$i$i395) + 8|0);
     $1228 = HEAP32[$1227>>2]|0;
     $1229 = ($1228|0)==(0|0);
     if (!($1229)) {
      ;HEAP32[$1228+0>>2]=HEAP32[$33+0>>2]|0;HEAP32[$1228+4>>2]=HEAP32[$33+4>>2]|0;HEAP32[$1228+8>>2]=HEAP32[$33+8>>2]|0;
      ;HEAP32[$33+0>>2]=0|0;HEAP32[$33+4>>2]=0|0;HEAP32[$33+8>>2]=0|0;
      $1230 = (($1228) + 12|0);
      ;HEAP32[$1230+0>>2]=HEAP32[$1202+0>>2]|0;HEAP32[$1230+4>>2]=HEAP32[$1202+4>>2]|0;HEAP32[$1230+8>>2]=HEAP32[$1202+8>>2]|0;
      ;HEAP32[$1202+0>>2]=0|0;HEAP32[$1202+4>>2]=0|0;HEAP32[$1202+8>>2]=0|0;
     }
     $1231 = (($1228) + 24|0);
     HEAP32[$1227>>2] = $1231;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($33);
    $1232 = (($first) + 2|0);
    $$0 = $1232;
    STACKTOP = sp;return ($$0|0);
   } else if ((($1166|0) == 82)) {
    HEAP8[$34>>0] = 20;
    $1233 = (($34) + 1|0);
    dest=$1233+0|0; src=49712+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1234 = (($34) + 11|0);
    HEAP8[$1234>>0] = 0;
    $1235 = (($34) + 12|0);
    ;HEAP32[$1235+0>>2]=0|0;HEAP32[$1235+4>>2]=0|0;HEAP32[$1235+8>>2]=0|0;
    $1236 = (($db) + 4|0);
    $1237 = HEAP32[$1236>>2]|0;
    $1238 = (($db) + 8|0);
    $1239 = HEAP32[$1238>>2]|0;
    $1240 = ($1237>>>0)<($1239>>>0);
    if ($1240) {
     $1241 = ($1237|0)==(0|0);
     if ($1241) {
      $1244 = 0;
     } else {
      ;HEAP32[$1237+0>>2]=HEAP32[$34+0>>2]|0;HEAP32[$1237+4>>2]=HEAP32[$34+4>>2]|0;HEAP32[$1237+8>>2]=HEAP32[$34+8>>2]|0;
      ;HEAP32[$34+0>>2]=0|0;HEAP32[$34+4>>2]=0|0;HEAP32[$34+8>>2]=0|0;
      $1242 = (($1237) + 12|0);
      ;HEAP32[$1242+0>>2]=HEAP32[$1235+0>>2]|0;HEAP32[$1242+4>>2]=HEAP32[$1235+4>>2]|0;HEAP32[$1242+8>>2]=HEAP32[$1235+8>>2]|0;
      ;HEAP32[$1235+0>>2]=0|0;HEAP32[$1235+4>>2]=0|0;HEAP32[$1235+8>>2]=0|0;
      $$pre$i299 = HEAP32[$1236>>2]|0;
      $1244 = $$pre$i299;
     }
     $1243 = (($1244) + 24|0);
     HEAP32[$1236>>2] = $1243;
    } else {
     $1245 = (($db) + 12|0);
     $1246 = HEAP32[$db>>2]|0;
     $1247 = $1237;
     $1248 = $1246;
     $1249 = (($1247) - ($1248))|0;
     $1250 = (($1249|0) / 24)&-1;
     $1251 = (($1250) + 1)|0;
     $1252 = ($1251|0)<(0);
     if ($1252) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1253 = $1239;
     $1254 = (($1253) - ($1248))|0;
     $1255 = (($1254|0) / 24)&-1;
     $1256 = ($1255>>>0)<(1073741823);
     if ($1256) {
      $1257 = $1255 << 1;
      $1258 = ($1257>>>0)<($1251>>>0);
      $1259 = $1258 ? $1251 : $1257;
      $$0$i$i$i301 = $1259;
     } else {
      $$0$i$i$i301 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i301,$1250,$1245);
     $1260 = (($__v$i$i395) + 8|0);
     $1261 = HEAP32[$1260>>2]|0;
     $1262 = ($1261|0)==(0|0);
     if (!($1262)) {
      ;HEAP32[$1261+0>>2]=HEAP32[$34+0>>2]|0;HEAP32[$1261+4>>2]=HEAP32[$34+4>>2]|0;HEAP32[$1261+8>>2]=HEAP32[$34+8>>2]|0;
      ;HEAP32[$34+0>>2]=0|0;HEAP32[$34+4>>2]=0|0;HEAP32[$34+8>>2]=0|0;
      $1263 = (($1261) + 12|0);
      ;HEAP32[$1263+0>>2]=HEAP32[$1235+0>>2]|0;HEAP32[$1263+4>>2]=HEAP32[$1235+4>>2]|0;HEAP32[$1263+8>>2]=HEAP32[$1235+8>>2]|0;
      ;HEAP32[$1235+0>>2]=0|0;HEAP32[$1235+4>>2]=0|0;HEAP32[$1235+8>>2]=0|0;
     }
     $1264 = (($1261) + 24|0);
     HEAP32[$1260>>2] = $1264;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($34);
    $1265 = (($first) + 2|0);
    $$0 = $1265;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 112:  {
   $1266 = (($first) + 1|0);
   $1267 = HEAP8[$1266>>0]|0;
   $1268 = $1267 << 24 >> 24;
   switch ($1268|0) {
   case 109:  {
    $1269 = (_malloc(16)|0);
    $1270 = (($35) + 8|0);
    HEAP32[$1270>>2] = $1269;
    HEAP32[$35>>2] = 17;
    $1271 = (($35) + 4|0);
    HEAP32[$1271>>2] = 11;
    dest=$1269+0|0; src=49728+0|0; stop=dest+11|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1272 = (($1269) + 11|0);
    HEAP8[$1272>>0] = 0;
    $1273 = (($35) + 12|0);
    ;HEAP32[$1273+0>>2]=0|0;HEAP32[$1273+4>>2]=0|0;HEAP32[$1273+8>>2]=0|0;
    $1274 = (($db) + 4|0);
    $1275 = HEAP32[$1274>>2]|0;
    $1276 = (($db) + 8|0);
    $1277 = HEAP32[$1276>>2]|0;
    $1278 = ($1275>>>0)<($1277>>>0);
    if ($1278) {
     $1279 = ($1275|0)==(0|0);
     if ($1279) {
      $1282 = 0;
     } else {
      ;HEAP32[$1275+0>>2]=HEAP32[$35+0>>2]|0;HEAP32[$1275+4>>2]=HEAP32[$35+4>>2]|0;HEAP32[$1275+8>>2]=HEAP32[$35+8>>2]|0;
      ;HEAP32[$35+0>>2]=0|0;HEAP32[$35+4>>2]=0|0;HEAP32[$35+8>>2]=0|0;
      $1280 = (($1275) + 12|0);
      ;HEAP32[$1280+0>>2]=HEAP32[$1273+0>>2]|0;HEAP32[$1280+4>>2]=HEAP32[$1273+4>>2]|0;HEAP32[$1280+8>>2]=HEAP32[$1273+8>>2]|0;
      ;HEAP32[$1273+0>>2]=0|0;HEAP32[$1273+4>>2]=0|0;HEAP32[$1273+8>>2]=0|0;
      $$pre$i307 = HEAP32[$1274>>2]|0;
      $1282 = $$pre$i307;
     }
     $1281 = (($1282) + 24|0);
     HEAP32[$1274>>2] = $1281;
    } else {
     $1283 = (($db) + 12|0);
     $1284 = HEAP32[$db>>2]|0;
     $1285 = $1275;
     $1286 = $1284;
     $1287 = (($1285) - ($1286))|0;
     $1288 = (($1287|0) / 24)&-1;
     $1289 = (($1288) + 1)|0;
     $1290 = ($1289|0)<(0);
     if ($1290) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1291 = $1277;
     $1292 = (($1291) - ($1286))|0;
     $1293 = (($1292|0) / 24)&-1;
     $1294 = ($1293>>>0)<(1073741823);
     if ($1294) {
      $1295 = $1293 << 1;
      $1296 = ($1295>>>0)<($1289>>>0);
      $1297 = $1296 ? $1289 : $1295;
      $$0$i$i$i309 = $1297;
     } else {
      $$0$i$i$i309 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i309,$1288,$1283);
     $1298 = (($__v$i$i395) + 8|0);
     $1299 = HEAP32[$1298>>2]|0;
     $1300 = ($1299|0)==(0|0);
     if (!($1300)) {
      ;HEAP32[$1299+0>>2]=HEAP32[$35+0>>2]|0;HEAP32[$1299+4>>2]=HEAP32[$35+4>>2]|0;HEAP32[$1299+8>>2]=HEAP32[$35+8>>2]|0;
      ;HEAP32[$35+0>>2]=0|0;HEAP32[$35+4>>2]=0|0;HEAP32[$35+8>>2]=0|0;
      $1301 = (($1299) + 12|0);
      ;HEAP32[$1301+0>>2]=HEAP32[$1273+0>>2]|0;HEAP32[$1301+4>>2]=HEAP32[$1273+4>>2]|0;HEAP32[$1301+8>>2]=HEAP32[$1273+8>>2]|0;
      ;HEAP32[$1273+0>>2]=0|0;HEAP32[$1273+4>>2]=0|0;HEAP32[$1273+8>>2]=0|0;
     }
     $1302 = (($1299) + 24|0);
     HEAP32[$1298>>2] = $1302;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($35);
    $1303 = (($first) + 2|0);
    $$0 = $1303;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 108:  {
    HEAP8[$36>>0] = 18;
    $1304 = (($36) + 1|0);
    dest=$1304+0|0; src=49744+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1305 = (($36) + 10|0);
    HEAP8[$1305>>0] = 0;
    $1306 = (($36) + 12|0);
    ;HEAP32[$1306+0>>2]=0|0;HEAP32[$1306+4>>2]=0|0;HEAP32[$1306+8>>2]=0|0;
    $1307 = (($db) + 4|0);
    $1308 = HEAP32[$1307>>2]|0;
    $1309 = (($db) + 8|0);
    $1310 = HEAP32[$1309>>2]|0;
    $1311 = ($1308>>>0)<($1310>>>0);
    if ($1311) {
     $1312 = ($1308|0)==(0|0);
     if ($1312) {
      $1315 = 0;
     } else {
      ;HEAP32[$1308+0>>2]=HEAP32[$36+0>>2]|0;HEAP32[$1308+4>>2]=HEAP32[$36+4>>2]|0;HEAP32[$1308+8>>2]=HEAP32[$36+8>>2]|0;
      ;HEAP32[$36+0>>2]=0|0;HEAP32[$36+4>>2]=0|0;HEAP32[$36+8>>2]=0|0;
      $1313 = (($1308) + 12|0);
      ;HEAP32[$1313+0>>2]=HEAP32[$1306+0>>2]|0;HEAP32[$1313+4>>2]=HEAP32[$1306+4>>2]|0;HEAP32[$1313+8>>2]=HEAP32[$1306+8>>2]|0;
      ;HEAP32[$1306+0>>2]=0|0;HEAP32[$1306+4>>2]=0|0;HEAP32[$1306+8>>2]=0|0;
      $$pre$i316 = HEAP32[$1307>>2]|0;
      $1315 = $$pre$i316;
     }
     $1314 = (($1315) + 24|0);
     HEAP32[$1307>>2] = $1314;
    } else {
     $1316 = (($db) + 12|0);
     $1317 = HEAP32[$db>>2]|0;
     $1318 = $1308;
     $1319 = $1317;
     $1320 = (($1318) - ($1319))|0;
     $1321 = (($1320|0) / 24)&-1;
     $1322 = (($1321) + 1)|0;
     $1323 = ($1322|0)<(0);
     if ($1323) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1324 = $1310;
     $1325 = (($1324) - ($1319))|0;
     $1326 = (($1325|0) / 24)&-1;
     $1327 = ($1326>>>0)<(1073741823);
     if ($1327) {
      $1328 = $1326 << 1;
      $1329 = ($1328>>>0)<($1322>>>0);
      $1330 = $1329 ? $1322 : $1328;
      $$0$i$i$i318 = $1330;
     } else {
      $$0$i$i$i318 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i318,$1321,$1316);
     $1331 = (($__v$i$i395) + 8|0);
     $1332 = HEAP32[$1331>>2]|0;
     $1333 = ($1332|0)==(0|0);
     if (!($1333)) {
      ;HEAP32[$1332+0>>2]=HEAP32[$36+0>>2]|0;HEAP32[$1332+4>>2]=HEAP32[$36+4>>2]|0;HEAP32[$1332+8>>2]=HEAP32[$36+8>>2]|0;
      ;HEAP32[$36+0>>2]=0|0;HEAP32[$36+4>>2]=0|0;HEAP32[$36+8>>2]=0|0;
      $1334 = (($1332) + 12|0);
      ;HEAP32[$1334+0>>2]=HEAP32[$1306+0>>2]|0;HEAP32[$1334+4>>2]=HEAP32[$1306+4>>2]|0;HEAP32[$1334+8>>2]=HEAP32[$1306+8>>2]|0;
      ;HEAP32[$1306+0>>2]=0|0;HEAP32[$1306+4>>2]=0|0;HEAP32[$1306+8>>2]=0|0;
     }
     $1335 = (($1332) + 24|0);
     HEAP32[$1331>>2] = $1335;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($36);
    $1336 = (($first) + 2|0);
    $$0 = $1336;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 76:  {
    HEAP8[$37>>0] = 20;
    $1337 = (($37) + 1|0);
    dest=$1337+0|0; src=49760+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1338 = (($37) + 11|0);
    HEAP8[$1338>>0] = 0;
    $1339 = (($37) + 12|0);
    ;HEAP32[$1339+0>>2]=0|0;HEAP32[$1339+4>>2]=0|0;HEAP32[$1339+8>>2]=0|0;
    $1340 = (($db) + 4|0);
    $1341 = HEAP32[$1340>>2]|0;
    $1342 = (($db) + 8|0);
    $1343 = HEAP32[$1342>>2]|0;
    $1344 = ($1341>>>0)<($1343>>>0);
    if ($1344) {
     $1345 = ($1341|0)==(0|0);
     if ($1345) {
      $1348 = 0;
     } else {
      ;HEAP32[$1341+0>>2]=HEAP32[$37+0>>2]|0;HEAP32[$1341+4>>2]=HEAP32[$37+4>>2]|0;HEAP32[$1341+8>>2]=HEAP32[$37+8>>2]|0;
      ;HEAP32[$37+0>>2]=0|0;HEAP32[$37+4>>2]=0|0;HEAP32[$37+8>>2]=0|0;
      $1346 = (($1341) + 12|0);
      ;HEAP32[$1346+0>>2]=HEAP32[$1339+0>>2]|0;HEAP32[$1346+4>>2]=HEAP32[$1339+4>>2]|0;HEAP32[$1346+8>>2]=HEAP32[$1339+8>>2]|0;
      ;HEAP32[$1339+0>>2]=0|0;HEAP32[$1339+4>>2]=0|0;HEAP32[$1339+8>>2]=0|0;
      $$pre$i325 = HEAP32[$1340>>2]|0;
      $1348 = $$pre$i325;
     }
     $1347 = (($1348) + 24|0);
     HEAP32[$1340>>2] = $1347;
    } else {
     $1349 = (($db) + 12|0);
     $1350 = HEAP32[$db>>2]|0;
     $1351 = $1341;
     $1352 = $1350;
     $1353 = (($1351) - ($1352))|0;
     $1354 = (($1353|0) / 24)&-1;
     $1355 = (($1354) + 1)|0;
     $1356 = ($1355|0)<(0);
     if ($1356) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1357 = $1343;
     $1358 = (($1357) - ($1352))|0;
     $1359 = (($1358|0) / 24)&-1;
     $1360 = ($1359>>>0)<(1073741823);
     if ($1360) {
      $1361 = $1359 << 1;
      $1362 = ($1361>>>0)<($1355>>>0);
      $1363 = $1362 ? $1355 : $1361;
      $$0$i$i$i327 = $1363;
     } else {
      $$0$i$i$i327 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i327,$1354,$1349);
     $1364 = (($__v$i$i395) + 8|0);
     $1365 = HEAP32[$1364>>2]|0;
     $1366 = ($1365|0)==(0|0);
     if (!($1366)) {
      ;HEAP32[$1365+0>>2]=HEAP32[$37+0>>2]|0;HEAP32[$1365+4>>2]=HEAP32[$37+4>>2]|0;HEAP32[$1365+8>>2]=HEAP32[$37+8>>2]|0;
      ;HEAP32[$37+0>>2]=0|0;HEAP32[$37+4>>2]=0|0;HEAP32[$37+8>>2]=0|0;
      $1367 = (($1365) + 12|0);
      ;HEAP32[$1367+0>>2]=HEAP32[$1339+0>>2]|0;HEAP32[$1367+4>>2]=HEAP32[$1339+4>>2]|0;HEAP32[$1367+8>>2]=HEAP32[$1339+8>>2]|0;
      ;HEAP32[$1339+0>>2]=0|0;HEAP32[$1339+4>>2]=0|0;HEAP32[$1339+8>>2]=0|0;
     }
     $1368 = (($1365) + 24|0);
     HEAP32[$1364>>2] = $1368;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($37);
    $1369 = (($first) + 2|0);
    $$0 = $1369;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 112:  {
    HEAP8[$38>>0] = 20;
    $1370 = (($38) + 1|0);
    dest=$1370+0|0; src=49776+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1371 = (($38) + 11|0);
    HEAP8[$1371>>0] = 0;
    $1372 = (($38) + 12|0);
    ;HEAP32[$1372+0>>2]=0|0;HEAP32[$1372+4>>2]=0|0;HEAP32[$1372+8>>2]=0|0;
    $1373 = (($db) + 4|0);
    $1374 = HEAP32[$1373>>2]|0;
    $1375 = (($db) + 8|0);
    $1376 = HEAP32[$1375>>2]|0;
    $1377 = ($1374>>>0)<($1376>>>0);
    if ($1377) {
     $1378 = ($1374|0)==(0|0);
     if ($1378) {
      $1381 = 0;
     } else {
      ;HEAP32[$1374+0>>2]=HEAP32[$38+0>>2]|0;HEAP32[$1374+4>>2]=HEAP32[$38+4>>2]|0;HEAP32[$1374+8>>2]=HEAP32[$38+8>>2]|0;
      ;HEAP32[$38+0>>2]=0|0;HEAP32[$38+4>>2]=0|0;HEAP32[$38+8>>2]=0|0;
      $1379 = (($1374) + 12|0);
      ;HEAP32[$1379+0>>2]=HEAP32[$1372+0>>2]|0;HEAP32[$1379+4>>2]=HEAP32[$1372+4>>2]|0;HEAP32[$1379+8>>2]=HEAP32[$1372+8>>2]|0;
      ;HEAP32[$1372+0>>2]=0|0;HEAP32[$1372+4>>2]=0|0;HEAP32[$1372+8>>2]=0|0;
      $$pre$i334 = HEAP32[$1373>>2]|0;
      $1381 = $$pre$i334;
     }
     $1380 = (($1381) + 24|0);
     HEAP32[$1373>>2] = $1380;
    } else {
     $1382 = (($db) + 12|0);
     $1383 = HEAP32[$db>>2]|0;
     $1384 = $1374;
     $1385 = $1383;
     $1386 = (($1384) - ($1385))|0;
     $1387 = (($1386|0) / 24)&-1;
     $1388 = (($1387) + 1)|0;
     $1389 = ($1388|0)<(0);
     if ($1389) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1390 = $1376;
     $1391 = (($1390) - ($1385))|0;
     $1392 = (($1391|0) / 24)&-1;
     $1393 = ($1392>>>0)<(1073741823);
     if ($1393) {
      $1394 = $1392 << 1;
      $1395 = ($1394>>>0)<($1388>>>0);
      $1396 = $1395 ? $1388 : $1394;
      $$0$i$i$i336 = $1396;
     } else {
      $$0$i$i$i336 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i336,$1387,$1382);
     $1397 = (($__v$i$i395) + 8|0);
     $1398 = HEAP32[$1397>>2]|0;
     $1399 = ($1398|0)==(0|0);
     if (!($1399)) {
      ;HEAP32[$1398+0>>2]=HEAP32[$38+0>>2]|0;HEAP32[$1398+4>>2]=HEAP32[$38+4>>2]|0;HEAP32[$1398+8>>2]=HEAP32[$38+8>>2]|0;
      ;HEAP32[$38+0>>2]=0|0;HEAP32[$38+4>>2]=0|0;HEAP32[$38+8>>2]=0|0;
      $1400 = (($1398) + 12|0);
      ;HEAP32[$1400+0>>2]=HEAP32[$1372+0>>2]|0;HEAP32[$1400+4>>2]=HEAP32[$1372+4>>2]|0;HEAP32[$1400+8>>2]=HEAP32[$1372+8>>2]|0;
      ;HEAP32[$1372+0>>2]=0|0;HEAP32[$1372+4>>2]=0|0;HEAP32[$1372+8>>2]=0|0;
     }
     $1401 = (($1398) + 24|0);
     HEAP32[$1397>>2] = $1401;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($38);
    $1402 = (($first) + 2|0);
    $$0 = $1402;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 115:  {
    HEAP8[$39>>0] = 18;
    $1403 = (($39) + 1|0);
    dest=$1403+0|0; src=49744+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1404 = (($39) + 10|0);
    HEAP8[$1404>>0] = 0;
    $1405 = (($39) + 12|0);
    ;HEAP32[$1405+0>>2]=0|0;HEAP32[$1405+4>>2]=0|0;HEAP32[$1405+8>>2]=0|0;
    $1406 = (($db) + 4|0);
    $1407 = HEAP32[$1406>>2]|0;
    $1408 = (($db) + 8|0);
    $1409 = HEAP32[$1408>>2]|0;
    $1410 = ($1407>>>0)<($1409>>>0);
    if ($1410) {
     $1411 = ($1407|0)==(0|0);
     if ($1411) {
      $1414 = 0;
     } else {
      ;HEAP32[$1407+0>>2]=HEAP32[$39+0>>2]|0;HEAP32[$1407+4>>2]=HEAP32[$39+4>>2]|0;HEAP32[$1407+8>>2]=HEAP32[$39+8>>2]|0;
      ;HEAP32[$39+0>>2]=0|0;HEAP32[$39+4>>2]=0|0;HEAP32[$39+8>>2]=0|0;
      $1412 = (($1407) + 12|0);
      ;HEAP32[$1412+0>>2]=HEAP32[$1405+0>>2]|0;HEAP32[$1412+4>>2]=HEAP32[$1405+4>>2]|0;HEAP32[$1412+8>>2]=HEAP32[$1405+8>>2]|0;
      ;HEAP32[$1405+0>>2]=0|0;HEAP32[$1405+4>>2]=0|0;HEAP32[$1405+8>>2]=0|0;
      $$pre$i343 = HEAP32[$1406>>2]|0;
      $1414 = $$pre$i343;
     }
     $1413 = (($1414) + 24|0);
     HEAP32[$1406>>2] = $1413;
    } else {
     $1415 = (($db) + 12|0);
     $1416 = HEAP32[$db>>2]|0;
     $1417 = $1407;
     $1418 = $1416;
     $1419 = (($1417) - ($1418))|0;
     $1420 = (($1419|0) / 24)&-1;
     $1421 = (($1420) + 1)|0;
     $1422 = ($1421|0)<(0);
     if ($1422) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1423 = $1409;
     $1424 = (($1423) - ($1418))|0;
     $1425 = (($1424|0) / 24)&-1;
     $1426 = ($1425>>>0)<(1073741823);
     if ($1426) {
      $1427 = $1425 << 1;
      $1428 = ($1427>>>0)<($1421>>>0);
      $1429 = $1428 ? $1421 : $1427;
      $$0$i$i$i345 = $1429;
     } else {
      $$0$i$i$i345 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i345,$1420,$1415);
     $1430 = (($__v$i$i395) + 8|0);
     $1431 = HEAP32[$1430>>2]|0;
     $1432 = ($1431|0)==(0|0);
     if (!($1432)) {
      ;HEAP32[$1431+0>>2]=HEAP32[$39+0>>2]|0;HEAP32[$1431+4>>2]=HEAP32[$39+4>>2]|0;HEAP32[$1431+8>>2]=HEAP32[$39+8>>2]|0;
      ;HEAP32[$39+0>>2]=0|0;HEAP32[$39+4>>2]=0|0;HEAP32[$39+8>>2]=0|0;
      $1433 = (($1431) + 12|0);
      ;HEAP32[$1433+0>>2]=HEAP32[$1405+0>>2]|0;HEAP32[$1433+4>>2]=HEAP32[$1405+4>>2]|0;HEAP32[$1433+8>>2]=HEAP32[$1405+8>>2]|0;
      ;HEAP32[$1405+0>>2]=0|0;HEAP32[$1405+4>>2]=0|0;HEAP32[$1405+8>>2]=0|0;
     }
     $1434 = (($1431) + 24|0);
     HEAP32[$1430>>2] = $1434;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($39);
    $1435 = (($first) + 2|0);
    $$0 = $1435;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   case 116:  {
    HEAP8[$40>>0] = 20;
    $1436 = (($40) + 1|0);
    dest=$1436+0|0; src=49792+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1437 = (($40) + 11|0);
    HEAP8[$1437>>0] = 0;
    $1438 = (($40) + 12|0);
    ;HEAP32[$1438+0>>2]=0|0;HEAP32[$1438+4>>2]=0|0;HEAP32[$1438+8>>2]=0|0;
    $1439 = (($db) + 4|0);
    $1440 = HEAP32[$1439>>2]|0;
    $1441 = (($db) + 8|0);
    $1442 = HEAP32[$1441>>2]|0;
    $1443 = ($1440>>>0)<($1442>>>0);
    if ($1443) {
     $1444 = ($1440|0)==(0|0);
     if ($1444) {
      $1447 = 0;
     } else {
      ;HEAP32[$1440+0>>2]=HEAP32[$40+0>>2]|0;HEAP32[$1440+4>>2]=HEAP32[$40+4>>2]|0;HEAP32[$1440+8>>2]=HEAP32[$40+8>>2]|0;
      ;HEAP32[$40+0>>2]=0|0;HEAP32[$40+4>>2]=0|0;HEAP32[$40+8>>2]=0|0;
      $1445 = (($1440) + 12|0);
      ;HEAP32[$1445+0>>2]=HEAP32[$1438+0>>2]|0;HEAP32[$1445+4>>2]=HEAP32[$1438+4>>2]|0;HEAP32[$1445+8>>2]=HEAP32[$1438+8>>2]|0;
      ;HEAP32[$1438+0>>2]=0|0;HEAP32[$1438+4>>2]=0|0;HEAP32[$1438+8>>2]=0|0;
      $$pre$i352 = HEAP32[$1439>>2]|0;
      $1447 = $$pre$i352;
     }
     $1446 = (($1447) + 24|0);
     HEAP32[$1439>>2] = $1446;
    } else {
     $1448 = (($db) + 12|0);
     $1449 = HEAP32[$db>>2]|0;
     $1450 = $1440;
     $1451 = $1449;
     $1452 = (($1450) - ($1451))|0;
     $1453 = (($1452|0) / 24)&-1;
     $1454 = (($1453) + 1)|0;
     $1455 = ($1454|0)<(0);
     if ($1455) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1456 = $1442;
     $1457 = (($1456) - ($1451))|0;
     $1458 = (($1457|0) / 24)&-1;
     $1459 = ($1458>>>0)<(1073741823);
     if ($1459) {
      $1460 = $1458 << 1;
      $1461 = ($1460>>>0)<($1454>>>0);
      $1462 = $1461 ? $1454 : $1460;
      $$0$i$i$i354 = $1462;
     } else {
      $$0$i$i$i354 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i354,$1453,$1448);
     $1463 = (($__v$i$i395) + 8|0);
     $1464 = HEAP32[$1463>>2]|0;
     $1465 = ($1464|0)==(0|0);
     if (!($1465)) {
      ;HEAP32[$1464+0>>2]=HEAP32[$40+0>>2]|0;HEAP32[$1464+4>>2]=HEAP32[$40+4>>2]|0;HEAP32[$1464+8>>2]=HEAP32[$40+8>>2]|0;
      ;HEAP32[$40+0>>2]=0|0;HEAP32[$40+4>>2]=0|0;HEAP32[$40+8>>2]=0|0;
      $1466 = (($1464) + 12|0);
      ;HEAP32[$1466+0>>2]=HEAP32[$1438+0>>2]|0;HEAP32[$1466+4>>2]=HEAP32[$1438+4>>2]|0;HEAP32[$1466+8>>2]=HEAP32[$1438+8>>2]|0;
      ;HEAP32[$1438+0>>2]=0|0;HEAP32[$1438+4>>2]=0|0;HEAP32[$1438+8>>2]=0|0;
     }
     $1467 = (($1464) + 24|0);
     HEAP32[$1463>>2] = $1467;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($40);
    $1468 = (($first) + 2|0);
    $$0 = $1468;
    STACKTOP = sp;return ($$0|0);
    break;
   }
   default: {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   }
   break;
  }
  case 113:  {
   $1469 = (($first) + 1|0);
   $1470 = HEAP8[$1469>>0]|0;
   $1471 = ($1470<<24>>24)==(117);
   if (!($1471)) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   HEAP8[$41>>0] = 18;
   $1472 = (($41) + 1|0);
   dest=$1472+0|0; src=49808+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
   $1473 = (($41) + 10|0);
   HEAP8[$1473>>0] = 0;
   $1474 = (($41) + 12|0);
   ;HEAP32[$1474+0>>2]=0|0;HEAP32[$1474+4>>2]=0|0;HEAP32[$1474+8>>2]=0|0;
   $1475 = (($db) + 4|0);
   $1476 = HEAP32[$1475>>2]|0;
   $1477 = (($db) + 8|0);
   $1478 = HEAP32[$1477>>2]|0;
   $1479 = ($1476>>>0)<($1478>>>0);
   if ($1479) {
    $1480 = ($1476|0)==(0|0);
    if ($1480) {
     $1483 = 0;
    } else {
     ;HEAP32[$1476+0>>2]=HEAP32[$41+0>>2]|0;HEAP32[$1476+4>>2]=HEAP32[$41+4>>2]|0;HEAP32[$1476+8>>2]=HEAP32[$41+8>>2]|0;
     ;HEAP32[$41+0>>2]=0|0;HEAP32[$41+4>>2]=0|0;HEAP32[$41+8>>2]=0|0;
     $1481 = (($1476) + 12|0);
     ;HEAP32[$1481+0>>2]=HEAP32[$1474+0>>2]|0;HEAP32[$1481+4>>2]=HEAP32[$1474+4>>2]|0;HEAP32[$1481+8>>2]=HEAP32[$1474+8>>2]|0;
     ;HEAP32[$1474+0>>2]=0|0;HEAP32[$1474+4>>2]=0|0;HEAP32[$1474+8>>2]=0|0;
     $$pre$i361 = HEAP32[$1475>>2]|0;
     $1483 = $$pre$i361;
    }
    $1482 = (($1483) + 24|0);
    HEAP32[$1475>>2] = $1482;
   } else {
    $1484 = (($db) + 12|0);
    $1485 = HEAP32[$db>>2]|0;
    $1486 = $1476;
    $1487 = $1485;
    $1488 = (($1486) - ($1487))|0;
    $1489 = (($1488|0) / 24)&-1;
    $1490 = (($1489) + 1)|0;
    $1491 = ($1490|0)<(0);
    if ($1491) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $1492 = $1478;
    $1493 = (($1492) - ($1487))|0;
    $1494 = (($1493|0) / 24)&-1;
    $1495 = ($1494>>>0)<(1073741823);
    if ($1495) {
     $1496 = $1494 << 1;
     $1497 = ($1496>>>0)<($1490>>>0);
     $1498 = $1497 ? $1490 : $1496;
     $$0$i$i$i363 = $1498;
    } else {
     $$0$i$i$i363 = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i363,$1489,$1484);
    $1499 = (($__v$i$i395) + 8|0);
    $1500 = HEAP32[$1499>>2]|0;
    $1501 = ($1500|0)==(0|0);
    if (!($1501)) {
     ;HEAP32[$1500+0>>2]=HEAP32[$41+0>>2]|0;HEAP32[$1500+4>>2]=HEAP32[$41+4>>2]|0;HEAP32[$1500+8>>2]=HEAP32[$41+8>>2]|0;
     ;HEAP32[$41+0>>2]=0|0;HEAP32[$41+4>>2]=0|0;HEAP32[$41+8>>2]=0|0;
     $1502 = (($1500) + 12|0);
     ;HEAP32[$1502+0>>2]=HEAP32[$1474+0>>2]|0;HEAP32[$1502+4>>2]=HEAP32[$1474+4>>2]|0;HEAP32[$1502+8>>2]=HEAP32[$1474+8>>2]|0;
     ;HEAP32[$1474+0>>2]=0|0;HEAP32[$1474+4>>2]=0|0;HEAP32[$1474+8>>2]=0|0;
    }
    $1503 = (($1500) + 24|0);
    HEAP32[$1499>>2] = $1503;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($41);
   $1504 = (($first) + 2|0);
   $$0 = $1504;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  case 114:  {
   $1505 = (($first) + 1|0);
   $1506 = HEAP8[$1505>>0]|0;
   $1507 = $1506 << 24 >> 24;
   if ((($1507|0) == 109)) {
    HEAP8[$42>>0] = 18;
    $1508 = (($42) + 1|0);
    dest=$1508+0|0; src=49824+0|0; stop=dest+9|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1509 = (($42) + 10|0);
    HEAP8[$1509>>0] = 0;
    $1510 = (($42) + 12|0);
    ;HEAP32[$1510+0>>2]=0|0;HEAP32[$1510+4>>2]=0|0;HEAP32[$1510+8>>2]=0|0;
    $1511 = (($db) + 4|0);
    $1512 = HEAP32[$1511>>2]|0;
    $1513 = (($db) + 8|0);
    $1514 = HEAP32[$1513>>2]|0;
    $1515 = ($1512>>>0)<($1514>>>0);
    if ($1515) {
     $1516 = ($1512|0)==(0|0);
     if ($1516) {
      $1519 = 0;
     } else {
      ;HEAP32[$1512+0>>2]=HEAP32[$42+0>>2]|0;HEAP32[$1512+4>>2]=HEAP32[$42+4>>2]|0;HEAP32[$1512+8>>2]=HEAP32[$42+8>>2]|0;
      ;HEAP32[$42+0>>2]=0|0;HEAP32[$42+4>>2]=0|0;HEAP32[$42+8>>2]=0|0;
      $1517 = (($1512) + 12|0);
      ;HEAP32[$1517+0>>2]=HEAP32[$1510+0>>2]|0;HEAP32[$1517+4>>2]=HEAP32[$1510+4>>2]|0;HEAP32[$1517+8>>2]=HEAP32[$1510+8>>2]|0;
      ;HEAP32[$1510+0>>2]=0|0;HEAP32[$1510+4>>2]=0|0;HEAP32[$1510+8>>2]=0|0;
      $$pre$i370 = HEAP32[$1511>>2]|0;
      $1519 = $$pre$i370;
     }
     $1518 = (($1519) + 24|0);
     HEAP32[$1511>>2] = $1518;
    } else {
     $1520 = (($db) + 12|0);
     $1521 = HEAP32[$db>>2]|0;
     $1522 = $1512;
     $1523 = $1521;
     $1524 = (($1522) - ($1523))|0;
     $1525 = (($1524|0) / 24)&-1;
     $1526 = (($1525) + 1)|0;
     $1527 = ($1526|0)<(0);
     if ($1527) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1528 = $1514;
     $1529 = (($1528) - ($1523))|0;
     $1530 = (($1529|0) / 24)&-1;
     $1531 = ($1530>>>0)<(1073741823);
     if ($1531) {
      $1532 = $1530 << 1;
      $1533 = ($1532>>>0)<($1526>>>0);
      $1534 = $1533 ? $1526 : $1532;
      $$0$i$i$i372 = $1534;
     } else {
      $$0$i$i$i372 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i372,$1525,$1520);
     $1535 = (($__v$i$i395) + 8|0);
     $1536 = HEAP32[$1535>>2]|0;
     $1537 = ($1536|0)==(0|0);
     if (!($1537)) {
      ;HEAP32[$1536+0>>2]=HEAP32[$42+0>>2]|0;HEAP32[$1536+4>>2]=HEAP32[$42+4>>2]|0;HEAP32[$1536+8>>2]=HEAP32[$42+8>>2]|0;
      ;HEAP32[$42+0>>2]=0|0;HEAP32[$42+4>>2]=0|0;HEAP32[$42+8>>2]=0|0;
      $1538 = (($1536) + 12|0);
      ;HEAP32[$1538+0>>2]=HEAP32[$1510+0>>2]|0;HEAP32[$1538+4>>2]=HEAP32[$1510+4>>2]|0;HEAP32[$1538+8>>2]=HEAP32[$1510+8>>2]|0;
      ;HEAP32[$1510+0>>2]=0|0;HEAP32[$1510+4>>2]=0|0;HEAP32[$1510+8>>2]=0|0;
     }
     $1539 = (($1536) + 24|0);
     HEAP32[$1535>>2] = $1539;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($42);
    $1540 = (($first) + 2|0);
    $$0 = $1540;
    STACKTOP = sp;return ($$0|0);
   } else if ((($1507|0) == 77)) {
    HEAP8[$43>>0] = 20;
    $1541 = (($43) + 1|0);
    dest=$1541+0|0; src=49840+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1542 = (($43) + 11|0);
    HEAP8[$1542>>0] = 0;
    $1543 = (($43) + 12|0);
    ;HEAP32[$1543+0>>2]=0|0;HEAP32[$1543+4>>2]=0|0;HEAP32[$1543+8>>2]=0|0;
    $1544 = (($db) + 4|0);
    $1545 = HEAP32[$1544>>2]|0;
    $1546 = (($db) + 8|0);
    $1547 = HEAP32[$1546>>2]|0;
    $1548 = ($1545>>>0)<($1547>>>0);
    if ($1548) {
     $1549 = ($1545|0)==(0|0);
     if ($1549) {
      $1552 = 0;
     } else {
      ;HEAP32[$1545+0>>2]=HEAP32[$43+0>>2]|0;HEAP32[$1545+4>>2]=HEAP32[$43+4>>2]|0;HEAP32[$1545+8>>2]=HEAP32[$43+8>>2]|0;
      ;HEAP32[$43+0>>2]=0|0;HEAP32[$43+4>>2]=0|0;HEAP32[$43+8>>2]=0|0;
      $1550 = (($1545) + 12|0);
      ;HEAP32[$1550+0>>2]=HEAP32[$1543+0>>2]|0;HEAP32[$1550+4>>2]=HEAP32[$1543+4>>2]|0;HEAP32[$1550+8>>2]=HEAP32[$1543+8>>2]|0;
      ;HEAP32[$1543+0>>2]=0|0;HEAP32[$1543+4>>2]=0|0;HEAP32[$1543+8>>2]=0|0;
      $$pre$i379 = HEAP32[$1544>>2]|0;
      $1552 = $$pre$i379;
     }
     $1551 = (($1552) + 24|0);
     HEAP32[$1544>>2] = $1551;
    } else {
     $1553 = (($db) + 12|0);
     $1554 = HEAP32[$db>>2]|0;
     $1555 = $1545;
     $1556 = $1554;
     $1557 = (($1555) - ($1556))|0;
     $1558 = (($1557|0) / 24)&-1;
     $1559 = (($1558) + 1)|0;
     $1560 = ($1559|0)<(0);
     if ($1560) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1561 = $1547;
     $1562 = (($1561) - ($1556))|0;
     $1563 = (($1562|0) / 24)&-1;
     $1564 = ($1563>>>0)<(1073741823);
     if ($1564) {
      $1565 = $1563 << 1;
      $1566 = ($1565>>>0)<($1559>>>0);
      $1567 = $1566 ? $1559 : $1565;
      $$0$i$i$i381 = $1567;
     } else {
      $$0$i$i$i381 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i381,$1558,$1553);
     $1568 = (($__v$i$i395) + 8|0);
     $1569 = HEAP32[$1568>>2]|0;
     $1570 = ($1569|0)==(0|0);
     if (!($1570)) {
      ;HEAP32[$1569+0>>2]=HEAP32[$43+0>>2]|0;HEAP32[$1569+4>>2]=HEAP32[$43+4>>2]|0;HEAP32[$1569+8>>2]=HEAP32[$43+8>>2]|0;
      ;HEAP32[$43+0>>2]=0|0;HEAP32[$43+4>>2]=0|0;HEAP32[$43+8>>2]=0|0;
      $1571 = (($1569) + 12|0);
      ;HEAP32[$1571+0>>2]=HEAP32[$1543+0>>2]|0;HEAP32[$1571+4>>2]=HEAP32[$1543+4>>2]|0;HEAP32[$1571+8>>2]=HEAP32[$1543+8>>2]|0;
      ;HEAP32[$1543+0>>2]=0|0;HEAP32[$1543+4>>2]=0|0;HEAP32[$1543+8>>2]=0|0;
     }
     $1572 = (($1569) + 24|0);
     HEAP32[$1568>>2] = $1572;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($43);
    $1573 = (($first) + 2|0);
    $$0 = $1573;
    STACKTOP = sp;return ($$0|0);
   } else if ((($1507|0) == 115)) {
    HEAP8[$44>>0] = 20;
    $1574 = (($44) + 1|0);
    dest=$1574+0|0; src=49856+0|0; stop=dest+10|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1575 = (($44) + 11|0);
    HEAP8[$1575>>0] = 0;
    $1576 = (($44) + 12|0);
    ;HEAP32[$1576+0>>2]=0|0;HEAP32[$1576+4>>2]=0|0;HEAP32[$1576+8>>2]=0|0;
    $1577 = (($db) + 4|0);
    $1578 = HEAP32[$1577>>2]|0;
    $1579 = (($db) + 8|0);
    $1580 = HEAP32[$1579>>2]|0;
    $1581 = ($1578>>>0)<($1580>>>0);
    if ($1581) {
     $1582 = ($1578|0)==(0|0);
     if ($1582) {
      $1585 = 0;
     } else {
      ;HEAP32[$1578+0>>2]=HEAP32[$44+0>>2]|0;HEAP32[$1578+4>>2]=HEAP32[$44+4>>2]|0;HEAP32[$1578+8>>2]=HEAP32[$44+8>>2]|0;
      ;HEAP32[$44+0>>2]=0|0;HEAP32[$44+4>>2]=0|0;HEAP32[$44+8>>2]=0|0;
      $1583 = (($1578) + 12|0);
      ;HEAP32[$1583+0>>2]=HEAP32[$1576+0>>2]|0;HEAP32[$1583+4>>2]=HEAP32[$1576+4>>2]|0;HEAP32[$1583+8>>2]=HEAP32[$1576+8>>2]|0;
      ;HEAP32[$1576+0>>2]=0|0;HEAP32[$1576+4>>2]=0|0;HEAP32[$1576+8>>2]=0|0;
      $$pre$i388 = HEAP32[$1577>>2]|0;
      $1585 = $$pre$i388;
     }
     $1584 = (($1585) + 24|0);
     HEAP32[$1577>>2] = $1584;
    } else {
     $1586 = (($db) + 12|0);
     $1587 = HEAP32[$db>>2]|0;
     $1588 = $1578;
     $1589 = $1587;
     $1590 = (($1588) - ($1589))|0;
     $1591 = (($1590|0) / 24)&-1;
     $1592 = (($1591) + 1)|0;
     $1593 = ($1592|0)<(0);
     if ($1593) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1594 = $1580;
     $1595 = (($1594) - ($1589))|0;
     $1596 = (($1595|0) / 24)&-1;
     $1597 = ($1596>>>0)<(1073741823);
     if ($1597) {
      $1598 = $1596 << 1;
      $1599 = ($1598>>>0)<($1592>>>0);
      $1600 = $1599 ? $1592 : $1598;
      $$0$i$i$i390 = $1600;
     } else {
      $$0$i$i$i390 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i390,$1591,$1586);
     $1601 = (($__v$i$i395) + 8|0);
     $1602 = HEAP32[$1601>>2]|0;
     $1603 = ($1602|0)==(0|0);
     if (!($1603)) {
      ;HEAP32[$1602+0>>2]=HEAP32[$44+0>>2]|0;HEAP32[$1602+4>>2]=HEAP32[$44+4>>2]|0;HEAP32[$1602+8>>2]=HEAP32[$44+8>>2]|0;
      ;HEAP32[$44+0>>2]=0|0;HEAP32[$44+4>>2]=0|0;HEAP32[$44+8>>2]=0|0;
      $1604 = (($1602) + 12|0);
      ;HEAP32[$1604+0>>2]=HEAP32[$1576+0>>2]|0;HEAP32[$1604+4>>2]=HEAP32[$1576+4>>2]|0;HEAP32[$1604+8>>2]=HEAP32[$1576+8>>2]|0;
      ;HEAP32[$1576+0>>2]=0|0;HEAP32[$1576+4>>2]=0|0;HEAP32[$1576+8>>2]=0|0;
     }
     $1605 = (($1602) + 24|0);
     HEAP32[$1601>>2] = $1605;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($44);
    $1606 = (($first) + 2|0);
    $$0 = $1606;
    STACKTOP = sp;return ($$0|0);
   } else if ((($1507|0) == 83)) {
    $1607 = (_malloc(16)|0);
    $1608 = (($45) + 8|0);
    HEAP32[$1608>>2] = $1607;
    HEAP32[$45>>2] = 17;
    $1609 = (($45) + 4|0);
    HEAP32[$1609>>2] = 11;
    dest=$1607+0|0; src=49872+0|0; stop=dest+11|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $1610 = (($1607) + 11|0);
    HEAP8[$1610>>0] = 0;
    $1611 = (($45) + 12|0);
    ;HEAP32[$1611+0>>2]=0|0;HEAP32[$1611+4>>2]=0|0;HEAP32[$1611+8>>2]=0|0;
    $1612 = (($db) + 4|0);
    $1613 = HEAP32[$1612>>2]|0;
    $1614 = (($db) + 8|0);
    $1615 = HEAP32[$1614>>2]|0;
    $1616 = ($1613>>>0)<($1615>>>0);
    if ($1616) {
     $1617 = ($1613|0)==(0|0);
     if ($1617) {
      $1620 = 0;
     } else {
      ;HEAP32[$1613+0>>2]=HEAP32[$45+0>>2]|0;HEAP32[$1613+4>>2]=HEAP32[$45+4>>2]|0;HEAP32[$1613+8>>2]=HEAP32[$45+8>>2]|0;
      ;HEAP32[$45+0>>2]=0|0;HEAP32[$45+4>>2]=0|0;HEAP32[$45+8>>2]=0|0;
      $1618 = (($1613) + 12|0);
      ;HEAP32[$1618+0>>2]=HEAP32[$1611+0>>2]|0;HEAP32[$1618+4>>2]=HEAP32[$1611+4>>2]|0;HEAP32[$1618+8>>2]=HEAP32[$1611+8>>2]|0;
      ;HEAP32[$1611+0>>2]=0|0;HEAP32[$1611+4>>2]=0|0;HEAP32[$1611+8>>2]=0|0;
      $$pre$i396 = HEAP32[$1612>>2]|0;
      $1620 = $$pre$i396;
     }
     $1619 = (($1620) + 24|0);
     HEAP32[$1612>>2] = $1619;
    } else {
     $1621 = (($db) + 12|0);
     $1622 = HEAP32[$db>>2]|0;
     $1623 = $1613;
     $1624 = $1622;
     $1625 = (($1623) - ($1624))|0;
     $1626 = (($1625|0) / 24)&-1;
     $1627 = (($1626) + 1)|0;
     $1628 = ($1627|0)<(0);
     if ($1628) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
      // unreachable;
     }
     $1629 = $1615;
     $1630 = (($1629) - ($1624))|0;
     $1631 = (($1630|0) / 24)&-1;
     $1632 = ($1631>>>0)<(1073741823);
     if ($1632) {
      $1633 = $1631 << 1;
      $1634 = ($1633>>>0)<($1627>>>0);
      $1635 = $1634 ? $1627 : $1633;
      $$0$i$i$i398 = $1635;
     } else {
      $$0$i$i$i398 = 2147483647;
     }
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i395,$$0$i$i$i398,$1626,$1621);
     $1636 = (($__v$i$i395) + 8|0);
     $1637 = HEAP32[$1636>>2]|0;
     $1638 = ($1637|0)==(0|0);
     if (!($1638)) {
      ;HEAP32[$1637+0>>2]=HEAP32[$45+0>>2]|0;HEAP32[$1637+4>>2]=HEAP32[$45+4>>2]|0;HEAP32[$1637+8>>2]=HEAP32[$45+8>>2]|0;
      ;HEAP32[$45+0>>2]=0|0;HEAP32[$45+4>>2]=0|0;HEAP32[$45+8>>2]=0|0;
      $1639 = (($1637) + 12|0);
      ;HEAP32[$1639+0>>2]=HEAP32[$1611+0>>2]|0;HEAP32[$1639+4>>2]=HEAP32[$1611+4>>2]|0;HEAP32[$1639+8>>2]=HEAP32[$1611+8>>2]|0;
      ;HEAP32[$1611+0>>2]=0|0;HEAP32[$1611+4>>2]=0|0;HEAP32[$1611+8>>2]=0|0;
     }
     $1640 = (($1637) + 24|0);
     HEAP32[$1636>>2] = $1640;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i395);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i395);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($45);
    $1641 = (($first) + 2|0);
    $$0 = $1641;
    STACKTOP = sp;return ($$0|0);
   } else {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   break;
  }
  case 118:  {
   $1642 = (($first) + 1|0);
   $1643 = HEAP8[$1642>>0]|0;
   $1644 = $1643 << 24 >> 24;
   $isdigittmp = (($1644) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   if (!($isdigit)) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1645 = (($first) + 2|0);
   $1646 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($1645,$last,$db)|0);
   $1647 = ($1646|0)==($1645|0);
   if ($1647) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1648 = HEAP32[$db>>2]|0;
   $1649 = (($db) + 4|0);
   $1650 = HEAP32[$1649>>2]|0;
   $1651 = ($1648|0)==($1650|0);
   if ($1651) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $1652 = (($1650) + -24|0);
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($1652,0,49272,9)|0);
   $$0 = $1646;
   STACKTOP = sp;return ($$0|0);
   break;
  }
  default: {
   $$0 = $first;
   STACKTOP = sp;return ($$0|0);
  }
  }
 } while(0);
 return (0)|0;
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($first,$last,$lit,$db) {
 $first = $first|0;
 $last = $last|0;
 $lit = $lit|0;
 $db = $db|0;
 var $$0$i$i$i = 0, $$0$i$i$i6 = 0, $$02 = 0, $$1 = 0, $$pre = 0, $$pre$i = 0, $$pre$i5 = 0, $$sroa$5 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__v$i$i4 = 0;
 var $or$cond = 0, $phitmp = 0, $phitmp7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $__v$i$i4 = sp + 40|0;
 $0 = sp + 16|0;
 $$sroa$5 = sp + 60|0;
 $1 = sp;
 $2 = (__ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($first,$last)|0);
 $3 = ($2|0)==($first|0);
 $4 = ($2|0)==($last|0);
 $or$cond = $3 | $4;
 if ($or$cond) {
  $$1 = $first;
  STACKTOP = sp;return ($$1|0);
 }
 $5 = HEAP8[$2>>0]|0;
 $6 = ($5<<24>>24)==(69);
 if (!($6)) {
  $$1 = $first;
  STACKTOP = sp;return ($$1|0);
 }
 $7 = HEAP8[$lit>>0]|0;
 $8 = $7 & 1;
 $9 = ($8<<24>>24)==(0);
 if ($9) {
  $12 = $7&255;
  $13 = $12 >>> 1;
  $15 = $13;
 } else {
  $10 = (($lit) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $15 = $11;
 }
 $14 = ($15>>>0)>(3);
 do {
  if ($14) {
   __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($1,48744,$lit);
   $16 = (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1,48736,1)|0);
   $17 = HEAP8[$16>>0]|0;
   $18 = (($16) + 1|0);
   ;HEAP8[$$sroa$5+0>>0]=HEAP8[$18+0>>0]|0;HEAP8[$$sroa$5+1>>0]=HEAP8[$18+1>>0]|0;HEAP8[$$sroa$5+2>>0]=HEAP8[$18+2>>0]|0;HEAP8[$$sroa$5+3>>0]=HEAP8[$18+3>>0]|0;HEAP8[$$sroa$5+4>>0]=HEAP8[$18+4>>0]|0;HEAP8[$$sroa$5+5>>0]=HEAP8[$18+5>>0]|0;HEAP8[$$sroa$5+6>>0]=HEAP8[$18+6>>0]|0;
   $19 = (($16) + 8|0);
   $20 = HEAP32[$19>>2]|0;
   ;HEAP32[$16+0>>2]=0|0;HEAP32[$16+4>>2]=0|0;HEAP32[$16+8>>2]=0|0;
   HEAP8[$0>>0] = $17;
   $21 = (($0) + 1|0);
   ;HEAP8[$21+0>>0]=HEAP8[$$sroa$5+0>>0]|0;HEAP8[$21+1>>0]=HEAP8[$$sroa$5+1>>0]|0;HEAP8[$21+2>>0]=HEAP8[$$sroa$5+2>>0]|0;HEAP8[$21+3>>0]=HEAP8[$$sroa$5+3>>0]|0;HEAP8[$21+4>>0]=HEAP8[$$sroa$5+4>>0]|0;HEAP8[$21+5>>0]=HEAP8[$$sroa$5+5>>0]|0;HEAP8[$21+6>>0]=HEAP8[$$sroa$5+6>>0]|0;
   $22 = (($0) + 8|0);
   HEAP32[$22>>2] = $20;
   ;HEAP8[$$sroa$5+0>>0]=0|0;HEAP8[$$sroa$5+1>>0]=0|0;HEAP8[$$sroa$5+2>>0]=0|0;HEAP8[$$sroa$5+3>>0]=0|0;HEAP8[$$sroa$5+4>>0]=0|0;HEAP8[$$sroa$5+5>>0]=0|0;HEAP8[$$sroa$5+6>>0]=0|0;
   $23 = (($0) + 12|0);
   ;HEAP32[$23+0>>2]=0|0;HEAP32[$23+4>>2]=0|0;HEAP32[$23+8>>2]=0|0;
   $24 = (($db) + 4|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (($db) + 8|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = ($25>>>0)<($27>>>0);
   if ($28) {
    $29 = ($25|0)==(0|0);
    if ($29) {
     $32 = 0;
    } else {
     ;HEAP32[$25+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$25+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$25+8>>2]=HEAP32[$0+8>>2]|0;
     ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
     $30 = (($25) + 12|0);
     ;HEAP32[$30+0>>2]=HEAP32[$23+0>>2]|0;HEAP32[$30+4>>2]=HEAP32[$23+4>>2]|0;HEAP32[$30+8>>2]=HEAP32[$23+8>>2]|0;
     ;HEAP32[$23+0>>2]=0|0;HEAP32[$23+4>>2]=0|0;HEAP32[$23+8>>2]=0|0;
     $$pre$i = HEAP32[$24>>2]|0;
     $32 = $$pre$i;
    }
    $31 = (($32) + 24|0);
    HEAP32[$24>>2] = $31;
   } else {
    $33 = (($db) + 12|0);
    $34 = HEAP32[$db>>2]|0;
    $35 = $25;
    $36 = $34;
    $37 = (($35) - ($36))|0;
    $38 = (($37|0) / 24)&-1;
    $39 = (($38) + 1)|0;
    $40 = ($39|0)<(0);
    if ($40) {
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
     // unreachable;
    }
    $41 = $27;
    $42 = (($41) - ($36))|0;
    $43 = (($42|0) / 24)&-1;
    $44 = ($43>>>0)<(1073741823);
    if ($44) {
     $45 = $43 << 1;
     $46 = ($45>>>0)<($39>>>0);
     $47 = $46 ? $39 : $45;
     $$0$i$i$i = $47;
    } else {
     $$0$i$i$i = 2147483647;
    }
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i4,$$0$i$i$i,$38,$33);
    $48 = (($__v$i$i4) + 8|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = ($49|0)==(0|0);
    if (!($50)) {
     ;HEAP32[$49+0>>2]=HEAP32[$0+0>>2]|0;HEAP32[$49+4>>2]=HEAP32[$0+4>>2]|0;HEAP32[$49+8>>2]=HEAP32[$0+8>>2]|0;
     ;HEAP32[$0+0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;
     $51 = (($49) + 12|0);
     ;HEAP32[$51+0>>2]=HEAP32[$23+0>>2]|0;HEAP32[$51+4>>2]=HEAP32[$23+4>>2]|0;HEAP32[$51+8>>2]=HEAP32[$23+8>>2]|0;
     ;HEAP32[$23+0>>2]=0|0;HEAP32[$23+4>>2]=0|0;HEAP32[$23+8>>2]=0|0;
    }
    $52 = (($49) + 24|0);
    HEAP32[$48>>2] = $52;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i4);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i4);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0);
   $$pre = HEAP8[$1>>0]|0;
   $phitmp = $$pre & 1;
   $phitmp7 = ($phitmp<<24>>24)==(0);
   if (!($phitmp7)) {
    $53 = (($1) + 8|0);
    $54 = HEAP32[$53>>2]|0;
    _free($54);
   }
  } else {
   $55 = (($db) + 4|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = (($db) + 8|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ($56>>>0)<($58>>>0);
   if ($59) {
    $60 = ($56|0)==(0|0);
    if ($60) {
     $62 = 0;
    } else {
     ;HEAP32[$56+0>>2]=0|0;HEAP32[$56+4>>2]=0|0;HEAP32[$56+8>>2]=0|0;HEAP32[$56+12>>2]=0|0;HEAP32[$56+16>>2]=0|0;HEAP32[$56+20>>2]=0|0;
     $$pre$i5 = HEAP32[$55>>2]|0;
     $62 = $$pre$i5;
    }
    $61 = (($62) + 24|0);
    HEAP32[$55>>2] = $61;
    break;
   }
   $63 = (($db) + 12|0);
   $64 = HEAP32[$db>>2]|0;
   $65 = $56;
   $66 = $64;
   $67 = (($65) - ($66))|0;
   $68 = (($67|0) / 24)&-1;
   $69 = (($68) + 1)|0;
   $70 = ($69|0)<(0);
   if ($70) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $71 = $58;
   $72 = (($71) - ($66))|0;
   $73 = (($72|0) / 24)&-1;
   $74 = ($73>>>0)<(1073741823);
   if ($74) {
    $75 = $73 << 1;
    $76 = ($75>>>0)<($69>>>0);
    $77 = $76 ? $69 : $75;
    $$0$i$i$i6 = $77;
   } else {
    $$0$i$i$i6 = 2147483647;
   }
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($__v$i$i4,$$0$i$i$i6,$68,$63);
   $78 = (($__v$i$i4) + 8|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = ($79|0)==(0|0);
   if (!($80)) {
    ;HEAP32[$79+0>>2]=0|0;HEAP32[$79+4>>2]=0|0;HEAP32[$79+8>>2]=0|0;HEAP32[$79+12>>2]=0|0;HEAP32[$79+16>>2]=0|0;HEAP32[$79+20>>2]=0|0;
   }
   $81 = (($79) + 24|0);
   HEAP32[$78>>2] = $81;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($db,$__v$i$i4);
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($__v$i$i4);
  }
 } while(0);
 $82 = HEAP8[$first>>0]|0;
 $83 = ($82<<24>>24)==(110);
 $84 = (($db) + 4|0);
 if ($83) {
  $85 = HEAP32[$84>>2]|0;
  $86 = (($85) + -24|0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($86,45);
  $87 = (($first) + 1|0);
  $$02 = $87;
 } else {
  $$02 = $first;
 }
 $88 = HEAP32[$84>>2]|0;
 $89 = (($88) + -24|0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS7_E4typeESC_SC_($89,$$02,$2);
 $90 = HEAP8[$lit>>0]|0;
 $91 = $90 & 1;
 $92 = ($91<<24>>24)==(0);
 if ($92) {
  $95 = $90&255;
  $96 = $95 >>> 1;
  $98 = $96;
 } else {
  $93 = (($lit) + 4|0);
  $94 = HEAP32[$93>>2]|0;
  $98 = $94;
 }
 $97 = ($98>>>0)<(4);
 if ($97) {
  $99 = HEAP32[$84>>2]|0;
  $100 = (($99) + -24|0);
  if ($92) {
   $105 = (($lit) + 1|0);
   $106 = $90&255;
   $107 = $106 >>> 1;
   $108 = $105;$109 = $107;
  } else {
   $101 = (($lit) + 8|0);
   $102 = HEAP32[$101>>2]|0;
   $103 = (($lit) + 4|0);
   $104 = HEAP32[$103>>2]|0;
   $108 = $102;$109 = $104;
  }
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($100,$108,$109)|0);
 }
 $110 = (($2) + 1|0);
 $$1 = $110;
 STACKTOP = sp;return ($$1|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $args = 0, $args3 = 0, $first$ = 0, $t$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $args = sp + 12|0;
 $args3 = sp;
 $0 = $last;
 $1 = $first;
 $2 = (($0) - ($1))|0;
 $3 = ($2|0)>(1);
 if (!($3)) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $4 = HEAP8[$first>>0]|0;
 if ((($4<<24>>24) == 100) | (($4<<24>>24) == 111)) {
  $5 = (($first) + 1|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = ($6<<24>>24)==(110);
  if ($7) {
   $8 = ($4<<24>>24)==(111);
   $9 = (($first) + 2|0);
   if (!($8)) {
    $44 = ($9|0)==($last|0);
    if ($44) {
     $$0$i = $last;
     $54 = ($$0$i|0)==($9|0);
     $first$ = $54 ? $first : $$0$i;
     STACKTOP = sp;return ($first$|0);
    }
    $45 = (__ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($9,$last,$db)|0);
    $46 = ($45|0)==($9|0);
    if ($46) {
     $47 = (__ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($9,$last,$db)|0);
     $t$0$i = $47;
    } else {
     $t$0$i = $45;
    }
    $48 = ($t$0$i|0)==($9|0);
    if ($48) {
     $$0$i = $9;
     $54 = ($$0$i|0)==($9|0);
     $first$ = $54 ? $first : $$0$i;
     STACKTOP = sp;return ($first$|0);
    }
    $49 = HEAP32[$db>>2]|0;
    $50 = (($db) + 4|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = ($49|0)==($51|0);
    if ($52) {
     $$0$i = $9;
     $54 = ($$0$i|0)==($9|0);
     $first$ = $54 ? $first : $$0$i;
     STACKTOP = sp;return ($first$|0);
    }
    $53 = (($51) + -24|0);
    (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($53,0,48880,1)|0);
    $$0$i = $t$0$i;
    $54 = ($$0$i|0)==($9|0);
    $first$ = $54 ? $first : $$0$i;
    STACKTOP = sp;return ($first$|0);
   }
   $10 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($9,$last,$db)|0);
   $11 = ($10|0)==($9|0);
   if ($11) {
    $$0 = $first;
    STACKTOP = sp;return ($$0|0);
   }
   $12 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($10,$last,$db)|0);
   $13 = ($12|0)==($10|0);
   if ($13) {
    $$0 = $10;
    STACKTOP = sp;return ($$0|0);
   }
   $14 = (($db) + 4|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = HEAP32[$db>>2]|0;
   $17 = $15;
   $18 = $16;
   $19 = (($17) - ($18))|0;
   $20 = (($19|0) / 24)&-1;
   $21 = ($20>>>0)<(2);
   if ($21) {
    $$0 = $12;
    STACKTOP = sp;return ($$0|0);
   }
   $22 = (($15) + -24|0);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args,$22);
   $23 = HEAP32[$14>>2]|0;
   $24 = (($23) + -24|0);
   $26 = $23;
   while(1) {
    $25 = (($26) + -24|0);
    HEAP32[$14>>2] = $25;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($25);
    $27 = HEAP32[$14>>2]|0;
    $28 = ($27|0)==($24|0);
    if ($28) {
     break;
    } else {
     $26 = $27;
    }
   }
   $29 = (($23) + -48|0);
   $30 = HEAP8[$args>>0]|0;
   $31 = $30 & 1;
   $32 = ($31<<24>>24)==(0);
   if ($32) {
    $37 = (($args) + 1|0);
    $38 = $30&255;
    $39 = $38 >>> 1;
    $40 = $37;$41 = $39;
   } else {
    $33 = (($args) + 8|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (($args) + 4|0);
    $36 = HEAP32[$35>>2]|0;
    $40 = $34;$41 = $36;
   }
   (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($29,$40,$41)|0);
   if ($32) {
    $$0 = $12;
    STACKTOP = sp;return ($$0|0);
   }
   $42 = (($args) + 8|0);
   $43 = HEAP32[$42>>2]|0;
   _free($43);
   $$0 = $12;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $55 = (__ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 $56 = ($55|0)==($first|0);
 if (!($56)) {
  $$0 = $55;
  STACKTOP = sp;return ($$0|0);
 }
 $57 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 $58 = ($57|0)==($first|0);
 if ($58) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $59 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($57,$last,$db)|0);
 $60 = ($59|0)==($57|0);
 if ($60) {
  $$0 = $57;
  STACKTOP = sp;return ($$0|0);
 }
 $61 = (($db) + 4|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = HEAP32[$db>>2]|0;
 $64 = $62;
 $65 = $63;
 $66 = (($64) - ($65))|0;
 $67 = (($66|0) / 24)&-1;
 $68 = ($67>>>0)<(2);
 if ($68) {
  $$0 = $59;
  STACKTOP = sp;return ($$0|0);
 }
 $69 = (($62) + -24|0);
 __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args3,$69);
 $70 = HEAP32[$61>>2]|0;
 $71 = (($70) + -24|0);
 $73 = $70;
 while(1) {
  $72 = (($73) + -24|0);
  HEAP32[$61>>2] = $72;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($72);
  $74 = HEAP32[$61>>2]|0;
  $75 = ($74|0)==($71|0);
  if ($75) {
   break;
  } else {
   $73 = $74;
  }
 }
 $76 = (($70) + -48|0);
 $77 = HEAP8[$args3>>0]|0;
 $78 = $77 & 1;
 $79 = ($78<<24>>24)==(0);
 if ($79) {
  $84 = (($args3) + 1|0);
  $85 = $77&255;
  $86 = $85 >>> 1;
  $87 = $84;$88 = $86;
 } else {
  $80 = (($args3) + 8|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = (($args3) + 4|0);
  $83 = HEAP32[$82>>2]|0;
  $87 = $81;$88 = $83;
 }
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($76,$87,$88)|0);
 if ($79) {
  $$0 = $59;
  STACKTOP = sp;return ($$0|0);
 }
 $89 = (($args3) + 8|0);
 $90 = HEAP32[$89>>2]|0;
 _free($90);
 $$0 = $59;
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0$i$i$i = 0, $$0$i$i$i16 = 0, $$0$i$i$i8 = 0, $$02 = 0, $$pre$i = 0, $$pre$i14 = 0, $$pre$i6 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__v$i$i13 = 0;
 var $k1$021 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $__v$i$i13 = sp + 20|0;
 $0 = sp + 48|0;
 $1 = sp + 64|0;
 $2 = sp + 72|0;
 $3 = sp + 16|0;
 $4 = sp;
 $5 = sp + 40|0;
 $6 = ($first|0)==($last|0);
 if ($6) {
  $$02 = $first;
  STACKTOP = sp;return ($$02|0);
 }
 $7 = HEAP8[$first>>0]|0;
 $8 = $7 << 24 >> 24;
 if ((($8|0) == 83)) {
  $143 = (__ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
  $144 = ($143|0)==($first|0);
  if (!($144)) {
   $$02 = $143;
   STACKTOP = sp;return ($$02|0);
  }
  $145 = $last;
  $146 = $first;
  $147 = (($145) - ($146))|0;
  $148 = ($147|0)>(2);
  if (!($148)) {
   $$02 = $first;
   STACKTOP = sp;return ($$02|0);
  }
  $149 = (($first) + 1|0);
  $150 = HEAP8[$149>>0]|0;
  $151 = ($150<<24>>24)==(116);
  if (!($151)) {
   $$02 = $first;
   STACKTOP = sp;return ($$02|0);
  }
  $152 = (($first) + 2|0);
  $153 = (__ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($152,$last,$db)|0);
  $154 = ($153|0)==($152|0);
  if ($154) {
   $$02 = $first;
   STACKTOP = sp;return ($$02|0);
  }
  $155 = HEAP32[$db>>2]|0;
  $156 = (($db) + 4|0);
  $157 = HEAP32[$156>>2]|0;
  $158 = ($155|0)==($157|0);
  if ($158) {
   $$02 = $first;
   STACKTOP = sp;return ($$02|0);
  }
  $159 = (($157) + -24|0);
  (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($159,0,49152,5)|0);
  $160 = (($db) + 16|0);
  $161 = HEAP32[$156>>2]|0;
  $162 = (($161) + -24|0);
  $163 = (($db) + 12|0);
  $164 = HEAP32[$163>>2]|0;
  HEAP32[$5>>2] = $164;
  __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($4,$162,$5);
  $165 = (($db) + 20|0);
  $166 = HEAP32[$165>>2]|0;
  $167 = (($db) + 24|0);
  $168 = HEAP32[$167>>2]|0;
  $169 = ($166>>>0)<($168>>>0);
  if ($169) {
   $170 = ($166|0)==(0|0);
   if ($170) {
    $182 = 0;
   } else {
    $171 = (($166) + 4|0);
    $172 = (($4) + 12|0);
    $173 = HEAP32[$172>>2]|0;
    $174 = (($166) + 8|0);
    $175 = (($166) + 12|0);
    HEAP32[$175>>2] = $173;
    $176 = HEAP32[$4>>2]|0;
    HEAP32[$166>>2] = $176;
    $177 = (($4) + 4|0);
    $178 = HEAP32[$177>>2]|0;
    HEAP32[$171>>2] = $178;
    $179 = (($4) + 8|0);
    $180 = HEAP32[$179>>2]|0;
    HEAP32[$174>>2] = $180;
    HEAP32[$179>>2] = 0;
    HEAP32[$177>>2] = 0;
    HEAP32[$4>>2] = 0;
    $$pre$i14 = HEAP32[$165>>2]|0;
    $182 = $$pre$i14;
   }
   $181 = (($182) + 16|0);
   HEAP32[$165>>2] = $181;
  } else {
   $183 = (($db) + 28|0);
   $184 = HEAP32[$160>>2]|0;
   $185 = $166;
   $186 = $184;
   $187 = (($185) - ($186))|0;
   $188 = $187 >> 4;
   $189 = (($188) + 1)|0;
   $190 = ($189|0)<(0);
   if ($190) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $191 = $168;
   $192 = (($191) - ($186))|0;
   $193 = $192 >> 4;
   $194 = ($193>>>0)<(1073741823);
   if ($194) {
    $195 = $192 >> 3;
    $196 = ($195>>>0)<($189>>>0);
    $197 = $196 ? $189 : $195;
    $$0$i$i$i16 = $197;
   } else {
    $$0$i$i$i16 = 2147483647;
   }
   __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i13,$$0$i$i$i16,$188,$183);
   $198 = (($__v$i$i13) + 8|0);
   $199 = HEAP32[$198>>2]|0;
   $200 = ($199|0)==(0|0);
   if (!($200)) {
    $201 = (($199) + 4|0);
    $202 = (($4) + 12|0);
    $203 = HEAP32[$202>>2]|0;
    $204 = (($199) + 8|0);
    $205 = (($199) + 12|0);
    HEAP32[$205>>2] = $203;
    $206 = HEAP32[$4>>2]|0;
    HEAP32[$199>>2] = $206;
    $207 = (($4) + 4|0);
    $208 = HEAP32[$207>>2]|0;
    HEAP32[$201>>2] = $208;
    $209 = (($4) + 8|0);
    $210 = HEAP32[$209>>2]|0;
    HEAP32[$204>>2] = $210;
    HEAP32[$209>>2] = 0;
    HEAP32[$207>>2] = 0;
    HEAP32[$4>>2] = 0;
   }
   $211 = (($199) + 16|0);
   HEAP32[$198>>2] = $211;
   __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($160,$__v$i$i13);
   __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i13);
  }
  __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($4);
  $$02 = $153;
  STACKTOP = sp;return ($$02|0);
 } else if ((($8|0) == 84)) {
  $9 = (($db) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$db>>2]|0;
  $12 = $10;
  $13 = $11;
  $14 = (($12) - ($13))|0;
  $15 = (($14|0) / 24)&-1;
  $16 = (__ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
  $17 = HEAP32[$9>>2]|0;
  $18 = HEAP32[$db>>2]|0;
  $19 = $17;
  $20 = $18;
  $21 = (($19) - ($20))|0;
  $22 = (($21|0) / 24)&-1;
  $23 = ($16|0)!=($first|0);
  $24 = (($15) + 1)|0;
  $25 = ($22|0)==($24|0);
  $or$cond = $23 & $25;
  if (!($or$cond)) {
   $26 = ($22|0)==($15|0);
   if ($26) {
    $$02 = $first;
    STACKTOP = sp;return ($$02|0);
   } else {
    $79 = $17;$k1$021 = $22;
   }
   while(1) {
    $78 = (($79) + -24|0);
    $81 = $79;
    while(1) {
     $80 = (($81) + -24|0);
     HEAP32[$9>>2] = $80;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($80);
     $82 = HEAP32[$9>>2]|0;
     $83 = ($82|0)==($78|0);
     if ($83) {
      break;
     } else {
      $81 = $82;
     }
    }
    $84 = (($k1$021) + -1)|0;
    $85 = ($84|0)==($15|0);
    if ($85) {
     $$02 = $first;
     break;
    } else {
     $79 = $78;$k1$021 = $84;
    }
   }
   STACKTOP = sp;return ($$02|0);
  }
  $27 = (($db) + 16|0);
  $28 = (($17) + -24|0);
  $29 = (($db) + 12|0);
  $30 = HEAP32[$29>>2]|0;
  HEAP32[$1>>2] = $30;
  __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($0,$28,$1);
  $31 = (($db) + 20|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = (($db) + 24|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ($32>>>0)<($34>>>0);
  if ($35) {
   $36 = ($32|0)==(0|0);
   if ($36) {
    $48 = 0;
   } else {
    $37 = (($32) + 4|0);
    $38 = (($0) + 12|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = (($32) + 8|0);
    $41 = (($32) + 12|0);
    HEAP32[$41>>2] = $39;
    $42 = HEAP32[$0>>2]|0;
    HEAP32[$32>>2] = $42;
    $43 = (($0) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    HEAP32[$37>>2] = $44;
    $45 = (($0) + 8|0);
    $46 = HEAP32[$45>>2]|0;
    HEAP32[$40>>2] = $46;
    HEAP32[$45>>2] = 0;
    HEAP32[$43>>2] = 0;
    HEAP32[$0>>2] = 0;
    $$pre$i = HEAP32[$31>>2]|0;
    $48 = $$pre$i;
   }
   $47 = (($48) + 16|0);
   HEAP32[$31>>2] = $47;
  } else {
   $49 = (($db) + 28|0);
   $50 = HEAP32[$27>>2]|0;
   $51 = $32;
   $52 = $50;
   $53 = (($51) - ($52))|0;
   $54 = $53 >> 4;
   $55 = (($54) + 1)|0;
   $56 = ($55|0)<(0);
   if ($56) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $57 = $34;
   $58 = (($57) - ($52))|0;
   $59 = $58 >> 4;
   $60 = ($59>>>0)<(1073741823);
   if ($60) {
    $61 = $58 >> 3;
    $62 = ($61>>>0)<($55>>>0);
    $63 = $62 ? $55 : $61;
    $$0$i$i$i = $63;
   } else {
    $$0$i$i$i = 2147483647;
   }
   __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i13,$$0$i$i$i,$54,$49);
   $64 = (($__v$i$i13) + 8|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = ($65|0)==(0|0);
   if (!($66)) {
    $67 = (($65) + 4|0);
    $68 = (($0) + 12|0);
    $69 = HEAP32[$68>>2]|0;
    $70 = (($65) + 8|0);
    $71 = (($65) + 12|0);
    HEAP32[$71>>2] = $69;
    $72 = HEAP32[$0>>2]|0;
    HEAP32[$65>>2] = $72;
    $73 = (($0) + 4|0);
    $74 = HEAP32[$73>>2]|0;
    HEAP32[$67>>2] = $74;
    $75 = (($0) + 8|0);
    $76 = HEAP32[$75>>2]|0;
    HEAP32[$70>>2] = $76;
    HEAP32[$75>>2] = 0;
    HEAP32[$73>>2] = 0;
    HEAP32[$0>>2] = 0;
   }
   $77 = (($65) + 16|0);
   HEAP32[$64>>2] = $77;
   __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($27,$__v$i$i13);
   __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i13);
  }
  __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($0);
  $$02 = $16;
  STACKTOP = sp;return ($$02|0);
 } else if ((($8|0) == 68)) {
  $86 = (__ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
  $87 = ($86|0)==($first|0);
  if ($87) {
   $$02 = $first;
   STACKTOP = sp;return ($$02|0);
  }
  $88 = HEAP32[$db>>2]|0;
  $89 = (($db) + 4|0);
  $90 = HEAP32[$89>>2]|0;
  $91 = ($88|0)==($90|0);
  if ($91) {
   $$02 = $first;
   STACKTOP = sp;return ($$02|0);
  }
  $92 = (($db) + 16|0);
  $93 = (($90) + -24|0);
  $94 = (($db) + 12|0);
  $95 = HEAP32[$94>>2]|0;
  HEAP32[$3>>2] = $95;
  __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($2,$93,$3);
  $96 = (($db) + 20|0);
  $97 = HEAP32[$96>>2]|0;
  $98 = (($db) + 24|0);
  $99 = HEAP32[$98>>2]|0;
  $100 = ($97>>>0)<($99>>>0);
  if ($100) {
   $101 = ($97|0)==(0|0);
   if ($101) {
    $113 = 0;
   } else {
    $102 = (($97) + 4|0);
    $103 = (($2) + 12|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = (($97) + 8|0);
    $106 = (($97) + 12|0);
    HEAP32[$106>>2] = $104;
    $107 = HEAP32[$2>>2]|0;
    HEAP32[$97>>2] = $107;
    $108 = (($2) + 4|0);
    $109 = HEAP32[$108>>2]|0;
    HEAP32[$102>>2] = $109;
    $110 = (($2) + 8|0);
    $111 = HEAP32[$110>>2]|0;
    HEAP32[$105>>2] = $111;
    HEAP32[$110>>2] = 0;
    HEAP32[$108>>2] = 0;
    HEAP32[$2>>2] = 0;
    $$pre$i6 = HEAP32[$96>>2]|0;
    $113 = $$pre$i6;
   }
   $112 = (($113) + 16|0);
   HEAP32[$96>>2] = $112;
  } else {
   $114 = (($db) + 28|0);
   $115 = HEAP32[$92>>2]|0;
   $116 = $97;
   $117 = $115;
   $118 = (($116) - ($117))|0;
   $119 = $118 >> 4;
   $120 = (($119) + 1)|0;
   $121 = ($120|0)<(0);
   if ($121) {
    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv();
    // unreachable;
   }
   $122 = $99;
   $123 = (($122) - ($117))|0;
   $124 = $123 >> 4;
   $125 = ($124>>>0)<(1073741823);
   if ($125) {
    $126 = $123 >> 3;
    $127 = ($126>>>0)<($120>>>0);
    $128 = $127 ? $120 : $126;
    $$0$i$i$i8 = $128;
   } else {
    $$0$i$i$i8 = 2147483647;
   }
   __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($__v$i$i13,$$0$i$i$i8,$119,$114);
   $129 = (($__v$i$i13) + 8|0);
   $130 = HEAP32[$129>>2]|0;
   $131 = ($130|0)==(0|0);
   if (!($131)) {
    $132 = (($130) + 4|0);
    $133 = (($2) + 12|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = (($130) + 8|0);
    $136 = (($130) + 12|0);
    HEAP32[$136>>2] = $134;
    $137 = HEAP32[$2>>2]|0;
    HEAP32[$130>>2] = $137;
    $138 = (($2) + 4|0);
    $139 = HEAP32[$138>>2]|0;
    HEAP32[$132>>2] = $139;
    $140 = (($2) + 8|0);
    $141 = HEAP32[$140>>2]|0;
    HEAP32[$135>>2] = $141;
    HEAP32[$140>>2] = 0;
    HEAP32[$138>>2] = 0;
    HEAP32[$2>>2] = 0;
   }
   $142 = (($130) + 16|0);
   HEAP32[$129>>2] = $142;
   __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($92,$__v$i$i13);
   __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($__v$i$i13);
  }
  __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($2);
  $$02 = $86;
  STACKTOP = sp;return ($$02|0);
 } else {
  $$02 = $first;
  STACKTOP = sp;return ($$02|0);
 }
 return (0)|0;
}
function __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db) {
 $first = $first|0;
 $last = $last|0;
 $db = $db|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $args = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $args = sp;
 $0 = ($first|0)==($last|0);
 if ($0) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $1 = (__ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($first,$last,$db)|0);
 $2 = ($1|0)==($first|0);
 if ($2) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = (__ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($1,$last,$db)|0);
 $4 = ($3|0)==($1|0);
 if ($4) {
  $$0 = $1;
  STACKTOP = sp;return ($$0|0);
 }
 $5 = (($db) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$db>>2]|0;
 $8 = $6;
 $9 = $7;
 $10 = (($8) - ($9))|0;
 $11 = (($10|0) / 24)&-1;
 $12 = ($11>>>0)<(2);
 if ($12) {
  $$0 = $first;
  STACKTOP = sp;return ($$0|0);
 }
 $13 = (($6) + -24|0);
 __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($args,$13);
 $14 = HEAP32[$5>>2]|0;
 $15 = (($14) + -24|0);
 $17 = $14;
 while(1) {
  $16 = (($17) + -24|0);
  HEAP32[$5>>2] = $16;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($16);
  $18 = HEAP32[$5>>2]|0;
  $19 = ($18|0)==($15|0);
  if ($19) {
   break;
  } else {
   $17 = $18;
  }
 }
 $20 = (($14) + -48|0);
 $21 = HEAP8[$args>>0]|0;
 $22 = $21 & 1;
 $23 = ($22<<24>>24)==(0);
 if ($23) {
  $28 = (($args) + 1|0);
  $29 = $21&255;
  $30 = $29 >>> 1;
  $31 = $28;$32 = $30;
 } else {
  $24 = (($args) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = (($args) + 4|0);
  $27 = HEAP32[$26>>2]|0;
  $31 = $25;$32 = $27;
 }
 (__ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($20,$31,$32)|0);
 if ($23) {
  $$0 = $3;
  STACKTOP = sp;return ($$0|0);
 }
 $33 = (($args) + 8|0);
 $34 = HEAP32[$33>>2]|0;
 _free($34);
 $$0 = $3;
 STACKTOP = sp;return ($$0|0);
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i23$i = 0, $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i24$iZ2D = 0, $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi59$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $$pre58$i$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i12$i = 0, $$sum$i13$i = 0;
 var $$sum$i16$i = 0, $$sum$i19$i = 0, $$sum$i2338 = 0, $$sum$i32 = 0, $$sum$i39 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i14$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum10$pre$i$i = 0, $$sum102$i = 0, $$sum103$i = 0, $$sum104$i = 0, $$sum105$i = 0, $$sum106$i = 0;
 var $$sum107$i = 0, $$sum108$i = 0, $$sum109$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum11$i22$i = 0, $$sum110$i = 0, $$sum111$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum14$pre$i = 0, $$sum15$i = 0;
 var $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0, $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i15$i = 0, $$sum2$i17$i = 0, $$sum2$i21$i = 0, $$sum2$pre$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0;
 var $$sum25$i$i = 0, $$sum26$pre$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0, $$sum3$i = 0, $$sum3$i$i = 0, $$sum3$i27 = 0, $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0;
 var $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0, $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0, $$sum8$pre = 0, $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0;
 var $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0;
 var $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0;
 var $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0;
 var $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0;
 var $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0;
 var $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0;
 var $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0;
 var $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0;
 var $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0;
 var $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0;
 var $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0;
 var $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0;
 var $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0;
 var $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0;
 var $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0;
 var $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0;
 var $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0;
 var $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0;
 var $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0;
 var $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0;
 var $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0;
 var $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0;
 var $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0;
 var $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0;
 var $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0;
 var $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0;
 var $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0;
 var $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0;
 var $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0;
 var $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0;
 var $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0;
 var $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0;
 var $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0;
 var $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0;
 var $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0;
 var $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0;
 var $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0;
 var $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0;
 var $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0;
 var $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0;
 var $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0;
 var $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0;
 var $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0;
 var $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$c$i$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$027$i = 0, $K2$015$i$i = 0, $K8$053$i$i = 0;
 var $R$0$i = 0, $R$0$i$i = 0, $R$0$i18 = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i17 = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i26$i = 0, $T$014$i$i = 0, $T$026$i = 0, $T$052$i$i = 0, $br$0$i = 0, $br$030$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0;
 var $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i27$i = 0, $or$cond$i29 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond24$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond47$i = 0, $or$cond5$i = 0, $or$cond6$i = 0, $or$cond8$i = 0;
 var $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i15 = 0, $rsize$1$i = 0, $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$073$i = 0, $sp$166$i = 0, $ssize$0$i = 0, $ssize$1$i = 0, $ssize$129$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0;
 var $t$1$i = 0, $t$2$ph$i = 0, $t$2$v$3$i = 0, $t$230$i = 0, $tbase$245$i = 0, $tsize$03141$i = 0, $tsize$1$i = 0, $tsize$244$i = 0, $v$0$i = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$332$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   if ($1) {
    $5 = 16;
   } else {
    $2 = (($bytes) + 11)|0;
    $3 = $2 & -8;
    $5 = $3;
   }
   $4 = $5 >>> 3;
   $6 = HEAP32[52744>>2]|0;
   $7 = $6 >>> $4;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($4))|0;
    $13 = $12 << 1;
    $14 = ((52744 + ($13<<2)|0) + 40|0);
    $$sum10 = (($13) + 2)|0;
    $15 = ((52744 + ($$sum10<<2)|0) + 40|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (($16) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[52744>>2] = $22;
     } else {
      $23 = HEAP32[((52744 + 16|0))>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = (($18) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = (($16) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    STACKTOP = sp;return ($mem$0|0);
   }
   $34 = HEAP32[((52744 + 8|0))>>2]|0;
   $35 = ($5>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $4;
     $38 = 2 << $4;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = ((52744 + ($65<<2)|0) + 40|0);
     $$sum4 = (($65) + 2)|0;
     $67 = ((52744 + ($$sum4<<2)|0) + 40|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = (($68) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[52744>>2] = $74;
       $89 = $34;
      } else {
       $75 = HEAP32[((52744 + 16|0))>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = (($70) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[((52744 + 8|0))>>2]|0;
        $89 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($5))|0;
     $82 = $5 | 3;
     $83 = (($68) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($5)|0);
     $85 = $81 | 1;
     $$sum56 = $5 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $88 = ($89|0)==(0);
     if (!($88)) {
      $90 = HEAP32[((52744 + 20|0))>>2]|0;
      $91 = $89 >>> 3;
      $92 = $91 << 1;
      $93 = ((52744 + ($92<<2)|0) + 40|0);
      $94 = HEAP32[52744>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[52744>>2] = $98;
       $$sum8$pre = (($92) + 2)|0;
       $$pre105 = ((52744 + ($$sum8$pre<<2)|0) + 40|0);
       $$pre$phiZ2D = $$pre105;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = ((52744 + ($$sum9<<2)|0) + 40|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[((52744 + 16|0))>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = (($F4$0) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = (($90) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = (($90) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[((52744 + 8|0))>>2] = $81;
     HEAP32[((52744 + 20|0))>>2] = $84;
     $mem$0 = $69;
     STACKTOP = sp;return ($mem$0|0);
    }
    $106 = HEAP32[((52744 + 4|0))>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $5;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = ((52744 + ($130<<2)|0) + 304|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = (($132) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($5))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = (($t$0$i) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = (($t$0$i) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = (($144) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($5))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[((52744 + 16|0))>>2]|0;
     $150 = ($v$0$i>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i) + ($5)|0);
     $152 = ($v$0$i>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = (($v$0$i) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = (($v$0$i) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i|0);
     do {
      if ($157) {
       $167 = (($v$0$i) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = (($v$0$i) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i = $171;$RP$0$i = $170;
        }
       } else {
        $R$0$i = $168;$RP$0$i = $167;
       }
       while(1) {
        $173 = (($R$0$i) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if (!($175)) {
         $R$0$i = $174;$RP$0$i = $173;
         continue;
        }
        $176 = (($R$0$i) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         break;
        } else {
         $R$0$i = $177;$RP$0$i = $176;
        }
       }
       $179 = ($RP$0$i>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i>>2] = 0;
        $R$1$i = $R$0$i;
        break;
       }
      } else {
       $158 = (($v$0$i) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = (($159) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = (($156) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = (($v$0$i) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ((52744 + ($182<<2)|0) + 304|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[((52744 + 4|0))>>2]|0;
         $189 = $188 & $187;
         HEAP32[((52744 + 4|0))>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[((52744 + 16|0))>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = (($154) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = (($154) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[((52744 + 16|0))>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = (($R$1$i) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = (($v$0$i) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = (($R$1$i) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = (($201) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = (($v$0$i) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[((52744 + 16|0))>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = (($R$1$i) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = (($207) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i) + ($5))|0;
      $215 = $214 | 3;
      $216 = (($v$0$i) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $5 | 3;
      $221 = (($v$0$i) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i | 1;
      $$sum$i39 = $5 | 4;
      $223 = (($v$0$i) + ($$sum$i39)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i) + ($5))|0;
      $224 = (($v$0$i) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i;
      $225 = HEAP32[((52744 + 8|0))>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[((52744 + 20|0))>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = ((52744 + ($229<<2)|0) + 40|0);
       $231 = HEAP32[52744>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[52744>>2] = $235;
        $$sum2$pre$i = (($229) + 2)|0;
        $$pre$i = ((52744 + ($$sum2$pre$i<<2)|0) + 40|0);
        $$pre$phi$iZ2D = $$pre$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = ((52744 + ($$sum3$i<<2)|0) + 40|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[((52744 + 16|0))>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = (($F1$0$i) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = (($227) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = (($227) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[((52744 + 8|0))>>2] = $rsize$0$i;
      HEAP32[((52744 + 20|0))>>2] = $151;
     }
     $243 = (($v$0$i) + 8|0);
     $mem$0 = $243;
     STACKTOP = sp;return ($mem$0|0);
    }
   } else {
    $nb$0 = $5;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[((52744 + 4|0))>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = ((52744 + ($idx$0$i<<2)|0) + 304|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L9: do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
      } else {
       $278 = ($idx$0$i|0)==(31);
       if ($278) {
        $282 = 0;
       } else {
        $279 = $idx$0$i >>> 1;
        $280 = (25 - ($279))|0;
        $282 = $280;
       }
       $281 = $246 << $282;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $281;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = (($t$0$i14) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $rsize$2$i = $286;$t$1$i = $t$0$i14;$v$2$i = $t$0$i14;
          break L9;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = (($t$0$i14) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = ((($t$0$i14) + ($291<<2)|0) + 16|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$2$i = $rsize$1$i;$t$1$i = $rst$1$i;$v$2$i = $v$1$i;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
      }
     } while(0);
     $298 = ($t$1$i|0)==(0|0);
     $299 = ($v$2$i|0)==(0|0);
     $or$cond$i = $298 & $299;
     if ($or$cond$i) {
      $300 = 2 << $idx$0$i;
      $301 = (0 - ($300))|0;
      $302 = $300 | $301;
      $303 = $247 & $302;
      $304 = ($303|0)==(0);
      if ($304) {
       $nb$0 = $246;
       break;
      }
      $305 = (0 - ($303))|0;
      $306 = $303 & $305;
      $307 = (($306) + -1)|0;
      $308 = $307 >>> 12;
      $309 = $308 & 16;
      $310 = $307 >>> $309;
      $311 = $310 >>> 5;
      $312 = $311 & 8;
      $313 = $312 | $309;
      $314 = $310 >>> $312;
      $315 = $314 >>> 2;
      $316 = $315 & 4;
      $317 = $313 | $316;
      $318 = $314 >>> $316;
      $319 = $318 >>> 1;
      $320 = $319 & 2;
      $321 = $317 | $320;
      $322 = $318 >>> $320;
      $323 = $322 >>> 1;
      $324 = $323 & 1;
      $325 = $321 | $324;
      $326 = $322 >>> $324;
      $327 = (($325) + ($326))|0;
      $328 = ((52744 + ($327<<2)|0) + 304|0);
      $329 = HEAP32[$328>>2]|0;
      $t$2$ph$i = $329;
     } else {
      $t$2$ph$i = $t$1$i;
     }
     $330 = ($t$2$ph$i|0)==(0|0);
     if ($330) {
      $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$2$i;
     } else {
      $rsize$331$i = $rsize$2$i;$t$230$i = $t$2$ph$i;$v$332$i = $v$2$i;
      while(1) {
       $331 = (($t$230$i) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = (($t$230$i) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if (!($338)) {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $337;$v$332$i = $t$2$v$3$i;
        continue;
       }
       $339 = (($t$230$i) + 20|0);
       $340 = HEAP32[$339>>2]|0;
       $341 = ($340|0)==(0|0);
       if ($341) {
        $rsize$3$lcssa$i = $$rsize$3$i;$v$3$lcssa$i = $t$2$v$3$i;
        break;
       } else {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $340;$v$332$i = $t$2$v$3$i;
       }
      }
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[((52744 + 8|0))>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[((52744 + 16|0))>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = (($v$3$lcssa$i) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = (($v$3$lcssa$i) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = (($v$3$lcssa$i) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = (($v$3$lcssa$i) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18 = $368;$RP$0$i17 = $367;
          }
         } else {
          $R$0$i18 = $365;$RP$0$i17 = $364;
         }
         while(1) {
          $370 = (($R$0$i18) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if (!($372)) {
           $R$0$i18 = $371;$RP$0$i17 = $370;
           continue;
          }
          $373 = (($R$0$i18) + 16|0);
          $374 = HEAP32[$373>>2]|0;
          $375 = ($374|0)==(0|0);
          if ($375) {
           break;
          } else {
           $R$0$i18 = $374;$RP$0$i17 = $373;
          }
         }
         $376 = ($RP$0$i17>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17>>2] = 0;
          $R$1$i20 = $R$0$i18;
          break;
         }
        } else {
         $355 = (($v$3$lcssa$i) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = (($356) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = (($353) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = (($v$3$lcssa$i) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = ((52744 + ($379<<2)|0) + 304|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[((52744 + 4|0))>>2]|0;
           $386 = $385 & $384;
           HEAP32[((52744 + 4|0))>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[((52744 + 16|0))>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = (($351) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = (($351) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[((52744 + 16|0))>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = (($R$1$i20) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = (($v$3$lcssa$i) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = (($R$1$i20) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = (($398) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = (($v$3$lcssa$i) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[((52744 + 16|0))>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = (($R$1$i20) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = (($404) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L87: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = (($v$3$lcssa$i) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = (($v$3$lcssa$i) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2338 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2338)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = ((52744 + ($424<<2)|0) + 40|0);
          $426 = HEAP32[52744>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          do {
           if ($429) {
            $430 = $426 | $427;
            HEAP32[52744>>2] = $430;
            $$sum14$pre$i = (($424) + 2)|0;
            $$pre$i25 = ((52744 + ($$sum14$pre$i<<2)|0) + 40|0);
            $$pre$phi$i26Z2D = $$pre$i25;$F5$0$i = $425;
           } else {
            $$sum17$i = (($424) + 2)|0;
            $431 = ((52744 + ($$sum17$i<<2)|0) + 40|0);
            $432 = HEAP32[$431>>2]|0;
            $433 = HEAP32[((52744 + 16|0))>>2]|0;
            $434 = ($432>>>0)<($433>>>0);
            if (!($434)) {
             $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
             break;
            }
            _abort();
            // unreachable;
           }
          } while(0);
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = (($F5$0$i) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = ((52744 + ($I7$0$i<<2)|0) + 304|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[((52744 + 4|0))>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[((52744 + 4|0))>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ($I7$0$i|0)==(31);
         if ($476) {
          $484 = 0;
         } else {
          $477 = $I7$0$i >>> 1;
          $478 = (25 - ($477))|0;
          $484 = $478;
         }
         $479 = (($475) + 4|0);
         $480 = HEAP32[$479>>2]|0;
         $481 = $480 & -8;
         $482 = ($481|0)==($rsize$3$lcssa$i|0);
         L107: do {
          if ($482) {
           $T$0$lcssa$i = $475;
          } else {
           $483 = $rsize$3$lcssa$i << $484;
           $K12$027$i = $483;$T$026$i = $475;
           while(1) {
            $491 = $K12$027$i >>> 31;
            $492 = ((($T$026$i) + ($491<<2)|0) + 16|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             break;
            }
            $485 = $K12$027$i << 1;
            $486 = (($487) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $T$0$lcssa$i = $487;
             break L107;
            } else {
             $K12$027$i = $485;$T$026$i = $487;
            }
           }
           $494 = HEAP32[((52744 + 16|0))>>2]|0;
           $495 = ($492>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$492>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$026$i;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L87;
           }
          }
         } while(0);
         $499 = (($T$0$lcssa$i) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[((52744 + 16|0))>>2]|0;
         $502 = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = ($500>>>0)>=($501>>>0);
         $or$cond24$i = $502 & $503;
         if ($or$cond24$i) {
          $504 = (($500) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = (($v$3$lcssa$i) + 8|0);
       $mem$0 = $508;
       STACKTOP = sp;return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[((52744 + 8|0))>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[((52744 + 20|0))>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[((52744 + 20|0))>>2] = $514;
   HEAP32[((52744 + 8|0))>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = (($512) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[((52744 + 8|0))>>2] = 0;
   HEAP32[((52744 + 20|0))>>2] = 0;
   $520 = $509 | 3;
   $521 = (($512) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = (($512) + 8|0);
  $mem$0 = $525;
  STACKTOP = sp;return ($mem$0|0);
 }
 $526 = HEAP32[((52744 + 12|0))>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[((52744 + 12|0))>>2] = $528;
  $529 = HEAP32[((52744 + 24|0))>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[((52744 + 24|0))>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = (($529) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = (($529) + 8|0);
  $mem$0 = $535;
  STACKTOP = sp;return ($mem$0|0);
 }
 $536 = HEAP32[53216>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[((53216 + 8|0))>>2] = $538;
    HEAP32[((53216 + 4|0))>>2] = $538;
    HEAP32[((53216 + 12|0))>>2] = -1;
    HEAP32[((53216 + 16|0))>>2] = -1;
    HEAP32[((53216 + 20|0))>>2] = 0;
    HEAP32[((52744 + 444|0))>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[53216>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[((53216 + 8|0))>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  STACKTOP = sp;return ($mem$0|0);
 }
 $552 = HEAP32[((52744 + 440|0))>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[((52744 + 432|0))>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   STACKTOP = sp;return ($mem$0|0);
  }
 }
 $558 = HEAP32[((52744 + 444|0))>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L266: do {
  if ($560) {
   $561 = HEAP32[((52744 + 24|0))>>2]|0;
   $562 = ($561|0)==(0|0);
   L268: do {
    if ($562) {
     label = 181;
    } else {
     $sp$0$i$i = ((52744 + 448|0));
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = (($sp$0$i$i) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        break;
       }
      }
      $569 = (($sp$0$i$i) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 181;
       break L268;
      } else {
       $sp$0$i$i = $570;
      }
     }
     $572 = ($sp$0$i$i|0)==(0|0);
     if ($572) {
      label = 181;
     } else {
      $595 = HEAP32[((52744 + 12|0))>>2]|0;
      $596 = (($548) - ($595))|0;
      $597 = $596 & $549;
      $598 = ($597>>>0)<(2147483647);
      if ($598) {
       $599 = (_sbrk(($597|0))|0);
       $600 = HEAP32[$sp$0$i$i>>2]|0;
       $601 = HEAP32[$565>>2]|0;
       $602 = (($600) + ($601)|0);
       $603 = ($599|0)==($602|0);
       if ($603) {
        $br$0$i = $599;$ssize$1$i = $597;
        label = 190;
       } else {
        $br$030$i = $599;$ssize$129$i = $597;
        label = 191;
       }
      } else {
       $tsize$03141$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 181) {
     $573 = (_sbrk(0)|0);
     $574 = ($573|0)==((-1)|0);
     if ($574) {
      $tsize$03141$i = 0;
     } else {
      $575 = $573;
      $576 = HEAP32[((53216 + 4|0))>>2]|0;
      $577 = (($576) + -1)|0;
      $578 = $577 & $575;
      $579 = ($578|0)==(0);
      if ($579) {
       $ssize$0$i = $550;
      } else {
       $580 = (($577) + ($575))|0;
       $581 = (0 - ($576))|0;
       $582 = $580 & $581;
       $583 = (($550) - ($575))|0;
       $584 = (($583) + ($582))|0;
       $ssize$0$i = $584;
      }
      $585 = HEAP32[((52744 + 432|0))>>2]|0;
      $586 = (($585) + ($ssize$0$i))|0;
      $587 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $588 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i29 = $587 & $588;
      if ($or$cond$i29) {
       $589 = HEAP32[((52744 + 440|0))>>2]|0;
       $590 = ($589|0)==(0);
       if (!($590)) {
        $591 = ($586>>>0)<=($585>>>0);
        $592 = ($586>>>0)>($589>>>0);
        $or$cond2$i = $591 | $592;
        if ($or$cond2$i) {
         $tsize$03141$i = 0;
         break;
        }
       }
       $593 = (_sbrk(($ssize$0$i|0))|0);
       $594 = ($593|0)==($573|0);
       if ($594) {
        $br$0$i = $573;$ssize$1$i = $ssize$0$i;
        label = 190;
       } else {
        $br$030$i = $593;$ssize$129$i = $ssize$0$i;
        label = 191;
       }
      } else {
       $tsize$03141$i = 0;
      }
     }
    }
   } while(0);
   L288: do {
    if ((label|0) == 190) {
     $604 = ($br$0$i|0)==((-1)|0);
     if ($604) {
      $tsize$03141$i = $ssize$1$i;
     } else {
      $tbase$245$i = $br$0$i;$tsize$244$i = $ssize$1$i;
      label = 201;
      break L266;
     }
    }
    else if ((label|0) == 191) {
     $605 = (0 - ($ssize$129$i))|0;
     $606 = ($br$030$i|0)!=((-1)|0);
     $607 = ($ssize$129$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $607;
     $608 = ($545>>>0)>($ssize$129$i>>>0);
     $or$cond4$i = $or$cond5$i & $608;
     do {
      if ($or$cond4$i) {
       $609 = HEAP32[((53216 + 8|0))>>2]|0;
       $610 = (($547) - ($ssize$129$i))|0;
       $611 = (($610) + ($609))|0;
       $612 = (0 - ($609))|0;
       $613 = $611 & $612;
       $614 = ($613>>>0)<(2147483647);
       if ($614) {
        $615 = (_sbrk(($613|0))|0);
        $616 = ($615|0)==((-1)|0);
        if ($616) {
         (_sbrk(($605|0))|0);
         $tsize$03141$i = 0;
         break L288;
        } else {
         $617 = (($613) + ($ssize$129$i))|0;
         $ssize$2$i = $617;
         break;
        }
       } else {
        $ssize$2$i = $ssize$129$i;
       }
      } else {
       $ssize$2$i = $ssize$129$i;
      }
     } while(0);
     $618 = ($br$030$i|0)==((-1)|0);
     if ($618) {
      $tsize$03141$i = 0;
     } else {
      $tbase$245$i = $br$030$i;$tsize$244$i = $ssize$2$i;
      label = 201;
      break L266;
     }
    }
   } while(0);
   $619 = HEAP32[((52744 + 444|0))>>2]|0;
   $620 = $619 | 4;
   HEAP32[((52744 + 444|0))>>2] = $620;
   $tsize$1$i = $tsize$03141$i;
   label = 198;
  } else {
   $tsize$1$i = 0;
   label = 198;
  }
 } while(0);
 if ((label|0) == 198) {
  $621 = ($550>>>0)<(2147483647);
  if ($621) {
   $622 = (_sbrk(($550|0))|0);
   $623 = (_sbrk(0)|0);
   $624 = ($622|0)!=((-1)|0);
   $625 = ($623|0)!=((-1)|0);
   $or$cond3$i = $624 & $625;
   $626 = ($622>>>0)<($623>>>0);
   $or$cond6$i = $or$cond3$i & $626;
   if ($or$cond6$i) {
    $627 = $623;
    $628 = $622;
    $629 = (($627) - ($628))|0;
    $630 = (($nb$0) + 40)|0;
    $631 = ($629>>>0)>($630>>>0);
    $$tsize$1$i = $631 ? $629 : $tsize$1$i;
    if ($631) {
     $tbase$245$i = $622;$tsize$244$i = $$tsize$1$i;
     label = 201;
    }
   }
  }
 }
 if ((label|0) == 201) {
  $632 = HEAP32[((52744 + 432|0))>>2]|0;
  $633 = (($632) + ($tsize$244$i))|0;
  HEAP32[((52744 + 432|0))>>2] = $633;
  $634 = HEAP32[((52744 + 436|0))>>2]|0;
  $635 = ($633>>>0)>($634>>>0);
  if ($635) {
   HEAP32[((52744 + 436|0))>>2] = $633;
  }
  $636 = HEAP32[((52744 + 24|0))>>2]|0;
  $637 = ($636|0)==(0|0);
  L308: do {
   if ($637) {
    $638 = HEAP32[((52744 + 16|0))>>2]|0;
    $639 = ($638|0)==(0|0);
    $640 = ($tbase$245$i>>>0)<($638>>>0);
    $or$cond8$i = $639 | $640;
    if ($or$cond8$i) {
     HEAP32[((52744 + 16|0))>>2] = $tbase$245$i;
    }
    HEAP32[((52744 + 448|0))>>2] = $tbase$245$i;
    HEAP32[((52744 + 452|0))>>2] = $tsize$244$i;
    HEAP32[((52744 + 460|0))>>2] = 0;
    $641 = HEAP32[53216>>2]|0;
    HEAP32[((52744 + 36|0))>>2] = $641;
    HEAP32[((52744 + 32|0))>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $642 = $i$02$i$i << 1;
     $643 = ((52744 + ($642<<2)|0) + 40|0);
     $$sum$i$i = (($642) + 3)|0;
     $644 = ((52744 + ($$sum$i$i<<2)|0) + 40|0);
     HEAP32[$644>>2] = $643;
     $$sum1$i$i = (($642) + 2)|0;
     $645 = ((52744 + ($$sum1$i$i<<2)|0) + 40|0);
     HEAP32[$645>>2] = $643;
     $646 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($646|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $646;
     }
    }
    $647 = (($tsize$244$i) + -40)|0;
    $648 = (($tbase$245$i) + 8|0);
    $649 = $648;
    $650 = $649 & 7;
    $651 = ($650|0)==(0);
    if ($651) {
     $655 = 0;
    } else {
     $652 = (0 - ($649))|0;
     $653 = $652 & 7;
     $655 = $653;
    }
    $654 = (($tbase$245$i) + ($655)|0);
    $656 = (($647) - ($655))|0;
    HEAP32[((52744 + 24|0))>>2] = $654;
    HEAP32[((52744 + 12|0))>>2] = $656;
    $657 = $656 | 1;
    $$sum$i12$i = (($655) + 4)|0;
    $658 = (($tbase$245$i) + ($$sum$i12$i)|0);
    HEAP32[$658>>2] = $657;
    $$sum2$i$i = (($tsize$244$i) + -36)|0;
    $659 = (($tbase$245$i) + ($$sum2$i$i)|0);
    HEAP32[$659>>2] = 40;
    $660 = HEAP32[((53216 + 16|0))>>2]|0;
    HEAP32[((52744 + 28|0))>>2] = $660;
   } else {
    $sp$073$i = ((52744 + 448|0));
    while(1) {
     $661 = HEAP32[$sp$073$i>>2]|0;
     $662 = (($sp$073$i) + 4|0);
     $663 = HEAP32[$662>>2]|0;
     $664 = (($661) + ($663)|0);
     $665 = ($tbase$245$i|0)==($664|0);
     if ($665) {
      label = 213;
      break;
     }
     $666 = (($sp$073$i) + 8|0);
     $667 = HEAP32[$666>>2]|0;
     $668 = ($667|0)==(0|0);
     if ($668) {
      break;
     } else {
      $sp$073$i = $667;
     }
    }
    if ((label|0) == 213) {
     $669 = (($sp$073$i) + 12|0);
     $670 = HEAP32[$669>>2]|0;
     $671 = $670 & 8;
     $672 = ($671|0)==(0);
     if ($672) {
      $673 = ($636>>>0)>=($661>>>0);
      $674 = ($636>>>0)<($tbase$245$i>>>0);
      $or$cond47$i = $673 & $674;
      if ($or$cond47$i) {
       $675 = (($663) + ($tsize$244$i))|0;
       HEAP32[$662>>2] = $675;
       $676 = HEAP32[((52744 + 12|0))>>2]|0;
       $677 = (($676) + ($tsize$244$i))|0;
       $678 = (($636) + 8|0);
       $679 = $678;
       $680 = $679 & 7;
       $681 = ($680|0)==(0);
       if ($681) {
        $685 = 0;
       } else {
        $682 = (0 - ($679))|0;
        $683 = $682 & 7;
        $685 = $683;
       }
       $684 = (($636) + ($685)|0);
       $686 = (($677) - ($685))|0;
       HEAP32[((52744 + 24|0))>>2] = $684;
       HEAP32[((52744 + 12|0))>>2] = $686;
       $687 = $686 | 1;
       $$sum$i16$i = (($685) + 4)|0;
       $688 = (($636) + ($$sum$i16$i)|0);
       HEAP32[$688>>2] = $687;
       $$sum2$i17$i = (($677) + 4)|0;
       $689 = (($636) + ($$sum2$i17$i)|0);
       HEAP32[$689>>2] = 40;
       $690 = HEAP32[((53216 + 16|0))>>2]|0;
       HEAP32[((52744 + 28|0))>>2] = $690;
       break;
      }
     }
    }
    $691 = HEAP32[((52744 + 16|0))>>2]|0;
    $692 = ($tbase$245$i>>>0)<($691>>>0);
    if ($692) {
     HEAP32[((52744 + 16|0))>>2] = $tbase$245$i;
     $756 = $tbase$245$i;
    } else {
     $756 = $691;
    }
    $693 = (($tbase$245$i) + ($tsize$244$i)|0);
    $sp$166$i = ((52744 + 448|0));
    while(1) {
     $694 = HEAP32[$sp$166$i>>2]|0;
     $695 = ($694|0)==($693|0);
     if ($695) {
      label = 223;
      break;
     }
     $696 = (($sp$166$i) + 8|0);
     $697 = HEAP32[$696>>2]|0;
     $698 = ($697|0)==(0|0);
     if ($698) {
      break;
     } else {
      $sp$166$i = $697;
     }
    }
    if ((label|0) == 223) {
     $699 = (($sp$166$i) + 12|0);
     $700 = HEAP32[$699>>2]|0;
     $701 = $700 & 8;
     $702 = ($701|0)==(0);
     if ($702) {
      HEAP32[$sp$166$i>>2] = $tbase$245$i;
      $703 = (($sp$166$i) + 4|0);
      $704 = HEAP32[$703>>2]|0;
      $705 = (($704) + ($tsize$244$i))|0;
      HEAP32[$703>>2] = $705;
      $706 = (($tbase$245$i) + 8|0);
      $707 = $706;
      $708 = $707 & 7;
      $709 = ($708|0)==(0);
      if ($709) {
       $713 = 0;
      } else {
       $710 = (0 - ($707))|0;
       $711 = $710 & 7;
       $713 = $711;
      }
      $712 = (($tbase$245$i) + ($713)|0);
      $$sum102$i = (($tsize$244$i) + 8)|0;
      $714 = (($tbase$245$i) + ($$sum102$i)|0);
      $715 = $714;
      $716 = $715 & 7;
      $717 = ($716|0)==(0);
      if ($717) {
       $720 = 0;
      } else {
       $718 = (0 - ($715))|0;
       $719 = $718 & 7;
       $720 = $719;
      }
      $$sum103$i = (($720) + ($tsize$244$i))|0;
      $721 = (($tbase$245$i) + ($$sum103$i)|0);
      $722 = $721;
      $723 = $712;
      $724 = (($722) - ($723))|0;
      $$sum$i19$i = (($713) + ($nb$0))|0;
      $725 = (($tbase$245$i) + ($$sum$i19$i)|0);
      $726 = (($724) - ($nb$0))|0;
      $727 = $nb$0 | 3;
      $$sum1$i20$i = (($713) + 4)|0;
      $728 = (($tbase$245$i) + ($$sum1$i20$i)|0);
      HEAP32[$728>>2] = $727;
      $729 = ($721|0)==($636|0);
      L345: do {
       if ($729) {
        $730 = HEAP32[((52744 + 12|0))>>2]|0;
        $731 = (($730) + ($726))|0;
        HEAP32[((52744 + 12|0))>>2] = $731;
        HEAP32[((52744 + 24|0))>>2] = $725;
        $732 = $731 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $733 = (($tbase$245$i) + ($$sum42$i$i)|0);
        HEAP32[$733>>2] = $732;
       } else {
        $734 = HEAP32[((52744 + 20|0))>>2]|0;
        $735 = ($721|0)==($734|0);
        if ($735) {
         $736 = HEAP32[((52744 + 8|0))>>2]|0;
         $737 = (($736) + ($726))|0;
         HEAP32[((52744 + 8|0))>>2] = $737;
         HEAP32[((52744 + 20|0))>>2] = $725;
         $738 = $737 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $739 = (($tbase$245$i) + ($$sum40$i$i)|0);
         HEAP32[$739>>2] = $738;
         $$sum41$i$i = (($737) + ($$sum$i19$i))|0;
         $740 = (($tbase$245$i) + ($$sum41$i$i)|0);
         HEAP32[$740>>2] = $737;
         break;
        }
        $$sum2$i21$i = (($tsize$244$i) + 4)|0;
        $$sum104$i = (($$sum2$i21$i) + ($720))|0;
        $741 = (($tbase$245$i) + ($$sum104$i)|0);
        $742 = HEAP32[$741>>2]|0;
        $743 = $742 & 3;
        $744 = ($743|0)==(1);
        if ($744) {
         $745 = $742 & -8;
         $746 = $742 >>> 3;
         $747 = ($742>>>0)<(256);
         L353: do {
          if ($747) {
           $$sum3738$i$i = $720 | 8;
           $$sum114$i = (($$sum3738$i$i) + ($tsize$244$i))|0;
           $748 = (($tbase$245$i) + ($$sum114$i)|0);
           $749 = HEAP32[$748>>2]|0;
           $$sum39$i$i = (($tsize$244$i) + 12)|0;
           $$sum115$i = (($$sum39$i$i) + ($720))|0;
           $750 = (($tbase$245$i) + ($$sum115$i)|0);
           $751 = HEAP32[$750>>2]|0;
           $752 = $746 << 1;
           $753 = ((52744 + ($752<<2)|0) + 40|0);
           $754 = ($749|0)==($753|0);
           do {
            if (!($754)) {
             $755 = ($749>>>0)<($756>>>0);
             if ($755) {
              _abort();
              // unreachable;
             }
             $757 = (($749) + 12|0);
             $758 = HEAP32[$757>>2]|0;
             $759 = ($758|0)==($721|0);
             if ($759) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $760 = ($751|0)==($749|0);
           if ($760) {
            $761 = 1 << $746;
            $762 = $761 ^ -1;
            $763 = HEAP32[52744>>2]|0;
            $764 = $763 & $762;
            HEAP32[52744>>2] = $764;
            break;
           }
           $765 = ($751|0)==($753|0);
           do {
            if ($765) {
             $$pre58$i$i = (($751) + 8|0);
             $$pre$phi59$i$iZ2D = $$pre58$i$i;
            } else {
             $766 = ($751>>>0)<($756>>>0);
             if ($766) {
              _abort();
              // unreachable;
             }
             $767 = (($751) + 8|0);
             $768 = HEAP32[$767>>2]|0;
             $769 = ($768|0)==($721|0);
             if ($769) {
              $$pre$phi59$i$iZ2D = $767;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $770 = (($749) + 12|0);
           HEAP32[$770>>2] = $751;
           HEAP32[$$pre$phi59$i$iZ2D>>2] = $749;
          } else {
           $$sum34$i$i = $720 | 24;
           $$sum105$i = (($$sum34$i$i) + ($tsize$244$i))|0;
           $771 = (($tbase$245$i) + ($$sum105$i)|0);
           $772 = HEAP32[$771>>2]|0;
           $$sum5$i$i = (($tsize$244$i) + 12)|0;
           $$sum106$i = (($$sum5$i$i) + ($720))|0;
           $773 = (($tbase$245$i) + ($$sum106$i)|0);
           $774 = HEAP32[$773>>2]|0;
           $775 = ($774|0)==($721|0);
           do {
            if ($775) {
             $$sum67$i$i = $720 | 16;
             $$sum112$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $785 = (($tbase$245$i) + ($$sum112$i)|0);
             $786 = HEAP32[$785>>2]|0;
             $787 = ($786|0)==(0|0);
             if ($787) {
              $$sum113$i = (($$sum67$i$i) + ($tsize$244$i))|0;
              $788 = (($tbase$245$i) + ($$sum113$i)|0);
              $789 = HEAP32[$788>>2]|0;
              $790 = ($789|0)==(0|0);
              if ($790) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i = $789;$RP$0$i$i = $788;
              }
             } else {
              $R$0$i$i = $786;$RP$0$i$i = $785;
             }
             while(1) {
              $791 = (($R$0$i$i) + 20|0);
              $792 = HEAP32[$791>>2]|0;
              $793 = ($792|0)==(0|0);
              if (!($793)) {
               $R$0$i$i = $792;$RP$0$i$i = $791;
               continue;
              }
              $794 = (($R$0$i$i) + 16|0);
              $795 = HEAP32[$794>>2]|0;
              $796 = ($795|0)==(0|0);
              if ($796) {
               break;
              } else {
               $R$0$i$i = $795;$RP$0$i$i = $794;
              }
             }
             $797 = ($RP$0$i$i>>>0)<($756>>>0);
             if ($797) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i>>2] = 0;
              $R$1$i$i = $R$0$i$i;
              break;
             }
            } else {
             $$sum3536$i$i = $720 | 8;
             $$sum107$i = (($$sum3536$i$i) + ($tsize$244$i))|0;
             $776 = (($tbase$245$i) + ($$sum107$i)|0);
             $777 = HEAP32[$776>>2]|0;
             $778 = ($777>>>0)<($756>>>0);
             if ($778) {
              _abort();
              // unreachable;
             }
             $779 = (($777) + 12|0);
             $780 = HEAP32[$779>>2]|0;
             $781 = ($780|0)==($721|0);
             if (!($781)) {
              _abort();
              // unreachable;
             }
             $782 = (($774) + 8|0);
             $783 = HEAP32[$782>>2]|0;
             $784 = ($783|0)==($721|0);
             if ($784) {
              HEAP32[$779>>2] = $774;
              HEAP32[$782>>2] = $777;
              $R$1$i$i = $774;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $798 = ($772|0)==(0|0);
           if ($798) {
            break;
           }
           $$sum30$i$i = (($tsize$244$i) + 28)|0;
           $$sum108$i = (($$sum30$i$i) + ($720))|0;
           $799 = (($tbase$245$i) + ($$sum108$i)|0);
           $800 = HEAP32[$799>>2]|0;
           $801 = ((52744 + ($800<<2)|0) + 304|0);
           $802 = HEAP32[$801>>2]|0;
           $803 = ($721|0)==($802|0);
           do {
            if ($803) {
             HEAP32[$801>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $804 = 1 << $800;
             $805 = $804 ^ -1;
             $806 = HEAP32[((52744 + 4|0))>>2]|0;
             $807 = $806 & $805;
             HEAP32[((52744 + 4|0))>>2] = $807;
             break L353;
            } else {
             $808 = HEAP32[((52744 + 16|0))>>2]|0;
             $809 = ($772>>>0)<($808>>>0);
             if ($809) {
              _abort();
              // unreachable;
             }
             $810 = (($772) + 16|0);
             $811 = HEAP32[$810>>2]|0;
             $812 = ($811|0)==($721|0);
             if ($812) {
              HEAP32[$810>>2] = $R$1$i$i;
             } else {
              $813 = (($772) + 20|0);
              HEAP32[$813>>2] = $R$1$i$i;
             }
             $814 = ($R$1$i$i|0)==(0|0);
             if ($814) {
              break L353;
             }
            }
           } while(0);
           $815 = HEAP32[((52744 + 16|0))>>2]|0;
           $816 = ($R$1$i$i>>>0)<($815>>>0);
           if ($816) {
            _abort();
            // unreachable;
           }
           $817 = (($R$1$i$i) + 24|0);
           HEAP32[$817>>2] = $772;
           $$sum3132$i$i = $720 | 16;
           $$sum109$i = (($$sum3132$i$i) + ($tsize$244$i))|0;
           $818 = (($tbase$245$i) + ($$sum109$i)|0);
           $819 = HEAP32[$818>>2]|0;
           $820 = ($819|0)==(0|0);
           do {
            if (!($820)) {
             $821 = ($819>>>0)<($815>>>0);
             if ($821) {
              _abort();
              // unreachable;
             } else {
              $822 = (($R$1$i$i) + 16|0);
              HEAP32[$822>>2] = $819;
              $823 = (($819) + 24|0);
              HEAP32[$823>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum110$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $824 = (($tbase$245$i) + ($$sum110$i)|0);
           $825 = HEAP32[$824>>2]|0;
           $826 = ($825|0)==(0|0);
           if ($826) {
            break;
           }
           $827 = HEAP32[((52744 + 16|0))>>2]|0;
           $828 = ($825>>>0)<($827>>>0);
           if ($828) {
            _abort();
            // unreachable;
           } else {
            $829 = (($R$1$i$i) + 20|0);
            HEAP32[$829>>2] = $825;
            $830 = (($825) + 24|0);
            HEAP32[$830>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $745 | $720;
         $$sum111$i = (($$sum9$i$i) + ($tsize$244$i))|0;
         $831 = (($tbase$245$i) + ($$sum111$i)|0);
         $832 = (($745) + ($726))|0;
         $oldfirst$0$i$i = $831;$qsize$0$i$i = $832;
        } else {
         $oldfirst$0$i$i = $721;$qsize$0$i$i = $726;
        }
        $833 = (($oldfirst$0$i$i) + 4|0);
        $834 = HEAP32[$833>>2]|0;
        $835 = $834 & -2;
        HEAP32[$833>>2] = $835;
        $836 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $837 = (($tbase$245$i) + ($$sum10$i$i)|0);
        HEAP32[$837>>2] = $836;
        $$sum11$i22$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $838 = (($tbase$245$i) + ($$sum11$i22$i)|0);
        HEAP32[$838>>2] = $qsize$0$i$i;
        $839 = $qsize$0$i$i >>> 3;
        $840 = ($qsize$0$i$i>>>0)<(256);
        if ($840) {
         $841 = $839 << 1;
         $842 = ((52744 + ($841<<2)|0) + 40|0);
         $843 = HEAP32[52744>>2]|0;
         $844 = 1 << $839;
         $845 = $843 & $844;
         $846 = ($845|0)==(0);
         do {
          if ($846) {
           $847 = $843 | $844;
           HEAP32[52744>>2] = $847;
           $$sum26$pre$i$i = (($841) + 2)|0;
           $$pre$i23$i = ((52744 + ($$sum26$pre$i$i<<2)|0) + 40|0);
           $$pre$phi$i24$iZ2D = $$pre$i23$i;$F4$0$i$i = $842;
          } else {
           $$sum29$i$i = (($841) + 2)|0;
           $848 = ((52744 + ($$sum29$i$i<<2)|0) + 40|0);
           $849 = HEAP32[$848>>2]|0;
           $850 = HEAP32[((52744 + 16|0))>>2]|0;
           $851 = ($849>>>0)<($850>>>0);
           if (!($851)) {
            $$pre$phi$i24$iZ2D = $848;$F4$0$i$i = $849;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i24$iZ2D>>2] = $725;
         $852 = (($F4$0$i$i) + 12|0);
         HEAP32[$852>>2] = $725;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $853 = (($tbase$245$i) + ($$sum27$i$i)|0);
         HEAP32[$853>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $854 = (($tbase$245$i) + ($$sum28$i$i)|0);
         HEAP32[$854>>2] = $842;
         break;
        }
        $855 = $qsize$0$i$i >>> 8;
        $856 = ($855|0)==(0);
        do {
         if ($856) {
          $I7$0$i$i = 0;
         } else {
          $857 = ($qsize$0$i$i>>>0)>(16777215);
          if ($857) {
           $I7$0$i$i = 31;
           break;
          }
          $858 = (($855) + 1048320)|0;
          $859 = $858 >>> 16;
          $860 = $859 & 8;
          $861 = $855 << $860;
          $862 = (($861) + 520192)|0;
          $863 = $862 >>> 16;
          $864 = $863 & 4;
          $865 = $864 | $860;
          $866 = $861 << $864;
          $867 = (($866) + 245760)|0;
          $868 = $867 >>> 16;
          $869 = $868 & 2;
          $870 = $865 | $869;
          $871 = (14 - ($870))|0;
          $872 = $866 << $869;
          $873 = $872 >>> 15;
          $874 = (($871) + ($873))|0;
          $875 = $874 << 1;
          $876 = (($874) + 7)|0;
          $877 = $qsize$0$i$i >>> $876;
          $878 = $877 & 1;
          $879 = $878 | $875;
          $I7$0$i$i = $879;
         }
        } while(0);
        $880 = ((52744 + ($I7$0$i$i<<2)|0) + 304|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $881 = (($tbase$245$i) + ($$sum12$i$i)|0);
        HEAP32[$881>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $882 = (($tbase$245$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $883 = (($tbase$245$i) + ($$sum14$i$i)|0);
        HEAP32[$883>>2] = 0;
        HEAP32[$882>>2] = 0;
        $884 = HEAP32[((52744 + 4|0))>>2]|0;
        $885 = 1 << $I7$0$i$i;
        $886 = $884 & $885;
        $887 = ($886|0)==(0);
        if ($887) {
         $888 = $884 | $885;
         HEAP32[((52744 + 4|0))>>2] = $888;
         HEAP32[$880>>2] = $725;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $889 = (($tbase$245$i) + ($$sum15$i$i)|0);
         HEAP32[$889>>2] = $880;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $890 = (($tbase$245$i) + ($$sum16$i$i)|0);
         HEAP32[$890>>2] = $725;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $891 = (($tbase$245$i) + ($$sum17$i$i)|0);
         HEAP32[$891>>2] = $725;
         break;
        }
        $892 = HEAP32[$880>>2]|0;
        $893 = ($I7$0$i$i|0)==(31);
        if ($893) {
         $901 = 0;
        } else {
         $894 = $I7$0$i$i >>> 1;
         $895 = (25 - ($894))|0;
         $901 = $895;
        }
        $896 = (($892) + 4|0);
        $897 = HEAP32[$896>>2]|0;
        $898 = $897 & -8;
        $899 = ($898|0)==($qsize$0$i$i|0);
        L442: do {
         if ($899) {
          $T$0$lcssa$i26$i = $892;
         } else {
          $900 = $qsize$0$i$i << $901;
          $K8$053$i$i = $900;$T$052$i$i = $892;
          while(1) {
           $908 = $K8$053$i$i >>> 31;
           $909 = ((($T$052$i$i) + ($908<<2)|0) + 16|0);
           $904 = HEAP32[$909>>2]|0;
           $910 = ($904|0)==(0|0);
           if ($910) {
            break;
           }
           $902 = $K8$053$i$i << 1;
           $903 = (($904) + 4|0);
           $905 = HEAP32[$903>>2]|0;
           $906 = $905 & -8;
           $907 = ($906|0)==($qsize$0$i$i|0);
           if ($907) {
            $T$0$lcssa$i26$i = $904;
            break L442;
           } else {
            $K8$053$i$i = $902;$T$052$i$i = $904;
           }
          }
          $911 = HEAP32[((52744 + 16|0))>>2]|0;
          $912 = ($909>>>0)<($911>>>0);
          if ($912) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$909>>2] = $725;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $913 = (($tbase$245$i) + ($$sum23$i$i)|0);
           HEAP32[$913>>2] = $T$052$i$i;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $914 = (($tbase$245$i) + ($$sum24$i$i)|0);
           HEAP32[$914>>2] = $725;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $915 = (($tbase$245$i) + ($$sum25$i$i)|0);
           HEAP32[$915>>2] = $725;
           break L345;
          }
         }
        } while(0);
        $916 = (($T$0$lcssa$i26$i) + 8|0);
        $917 = HEAP32[$916>>2]|0;
        $918 = HEAP32[((52744 + 16|0))>>2]|0;
        $919 = ($T$0$lcssa$i26$i>>>0)>=($918>>>0);
        $920 = ($917>>>0)>=($918>>>0);
        $or$cond$i27$i = $919 & $920;
        if ($or$cond$i27$i) {
         $921 = (($917) + 12|0);
         HEAP32[$921>>2] = $725;
         HEAP32[$916>>2] = $725;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $922 = (($tbase$245$i) + ($$sum20$i$i)|0);
         HEAP32[$922>>2] = $917;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $923 = (($tbase$245$i) + ($$sum21$i$i)|0);
         HEAP32[$923>>2] = $T$0$lcssa$i26$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $924 = (($tbase$245$i) + ($$sum22$i$i)|0);
         HEAP32[$924>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $713 | 8;
      $925 = (($tbase$245$i) + ($$sum1819$i$i)|0);
      $mem$0 = $925;
      STACKTOP = sp;return ($mem$0|0);
     }
    }
    $sp$0$i$i$i = ((52744 + 448|0));
    while(1) {
     $926 = HEAP32[$sp$0$i$i$i>>2]|0;
     $927 = ($926>>>0)>($636>>>0);
     if (!($927)) {
      $928 = (($sp$0$i$i$i) + 4|0);
      $929 = HEAP32[$928>>2]|0;
      $930 = (($926) + ($929)|0);
      $931 = ($930>>>0)>($636>>>0);
      if ($931) {
       break;
      }
     }
     $932 = (($sp$0$i$i$i) + 8|0);
     $933 = HEAP32[$932>>2]|0;
     $sp$0$i$i$i = $933;
    }
    $$sum$i13$i = (($929) + -47)|0;
    $$sum1$i14$i = (($929) + -39)|0;
    $934 = (($926) + ($$sum1$i14$i)|0);
    $935 = $934;
    $936 = $935 & 7;
    $937 = ($936|0)==(0);
    if ($937) {
     $940 = 0;
    } else {
     $938 = (0 - ($935))|0;
     $939 = $938 & 7;
     $940 = $939;
    }
    $$sum2$i15$i = (($$sum$i13$i) + ($940))|0;
    $941 = (($926) + ($$sum2$i15$i)|0);
    $942 = (($636) + 16|0);
    $943 = ($941>>>0)<($942>>>0);
    $944 = $943 ? $636 : $941;
    $945 = (($944) + 8|0);
    $946 = (($tsize$244$i) + -40)|0;
    $947 = (($tbase$245$i) + 8|0);
    $948 = $947;
    $949 = $948 & 7;
    $950 = ($949|0)==(0);
    if ($950) {
     $954 = 0;
    } else {
     $951 = (0 - ($948))|0;
     $952 = $951 & 7;
     $954 = $952;
    }
    $953 = (($tbase$245$i) + ($954)|0);
    $955 = (($946) - ($954))|0;
    HEAP32[((52744 + 24|0))>>2] = $953;
    HEAP32[((52744 + 12|0))>>2] = $955;
    $956 = $955 | 1;
    $$sum$i$i$i = (($954) + 4)|0;
    $957 = (($tbase$245$i) + ($$sum$i$i$i)|0);
    HEAP32[$957>>2] = $956;
    $$sum2$i$i$i = (($tsize$244$i) + -36)|0;
    $958 = (($tbase$245$i) + ($$sum2$i$i$i)|0);
    HEAP32[$958>>2] = 40;
    $959 = HEAP32[((53216 + 16|0))>>2]|0;
    HEAP32[((52744 + 28|0))>>2] = $959;
    $960 = (($944) + 4|0);
    HEAP32[$960>>2] = 27;
    ;HEAP32[$945+0>>2]=HEAP32[((52744 + 448|0))+0>>2]|0;HEAP32[$945+4>>2]=HEAP32[((52744 + 448|0))+4>>2]|0;HEAP32[$945+8>>2]=HEAP32[((52744 + 448|0))+8>>2]|0;HEAP32[$945+12>>2]=HEAP32[((52744 + 448|0))+12>>2]|0;
    HEAP32[((52744 + 448|0))>>2] = $tbase$245$i;
    HEAP32[((52744 + 452|0))>>2] = $tsize$244$i;
    HEAP32[((52744 + 460|0))>>2] = 0;
    HEAP32[((52744 + 456|0))>>2] = $945;
    $961 = (($944) + 28|0);
    HEAP32[$961>>2] = 7;
    $962 = (($944) + 32|0);
    $963 = ($962>>>0)<($930>>>0);
    if ($963) {
     $965 = $961;
     while(1) {
      $964 = (($965) + 4|0);
      HEAP32[$964>>2] = 7;
      $966 = (($965) + 8|0);
      $967 = ($966>>>0)<($930>>>0);
      if ($967) {
       $965 = $964;
      } else {
       break;
      }
     }
    }
    $968 = ($944|0)==($636|0);
    if (!($968)) {
     $969 = $944;
     $970 = $636;
     $971 = (($969) - ($970))|0;
     $972 = (($636) + ($971)|0);
     $$sum3$i$i = (($971) + 4)|0;
     $973 = (($636) + ($$sum3$i$i)|0);
     $974 = HEAP32[$973>>2]|0;
     $975 = $974 & -2;
     HEAP32[$973>>2] = $975;
     $976 = $971 | 1;
     $977 = (($636) + 4|0);
     HEAP32[$977>>2] = $976;
     HEAP32[$972>>2] = $971;
     $978 = $971 >>> 3;
     $979 = ($971>>>0)<(256);
     if ($979) {
      $980 = $978 << 1;
      $981 = ((52744 + ($980<<2)|0) + 40|0);
      $982 = HEAP32[52744>>2]|0;
      $983 = 1 << $978;
      $984 = $982 & $983;
      $985 = ($984|0)==(0);
      do {
       if ($985) {
        $986 = $982 | $983;
        HEAP32[52744>>2] = $986;
        $$sum10$pre$i$i = (($980) + 2)|0;
        $$pre$i$i = ((52744 + ($$sum10$pre$i$i<<2)|0) + 40|0);
        $$pre$phi$i$iZ2D = $$pre$i$i;$F$0$i$i = $981;
       } else {
        $$sum11$i$i = (($980) + 2)|0;
        $987 = ((52744 + ($$sum11$i$i<<2)|0) + 40|0);
        $988 = HEAP32[$987>>2]|0;
        $989 = HEAP32[((52744 + 16|0))>>2]|0;
        $990 = ($988>>>0)<($989>>>0);
        if (!($990)) {
         $$pre$phi$i$iZ2D = $987;$F$0$i$i = $988;
         break;
        }
        _abort();
        // unreachable;
       }
      } while(0);
      HEAP32[$$pre$phi$i$iZ2D>>2] = $636;
      $991 = (($F$0$i$i) + 12|0);
      HEAP32[$991>>2] = $636;
      $992 = (($636) + 8|0);
      HEAP32[$992>>2] = $F$0$i$i;
      $993 = (($636) + 12|0);
      HEAP32[$993>>2] = $981;
      break;
     }
     $994 = $971 >>> 8;
     $995 = ($994|0)==(0);
     if ($995) {
      $I1$0$i$i = 0;
     } else {
      $996 = ($971>>>0)>(16777215);
      if ($996) {
       $I1$0$i$i = 31;
      } else {
       $997 = (($994) + 1048320)|0;
       $998 = $997 >>> 16;
       $999 = $998 & 8;
       $1000 = $994 << $999;
       $1001 = (($1000) + 520192)|0;
       $1002 = $1001 >>> 16;
       $1003 = $1002 & 4;
       $1004 = $1003 | $999;
       $1005 = $1000 << $1003;
       $1006 = (($1005) + 245760)|0;
       $1007 = $1006 >>> 16;
       $1008 = $1007 & 2;
       $1009 = $1004 | $1008;
       $1010 = (14 - ($1009))|0;
       $1011 = $1005 << $1008;
       $1012 = $1011 >>> 15;
       $1013 = (($1010) + ($1012))|0;
       $1014 = $1013 << 1;
       $1015 = (($1013) + 7)|0;
       $1016 = $971 >>> $1015;
       $1017 = $1016 & 1;
       $1018 = $1017 | $1014;
       $I1$0$i$i = $1018;
      }
     }
     $1019 = ((52744 + ($I1$0$i$i<<2)|0) + 304|0);
     $1020 = (($636) + 28|0);
     $I1$0$c$i$i = $I1$0$i$i;
     HEAP32[$1020>>2] = $I1$0$c$i$i;
     $1021 = (($636) + 20|0);
     HEAP32[$1021>>2] = 0;
     $1022 = (($636) + 16|0);
     HEAP32[$1022>>2] = 0;
     $1023 = HEAP32[((52744 + 4|0))>>2]|0;
     $1024 = 1 << $I1$0$i$i;
     $1025 = $1023 & $1024;
     $1026 = ($1025|0)==(0);
     if ($1026) {
      $1027 = $1023 | $1024;
      HEAP32[((52744 + 4|0))>>2] = $1027;
      HEAP32[$1019>>2] = $636;
      $1028 = (($636) + 24|0);
      HEAP32[$1028>>2] = $1019;
      $1029 = (($636) + 12|0);
      HEAP32[$1029>>2] = $636;
      $1030 = (($636) + 8|0);
      HEAP32[$1030>>2] = $636;
      break;
     }
     $1031 = HEAP32[$1019>>2]|0;
     $1032 = ($I1$0$i$i|0)==(31);
     if ($1032) {
      $1040 = 0;
     } else {
      $1033 = $I1$0$i$i >>> 1;
      $1034 = (25 - ($1033))|0;
      $1040 = $1034;
     }
     $1035 = (($1031) + 4|0);
     $1036 = HEAP32[$1035>>2]|0;
     $1037 = $1036 & -8;
     $1038 = ($1037|0)==($971|0);
     L493: do {
      if ($1038) {
       $T$0$lcssa$i$i = $1031;
      } else {
       $1039 = $971 << $1040;
       $K2$015$i$i = $1039;$T$014$i$i = $1031;
       while(1) {
        $1047 = $K2$015$i$i >>> 31;
        $1048 = ((($T$014$i$i) + ($1047<<2)|0) + 16|0);
        $1043 = HEAP32[$1048>>2]|0;
        $1049 = ($1043|0)==(0|0);
        if ($1049) {
         break;
        }
        $1041 = $K2$015$i$i << 1;
        $1042 = (($1043) + 4|0);
        $1044 = HEAP32[$1042>>2]|0;
        $1045 = $1044 & -8;
        $1046 = ($1045|0)==($971|0);
        if ($1046) {
         $T$0$lcssa$i$i = $1043;
         break L493;
        } else {
         $K2$015$i$i = $1041;$T$014$i$i = $1043;
        }
       }
       $1050 = HEAP32[((52744 + 16|0))>>2]|0;
       $1051 = ($1048>>>0)<($1050>>>0);
       if ($1051) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$1048>>2] = $636;
        $1052 = (($636) + 24|0);
        HEAP32[$1052>>2] = $T$014$i$i;
        $1053 = (($636) + 12|0);
        HEAP32[$1053>>2] = $636;
        $1054 = (($636) + 8|0);
        HEAP32[$1054>>2] = $636;
        break L308;
       }
      }
     } while(0);
     $1055 = (($T$0$lcssa$i$i) + 8|0);
     $1056 = HEAP32[$1055>>2]|0;
     $1057 = HEAP32[((52744 + 16|0))>>2]|0;
     $1058 = ($T$0$lcssa$i$i>>>0)>=($1057>>>0);
     $1059 = ($1056>>>0)>=($1057>>>0);
     $or$cond$i$i = $1058 & $1059;
     if ($or$cond$i$i) {
      $1060 = (($1056) + 12|0);
      HEAP32[$1060>>2] = $636;
      HEAP32[$1055>>2] = $636;
      $1061 = (($636) + 8|0);
      HEAP32[$1061>>2] = $1056;
      $1062 = (($636) + 12|0);
      HEAP32[$1062>>2] = $T$0$lcssa$i$i;
      $1063 = (($636) + 24|0);
      HEAP32[$1063>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1064 = HEAP32[((52744 + 12|0))>>2]|0;
  $1065 = ($1064>>>0)>($nb$0>>>0);
  if ($1065) {
   $1066 = (($1064) - ($nb$0))|0;
   HEAP32[((52744 + 12|0))>>2] = $1066;
   $1067 = HEAP32[((52744 + 24|0))>>2]|0;
   $1068 = (($1067) + ($nb$0)|0);
   HEAP32[((52744 + 24|0))>>2] = $1068;
   $1069 = $1066 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1070 = (($1067) + ($$sum$i32)|0);
   HEAP32[$1070>>2] = $1069;
   $1071 = $nb$0 | 3;
   $1072 = (($1067) + 4|0);
   HEAP32[$1072>>2] = $1071;
   $1073 = (($1067) + 8|0);
   $mem$0 = $1073;
   STACKTOP = sp;return ($mem$0|0);
  }
 }
 $1074 = (___errno_location()|0);
 HEAP32[$1074>>2] = 12;
 $mem$0 = 0;
 STACKTOP = sp;return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$pre = 0, $$pre$phi66Z2D = 0, $$pre$phi68Z2D = 0, $$pre$phiZ2D = 0, $$pre65 = 0, $$pre67 = 0, $$sum = 0, $$sum16$pre = 0, $$sum17 = 0, $$sum18 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum2324 = 0, $$sum25 = 0, $$sum26 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0;
 var $$sum31 = 0, $$sum32 = 0, $$sum33 = 0, $$sum34 = 0, $$sum35 = 0, $$sum36 = 0, $$sum37 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0;
 var $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0;
 var $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $I18$0$c = 0, $K19$058 = 0, $R$0 = 0, $R$1 = 0, $R7$0 = 0;
 var $R7$1 = 0, $RP$0 = 0, $RP9$0 = 0, $T$0$lcssa = 0, $T$057 = 0, $cond = 0, $cond54 = 0, $or$cond = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  STACKTOP = sp;return;
 }
 $1 = (($mem) + -8|0);
 $2 = HEAP32[((52744 + 16|0))>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = (($mem) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    STACKTOP = sp;return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[((52744 + 20|0))>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[((52744 + 8|0))>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum26 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum26)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    STACKTOP = sp;return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum36 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum36)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum37 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum37)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = ((52744 + ($25<<2)|0) + 40|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = (($22) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[52744>>2]|0;
     $36 = $35 & $34;
     HEAP32[52744>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre67 = (($24) + 8|0);
     $$pre$phi68Z2D = $$pre67;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = (($24) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi68Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = (($22) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi68Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum28 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum28)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum29 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum29)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum31 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum31)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum30 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum30)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $61;$RP$0 = $60;
      }
     } else {
      $R$0 = $58;$RP$0 = $57;
     }
     while(1) {
      $63 = (($R$0) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $R$0 = $64;$RP$0 = $63;
       continue;
      }
      $66 = (($R$0) + 16|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = ($67|0)==(0|0);
      if ($68) {
       break;
      } else {
       $R$0 = $67;$RP$0 = $66;
      }
     }
     $69 = ($RP$0>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0>>2] = 0;
      $R$1 = $R$0;
      break;
     }
    } else {
     $$sum35 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum35)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = (($49) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = (($46) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum32 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum32)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ((52744 + ($72<<2)|0) + 304|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[((52744 + 4|0))>>2]|0;
      $79 = $78 & $77;
      HEAP32[((52744 + 4|0))>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[((52744 + 16|0))>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = (($44) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = (($44) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[((52744 + 16|0))>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = (($R$1) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum33 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum33)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = (($R$1) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = (($91) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum34 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum34)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[((52744 + 16|0))>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = (($R$1) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = (($97) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum25 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum25)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[((52744 + 24|0))>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[((52744 + 12|0))>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[((52744 + 12|0))>>2] = $120;
   HEAP32[((52744 + 24|0))>>2] = $p$0;
   $121 = $120 | 1;
   $122 = (($p$0) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[((52744 + 20|0))>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    STACKTOP = sp;return;
   }
   HEAP32[((52744 + 20|0))>>2] = 0;
   HEAP32[((52744 + 8|0))>>2] = 0;
   STACKTOP = sp;return;
  }
  $125 = HEAP32[((52744 + 20|0))>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[((52744 + 8|0))>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[((52744 + 8|0))>>2] = $128;
   HEAP32[((52744 + 20|0))>>2] = $p$0;
   $129 = $128 | 1;
   $130 = (($p$0) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   STACKTOP = sp;return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum2324 = $8 | 4;
    $138 = (($mem) + ($$sum2324)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = ((52744 + ($140<<2)|0) + 40|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[((52744 + 16|0))>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = (($137) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[52744>>2]|0;
     $152 = $151 & $150;
     HEAP32[52744>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre65 = (($139) + 8|0);
     $$pre$phi66Z2D = $$pre65;
    } else {
     $154 = HEAP32[((52744 + 16|0))>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = (($139) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi66Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = (($137) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi66Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $179;$RP9$0 = $178;
       }
      } else {
       $R7$0 = $176;$RP9$0 = $175;
      }
      while(1) {
       $181 = (($R7$0) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if (!($183)) {
        $R7$0 = $182;$RP9$0 = $181;
        continue;
       }
       $184 = (($R7$0) + 16|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($185|0)==(0|0);
       if ($186) {
        break;
       } else {
        $R7$0 = $185;$RP9$0 = $184;
       }
      }
      $187 = HEAP32[((52744 + 16|0))>>2]|0;
      $188 = ($RP9$0>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0>>2] = 0;
       $R7$1 = $R7$0;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[((52744 + 16|0))>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = (($166) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = (($163) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum18 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum18)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = ((52744 + ($191<<2)|0) + 304|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond54 = ($R7$1|0)==(0|0);
      if ($cond54) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[((52744 + 4|0))>>2]|0;
       $198 = $197 & $196;
       HEAP32[((52744 + 4|0))>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[((52744 + 16|0))>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = (($161) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = (($161) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[((52744 + 16|0))>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = (($R7$1) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum19 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum19)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = (($R7$1) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = (($210) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum20 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum20)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[((52744 + 16|0))>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = (($R7$1) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = (($216) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = (($p$0) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[((52744 + 20|0))>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[((52744 + 8|0))>>2] = $133;
   STACKTOP = sp;return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = (($p$0) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = ((52744 + ($233<<2)|0) + 40|0);
  $235 = HEAP32[52744>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[52744>>2] = $239;
   $$sum16$pre = (($233) + 2)|0;
   $$pre = ((52744 + ($$sum16$pre<<2)|0) + 40|0);
   $$pre$phiZ2D = $$pre;$F16$0 = $234;
  } else {
   $$sum17 = (($233) + 2)|0;
   $240 = ((52744 + ($$sum17<<2)|0) + 40|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[((52744 + 16|0))>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = (($F16$0) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = (($p$0) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = (($p$0) + 12|0);
  HEAP32[$246>>2] = $234;
  STACKTOP = sp;return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = ((52744 + ($I18$0<<2)|0) + 304|0);
 $273 = (($p$0) + 28|0);
 $I18$0$c = $I18$0;
 HEAP32[$273>>2] = $I18$0$c;
 $274 = (($p$0) + 20|0);
 HEAP32[$274>>2] = 0;
 $275 = (($p$0) + 16|0);
 HEAP32[$275>>2] = 0;
 $276 = HEAP32[((52744 + 4|0))>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L199: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[((52744 + 4|0))>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = (($p$0) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = (($p$0) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = (($p$0) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ($I18$0|0)==(31);
   if ($285) {
    $293 = 0;
   } else {
    $286 = $I18$0 >>> 1;
    $287 = (25 - ($286))|0;
    $293 = $287;
   }
   $288 = (($284) + 4|0);
   $289 = HEAP32[$288>>2]|0;
   $290 = $289 & -8;
   $291 = ($290|0)==($psize$1|0);
   L204: do {
    if ($291) {
     $T$0$lcssa = $284;
    } else {
     $292 = $psize$1 << $293;
     $K19$058 = $292;$T$057 = $284;
     while(1) {
      $300 = $K19$058 >>> 31;
      $301 = ((($T$057) + ($300<<2)|0) + 16|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       break;
      }
      $294 = $K19$058 << 1;
      $295 = (($296) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $T$0$lcssa = $296;
       break L204;
      } else {
       $K19$058 = $294;$T$057 = $296;
      }
     }
     $303 = HEAP32[((52744 + 16|0))>>2]|0;
     $304 = ($301>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$301>>2] = $p$0;
      $305 = (($p$0) + 24|0);
      HEAP32[$305>>2] = $T$057;
      $306 = (($p$0) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = (($p$0) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L199;
     }
    }
   } while(0);
   $308 = (($T$0$lcssa) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[((52744 + 16|0))>>2]|0;
   $311 = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = ($309>>>0)>=($310>>>0);
   $or$cond = $311 & $312;
   if ($or$cond) {
    $313 = (($309) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = (($p$0) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = (($p$0) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = (($p$0) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[((52744 + 32|0))>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[((52744 + 32|0))>>2] = $318;
 $319 = ($318|0)==(0);
 if ($319) {
  $sp$0$in$i = ((52744 + 456|0));
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = (($sp$0$i) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[((52744 + 32|0))>>2] = -1;
 STACKTOP = sp;return;
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $$pre$i = 0, $$pre$phi$iZ2D = 0, $$sum = 0, $$sum1 = 0, $$sum10 = 0, $$sum11 = 0, $$sum12 = 0, $$sum14 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum18 = 0, $$sum19$i25 = 0, $$sum2 = 0, $$sum22 = 0, $$sum22$i29 = 0, $$sum23 = 0, $$sum23$i3 = 0, $$sum24 = 0, $$sum26 = 0;
 var $$sum27 = 0, $$sum2728$i = 0, $$sum28 = 0, $$sum30 = 0, $$sum4 = 0, $$sum5 = 0, $$sum5$i13 = 0, $$sum78$i = 0, $$sum9 = 0, $$sum910$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $R$0$i = 0, $R$1$i = 0, $RP$0$i = 0, $cond$i = 0, $mem$0 = 0, $notlhs$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$not$i = 0, $or$cond30$i = 0, $storemerge$i = 0, $storemerge21$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($oldmem|0)==(0|0);
 if ($0) {
  $1 = (_malloc($bytes)|0);
  $mem$0 = $1;
  STACKTOP = sp;return ($mem$0|0);
 }
 $2 = ($bytes>>>0)>(4294967231);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 12;
  $mem$0 = 0;
  STACKTOP = sp;return ($mem$0|0);
 }
 $4 = ($bytes>>>0)<(11);
 if ($4) {
  $21 = 16;
 } else {
  $5 = (($bytes) + 11)|0;
  $6 = $5 & -8;
  $21 = $6;
 }
 $7 = (($oldmem) + -8|0);
 $8 = (($oldmem) + -4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & -8;
 $$sum = (($10) + -8)|0;
 $11 = (($oldmem) + ($$sum)|0);
 $12 = HEAP32[((52744 + 16|0))>>2]|0;
 $13 = $9 & 3;
 $notlhs$i = ($7>>>0)>=($12>>>0);
 $notrhs$i = ($13|0)!=(1);
 $or$cond$not$i = $notrhs$i & $notlhs$i;
 $14 = ($$sum|0)>(-8);
 $or$cond30$i = $or$cond$not$i & $14;
 if (!($or$cond30$i)) {
  _abort();
  // unreachable;
 }
 $$sum2728$i = $10 | 4;
 $$sum1 = (($$sum2728$i) + -8)|0;
 $15 = (($oldmem) + ($$sum1)|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $16 & 1;
 $18 = ($17|0)==(0);
 if ($18) {
  _abort();
  // unreachable;
 }
 $19 = ($13|0)==(0);
 do {
  if ($19) {
   $20 = ($21>>>0)<(256);
   $22 = $21 | 4;
   $23 = ($10>>>0)<($22>>>0);
   $or$cond = $20 | $23;
   if (!($or$cond)) {
    $24 = (($10) - ($21))|0;
    $25 = HEAP32[((53216 + 8|0))>>2]|0;
    $26 = $25 << 1;
    $27 = ($24>>>0)>($26>>>0);
    if (!($27)) {
     $mem$0 = $oldmem;
     STACKTOP = sp;return ($mem$0|0);
    }
   }
  } else {
   $28 = ($10>>>0)<($21>>>0);
   if (!($28)) {
    $29 = (($10) - ($21))|0;
    $30 = ($29>>>0)>(15);
    if (!($30)) {
     $mem$0 = $oldmem;
     STACKTOP = sp;return ($mem$0|0);
    }
    $$sum2 = (($21) + -8)|0;
    $31 = (($oldmem) + ($$sum2)|0);
    $32 = $9 & 1;
    $33 = $32 | $21;
    $34 = $33 | 2;
    HEAP32[$8>>2] = $34;
    $$sum23$i3 = $21 | 4;
    $$sum4 = (($$sum23$i3) + -8)|0;
    $35 = (($oldmem) + ($$sum4)|0);
    $36 = $29 | 3;
    HEAP32[$35>>2] = $36;
    $37 = HEAP32[$15>>2]|0;
    $38 = $37 | 1;
    HEAP32[$15>>2] = $38;
    _dispose_chunk($31,$29);
    $mem$0 = $oldmem;
    STACKTOP = sp;return ($mem$0|0);
   }
   $39 = HEAP32[((52744 + 24|0))>>2]|0;
   $40 = ($11|0)==($39|0);
   if ($40) {
    $41 = HEAP32[((52744 + 12|0))>>2]|0;
    $42 = (($41) + ($10))|0;
    $43 = ($42>>>0)>($21>>>0);
    if (!($43)) {
     break;
    }
    $44 = (($42) - ($21))|0;
    $$sum28 = (($21) + -8)|0;
    $45 = (($oldmem) + ($$sum28)|0);
    $46 = $9 & 1;
    $47 = $46 | $21;
    $48 = $47 | 2;
    HEAP32[$8>>2] = $48;
    $$sum22$i29 = $21 | 4;
    $$sum30 = (($$sum22$i29) + -8)|0;
    $49 = (($oldmem) + ($$sum30)|0);
    $50 = $44 | 1;
    HEAP32[$49>>2] = $50;
    HEAP32[((52744 + 24|0))>>2] = $45;
    HEAP32[((52744 + 12|0))>>2] = $44;
    $mem$0 = $oldmem;
    STACKTOP = sp;return ($mem$0|0);
   }
   $51 = HEAP32[((52744 + 20|0))>>2]|0;
   $52 = ($11|0)==($51|0);
   if ($52) {
    $53 = HEAP32[((52744 + 8|0))>>2]|0;
    $54 = (($53) + ($10))|0;
    $55 = ($54>>>0)<($21>>>0);
    if ($55) {
     break;
    }
    $56 = (($54) - ($21))|0;
    $57 = ($56>>>0)>(15);
    if ($57) {
     $$sum23 = (($21) + -8)|0;
     $58 = (($oldmem) + ($$sum23)|0);
     $$sum24 = (($54) + -8)|0;
     $59 = (($oldmem) + ($$sum24)|0);
     $60 = $9 & 1;
     $61 = $60 | $21;
     $62 = $61 | 2;
     HEAP32[$8>>2] = $62;
     $$sum19$i25 = $21 | 4;
     $$sum26 = (($$sum19$i25) + -8)|0;
     $63 = (($oldmem) + ($$sum26)|0);
     $64 = $56 | 1;
     HEAP32[$63>>2] = $64;
     HEAP32[$59>>2] = $56;
     $$sum27 = (($54) + -4)|0;
     $65 = (($oldmem) + ($$sum27)|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = $66 & -2;
     HEAP32[$65>>2] = $67;
     $storemerge$i = $58;$storemerge21$i = $56;
    } else {
     $68 = $9 & 1;
     $69 = $68 | $54;
     $70 = $69 | 2;
     HEAP32[$8>>2] = $70;
     $$sum22 = (($54) + -4)|0;
     $71 = (($oldmem) + ($$sum22)|0);
     $72 = HEAP32[$71>>2]|0;
     $73 = $72 | 1;
     HEAP32[$71>>2] = $73;
     $storemerge$i = 0;$storemerge21$i = 0;
    }
    HEAP32[((52744 + 8|0))>>2] = $storemerge21$i;
    HEAP32[((52744 + 20|0))>>2] = $storemerge$i;
    $mem$0 = $oldmem;
    STACKTOP = sp;return ($mem$0|0);
   }
   $74 = $16 & 2;
   $75 = ($74|0)==(0);
   if ($75) {
    $76 = $16 & -8;
    $77 = (($76) + ($10))|0;
    $78 = ($77>>>0)<($21>>>0);
    if (!($78)) {
     $79 = (($77) - ($21))|0;
     $80 = $16 >>> 3;
     $81 = ($16>>>0)<(256);
     do {
      if ($81) {
       $82 = (($oldmem) + ($10)|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = (($oldmem) + ($$sum2728$i)|0);
       $85 = HEAP32[$84>>2]|0;
       $86 = $80 << 1;
       $87 = ((52744 + ($86<<2)|0) + 40|0);
       $88 = ($83|0)==($87|0);
       if (!($88)) {
        $89 = ($83>>>0)<($12>>>0);
        if ($89) {
         _abort();
         // unreachable;
        }
        $90 = (($83) + 12|0);
        $91 = HEAP32[$90>>2]|0;
        $92 = ($91|0)==($11|0);
        if (!($92)) {
         _abort();
         // unreachable;
        }
       }
       $93 = ($85|0)==($83|0);
       if ($93) {
        $94 = 1 << $80;
        $95 = $94 ^ -1;
        $96 = HEAP32[52744>>2]|0;
        $97 = $96 & $95;
        HEAP32[52744>>2] = $97;
        break;
       }
       $98 = ($85|0)==($87|0);
       if ($98) {
        $$pre$i = (($85) + 8|0);
        $$pre$phi$iZ2D = $$pre$i;
       } else {
        $99 = ($85>>>0)<($12>>>0);
        if ($99) {
         _abort();
         // unreachable;
        }
        $100 = (($85) + 8|0);
        $101 = HEAP32[$100>>2]|0;
        $102 = ($101|0)==($11|0);
        if ($102) {
         $$pre$phi$iZ2D = $100;
        } else {
         _abort();
         // unreachable;
        }
       }
       $103 = (($83) + 12|0);
       HEAP32[$103>>2] = $85;
       HEAP32[$$pre$phi$iZ2D>>2] = $83;
      } else {
       $$sum5 = (($10) + 16)|0;
       $104 = (($oldmem) + ($$sum5)|0);
       $105 = HEAP32[$104>>2]|0;
       $106 = (($oldmem) + ($$sum2728$i)|0);
       $107 = HEAP32[$106>>2]|0;
       $108 = ($107|0)==($11|0);
       do {
        if ($108) {
         $$sum17 = (($10) + 12)|0;
         $118 = (($oldmem) + ($$sum17)|0);
         $119 = HEAP32[$118>>2]|0;
         $120 = ($119|0)==(0|0);
         if ($120) {
          $$sum18 = (($10) + 8)|0;
          $121 = (($oldmem) + ($$sum18)|0);
          $122 = HEAP32[$121>>2]|0;
          $123 = ($122|0)==(0|0);
          if ($123) {
           $R$1$i = 0;
           break;
          } else {
           $R$0$i = $122;$RP$0$i = $121;
          }
         } else {
          $R$0$i = $119;$RP$0$i = $118;
         }
         while(1) {
          $124 = (($R$0$i) + 20|0);
          $125 = HEAP32[$124>>2]|0;
          $126 = ($125|0)==(0|0);
          if (!($126)) {
           $R$0$i = $125;$RP$0$i = $124;
           continue;
          }
          $127 = (($R$0$i) + 16|0);
          $128 = HEAP32[$127>>2]|0;
          $129 = ($128|0)==(0|0);
          if ($129) {
           break;
          } else {
           $R$0$i = $128;$RP$0$i = $127;
          }
         }
         $130 = ($RP$0$i>>>0)<($12>>>0);
         if ($130) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i>>2] = 0;
          $R$1$i = $R$0$i;
          break;
         }
        } else {
         $109 = (($oldmem) + ($10)|0);
         $110 = HEAP32[$109>>2]|0;
         $111 = ($110>>>0)<($12>>>0);
         if ($111) {
          _abort();
          // unreachable;
         }
         $112 = (($110) + 12|0);
         $113 = HEAP32[$112>>2]|0;
         $114 = ($113|0)==($11|0);
         if (!($114)) {
          _abort();
          // unreachable;
         }
         $115 = (($107) + 8|0);
         $116 = HEAP32[$115>>2]|0;
         $117 = ($116|0)==($11|0);
         if ($117) {
          HEAP32[$112>>2] = $107;
          HEAP32[$115>>2] = $110;
          $R$1$i = $107;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $131 = ($105|0)==(0|0);
       if (!($131)) {
        $$sum9 = (($10) + 20)|0;
        $132 = (($oldmem) + ($$sum9)|0);
        $133 = HEAP32[$132>>2]|0;
        $134 = ((52744 + ($133<<2)|0) + 304|0);
        $135 = HEAP32[$134>>2]|0;
        $136 = ($11|0)==($135|0);
        if ($136) {
         HEAP32[$134>>2] = $R$1$i;
         $cond$i = ($R$1$i|0)==(0|0);
         if ($cond$i) {
          $137 = 1 << $133;
          $138 = $137 ^ -1;
          $139 = HEAP32[((52744 + 4|0))>>2]|0;
          $140 = $139 & $138;
          HEAP32[((52744 + 4|0))>>2] = $140;
          break;
         }
        } else {
         $141 = HEAP32[((52744 + 16|0))>>2]|0;
         $142 = ($105>>>0)<($141>>>0);
         if ($142) {
          _abort();
          // unreachable;
         }
         $143 = (($105) + 16|0);
         $144 = HEAP32[$143>>2]|0;
         $145 = ($144|0)==($11|0);
         if ($145) {
          HEAP32[$143>>2] = $R$1$i;
         } else {
          $146 = (($105) + 20|0);
          HEAP32[$146>>2] = $R$1$i;
         }
         $147 = ($R$1$i|0)==(0|0);
         if ($147) {
          break;
         }
        }
        $148 = HEAP32[((52744 + 16|0))>>2]|0;
        $149 = ($R$1$i>>>0)<($148>>>0);
        if ($149) {
         _abort();
         // unreachable;
        }
        $150 = (($R$1$i) + 24|0);
        HEAP32[$150>>2] = $105;
        $$sum10 = (($10) + 8)|0;
        $151 = (($oldmem) + ($$sum10)|0);
        $152 = HEAP32[$151>>2]|0;
        $153 = ($152|0)==(0|0);
        do {
         if (!($153)) {
          $154 = ($152>>>0)<($148>>>0);
          if ($154) {
           _abort();
           // unreachable;
          } else {
           $155 = (($R$1$i) + 16|0);
           HEAP32[$155>>2] = $152;
           $156 = (($152) + 24|0);
           HEAP32[$156>>2] = $R$1$i;
           break;
          }
         }
        } while(0);
        $$sum11 = (($10) + 12)|0;
        $157 = (($oldmem) + ($$sum11)|0);
        $158 = HEAP32[$157>>2]|0;
        $159 = ($158|0)==(0|0);
        if (!($159)) {
         $160 = HEAP32[((52744 + 16|0))>>2]|0;
         $161 = ($158>>>0)<($160>>>0);
         if ($161) {
          _abort();
          // unreachable;
         } else {
          $162 = (($R$1$i) + 20|0);
          HEAP32[$162>>2] = $158;
          $163 = (($158) + 24|0);
          HEAP32[$163>>2] = $R$1$i;
          break;
         }
        }
       }
      }
     } while(0);
     $164 = ($79>>>0)<(16);
     if ($164) {
      $165 = $9 & 1;
      $166 = $77 | $165;
      $167 = $166 | 2;
      HEAP32[$8>>2] = $167;
      $$sum910$i = $77 | 4;
      $$sum16 = (($$sum910$i) + -8)|0;
      $168 = (($oldmem) + ($$sum16)|0);
      $169 = HEAP32[$168>>2]|0;
      $170 = $169 | 1;
      HEAP32[$168>>2] = $170;
      $mem$0 = $oldmem;
      STACKTOP = sp;return ($mem$0|0);
     } else {
      $$sum12 = (($21) + -8)|0;
      $171 = (($oldmem) + ($$sum12)|0);
      $172 = $9 & 1;
      $173 = $172 | $21;
      $174 = $173 | 2;
      HEAP32[$8>>2] = $174;
      $$sum5$i13 = $21 | 4;
      $$sum14 = (($$sum5$i13) + -8)|0;
      $175 = (($oldmem) + ($$sum14)|0);
      $176 = $79 | 3;
      HEAP32[$175>>2] = $176;
      $$sum78$i = $77 | 4;
      $$sum15 = (($$sum78$i) + -8)|0;
      $177 = (($oldmem) + ($$sum15)|0);
      $178 = HEAP32[$177>>2]|0;
      $179 = $178 | 1;
      HEAP32[$177>>2] = $179;
      _dispose_chunk($171,$79);
      $mem$0 = $oldmem;
      STACKTOP = sp;return ($mem$0|0);
     }
    }
   }
  }
 } while(0);
 $180 = (_malloc($bytes)|0);
 $181 = ($180|0)==(0|0);
 if ($181) {
  $mem$0 = 0;
  STACKTOP = sp;return ($mem$0|0);
 }
 $182 = HEAP32[$8>>2]|0;
 $183 = $182 & -8;
 $184 = $182 & 3;
 $185 = ($184|0)==(0);
 $186 = $185 ? 8 : 4;
 $187 = (($183) - ($186))|0;
 $188 = ($187>>>0)<($bytes>>>0);
 $189 = $188 ? $187 : $bytes;
 _memcpy(($180|0),($oldmem|0),($189|0))|0;
 _free($oldmem);
 $mem$0 = $180;
 STACKTOP = sp;return ($mem$0|0);
}
function ___intscan($f,$base,$pok,$0,$1) {
 $f = $f|0;
 $base = $base|0;
 $pok = $pok|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$125 = 0, $$126 = 0, $$base24 = 0, $$lcssa = 0, $$pre = 0, $$sum = 0, $$sum17 = 0, $$sum1737 = 0, $$sum18 = 0, $$sum19 = 0, $$sum20 = 0, $$sum21 = 0, $$sum2155 = 0, $$sum22 = 0, $$sum23 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$127 = 0, $c$2$be = 0;
 var $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$362 = 0, $c$4$be = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$6$be = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$747 = 0, $c$8 = 0, $c$9$be = 0, $neg$0 = 0, $or$cond = 0, $or$cond11 = 0, $or$cond13 = 0, $or$cond15 = 0, $or$cond31 = 0, $or$cond5 = 0;
 var $or$cond7 = 0, $or$cond9 = 0, $x$073 = 0, $x$138 = 0, $x$256 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($base>>>0)>(36);
 if ($2) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 22;
  $292 = 0;$293 = 0;
  tempRet0 = $292;
  STACKTOP = sp;return ($293|0);
 }
 $3 = (($f) + 4|0);
 $4 = (($f) + 100|0);
 L5: while(1) {
  $6 = HEAP32[$3>>2]|0;
  $7 = HEAP32[$4>>2]|0;
  $8 = ($6>>>0)<($7>>>0);
  if ($8) {
   $9 = (($6) + 1|0);
   HEAP32[$3>>2] = $9;
   $10 = HEAP8[$6>>0]|0;
   $11 = $10&255;
   $13 = $11;
  } else {
   $12 = (___shgetc($f)|0);
   $13 = $12;
  }
  switch ($13|0) {
  case 9: case 10: case 11: case 12: case 13: case 32:  {
   break;
  }
  default: {
   break L5;
  }
  }
 }
 $14 = ($13|0)==(45);
 do {
  if ((($13|0) == 43) | (($13|0) == 45)) {
   $15 = HEAP32[$3>>2]|0;
   $16 = $14 << 31 >> 31;
   $17 = HEAP32[$4>>2]|0;
   $18 = ($15>>>0)<($17>>>0);
   if ($18) {
    $19 = (($15) + 1|0);
    HEAP32[$3>>2] = $19;
    $20 = HEAP8[$15>>0]|0;
    $21 = $20&255;
    $c$0 = $21;$neg$0 = $16;
    break;
   } else {
    $22 = (___shgetc($f)|0);
    $c$0 = $22;$neg$0 = $16;
    break;
   }
  } else {
   $c$0 = $13;$neg$0 = 0;
  }
 } while(0);
 $23 = ($base|0)==(0);
 $24 = $base & -17;
 $25 = ($24|0)==(0);
 $26 = ($c$0|0)==(48);
 $or$cond5 = $25 & $26;
 do {
  if ($or$cond5) {
   $27 = HEAP32[$3>>2]|0;
   $28 = HEAP32[$4>>2]|0;
   $29 = ($27>>>0)<($28>>>0);
   if ($29) {
    $30 = (($27) + 1|0);
    HEAP32[$3>>2] = $30;
    $31 = HEAP8[$27>>0]|0;
    $32 = $31&255;
    $35 = $32;
   } else {
    $33 = (___shgetc($f)|0);
    $35 = $33;
   }
   $34 = $35 | 32;
   $36 = ($34|0)==(120);
   if (!($36)) {
    if ($23) {
     $$126 = 8;$c$127 = $35;
     label = 46;
     break;
    } else {
     $$1 = $base;$c$1 = $35;
     label = 32;
     break;
    }
   }
   $37 = HEAP32[$3>>2]|0;
   $38 = HEAP32[$4>>2]|0;
   $39 = ($37>>>0)<($38>>>0);
   if ($39) {
    $40 = (($37) + 1|0);
    HEAP32[$3>>2] = $40;
    $41 = HEAP8[$37>>0]|0;
    $42 = $41&255;
    $44 = $42;
   } else {
    $43 = (___shgetc($f)|0);
    $44 = $43;
   }
   $$sum23 = (($44) + 1)|0;
   $45 = (53240 + ($$sum23)|0);
   $46 = HEAP8[$45>>0]|0;
   $47 = ($46&255)>(15);
   if ($47) {
    $48 = HEAP32[$4>>2]|0;
    $49 = ($48|0)==(0|0);
    if (!($49)) {
     $50 = HEAP32[$3>>2]|0;
     $51 = (($50) + -1|0);
     HEAP32[$3>>2] = $51;
    }
    $52 = ($pok|0)==(0);
    if ($52) {
     $55 = (($f) + 104|0);
     HEAP32[$55>>2] = 0;
     $56 = (($f) + 8|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = HEAP32[$3>>2]|0;
     $59 = $57;
     $60 = $58;
     $61 = (($59) - ($60))|0;
     $62 = (($f) + 108|0);
     HEAP32[$62>>2] = $61;
     HEAP32[$4>>2] = $57;
     $292 = 0;$293 = 0;
     tempRet0 = $292;
     STACKTOP = sp;return ($293|0);
    }
    if ($49) {
     $292 = 0;$293 = 0;
     tempRet0 = $292;
     STACKTOP = sp;return ($293|0);
    }
    $53 = HEAP32[$3>>2]|0;
    $54 = (($53) + -1|0);
    HEAP32[$3>>2] = $54;
    $292 = 0;$293 = 0;
    tempRet0 = $292;
    STACKTOP = sp;return ($293|0);
   } else {
    $$126 = 16;$c$127 = $44;
    label = 46;
   }
  } else {
   $$base24 = $23 ? 10 : $base;
   $$sum = (($c$0) + 1)|0;
   $63 = (53240 + ($$sum)|0);
   $64 = HEAP8[$63>>0]|0;
   $65 = $64&255;
   $66 = ($65>>>0)<($$base24>>>0);
   if ($66) {
    $$1 = $$base24;$c$1 = $c$0;
    label = 32;
   } else {
    $67 = HEAP32[$4>>2]|0;
    $68 = ($67|0)==(0|0);
    $$pre = HEAP32[$3>>2]|0;
    if ($68) {
     $75 = $$pre;
    } else {
     $69 = (($$pre) + -1|0);
     HEAP32[$3>>2] = $69;
     $75 = $69;
    }
    $70 = (($f) + 104|0);
    HEAP32[$70>>2] = 0;
    $71 = (($f) + 8|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = $72;
    $74 = $75;
    $76 = (($73) - ($74))|0;
    $77 = (($f) + 108|0);
    HEAP32[$77>>2] = $76;
    HEAP32[$4>>2] = $72;
    $78 = (___errno_location()|0);
    HEAP32[$78>>2] = 22;
    $292 = 0;$293 = 0;
    tempRet0 = $292;
    STACKTOP = sp;return ($293|0);
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $79 = ($$1|0)==(10);
  if ($79) {
   $80 = (($c$1) + -48)|0;
   $81 = ($80>>>0)<(10);
   if ($81) {
    $84 = $80;$x$073 = 0;
    while(1) {
     $82 = ($x$073*10)|0;
     $83 = (($82) + ($84))|0;
     $85 = HEAP32[$3>>2]|0;
     $86 = HEAP32[$4>>2]|0;
     $87 = ($85>>>0)<($86>>>0);
     if ($87) {
      $88 = (($85) + 1|0);
      HEAP32[$3>>2] = $88;
      $89 = HEAP8[$85>>0]|0;
      $90 = $89&255;
      $c$2$be = $90;
     } else {
      $91 = (___shgetc($f)|0);
      $c$2$be = $91;
     }
     $92 = (($c$2$be) + -48)|0;
     $93 = ($92>>>0)<(10);
     $94 = ($83>>>0)<(429496729);
     $or$cond7 = $93 & $94;
     if ($or$cond7) {
      $84 = $92;$x$073 = $83;
     } else {
      break;
     }
    }
    $294 = $83;$295 = 0;$c$2$lcssa = $c$2$be;
   } else {
    $294 = 0;$295 = 0;$c$2$lcssa = $c$1;
   }
   $95 = (($c$2$lcssa) + -48)|0;
   $96 = ($95>>>0)<(10);
   if ($96) {
    $102 = $95;$97 = $294;$98 = $295;$c$362 = $c$2$lcssa;
    while(1) {
     $99 = (___muldi3(($97|0),($98|0),10,0)|0);
     $100 = tempRet0;
     $101 = ($102|0)<(0);
     $103 = $101 << 31 >> 31;
     $104 = $102 ^ -1;
     $105 = $103 ^ -1;
     $106 = ($100>>>0)>($105>>>0);
     $107 = ($99>>>0)>($104>>>0);
     $108 = ($100|0)==($105|0);
     $109 = $108 & $107;
     $110 = $106 | $109;
     if ($110) {
      $$lcssa = $102;$296 = $97;$297 = $98;$c$3$lcssa = $c$362;
      break;
     }
     $111 = (_i64Add(($99|0),($100|0),($102|0),($103|0))|0);
     $112 = tempRet0;
     $113 = HEAP32[$3>>2]|0;
     $114 = HEAP32[$4>>2]|0;
     $115 = ($113>>>0)<($114>>>0);
     if ($115) {
      $116 = (($113) + 1|0);
      HEAP32[$3>>2] = $116;
      $117 = HEAP8[$113>>0]|0;
      $118 = $117&255;
      $c$3$be = $118;
     } else {
      $119 = (___shgetc($f)|0);
      $c$3$be = $119;
     }
     $120 = (($c$3$be) + -48)|0;
     $121 = ($120>>>0)<(10);
     $122 = ($112>>>0)<(429496729);
     $123 = ($111>>>0)<(2576980378);
     $124 = ($112|0)==(429496729);
     $125 = $124 & $123;
     $126 = $122 | $125;
     $or$cond9 = $121 & $126;
     if ($or$cond9) {
      $102 = $120;$97 = $111;$98 = $112;$c$362 = $c$3$be;
     } else {
      $$lcssa = $120;$296 = $111;$297 = $112;$c$3$lcssa = $c$3$be;
      break;
     }
    }
    $127 = ($$lcssa>>>0)>(9);
    if ($127) {
     $266 = $297;$268 = $296;
    } else {
     $$125 = 10;$298 = $296;$299 = $297;$c$8 = $c$3$lcssa;
     label = 72;
    }
   } else {
    $266 = $295;$268 = $294;
   }
  } else {
   $$126 = $$1;$c$127 = $c$1;
   label = 46;
  }
 }
 L69: do {
  if ((label|0) == 46) {
   $128 = (($$126) + -1)|0;
   $129 = $128 & $$126;
   $130 = ($129|0)==(0);
   if ($130) {
    $135 = ($$126*23)|0;
    $136 = $135 >>> 5;
    $137 = $136 & 7;
    $138 = (53504 + ($137)|0);
    $139 = HEAP8[$138>>0]|0;
    $140 = $139 << 24 >> 24;
    $$sum1737 = (($c$127) + 1)|0;
    $141 = (53240 + ($$sum1737)|0);
    $142 = HEAP8[$141>>0]|0;
    $143 = $142&255;
    $144 = ($143>>>0)<($$126>>>0);
    if ($144) {
     $147 = $143;$x$138 = 0;
     while(1) {
      $145 = $x$138 << $140;
      $146 = $147 | $145;
      $148 = HEAP32[$3>>2]|0;
      $149 = HEAP32[$4>>2]|0;
      $150 = ($148>>>0)<($149>>>0);
      if ($150) {
       $151 = (($148) + 1|0);
       HEAP32[$3>>2] = $151;
       $152 = HEAP8[$148>>0]|0;
       $153 = $152&255;
       $c$4$be = $153;
      } else {
       $154 = (___shgetc($f)|0);
       $c$4$be = $154;
      }
      $$sum17 = (($c$4$be) + 1)|0;
      $155 = (53240 + ($$sum17)|0);
      $156 = HEAP8[$155>>0]|0;
      $157 = $156&255;
      $158 = ($157>>>0)<($$126>>>0);
      $159 = ($146>>>0)<(134217728);
      $or$cond11 = $158 & $159;
      if ($or$cond11) {
       $147 = $157;$x$138 = $146;
      } else {
       break;
      }
     }
     $163 = $156;$166 = 0;$168 = $146;$c$4$lcssa = $c$4$be;
    } else {
     $163 = $142;$166 = 0;$168 = 0;$c$4$lcssa = $c$127;
    }
    $160 = (_bitshift64Lshr(-1,-1,($140|0))|0);
    $161 = tempRet0;
    $162 = $163&255;
    $164 = ($162>>>0)>=($$126>>>0);
    $165 = ($166>>>0)>($161>>>0);
    $167 = ($168>>>0)>($160>>>0);
    $169 = ($166|0)==($161|0);
    $170 = $169 & $167;
    $171 = $165 | $170;
    $or$cond31 = $164 | $171;
    if ($or$cond31) {
     $$125 = $$126;$298 = $168;$299 = $166;$c$8 = $c$4$lcssa;
     label = 72;
     break;
    } else {
     $172 = $168;$173 = $166;$177 = $163;
    }
    while(1) {
     $174 = (_bitshift64Shl(($172|0),($173|0),($140|0))|0);
     $175 = tempRet0;
     $176 = $177&255;
     $178 = $176 | $174;
     $179 = HEAP32[$3>>2]|0;
     $180 = HEAP32[$4>>2]|0;
     $181 = ($179>>>0)<($180>>>0);
     if ($181) {
      $182 = (($179) + 1|0);
      HEAP32[$3>>2] = $182;
      $183 = HEAP8[$179>>0]|0;
      $184 = $183&255;
      $c$5$be = $184;
     } else {
      $185 = (___shgetc($f)|0);
      $c$5$be = $185;
     }
     $$sum18 = (($c$5$be) + 1)|0;
     $186 = (53240 + ($$sum18)|0);
     $187 = HEAP8[$186>>0]|0;
     $188 = $187&255;
     $189 = ($188>>>0)>=($$126>>>0);
     $190 = ($175>>>0)>($161>>>0);
     $191 = ($178>>>0)>($160>>>0);
     $192 = ($175|0)==($161|0);
     $193 = $192 & $191;
     $194 = $190 | $193;
     $or$cond = $189 | $194;
     if ($or$cond) {
      $$125 = $$126;$298 = $178;$299 = $175;$c$8 = $c$5$be;
      label = 72;
      break L69;
     } else {
      $172 = $178;$173 = $175;$177 = $187;
     }
    }
   }
   $$sum2155 = (($c$127) + 1)|0;
   $131 = (53240 + ($$sum2155)|0);
   $132 = HEAP8[$131>>0]|0;
   $133 = $132&255;
   $134 = ($133>>>0)<($$126>>>0);
   if ($134) {
    $197 = $133;$x$256 = 0;
    while(1) {
     $195 = Math_imul($x$256, $$126)|0;
     $196 = (($197) + ($195))|0;
     $198 = HEAP32[$3>>2]|0;
     $199 = HEAP32[$4>>2]|0;
     $200 = ($198>>>0)<($199>>>0);
     if ($200) {
      $201 = (($198) + 1|0);
      HEAP32[$3>>2] = $201;
      $202 = HEAP8[$198>>0]|0;
      $203 = $202&255;
      $c$6$be = $203;
     } else {
      $204 = (___shgetc($f)|0);
      $c$6$be = $204;
     }
     $$sum21 = (($c$6$be) + 1)|0;
     $205 = (53240 + ($$sum21)|0);
     $206 = HEAP8[$205>>0]|0;
     $207 = $206&255;
     $208 = ($207>>>0)<($$126>>>0);
     $209 = ($196>>>0)<(119304647);
     $or$cond13 = $208 & $209;
     if ($or$cond13) {
      $197 = $207;$x$256 = $196;
     } else {
      break;
     }
    }
    $211 = $206;$300 = $196;$301 = 0;$c$6$lcssa = $c$6$be;
   } else {
    $211 = $132;$300 = 0;$301 = 0;$c$6$lcssa = $c$127;
   }
   $210 = $211&255;
   $212 = ($210>>>0)<($$126>>>0);
   if ($212) {
    $213 = (___udivdi3(-1,-1,($$126|0),0)|0);
    $214 = tempRet0;
    $216 = $301;$218 = $300;$225 = $211;$c$747 = $c$6$lcssa;
    while(1) {
     $215 = ($216>>>0)>($214>>>0);
     $217 = ($218>>>0)>($213>>>0);
     $219 = ($216|0)==($214|0);
     $220 = $219 & $217;
     $221 = $215 | $220;
     if ($221) {
      $$125 = $$126;$298 = $218;$299 = $216;$c$8 = $c$747;
      label = 72;
      break L69;
     }
     $222 = (___muldi3(($218|0),($216|0),($$126|0),0)|0);
     $223 = tempRet0;
     $224 = $225&255;
     $226 = $224 ^ -1;
     $227 = ($223>>>0)>(4294967295);
     $228 = ($222>>>0)>($226>>>0);
     $229 = ($223|0)==(-1);
     $230 = $229 & $228;
     $231 = $227 | $230;
     if ($231) {
      $$125 = $$126;$298 = $218;$299 = $216;$c$8 = $c$747;
      label = 72;
      break L69;
     }
     $232 = (_i64Add(($224|0),0,($222|0),($223|0))|0);
     $233 = tempRet0;
     $234 = HEAP32[$3>>2]|0;
     $235 = HEAP32[$4>>2]|0;
     $236 = ($234>>>0)<($235>>>0);
     if ($236) {
      $237 = (($234) + 1|0);
      HEAP32[$3>>2] = $237;
      $238 = HEAP8[$234>>0]|0;
      $239 = $238&255;
      $c$7$be = $239;
     } else {
      $240 = (___shgetc($f)|0);
      $c$7$be = $240;
     }
     $$sum22 = (($c$7$be) + 1)|0;
     $241 = (53240 + ($$sum22)|0);
     $242 = HEAP8[$241>>0]|0;
     $243 = $242&255;
     $244 = ($243>>>0)<($$126>>>0);
     if ($244) {
      $216 = $233;$218 = $232;$225 = $242;$c$747 = $c$7$be;
     } else {
      $$125 = $$126;$298 = $232;$299 = $233;$c$8 = $c$7$be;
      label = 72;
      break;
     }
    }
   } else {
    $$125 = $$126;$298 = $300;$299 = $301;$c$8 = $c$6$lcssa;
    label = 72;
   }
  }
 } while(0);
 if ((label|0) == 72) {
  $$sum19 = (($c$8) + 1)|0;
  $245 = (53240 + ($$sum19)|0);
  $246 = HEAP8[$245>>0]|0;
  $247 = $246&255;
  $248 = ($247>>>0)<($$125>>>0);
  if ($248) {
   while(1) {
    $249 = HEAP32[$3>>2]|0;
    $250 = HEAP32[$4>>2]|0;
    $251 = ($249>>>0)<($250>>>0);
    if ($251) {
     $252 = (($249) + 1|0);
     HEAP32[$3>>2] = $252;
     $253 = HEAP8[$249>>0]|0;
     $254 = $253&255;
     $c$9$be = $254;
    } else {
     $255 = (___shgetc($f)|0);
     $c$9$be = $255;
    }
    $$sum20 = (($c$9$be) + 1)|0;
    $256 = (53240 + ($$sum20)|0);
    $257 = HEAP8[$256>>0]|0;
    $258 = $257&255;
    $259 = ($258>>>0)<($$125>>>0);
    if (!($259)) {
     break;
    }
   }
   $260 = (___errno_location()|0);
   HEAP32[$260>>2] = 34;
   $266 = $1;$268 = $0;
  } else {
   $266 = $299;$268 = $298;
  }
 }
 $261 = HEAP32[$4>>2]|0;
 $262 = ($261|0)==(0|0);
 if (!($262)) {
  $263 = HEAP32[$3>>2]|0;
  $264 = (($263) + -1|0);
  HEAP32[$3>>2] = $264;
 }
 $265 = ($266>>>0)<($1>>>0);
 $267 = ($268>>>0)<($0>>>0);
 $269 = ($266|0)==($1|0);
 $270 = $269 & $267;
 $271 = $265 | $270;
 if (!($271)) {
  $272 = $0 & 1;
  $273 = ($272|0)!=(0);
  $274 = (0)!=(0);
  $275 = $273 | $274;
  $276 = ($neg$0|0)!=(0);
  $or$cond15 = $275 | $276;
  if (!($or$cond15)) {
   $277 = (___errno_location()|0);
   HEAP32[$277>>2] = 34;
   $278 = (_i64Add(($0|0),($1|0),-1,-1)|0);
   $279 = tempRet0;
   $292 = $279;$293 = $278;
   tempRet0 = $292;
   STACKTOP = sp;return ($293|0);
  }
  $280 = ($266>>>0)>($1>>>0);
  $281 = ($268>>>0)>($0>>>0);
  $282 = ($266|0)==($1|0);
  $283 = $282 & $281;
  $284 = $280 | $283;
  if ($284) {
   $285 = (___errno_location()|0);
   HEAP32[$285>>2] = 34;
   $292 = $1;$293 = $0;
   tempRet0 = $292;
   STACKTOP = sp;return ($293|0);
  }
 }
 $286 = ($neg$0|0)<(0);
 $287 = $286 << 31 >> 31;
 $288 = $268 ^ $neg$0;
 $289 = $266 ^ $287;
 $290 = (_i64Subtract(($288|0),($289|0),($neg$0|0),($287|0))|0);
 $291 = tempRet0;
 $292 = $291;$293 = $290;
 tempRet0 = $292;
 STACKTOP = sp;return ($293|0);
}
function ___floatscan($f,$prec,$pok) {
 $f = $f|0;
 $prec = $prec|0;
 $pok = $pok|0;
 var $$$i = 0, $$$i$i = 0, $$$i$i13 = 0, $$$i1 = 0, $$$i3 = 0, $$$i8 = 0, $$0 = 0.0, $$0$i = 0, $$0$i$i = 0, $$0$i$i15 = 0, $$0$i10 = 0, $$0$i5 = 0, $$011$i = 0, $$012$i = 0, $$01231$i = 0, $$01232$i = 0, $$06$i = 0, $$0611$i = 0, $$0612$i = 0, $$1$be$i = 0;
 var $$1$i = 0, $$1$i$i = 0, $$1$i$i14 = 0, $$1$i4 = 0, $$1$i9 = 0, $$1$ph$i = 0, $$13$i = 0, $$2$i = 0, $$20$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3120$i = 0, $$in = 0, $$k$0$i = 0, $$lcssa60$i = 0, $$lnz$0$i = 0, $$neg37$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre = 0;
 var $$pre$i = 0.0, $$pre$i18 = 0, $$pre$phi$iZ2D = 0.0, $$pre29 = 0, $$promoted$i = 0, $$promoted23 = 0, $$sink$off0$us$i = 0, $$sink$off0$us70$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0.0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0, $199 = 0;
 var $2 = 0, $20 = 0, $200 = 0.0, $201 = 0.0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0.0, $23 = 0, $230 = 0.0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0.0, $285 = 0.0, $286 = 0, $287 = 0, $288 = 0, $289 = 0;
 var $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0.0, $294 = 0.0, $295 = 0.0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0.0;
 var $307 = 0.0, $308 = 0.0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0.0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0;
 var $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0;
 var $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0.0, $348 = 0.0, $349 = 0.0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0.0, $358 = 0, $359 = 0, $36 = 0, $360 = 0;
 var $361 = 0, $362 = 0, $363 = 0.0, $364 = 0.0, $365 = 0.0, $366 = 0.0, $367 = 0.0, $368 = 0.0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0.0, $373 = 0, $374 = 0, $375 = 0.0, $376 = 0, $377 = 0, $378 = 0, $379 = 0.0;
 var $38 = 0, $380 = 0, $381 = 0, $382 = 0.0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0.0, $389 = 0.0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0;
 var $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0;
 var $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0;
 var $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0;
 var $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0.0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0;
 var $47 = 0.0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0.0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0;
 var $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0.0, $503 = 0.0, $504 = 0;
 var $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0.0, $52 = 0, $520 = 0.0, $521 = 0.0, $522 = 0;
 var $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0.0, $532 = 0.0, $533 = 0.0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0;
 var $541 = 0, $542 = 0, $543 = 0.0, $544 = 0.0, $545 = 0.0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0.0, $558 = 0, $559 = 0.0;
 var $56 = 0, $560 = 0.0, $561 = 0, $562 = 0.0, $563 = 0, $564 = 0.0, $565 = 0.0, $566 = 0, $567 = 0, $568 = 0, $569 = 0.0, $57 = 0, $570 = 0.0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0.0, $577 = 0.0;
 var $578 = 0.0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0.0, $583 = 0.0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0;
 var $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0;
 var $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0;
 var $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0;
 var $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0;
 var $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0;
 var $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0;
 var $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0;
 var $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0.0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0;
 var $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0.0, $747 = 0.0, $748 = 0, $749 = 0, $75 = 0, $750 = 0.0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0.0, $757 = 0;
 var $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0.0, $772 = 0.0, $773 = 0.0, $774 = 0.0, $775 = 0.0;
 var $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0.0, $787 = 0.0, $788 = 0.0, $789 = 0, $79 = 0, $790 = 0.0, $791 = 0.0, $792 = 0, $793 = 0;
 var $794 = 0, $795 = 0.0, $796 = 0.0, $797 = 0.0, $798 = 0.0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0.0, $802 = 0, $803 = 0.0, $804 = 0.0, $805 = 0.0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0.0;
 var $811 = 0, $812 = 0, $813 = 0, $814 = 0.0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0.0, $823 = 0, $824 = 0, $825 = 0.0, $826 = 0, $827 = 0, $828 = 0, $829 = 0.0;
 var $83 = 0, $830 = 0, $831 = 0, $832 = 0.0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0.0, $839 = 0.0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0.0, $845 = 0, $846 = 0, $847 = 0.0;
 var $848 = 0.0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0;
 var $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $a$0$lcssa182$i = 0, $a$078$i = 0, $a$1$i = 0, $a$2$ph57$i = 0, $a$3$i = 0, $a$3$i$ph = 0, $a$3$ph$i = 0, $a$444$i = 0, $a$5$i = 0, $bias$0$i = 0.0, $bias$0$i25 = 0.0, $bits$0$ph = 0, $brmerge108 = 0, $c$0 = 0, $c$0$i = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$171 = 0;
 var $c$2 = 0, $c$2$i = 0, $c$2$lcssa$i = 0, $c$369 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $carry$080$i = 0, $carry1$0$us$i = 0, $carry1$0$us66$i = 0, $carry1$1$lcssa$lcssa$i = 0, $carry1$1$us$i = 0, $carry1$1$us71$i = 0, $carry3$047$i = 0, $cond$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$029$i = 0, $denormal$030$i = 0, $denormal$1$i = 0;
 var $denormal$2$i = 0, $e2$0$ph$i = 0, $e2$0$us$i = 0, $e2$0$us61$i = 0, $e2$1$i = 0, $e2$1$i$ph = 0, $e2$1$ph$i = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $exitcond$i = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i11 = 0, $gotdig$2$i = 0, $gotdig$2$i12 = 0, $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0;
 var $gotdig$3116$i = 0, $gotdig$4$i = 0, $gotrad$0$i = 0, $gotrad$0$i13 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1117$i = 0, $gotrad$2$i = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$042$i = 0, $i$070 = 0, $i$1 = 0, $i$1$i = 0, $i$268 = 0, $i$3 = 0, $i$4 = 0, $j$0$lcssa$i = 0;
 var $j$0108$i = 0, $j$0109$i = 0, $j$0110$i = 0, $j$0119$i = 0, $j$2$i = 0, $j$388$i = 0, $k$0$lcssa$i = 0, $k$0104$i = 0, $k$0105$i = 0, $k$0106$i = 0, $k$0118$i = 0, $k$2$i = 0, $k$3$i = 0, $k$479$i = 0, $k$5$in$us$i = 0, $k$5$in$us65$i = 0, $k$5$us$i = 0, $k$5$us67$i = 0, $k$5$z$2$us$i = 0, $k$5$z$2$us73$i = 0;
 var $k$645$i = 0, $lnz$0$lcssa$i = 0, $lnz$0100$i = 0, $lnz$0115$i = 0, $lnz$098$i = 0, $lnz$099$i = 0, $lnz$2$i = 0, $notlhs = 0, $notrhs = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i15 = 0, $or$cond10$i = 0, $or$cond112$i = 0, $or$cond15$i = 0, $or$cond17$i = 0, $or$cond18$i = 0, $or$cond187$i = 0, $or$cond19$us$i = 0, $or$cond19$us72$i = 0;
 var $or$cond21$i = 0, $or$cond22$i = 0, $or$cond3$i = 0, $or$cond3$i16 = 0, $or$cond5 = 0, $or$cond5$i = 0, $or$cond5$i17 = 0, $or$cond7 = 0, $or$cond8$i = 0, $or$cond8$i20 = 0, $or$cond9$not = 0, $rp$0$lcssa183$i = 0, $rp$077$i = 0, $rp$1$i19 = 0, $rp$2$ph55$i = 0, $rp$3$i$ph = 0, $rp$3$ph50$i = 0, $rp$443$i = 0, $rp$5$i = 0, $scale$0$i = 0.0;
 var $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$318$i = 0, $x$4$lcssa$i = 0, $x$413$i = 0, $x$5$i = 0, $x$6$i = 0, $x$i = 0, $y$0$i = 0.0, $y$0$i$i = 0.0, $y$0$i$i16 = 0.0, $y$0$i11 = 0.0, $y$0$i2 = 0.0;
 var $y$0$i6 = 0.0, $y$1$i = 0.0, $y$1$i24 = 0.0, $y$2$i = 0.0, $y$2$i26 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$314$i = 0.0, $y$4$i = 0.0, $y$5$i = 0.0, $z$0$i = 0, $z$1$ph56$i = 0, $z$1$us$i = 0, $z$1$us62$i = 0, $z$2$us$i = 0, $z$2$us64$i = 0, $z$3$lcssa$lcssa$i = 0, $z$3$us$i = 0, $z$3$us74$i = 0, $z$4$i = 0;
 var $z$5$ph$i = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0;
 $x$i = sp;
 if ((($prec|0) == 0)) {
  $bits$0$ph = 24;$emin$0$ph = -149;
 } else if ((($prec|0) == 2)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else if ((($prec|0) == 1)) {
  $bits$0$ph = 53;$emin$0$ph = -1074;
 } else {
  $$0 = 0.0;
  STACKTOP = sp;return (+$$0);
 }
 $0 = (($f) + 4|0);
 $1 = (($f) + 100|0);
 L6: while(1) {
  $2 = HEAP32[$0>>2]|0;
  $3 = HEAP32[$1>>2]|0;
  $4 = ($2>>>0)<($3>>>0);
  if ($4) {
   $5 = (($2) + 1|0);
   HEAP32[$0>>2] = $5;
   $6 = HEAP8[$2>>0]|0;
   $7 = $6&255;
   $9 = $7;
  } else {
   $8 = (___shgetc($f)|0);
   $9 = $8;
  }
  switch ($9|0) {
  case 9: case 10: case 11: case 12: case 13: case 32:  {
   break;
  }
  default: {
   break L6;
  }
  }
 }
 $10 = ($9|0)==(45);
 do {
  if ((($9|0) == 43) | (($9|0) == 45)) {
   $11 = HEAP32[$0>>2]|0;
   $12 = $10&1;
   $13 = $12 << 1;
   $14 = (1 - ($13))|0;
   $15 = HEAP32[$1>>2]|0;
   $16 = ($11>>>0)<($15>>>0);
   if ($16) {
    $17 = (($11) + 1|0);
    HEAP32[$0>>2] = $17;
    $18 = HEAP8[$11>>0]|0;
    $19 = $18&255;
    $c$0 = $19;$sign$0 = $14;
    break;
   } else {
    $20 = (___shgetc($f)|0);
    $c$0 = $20;$sign$0 = $14;
    break;
   }
  } else {
   $c$0 = $9;$sign$0 = 1;
  }
 } while(0);
 $c$171 = $c$0;$i$070 = 0;
 while(1) {
  $21 = $c$171 | 32;
  $22 = (53520 + ($i$070)|0);
  $23 = HEAP8[$22>>0]|0;
  $24 = $23 << 24 >> 24;
  $25 = ($21|0)==($24|0);
  if (!($25)) {
   $c$1$lcssa = $c$171;$i$0$lcssa = $i$070;
   break;
  }
  $26 = ($i$070>>>0)<(7);
  do {
   if ($26) {
    $27 = HEAP32[$0>>2]|0;
    $28 = HEAP32[$1>>2]|0;
    $29 = ($27>>>0)<($28>>>0);
    if ($29) {
     $30 = (($27) + 1|0);
     HEAP32[$0>>2] = $30;
     $31 = HEAP8[$27>>0]|0;
     $32 = $31&255;
     $c$2 = $32;
     break;
    } else {
     $33 = (___shgetc($f)|0);
     $c$2 = $33;
     break;
    }
   } else {
    $c$2 = $c$171;
   }
  } while(0);
  $34 = (($i$070) + 1)|0;
  $35 = ($34>>>0)<(8);
  if ($35) {
   $c$171 = $c$2;$i$070 = $34;
  } else {
   $c$1$lcssa = $c$2;$i$0$lcssa = $34;
   break;
  }
 }
 do {
  if ((($i$0$lcssa|0) == 3)) {
   label = 23;
  } else if (!((($i$0$lcssa|0) == 8))) {
   $36 = ($i$0$lcssa>>>0)>(3);
   $37 = ($pok|0)!=(0);
   $or$cond5 = $36 & $37;
   if ($or$cond5) {
    $38 = ($i$0$lcssa|0)==(8);
    if ($38) {
     break;
    } else {
     label = 23;
     break;
    }
   }
   $49 = ($i$0$lcssa|0)==(0);
   L34: do {
    if ($49) {
     $c$369 = $c$1$lcssa;$i$268 = 0;
     while(1) {
      $50 = $c$369 | 32;
      $51 = (54104 + ($i$268)|0);
      $52 = HEAP8[$51>>0]|0;
      $53 = $52 << 24 >> 24;
      $54 = ($50|0)==($53|0);
      if (!($54)) {
       $c$5 = $c$369;$i$3 = $i$268;
       break L34;
      }
      $55 = ($i$268>>>0)<(2);
      do {
       if ($55) {
        $56 = HEAP32[$0>>2]|0;
        $57 = HEAP32[$1>>2]|0;
        $58 = ($56>>>0)<($57>>>0);
        if ($58) {
         $59 = (($56) + 1|0);
         HEAP32[$0>>2] = $59;
         $60 = HEAP8[$56>>0]|0;
         $61 = $60&255;
         $c$4 = $61;
         break;
        } else {
         $62 = (___shgetc($f)|0);
         $c$4 = $62;
         break;
        }
       } else {
        $c$4 = $c$369;
       }
      } while(0);
      $63 = (($i$268) + 1)|0;
      $64 = ($63>>>0)<(3);
      if ($64) {
       $c$369 = $c$4;$i$268 = $63;
      } else {
       $c$5 = $c$4;$i$3 = $63;
       break;
      }
     }
    } else {
     $c$5 = $c$1$lcssa;$i$3 = $i$0$lcssa;
    }
   } while(0);
   if ((($i$3|0) == 0)) {
    $125 = ($c$5|0)==(48);
    do {
     if ($125) {
      $126 = HEAP32[$0>>2]|0;
      $127 = HEAP32[$1>>2]|0;
      $128 = ($126>>>0)<($127>>>0);
      if ($128) {
       $129 = (($126) + 1|0);
       HEAP32[$0>>2] = $129;
       $130 = HEAP8[$126>>0]|0;
       $131 = $130&255;
       $134 = $131;
      } else {
       $132 = (___shgetc($f)|0);
       $134 = $132;
      }
      $133 = $134 | 32;
      $135 = ($133|0)==(120);
      if (!($135)) {
       $390 = HEAP32[$1>>2]|0;
       $391 = ($390|0)==(0|0);
       if ($391) {
        $c$6 = 48;
        break;
       }
       $392 = HEAP32[$0>>2]|0;
       $393 = (($392) + -1|0);
       HEAP32[$0>>2] = $393;
       $c$6 = 48;
       break;
      }
      $136 = HEAP32[$0>>2]|0;
      $137 = HEAP32[$1>>2]|0;
      $138 = ($136>>>0)<($137>>>0);
      if ($138) {
       $139 = (($136) + 1|0);
       HEAP32[$0>>2] = $139;
       $140 = HEAP8[$136>>0]|0;
       $141 = $140&255;
       $c$0$i = $141;$gotdig$0$i = 0;
      } else {
       $142 = (___shgetc($f)|0);
       $c$0$i = $142;$gotdig$0$i = 0;
      }
      while(1) {
       if ((($c$0$i|0) == 46)) {
        label = 71;
        break;
       } else if (!((($c$0$i|0) == 48))) {
        $181 = 0;$183 = 0;$233 = 0;$235 = 0;$c$2$i = $c$0$i;$gotdig$2$i = $gotdig$0$i;$gotrad$0$i = 0;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
        break;
       }
       $143 = HEAP32[$0>>2]|0;
       $144 = HEAP32[$1>>2]|0;
       $145 = ($143>>>0)<($144>>>0);
       if ($145) {
        $146 = (($143) + 1|0);
        HEAP32[$0>>2] = $146;
        $147 = HEAP8[$143>>0]|0;
        $148 = $147&255;
        $c$0$i = $148;$gotdig$0$i = 1;
        continue;
       } else {
        $149 = (___shgetc($f)|0);
        $c$0$i = $149;$gotdig$0$i = 1;
        continue;
       }
      }
      if ((label|0) == 71) {
       $150 = HEAP32[$0>>2]|0;
       $151 = HEAP32[$1>>2]|0;
       $152 = ($150>>>0)<($151>>>0);
       if ($152) {
        $153 = (($150) + 1|0);
        HEAP32[$0>>2] = $153;
        $154 = HEAP8[$150>>0]|0;
        $155 = $154&255;
        $c$1$ph$i = $155;
       } else {
        $156 = (___shgetc($f)|0);
        $c$1$ph$i = $156;
       }
       $157 = ($c$1$ph$i|0)==(48);
       if ($157) {
        $165 = 0;$166 = 0;
        while(1) {
         $158 = HEAP32[$0>>2]|0;
         $159 = HEAP32[$1>>2]|0;
         $160 = ($158>>>0)<($159>>>0);
         if ($160) {
          $161 = (($158) + 1|0);
          HEAP32[$0>>2] = $161;
          $162 = HEAP8[$158>>0]|0;
          $163 = $162&255;
          $170 = $163;
         } else {
          $164 = (___shgetc($f)|0);
          $170 = $164;
         }
         $167 = (_i64Add(($165|0),($166|0),-1,-1)|0);
         $168 = tempRet0;
         $169 = ($170|0)==(48);
         if ($169) {
          $165 = $167;$166 = $168;
         } else {
          $181 = 0;$183 = 0;$233 = $167;$235 = $168;$c$2$i = $170;$gotdig$2$i = 1;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
          break;
         }
        }
       } else {
        $181 = 0;$183 = 0;$233 = 0;$235 = 0;$c$2$i = $c$1$ph$i;$gotdig$2$i = $gotdig$0$i;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
       }
      }
      L78: while(1) {
       $171 = (($c$2$i) + -48)|0;
       $172 = ($171>>>0)<(10);
       do {
        if ($172) {
         $d$0$i = $171;
         label = 84;
        } else {
         $173 = $c$2$i | 32;
         $174 = (($173) + -97)|0;
         $175 = ($174>>>0)<(6);
         $176 = ($c$2$i|0)==(46);
         $or$cond$i = $175 | $176;
         if (!($or$cond$i)) {
          $c$2$lcssa$i = $c$2$i;
          break L78;
         }
         if ($176) {
          $177 = ($gotrad$0$i|0)==(0);
          if ($177) {
           $850 = $183;$851 = $181;$852 = $183;$853 = $181;$gotdig$3$i = $gotdig$2$i;$gotrad$1$i = 1;$gottail$2$i = $gottail$0$i;$scale$2$i = $scale$0$i;$x$2$i = $x$0$i;$y$2$i = $y$0$i;
           break;
          } else {
           $c$2$lcssa$i = 46;
           break L78;
          }
         } else {
          $178 = ($c$2$i|0)>(57);
          $179 = (($173) + -87)|0;
          $$$i = $178 ? $179 : $171;
          $d$0$i = $$$i;
          label = 84;
          break;
         }
        }
       } while(0);
       if ((label|0) == 84) {
        label = 0;
        $180 = ($181|0)<(0);
        $182 = ($183>>>0)<(8);
        $184 = ($181|0)==(0);
        $185 = $184 & $182;
        $186 = $180 | $185;
        do {
         if ($186) {
          $187 = $x$0$i << 4;
          $188 = (($d$0$i) + ($187))|0;
          $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $188;$y$1$i = $y$0$i;
         } else {
          $189 = ($181|0)<(0);
          $190 = ($183>>>0)<(14);
          $191 = ($181|0)==(0);
          $192 = $191 & $190;
          $193 = $189 | $192;
          if ($193) {
           $194 = (+($d$0$i|0));
           $195 = $scale$0$i * 0.0625;
           $196 = $195 * $194;
           $197 = $y$0$i + $196;
           $gottail$1$i = $gottail$0$i;$scale$1$i = $195;$x$1$i = $x$0$i;$y$1$i = $197;
           break;
          }
          $198 = ($d$0$i|0)==(0);
          $199 = ($gottail$0$i|0)!=(0);
          $or$cond3$i = $198 | $199;
          if ($or$cond3$i) {
           $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $y$0$i;
          } else {
           $200 = $scale$0$i * 0.5;
           $201 = $y$0$i + $200;
           $gottail$1$i = 1;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $201;
          }
         }
        } while(0);
        $202 = (_i64Add(($183|0),($181|0),1,0)|0);
        $203 = tempRet0;
        $850 = $233;$851 = $235;$852 = $202;$853 = $203;$gotdig$3$i = 1;$gotrad$1$i = $gotrad$0$i;$gottail$2$i = $gottail$1$i;$scale$2$i = $scale$1$i;$x$2$i = $x$1$i;$y$2$i = $y$1$i;
       }
       $204 = HEAP32[$0>>2]|0;
       $205 = HEAP32[$1>>2]|0;
       $206 = ($204>>>0)<($205>>>0);
       if ($206) {
        $207 = (($204) + 1|0);
        HEAP32[$0>>2] = $207;
        $208 = HEAP8[$204>>0]|0;
        $209 = $208&255;
        $181 = $853;$183 = $852;$233 = $850;$235 = $851;$c$2$i = $209;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
        continue;
       } else {
        $210 = (___shgetc($f)|0);
        $181 = $853;$183 = $852;$233 = $850;$235 = $851;$c$2$i = $210;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
        continue;
       }
      }
      $211 = ($gotdig$2$i|0)==(0);
      if ($211) {
       $212 = HEAP32[$1>>2]|0;
       $213 = ($212|0)==(0|0);
       if (!($213)) {
        $214 = HEAP32[$0>>2]|0;
        $215 = (($214) + -1|0);
        HEAP32[$0>>2] = $215;
       }
       $216 = ($pok|0)==(0);
       if ($216) {
        $221 = (($f) + 104|0);
        HEAP32[$221>>2] = 0;
        $222 = (($f) + 8|0);
        $223 = HEAP32[$222>>2]|0;
        $224 = HEAP32[$0>>2]|0;
        $225 = $223;
        $226 = $224;
        $227 = (($225) - ($226))|0;
        $228 = (($f) + 108|0);
        HEAP32[$228>>2] = $227;
        HEAP32[$1>>2] = $223;
       } else {
        if (!($213)) {
         $217 = HEAP32[$0>>2]|0;
         $218 = (($217) + -1|0);
         HEAP32[$0>>2] = $218;
         $219 = ($gotrad$0$i|0)==(0);
         if (!($219)) {
          $220 = (($217) + -2|0);
          HEAP32[$0>>2] = $220;
         }
        }
       }
       $229 = (+($sign$0|0));
       $230 = $229 * 0.0;
       $$0 = $230;
       STACKTOP = sp;return (+$$0);
      }
      $231 = ($gotrad$0$i|0)==(0);
      $232 = $231 ? $183 : $233;
      $234 = $231 ? $181 : $235;
      $236 = ($181|0)<(0);
      $237 = ($183>>>0)<(8);
      $238 = ($181|0)==(0);
      $239 = $238 & $237;
      $240 = $236 | $239;
      if ($240) {
       $242 = $183;$243 = $181;$x$318$i = $x$0$i;
       while(1) {
        $241 = $x$318$i << 4;
        $244 = (_i64Add(($242|0),($243|0),1,0)|0);
        $245 = tempRet0;
        $246 = ($245|0)<(0);
        $247 = ($244>>>0)<(8);
        $248 = ($245|0)==(0);
        $249 = $248 & $247;
        $250 = $246 | $249;
        if ($250) {
         $242 = $244;$243 = $245;$x$318$i = $241;
        } else {
         $x$3$lcssa$i = $241;
         break;
        }
       }
      } else {
       $x$3$lcssa$i = $x$0$i;
      }
      $251 = $c$2$lcssa$i | 32;
      $252 = ($251|0)==(112);
      do {
       if ($252) {
        $253 = (_scanexp($f,$pok)|0);
        $254 = tempRet0;
        $255 = ($253|0)==(0);
        $256 = ($254|0)==(-2147483648);
        $257 = $255 & $256;
        if ($257) {
         $258 = ($pok|0)==(0);
         if ($258) {
          $263 = (($f) + 104|0);
          HEAP32[$263>>2] = 0;
          $264 = (($f) + 8|0);
          $265 = HEAP32[$264>>2]|0;
          $266 = HEAP32[$0>>2]|0;
          $267 = $265;
          $268 = $266;
          $269 = (($267) - ($268))|0;
          $270 = (($f) + 108|0);
          HEAP32[$270>>2] = $269;
          HEAP32[$1>>2] = $265;
          $$0 = 0.0;
          STACKTOP = sp;return (+$$0);
         } else {
          $259 = HEAP32[$1>>2]|0;
          $260 = ($259|0)==(0|0);
          if ($260) {
           $279 = 0;$280 = 0;
           break;
          }
          $261 = HEAP32[$0>>2]|0;
          $262 = (($261) + -1|0);
          HEAP32[$0>>2] = $262;
          $279 = 0;$280 = 0;
          break;
         }
        } else {
         $279 = $253;$280 = $254;
        }
       } else {
        $271 = HEAP32[$1>>2]|0;
        $272 = ($271|0)==(0|0);
        if ($272) {
         $279 = 0;$280 = 0;
        } else {
         $273 = HEAP32[$0>>2]|0;
         $274 = (($273) + -1|0);
         HEAP32[$0>>2] = $274;
         $279 = 0;$280 = 0;
        }
       }
      } while(0);
      $275 = (_bitshift64Shl(($232|0),($234|0),2)|0);
      $276 = tempRet0;
      $277 = (_i64Add(($275|0),($276|0),-32,-1)|0);
      $278 = tempRet0;
      $281 = (_i64Add(($277|0),($278|0),($279|0),($280|0))|0);
      $282 = tempRet0;
      $283 = ($x$3$lcssa$i|0)==(0);
      if ($283) {
       $284 = (+($sign$0|0));
       $285 = $284 * 0.0;
       $$0 = $285;
       STACKTOP = sp;return (+$$0);
      }
      $286 = (0 - ($emin$0$ph))|0;
      $287 = ($282|0)>(0);
      $288 = ($281>>>0)>($286>>>0);
      $289 = ($282|0)==(0);
      $290 = $289 & $288;
      $291 = $287 | $290;
      if ($291) {
       $292 = (___errno_location()|0);
       HEAP32[$292>>2] = 34;
       $293 = (+($sign$0|0));
       $294 = $293 * 1.7976931348623157E+308;
       $295 = $294 * 1.7976931348623157E+308;
       $$0 = $295;
       STACKTOP = sp;return (+$$0);
      }
      $296 = (($emin$0$ph) + -106)|0;
      $297 = ($296|0)<(0);
      $298 = $297 << 31 >> 31;
      $299 = ($282|0)<($298|0);
      $300 = ($281>>>0)<($296>>>0);
      $301 = ($282|0)==($298|0);
      $302 = $301 & $300;
      $303 = $299 | $302;
      if ($303) {
       $305 = (___errno_location()|0);
       HEAP32[$305>>2] = 34;
       $306 = (+($sign$0|0));
       $307 = $306 * 2.2250738585072014E-308;
       $308 = $307 * 2.2250738585072014E-308;
       $$0 = $308;
       STACKTOP = sp;return (+$$0);
      }
      $304 = ($x$3$lcssa$i|0)>(-1);
      if ($304) {
       $313 = $281;$314 = $282;$x$413$i = $x$3$lcssa$i;$y$314$i = $y$0$i;
       while(1) {
        $309 = !($y$314$i >= 0.5);
        $310 = $x$413$i << 1;
        if ($309) {
         $$pn$i = $y$314$i;$x$5$i = $310;
        } else {
         $311 = $310 | 1;
         $312 = $y$314$i + -1.0;
         $$pn$i = $312;$x$5$i = $311;
        }
        $y$4$i = $y$314$i + $$pn$i;
        $315 = (_i64Add(($313|0),($314|0),-1,-1)|0);
        $316 = tempRet0;
        $317 = ($x$5$i|0)>(-1);
        if ($317) {
         $313 = $315;$314 = $316;$x$413$i = $x$5$i;$y$314$i = $y$4$i;
        } else {
         $322 = $315;$323 = $316;$x$4$lcssa$i = $x$5$i;$y$3$lcssa$i = $y$4$i;
         break;
        }
       }
      } else {
       $322 = $281;$323 = $282;$x$4$lcssa$i = $x$3$lcssa$i;$y$3$lcssa$i = $y$0$i;
      }
      $318 = ($emin$0$ph|0)<(0);
      $319 = $318 << 31 >> 31;
      $320 = (_i64Subtract(32,0,($emin$0$ph|0),($319|0))|0);
      $321 = tempRet0;
      $324 = (_i64Add(($322|0),($323|0),($320|0),($321|0))|0);
      $325 = tempRet0;
      $326 = (0)>($325|0);
      $327 = ($bits$0$ph>>>0)>($324>>>0);
      $328 = (0)==($325|0);
      $329 = $328 & $327;
      $330 = $326 | $329;
      if ($330) {
       $331 = ($324|0)<(0);
       if ($331) {
        $$0611$i = 0;
        label = 127;
       } else {
        $$06$i = $324;
        label = 125;
       }
      } else {
       $$06$i = $bits$0$ph;
       label = 125;
      }
      if ((label|0) == 125) {
       $332 = ($$06$i|0)<(53);
       if ($332) {
        $$0611$i = $$06$i;
        label = 127;
       } else {
        $$pre$i = (+($sign$0|0));
        $$0612$i = $$06$i;$$pre$phi$iZ2D = $$pre$i;$bias$0$i = 0.0;
       }
      }
      if ((label|0) == 127) {
       $333 = (84 - ($$0611$i))|0;
       $334 = ($333|0)>(1023);
       do {
        if ($334) {
         $335 = (($333) + -1023)|0;
         $336 = ($335|0)>(1023);
         if (!($336)) {
          $$0$i10 = $335;$y$0$i11 = 8.9884656743115795E+307;
          break;
         }
         $337 = (($333) + -2046)|0;
         $338 = ($337|0)>(1023);
         $$$i8 = $338 ? 1023 : $337;
         $$0$i10 = $$$i8;$y$0$i11 = inf;
        } else {
         $339 = ($333|0)<(-1022);
         if (!($339)) {
          $$0$i10 = $333;$y$0$i11 = 1.0;
          break;
         }
         $340 = (($333) + 1022)|0;
         $341 = ($340|0)<(-1022);
         if (!($341)) {
          $$0$i10 = $340;$y$0$i11 = 2.2250738585072014E-308;
          break;
         }
         $342 = (($333) + 2044)|0;
         $343 = ($342|0)<(-1022);
         $$1$i9 = $343 ? -1022 : $342;
         $$0$i10 = $$1$i9;$y$0$i11 = 0.0;
        }
       } while(0);
       $344 = (($$0$i10) + 1023)|0;
       $345 = (_bitshift64Shl(($344|0),0,52)|0);
       $346 = tempRet0;
       HEAP32[tempDoublePtr>>2] = $345;HEAP32[tempDoublePtr+4>>2] = $346;$347 = +HEAPF64[tempDoublePtr>>3];
       $348 = $y$0$i11 * $347;
       $349 = (+($sign$0|0));
       HEAPF64[tempDoublePtr>>3] = $348;$350 = HEAP32[tempDoublePtr>>2]|0;
       $351 = HEAP32[tempDoublePtr+4>>2]|0;
       HEAPF64[tempDoublePtr>>3] = $349;$352 = HEAP32[tempDoublePtr>>2]|0;
       $353 = HEAP32[tempDoublePtr+4>>2]|0;
       $354 = $351 & 2147483647;
       $355 = $353 & -2147483648;
       $356 = $355 | $354;
       HEAP32[tempDoublePtr>>2] = $350;HEAP32[tempDoublePtr+4>>2] = $356;$357 = +HEAPF64[tempDoublePtr>>3];
       $$0612$i = $$0611$i;$$pre$phi$iZ2D = $349;$bias$0$i = $357;
      }
      $358 = ($$0612$i|0)<(32);
      $359 = $y$3$lcssa$i != 0.0;
      $or$cond5$i = $358 & $359;
      $360 = $x$4$lcssa$i & 1;
      $361 = ($360|0)==(0);
      $or$cond8$i = $or$cond5$i & $361;
      $362 = $or$cond8$i&1;
      $x$6$i = (($362) + ($x$4$lcssa$i))|0;
      $y$5$i = $or$cond8$i ? 0.0 : $y$3$lcssa$i;
      $363 = (+($x$6$i>>>0));
      $364 = $$pre$phi$iZ2D * $363;
      $365 = $bias$0$i + $364;
      $366 = $$pre$phi$iZ2D * $y$5$i;
      $367 = $366 + $365;
      $368 = $367 - $bias$0$i;
      $369 = $368 != 0.0;
      if (!($369)) {
       $370 = (___errno_location()|0);
       HEAP32[$370>>2] = 34;
      }
      $371 = ($322|0)>(1023);
      do {
       if ($371) {
        $372 = $368 * 8.9884656743115795E+307;
        $373 = (($322) + -1023)|0;
        $374 = ($373|0)>(1023);
        if (!($374)) {
         $$0$i$i15 = $373;$y$0$i$i16 = $372;
         break;
        }
        $375 = $372 * 8.9884656743115795E+307;
        $376 = (($322) + -2046)|0;
        $377 = ($376|0)>(1023);
        $$$i$i13 = $377 ? 1023 : $376;
        $$0$i$i15 = $$$i$i13;$y$0$i$i16 = $375;
       } else {
        $378 = ($322|0)<(-1022);
        if (!($378)) {
         $$0$i$i15 = $322;$y$0$i$i16 = $368;
         break;
        }
        $379 = $368 * 2.2250738585072014E-308;
        $380 = (($322) + 1022)|0;
        $381 = ($380|0)<(-1022);
        if (!($381)) {
         $$0$i$i15 = $380;$y$0$i$i16 = $379;
         break;
        }
        $382 = $379 * 2.2250738585072014E-308;
        $383 = (($322) + 2044)|0;
        $384 = ($383|0)<(-1022);
        $$1$i$i14 = $384 ? -1022 : $383;
        $$0$i$i15 = $$1$i$i14;$y$0$i$i16 = $382;
       }
      } while(0);
      $385 = (($$0$i$i15) + 1023)|0;
      $386 = (_bitshift64Shl(($385|0),0,52)|0);
      $387 = tempRet0;
      HEAP32[tempDoublePtr>>2] = $386;HEAP32[tempDoublePtr+4>>2] = $387;$388 = +HEAPF64[tempDoublePtr>>3];
      $389 = $y$0$i$i16 * $388;
      $$0 = $389;
      STACKTOP = sp;return (+$$0);
     } else {
      $c$6 = $c$5;
     }
    } while(0);
    $sum$i = (($emin$0$ph) + ($bits$0$ph))|0;
    $394 = (0 - ($sum$i))|0;
    $$011$i = $c$6;$gotdig$0$i11 = 0;
    while(1) {
     if ((($$011$i|0) == 46)) {
      label = 150;
      break;
     } else if (!((($$011$i|0) == 48))) {
      $$2$i = $$011$i;$854 = 0;$855 = 0;$gotdig$2$i12 = $gotdig$0$i11;$gotrad$0$i13 = 0;
      break;
     }
     $395 = HEAP32[$0>>2]|0;
     $396 = HEAP32[$1>>2]|0;
     $397 = ($395>>>0)<($396>>>0);
     if ($397) {
      $398 = (($395) + 1|0);
      HEAP32[$0>>2] = $398;
      $399 = HEAP8[$395>>0]|0;
      $400 = $399&255;
      $$011$i = $400;$gotdig$0$i11 = 1;
      continue;
     } else {
      $401 = (___shgetc($f)|0);
      $$011$i = $401;$gotdig$0$i11 = 1;
      continue;
     }
    }
    if ((label|0) == 150) {
     $402 = HEAP32[$0>>2]|0;
     $403 = HEAP32[$1>>2]|0;
     $404 = ($402>>>0)<($403>>>0);
     if ($404) {
      $405 = (($402) + 1|0);
      HEAP32[$0>>2] = $405;
      $406 = HEAP8[$402>>0]|0;
      $407 = $406&255;
      $$1$ph$i = $407;
     } else {
      $408 = (___shgetc($f)|0);
      $$1$ph$i = $408;
     }
     $409 = ($$1$ph$i|0)==(48);
     if ($409) {
      $410 = 0;$411 = 0;
      while(1) {
       $412 = (_i64Add(($410|0),($411|0),-1,-1)|0);
       $413 = tempRet0;
       $414 = HEAP32[$0>>2]|0;
       $415 = HEAP32[$1>>2]|0;
       $416 = ($414>>>0)<($415>>>0);
       if ($416) {
        $417 = (($414) + 1|0);
        HEAP32[$0>>2] = $417;
        $418 = HEAP8[$414>>0]|0;
        $419 = $418&255;
        $$1$be$i = $419;
       } else {
        $420 = (___shgetc($f)|0);
        $$1$be$i = $420;
       }
       $421 = ($$1$be$i|0)==(48);
       if ($421) {
        $410 = $412;$411 = $413;
       } else {
        $$2$i = $$1$be$i;$854 = $412;$855 = $413;$gotdig$2$i12 = 1;$gotrad$0$i13 = 1;
        break;
       }
      }
     } else {
      $$2$i = $$1$ph$i;$854 = 0;$855 = 0;$gotdig$2$i12 = $gotdig$0$i11;$gotrad$0$i13 = 1;
     }
    }
    HEAP32[$x$i>>2] = 0;
    $422 = (($$2$i) + -48)|0;
    $423 = ($422>>>0)<(10);
    $424 = ($$2$i|0)==(46);
    $or$cond112$i = $423 | $424;
    L194: do {
     if ($or$cond112$i) {
      $425 = (($x$i) + 496|0);
      $$3120$i = $$2$i;$428 = 0;$429 = 0;$856 = $424;$857 = $422;$858 = $854;$859 = $855;$gotdig$3116$i = $gotdig$2$i12;$gotrad$1117$i = $gotrad$0$i13;$j$0119$i = 0;$k$0118$i = 0;$lnz$0115$i = 0;
      L196: while(1) {
       do {
        if ($856) {
         $cond$i = ($gotrad$1117$i|0)==(0);
         if ($cond$i) {
          $860 = $428;$861 = $429;$862 = $428;$863 = $429;$gotdig$4$i = $gotdig$3116$i;$gotrad$2$i = 1;$j$2$i = $j$0119$i;$k$2$i = $k$0118$i;$lnz$2$i = $lnz$0115$i;
         } else {
          break L196;
         }
        } else {
         $427 = ($k$0118$i|0)<(125);
         $430 = (_i64Add(($428|0),($429|0),1,0)|0);
         $431 = tempRet0;
         $432 = ($$3120$i|0)!=(48);
         if (!($427)) {
          if (!($432)) {
           $860 = $858;$861 = $859;$862 = $430;$863 = $431;$gotdig$4$i = $gotdig$3116$i;$gotrad$2$i = $gotrad$1117$i;$j$2$i = $j$0119$i;$k$2$i = $k$0118$i;$lnz$2$i = $lnz$0115$i;
           break;
          }
          $442 = HEAP32[$425>>2]|0;
          $443 = $442 | 1;
          HEAP32[$425>>2] = $443;
          $860 = $858;$861 = $859;$862 = $430;$863 = $431;$gotdig$4$i = $gotdig$3116$i;$gotrad$2$i = $gotrad$1117$i;$j$2$i = $j$0119$i;$k$2$i = $k$0118$i;$lnz$2$i = $lnz$0115$i;
          break;
         }
         $$lnz$0$i = $432 ? $430 : $lnz$0115$i;
         $433 = ($j$0119$i|0)==(0);
         $434 = (($x$i) + ($k$0118$i<<2)|0);
         if ($433) {
          $storemerge$i = $857;
         } else {
          $435 = HEAP32[$434>>2]|0;
          $436 = ($435*10)|0;
          $437 = (($$3120$i) + -48)|0;
          $438 = (($437) + ($436))|0;
          $storemerge$i = $438;
         }
         HEAP32[$434>>2] = $storemerge$i;
         $439 = (($j$0119$i) + 1)|0;
         $440 = ($439|0)==(9);
         $441 = $440&1;
         $$k$0$i = (($441) + ($k$0118$i))|0;
         $$13$i = $440 ? 0 : $439;
         $860 = $858;$861 = $859;$862 = $430;$863 = $431;$gotdig$4$i = 1;$gotrad$2$i = $gotrad$1117$i;$j$2$i = $$13$i;$k$2$i = $$k$0$i;$lnz$2$i = $$lnz$0$i;
        }
       } while(0);
       $444 = HEAP32[$0>>2]|0;
       $445 = HEAP32[$1>>2]|0;
       $446 = ($444>>>0)<($445>>>0);
       if ($446) {
        $447 = (($444) + 1|0);
        HEAP32[$0>>2] = $447;
        $448 = HEAP8[$444>>0]|0;
        $449 = $448&255;
        $$3$be$i = $449;
       } else {
        $450 = (___shgetc($f)|0);
        $$3$be$i = $450;
       }
       $451 = (($$3$be$i) + -48)|0;
       $452 = ($451>>>0)<(10);
       $453 = ($$3$be$i|0)==(46);
       $or$cond$i15 = $452 | $453;
       if ($or$cond$i15) {
        $$3120$i = $$3$be$i;$428 = $862;$429 = $863;$856 = $453;$857 = $451;$858 = $860;$859 = $861;$gotdig$3116$i = $gotdig$4$i;$gotrad$1117$i = $gotrad$2$i;$j$0119$i = $j$2$i;$k$0118$i = $k$2$i;$lnz$0115$i = $lnz$2$i;
       } else {
        $$3$lcssa$i = $$3$be$i;$456 = $862;$457 = $860;$459 = $863;$460 = $861;$gotdig$3$lcssa$i = $gotdig$4$i;$gotrad$1$lcssa$i = $gotrad$2$i;$j$0$lcssa$i = $j$2$i;$k$0$lcssa$i = $k$2$i;$lnz$0$lcssa$i = $lnz$2$i;
        label = 173;
        break L194;
       }
      }
      $426 = ($gotdig$3116$i|0)!=(0);
      $864 = $428;$865 = $429;$866 = $858;$867 = $859;$868 = $426;$j$0110$i = $j$0119$i;$k$0106$i = $k$0118$i;$lnz$0100$i = $lnz$0115$i;
      label = 181;
     } else {
      $$3$lcssa$i = $$2$i;$456 = 0;$457 = $854;$459 = 0;$460 = $855;$gotdig$3$lcssa$i = $gotdig$2$i12;$gotrad$1$lcssa$i = $gotrad$0$i13;$j$0$lcssa$i = 0;$k$0$lcssa$i = 0;$lnz$0$lcssa$i = 0;
      label = 173;
     }
    } while(0);
    do {
     if ((label|0) == 173) {
      $454 = ($gotrad$1$lcssa$i|0)==(0);
      $455 = $454 ? $456 : $457;
      $458 = $454 ? $459 : $460;
      $461 = ($gotdig$3$lcssa$i|0)!=(0);
      $462 = $$3$lcssa$i | 32;
      $463 = ($462|0)==(101);
      $or$cond15$i = $461 & $463;
      if (!($or$cond15$i)) {
       $486 = ($$3$lcssa$i|0)>(-1);
       if ($486) {
        $864 = $456;$865 = $459;$866 = $455;$867 = $458;$868 = $461;$j$0110$i = $j$0$lcssa$i;$k$0106$i = $k$0$lcssa$i;$lnz$0100$i = $lnz$0$lcssa$i;
        label = 181;
        break;
       } else {
        $869 = $456;$870 = $459;$871 = $461;$872 = $455;$873 = $458;$j$0109$i = $j$0$lcssa$i;$k$0105$i = $k$0$lcssa$i;$lnz$099$i = $lnz$0$lcssa$i;
        label = 183;
        break;
       }
      }
      $464 = (_scanexp($f,$pok)|0);
      $465 = tempRet0;
      $466 = ($464|0)==(0);
      $467 = ($465|0)==(-2147483648);
      $468 = $466 & $467;
      do {
       if ($468) {
        $469 = ($pok|0)==(0);
        if ($469) {
         $474 = (($f) + 104|0);
         HEAP32[$474>>2] = 0;
         $475 = (($f) + 8|0);
         $476 = HEAP32[$475>>2]|0;
         $477 = HEAP32[$0>>2]|0;
         $478 = $476;
         $479 = $477;
         $480 = (($478) - ($479))|0;
         $481 = (($f) + 108|0);
         HEAP32[$481>>2] = $480;
         HEAP32[$1>>2] = $476;
         $$0 = 0.0;
         STACKTOP = sp;return (+$$0);
        } else {
         $470 = HEAP32[$1>>2]|0;
         $471 = ($470|0)==(0|0);
         if ($471) {
          $482 = 0;$483 = 0;
          break;
         }
         $472 = HEAP32[$0>>2]|0;
         $473 = (($472) + -1|0);
         HEAP32[$0>>2] = $473;
         $482 = 0;$483 = 0;
         break;
        }
       } else {
        $482 = $464;$483 = $465;
       }
      } while(0);
      $484 = (_i64Add(($482|0),($483|0),($455|0),($458|0))|0);
      $485 = tempRet0;
      $505 = $484;$506 = $456;$508 = $485;$509 = $459;$j$0108$i = $j$0$lcssa$i;$k$0104$i = $k$0$lcssa$i;$lnz$098$i = $lnz$0$lcssa$i;
     }
    } while(0);
    if ((label|0) == 181) {
     $487 = HEAP32[$1>>2]|0;
     $488 = ($487|0)==(0|0);
     if ($488) {
      $869 = $864;$870 = $865;$871 = $868;$872 = $866;$873 = $867;$j$0109$i = $j$0110$i;$k$0105$i = $k$0106$i;$lnz$099$i = $lnz$0100$i;
      label = 183;
     } else {
      $489 = HEAP32[$0>>2]|0;
      $490 = (($489) + -1|0);
      HEAP32[$0>>2] = $490;
      if ($868) {
       $505 = $866;$506 = $864;$508 = $867;$509 = $865;$j$0108$i = $j$0110$i;$k$0104$i = $k$0106$i;$lnz$098$i = $lnz$0100$i;
      } else {
       $497 = $490;
       label = 185;
      }
     }
    }
    if ((label|0) == 183) {
     if ($871) {
      $505 = $872;$506 = $869;$508 = $873;$509 = $870;$j$0108$i = $j$0109$i;$k$0104$i = $k$0105$i;$lnz$098$i = $lnz$099$i;
     } else {
      $$pre29 = HEAP32[$0>>2]|0;
      $497 = $$pre29;
      label = 185;
     }
    }
    if ((label|0) == 185) {
     $491 = (___errno_location()|0);
     HEAP32[$491>>2] = 22;
     $492 = (($f) + 104|0);
     HEAP32[$492>>2] = 0;
     $493 = (($f) + 8|0);
     $494 = HEAP32[$493>>2]|0;
     $495 = $494;
     $496 = $497;
     $498 = (($495) - ($496))|0;
     $499 = (($f) + 108|0);
     HEAP32[$499>>2] = $498;
     HEAP32[$1>>2] = $494;
     $$0 = 0.0;
     STACKTOP = sp;return (+$$0);
    }
    $500 = HEAP32[$x$i>>2]|0;
    $501 = ($500|0)==(0);
    if ($501) {
     $502 = (+($sign$0|0));
     $503 = $502 * 0.0;
     $$0 = $503;
     STACKTOP = sp;return (+$$0);
    }
    $504 = ($505|0)==($506|0);
    $507 = ($508|0)==($509|0);
    $510 = $504 & $507;
    $511 = ($509|0)<(0);
    $512 = ($506>>>0)<(10);
    $513 = ($509|0)==(0);
    $514 = $513 & $512;
    $515 = $511 | $514;
    $or$cond3$i16 = $510 & $515;
    if ($or$cond3$i16) {
     $516 = ($bits$0$ph>>>0)>(30);
     $517 = $500 >>> $bits$0$ph;
     $518 = ($517|0)==(0);
     $or$cond17$i = $516 | $518;
     if ($or$cond17$i) {
      $519 = (+($sign$0|0));
      $520 = (+($500>>>0));
      $521 = $519 * $520;
      $$0 = $521;
      STACKTOP = sp;return (+$$0);
     }
    }
    $522 = (($emin$0$ph|0) / -2)&-1;
    $523 = ($522|0)<(0);
    $524 = $523 << 31 >> 31;
    $525 = ($508|0)>($524|0);
    $526 = ($505>>>0)>($522>>>0);
    $527 = ($508|0)==($524|0);
    $528 = $527 & $526;
    $529 = $525 | $528;
    if ($529) {
     $530 = (___errno_location()|0);
     HEAP32[$530>>2] = 34;
     $531 = (+($sign$0|0));
     $532 = $531 * 1.7976931348623157E+308;
     $533 = $532 * 1.7976931348623157E+308;
     $$0 = $533;
     STACKTOP = sp;return (+$$0);
    }
    $534 = (($emin$0$ph) + -106)|0;
    $535 = ($534|0)<(0);
    $536 = $535 << 31 >> 31;
    $537 = ($508|0)<($536|0);
    $538 = ($505>>>0)<($534>>>0);
    $539 = ($508|0)==($536|0);
    $540 = $539 & $538;
    $541 = $537 | $540;
    if ($541) {
     $542 = (___errno_location()|0);
     HEAP32[$542>>2] = 34;
     $543 = (+($sign$0|0));
     $544 = $543 * 2.2250738585072014E-308;
     $545 = $544 * 2.2250738585072014E-308;
     $$0 = $545;
     STACKTOP = sp;return (+$$0);
    }
    $546 = ($j$0108$i|0)==(0);
    if ($546) {
     $k$3$i = $k$0104$i;
    } else {
     $547 = ($j$0108$i|0)<(9);
     if ($547) {
      $548 = (($x$i) + ($k$0104$i<<2)|0);
      $$promoted$i = HEAP32[$548>>2]|0;
      $550 = $$promoted$i;$j$388$i = $j$0108$i;
      while(1) {
       $549 = ($550*10)|0;
       $551 = (($j$388$i) + 1)|0;
       $exitcond$i = ($551|0)==(9);
       if ($exitcond$i) {
        break;
       } else {
        $550 = $549;$j$388$i = $551;
       }
      }
      HEAP32[$548>>2] = $549;
     }
     $552 = (($k$0104$i) + 1)|0;
     $k$3$i = $552;
    }
    $553 = ($lnz$098$i|0)<(9);
    if ($553) {
     $554 = ($lnz$098$i|0)<=($505|0);
     $555 = ($505|0)<(18);
     $or$cond5$i17 = $554 & $555;
     if ($or$cond5$i17) {
      $556 = ($505|0)==(9);
      if ($556) {
       $557 = (+($sign$0|0));
       $558 = HEAP32[$x$i>>2]|0;
       $559 = (+($558>>>0));
       $560 = $557 * $559;
       $$0 = $560;
       STACKTOP = sp;return (+$$0);
      }
      $561 = ($505|0)<(9);
      if ($561) {
       $562 = (+($sign$0|0));
       $563 = HEAP32[$x$i>>2]|0;
       $564 = (+($563>>>0));
       $565 = $562 * $564;
       $566 = (8 - ($505))|0;
       $567 = (53544 + ($566<<2)|0);
       $568 = HEAP32[$567>>2]|0;
       $569 = (+($568|0));
       $570 = $565 / $569;
       $$0 = $570;
       STACKTOP = sp;return (+$$0);
      }
      $571 = Math_imul($505, -3)|0;
      $$neg37$i = (($bits$0$ph) + 27)|0;
      $572 = (($$neg37$i) + ($571))|0;
      $573 = ($572|0)>(30);
      $$pre$i18 = HEAP32[$x$i>>2]|0;
      $574 = $$pre$i18 >>> $572;
      $575 = ($574|0)==(0);
      $or$cond187$i = $573 | $575;
      if ($or$cond187$i) {
       $576 = (+($sign$0|0));
       $577 = (+($$pre$i18>>>0));
       $578 = $576 * $577;
       $579 = (($505) + -10)|0;
       $580 = (53544 + ($579<<2)|0);
       $581 = HEAP32[$580>>2]|0;
       $582 = (+($581|0));
       $583 = $578 * $582;
       $$0 = $583;
       STACKTOP = sp;return (+$$0);
      }
     }
    }
    $584 = (($505|0) % 9)&-1;
    $585 = ($584|0)==(0);
    if ($585) {
     $a$2$ph57$i = 0;$e2$0$ph$i = 0;$rp$2$ph55$i = $505;$z$1$ph56$i = $k$3$i;
    } else {
     $586 = ($505|0)>(-1);
     $587 = (($584) + 9)|0;
     $588 = $586 ? $584 : $587;
     $589 = (8 - ($588))|0;
     $590 = (53544 + ($589<<2)|0);
     $591 = HEAP32[$590>>2]|0;
     $592 = ($k$3$i|0)==(0);
     if ($592) {
      $a$0$lcssa182$i = 0;$rp$0$lcssa183$i = $505;$z$0$i = 0;
     } else {
      $593 = (1000000000 / ($591|0))&-1;
      $a$078$i = 0;$carry$080$i = 0;$k$479$i = 0;$rp$077$i = $505;
      while(1) {
       $594 = (($x$i) + ($k$479$i<<2)|0);
       $595 = HEAP32[$594>>2]|0;
       $596 = (($595>>>0) % ($591>>>0))&-1;
       $597 = (($595>>>0) / ($591>>>0))&-1;
       $598 = (($597) + ($carry$080$i))|0;
       HEAP32[$594>>2] = $598;
       $599 = Math_imul($596, $593)|0;
       $600 = ($k$479$i|0)==($a$078$i|0);
       $601 = ($598|0)==(0);
       $or$cond18$i = $600 & $601;
       $602 = (($k$479$i) + 1)|0;
       if ($or$cond18$i) {
        $603 = $602 & 127;
        $604 = (($rp$077$i) + -9)|0;
        $a$1$i = $603;$rp$1$i19 = $604;
       } else {
        $a$1$i = $a$078$i;$rp$1$i19 = $rp$077$i;
       }
       $605 = ($602|0)==($k$3$i|0);
       if ($605) {
        break;
       } else {
        $a$078$i = $a$1$i;$carry$080$i = $599;$k$479$i = $602;$rp$077$i = $rp$1$i19;
       }
      }
      $606 = ($599|0)==(0);
      if ($606) {
       $a$0$lcssa182$i = $a$1$i;$rp$0$lcssa183$i = $rp$1$i19;$z$0$i = $k$3$i;
      } else {
       $607 = (($k$3$i) + 1)|0;
       $608 = (($x$i) + ($k$3$i<<2)|0);
       HEAP32[$608>>2] = $599;
       $a$0$lcssa182$i = $a$1$i;$rp$0$lcssa183$i = $rp$1$i19;$z$0$i = $607;
      }
     }
     $609 = (9 - ($588))|0;
     $610 = (($609) + ($rp$0$lcssa183$i))|0;
     $a$2$ph57$i = $a$0$lcssa182$i;$e2$0$ph$i = 0;$rp$2$ph55$i = $610;$z$1$ph56$i = $z$0$i;
    }
    L289: while(1) {
     $611 = ($rp$2$ph55$i|0)<(18);
     $612 = (($x$i) + ($a$2$ph57$i<<2)|0);
     if ($611) {
      $e2$0$us$i = $e2$0$ph$i;$z$1$us$i = $z$1$ph56$i;
      while(1) {
       $614 = (($z$1$us$i) + 127)|0;
       $carry1$0$us$i = 0;$k$5$in$us$i = $614;$z$2$us$i = $z$1$us$i;
       while(1) {
        $k$5$us$i = $k$5$in$us$i & 127;
        $615 = (($x$i) + ($k$5$us$i<<2)|0);
        $616 = HEAP32[$615>>2]|0;
        $617 = (_bitshift64Shl(($616|0),0,29)|0);
        $618 = tempRet0;
        $619 = (_i64Add(($617|0),($618|0),($carry1$0$us$i|0),0)|0);
        $620 = tempRet0;
        $621 = ($620>>>0)>(0);
        $622 = ($619>>>0)>(1000000000);
        $623 = ($620|0)==(0);
        $624 = $623 & $622;
        $625 = $621 | $624;
        if ($625) {
         $626 = (___udivdi3(($619|0),($620|0),1000000000,0)|0);
         $627 = tempRet0;
         $628 = (___uremdi3(($619|0),($620|0),1000000000,0)|0);
         $629 = tempRet0;
         $$sink$off0$us$i = $628;$carry1$1$us$i = $626;
        } else {
         $$sink$off0$us$i = $619;$carry1$1$us$i = 0;
        }
        HEAP32[$615>>2] = $$sink$off0$us$i;
        $630 = (($z$2$us$i) + 127)|0;
        $631 = $630 & 127;
        $632 = ($k$5$us$i|0)!=($631|0);
        $633 = ($k$5$us$i|0)==($a$2$ph57$i|0);
        $or$cond19$us$i = $632 | $633;
        if ($or$cond19$us$i) {
         $z$3$us$i = $z$2$us$i;
        } else {
         $634 = ($$sink$off0$us$i|0)==(0);
         $k$5$z$2$us$i = $634 ? $k$5$us$i : $z$2$us$i;
         $z$3$us$i = $k$5$z$2$us$i;
        }
        $635 = (($k$5$us$i) + -1)|0;
        if ($633) {
         break;
        } else {
         $carry1$0$us$i = $carry1$1$us$i;$k$5$in$us$i = $635;$z$2$us$i = $z$3$us$i;
        }
       }
       $636 = (($e2$0$us$i) + -29)|0;
       $637 = ($carry1$1$us$i|0)==(0);
       if ($637) {
        $e2$0$us$i = $636;$z$1$us$i = $z$3$us$i;
       } else {
        $$lcssa60$i = $636;$carry1$1$lcssa$lcssa$i = $carry1$1$us$i;$z$3$lcssa$lcssa$i = $z$3$us$i;
        break;
       }
      }
     } else {
      $613 = ($rp$2$ph55$i|0)==(18);
      if ($613) {
       $e2$0$us61$i = $e2$0$ph$i;$z$1$us62$i = $z$1$ph56$i;
      } else {
       $a$3$ph$i = $a$2$ph57$i;$e2$1$ph$i = $e2$0$ph$i;$rp$3$ph50$i = $rp$2$ph55$i;$z$5$ph$i = $z$1$ph56$i;
       break;
      }
      while(1) {
       $638 = HEAP32[$612>>2]|0;
       $639 = ($638>>>0)<(9007199);
       if (!($639)) {
        $a$3$ph$i = $a$2$ph57$i;$e2$1$ph$i = $e2$0$us61$i;$rp$3$ph50$i = 18;$z$5$ph$i = $z$1$us62$i;
        break L289;
       }
       $640 = (($z$1$us62$i) + 127)|0;
       $carry1$0$us66$i = 0;$k$5$in$us65$i = $640;$z$2$us64$i = $z$1$us62$i;
       while(1) {
        $k$5$us67$i = $k$5$in$us65$i & 127;
        $641 = (($x$i) + ($k$5$us67$i<<2)|0);
        $642 = HEAP32[$641>>2]|0;
        $643 = (_bitshift64Shl(($642|0),0,29)|0);
        $644 = tempRet0;
        $645 = (_i64Add(($643|0),($644|0),($carry1$0$us66$i|0),0)|0);
        $646 = tempRet0;
        $647 = ($646>>>0)>(0);
        $648 = ($645>>>0)>(1000000000);
        $649 = ($646|0)==(0);
        $650 = $649 & $648;
        $651 = $647 | $650;
        if ($651) {
         $652 = (___udivdi3(($645|0),($646|0),1000000000,0)|0);
         $653 = tempRet0;
         $654 = (___uremdi3(($645|0),($646|0),1000000000,0)|0);
         $655 = tempRet0;
         $$sink$off0$us70$i = $654;$carry1$1$us71$i = $652;
        } else {
         $$sink$off0$us70$i = $645;$carry1$1$us71$i = 0;
        }
        HEAP32[$641>>2] = $$sink$off0$us70$i;
        $656 = (($z$2$us64$i) + 127)|0;
        $657 = $656 & 127;
        $658 = ($k$5$us67$i|0)!=($657|0);
        $659 = ($k$5$us67$i|0)==($a$2$ph57$i|0);
        $or$cond19$us72$i = $658 | $659;
        if ($or$cond19$us72$i) {
         $z$3$us74$i = $z$2$us64$i;
        } else {
         $660 = ($$sink$off0$us70$i|0)==(0);
         $k$5$z$2$us73$i = $660 ? $k$5$us67$i : $z$2$us64$i;
         $z$3$us74$i = $k$5$z$2$us73$i;
        }
        $661 = (($k$5$us67$i) + -1)|0;
        if ($659) {
         break;
        } else {
         $carry1$0$us66$i = $carry1$1$us71$i;$k$5$in$us65$i = $661;$z$2$us64$i = $z$3$us74$i;
        }
       }
       $662 = (($e2$0$us61$i) + -29)|0;
       $663 = ($carry1$1$us71$i|0)==(0);
       if ($663) {
        $e2$0$us61$i = $662;$z$1$us62$i = $z$3$us74$i;
       } else {
        $$lcssa60$i = $662;$carry1$1$lcssa$lcssa$i = $carry1$1$us71$i;$z$3$lcssa$lcssa$i = $z$3$us74$i;
        break;
       }
      }
     }
     $664 = (($rp$2$ph55$i) + 9)|0;
     $665 = (($a$2$ph57$i) + 127)|0;
     $666 = $665 & 127;
     $667 = ($666|0)==($z$3$lcssa$lcssa$i|0);
     if ($667) {
      $668 = (($z$3$lcssa$lcssa$i) + 127)|0;
      $669 = $668 & 127;
      $670 = (($x$i) + ($669<<2)|0);
      $671 = HEAP32[$670>>2]|0;
      $672 = (($z$3$lcssa$lcssa$i) + 126)|0;
      $673 = $672 & 127;
      $674 = (($x$i) + ($673<<2)|0);
      $675 = HEAP32[$674>>2]|0;
      $676 = $675 | $671;
      HEAP32[$674>>2] = $676;
      $z$4$i = $669;
     } else {
      $z$4$i = $z$3$lcssa$lcssa$i;
     }
     $677 = (($x$i) + ($666<<2)|0);
     HEAP32[$677>>2] = $carry1$1$lcssa$lcssa$i;
     $a$2$ph57$i = $666;$e2$0$ph$i = $$lcssa60$i;$rp$2$ph55$i = $664;$z$1$ph56$i = $z$4$i;
    }
    L320: while(1) {
     $714 = (($z$5$ph$i) + 1)|0;
     $712 = $714 & 127;
     $715 = (($z$5$ph$i) + 127)|0;
     $716 = $715 & 127;
     $717 = (($x$i) + ($716<<2)|0);
     $a$3$i$ph = $a$3$ph$i;$e2$1$i$ph = $e2$1$ph$i;$rp$3$i$ph = $rp$3$ph50$i;
     while(1) {
      $690 = ($rp$3$i$ph|0)==(18);
      $718 = ($rp$3$i$ph|0)>(27);
      $$20$i = $718 ? 9 : 1;
      $a$3$i = $a$3$i$ph;$e2$1$i = $e2$1$i$ph;
      while(1) {
       $i$042$i = 0;
       while(1) {
        $680 = (($i$042$i) + ($a$3$i))|0;
        $681 = $680 & 127;
        $682 = ($681|0)==($z$5$ph$i|0);
        if ($682) {
         $i$1$i = 2;
         break;
        }
        $683 = (($x$i) + ($681<<2)|0);
        $684 = HEAP32[$683>>2]|0;
        $685 = (53536 + ($i$042$i<<2)|0);
        $686 = HEAP32[$685>>2]|0;
        $687 = ($684>>>0)<($686>>>0);
        if ($687) {
         $i$1$i = 2;
         break;
        }
        $688 = ($684>>>0)>($686>>>0);
        $679 = (($i$042$i) + 1)|0;
        if ($688) {
         $i$1$i = $i$042$i;
         break;
        }
        $678 = ($679|0)<(2);
        if ($678) {
         $i$042$i = $679;
        } else {
         $i$1$i = $679;
         break;
        }
       }
       $689 = ($i$1$i|0)==(2);
       $or$cond8$i20 = $689 & $690;
       if ($or$cond8$i20) {
        break L320;
       }
       $693 = (($$20$i) + ($e2$1$i))|0;
       $694 = ($a$3$i|0)==($z$5$ph$i|0);
       if ($694) {
        $a$3$i = $z$5$ph$i;$e2$1$i = $693;
       } else {
        break;
       }
      }
      $695 = 1 << $$20$i;
      $696 = (($695) + -1)|0;
      $697 = 1000000000 >>> $$20$i;
      $a$444$i = $a$3$i;$carry3$047$i = 0;$k$645$i = $a$3$i;$rp$443$i = $rp$3$i$ph;
      while(1) {
       $698 = (($x$i) + ($k$645$i<<2)|0);
       $699 = HEAP32[$698>>2]|0;
       $700 = $699 & $696;
       $701 = $699 >>> $$20$i;
       $702 = (($701) + ($carry3$047$i))|0;
       HEAP32[$698>>2] = $702;
       $703 = Math_imul($700, $697)|0;
       $704 = ($k$645$i|0)==($a$444$i|0);
       $705 = ($702|0)==(0);
       $or$cond21$i = $704 & $705;
       $706 = (($k$645$i) + 1)|0;
       $707 = $706 & 127;
       $708 = (($rp$443$i) + -9)|0;
       $rp$5$i = $or$cond21$i ? $708 : $rp$443$i;
       $a$5$i = $or$cond21$i ? $707 : $a$444$i;
       $709 = ($707|0)==($z$5$ph$i|0);
       if ($709) {
        break;
       } else {
        $a$444$i = $a$5$i;$carry3$047$i = $703;$k$645$i = $707;$rp$443$i = $rp$5$i;
       }
      }
      $710 = ($703|0)==(0);
      if ($710) {
       $a$3$i$ph = $a$5$i;$e2$1$i$ph = $693;$rp$3$i$ph = $rp$5$i;
       continue;
      }
      $711 = ($712|0)==($a$5$i|0);
      if (!($711)) {
       break;
      }
      $719 = HEAP32[$717>>2]|0;
      $720 = $719 | 1;
      HEAP32[$717>>2] = $720;
      $a$3$i$ph = $a$5$i;$e2$1$i$ph = $693;$rp$3$i$ph = $rp$5$i;
     }
     $713 = (($x$i) + ($z$5$ph$i<<2)|0);
     HEAP32[$713>>2] = $703;
     $a$3$ph$i = $a$5$i;$e2$1$ph$i = $693;$rp$3$ph50$i = $rp$5$i;$z$5$ph$i = $712;
    }
    $691 = $a$3$i & 127;
    $692 = ($691|0)==($z$5$ph$i|0);
    if ($692) {
     $721 = (($712) + -1)|0;
     $722 = (($x$i) + ($721<<2)|0);
     HEAP32[$722>>2] = 0;
     $z$7$i = $712;
    } else {
     $z$7$i = $z$5$ph$i;
    }
    $723 = (($x$i) + ($691<<2)|0);
    $724 = HEAP32[$723>>2]|0;
    $725 = (+($724>>>0));
    $726 = (($a$3$i) + 1)|0;
    $727 = $726 & 127;
    $728 = ($727|0)==($z$7$i|0);
    if ($728) {
     $840 = (($z$7$i) + 1)|0;
     $841 = $840 & 127;
     $842 = (($841) + -1)|0;
     $843 = (($x$i) + ($842<<2)|0);
     HEAP32[$843>>2] = 0;
     $z$7$1$i = $841;
    } else {
     $z$7$1$i = $z$7$i;
    }
    $844 = $725 * 1.0E+9;
    $845 = (($x$i) + ($727<<2)|0);
    $846 = HEAP32[$845>>2]|0;
    $847 = (+($846>>>0));
    $848 = $844 + $847;
    $787 = (+($sign$0|0));
    $750 = $787 * $848;
    $807 = (($e2$1$i) + 53)|0;
    $730 = (($807) - ($emin$0$ph))|0;
    $849 = ($730|0)<($bits$0$ph|0);
    if ($849) {
     $729 = ($730|0)<(0);
     if ($729) {
      $$01231$i = 0;$denormal$030$i = 1;
      label = 258;
     } else {
      $$012$i = $730;$denormal$0$i = 1;
      label = 257;
     }
    } else {
     $$012$i = $bits$0$ph;$denormal$0$i = 0;
     label = 257;
    }
    if ((label|0) == 257) {
     $731 = ($$012$i|0)<(53);
     if ($731) {
      $$01231$i = $$012$i;$denormal$030$i = $denormal$0$i;
      label = 258;
     } else {
      $$01232$i = $$012$i;$bias$0$i25 = 0.0;$denormal$029$i = $denormal$0$i;$frac$0$i = 0.0;$y$1$i24 = $750;
     }
    }
    if ((label|0) == 258) {
     $732 = (105 - ($$01231$i))|0;
     $733 = ($732|0)>(1023);
     do {
      if ($733) {
       $734 = (($732) + -1023)|0;
       $735 = ($734|0)>(1023);
       if (!($735)) {
        $$0$i5 = $734;$y$0$i6 = 8.9884656743115795E+307;
        break;
       }
       $736 = (($732) + -2046)|0;
       $737 = ($736|0)>(1023);
       $$$i3 = $737 ? 1023 : $736;
       $$0$i5 = $$$i3;$y$0$i6 = inf;
      } else {
       $738 = ($732|0)<(-1022);
       if (!($738)) {
        $$0$i5 = $732;$y$0$i6 = 1.0;
        break;
       }
       $739 = (($732) + 1022)|0;
       $740 = ($739|0)<(-1022);
       if (!($740)) {
        $$0$i5 = $739;$y$0$i6 = 2.2250738585072014E-308;
        break;
       }
       $741 = (($732) + 2044)|0;
       $742 = ($741|0)<(-1022);
       $$1$i4 = $742 ? -1022 : $741;
       $$0$i5 = $$1$i4;$y$0$i6 = 0.0;
      }
     } while(0);
     $743 = (($$0$i5) + 1023)|0;
     $744 = (_bitshift64Shl(($743|0),0,52)|0);
     $745 = tempRet0;
     HEAP32[tempDoublePtr>>2] = $744;HEAP32[tempDoublePtr+4>>2] = $745;$746 = +HEAPF64[tempDoublePtr>>3];
     $747 = $y$0$i6 * $746;
     HEAPF64[tempDoublePtr>>3] = $747;$748 = HEAP32[tempDoublePtr>>2]|0;
     $749 = HEAP32[tempDoublePtr+4>>2]|0;
     HEAPF64[tempDoublePtr>>3] = $750;$751 = HEAP32[tempDoublePtr>>2]|0;
     $752 = HEAP32[tempDoublePtr+4>>2]|0;
     $753 = $749 & 2147483647;
     $754 = $752 & -2147483648;
     $755 = $754 | $753;
     HEAP32[tempDoublePtr>>2] = $748;HEAP32[tempDoublePtr+4>>2] = $755;$756 = +HEAPF64[tempDoublePtr>>3];
     $757 = (53 - ($$01231$i))|0;
     $758 = ($757|0)>(1023);
     do {
      if ($758) {
       $759 = (($757) + -1023)|0;
       $760 = ($759|0)>(1023);
       if (!($760)) {
        $$0$i = $759;$y$0$i2 = 8.9884656743115795E+307;
        break;
       }
       $761 = (($757) + -2046)|0;
       $762 = ($761|0)>(1023);
       $$$i1 = $762 ? 1023 : $761;
       $$0$i = $$$i1;$y$0$i2 = inf;
      } else {
       $763 = ($757|0)<(-1022);
       if (!($763)) {
        $$0$i = $757;$y$0$i2 = 1.0;
        break;
       }
       $764 = (($757) + 1022)|0;
       $765 = ($764|0)<(-1022);
       if (!($765)) {
        $$0$i = $764;$y$0$i2 = 2.2250738585072014E-308;
        break;
       }
       $766 = (($757) + 2044)|0;
       $767 = ($766|0)<(-1022);
       $$1$i = $767 ? -1022 : $766;
       $$0$i = $$1$i;$y$0$i2 = 0.0;
      }
     } while(0);
     $768 = (($$0$i) + 1023)|0;
     $769 = (_bitshift64Shl(($768|0),0,52)|0);
     $770 = tempRet0;
     HEAP32[tempDoublePtr>>2] = $769;HEAP32[tempDoublePtr+4>>2] = $770;$771 = +HEAPF64[tempDoublePtr>>3];
     $772 = $y$0$i2 * $771;
     $773 = (+_fmodl($750,$772));
     $774 = $750 - $773;
     $775 = $756 + $774;
     $$01232$i = $$01231$i;$bias$0$i25 = $756;$denormal$029$i = $denormal$030$i;$frac$0$i = $773;$y$1$i24 = $775;
    }
    $776 = (($a$3$i) + 2)|0;
    $777 = $776 & 127;
    $778 = ($777|0)==($z$7$1$i|0);
    do {
     if ($778) {
      $frac$2$i = $frac$0$i;
     } else {
      $779 = (($x$i) + ($777<<2)|0);
      $780 = HEAP32[$779>>2]|0;
      $781 = ($780>>>0)<(500000000);
      do {
       if ($781) {
        $782 = ($780|0)==(0);
        if ($782) {
         $783 = (($a$3$i) + 3)|0;
         $784 = $783 & 127;
         $785 = ($784|0)==($z$7$1$i|0);
         if ($785) {
          $frac$1$i = $frac$0$i;
          break;
         }
        }
        $786 = $787 * 0.25;
        $788 = $786 + $frac$0$i;
        $frac$1$i = $788;
       } else {
        $789 = ($780>>>0)>(500000000);
        if ($789) {
         $790 = $787 * 0.75;
         $791 = $790 + $frac$0$i;
         $frac$1$i = $791;
         break;
        }
        $792 = (($a$3$i) + 3)|0;
        $793 = $792 & 127;
        $794 = ($793|0)==($z$7$1$i|0);
        if ($794) {
         $795 = $787 * 0.5;
         $796 = $795 + $frac$0$i;
         $frac$1$i = $796;
         break;
        } else {
         $797 = $787 * 0.75;
         $798 = $797 + $frac$0$i;
         $frac$1$i = $798;
         break;
        }
       }
      } while(0);
      $799 = (53 - ($$01232$i))|0;
      $800 = ($799|0)>(1);
      if (!($800)) {
       $frac$2$i = $frac$1$i;
       break;
      }
      $801 = (+_fmodl($frac$1$i,1.0));
      $802 = $801 != 0.0;
      if ($802) {
       $frac$2$i = $frac$1$i;
       break;
      }
      $803 = $frac$1$i + 1.0;
      $frac$2$i = $803;
     }
    } while(0);
    $804 = $y$1$i24 + $frac$2$i;
    $805 = $804 - $bias$0$i25;
    $806 = $807 & 2147483647;
    $808 = (-2 - ($sum$i))|0;
    $809 = ($806|0)>($808|0);
    do {
     if ($809) {
      $810 = (+Math_abs((+$805)));
      $811 = !($810 >= 9007199254740992.0);
      if ($811) {
       $denormal$2$i = $denormal$029$i;$e2$2$i = $e2$1$i;$y$2$i26 = $805;
      } else {
       $812 = ($denormal$029$i|0)!=(0);
       $813 = ($$01232$i|0)==($730|0);
       $or$cond22$i = $812 & $813;
       $denormal$1$i = $or$cond22$i ? 0 : $denormal$029$i;
       $814 = $805 * 0.5;
       $815 = (($e2$1$i) + 1)|0;
       $denormal$2$i = $denormal$1$i;$e2$2$i = $815;$y$2$i26 = $814;
      }
      $816 = (($e2$2$i) + 50)|0;
      $817 = ($816|0)>($394|0);
      if (!($817)) {
       $818 = ($denormal$2$i|0)!=(0);
       $819 = $frac$2$i != 0.0;
       $or$cond10$i = $818 & $819;
       if (!($or$cond10$i)) {
        $e2$3$i = $e2$2$i;$y$3$i = $y$2$i26;
        break;
       }
      }
      $820 = (___errno_location()|0);
      HEAP32[$820>>2] = 34;
      $e2$3$i = $e2$2$i;$y$3$i = $y$2$i26;
     } else {
      $e2$3$i = $e2$1$i;$y$3$i = $805;
     }
    } while(0);
    $821 = ($e2$3$i|0)>(1023);
    do {
     if ($821) {
      $822 = $y$3$i * 8.9884656743115795E+307;
      $823 = (($e2$3$i) + -1023)|0;
      $824 = ($823|0)>(1023);
      if (!($824)) {
       $$0$i$i = $823;$y$0$i$i = $822;
       break;
      }
      $825 = $822 * 8.9884656743115795E+307;
      $826 = (($e2$3$i) + -2046)|0;
      $827 = ($826|0)>(1023);
      $$$i$i = $827 ? 1023 : $826;
      $$0$i$i = $$$i$i;$y$0$i$i = $825;
     } else {
      $828 = ($e2$3$i|0)<(-1022);
      if (!($828)) {
       $$0$i$i = $e2$3$i;$y$0$i$i = $y$3$i;
       break;
      }
      $829 = $y$3$i * 2.2250738585072014E-308;
      $830 = (($e2$3$i) + 1022)|0;
      $831 = ($830|0)<(-1022);
      if (!($831)) {
       $$0$i$i = $830;$y$0$i$i = $829;
       break;
      }
      $832 = $829 * 2.2250738585072014E-308;
      $833 = (($e2$3$i) + 2044)|0;
      $834 = ($833|0)<(-1022);
      $$1$i$i = $834 ? -1022 : $833;
      $$0$i$i = $$1$i$i;$y$0$i$i = $832;
     }
    } while(0);
    $835 = (($$0$i$i) + 1023)|0;
    $836 = (_bitshift64Shl(($835|0),0,52)|0);
    $837 = tempRet0;
    HEAP32[tempDoublePtr>>2] = $836;HEAP32[tempDoublePtr+4>>2] = $837;$838 = +HEAPF64[tempDoublePtr>>3];
    $839 = $y$0$i$i * $838;
    $$0 = $839;
    STACKTOP = sp;return (+$$0);
   } else if ((($i$3|0) == 3)) {
    $65 = HEAP32[$0>>2]|0;
    $66 = HEAP32[$1>>2]|0;
    $67 = ($65>>>0)<($66>>>0);
    if ($67) {
     $68 = (($65) + 1|0);
     HEAP32[$0>>2] = $68;
     $69 = HEAP8[$65>>0]|0;
     $70 = $69&255;
     $73 = $70;
    } else {
     $71 = (___shgetc($f)|0);
     $73 = $71;
    }
    $72 = ($73|0)==(40);
    if ($72) {
     $i$4 = 1;
    } else {
     $74 = HEAP32[$1>>2]|0;
     $75 = ($74|0)==(0|0);
     if ($75) {
      $$0 = nan;
      STACKTOP = sp;return (+$$0);
     }
     $76 = HEAP32[$0>>2]|0;
     $77 = (($76) + -1|0);
     HEAP32[$0>>2] = $77;
     $$0 = nan;
     STACKTOP = sp;return (+$$0);
    }
    while(1) {
     $78 = HEAP32[$0>>2]|0;
     $79 = HEAP32[$1>>2]|0;
     $80 = ($78>>>0)<($79>>>0);
     if ($80) {
      $81 = (($78) + 1|0);
      HEAP32[$0>>2] = $81;
      $82 = HEAP8[$78>>0]|0;
      $83 = $82&255;
      $86 = $83;
     } else {
      $84 = (___shgetc($f)|0);
      $86 = $84;
     }
     $85 = (($86) + -48)|0;
     $87 = ($85>>>0)<(10);
     $88 = (($86) + -65)|0;
     $89 = ($88>>>0)<(26);
     $or$cond = $87 | $89;
     if (!($or$cond)) {
      $90 = (($86) + -97)|0;
      $91 = ($90>>>0)<(26);
      $92 = ($86|0)==(95);
      $or$cond7 = $91 | $92;
      if (!($or$cond7)) {
       break;
      }
     }
     $112 = (($i$4) + 1)|0;
     $i$4 = $112;
    }
    $93 = ($86|0)==(41);
    if ($93) {
     $$0 = nan;
     STACKTOP = sp;return (+$$0);
    }
    $94 = HEAP32[$1>>2]|0;
    $95 = ($94|0)==(0|0);
    if (!($95)) {
     $96 = HEAP32[$0>>2]|0;
     $97 = (($96) + -1|0);
     HEAP32[$0>>2] = $97;
    }
    if (!($37)) {
     $99 = (___errno_location()|0);
     HEAP32[$99>>2] = 22;
     $100 = (($f) + 104|0);
     HEAP32[$100>>2] = 0;
     $101 = (($f) + 8|0);
     $102 = HEAP32[$101>>2]|0;
     $103 = HEAP32[$0>>2]|0;
     $104 = $102;
     $105 = $103;
     $106 = (($104) - ($105))|0;
     $107 = (($f) + 108|0);
     HEAP32[$107>>2] = $106;
     HEAP32[$1>>2] = $102;
     $$0 = 0.0;
     STACKTOP = sp;return (+$$0);
    }
    $98 = ($i$4|0)==(0);
    $brmerge108 = $98 | $95;
    if ($brmerge108) {
     $$0 = nan;
     STACKTOP = sp;return (+$$0);
    }
    $$promoted23 = HEAP32[$0>>2]|0;
    $$in = $i$4;$110 = $$promoted23;
    while(1) {
     $108 = (($$in) + -1)|0;
     $109 = (($110) + -1|0);
     $111 = ($108|0)==(0);
     if ($111) {
      break;
     } else {
      $$in = $108;$110 = $109;
     }
    }
    HEAP32[$0>>2] = $109;
    $$0 = nan;
    STACKTOP = sp;return (+$$0);
   } else {
    $113 = HEAP32[$1>>2]|0;
    $114 = ($113|0)==(0|0);
    $$pre = HEAP32[$0>>2]|0;
    if ($114) {
     $122 = $$pre;
    } else {
     $115 = (($$pre) + -1|0);
     HEAP32[$0>>2] = $115;
     $122 = $115;
    }
    $116 = (___errno_location()|0);
    HEAP32[$116>>2] = 22;
    $117 = (($f) + 104|0);
    HEAP32[$117>>2] = 0;
    $118 = (($f) + 8|0);
    $119 = HEAP32[$118>>2]|0;
    $120 = $119;
    $121 = $122;
    $123 = (($120) - ($121))|0;
    $124 = (($f) + 108|0);
    HEAP32[$124>>2] = $123;
    HEAP32[$1>>2] = $119;
    $$0 = 0.0;
    STACKTOP = sp;return (+$$0);
   }
  }
 } while(0);
 if ((label|0) == 23) {
  $39 = HEAP32[$1>>2]|0;
  $40 = ($39|0)==(0|0);
  if (!($40)) {
   $41 = HEAP32[$0>>2]|0;
   $42 = (($41) + -1|0);
   HEAP32[$0>>2] = $42;
   $notlhs = ($pok|0)==(0);
   $notrhs = ($i$0$lcssa>>>0)<(4);
   $or$cond9$not = $notrhs | $notlhs;
   if (!($or$cond9$not)) {
    $44 = $42;$i$1 = $i$0$lcssa;
    while(1) {
     $43 = (($44) + -1|0);
     $45 = (($i$1) + -1)|0;
     $$old8 = ($45>>>0)>(3);
     if ($$old8) {
      $44 = $43;$i$1 = $45;
     } else {
      break;
     }
    }
    HEAP32[$0>>2] = $43;
   }
  }
 }
 $46 = (+($sign$0|0));
 $47 = $46 * inf;
 $48 = $47;
 $$0 = $48;
 STACKTOP = sp;return (+$$0);
}
function ___shgetc($f) {
 $f = $f|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert2$phi$trans$insert$phi$trans$insert = 0, $$pre = 0, $$pre3 = 0, $$pre3$pre = 0, $$pre3$pre$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 104|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  label = 3;
 } else {
  $3 = (($f) + 108|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)<($1|0);
  if ($5) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $6 = (___uflow($f)|0);
  $7 = ($6|0)<(0);
  if (!($7)) {
   $9 = HEAP32[$0>>2]|0;
   $10 = ($9|0)==(0);
   $$phi$trans$insert = (($f) + 8|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   $$phi$trans$insert2$phi$trans$insert$phi$trans$insert = (($f) + 4|0);
   $$pre3$pre$pre = HEAP32[$$phi$trans$insert2$phi$trans$insert$phi$trans$insert>>2]|0;
   if ($10) {
    $$pre3$pre = $$pre3$pre$pre;
    label = 8;
   } else {
    $11 = $$pre;
    $12 = $$pre3$pre$pre;
    $13 = (($11) - ($12))|0;
    $14 = (($f) + 108|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = (($9) - ($15))|0;
    $17 = (($16) + -1)|0;
    $18 = ($13|0)>($17|0);
    if ($18) {
     $19 = (($$pre3$pre$pre) + ($17)|0);
     $20 = (($f) + 100|0);
     HEAP32[$20>>2] = $19;
     $$pre3 = $$pre3$pre$pre;
    } else {
     $$pre3$pre = $$pre3$pre$pre;
     label = 8;
    }
   }
   if ((label|0) == 8) {
    $21 = (($f) + 100|0);
    HEAP32[$21>>2] = $$pre;
    $$pre3 = $$pre3$pre;
   }
   $22 = ($$pre|0)==(0|0);
   if (!($22)) {
    $23 = $$pre;
    $24 = $$pre3;
    $25 = (($f) + 108|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = (($23) + 1)|0;
    $28 = (($27) - ($24))|0;
    $29 = (($28) + ($26))|0;
    HEAP32[$25>>2] = $29;
   }
   $30 = (($$pre3) + -1|0);
   $31 = HEAP8[$30>>0]|0;
   $32 = $31&255;
   $33 = ($32|0)==($6|0);
   if ($33) {
    $$0 = $6;
    STACKTOP = sp;return ($$0|0);
   }
   $34 = $6&255;
   HEAP8[$30>>0] = $34;
   $$0 = $6;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $8 = (($f) + 100|0);
 HEAP32[$8>>2] = 0;
 $$0 = -1;
 STACKTOP = sp;return ($$0|0);
}
function _fmodl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0$i = 0.0, $$lcssa10$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0.0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0, $ex$0$lcssa$i = 0;
 var $ex$026$i = 0, $ex$1$i = 0, $ex$2$lcssa$i = 0, $ex$212$i = 0, $ex$3$lcssa$i = 0, $ex$33$i = 0, $ey$0$lcssa$i = 0, $ey$020$i = 0, $ey$1$ph$i = 0, $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $5 = tempRet0;
 $6 = $4 & 2047;
 $7 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $8 = tempRet0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = (_bitshift64Shl(($2|0),($3|0),1)|0);
 $12 = tempRet0;
 $13 = ($11|0)==(0);
 $14 = ($12|0)==(0);
 $15 = $13 & $14;
 if (!($15)) {
  $16 = $3 & 2147483647;
  $17 = ($16>>>0)>(2146435072);
  $18 = ($2>>>0)>(0);
  $19 = ($16|0)==(2146435072);
  $20 = $19 & $18;
  $21 = $17 | $20;
  $22 = ($6|0)==(2047);
  $or$cond$i = $21 | $22;
  if (!($or$cond$i)) {
   $25 = (_bitshift64Shl(($0|0),($1|0),1)|0);
   $26 = tempRet0;
   $27 = ($26>>>0)>($12>>>0);
   $28 = ($25>>>0)>($11>>>0);
   $29 = ($26|0)==($12|0);
   $30 = $29 & $28;
   $31 = $27 | $30;
   if (!($31)) {
    $32 = ($25|0)==($11|0);
    $33 = ($26|0)==($12|0);
    $34 = $32 & $33;
    if (!($34)) {
     $$0$i = $x;
     STACKTOP = sp;return (+$$0$i);
    }
    $35 = $x * 0.0;
    $$0$i = $35;
    STACKTOP = sp;return (+$$0$i);
   }
   $36 = ($6|0)==(0);
   if ($36) {
    $37 = (_bitshift64Shl(($0|0),($1|0),12)|0);
    $38 = tempRet0;
    $39 = ($38|0)>(-1);
    $40 = ($37>>>0)>(4294967295);
    $41 = ($38|0)==(-1);
    $42 = $41 & $40;
    $43 = $39 | $42;
    if ($43) {
     $45 = $37;$46 = $38;$ex$026$i = 0;
     while(1) {
      $44 = (($ex$026$i) + -1)|0;
      $47 = (_bitshift64Shl(($45|0),($46|0),1)|0);
      $48 = tempRet0;
      $49 = ($48|0)>(-1);
      $50 = ($47>>>0)>(4294967295);
      $51 = ($48|0)==(-1);
      $52 = $51 & $50;
      $53 = $49 | $52;
      if ($53) {
       $45 = $47;$46 = $48;$ex$026$i = $44;
      } else {
       $ex$0$lcssa$i = $44;
       break;
      }
     }
    } else {
     $ex$0$lcssa$i = 0;
    }
    $54 = (1 - ($ex$0$lcssa$i))|0;
    $55 = (_bitshift64Shl(($0|0),($1|0),($54|0))|0);
    $56 = tempRet0;
    $83 = $55;$84 = $56;$ex$1$i = $ex$0$lcssa$i;
   } else {
    $57 = $1 & 1048575;
    $58 = $57 | 1048576;
    $83 = $0;$84 = $58;$ex$1$i = $6;
   }
   $59 = ($9|0)==(0);
   if ($59) {
    $60 = (_bitshift64Shl(($2|0),($3|0),12)|0);
    $61 = tempRet0;
    $62 = ($61|0)>(-1);
    $63 = ($60>>>0)>(4294967295);
    $64 = ($61|0)==(-1);
    $65 = $64 & $63;
    $66 = $62 | $65;
    if ($66) {
     $68 = $60;$69 = $61;$ey$020$i = 0;
     while(1) {
      $67 = (($ey$020$i) + -1)|0;
      $70 = (_bitshift64Shl(($68|0),($69|0),1)|0);
      $71 = tempRet0;
      $72 = ($71|0)>(-1);
      $73 = ($70>>>0)>(4294967295);
      $74 = ($71|0)==(-1);
      $75 = $74 & $73;
      $76 = $72 | $75;
      if ($76) {
       $68 = $70;$69 = $71;$ey$020$i = $67;
      } else {
       $ey$0$lcssa$i = $67;
       break;
      }
     }
    } else {
     $ey$0$lcssa$i = 0;
    }
    $77 = (1 - ($ey$0$lcssa$i))|0;
    $78 = (_bitshift64Shl(($2|0),($3|0),($77|0))|0);
    $79 = tempRet0;
    $85 = $78;$86 = $79;$ey$1$ph$i = $ey$0$lcssa$i;
   } else {
    $80 = $3 & 1048575;
    $81 = $80 | 1048576;
    $85 = $2;$86 = $81;$ey$1$ph$i = $9;
   }
   $82 = ($ex$1$i|0)>($ey$1$ph$i|0);
   $87 = (_i64Subtract(($83|0),($84|0),($85|0),($86|0))|0);
   $88 = tempRet0;
   $89 = ($88|0)>(-1);
   $90 = ($87>>>0)>(4294967295);
   $91 = ($88|0)==(-1);
   $92 = $91 & $90;
   $93 = $89 | $92;
   L27: do {
    if ($82) {
     $152 = $93;$153 = $87;$154 = $88;$95 = $83;$97 = $84;$ex$212$i = $ex$1$i;
     while(1) {
      if ($152) {
       $94 = ($95|0)==($85|0);
       $96 = ($97|0)==($86|0);
       $98 = $94 & $96;
       if ($98) {
        break;
       } else {
        $100 = $153;$101 = $154;
       }
      } else {
       $100 = $95;$101 = $97;
      }
      $102 = (_bitshift64Shl(($100|0),($101|0),1)|0);
      $103 = tempRet0;
      $104 = (($ex$212$i) + -1)|0;
      $105 = ($104|0)>($ey$1$ph$i|0);
      $106 = (_i64Subtract(($102|0),($103|0),($85|0),($86|0))|0);
      $107 = tempRet0;
      $108 = ($107|0)>(-1);
      $109 = ($106>>>0)>(4294967295);
      $110 = ($107|0)==(-1);
      $111 = $110 & $109;
      $112 = $108 | $111;
      if ($105) {
       $152 = $112;$153 = $106;$154 = $107;$95 = $102;$97 = $103;$ex$212$i = $104;
      } else {
       $$lcssa10$i = $112;$114 = $102;$116 = $103;$155 = $106;$156 = $107;$ex$2$lcssa$i = $104;
       break L27;
      }
     }
     $99 = $x * 0.0;
     $$0$i = $99;
     STACKTOP = sp;return (+$$0$i);
    } else {
     $$lcssa10$i = $93;$114 = $83;$116 = $84;$155 = $87;$156 = $88;$ex$2$lcssa$i = $ex$1$i;
    }
   } while(0);
   if ($$lcssa10$i) {
    $113 = ($114|0)==($85|0);
    $115 = ($116|0)==($86|0);
    $117 = $113 & $115;
    if ($117) {
     $125 = $x * 0.0;
     $$0$i = $125;
     STACKTOP = sp;return (+$$0$i);
    } else {
     $119 = $156;$121 = $155;
    }
   } else {
    $119 = $116;$121 = $114;
   }
   $118 = ($119>>>0)<(1048576);
   $120 = ($121>>>0)<(0);
   $122 = ($119|0)==(1048576);
   $123 = $122 & $120;
   $124 = $118 | $123;
   if ($124) {
    $126 = $121;$127 = $119;$ex$33$i = $ex$2$lcssa$i;
    while(1) {
     $128 = (_bitshift64Shl(($126|0),($127|0),1)|0);
     $129 = tempRet0;
     $130 = (($ex$33$i) + -1)|0;
     $131 = ($129>>>0)<(1048576);
     $132 = ($128>>>0)<(0);
     $133 = ($129|0)==(1048576);
     $134 = $133 & $132;
     $135 = $131 | $134;
     if ($135) {
      $126 = $128;$127 = $129;$ex$33$i = $130;
     } else {
      $137 = $128;$138 = $129;$ex$3$lcssa$i = $130;
      break;
     }
    }
   } else {
    $137 = $121;$138 = $119;$ex$3$lcssa$i = $ex$2$lcssa$i;
   }
   $136 = ($ex$3$lcssa$i|0)>(0);
   if ($136) {
    $139 = (_i64Add(($137|0),($138|0),0,-1048576)|0);
    $140 = tempRet0;
    $141 = (_bitshift64Shl(($ex$3$lcssa$i|0),0,52)|0);
    $142 = tempRet0;
    $143 = $139 | $141;
    $144 = $140 | $142;
    $149 = $144;$150 = $143;
   } else {
    $145 = (1 - ($ex$3$lcssa$i))|0;
    $146 = (_bitshift64Lshr(($137|0),($138|0),($145|0))|0);
    $147 = tempRet0;
    $149 = $147;$150 = $146;
   }
   $148 = $149 | $10;
   HEAP32[tempDoublePtr>>2] = $150;HEAP32[tempDoublePtr+4>>2] = $148;$151 = +HEAPF64[tempDoublePtr>>3];
   $$0$i = $151;
   STACKTOP = sp;return (+$$0$i);
  }
 }
 $23 = $x * $y;
 $24 = $23 / $23;
 $$0$i = $24;
 STACKTOP = sp;return (+$$0$i);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 if ((($4|0) == 2047)) {
  $$0 = $x;
  STACKTOP = sp;return (+$$0);
 } else if ((($4|0) == 0)) {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  STACKTOP = sp;return (+$$0);
 } else {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
  STACKTOP = sp;return (+$$0);
 }
 return +(0.0);
}
function _wcrtomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $1 = ($wc>>>0)<(128);
 if ($1) {
  $2 = $wc&255;
  HEAP8[$s>>0] = $2;
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = ($wc>>>0)<(2048);
 if ($3) {
  $4 = $wc >>> 6;
  $5 = $4 | 192;
  $6 = $5&255;
  $7 = (($s) + 1|0);
  HEAP8[$s>>0] = $6;
  $8 = $wc & 63;
  $9 = $8 | 128;
  $10 = $9&255;
  HEAP8[$7>>0] = $10;
  $$0 = 2;
  STACKTOP = sp;return ($$0|0);
 }
 $11 = ($wc>>>0)<(55296);
 $12 = $wc & -8192;
 $13 = ($12|0)==(57344);
 $or$cond = $11 | $13;
 if ($or$cond) {
  $14 = $wc >>> 12;
  $15 = $14 | 224;
  $16 = $15&255;
  $17 = (($s) + 1|0);
  HEAP8[$s>>0] = $16;
  $18 = $wc >>> 6;
  $19 = $18 & 63;
  $20 = $19 | 128;
  $21 = $20&255;
  $22 = (($s) + 2|0);
  HEAP8[$17>>0] = $21;
  $23 = $wc & 63;
  $24 = $23 | 128;
  $25 = $24&255;
  HEAP8[$22>>0] = $25;
  $$0 = 3;
  STACKTOP = sp;return ($$0|0);
 }
 $26 = (($wc) + -65536)|0;
 $27 = ($26>>>0)<(1048576);
 if ($27) {
  $28 = $wc >>> 18;
  $29 = $28 | 240;
  $30 = $29&255;
  $31 = (($s) + 1|0);
  HEAP8[$s>>0] = $30;
  $32 = $wc >>> 12;
  $33 = $32 & 63;
  $34 = $33 | 128;
  $35 = $34&255;
  $36 = (($s) + 2|0);
  HEAP8[$31>>0] = $35;
  $37 = $wc >>> 6;
  $38 = $37 & 63;
  $39 = $38 | 128;
  $40 = $39&255;
  $41 = (($s) + 3|0);
  HEAP8[$36>>0] = $40;
  $42 = $wc & 63;
  $43 = $42 | 128;
  $44 = $43&255;
  HEAP8[$41>>0] = $44;
  $$0 = 4;
  STACKTOP = sp;return ($$0|0);
 } else {
  $45 = (___errno_location()|0);
  HEAP32[$45>>2] = 84;
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function ___uflow($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $c = sp;
 $0 = (($f) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   $3 = (($f) + 74|0);
   $4 = HEAP8[$3>>0]|0;
   $5 = $4 << 24 >> 24;
   $6 = (($5) + 255)|0;
   $7 = $6 | $5;
   $8 = $7&255;
   HEAP8[$3>>0] = $8;
   $9 = (($f) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($f) + 44|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($10>>>0)>($12>>>0);
   if ($13) {
    $14 = (($f) + 36|0);
    $15 = HEAP32[$14>>2]|0;
    (FUNCTION_TABLE_iiii[$15 & 31]($f,0,0)|0);
   }
   $16 = (($f) + 16|0);
   HEAP32[$16>>2] = 0;
   $17 = (($f) + 28|0);
   HEAP32[$17>>2] = 0;
   HEAP32[$9>>2] = 0;
   $18 = HEAP32[$f>>2]|0;
   $19 = $18 & 20;
   $20 = ($19|0)==(0);
   if ($20) {
    $24 = HEAP32[$11>>2]|0;
    HEAP32[$0>>2] = $24;
    $25 = (($f) + 4|0);
    HEAP32[$25>>2] = $24;
    break;
   }
   $21 = $18 & 4;
   $22 = ($21|0)==(0);
   if ($22) {
    $$0 = -1;
    STACKTOP = sp;return ($$0|0);
   }
   $23 = $18 | 32;
   HEAP32[$f>>2] = $23;
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 $26 = (($f) + 32|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = (FUNCTION_TABLE_iiii[$27 & 31]($f,$c,1)|0);
 $29 = ($28|0)==(1);
 if (!($29)) {
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 $30 = HEAP8[$c>>0]|0;
 $31 = $30&255;
 $$0 = $31;
 STACKTOP = sp;return ($$0|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$01 = 0, $$02 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre5 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 do {
  if ($2) {
   $3 = (($f) + 74|0);
   $4 = HEAP8[$3>>0]|0;
   $5 = $4 << 24 >> 24;
   $6 = (($5) + 255)|0;
   $7 = $6 | $5;
   $8 = $7&255;
   HEAP8[$3>>0] = $8;
   $9 = HEAP32[$f>>2]|0;
   $10 = $9 & 8;
   $11 = ($10|0)==(0);
   if ($11) {
    $13 = (($f) + 8|0);
    HEAP32[$13>>2] = 0;
    $14 = (($f) + 4|0);
    HEAP32[$14>>2] = 0;
    $15 = (($f) + 44|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (($f) + 28|0);
    HEAP32[$17>>2] = $16;
    $18 = (($f) + 20|0);
    HEAP32[$18>>2] = $16;
    $19 = (($f) + 48|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = (($16) + ($20)|0);
    HEAP32[$0>>2] = $21;
    $24 = $21;$26 = $16;
    break;
   }
   $12 = $9 | 32;
   HEAP32[$f>>2] = $12;
   STACKTOP = sp;return;
  } else {
   $$phi$trans$insert = (($f) + 20|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   $24 = $1;$26 = $$pre;
  }
 } while(0);
 $22 = (($f) + 20|0);
 $23 = $24;
 $25 = $26;
 $27 = (($23) - ($25))|0;
 $28 = ($27>>>0)<($l>>>0);
 if ($28) {
  $29 = (($f) + 36|0);
  $30 = HEAP32[$29>>2]|0;
  (FUNCTION_TABLE_iiii[$30 & 31]($f,$s,$l)|0);
  STACKTOP = sp;return;
 }
 $31 = (($f) + 75|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = ($32<<24>>24)>(-1);
 L13: do {
  if ($33) {
   $i$0 = $l;
   while(1) {
    $34 = ($i$0|0)==(0);
    if ($34) {
     $$01 = $l;$$02 = $s;$45 = $26;
     break L13;
    }
    $35 = (($i$0) + -1)|0;
    $36 = (($s) + ($35)|0);
    $37 = HEAP8[$36>>0]|0;
    $38 = ($37<<24>>24)==(10);
    if ($38) {
     break;
    } else {
     $i$0 = $35;
    }
   }
   $39 = (($f) + 36|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = (FUNCTION_TABLE_iiii[$40 & 31]($f,$s,$i$0)|0);
   $42 = ($41>>>0)<($i$0>>>0);
   if ($42) {
    STACKTOP = sp;return;
   } else {
    $43 = (($s) + ($i$0)|0);
    $44 = (($l) - ($i$0))|0;
    $$pre5 = HEAP32[$22>>2]|0;
    $$01 = $44;$$02 = $43;$45 = $$pre5;
    break;
   }
  } else {
   $$01 = $l;$$02 = $s;$45 = $26;
  }
 } while(0);
 _memcpy(($45|0),($$02|0),($$01|0))|0;
 $46 = HEAP32[$22>>2]|0;
 $47 = (($46) + ($$01)|0);
 HEAP32[$22>>2] = $47;
 STACKTOP = sp;return;
}
function _snprintf($s,$n,$fmt,$varargs) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsnprintf($s,$n,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$02 = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2$i = 0, $b = 0, $f = 0, $internal_buf$i = 0;
 var $nl_arg$i = 0, $nl_type$i = 0, $ret$1$i = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0;
 $ap2$i = sp + 232|0;
 $nl_type$i = sp + 192|0;
 $nl_arg$i = sp;
 $internal_buf$i = sp + 256|0;
 $b = sp + 248|0;
 $f = sp + 80|0;
 dest=$f+0|0; src=54144+0|0; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $0 = (($n) + -1)|0;
 $1 = ($0>>>0)>(2147483646);
 if ($1) {
  $2 = ($n|0)==(0);
  if ($2) {
   $$02 = 1;$5 = $b;
  } else {
   $3 = (___errno_location()|0);
   HEAP32[$3>>2] = 75;
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  $$02 = $n;$5 = $s;
 }
 $4 = $5;
 $6 = (-2 - ($4))|0;
 $7 = ($$02>>>0)>($6>>>0);
 $$$02 = $7 ? $6 : $$02;
 $8 = (($f) + 48|0);
 HEAP32[$8>>2] = $$$02;
 $9 = (($f) + 20|0);
 HEAP32[$9>>2] = $5;
 $10 = (($f) + 44|0);
 HEAP32[$10>>2] = $5;
 $11 = (($5) + ($$$02)|0);
 $12 = (($f) + 16|0);
 HEAP32[$12>>2] = $11;
 $13 = (($f) + 28|0);
 HEAP32[$13>>2] = $11;
 dest=$nl_type$i+0|0; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2$i>>2] = $vacopy_currentptr;
 $14 = (_printf_core(0,$fmt,$ap2$i,$nl_arg$i,$nl_type$i)|0);
 $15 = ($14|0)<(0);
 if ($15) {
  $$0$i = -1;
 } else {
  $16 = ($$$02|0)==(0);
  if ($16) {
   HEAP32[$10>>2] = $internal_buf$i;
   HEAP32[$13>>2] = $internal_buf$i;
   HEAP32[$9>>2] = $internal_buf$i;
   HEAP32[$8>>2] = 80;
   $18 = (($internal_buf$i) + 80|0);
   HEAP32[$12>>2] = $18;
   $19 = (_printf_core($f,$fmt,$ap2$i,$nl_arg$i,$nl_type$i)|0);
   $20 = ($5|0)==(0|0);
   if ($20) {
    $ret$1$i = $19;
   } else {
    $21 = (($f) + 36|0);
    $22 = HEAP32[$21>>2]|0;
    (FUNCTION_TABLE_iiii[$22 & 31]($f,0,0)|0);
    $23 = HEAP32[$9>>2]|0;
    $24 = ($23|0)==(0|0);
    $$$i = $24 ? -1 : $19;
    HEAP32[$10>>2] = $5;
    HEAP32[$8>>2] = 0;
    HEAP32[$12>>2] = 0;
    HEAP32[$13>>2] = 0;
    HEAP32[$9>>2] = 0;
    $ret$1$i = $$$i;
   }
  } else {
   $17 = (_printf_core($f,$fmt,$ap2$i,$nl_arg$i,$nl_type$i)|0);
   $ret$1$i = $17;
  }
  $$0$i = $ret$1$i;
 }
 $25 = ($$$02|0)==(0);
 if ($25) {
  $$0 = $$0$i;
  STACKTOP = sp;return ($$0|0);
 }
 $26 = HEAP32[$9>>2]|0;
 $27 = HEAP32[$12>>2]|0;
 $28 = ($26|0)==($27|0);
 $29 = $28 << 31 >> 31;
 $30 = (($26) + ($29)|0);
 HEAP8[$30>>0] = 0;
 $$0 = $$0$i;
 STACKTOP = sp;return ($$0|0);
}
function _strtold_l($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0.0, $f$i$i = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i$i = sp;
 dest=$f$i$i+0|0; stop=dest+108|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = (($f$i$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i$i) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = (($f$i$i) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = (($f$i$i) + 76|0);
 HEAP32[$3>>2] = -1;
 $4 = (($f$i$i) + 104|0);
 HEAP32[$4>>2] = 0;
 $5 = $s;
 $6 = $5 ^ -1;
 $7 = (($f$i$i) + 108|0);
 HEAP32[$7>>2] = $6;
 $8 = (($f$i$i) + 100|0);
 HEAP32[$8>>2] = (-1);
 $9 = (+___floatscan($f$i$i,2,1));
 $10 = HEAP32[$7>>2]|0;
 $11 = HEAP32[$0>>2]|0;
 $12 = HEAP32[$1>>2]|0;
 $13 = $11;
 $14 = $12;
 $15 = (($13) - ($14))|0;
 $16 = (($15) + ($10))|0;
 $17 = ($p|0)==(0|0);
 if ($17) {
  STACKTOP = sp;return (+$9);
 }
 $18 = ($16|0)==(0);
 if ($18) {
  $20 = $s;
 } else {
  $19 = (($s) + ($16)|0);
  $20 = $19;
 }
 HEAP32[$p>>2] = $20;
 STACKTOP = sp;return (+$9);
}
function _strtoull($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = (($f$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 if ($2) {
  $3 = (($f$i) + 8|0);
  HEAP32[$3>>2] = (-1);
  $9 = (-1);
 } else {
  $4 = (($s) + 2147483647|0);
  $5 = (($f$i) + 8|0);
  HEAP32[$5>>2] = $4;
  $9 = $4;
 }
 $6 = (($f$i) + 76|0);
 HEAP32[$6>>2] = -1;
 $7 = (($f$i) + 104|0);
 HEAP32[$7>>2] = 0;
 $8 = $9;
 $10 = $s;
 $11 = (($8) - ($10))|0;
 $12 = (($f$i) + 108|0);
 HEAP32[$12>>2] = $11;
 $13 = (($f$i) + 100|0);
 HEAP32[$13>>2] = $9;
 $14 = (___intscan($f$i,$base,1,-1,-1)|0);
 $15 = tempRet0;
 $16 = ($p|0)==(0|0);
 if ($16) {
  tempRet0 = $15;
  STACKTOP = sp;return ($14|0);
 }
 $17 = (($f$i) + 8|0);
 $18 = HEAP32[$12>>2]|0;
 $19 = HEAP32[$0>>2]|0;
 $20 = HEAP32[$17>>2]|0;
 $21 = $19;
 $22 = $20;
 $23 = (($21) + ($18))|0;
 $24 = (($23) - ($22))|0;
 $25 = (($s) + ($24)|0);
 HEAP32[$p>>2] = $25;
 tempRet0 = $15;
 STACKTOP = sp;return ($14|0);
}
function _strtoll($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $f$i = sp;
 HEAP32[$f$i>>2] = 0;
 $0 = (($f$i) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = (($f$i) + 44|0);
 HEAP32[$1>>2] = $s;
 $2 = ($s|0)<(0|0);
 if ($2) {
  $3 = (($f$i) + 8|0);
  HEAP32[$3>>2] = (-1);
  $9 = (-1);
 } else {
  $4 = (($s) + 2147483647|0);
  $5 = (($f$i) + 8|0);
  HEAP32[$5>>2] = $4;
  $9 = $4;
 }
 $6 = (($f$i) + 76|0);
 HEAP32[$6>>2] = -1;
 $7 = (($f$i) + 104|0);
 HEAP32[$7>>2] = 0;
 $8 = $9;
 $10 = $s;
 $11 = (($8) - ($10))|0;
 $12 = (($f$i) + 108|0);
 HEAP32[$12>>2] = $11;
 $13 = (($f$i) + 100|0);
 HEAP32[$13>>2] = $9;
 $14 = (___intscan($f$i,$base,1,0,-2147483648)|0);
 $15 = tempRet0;
 $16 = ($p|0)==(0|0);
 if ($16) {
  tempRet0 = $15;
  STACKTOP = sp;return ($14|0);
 }
 $17 = (($f$i) + 8|0);
 $18 = HEAP32[$12>>2]|0;
 $19 = HEAP32[$0>>2]|0;
 $20 = HEAP32[$17>>2]|0;
 $21 = $19;
 $22 = $20;
 $23 = (($21) + ($18))|0;
 $24 = (($23) - ($22))|0;
 $25 = (($s) + ($24)|0);
 HEAP32[$p>>2] = $25;
 tempRet0 = $15;
 STACKTOP = sp;return ($14|0);
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($f) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = ($6>>>0)>($l>>>0);
 $l$ = $7 ? $l : $6;
 _memcpy(($3|0),($s|0),($l$|0))|0;
 $8 = HEAP32[$2>>2]|0;
 $9 = (($8) + ($l$)|0);
 HEAP32[$2>>2] = $9;
 STACKTOP = sp;return ($l|0);
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$pre = 0, $$pre$phi57Z2D = 0, $$pre$phi59Z2D = 0, $$pre$phiZ2D = 0, $$pre56 = 0, $$pre58 = 0, $$sum = 0, $$sum1 = 0, $$sum12$pre = 0, $$sum13 = 0, $$sum14 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum18 = 0, $$sum19 = 0, $$sum2 = 0;
 var $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum4 = 0, $$sum5 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $I19$0$c = 0, $K20$050 = 0, $R$0 = 0, $R$1 = 0, $R7$0 = 0, $R7$1 = 0, $RP$0 = 0, $RP9$0 = 0, $T$0$lcssa = 0, $T$049 = 0, $cond = 0, $cond46 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + ($psize)|0);
 $1 = (($p) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   $5 = HEAP32[$p>>2]|0;
   $6 = $2 & 3;
   $7 = ($6|0)==(0);
   if ($7) {
    STACKTOP = sp;return;
   }
   $8 = (0 - ($5))|0;
   $9 = (($p) + ($8)|0);
   $10 = (($5) + ($psize))|0;
   $11 = HEAP32[((52744 + 16|0))>>2]|0;
   $12 = ($9>>>0)<($11>>>0);
   if ($12) {
    _abort();
    // unreachable;
   }
   $13 = HEAP32[((52744 + 20|0))>>2]|0;
   $14 = ($9|0)==($13|0);
   if ($14) {
    $$sum = (($psize) + 4)|0;
    $99 = (($p) + ($$sum)|0);
    $100 = HEAP32[$99>>2]|0;
    $101 = $100 & 3;
    $102 = ($101|0)==(3);
    if (!($102)) {
     $$0 = $9;$$02 = $10;
     break;
    }
    HEAP32[((52744 + 8|0))>>2] = $10;
    $103 = $100 & -2;
    HEAP32[$99>>2] = $103;
    $104 = $10 | 1;
    $$sum20 = (4 - ($5))|0;
    $105 = (($p) + ($$sum20)|0);
    HEAP32[$105>>2] = $104;
    HEAP32[$0>>2] = $10;
    STACKTOP = sp;return;
   }
   $15 = $5 >>> 3;
   $16 = ($5>>>0)<(256);
   if ($16) {
    $$sum30 = (8 - ($5))|0;
    $17 = (($p) + ($$sum30)|0);
    $18 = HEAP32[$17>>2]|0;
    $$sum31 = (12 - ($5))|0;
    $19 = (($p) + ($$sum31)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $15 << 1;
    $22 = ((52744 + ($21<<2)|0) + 40|0);
    $23 = ($18|0)==($22|0);
    if (!($23)) {
     $24 = ($18>>>0)<($11>>>0);
     if ($24) {
      _abort();
      // unreachable;
     }
     $25 = (($18) + 12|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($26|0)==($9|0);
     if (!($27)) {
      _abort();
      // unreachable;
     }
    }
    $28 = ($20|0)==($18|0);
    if ($28) {
     $29 = 1 << $15;
     $30 = $29 ^ -1;
     $31 = HEAP32[52744>>2]|0;
     $32 = $31 & $30;
     HEAP32[52744>>2] = $32;
     $$0 = $9;$$02 = $10;
     break;
    }
    $33 = ($20|0)==($22|0);
    if ($33) {
     $$pre58 = (($20) + 8|0);
     $$pre$phi59Z2D = $$pre58;
    } else {
     $34 = ($20>>>0)<($11>>>0);
     if ($34) {
      _abort();
      // unreachable;
     }
     $35 = (($20) + 8|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = ($36|0)==($9|0);
     if ($37) {
      $$pre$phi59Z2D = $35;
     } else {
      _abort();
      // unreachable;
     }
    }
    $38 = (($18) + 12|0);
    HEAP32[$38>>2] = $20;
    HEAP32[$$pre$phi59Z2D>>2] = $18;
    $$0 = $9;$$02 = $10;
    break;
   }
   $$sum22 = (24 - ($5))|0;
   $39 = (($p) + ($$sum22)|0);
   $40 = HEAP32[$39>>2]|0;
   $$sum23 = (12 - ($5))|0;
   $41 = (($p) + ($$sum23)|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)==($9|0);
   do {
    if ($43) {
     $$sum24 = (16 - ($5))|0;
     $$sum25 = (($$sum24) + 4)|0;
     $53 = (($p) + ($$sum25)|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==(0|0);
     if ($55) {
      $56 = (($p) + ($$sum24)|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = ($57|0)==(0|0);
      if ($58) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $57;$RP$0 = $56;
      }
     } else {
      $R$0 = $54;$RP$0 = $53;
     }
     while(1) {
      $59 = (($R$0) + 20|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ($60|0)==(0|0);
      if (!($61)) {
       $R$0 = $60;$RP$0 = $59;
       continue;
      }
      $62 = (($R$0) + 16|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       break;
      } else {
       $R$0 = $63;$RP$0 = $62;
      }
     }
     $65 = ($RP$0>>>0)<($11>>>0);
     if ($65) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0>>2] = 0;
      $R$1 = $R$0;
      break;
     }
    } else {
     $$sum29 = (8 - ($5))|0;
     $44 = (($p) + ($$sum29)|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ($45>>>0)<($11>>>0);
     if ($46) {
      _abort();
      // unreachable;
     }
     $47 = (($45) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($48|0)==($9|0);
     if (!($49)) {
      _abort();
      // unreachable;
     }
     $50 = (($42) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51|0)==($9|0);
     if ($52) {
      HEAP32[$47>>2] = $42;
      HEAP32[$50>>2] = $45;
      $R$1 = $42;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $66 = ($40|0)==(0|0);
   if ($66) {
    $$0 = $9;$$02 = $10;
   } else {
    $$sum26 = (28 - ($5))|0;
    $67 = (($p) + ($$sum26)|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = ((52744 + ($68<<2)|0) + 304|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($9|0)==($70|0);
    if ($71) {
     HEAP32[$69>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $72 = 1 << $68;
      $73 = $72 ^ -1;
      $74 = HEAP32[((52744 + 4|0))>>2]|0;
      $75 = $74 & $73;
      HEAP32[((52744 + 4|0))>>2] = $75;
      $$0 = $9;$$02 = $10;
      break;
     }
    } else {
     $76 = HEAP32[((52744 + 16|0))>>2]|0;
     $77 = ($40>>>0)<($76>>>0);
     if ($77) {
      _abort();
      // unreachable;
     }
     $78 = (($40) + 16|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = ($79|0)==($9|0);
     if ($80) {
      HEAP32[$78>>2] = $R$1;
     } else {
      $81 = (($40) + 20|0);
      HEAP32[$81>>2] = $R$1;
     }
     $82 = ($R$1|0)==(0|0);
     if ($82) {
      $$0 = $9;$$02 = $10;
      break;
     }
    }
    $83 = HEAP32[((52744 + 16|0))>>2]|0;
    $84 = ($R$1>>>0)<($83>>>0);
    if ($84) {
     _abort();
     // unreachable;
    }
    $85 = (($R$1) + 24|0);
    HEAP32[$85>>2] = $40;
    $$sum27 = (16 - ($5))|0;
    $86 = (($p) + ($$sum27)|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==(0|0);
    do {
     if (!($88)) {
      $89 = ($87>>>0)<($83>>>0);
      if ($89) {
       _abort();
       // unreachable;
      } else {
       $90 = (($R$1) + 16|0);
       HEAP32[$90>>2] = $87;
       $91 = (($87) + 24|0);
       HEAP32[$91>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum27) + 4)|0;
    $92 = (($p) + ($$sum28)|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    if ($94) {
     $$0 = $9;$$02 = $10;
    } else {
     $95 = HEAP32[((52744 + 16|0))>>2]|0;
     $96 = ($93>>>0)<($95>>>0);
     if ($96) {
      _abort();
      // unreachable;
     } else {
      $97 = (($R$1) + 20|0);
      HEAP32[$97>>2] = $93;
      $98 = (($93) + 24|0);
      HEAP32[$98>>2] = $R$1;
      $$0 = $9;$$02 = $10;
      break;
     }
    }
   }
  } else {
   $$0 = $p;$$02 = $psize;
  }
 } while(0);
 $106 = HEAP32[((52744 + 16|0))>>2]|0;
 $107 = ($0>>>0)<($106>>>0);
 if ($107) {
  _abort();
  // unreachable;
 }
 $$sum1 = (($psize) + 4)|0;
 $108 = (($p) + ($$sum1)|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $109 & 2;
 $111 = ($110|0)==(0);
 if ($111) {
  $112 = HEAP32[((52744 + 24|0))>>2]|0;
  $113 = ($0|0)==($112|0);
  if ($113) {
   $114 = HEAP32[((52744 + 12|0))>>2]|0;
   $115 = (($114) + ($$02))|0;
   HEAP32[((52744 + 12|0))>>2] = $115;
   HEAP32[((52744 + 24|0))>>2] = $$0;
   $116 = $115 | 1;
   $117 = (($$0) + 4|0);
   HEAP32[$117>>2] = $116;
   $118 = HEAP32[((52744 + 20|0))>>2]|0;
   $119 = ($$0|0)==($118|0);
   if (!($119)) {
    STACKTOP = sp;return;
   }
   HEAP32[((52744 + 20|0))>>2] = 0;
   HEAP32[((52744 + 8|0))>>2] = 0;
   STACKTOP = sp;return;
  }
  $120 = HEAP32[((52744 + 20|0))>>2]|0;
  $121 = ($0|0)==($120|0);
  if ($121) {
   $122 = HEAP32[((52744 + 8|0))>>2]|0;
   $123 = (($122) + ($$02))|0;
   HEAP32[((52744 + 8|0))>>2] = $123;
   HEAP32[((52744 + 20|0))>>2] = $$0;
   $124 = $123 | 1;
   $125 = (($$0) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = (($$0) + ($123)|0);
   HEAP32[$126>>2] = $123;
   STACKTOP = sp;return;
  }
  $127 = $109 & -8;
  $128 = (($127) + ($$02))|0;
  $129 = $109 >>> 3;
  $130 = ($109>>>0)<(256);
  do {
   if ($130) {
    $$sum18 = (($psize) + 8)|0;
    $131 = (($p) + ($$sum18)|0);
    $132 = HEAP32[$131>>2]|0;
    $$sum19 = (($psize) + 12)|0;
    $133 = (($p) + ($$sum19)|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = $129 << 1;
    $136 = ((52744 + ($135<<2)|0) + 40|0);
    $137 = ($132|0)==($136|0);
    if (!($137)) {
     $138 = ($132>>>0)<($106>>>0);
     if ($138) {
      _abort();
      // unreachable;
     }
     $139 = (($132) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==($0|0);
     if (!($141)) {
      _abort();
      // unreachable;
     }
    }
    $142 = ($134|0)==($132|0);
    if ($142) {
     $143 = 1 << $129;
     $144 = $143 ^ -1;
     $145 = HEAP32[52744>>2]|0;
     $146 = $145 & $144;
     HEAP32[52744>>2] = $146;
     break;
    }
    $147 = ($134|0)==($136|0);
    if ($147) {
     $$pre56 = (($134) + 8|0);
     $$pre$phi57Z2D = $$pre56;
    } else {
     $148 = ($134>>>0)<($106>>>0);
     if ($148) {
      _abort();
      // unreachable;
     }
     $149 = (($134) + 8|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($0|0);
     if ($151) {
      $$pre$phi57Z2D = $149;
     } else {
      _abort();
      // unreachable;
     }
    }
    $152 = (($132) + 12|0);
    HEAP32[$152>>2] = $134;
    HEAP32[$$pre$phi57Z2D>>2] = $132;
   } else {
    $$sum2 = (($psize) + 24)|0;
    $153 = (($p) + ($$sum2)|0);
    $154 = HEAP32[$153>>2]|0;
    $$sum3 = (($psize) + 12)|0;
    $155 = (($p) + ($$sum3)|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ($156|0)==($0|0);
    do {
     if ($157) {
      $$sum5 = (($psize) + 20)|0;
      $167 = (($p) + ($$sum5)|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ($168|0)==(0|0);
      if ($169) {
       $$sum4 = (($psize) + 16)|0;
       $170 = (($p) + ($$sum4)|0);
       $171 = HEAP32[$170>>2]|0;
       $172 = ($171|0)==(0|0);
       if ($172) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $171;$RP9$0 = $170;
       }
      } else {
       $R7$0 = $168;$RP9$0 = $167;
      }
      while(1) {
       $173 = (($R7$0) + 20|0);
       $174 = HEAP32[$173>>2]|0;
       $175 = ($174|0)==(0|0);
       if (!($175)) {
        $R7$0 = $174;$RP9$0 = $173;
        continue;
       }
       $176 = (($R7$0) + 16|0);
       $177 = HEAP32[$176>>2]|0;
       $178 = ($177|0)==(0|0);
       if ($178) {
        break;
       } else {
        $R7$0 = $177;$RP9$0 = $176;
       }
      }
      $179 = ($RP9$0>>>0)<($106>>>0);
      if ($179) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0>>2] = 0;
       $R7$1 = $R7$0;
       break;
      }
     } else {
      $$sum17 = (($psize) + 8)|0;
      $158 = (($p) + ($$sum17)|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($159>>>0)<($106>>>0);
      if ($160) {
       _abort();
       // unreachable;
      }
      $161 = (($159) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162|0)==($0|0);
      if (!($163)) {
       _abort();
       // unreachable;
      }
      $164 = (($156) + 8|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==($0|0);
      if ($166) {
       HEAP32[$161>>2] = $156;
       HEAP32[$164>>2] = $159;
       $R7$1 = $156;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $180 = ($154|0)==(0|0);
    if (!($180)) {
     $$sum14 = (($psize) + 28)|0;
     $181 = (($p) + ($$sum14)|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = ((52744 + ($182<<2)|0) + 304|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = ($0|0)==($184|0);
     if ($185) {
      HEAP32[$183>>2] = $R7$1;
      $cond46 = ($R7$1|0)==(0|0);
      if ($cond46) {
       $186 = 1 << $182;
       $187 = $186 ^ -1;
       $188 = HEAP32[((52744 + 4|0))>>2]|0;
       $189 = $188 & $187;
       HEAP32[((52744 + 4|0))>>2] = $189;
       break;
      }
     } else {
      $190 = HEAP32[((52744 + 16|0))>>2]|0;
      $191 = ($154>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      }
      $192 = (($154) + 16|0);
      $193 = HEAP32[$192>>2]|0;
      $194 = ($193|0)==($0|0);
      if ($194) {
       HEAP32[$192>>2] = $R7$1;
      } else {
       $195 = (($154) + 20|0);
       HEAP32[$195>>2] = $R7$1;
      }
      $196 = ($R7$1|0)==(0|0);
      if ($196) {
       break;
      }
     }
     $197 = HEAP32[((52744 + 16|0))>>2]|0;
     $198 = ($R7$1>>>0)<($197>>>0);
     if ($198) {
      _abort();
      // unreachable;
     }
     $199 = (($R7$1) + 24|0);
     HEAP32[$199>>2] = $154;
     $$sum15 = (($psize) + 16)|0;
     $200 = (($p) + ($$sum15)|0);
     $201 = HEAP32[$200>>2]|0;
     $202 = ($201|0)==(0|0);
     do {
      if (!($202)) {
       $203 = ($201>>>0)<($197>>>0);
       if ($203) {
        _abort();
        // unreachable;
       } else {
        $204 = (($R7$1) + 16|0);
        HEAP32[$204>>2] = $201;
        $205 = (($201) + 24|0);
        HEAP32[$205>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum16 = (($psize) + 20)|0;
     $206 = (($p) + ($$sum16)|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($207|0)==(0|0);
     if (!($208)) {
      $209 = HEAP32[((52744 + 16|0))>>2]|0;
      $210 = ($207>>>0)<($209>>>0);
      if ($210) {
       _abort();
       // unreachable;
      } else {
       $211 = (($R7$1) + 20|0);
       HEAP32[$211>>2] = $207;
       $212 = (($207) + 24|0);
       HEAP32[$212>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $213 = $128 | 1;
  $214 = (($$0) + 4|0);
  HEAP32[$214>>2] = $213;
  $215 = (($$0) + ($128)|0);
  HEAP32[$215>>2] = $128;
  $216 = HEAP32[((52744 + 20|0))>>2]|0;
  $217 = ($$0|0)==($216|0);
  if ($217) {
   HEAP32[((52744 + 8|0))>>2] = $128;
   STACKTOP = sp;return;
  } else {
   $$1 = $128;
  }
 } else {
  $218 = $109 & -2;
  HEAP32[$108>>2] = $218;
  $219 = $$02 | 1;
  $220 = (($$0) + 4|0);
  HEAP32[$220>>2] = $219;
  $221 = (($$0) + ($$02)|0);
  HEAP32[$221>>2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 $223 = ($$1>>>0)<(256);
 if ($223) {
  $224 = $222 << 1;
  $225 = ((52744 + ($224<<2)|0) + 40|0);
  $226 = HEAP32[52744>>2]|0;
  $227 = 1 << $222;
  $228 = $226 & $227;
  $229 = ($228|0)==(0);
  if ($229) {
   $230 = $226 | $227;
   HEAP32[52744>>2] = $230;
   $$sum12$pre = (($224) + 2)|0;
   $$pre = ((52744 + ($$sum12$pre<<2)|0) + 40|0);
   $$pre$phiZ2D = $$pre;$F16$0 = $225;
  } else {
   $$sum13 = (($224) + 2)|0;
   $231 = ((52744 + ($$sum13<<2)|0) + 40|0);
   $232 = HEAP32[$231>>2]|0;
   $233 = HEAP32[((52744 + 16|0))>>2]|0;
   $234 = ($232>>>0)<($233>>>0);
   if ($234) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $231;$F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$0;
  $235 = (($F16$0) + 12|0);
  HEAP32[$235>>2] = $$0;
  $236 = (($$0) + 8|0);
  HEAP32[$236>>2] = $F16$0;
  $237 = (($$0) + 12|0);
  HEAP32[$237>>2] = $225;
  STACKTOP = sp;return;
 }
 $238 = $$1 >>> 8;
 $239 = ($238|0)==(0);
 if ($239) {
  $I19$0 = 0;
 } else {
  $240 = ($$1>>>0)>(16777215);
  if ($240) {
   $I19$0 = 31;
  } else {
   $241 = (($238) + 1048320)|0;
   $242 = $241 >>> 16;
   $243 = $242 & 8;
   $244 = $238 << $243;
   $245 = (($244) + 520192)|0;
   $246 = $245 >>> 16;
   $247 = $246 & 4;
   $248 = $247 | $243;
   $249 = $244 << $247;
   $250 = (($249) + 245760)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 2;
   $253 = $248 | $252;
   $254 = (14 - ($253))|0;
   $255 = $249 << $252;
   $256 = $255 >>> 15;
   $257 = (($254) + ($256))|0;
   $258 = $257 << 1;
   $259 = (($257) + 7)|0;
   $260 = $$1 >>> $259;
   $261 = $260 & 1;
   $262 = $261 | $258;
   $I19$0 = $262;
  }
 }
 $263 = ((52744 + ($I19$0<<2)|0) + 304|0);
 $264 = (($$0) + 28|0);
 $I19$0$c = $I19$0;
 HEAP32[$264>>2] = $I19$0$c;
 $265 = (($$0) + 20|0);
 HEAP32[$265>>2] = 0;
 $266 = (($$0) + 16|0);
 HEAP32[$266>>2] = 0;
 $267 = HEAP32[((52744 + 4|0))>>2]|0;
 $268 = 1 << $I19$0;
 $269 = $267 & $268;
 $270 = ($269|0)==(0);
 if ($270) {
  $271 = $267 | $268;
  HEAP32[((52744 + 4|0))>>2] = $271;
  HEAP32[$263>>2] = $$0;
  $272 = (($$0) + 24|0);
  HEAP32[$272>>2] = $263;
  $273 = (($$0) + 12|0);
  HEAP32[$273>>2] = $$0;
  $274 = (($$0) + 8|0);
  HEAP32[$274>>2] = $$0;
  STACKTOP = sp;return;
 }
 $275 = HEAP32[$263>>2]|0;
 $276 = ($I19$0|0)==(31);
 if ($276) {
  $284 = 0;
 } else {
  $277 = $I19$0 >>> 1;
  $278 = (25 - ($277))|0;
  $284 = $278;
 }
 $279 = (($275) + 4|0);
 $280 = HEAP32[$279>>2]|0;
 $281 = $280 & -8;
 $282 = ($281|0)==($$1|0);
 L194: do {
  if ($282) {
   $T$0$lcssa = $275;
  } else {
   $283 = $$1 << $284;
   $K20$050 = $283;$T$049 = $275;
   while(1) {
    $291 = $K20$050 >>> 31;
    $292 = ((($T$049) + ($291<<2)|0) + 16|0);
    $287 = HEAP32[$292>>2]|0;
    $293 = ($287|0)==(0|0);
    if ($293) {
     break;
    }
    $285 = $K20$050 << 1;
    $286 = (($287) + 4|0);
    $288 = HEAP32[$286>>2]|0;
    $289 = $288 & -8;
    $290 = ($289|0)==($$1|0);
    if ($290) {
     $T$0$lcssa = $287;
     break L194;
    } else {
     $K20$050 = $285;$T$049 = $287;
    }
   }
   $294 = HEAP32[((52744 + 16|0))>>2]|0;
   $295 = ($292>>>0)<($294>>>0);
   if ($295) {
    _abort();
    // unreachable;
   }
   HEAP32[$292>>2] = $$0;
   $296 = (($$0) + 24|0);
   HEAP32[$296>>2] = $T$049;
   $297 = (($$0) + 12|0);
   HEAP32[$297>>2] = $$0;
   $298 = (($$0) + 8|0);
   HEAP32[$298>>2] = $$0;
   STACKTOP = sp;return;
  }
 } while(0);
 $299 = (($T$0$lcssa) + 8|0);
 $300 = HEAP32[$299>>2]|0;
 $301 = HEAP32[((52744 + 16|0))>>2]|0;
 $302 = ($T$0$lcssa>>>0)>=($301>>>0);
 $303 = ($300>>>0)>=($301>>>0);
 $or$cond = $302 & $303;
 if (!($or$cond)) {
  _abort();
  // unreachable;
 }
 $304 = (($300) + 12|0);
 HEAP32[$304>>2] = $$0;
 HEAP32[$299>>2] = $$0;
 $305 = (($$0) + 8|0);
 HEAP32[$305>>2] = $300;
 $306 = (($$0) + 12|0);
 HEAP32[$306>>2] = $T$0$lcssa;
 $307 = (($$0) + 24|0);
 HEAP32[$307>>2] = 0;
 STACKTOP = sp;return;
}
function _scanexp($f,$pok) {
 $f = $f|0;
 $pok = $pok|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $c$0 = 0, $c$1$be = 0, $c$116 = 0, $c$2$be = 0;
 var $c$2$lcssa = 0, $c$29 = 0, $c$3$be = 0, $neg$0 = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $x$017 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($f) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = (($f) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  $5 = (($1) + 1|0);
  HEAP32[$0>>2] = $5;
  $6 = HEAP8[$1>>0]|0;
  $7 = $6&255;
  $10 = $7;
 } else {
  $8 = (___shgetc($f)|0);
  $10 = $8;
 }
 $9 = ($10|0)==(45);
 if ((($10|0) == 43) | (($10|0) == 45)) {
  $11 = HEAP32[$0>>2]|0;
  $12 = $9&1;
  $13 = HEAP32[$2>>2]|0;
  $14 = ($11>>>0)<($13>>>0);
  if ($14) {
   $15 = (($11) + 1|0);
   HEAP32[$0>>2] = $15;
   $16 = HEAP8[$11>>0]|0;
   $17 = $16&255;
   $20 = $17;
  } else {
   $18 = (___shgetc($f)|0);
   $20 = $18;
  }
  $19 = (($20) + -48)|0;
  $21 = ($19>>>0)>(9);
  $22 = ($pok|0)!=(0);
  $or$cond3 = $21 & $22;
  if ($or$cond3) {
   $23 = HEAP32[$2>>2]|0;
   $24 = ($23|0)==(0|0);
   if ($24) {
    $c$0 = $20;$neg$0 = $12;
   } else {
    $25 = HEAP32[$0>>2]|0;
    $26 = (($25) + -1|0);
    HEAP32[$0>>2] = $26;
    $c$0 = $20;$neg$0 = $12;
   }
  } else {
   $c$0 = $20;$neg$0 = $12;
  }
 } else {
  $c$0 = $10;$neg$0 = 0;
 }
 $27 = (($c$0) + -48)|0;
 $28 = ($27>>>0)>(9);
 if ($28) {
  $29 = HEAP32[$2>>2]|0;
  $30 = ($29|0)==(0|0);
  if ($30) {
   $94 = -2147483648;$95 = 0;
   tempRet0 = $94;
   STACKTOP = sp;return ($95|0);
  }
  $31 = HEAP32[$0>>2]|0;
  $32 = (($31) + -1|0);
  HEAP32[$0>>2] = $32;
  $94 = -2147483648;$95 = 0;
  tempRet0 = $94;
  STACKTOP = sp;return ($95|0);
 } else {
  $c$116 = $c$0;$x$017 = 0;
 }
 while(1) {
  $33 = ($x$017*10)|0;
  $34 = (($c$116) + -48)|0;
  $35 = (($34) + ($33))|0;
  $36 = HEAP32[$0>>2]|0;
  $37 = HEAP32[$2>>2]|0;
  $38 = ($36>>>0)<($37>>>0);
  if ($38) {
   $39 = (($36) + 1|0);
   HEAP32[$0>>2] = $39;
   $40 = HEAP8[$36>>0]|0;
   $41 = $40&255;
   $c$1$be = $41;
  } else {
   $42 = (___shgetc($f)|0);
   $c$1$be = $42;
  }
  $43 = (($c$1$be) + -48)|0;
  $44 = ($43>>>0)<(10);
  $45 = ($35|0)<(214748364);
  $or$cond5 = $44 & $45;
  if ($or$cond5) {
   $c$116 = $c$1$be;$x$017 = $35;
  } else {
   break;
  }
 }
 $46 = ($35|0)<(0);
 $47 = $46 << 31 >> 31;
 if ($44) {
  $50 = $35;$51 = $47;$c$29 = $c$1$be;
  while(1) {
   $52 = (___muldi3(($50|0),($51|0),10,0)|0);
   $53 = tempRet0;
   $54 = ($c$29|0)<(0);
   $55 = $54 << 31 >> 31;
   $56 = (_i64Add(($c$29|0),($55|0),-48,-1)|0);
   $57 = tempRet0;
   $58 = (_i64Add(($56|0),($57|0),($52|0),($53|0))|0);
   $59 = tempRet0;
   $60 = HEAP32[$0>>2]|0;
   $61 = HEAP32[$2>>2]|0;
   $62 = ($60>>>0)<($61>>>0);
   if ($62) {
    $63 = (($60) + 1|0);
    HEAP32[$0>>2] = $63;
    $64 = HEAP8[$60>>0]|0;
    $65 = $64&255;
    $c$2$be = $65;
   } else {
    $66 = (___shgetc($f)|0);
    $c$2$be = $66;
   }
   $67 = (($c$2$be) + -48)|0;
   $68 = ($67>>>0)<(10);
   $69 = ($59|0)<(21474836);
   $70 = ($58>>>0)<(2061584302);
   $71 = ($59|0)==(21474836);
   $72 = $71 & $70;
   $73 = $69 | $72;
   $or$cond7 = $68 & $73;
   if ($or$cond7) {
    $50 = $58;$51 = $59;$c$29 = $c$2$be;
   } else {
    $88 = $58;$89 = $59;$c$2$lcssa = $c$2$be;
    break;
   }
  }
 } else {
  $88 = $35;$89 = $47;$c$2$lcssa = $c$1$be;
 }
 $48 = (($c$2$lcssa) + -48)|0;
 $49 = ($48>>>0)<(10);
 if ($49) {
  while(1) {
   $74 = HEAP32[$0>>2]|0;
   $75 = HEAP32[$2>>2]|0;
   $76 = ($74>>>0)<($75>>>0);
   if ($76) {
    $77 = (($74) + 1|0);
    HEAP32[$0>>2] = $77;
    $78 = HEAP8[$74>>0]|0;
    $79 = $78&255;
    $c$3$be = $79;
   } else {
    $80 = (___shgetc($f)|0);
    $c$3$be = $80;
   }
   $81 = (($c$3$be) + -48)|0;
   $82 = ($81>>>0)<(10);
   if (!($82)) {
    break;
   }
  }
 }
 $83 = HEAP32[$2>>2]|0;
 $84 = ($83|0)==(0|0);
 if (!($84)) {
  $85 = HEAP32[$0>>2]|0;
  $86 = (($85) + -1|0);
  HEAP32[$0>>2] = $86;
 }
 $87 = ($neg$0|0)!=(0);
 $90 = (_i64Subtract(0,0,($88|0),($89|0))|0);
 $91 = tempRet0;
 $92 = $87 ? $90 : $88;
 $93 = $87 ? $91 : $89;
 $94 = $93;$95 = $92;
 tempRet0 = $94;
 STACKTOP = sp;return ($95|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$5$i = 0, $$$i = 0, $$$p$i = 0, $$0 = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i102$i = 0, $$0$lcssa$i109$i = 0, $$0$lcssa$i133$i = 0, $$0$lcssa$i148$i = 0, $$0$lcssa$i3 = 0, $$0$lcssa$i40 = 0, $$0$lcssa$i44$i = 0, $$0$lcssa$i45 = 0, $$0$lcssa$i47 = 0, $$0$lcssa$i51$i = 0, $$0$lcssa$i53$i = 0, $$0$lcssa$i55 = 0, $$0$lcssa$i61$i = 0;
 var $$0$lcssa$i62 = 0, $$0$lcssa$i68$i = 0, $$0$lcssa$i69 = 0, $$0$lcssa$i74$i = 0, $$0$lcssa$i79 = 0, $$0$lcssa$i81$i = 0, $$0$lcssa$i89$i = 0, $$01$i = 0, $$01$i$i = 0, $$01$i100$i = 0, $$01$i107$i = 0, $$01$i131$i = 0, $$01$i146$i = 0, $$01$i38 = 0, $$01$i42$i = 0, $$01$i49$i = 0, $$01$i53 = 0, $$01$i59$i = 0, $$01$i60 = 0, $$01$i66$i = 0;
 var $$01$i67 = 0, $$01$i72$i = 0, $$01$i77 = 0, $$01$i79$i = 0, $$01$lcssa$off0$i = 0, $$01$lcssa$off0$i$i = 0, $$01$lcssa$off0$i90$i = 0, $$010$i = 0.0, $$012$i = 0, $$012$i1 = 0, $$016$i = 0, $$03$i42 = 0, $$05$i = 0, $$05$i$i = 0, $$05$i84$i = 0, $$1$i = 0.0, $$1$lcssa$i = 0, $$1$lcssa$i$i = 0, $$1$lcssa$i117$i = 0, $$117$i = 0;
 var $$12$i = 0, $$12$i$i = 0, $$12$i115$i = 0, $$12$i124$i = 0, $$12$i139$i = 0, $$12$i92$i = 0, $$15 = 0, $$15$i = 0, $$19 = 0, $$2$i = 0.0, $$2$us$i = 0.0, $$2$us$us$i = 0.0, $$20 = 0, $$213$$26$i = 0, $$213$$28$i = 0, $$213$i = 0, $$22$i = 0, $$23$i = 0, $$23$us$i = 0, $$24$i = 0;
 var $$25$i = 0.0, $$26$i = 0, $$28$i = 0, $$3$i = 0.0, $$3$i6 = 0, $$314$i = 0, $$36$i = 0, $$4$i = 0.0, $$415$lcssa$i = 0, $$415171$i = 0, $$5189$i = 0, $$a$3$i = 0, $$a$3$us$i = 0, $$a$3$us307$i = 0, $$a$3$us308$i = 0, $$a$3309$i = 0, $$a$3310$i = 0, $$fl$4 = 0, $$lcssa$i = 0, $$lcssa292$i = 0;
 var $$mask$i = 0, $$mask$i32 = 0, $$mask1$i = 0, $$mask1$i31 = 0, $$neg156$i = 0, $$neg157$i = 0, $$not$i = 0, $$p$5 = 0, $$p$i = 0, $$phi$trans$insert = 0, $$pn$i = 0, $$pr = 0, $$pr$i = 0, $$pr151$i = 0, $$pre = 0, $$pre$i = 0, $$pre18 = 0, $$pre19 = 0, $$pre260 = 0, $$pre261 = 0;
 var $$pre306$i = 0, $$sum$i = 0, $$sum18$i = 0, $$sum19$i = 0, $$z$3$i = 0, $$z$4$us$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0;
 var $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0;
 var $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0;
 var $1046 = 0, $1047 = 0.0, $1048 = 0.0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1053$phi = 0, $1054 = 0, $1054$phi = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0;
 var $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0.0, $176 = 0, $177 = 0, $178 = 0.0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0;
 var $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0;
 var $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0;
 var $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0;
 var $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0.0, $384 = 0, $385 = 0.0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0;
 var $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;
 var $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0.0, $424 = 0.0, $425 = 0, $426 = 0;
 var $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0.0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0.0, $443 = 0.0, $444 = 0.0;
 var $445 = 0.0, $446 = 0.0, $447 = 0.0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0;
 var $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0;
 var $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0.0, $496 = 0.0, $497 = 0.0, $498 = 0, $499 = 0;
 var $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0.0, $511 = 0.0, $512 = 0.0, $513 = 0, $514 = 0, $515 = 0, $516 = 0;
 var $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0.0, $526 = 0.0, $527 = 0.0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0;
 var $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0;
 var $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0;
 var $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0.0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0.0, $589 = 0.0;
 var $59 = 0, $590 = 0.0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0;
 var $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0;
 var $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0;
 var $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0;
 var $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0;
 var $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0;
 var $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0;
 var $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0.0, $727 = 0.0, $728 = 0, $729 = 0.0, $73 = 0, $730 = 0, $731 = 0, $732 = 0;
 var $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0;
 var $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0;
 var $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0;
 var $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0;
 var $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0;
 var $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0;
 var $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0;
 var $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0;
 var $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0;
 var $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0;
 var $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0;
 var $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0;
 var $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0;
 var $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0;
 var $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1258$i = 0, $a$2 = 0;
 var $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3244$i = 0, $a$3244$us$i = 0, $a$5$lcssa$i = 0, $a$5218$i = 0, $a$6$i = 0, $a$7$i = 0, $a$8$ph$i = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0, $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current29 = 0, $arglist_current32 = 0, $arglist_current35 = 0;
 var $arglist_current38 = 0, $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current5 = 0, $arglist_current50 = 0, $arglist_current53 = 0, $arglist_current56 = 0, $arglist_current59 = 0, $arglist_current62 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next30 = 0;
 var $arglist_next33 = 0, $arglist_next36 = 0, $arglist_next39 = 0, $arglist_next42 = 0, $arglist_next45 = 0, $arglist_next48 = 0, $arglist_next51 = 0, $arglist_next54 = 0, $arglist_next57 = 0, $arglist_next6 = 0, $arglist_next60 = 0, $arglist_next63 = 0, $arglist_next9 = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0250$i = 0, $carry3$0238$i = 0, $carry3$0238$us$i = 0;
 var $cnt$0 = 0, $cnt$1 = 0, $d$0$i = 0, $d$0249$i = 0, $d$0251$i = 0, $d$1237$i = 0, $d$1237$us$i = 0, $d$2$lcssa$i = 0, $d$2217$i = 0, $d$3$i = 0, $d$4180$i = 0, $d$5170$i = 0, $d$6188$i = 0, $e$0233$i = 0, $e$1$i = 0, $e$2213$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0;
 var $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$1$ph$i = 0, $estr$1195$i = 0, $estr$2$i = 0, $exitcond$i = 0, $fl$0113 = 0, $fl$0118 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $fmt81$lcssa = 0, $fmt81102 = 0, $fmt82 = 0, $fmt83 = 0, $fmt84 = 0, $fmt86 = 0, $fmt87 = 0;
 var $i$0$lcssa = 0, $i$0$lcssa267 = 0, $i$0166 = 0, $i$0232$i = 0, $i$03$i = 0, $i$03$i24 = 0, $i$1$lcssa$i = 0, $i$1174 = 0, $i$1225$i = 0, $i$2100 = 0, $i$2212$i = 0, $i$3204$i = 0, $i$397 = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i26 = 0, $isdigit2$i = 0, $isdigit2$i23 = 0, $isdigit4 = 0, $isdigit6 = 0;
 var $isdigittmp = 0, $isdigittmp$i = 0, $isdigittmp$i25 = 0, $isdigittmp1$i = 0, $isdigittmp1$i22 = 0, $isdigittmp3 = 0, $isdigittmp5 = 0, $j$0$i = 0, $j$0224$i = 0, $j$0226$i = 0, $j$1205$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1$i = 0, $l$1165 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$phi = 0, $l10n$1 = 0;
 var $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $notlhs$us$us$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i105$i = 0, $or$cond$i2 = 0, $or$cond$i40$i = 0, $or$cond$i47$i = 0, $or$cond$i51 = 0, $or$cond$i57$i = 0, $or$cond$i58 = 0, $or$cond$i64$i = 0, $or$cond$i65 = 0, $or$cond$i73 = 0, $or$cond$i75 = 0, $or$cond$i77$i = 0;
 var $or$cond$i98$i = 0, $or$cond11$i = 0, $or$cond13 = 0, $or$cond17 = 0, $or$cond271 = 0, $or$cond32$i = 0, $or$cond34$i = 0, $or$cond5$i = 0, $or$cond7$i = 0, $or$cond7169$i = 0, $or$cond9 = 0, $or$cond9$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0, $p$4266 = 0, $p$5 = 0, $pad$i = 0, $phitmp = 0;
 var $phitmp20 = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$0$i = 0, $re$1163$i = 0, $round$0162$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$0$lcssa$i = 0, $s$0$us$i = 0, $s$0$us$us$i = 0;
 var $s$013$i = 0, $s$1$i = 0, $s$1$lcssa$i = 0, $s$1$us$i = 0, $s$1$us$us$i = 0, $s$13$i = 0, $s$2$i = 0, $s1$0$i = 0, $s7$0177$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$0165$i = 0, $s9$0$i = 0, $s9$1184$i = 0, $s9$2$i = 0, $sext = 0, $sext93 = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0;
 var $storemerge = 0, $storemerge2111 = 0, $storemerge2117 = 0, $storemerge7 = 0, $t$0 = 0, $t$1 = 0, $w$$i = 0, $w$0 = 0, $w$0$lcssa$i = 0, $w$06$i = 0, $w$1 = 0, $w$2 = 0, $w$22$i = 0, $w$35$i = 0, $wc = 0, $ws$0167 = 0, $ws$1175 = 0, $y$03$i = 0, $y$03$i$i = 0, $y$03$i114$i = 0;
 var $y$03$i123$i = 0, $y$03$i138$i = 0, $y$03$i91$i = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0103 = 0, $z$1$lcssa$i = 0, $z$1257$i = 0, $z$2 = 0, $z$2$i = 0, $z$3$lcssa$i = 0, $z$3243$i = 0, $z$3243$us$i = 0, $z$4$i = 0, $z$4$us$i = 0, $z$5$i = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$ph$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864|0;
 $big$i = sp + 16|0;
 $e2$i = sp + 8|0;
 $buf$i = sp + 560|0;
 $0 = $buf$i;
 $ebuf0$i = sp + 840|0;
 $pad$i = sp + 584|0;
 $buf = sp + 520|0;
 $wc = sp;
 $mb = sp + 852|0;
 $1 = ($f|0)!=(0|0);
 $2 = (($buf) + 40|0);
 $3 = $2;
 $4 = (($buf) + 39|0);
 $5 = (($wc) + 4|0);
 $6 = $wc;
 $7 = (($ebuf0$i) + 12|0);
 $8 = (($ebuf0$i) + 11|0);
 $9 = $7;
 $10 = (($9) - ($0))|0;
 $11 = (-2 - ($0))|0;
 $12 = (($9) + 2)|0;
 $13 = (($big$i) + 288|0);
 $14 = (($buf$i) + 9|0);
 $15 = $14;
 $16 = (($buf$i) + 8|0);
 $1053 = 0;$1054 = 0;$cnt$0 = 0;$fmt83 = $fmt;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $17 = ($cnt$0|0)>(-1);
  do {
   if ($17) {
    $18 = (2147483647 - ($cnt$0))|0;
    $19 = ($l$0|0)>($18|0);
    if ($19) {
     $20 = (___errno_location()|0);
     HEAP32[$20>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $21 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $21;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $22 = HEAP8[$fmt83>>0]|0;
  $23 = ($22<<24>>24)==(0);
  if ($23) {
   label = 363;
   break;
  } else {
   $1055 = $22;$fmt82 = $fmt83;
  }
  while(1) {
   if ((($1055<<24>>24) == 0)) {
    $fmt81$lcssa = $fmt82;$z$0$lcssa = $fmt82;
    break;
   } else if ((($1055<<24>>24) == 37)) {
    $fmt81102 = $fmt82;$z$0103 = $fmt82;
    label = 9;
    break;
   }
   $24 = (($fmt82) + 1|0);
   $$pre = HEAP8[$24>>0]|0;
   $1055 = $$pre;$fmt82 = $24;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $25 = (($fmt81102) + 1|0);
     $26 = HEAP8[$25>>0]|0;
     $27 = ($26<<24>>24)==(37);
     if (!($27)) {
      $fmt81$lcssa = $fmt81102;$z$0$lcssa = $z$0103;
      break L12;
     }
     $28 = (($z$0103) + 1|0);
     $29 = (($fmt81102) + 2|0);
     $30 = HEAP8[$29>>0]|0;
     $31 = ($30<<24>>24)==(37);
     if ($31) {
      $fmt81102 = $29;$z$0103 = $28;
      label = 9;
     } else {
      $fmt81$lcssa = $29;$z$0$lcssa = $28;
      break;
     }
    }
   }
  } while(0);
  $32 = $z$0$lcssa;
  $33 = $fmt83;
  $34 = (($32) - ($33))|0;
  if ($1) {
   ___fwritex($fmt83,$34,$f);
  }
  $35 = ($z$0$lcssa|0)==($fmt83|0);
  if (!($35)) {
   $l10n$0$phi = $l10n$0;$1054$phi = $1054;$1053$phi = $1053;$cnt$0 = $cnt$1;$fmt83 = $fmt81$lcssa;$l$0 = $34;$l10n$0 = $l10n$0$phi;$1054 = $1054$phi;$1053 = $1053$phi;
   continue;
  }
  $36 = (($fmt81$lcssa) + 1|0);
  $37 = HEAP8[$36>>0]|0;
  $38 = $37 << 24 >> 24;
  $isdigittmp = (($38) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $39 = (($fmt81$lcssa) + 2|0);
   $40 = HEAP8[$39>>0]|0;
   $41 = ($40<<24>>24)==(36);
   if ($41) {
    $42 = (($fmt81$lcssa) + 3|0);
    $$pre260 = HEAP8[$42>>0]|0;
    $44 = $$pre260;$argpos$0 = $isdigittmp;$l10n$1 = 1;$storemerge = $42;
   } else {
    $44 = $37;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $36;
   }
  } else {
   $44 = $37;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $36;
  }
  $43 = $44 << 24 >> 24;
  $45 = $43 & -32;
  $46 = ($45|0)==(32);
  L25: do {
   if ($46) {
    $$pr = $44;$48 = $43;$fl$0118 = 0;$storemerge2117 = $storemerge;
    while(1) {
     $47 = (($48) + -32)|0;
     $49 = 1 << $47;
     $50 = $49 & 75913;
     $51 = ($50|0)==(0);
     if ($51) {
      $59 = $$pr;$fl$0113 = $fl$0118;$storemerge2111 = $storemerge2117;
      break L25;
     }
     $52 = $49 | $fl$0118;
     $53 = (($storemerge2117) + 1|0);
     $54 = HEAP8[$53>>0]|0;
     $55 = $54 << 24 >> 24;
     $56 = $55 & -32;
     $57 = ($56|0)==(32);
     if ($57) {
      $$pr = $54;$48 = $55;$fl$0118 = $52;$storemerge2117 = $53;
     } else {
      $59 = $54;$fl$0113 = $52;$storemerge2111 = $53;
      break;
     }
    }
   } else {
    $59 = $44;$fl$0113 = 0;$storemerge2111 = $storemerge;
   }
  } while(0);
  $58 = ($59<<24>>24)==(42);
  do {
   if ($58) {
    $60 = (($storemerge2111) + 1|0);
    $61 = HEAP8[$60>>0]|0;
    $62 = $61 << 24 >> 24;
    $isdigittmp5 = (($62) + -48)|0;
    $isdigit6 = ($isdigittmp5>>>0)<(10);
    if ($isdigit6) {
     $63 = (($storemerge2111) + 2|0);
     $64 = HEAP8[$63>>0]|0;
     $65 = ($64<<24>>24)==(36);
     if ($65) {
      $66 = (($nl_type) + ($isdigittmp5<<2)|0);
      HEAP32[$66>>2] = 10;
      $67 = HEAP8[$60>>0]|0;
      $68 = $67 << 24 >> 24;
      $69 = (($68) + -48)|0;
      $70 = (($nl_arg) + ($69<<3)|0);
      $71 = $70;
      $72 = $71;
      $73 = HEAP32[$72>>2]|0;
      $74 = (($71) + 4)|0;
      $75 = $74;
      $76 = HEAP32[$75>>2]|0;
      $77 = (($storemerge2111) + 3|0);
      $l10n$2 = 1;$storemerge7 = $77;$w$0 = $73;
     } else {
      label = 24;
     }
    } else {
     label = 24;
    }
    if ((label|0) == 24) {
     label = 0;
     $78 = ($l10n$1|0)==(0);
     if (!($78)) {
      $$0 = -1;
      label = 382;
      break L1;
     }
     if (!($1)) {
      $fl$1 = $fl$0113;$fmt84 = $60;$l10n$3 = 0;$w$1 = 0;
      break;
     }
     $arglist_current = HEAP32[$ap>>2]|0;
     $79 = HEAP32[$arglist_current>>2]|0;
     $arglist_next = (($arglist_current) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge7 = $60;$w$0 = $79;
    }
    $80 = ($w$0|0)<(0);
    if ($80) {
     $81 = $fl$0113 | 8192;
     $82 = (0 - ($w$0))|0;
     $fl$1 = $81;$fmt84 = $storemerge7;$l10n$3 = $l10n$2;$w$1 = $82;
    } else {
     $fl$1 = $fl$0113;$fmt84 = $storemerge7;$l10n$3 = $l10n$2;$w$1 = $w$0;
    }
   } else {
    $83 = $59 << 24 >> 24;
    $isdigittmp1$i = (($83) + -48)|0;
    $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
    if ($isdigit2$i) {
     $86 = $83;$89 = $storemerge2111;$i$03$i = 0;
     while(1) {
      $84 = ($i$03$i*10)|0;
      $85 = (($86) + -48)|0;
      $87 = (($85) + ($84))|0;
      $88 = (($89) + 1|0);
      $90 = HEAP8[$88>>0]|0;
      $91 = $90 << 24 >> 24;
      $isdigittmp$i = (($91) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      if ($isdigit$i) {
       $86 = $91;$89 = $88;$i$03$i = $87;
      } else {
       break;
      }
     }
     $92 = ($87|0)<(0);
     if ($92) {
      $$0 = -1;
      label = 382;
      break L1;
     } else {
      $fl$1 = $fl$0113;$fmt84 = $88;$l10n$3 = $l10n$1;$w$1 = $87;
     }
    } else {
     $fl$1 = $fl$0113;$fmt84 = $storemerge2111;$l10n$3 = $l10n$1;$w$1 = 0;
    }
   }
  } while(0);
  $93 = HEAP8[$fmt84>>0]|0;
  $94 = ($93<<24>>24)==(46);
  L46: do {
   if ($94) {
    $95 = (($fmt84) + 1|0);
    $96 = HEAP8[$95>>0]|0;
    $97 = ($96<<24>>24)==(42);
    if (!($97)) {
     $118 = $96 << 24 >> 24;
     $isdigittmp1$i22 = (($118) + -48)|0;
     $isdigit2$i23 = ($isdigittmp1$i22>>>0)<(10);
     if ($isdigit2$i23) {
      $121 = $118;$124 = $95;$i$03$i24 = 0;
     } else {
      $fmt87 = $95;$p$0 = 0;
      break;
     }
     while(1) {
      $119 = ($i$03$i24*10)|0;
      $120 = (($121) + -48)|0;
      $122 = (($120) + ($119))|0;
      $123 = (($124) + 1|0);
      $125 = HEAP8[$123>>0]|0;
      $126 = $125 << 24 >> 24;
      $isdigittmp$i25 = (($126) + -48)|0;
      $isdigit$i26 = ($isdigittmp$i25>>>0)<(10);
      if ($isdigit$i26) {
       $121 = $126;$124 = $123;$i$03$i24 = $122;
      } else {
       $fmt87 = $123;$p$0 = $122;
       break L46;
      }
     }
    }
    $98 = (($fmt84) + 2|0);
    $99 = HEAP8[$98>>0]|0;
    $100 = $99 << 24 >> 24;
    $isdigittmp3 = (($100) + -48)|0;
    $isdigit4 = ($isdigittmp3>>>0)<(10);
    if ($isdigit4) {
     $101 = (($fmt84) + 3|0);
     $102 = HEAP8[$101>>0]|0;
     $103 = ($102<<24>>24)==(36);
     if ($103) {
      $104 = (($nl_type) + ($isdigittmp3<<2)|0);
      HEAP32[$104>>2] = 10;
      $105 = HEAP8[$98>>0]|0;
      $106 = $105 << 24 >> 24;
      $107 = (($106) + -48)|0;
      $108 = (($nl_arg) + ($107<<3)|0);
      $109 = $108;
      $110 = $109;
      $111 = HEAP32[$110>>2]|0;
      $112 = (($109) + 4)|0;
      $113 = $112;
      $114 = HEAP32[$113>>2]|0;
      $115 = (($fmt84) + 4|0);
      $fmt87 = $115;$p$0 = $111;
      break;
     }
    }
    $116 = ($l10n$3|0)==(0);
    if (!($116)) {
     $$0 = -1;
     label = 382;
     break L1;
    }
    if ($1) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $117 = HEAP32[$arglist_current2>>2]|0;
     $arglist_next3 = (($arglist_current2) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $fmt87 = $98;$p$0 = $117;
    } else {
     $fmt87 = $98;$p$0 = 0;
    }
   } else {
    $fmt87 = $fmt84;$p$0 = -1;
   }
  } while(0);
  $fmt86 = $fmt87;$st$0 = 0;
  while(1) {
   $127 = HEAP8[$fmt86>>0]|0;
   $128 = $127 << 24 >> 24;
   $129 = (($128) + -65)|0;
   $130 = ($129>>>0)>(57);
   if ($130) {
    $$0 = -1;
    label = 382;
    break L1;
   }
   $131 = (($fmt86) + 1|0);
   $132 = ((53576 + (($st$0*58)|0)|0) + ($129)|0);
   $133 = HEAP8[$132>>0]|0;
   $134 = $133&255;
   $135 = (($134) + -1)|0;
   $136 = ($135>>>0)<(8);
   if ($136) {
    $fmt86 = $131;$st$0 = $134;
   } else {
    break;
   }
  }
  $137 = ($133<<24>>24)==(0);
  if ($137) {
   $$0 = -1;
   label = 382;
   break;
  }
  $138 = ($133<<24>>24)==(19);
  $139 = ($argpos$0|0)>(-1);
  L65: do {
   if ($138) {
    if ($139) {
     $$0 = -1;
     label = 382;
     break L1;
    } else {
     $1056 = $1053;$1057 = $1054;
     label = 63;
    }
   } else {
    if ($139) {
     $140 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$140>>2] = $134;
     $141 = (($nl_arg) + ($argpos$0<<3)|0);
     $142 = $141;
     $143 = $142;
     $144 = HEAP32[$143>>2]|0;
     $145 = (($142) + 4)|0;
     $146 = $145;
     $147 = HEAP32[$146>>2]|0;
     $1056 = $144;$1057 = $147;
     label = 63;
     break;
    }
    if (!($1)) {
     $$0 = 0;
     label = 382;
     break L1;
    }
    $148 = ($133&255)>(20);
    if ($148) {
     $182 = $127;$191 = $1053;$218 = $1054;
    } else {
     do {
      switch ($134|0) {
      case 9:  {
       $arglist_current5 = HEAP32[$ap>>2]|0;
       $149 = HEAP32[$arglist_current5>>2]|0;
       $arglist_next6 = (($arglist_current5) + 4|0);
       HEAP32[$ap>>2] = $arglist_next6;
       $150 = $149;
       $1058 = $1054;$1059 = $150;
       label = 64;
       break L65;
       break;
      }
      case 10:  {
       $arglist_current8 = HEAP32[$ap>>2]|0;
       $151 = HEAP32[$arglist_current8>>2]|0;
       $arglist_next9 = (($arglist_current8) + 4|0);
       HEAP32[$ap>>2] = $arglist_next9;
       $152 = ($151|0)<(0);
       $153 = $152 << 31 >> 31;
       $1058 = $153;$1059 = $151;
       label = 64;
       break L65;
       break;
      }
      case 11:  {
       $arglist_current11 = HEAP32[$ap>>2]|0;
       $154 = HEAP32[$arglist_current11>>2]|0;
       $arglist_next12 = (($arglist_current11) + 4|0);
       HEAP32[$ap>>2] = $arglist_next12;
       $1058 = 0;$1059 = $154;
       label = 64;
       break L65;
       break;
      }
      case 12:  {
       $arglist_current14 = HEAP32[$ap>>2]|0;
       $155 = $arglist_current14;
       $156 = $155;
       $157 = HEAP32[$156>>2]|0;
       $158 = (($155) + 4)|0;
       $159 = $158;
       $160 = HEAP32[$159>>2]|0;
       $arglist_next15 = (($arglist_current14) + 8|0);
       HEAP32[$ap>>2] = $arglist_next15;
       $1058 = $160;$1059 = $157;
       label = 64;
       break L65;
       break;
      }
      case 13:  {
       $arglist_current17 = HEAP32[$ap>>2]|0;
       $161 = HEAP32[$arglist_current17>>2]|0;
       $arglist_next18 = (($arglist_current17) + 4|0);
       HEAP32[$ap>>2] = $arglist_next18;
       $162 = $161&65535;
       $163 = $162 << 16 >> 16;
       $164 = ($163|0)<(0);
       $165 = $164 << 31 >> 31;
       $sext93 = $161 << 16;
       $166 = $sext93 >> 16;
       $1058 = $165;$1059 = $166;
       label = 64;
       break L65;
       break;
      }
      case 14:  {
       $arglist_current20 = HEAP32[$ap>>2]|0;
       $167 = HEAP32[$arglist_current20>>2]|0;
       $arglist_next21 = (($arglist_current20) + 4|0);
       HEAP32[$ap>>2] = $arglist_next21;
       $$mask1$i31 = $167 & 65535;
       $1058 = 0;$1059 = $$mask1$i31;
       label = 64;
       break L65;
       break;
      }
      case 15:  {
       $arglist_current23 = HEAP32[$ap>>2]|0;
       $168 = HEAP32[$arglist_current23>>2]|0;
       $arglist_next24 = (($arglist_current23) + 4|0);
       HEAP32[$ap>>2] = $arglist_next24;
       $169 = $168&255;
       $170 = $169 << 24 >> 24;
       $171 = ($170|0)<(0);
       $172 = $171 << 31 >> 31;
       $sext = $168 << 24;
       $173 = $sext >> 24;
       $1058 = $172;$1059 = $173;
       label = 64;
       break L65;
       break;
      }
      case 16:  {
       $arglist_current26 = HEAP32[$ap>>2]|0;
       $174 = HEAP32[$arglist_current26>>2]|0;
       $arglist_next27 = (($arglist_current26) + 4|0);
       HEAP32[$ap>>2] = $arglist_next27;
       $$mask$i32 = $174 & 255;
       $1058 = 0;$1059 = $$mask$i32;
       label = 64;
       break L65;
       break;
      }
      case 17:  {
       $arglist_current29 = HEAP32[$ap>>2]|0;
       HEAP32[tempDoublePtr>>2]=HEAP32[$arglist_current29>>2];HEAP32[tempDoublePtr+4>>2]=HEAP32[$arglist_current29+4>>2];$175 = +HEAPF64[tempDoublePtr>>3];
       $arglist_next30 = (($arglist_current29) + 8|0);
       HEAP32[$ap>>2] = $arglist_next30;
       HEAPF64[tempDoublePtr>>3] = $175;$176 = HEAP32[tempDoublePtr>>2]|0;
       $177 = HEAP32[tempDoublePtr+4>>2]|0;
       $1058 = $177;$1059 = $176;
       label = 64;
       break L65;
       break;
      }
      case 18:  {
       $arglist_current32 = HEAP32[$ap>>2]|0;
       HEAP32[tempDoublePtr>>2]=HEAP32[$arglist_current32>>2];HEAP32[tempDoublePtr+4>>2]=HEAP32[$arglist_current32+4>>2];$178 = +HEAPF64[tempDoublePtr>>3];
       $arglist_next33 = (($arglist_current32) + 8|0);
       HEAP32[$ap>>2] = $arglist_next33;
       HEAPF64[tempDoublePtr>>3] = $178;$179 = HEAP32[tempDoublePtr>>2]|0;
       $180 = HEAP32[tempDoublePtr+4>>2]|0;
       $1058 = $180;$1059 = $179;
       label = 64;
       break L65;
       break;
      }
      default: {
       $1058 = $1054;$1059 = $1053;
       label = 64;
       break L65;
      }
      }
     } while(0);
    }
   }
  } while(0);
  if ((label|0) == 63) {
   label = 0;
   if ($1) {
    $1058 = $1057;$1059 = $1056;
    label = 64;
   } else {
    $1053 = $1056;$1054 = $1057;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $34;$l10n$0 = $l10n$3;
    continue;
   }
  }
  if ((label|0) == 64) {
   label = 0;
   $$pre261 = HEAP8[$fmt86>>0]|0;
   $182 = $$pre261;$191 = $1059;$218 = $1058;
  }
  $181 = $182 << 24 >> 24;
  $183 = ($st$0|0)!=(0);
  $184 = $181 & 15;
  $185 = ($184|0)==(3);
  $or$cond9 = $183 & $185;
  $186 = $181 & -33;
  $t$0 = $or$cond9 ? $186 : $181;
  $187 = $fl$1 & 8192;
  $188 = ($187|0)==(0);
  $189 = $fl$1 & -65537;
  $fl$1$ = $188 ? $fl$1 : $189;
  L89: do {
   switch ($t$0|0) {
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    HEAP32[tempDoublePtr>>2] = $191;HEAP32[tempDoublePtr+4>>2] = $218;$383 = +HEAPF64[tempDoublePtr>>3];
    HEAP32[$e2$i>>2] = 0;
    $384 = ($218|0)<(0);
    if ($384) {
     $385 = -$383;
     $$010$i = $385;$pl$0$i = 1;$prefix$0$i = 54064;
    } else {
     $386 = $fl$1$ & 2048;
     $387 = ($386|0)==(0);
     if ($387) {
      $388 = $fl$1$ & 1;
      $389 = ($388|0)==(0);
      $$$i = $389 ? ((54064 + 1|0)) : ((54064 + 6|0));
      $$010$i = $383;$pl$0$i = $388;$prefix$0$i = $$$i;
     } else {
      $$010$i = $383;$pl$0$i = 1;$prefix$0$i = ((54064 + 3|0));
     }
    }
    HEAPF64[tempDoublePtr>>3] = $$010$i;$390 = HEAP32[tempDoublePtr>>2]|0;
    $391 = HEAP32[tempDoublePtr+4>>2]|0;
    $392 = $391 & 2146435072;
    $393 = ($392>>>0)<(2146435072);
    $394 = (0)<(0);
    $395 = ($392|0)==(2146435072);
    $396 = $395 & $394;
    $397 = $393 | $396;
    if (!($397)) {
     $398 = $t$0 & 32;
     $399 = ($398|0)!=(0);
     $400 = $399 ? 54088 : 54096;
     $401 = ($$010$i != $$010$i) | (0.0 != 0.0);
     if ($401) {
      $402 = $399 ? 54104 : 54112;
      $pl$1$i = 0;$s1$0$i = $402;
     } else {
      $pl$1$i = $pl$0$i;$s1$0$i = $400;
     }
     $403 = (($pl$1$i) + 3)|0;
     $404 = $fl$1$ & 8192;
     $405 = ($404|0)==(0);
     $406 = ($w$1|0)>($403|0);
     $or$cond$i40$i = $405 & $406;
     if ($or$cond$i40$i) {
      $407 = (($w$1) - ($403))|0;
      $408 = ($407>>>0)>(256);
      $409 = $408 ? 256 : $407;
      _memset(($pad$i|0),32,($409|0))|0;
      $410 = ($407>>>0)>(255);
      if ($410) {
       $$01$i42$i = $407;
       while(1) {
        ___fwritex($pad$i,256,$f);
        $411 = (($$01$i42$i) + -256)|0;
        $412 = ($411>>>0)>(255);
        if ($412) {
         $$01$i42$i = $411;
        } else {
         break;
        }
       }
       $413 = $407 & 255;
       $$0$lcssa$i44$i = $413;
      } else {
       $$0$lcssa$i44$i = $407;
      }
      ___fwritex($pad$i,$$0$lcssa$i44$i,$f);
     }
     ___fwritex($prefix$0$i,$pl$1$i,$f);
     ___fwritex($s1$0$i,3,$f);
     $414 = $fl$1$ & 73728;
     $415 = ($414|0)==(8192);
     $or$cond$i47$i = $415 & $406;
     if ($or$cond$i47$i) {
      $416 = (($w$1) - ($403))|0;
      $417 = ($416>>>0)>(256);
      $418 = $417 ? 256 : $416;
      _memset(($pad$i|0),32,($418|0))|0;
      $419 = ($416>>>0)>(255);
      if ($419) {
       $$01$i49$i = $416;
       while(1) {
        ___fwritex($pad$i,256,$f);
        $420 = (($$01$i49$i) + -256)|0;
        $421 = ($420>>>0)>(255);
        if ($421) {
         $$01$i49$i = $420;
        } else {
         break;
        }
       }
       $422 = $416 & 255;
       $$0$lcssa$i51$i = $422;
      } else {
       $$0$lcssa$i51$i = $416;
      }
      ___fwritex($pad$i,$$0$lcssa$i51$i,$f);
     }
     $w$$i = $406 ? $w$1 : $403;
     $1053 = $191;$1054 = $218;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $w$$i;$l10n$0 = $l10n$3;
     continue L1;
    }
    $423 = (+_frexp($$010$i,$e2$i));
    $424 = $423 * 2.0;
    $425 = $424 != 0.0;
    if ($425) {
     $426 = HEAP32[$e2$i>>2]|0;
     $427 = (($426) + -1)|0;
     HEAP32[$e2$i>>2] = $427;
    }
    $428 = $t$0 | 32;
    $429 = ($428|0)==(97);
    if ($429) {
     $430 = $t$0 & 32;
     $431 = ($430|0)==(0);
     $432 = (($prefix$0$i) + 9|0);
     $prefix$0$$i = $431 ? $prefix$0$i : $432;
     $433 = $pl$0$i | 2;
     $434 = ($p$0>>>0)>(11);
     $435 = (12 - ($p$0))|0;
     $re$0$i = $434 ? 0 : $435;
     $436 = ($re$0$i|0)==(0);
     do {
      if ($436) {
       $$1$i = $424;
      } else {
       $re$1163$i = $re$0$i;$round$0162$i = 8.0;
       while(1) {
        $437 = (($re$1163$i) + -1)|0;
        $438 = $round$0162$i * 16.0;
        $439 = ($437|0)==(0);
        if ($439) {
         break;
        } else {
         $re$1163$i = $437;$round$0162$i = $438;
        }
       }
       $440 = HEAP8[$prefix$0$$i>>0]|0;
       $441 = ($440<<24>>24)==(45);
       if ($441) {
        $442 = -$424;
        $443 = $442 - $438;
        $444 = $438 + $443;
        $445 = -$444;
        $$1$i = $445;
        break;
       } else {
        $446 = $424 + $438;
        $447 = $446 - $438;
        $$1$i = $447;
        break;
       }
      }
     } while(0);
     $448 = HEAP32[$e2$i>>2]|0;
     $449 = ($448|0)<(0);
     $450 = (0 - ($448))|0;
     $451 = $449 ? $450 : $448;
     $452 = ($451|0)<(0);
     if ($452) {
      $453 = ($451|0)<(0);
      $454 = $453 << 31 >> 31;
      $$05$i$i = $7;$455 = $451;$456 = $454;
      while(1) {
       $457 = (___uremdi3(($455|0),($456|0),10,0)|0);
       $458 = tempRet0;
       $459 = $457 | 48;
       $460 = $459&255;
       $461 = (($$05$i$i) + -1|0);
       HEAP8[$461>>0] = $460;
       $462 = (___udivdi3(($455|0),($456|0),10,0)|0);
       $463 = tempRet0;
       $464 = ($456>>>0)>(9);
       $465 = ($455>>>0)>(4294967295);
       $466 = ($456|0)==(9);
       $467 = $466 & $465;
       $468 = $464 | $467;
       if ($468) {
        $$05$i$i = $461;$455 = $462;$456 = $463;
       } else {
        break;
       }
      }
      $$0$lcssa$i53$i = $461;$$01$lcssa$off0$i$i = $462;
     } else {
      $$0$lcssa$i53$i = $7;$$01$lcssa$off0$i$i = $451;
     }
     $469 = ($$01$lcssa$off0$i$i|0)==(0);
     if ($469) {
      $$1$lcssa$i$i = $$0$lcssa$i53$i;
     } else {
      $$12$i$i = $$0$lcssa$i53$i;$y$03$i$i = $$01$lcssa$off0$i$i;
      while(1) {
       $470 = (($y$03$i$i>>>0) % 10)&-1;
       $471 = $470 | 48;
       $472 = $471&255;
       $473 = (($$12$i$i) + -1|0);
       HEAP8[$473>>0] = $472;
       $474 = (($y$03$i$i>>>0) / 10)&-1;
       $475 = ($y$03$i$i>>>0)<(10);
       if ($475) {
        $$1$lcssa$i$i = $473;
        break;
       } else {
        $$12$i$i = $473;$y$03$i$i = $474;
       }
      }
     }
     $476 = ($$1$lcssa$i$i|0)==($7|0);
     if ($476) {
      HEAP8[$8>>0] = 48;
      $estr$0$i = $8;
     } else {
      $estr$0$i = $$1$lcssa$i$i;
     }
     $477 = HEAP32[$e2$i>>2]|0;
     $478 = $477 >> 31;
     $479 = $478 & 2;
     $480 = (($479) + 43)|0;
     $481 = $480&255;
     $482 = (($estr$0$i) + -1|0);
     HEAP8[$482>>0] = $481;
     $483 = (($t$0) + 15)|0;
     $484 = $483&255;
     $485 = (($estr$0$i) + -2|0);
     HEAP8[$485>>0] = $484;
     $notrhs$i = ($p$0|0)<(1);
     if ($notrhs$i) {
      $486 = $fl$1$ & 8;
      $487 = ($486|0)==(0);
      if ($487) {
       $$2$us$us$i = $$1$i;$s$0$us$us$i = $buf$i;
       while(1) {
        $488 = (~~(($$2$us$us$i)));
        $489 = (54120 + ($488)|0);
        $490 = HEAP8[$489>>0]|0;
        $491 = $490&255;
        $492 = $491 | $430;
        $493 = $492&255;
        $494 = (($s$0$us$us$i) + 1|0);
        HEAP8[$s$0$us$us$i>>0] = $493;
        $495 = (+($488|0));
        $496 = $$2$us$us$i - $495;
        $497 = $496 * 16.0;
        $498 = $494;
        $499 = (($498) - ($0))|0;
        $500 = ($499|0)!=(1);
        $notlhs$us$us$i = $497 == 0.0;
        $or$cond$i73 = $500 | $notlhs$us$us$i;
        if ($or$cond$i73) {
         $s$1$us$us$i = $494;
        } else {
         $501 = (($s$0$us$us$i) + 2|0);
         HEAP8[$494>>0] = 46;
         $s$1$us$us$i = $501;
        }
        $502 = $497 != 0.0;
        if ($502) {
         $$2$us$us$i = $497;$s$0$us$us$i = $s$1$us$us$i;
        } else {
         $s$1$lcssa$i = $s$1$us$us$i;
         break;
        }
       }
      } else {
       $$2$us$i = $$1$i;$s$0$us$i = $buf$i;
       while(1) {
        $503 = (~~(($$2$us$i)));
        $504 = (54120 + ($503)|0);
        $505 = HEAP8[$504>>0]|0;
        $506 = $505&255;
        $507 = $506 | $430;
        $508 = $507&255;
        $509 = (($s$0$us$i) + 1|0);
        HEAP8[$s$0$us$i>>0] = $508;
        $510 = (+($503|0));
        $511 = $$2$us$i - $510;
        $512 = $511 * 16.0;
        $513 = $509;
        $514 = (($513) - ($0))|0;
        $515 = ($514|0)==(1);
        if ($515) {
         $516 = (($s$0$us$i) + 2|0);
         HEAP8[$509>>0] = 46;
         $s$1$us$i = $516;
        } else {
         $s$1$us$i = $509;
        }
        $517 = $512 != 0.0;
        if ($517) {
         $$2$us$i = $512;$s$0$us$i = $s$1$us$i;
        } else {
         $s$1$lcssa$i = $s$1$us$i;
         break;
        }
       }
      }
     } else {
      $$2$i = $$1$i;$s$0$i = $buf$i;
      while(1) {
       $518 = (~~(($$2$i)));
       $519 = (54120 + ($518)|0);
       $520 = HEAP8[$519>>0]|0;
       $521 = $520&255;
       $522 = $521 | $430;
       $523 = $522&255;
       $524 = (($s$0$i) + 1|0);
       HEAP8[$s$0$i>>0] = $523;
       $525 = (+($518|0));
       $526 = $$2$i - $525;
       $527 = $526 * 16.0;
       $528 = $524;
       $529 = (($528) - ($0))|0;
       $530 = ($529|0)==(1);
       if ($530) {
        $531 = (($s$0$i) + 2|0);
        HEAP8[$524>>0] = 46;
        $s$1$i = $531;
       } else {
        $s$1$i = $524;
       }
       $532 = $527 != 0.0;
       if ($532) {
        $$2$i = $527;$s$0$i = $s$1$i;
       } else {
        $s$1$lcssa$i = $s$1$i;
        break;
       }
      }
     }
     $533 = ($p$0|0)!=(0);
     $$pre306$i = $s$1$lcssa$i;
     $534 = (($11) + ($$pre306$i))|0;
     $535 = ($534|0)<($p$0|0);
     $or$cond271 = $533 & $535;
     $536 = $485;
     if ($or$cond271) {
      $537 = (($12) + ($p$0))|0;
      $538 = (($537) - ($536))|0;
      $l$0$i = $538;
     } else {
      $539 = (($10) - ($536))|0;
      $540 = (($539) + ($$pre306$i))|0;
      $l$0$i = $540;
     }
     $541 = (($l$0$i) + ($433))|0;
     $542 = $fl$1$ & 73728;
     $543 = ($542|0)==(0);
     $544 = ($w$1|0)>($541|0);
     $or$cond$i57$i = $543 & $544;
     if ($or$cond$i57$i) {
      $545 = (($w$1) - ($541))|0;
      $546 = ($545>>>0)>(256);
      $547 = $546 ? 256 : $545;
      _memset(($pad$i|0),32,($547|0))|0;
      $548 = ($545>>>0)>(255);
      if ($548) {
       $$01$i59$i = $545;
       while(1) {
        ___fwritex($pad$i,256,$f);
        $549 = (($$01$i59$i) + -256)|0;
        $550 = ($549>>>0)>(255);
        if ($550) {
         $$01$i59$i = $549;
        } else {
         break;
        }
       }
       $551 = $545 & 255;
       $$0$lcssa$i61$i = $551;
      } else {
       $$0$lcssa$i61$i = $545;
      }
      ___fwritex($pad$i,$$0$lcssa$i61$i,$f);
     }
     ___fwritex($prefix$0$$i,$433,$f);
     $552 = ($542|0)==(65536);
     $or$cond$i64$i = $552 & $544;
     if ($or$cond$i64$i) {
      $553 = (($w$1) - ($541))|0;
      $554 = ($553>>>0)>(256);
      $555 = $554 ? 256 : $553;
      _memset(($pad$i|0),48,($555|0))|0;
      $556 = ($553>>>0)>(255);
      if ($556) {
       $$01$i66$i = $553;
       while(1) {
        ___fwritex($pad$i,256,$f);
        $557 = (($$01$i66$i) + -256)|0;
        $558 = ($557>>>0)>(255);
        if ($558) {
         $$01$i66$i = $557;
        } else {
         break;
        }
       }
       $559 = $553 & 255;
       $$0$lcssa$i68$i = $559;
      } else {
       $$0$lcssa$i68$i = $553;
      }
      ___fwritex($pad$i,$$0$lcssa$i68$i,$f);
     }
     $560 = (($$pre306$i) - ($0))|0;
     ___fwritex($buf$i,$560,$f);
     $561 = (($9) - ($536))|0;
     $562 = (($l$0$i) - ($561))|0;
     $563 = (($562) - ($560))|0;
     $564 = ($563|0)>(0);
     if ($564) {
      $565 = ($563>>>0)>(256);
      $566 = $565 ? 256 : $563;
      _memset(($pad$i|0),48,($566|0))|0;
      $567 = ($563>>>0)>(255);
      if ($567) {
       $$01$i72$i = $563;
       while(1) {
        ___fwritex($pad$i,256,$f);
        $568 = (($$01$i72$i) + -256)|0;
        $569 = ($568>>>0)>(255);
        if ($569) {
         $$01$i72$i = $568;
        } else {
         break;
        }
       }
       $570 = $563 & 255;
       $$0$lcssa$i74$i = $570;
      } else {
       $$0$lcssa$i74$i = $563;
      }
      ___fwritex($pad$i,$$0$lcssa$i74$i,$f);
     }
     ___fwritex($485,$561,$f);
     $571 = ($542|0)==(8192);
     $or$cond$i77$i = $571 & $544;
     if ($or$cond$i77$i) {
      $572 = (($w$1) - ($541))|0;
      $573 = ($572>>>0)>(256);
      $574 = $573 ? 256 : $572;
      _memset(($pad$i|0),32,($574|0))|0;
      $575 = ($572>>>0)>(255);
      if ($575) {
       $$01$i79$i = $572;
       while(1) {
        ___fwritex($pad$i,256,$f);
        $576 = (($$01$i79$i) + -256)|0;
        $577 = ($576>>>0)>(255);
        if ($577) {
         $$01$i79$i = $576;
        } else {
         break;
        }
       }
       $578 = $572 & 255;
       $$0$lcssa$i81$i = $578;
      } else {
       $$0$lcssa$i81$i = $572;
      }
      ___fwritex($pad$i,$$0$lcssa$i81$i,$f);
     }
     $w$22$i = $544 ? $w$1 : $541;
     $1053 = $191;$1054 = $218;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $w$22$i;$l10n$0 = $l10n$3;
     continue L1;
    }
    $579 = ($p$0|0)<(0);
    $$p$i = $579 ? 6 : $p$0;
    if ($425) {
     $580 = $424 * 268435456.0;
     $581 = HEAP32[$e2$i>>2]|0;
     $582 = (($581) + -28)|0;
     HEAP32[$e2$i>>2] = $582;
     $$3$i = $580;$584 = $582;
    } else {
     $$pre$i = HEAP32[$e2$i>>2]|0;
     $$3$i = $424;$584 = $$pre$i;
    }
    $583 = ($584|0)<(0);
    $$36$i = $583 ? $big$i : $13;
    $585 = $$36$i;
    $$4$i = $$3$i;$z$0$i = $$36$i;
    while(1) {
     $586 = (~~(($$4$i))>>>0);
     HEAP32[$z$0$i>>2] = $586;
     $587 = (($z$0$i) + 4|0);
     $588 = (+($586>>>0));
     $589 = $$4$i - $588;
     $590 = $589 * 1.0E+9;
     $591 = $590 != 0.0;
     if ($591) {
      $$4$i = $590;$z$0$i = $587;
     } else {
      break;
     }
    }
    $$pr$i = HEAP32[$e2$i>>2]|0;
    $592 = ($$pr$i|0)>(0);
    if ($592) {
     $594 = $$pr$i;$a$1258$i = $$36$i;$z$1257$i = $587;
     while(1) {
      $593 = ($594|0)>(29);
      $595 = $593 ? 29 : $594;
      $d$0249$i = (($z$1257$i) + -4|0);
      $596 = ($d$0249$i>>>0)<($a$1258$i>>>0);
      do {
       if ($596) {
        $a$2$ph$i = $a$1258$i;
       } else {
        $carry$0250$i = 0;$d$0251$i = $d$0249$i;
        while(1) {
         $597 = HEAP32[$d$0251$i>>2]|0;
         $598 = (_bitshift64Shl(($597|0),0,($595|0))|0);
         $599 = tempRet0;
         $600 = (_i64Add(($598|0),($599|0),($carry$0250$i|0),0)|0);
         $601 = tempRet0;
         $602 = (___uremdi3(($600|0),($601|0),1000000000,0)|0);
         $603 = tempRet0;
         HEAP32[$d$0251$i>>2] = $602;
         $604 = (___udivdi3(($600|0),($601|0),1000000000,0)|0);
         $605 = tempRet0;
         $d$0$i = (($d$0251$i) + -4|0);
         $606 = ($d$0$i>>>0)<($a$1258$i>>>0);
         if ($606) {
          break;
         } else {
          $carry$0250$i = $604;$d$0251$i = $d$0$i;
         }
        }
        $607 = ($604|0)==(0);
        if ($607) {
         $a$2$ph$i = $a$1258$i;
         break;
        }
        $608 = (($a$1258$i) + -4|0);
        HEAP32[$608>>2] = $604;
        $a$2$ph$i = $608;
       }
      } while(0);
      $z$2$i = $z$1257$i;
      while(1) {
       $609 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
       if (!($609)) {
        break;
       }
       $610 = (($z$2$i) + -4|0);
       $611 = HEAP32[$610>>2]|0;
       $612 = ($611|0)==(0);
       if ($612) {
        $z$2$i = $610;
       } else {
        break;
       }
      }
      $613 = HEAP32[$e2$i>>2]|0;
      $614 = (($613) - ($595))|0;
      HEAP32[$e2$i>>2] = $614;
      $615 = ($614|0)>(0);
      if ($615) {
       $594 = $614;$a$1258$i = $a$2$ph$i;$z$1257$i = $z$2$i;
      } else {
       $$pr151$i = $614;$a$1$lcssa$i = $a$2$ph$i;$z$1$lcssa$i = $z$2$i;
       break;
      }
     }
    } else {
     $$pr151$i = $$pr$i;$a$1$lcssa$i = $$36$i;$z$1$lcssa$i = $587;
    }
    $616 = ($$pr151$i|0)<(0);
    L222: do {
     if ($616) {
      $617 = (($$p$i) + 25)|0;
      $618 = (($617|0) / 9)&-1;
      $619 = (($618) + 1)|0;
      $620 = ($428|0)==(102);
      if ($620) {
       $621 = (($$36$i) + ($619<<2)|0);
       $623 = $$pr151$i;$a$3244$us$i = $a$1$lcssa$i;$z$3243$us$i = $z$1$lcssa$i;
       while(1) {
        $622 = (0 - ($623))|0;
        $624 = ($622|0)>(9);
        $$23$us$i = $624 ? 9 : $622;
        $625 = ($a$3244$us$i>>>0)<($z$3243$us$i>>>0);
        do {
         if ($625) {
          $650 = 1 << $$23$us$i;
          $644 = (($650) + -1)|0;
          $647 = 1000000000 >>> $$23$us$i;
          $carry3$0238$us$i = 0;$d$1237$us$i = $a$3244$us$i;
          while(1) {
           $642 = HEAP32[$d$1237$us$i>>2]|0;
           $643 = $642 & $644;
           $645 = $642 >>> $$23$us$i;
           $646 = (($645) + ($carry3$0238$us$i))|0;
           HEAP32[$d$1237$us$i>>2] = $646;
           $633 = Math_imul($643, $647)|0;
           $648 = (($d$1237$us$i) + 4|0);
           $649 = ($648>>>0)<($z$3243$us$i>>>0);
           if ($649) {
            $carry3$0238$us$i = $633;$d$1237$us$i = $648;
           } else {
            break;
           }
          }
          $629 = HEAP32[$a$3244$us$i>>2]|0;
          $630 = ($629|0)==(0);
          $631 = (($a$3244$us$i) + 4|0);
          $$a$3$us$i = $630 ? $631 : $a$3244$us$i;
          $632 = ($633|0)==(0);
          if ($632) {
           $$a$3$us308$i = $$a$3$us$i;$z$4$us$i = $z$3243$us$i;
           break;
          }
          $634 = (($z$3243$us$i) + 4|0);
          HEAP32[$z$3243$us$i>>2] = $633;
          $$a$3$us308$i = $$a$3$us$i;$z$4$us$i = $634;
         } else {
          $626 = HEAP32[$a$3244$us$i>>2]|0;
          $627 = ($626|0)==(0);
          $628 = (($a$3244$us$i) + 4|0);
          $$a$3$us307$i = $627 ? $628 : $a$3244$us$i;
          $$a$3$us308$i = $$a$3$us307$i;$z$4$us$i = $z$3243$us$i;
         }
        } while(0);
        $635 = $z$4$us$i;
        $636 = (($635) - ($585))|0;
        $637 = $636 >> 2;
        $638 = ($637|0)>($619|0);
        $$z$4$us$i = $638 ? $621 : $z$4$us$i;
        $639 = HEAP32[$e2$i>>2]|0;
        $640 = (($639) + ($$23$us$i))|0;
        HEAP32[$e2$i>>2] = $640;
        $641 = ($640|0)<(0);
        if ($641) {
         $623 = $640;$a$3244$us$i = $$a$3$us308$i;$z$3243$us$i = $$z$4$us$i;
        } else {
         $a$3$lcssa$i = $$a$3$us308$i;$z$3$lcssa$i = $$z$4$us$i;
         break L222;
        }
       }
      } else {
       $652 = $$pr151$i;$a$3244$i = $a$1$lcssa$i;$z$3243$i = $z$1$lcssa$i;
      }
      while(1) {
       $651 = (0 - ($652))|0;
       $653 = ($651|0)>(9);
       $$23$i = $653 ? 9 : $651;
       $654 = ($a$3244$i>>>0)<($z$3243$i>>>0);
       do {
        if ($654) {
         $658 = 1 << $$23$i;
         $659 = (($658) + -1)|0;
         $660 = 1000000000 >>> $$23$i;
         $carry3$0238$i = 0;$d$1237$i = $a$3244$i;
         while(1) {
          $661 = HEAP32[$d$1237$i>>2]|0;
          $662 = $661 & $659;
          $663 = $661 >>> $$23$i;
          $664 = (($663) + ($carry3$0238$i))|0;
          HEAP32[$d$1237$i>>2] = $664;
          $665 = Math_imul($662, $660)|0;
          $666 = (($d$1237$i) + 4|0);
          $667 = ($666>>>0)<($z$3243$i>>>0);
          if ($667) {
           $carry3$0238$i = $665;$d$1237$i = $666;
          } else {
           break;
          }
         }
         $668 = HEAP32[$a$3244$i>>2]|0;
         $669 = ($668|0)==(0);
         $670 = (($a$3244$i) + 4|0);
         $$a$3$i = $669 ? $670 : $a$3244$i;
         $671 = ($665|0)==(0);
         if ($671) {
          $$a$3310$i = $$a$3$i;$z$4$i = $z$3243$i;
          break;
         }
         $672 = (($z$3243$i) + 4|0);
         HEAP32[$z$3243$i>>2] = $665;
         $$a$3310$i = $$a$3$i;$z$4$i = $672;
        } else {
         $655 = HEAP32[$a$3244$i>>2]|0;
         $656 = ($655|0)==(0);
         $657 = (($a$3244$i) + 4|0);
         $$a$3309$i = $656 ? $657 : $a$3244$i;
         $$a$3310$i = $$a$3309$i;$z$4$i = $z$3243$i;
        }
       } while(0);
       $673 = $z$4$i;
       $674 = $$a$3310$i;
       $675 = (($673) - ($674))|0;
       $676 = $675 >> 2;
       $677 = ($676|0)>($619|0);
       if ($677) {
        $678 = (($$a$3310$i) + ($619<<2)|0);
        $z$5$i = $678;
       } else {
        $z$5$i = $z$4$i;
       }
       $679 = HEAP32[$e2$i>>2]|0;
       $680 = (($679) + ($$23$i))|0;
       HEAP32[$e2$i>>2] = $680;
       $681 = ($680|0)<(0);
       if ($681) {
        $652 = $680;$a$3244$i = $$a$3310$i;$z$3243$i = $z$5$i;
       } else {
        $a$3$lcssa$i = $$a$3310$i;$z$3$lcssa$i = $z$5$i;
        break;
       }
      }
     } else {
      $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
     }
    } while(0);
    $682 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
    do {
     if ($682) {
      $683 = $a$3$lcssa$i;
      $684 = (($585) - ($683))|0;
      $685 = $684 >> 2;
      $686 = ($685*9)|0;
      $687 = HEAP32[$a$3$lcssa$i>>2]|0;
      $688 = ($687>>>0)<(10);
      if ($688) {
       $e$1$i = $686;
       break;
      } else {
       $e$0233$i = $686;$i$0232$i = 10;
      }
      while(1) {
       $689 = ($i$0232$i*10)|0;
       $690 = (($e$0233$i) + 1)|0;
       $691 = ($687>>>0)<($689>>>0);
       if ($691) {
        $e$1$i = $690;
        break;
       } else {
        $e$0233$i = $690;$i$0232$i = $689;
       }
      }
     } else {
      $e$1$i = 0;
     }
    } while(0);
    $692 = ($428|0)!=(102);
    $693 = $692 ? $e$1$i : 0;
    $694 = (($$p$i) - ($693))|0;
    $695 = ($428|0)==(103);
    $696 = ($$p$i|0)!=(0);
    $$24$i = $695 & $696;
    $$neg156$i = $$24$i << 31 >> 31;
    $697 = (($694) + ($$neg156$i))|0;
    $698 = $z$3$lcssa$i;
    $699 = (($698) - ($585))|0;
    $700 = $699 >> 2;
    $701 = ($700*9)|0;
    $702 = (($701) + -9)|0;
    $703 = ($697|0)<($702|0);
    if ($703) {
     $704 = (($697) + 9216)|0;
     $705 = (($704|0) / 9)&-1;
     $$sum$i = (($705) + -1023)|0;
     $706 = (($$36$i) + ($$sum$i<<2)|0);
     $707 = (($704|0) % 9)&-1;
     $j$0224$i = (($707) + 1)|0;
     $708 = ($j$0224$i|0)<(9);
     if ($708) {
      $i$1225$i = 10;$j$0226$i = $j$0224$i;
      while(1) {
       $709 = ($i$1225$i*10)|0;
       $j$0$i = (($j$0226$i) + 1)|0;
       $exitcond$i = ($j$0$i|0)==(9);
       if ($exitcond$i) {
        $i$1$lcssa$i = $709;
        break;
       } else {
        $i$1225$i = $709;$j$0226$i = $j$0$i;
       }
      }
     } else {
      $i$1$lcssa$i = 10;
     }
     $710 = HEAP32[$706>>2]|0;
     $711 = (($710>>>0) % ($i$1$lcssa$i>>>0))&-1;
     $712 = ($711|0)==(0);
     if ($712) {
      $$sum18$i = (($705) + -1022)|0;
      $713 = (($$36$i) + ($$sum18$i<<2)|0);
      $714 = ($713|0)==($z$3$lcssa$i|0);
      if ($714) {
       $a$7$i = $a$3$lcssa$i;$d$3$i = $706;$e$3$i = $e$1$i;
      } else {
       label = 243;
      }
     } else {
      label = 243;
     }
     do {
      if ((label|0) == 243) {
       label = 0;
       $715 = (($710>>>0) / ($i$1$lcssa$i>>>0))&-1;
       $716 = $715 & 1;
       $717 = ($716|0)==(0);
       $$25$i = $717 ? 9007199254740992.0 : 9007199254740994.0;
       $718 = (($i$1$lcssa$i|0) / 2)&-1;
       $719 = ($711>>>0)<($718>>>0);
       do {
        if ($719) {
         $small$0$i = 0.5;
        } else {
         $720 = ($711|0)==($718|0);
         if ($720) {
          $$sum19$i = (($705) + -1022)|0;
          $721 = (($$36$i) + ($$sum19$i<<2)|0);
          $722 = ($721|0)==($z$3$lcssa$i|0);
          if ($722) {
           $small$0$i = 1.0;
           break;
          }
         }
         $small$0$i = 1.5;
        }
       } while(0);
       $723 = ($pl$0$i|0)==(0);
       do {
        if ($723) {
         $round6$1$i = $$25$i;$small$1$i = $small$0$i;
        } else {
         $724 = HEAP8[$prefix$0$i>>0]|0;
         $725 = ($724<<24>>24)==(45);
         if (!($725)) {
          $round6$1$i = $$25$i;$small$1$i = $small$0$i;
          break;
         }
         $726 = $$25$i * -1.0;
         $727 = $small$0$i * -1.0;
         $round6$1$i = $726;$small$1$i = $727;
        }
       } while(0);
       $728 = (($710) - ($711))|0;
       HEAP32[$706>>2] = $728;
       $729 = $round6$1$i + $small$1$i;
       $730 = $729 != $round6$1$i;
       if (!($730)) {
        $a$7$i = $a$3$lcssa$i;$d$3$i = $706;$e$3$i = $e$1$i;
        break;
       }
       $731 = (($728) + ($i$1$lcssa$i))|0;
       HEAP32[$706>>2] = $731;
       $732 = ($731>>>0)>(999999999);
       if ($732) {
        $a$5218$i = $a$3$lcssa$i;$d$2217$i = $706;
        while(1) {
         $733 = (($d$2217$i) + -4|0);
         HEAP32[$d$2217$i>>2] = 0;
         $734 = ($733>>>0)<($a$5218$i>>>0);
         if ($734) {
          $735 = (($a$5218$i) + -4|0);
          HEAP32[$735>>2] = 0;
          $a$6$i = $735;
         } else {
          $a$6$i = $a$5218$i;
         }
         $736 = HEAP32[$733>>2]|0;
         $737 = (($736) + 1)|0;
         HEAP32[$733>>2] = $737;
         $738 = ($737>>>0)>(999999999);
         if ($738) {
          $a$5218$i = $a$6$i;$d$2217$i = $733;
         } else {
          $a$5$lcssa$i = $a$6$i;$d$2$lcssa$i = $733;
          break;
         }
        }
       } else {
        $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $706;
       }
       $739 = $a$5$lcssa$i;
       $740 = (($585) - ($739))|0;
       $741 = $740 >> 2;
       $742 = ($741*9)|0;
       $743 = HEAP32[$a$5$lcssa$i>>2]|0;
       $744 = ($743>>>0)<(10);
       if ($744) {
        $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $742;
        break;
       } else {
        $e$2213$i = $742;$i$2212$i = 10;
       }
       while(1) {
        $745 = ($i$2212$i*10)|0;
        $746 = (($e$2213$i) + 1)|0;
        $747 = ($743>>>0)<($745>>>0);
        if ($747) {
         $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $746;
         break;
        } else {
         $e$2213$i = $746;$i$2212$i = $745;
        }
       }
      }
     } while(0);
     $748 = (($d$3$i) + 4|0);
     $749 = ($z$3$lcssa$i>>>0)>($748>>>0);
     $$z$3$i = $749 ? $748 : $z$3$lcssa$i;
     $a$8$ph$i = $a$7$i;$e$4$ph$i = $e$3$i;$z$6$ph$i = $$z$3$i;
    } else {
     $a$8$ph$i = $a$3$lcssa$i;$e$4$ph$i = $e$1$i;$z$6$ph$i = $z$3$lcssa$i;
    }
    $750 = (0 - ($e$4$ph$i))|0;
    $z$6$i = $z$6$ph$i;
    while(1) {
     $751 = ($z$6$i>>>0)>($a$8$ph$i>>>0);
     if (!($751)) {
      $$lcssa292$i = 0;
      break;
     }
     $752 = (($z$6$i) + -4|0);
     $753 = HEAP32[$752>>2]|0;
     $754 = ($753|0)==(0);
     if ($754) {
      $z$6$i = $752;
     } else {
      $$lcssa292$i = 1;
      break;
     }
    }
    do {
     if ($695) {
      $755 = ($$p$i|0)==(0);
      $756 = $755&1;
      $$$p$i = (($756) + ($$p$i))|0;
      $757 = ($$$p$i|0)>($e$4$ph$i|0);
      $758 = ($e$4$ph$i|0)>(-5);
      $or$cond5$i = $757 & $758;
      if ($or$cond5$i) {
       $759 = (($t$0) + -1)|0;
       $$neg157$i = (($$$p$i) + -1)|0;
       $760 = (($$neg157$i) - ($e$4$ph$i))|0;
       $$016$i = $759;$$213$i = $760;
      } else {
       $761 = (($t$0) + -2)|0;
       $762 = (($$$p$i) + -1)|0;
       $$016$i = $761;$$213$i = $762;
      }
      $763 = $fl$1$ & 8;
      $764 = ($763|0)==(0);
      if (!($764)) {
       $$117$i = $$016$i;$$314$i = $$213$i;
       break;
      }
      do {
       if ($$lcssa292$i) {
        $765 = (($z$6$i) + -4|0);
        $766 = HEAP32[$765>>2]|0;
        $767 = ($766|0)==(0);
        if ($767) {
         $j$2$i = 9;
         break;
        }
        $768 = (($766>>>0) % 10)&-1;
        $769 = ($768|0)==(0);
        if ($769) {
         $i$3204$i = 10;$j$1205$i = 0;
        } else {
         $j$2$i = 0;
         break;
        }
        while(1) {
         $770 = ($i$3204$i*10)|0;
         $771 = (($j$1205$i) + 1)|0;
         $772 = (($766>>>0) % ($770>>>0))&-1;
         $773 = ($772|0)==(0);
         if ($773) {
          $i$3204$i = $770;$j$1205$i = $771;
         } else {
          $j$2$i = $771;
          break;
         }
        }
       } else {
        $j$2$i = 9;
       }
      } while(0);
      $774 = $$016$i | 32;
      $775 = ($774|0)==(102);
      $776 = $z$6$i;
      $777 = (($776) - ($585))|0;
      $778 = $777 >> 2;
      $779 = ($778*9)|0;
      $780 = (($779) + -9)|0;
      if ($775) {
       $781 = (($780) - ($j$2$i))|0;
       $782 = ($781|0)<(0);
       $$26$i = $782 ? 0 : $781;
       $783 = ($$213$i|0)<($$26$i|0);
       $$213$$26$i = $783 ? $$213$i : $$26$i;
       $$117$i = $$016$i;$$314$i = $$213$$26$i;
       break;
      } else {
       $784 = (($780) + ($e$4$ph$i))|0;
       $785 = (($784) - ($j$2$i))|0;
       $786 = ($785|0)<(0);
       $$28$i = $786 ? 0 : $785;
       $787 = ($$213$i|0)<($$28$i|0);
       $$213$$28$i = $787 ? $$213$i : $$28$i;
       $$117$i = $$016$i;$$314$i = $$213$$28$i;
       break;
      }
     } else {
      $$117$i = $t$0;$$314$i = $$p$i;
     }
    } while(0);
    $788 = ($$314$i|0)!=(0);
    if ($788) {
     $792 = 1;
    } else {
     $789 = $fl$1$ & 8;
     $790 = ($789|0)!=(0);
     $792 = $790;
    }
    $791 = $792&1;
    $793 = $$117$i | 32;
    $794 = ($793|0)==(102);
    if ($794) {
     $795 = ($e$4$ph$i|0)>(0);
     $796 = $795 ? $e$4$ph$i : 0;
     $$pn$i = $796;$estr$2$i = 0;
    } else {
     $797 = ($e$4$ph$i|0)<(0);
     $798 = $797 ? $750 : $e$4$ph$i;
     $799 = ($798|0)<(0);
     if ($799) {
      $800 = ($798|0)<(0);
      $801 = $800 << 31 >> 31;
      $$05$i84$i = $7;$802 = $798;$803 = $801;
      while(1) {
       $804 = (___uremdi3(($802|0),($803|0),10,0)|0);
       $805 = tempRet0;
       $806 = $804 | 48;
       $807 = $806&255;
       $808 = (($$05$i84$i) + -1|0);
       HEAP8[$808>>0] = $807;
       $809 = (___udivdi3(($802|0),($803|0),10,0)|0);
       $810 = tempRet0;
       $811 = ($803>>>0)>(9);
       $812 = ($802>>>0)>(4294967295);
       $813 = ($803|0)==(9);
       $814 = $813 & $812;
       $815 = $811 | $814;
       if ($815) {
        $$05$i84$i = $808;$802 = $809;$803 = $810;
       } else {
        break;
       }
      }
      $$0$lcssa$i89$i = $808;$$01$lcssa$off0$i90$i = $809;
     } else {
      $$0$lcssa$i89$i = $7;$$01$lcssa$off0$i90$i = $798;
     }
     $816 = ($$01$lcssa$off0$i90$i|0)==(0);
     if ($816) {
      $estr$1$ph$i = $$0$lcssa$i89$i;
     } else {
      $$12$i92$i = $$0$lcssa$i89$i;$y$03$i91$i = $$01$lcssa$off0$i90$i;
      while(1) {
       $817 = (($y$03$i91$i>>>0) % 10)&-1;
       $818 = $817 | 48;
       $819 = $818&255;
       $820 = (($$12$i92$i) + -1|0);
       HEAP8[$820>>0] = $819;
       $821 = (($y$03$i91$i>>>0) / 10)&-1;
       $822 = ($y$03$i91$i>>>0)<(10);
       if ($822) {
        $estr$1$ph$i = $820;
        break;
       } else {
        $$12$i92$i = $820;$y$03$i91$i = $821;
       }
      }
     }
     $823 = $estr$1$ph$i;
     $824 = (($9) - ($823))|0;
     $825 = ($824|0)<(2);
     if ($825) {
      $estr$1195$i = $estr$1$ph$i;
      while(1) {
       $826 = (($estr$1195$i) + -1|0);
       HEAP8[$826>>0] = 48;
       $827 = $826;
       $828 = (($9) - ($827))|0;
       $829 = ($828|0)<(2);
       if ($829) {
        $estr$1195$i = $826;
       } else {
        $estr$1$lcssa$i = $826;
        break;
       }
      }
     } else {
      $estr$1$lcssa$i = $estr$1$ph$i;
     }
     $830 = $e$4$ph$i >> 31;
     $831 = $830 & 2;
     $832 = (($831) + 43)|0;
     $833 = $832&255;
     $834 = (($estr$1$lcssa$i) + -1|0);
     HEAP8[$834>>0] = $833;
     $835 = $$117$i&255;
     $836 = (($estr$1$lcssa$i) + -2|0);
     HEAP8[$836>>0] = $835;
     $837 = $836;
     $838 = (($9) - ($837))|0;
     $$pn$i = $838;$estr$2$i = $836;
    }
    $839 = (($pl$0$i) + 1)|0;
    $840 = (($839) + ($$314$i))|0;
    $l$1$i = (($840) + ($791))|0;
    $841 = (($l$1$i) + ($$pn$i))|0;
    $842 = $fl$1$ & 73728;
    $843 = ($842|0)==(0);
    $844 = ($w$1|0)>($841|0);
    $or$cond$i98$i = $843 & $844;
    if ($or$cond$i98$i) {
     $845 = (($w$1) - ($841))|0;
     $846 = ($845>>>0)>(256);
     $847 = $846 ? 256 : $845;
     _memset(($pad$i|0),32,($847|0))|0;
     $848 = ($845>>>0)>(255);
     if ($848) {
      $$01$i100$i = $845;
      while(1) {
       ___fwritex($pad$i,256,$f);
       $849 = (($$01$i100$i) + -256)|0;
       $850 = ($849>>>0)>(255);
       if ($850) {
        $$01$i100$i = $849;
       } else {
        break;
       }
      }
      $851 = $845 & 255;
      $$0$lcssa$i102$i = $851;
     } else {
      $$0$lcssa$i102$i = $845;
     }
     ___fwritex($pad$i,$$0$lcssa$i102$i,$f);
    }
    ___fwritex($prefix$0$i,$pl$0$i,$f);
    $852 = ($842|0)==(65536);
    $or$cond$i105$i = $852 & $844;
    if ($or$cond$i105$i) {
     $853 = (($w$1) - ($841))|0;
     $854 = ($853>>>0)>(256);
     $855 = $854 ? 256 : $853;
     _memset(($pad$i|0),48,($855|0))|0;
     $856 = ($853>>>0)>(255);
     if ($856) {
      $$01$i107$i = $853;
      while(1) {
       ___fwritex($pad$i,256,$f);
       $857 = (($$01$i107$i) + -256)|0;
       $858 = ($857>>>0)>(255);
       if ($858) {
        $$01$i107$i = $857;
       } else {
        break;
       }
      }
      $859 = $853 & 255;
      $$0$lcssa$i109$i = $859;
     } else {
      $$0$lcssa$i109$i = $853;
     }
     ___fwritex($pad$i,$$0$lcssa$i109$i,$f);
    }
    do {
     if ($794) {
      $860 = ($a$8$ph$i>>>0)>($$36$i>>>0);
      $r$0$a$8$i = $860 ? $$36$i : $a$8$ph$i;
      $d$4180$i = $r$0$a$8$i;
      while(1) {
       $861 = HEAP32[$d$4180$i>>2]|0;
       $862 = ($861|0)==(0);
       if ($862) {
        $$1$lcssa$i117$i = $14;
       } else {
        $$12$i115$i = $14;$y$03$i114$i = $861;
        while(1) {
         $863 = (($y$03$i114$i>>>0) % 10)&-1;
         $864 = $863 | 48;
         $865 = $864&255;
         $866 = (($$12$i115$i) + -1|0);
         HEAP8[$866>>0] = $865;
         $867 = (($y$03$i114$i>>>0) / 10)&-1;
         $868 = ($y$03$i114$i>>>0)<(10);
         if ($868) {
          $$1$lcssa$i117$i = $866;
          break;
         } else {
          $$12$i115$i = $866;$y$03$i114$i = $867;
         }
        }
       }
       $869 = ($d$4180$i|0)==($r$0$a$8$i|0);
       do {
        if ($869) {
         $873 = ($$1$lcssa$i117$i|0)==($14|0);
         if (!($873)) {
          $s7$1$i = $$1$lcssa$i117$i;
          break;
         }
         HEAP8[$16>>0] = 48;
         $s7$1$i = $16;
        } else {
         $870 = ($$1$lcssa$i117$i>>>0)>($buf$i>>>0);
         if ($870) {
          $s7$0177$i = $$1$lcssa$i117$i;
         } else {
          $s7$1$i = $$1$lcssa$i117$i;
          break;
         }
         while(1) {
          $871 = (($s7$0177$i) + -1|0);
          HEAP8[$871>>0] = 48;
          $872 = ($871>>>0)>($buf$i>>>0);
          if ($872) {
           $s7$0177$i = $871;
          } else {
           $s7$1$i = $871;
           break;
          }
         }
        }
       } while(0);
       $874 = $s7$1$i;
       $875 = (($15) - ($874))|0;
       ___fwritex($s7$1$i,$875,$f);
       $876 = (($d$4180$i) + 4|0);
       $877 = ($876>>>0)>($$36$i>>>0);
       if ($877) {
        break;
       } else {
        $d$4180$i = $876;
       }
      }
      $$not$i = $788 ^ 1;
      $878 = $fl$1$ & 8;
      $879 = ($878|0)==(0);
      $or$cond32$i = $879 & $$not$i;
      if (!($or$cond32$i)) {
       ___fwritex(54136,1,$f);
      }
      $880 = ($876>>>0)<($z$6$i>>>0);
      $881 = ($$314$i|0)>(0);
      $or$cond7169$i = $880 & $881;
      if ($or$cond7169$i) {
       $$415171$i = $$314$i;$d$5170$i = $876;
       while(1) {
        $882 = HEAP32[$d$5170$i>>2]|0;
        $883 = ($882|0)==(0);
        if ($883) {
         $s8$0165$i = $14;
         label = 312;
        } else {
         $$12$i124$i = $14;$y$03$i123$i = $882;
         while(1) {
          $884 = (($y$03$i123$i>>>0) % 10)&-1;
          $885 = $884 | 48;
          $886 = $885&255;
          $887 = (($$12$i124$i) + -1|0);
          HEAP8[$887>>0] = $886;
          $888 = (($y$03$i123$i>>>0) / 10)&-1;
          $889 = ($y$03$i123$i>>>0)<(10);
          if ($889) {
           break;
          } else {
           $$12$i124$i = $887;$y$03$i123$i = $888;
          }
         }
         $890 = ($887>>>0)>($buf$i>>>0);
         if ($890) {
          $s8$0165$i = $887;
          label = 312;
         } else {
          $s8$0$lcssa$i = $887;
         }
        }
        if ((label|0) == 312) {
         while(1) {
          label = 0;
          $891 = (($s8$0165$i) + -1|0);
          HEAP8[$891>>0] = 48;
          $892 = ($891>>>0)>($buf$i>>>0);
          if ($892) {
           $s8$0165$i = $891;
           label = 312;
          } else {
           $s8$0$lcssa$i = $891;
           break;
          }
         }
        }
        $893 = ($$415171$i|0)>(9);
        $894 = $893 ? 9 : $$415171$i;
        ___fwritex($s8$0$lcssa$i,$894,$f);
        $895 = (($d$5170$i) + 4|0);
        $896 = (($$415171$i) + -9)|0;
        $897 = ($895>>>0)<($z$6$i>>>0);
        $898 = ($896|0)>(0);
        $or$cond7$i = $897 & $898;
        if ($or$cond7$i) {
         $$415171$i = $896;$d$5170$i = $895;
        } else {
         $$415$lcssa$i = $896;
         break;
        }
       }
      } else {
       $$415$lcssa$i = $$314$i;
      }
      $899 = ($$415$lcssa$i|0)>(0);
      if (!($899)) {
       break;
      }
      $900 = ($$415$lcssa$i>>>0)>(256);
      $901 = $900 ? 256 : $$415$lcssa$i;
      _memset(($pad$i|0),48,($901|0))|0;
      $902 = ($$415$lcssa$i>>>0)>(255);
      if ($902) {
       $$01$i131$i = $$415$lcssa$i;
       while(1) {
        ___fwritex($pad$i,256,$f);
        $903 = (($$01$i131$i) + -256)|0;
        $904 = ($903>>>0)>(255);
        if ($904) {
         $$01$i131$i = $903;
        } else {
         break;
        }
       }
       $905 = $$415$lcssa$i & 255;
       $$0$lcssa$i133$i = $905;
      } else {
       $$0$lcssa$i133$i = $$415$lcssa$i;
      }
      ___fwritex($pad$i,$$0$lcssa$i133$i,$f);
     } else {
      $906 = (($a$8$ph$i) + 4|0);
      $z$6$$i = $$lcssa292$i ? $z$6$i : $906;
      $907 = ($$314$i|0)>(-1);
      do {
       if ($907) {
        $908 = $fl$1$ & 8;
        $909 = ($908|0)==(0);
        $$5189$i = $$314$i;$d$6188$i = $a$8$ph$i;
        while(1) {
         $910 = HEAP32[$d$6188$i>>2]|0;
         $911 = ($910|0)==(0);
         if ($911) {
          label = 324;
         } else {
          $$12$i139$i = $14;$y$03$i138$i = $910;
          while(1) {
           $912 = (($y$03$i138$i>>>0) % 10)&-1;
           $913 = $912 | 48;
           $914 = $913&255;
           $915 = (($$12$i139$i) + -1|0);
           HEAP8[$915>>0] = $914;
           $916 = (($y$03$i138$i>>>0) / 10)&-1;
           $917 = ($y$03$i138$i>>>0)<(10);
           if ($917) {
            break;
           } else {
            $$12$i139$i = $915;$y$03$i138$i = $916;
           }
          }
          $918 = ($915|0)==($14|0);
          if ($918) {
           label = 324;
          } else {
           $s9$0$i = $915;
          }
         }
         if ((label|0) == 324) {
          label = 0;
          HEAP8[$16>>0] = 48;
          $s9$0$i = $16;
         }
         $919 = ($d$6188$i|0)==($a$8$ph$i|0);
         do {
          if ($919) {
           $923 = (($s9$0$i) + 1|0);
           ___fwritex($s9$0$i,1,$f);
           $924 = ($$5189$i|0)<(1);
           $or$cond34$i = $924 & $909;
           if ($or$cond34$i) {
            $s9$2$i = $923;
            break;
           }
           ___fwritex(54136,1,$f);
           $s9$2$i = $923;
          } else {
           $920 = ($s9$0$i>>>0)>($buf$i>>>0);
           if ($920) {
            $s9$1184$i = $s9$0$i;
           } else {
            $s9$2$i = $s9$0$i;
            break;
           }
           while(1) {
            $921 = (($s9$1184$i) + -1|0);
            HEAP8[$921>>0] = 48;
            $922 = ($921>>>0)>($buf$i>>>0);
            if ($922) {
             $s9$1184$i = $921;
            } else {
             $s9$2$i = $921;
             break;
            }
           }
          }
         } while(0);
         $925 = $s9$2$i;
         $926 = (($15) - ($925))|0;
         $927 = ($$5189$i|0)>($926|0);
         $$$5$i = $927 ? $926 : $$5189$i;
         ___fwritex($s9$2$i,$$$5$i,$f);
         $928 = (($$5189$i) - ($926))|0;
         $929 = (($d$6188$i) + 4|0);
         $930 = ($929>>>0)<($z$6$$i>>>0);
         $931 = ($928|0)>(-1);
         $or$cond9$i = $930 & $931;
         if ($or$cond9$i) {
          $$5189$i = $928;$d$6188$i = $929;
         } else {
          break;
         }
        }
        $932 = ($928|0)>(0);
        if (!($932)) {
         break;
        }
        $933 = ($928>>>0)>(256);
        $934 = $933 ? 256 : $928;
        _memset(($pad$i|0),48,($934|0))|0;
        $935 = ($928>>>0)>(255);
        if ($935) {
         $$01$i146$i = $928;
         while(1) {
          ___fwritex($pad$i,256,$f);
          $936 = (($$01$i146$i) + -256)|0;
          $937 = ($936>>>0)>(255);
          if ($937) {
           $$01$i146$i = $936;
          } else {
           break;
          }
         }
         $938 = $928 & 255;
         $$0$lcssa$i148$i = $938;
        } else {
         $$0$lcssa$i148$i = $928;
        }
        ___fwritex($pad$i,$$0$lcssa$i148$i,$f);
       }
      } while(0);
      $939 = $estr$2$i;
      $940 = (($9) - ($939))|0;
      ___fwritex($estr$2$i,$940,$f);
     }
    } while(0);
    $941 = ($842|0)==(8192);
    $or$cond$i$i = $941 & $844;
    if ($or$cond$i$i) {
     $942 = (($w$1) - ($841))|0;
     $943 = ($942>>>0)>(256);
     $944 = $943 ? 256 : $942;
     _memset(($pad$i|0),32,($944|0))|0;
     $945 = ($942>>>0)>(255);
     if ($945) {
      $$01$i$i = $942;
      while(1) {
       ___fwritex($pad$i,256,$f);
       $946 = (($$01$i$i) + -256)|0;
       $947 = ($946>>>0)>(255);
       if ($947) {
        $$01$i$i = $946;
       } else {
        break;
       }
      }
      $948 = $942 & 255;
      $$0$lcssa$i$i = $948;
     } else {
      $$0$lcssa$i$i = $942;
     }
     ___fwritex($pad$i,$$0$lcssa$i$i,$f);
    }
    $w$35$i = $844 ? $w$1 : $841;
    $1053 = $191;$1054 = $218;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $w$35$i;$l10n$0 = $l10n$3;
    continue L1;
    break;
   }
   case 67:  {
    HEAP32[$wc>>2] = $191;
    HEAP32[$5>>2] = 0;
    $1062 = $wc;$1063 = $6;$p$4266 = -1;
    label = 112;
    break;
   }
   case 83:  {
    $344 = $191;
    $345 = ($p$0|0)==(0);
    if ($345) {
     $1064 = $191;$1065 = $344;$i$0$lcssa267 = 0;
     label = 117;
    } else {
     $1062 = $344;$1063 = $191;$p$4266 = $p$0;
     label = 112;
    }
    break;
   }
   case 110:  {
    switch ($st$0|0) {
    case 0:  {
     $190 = $191;
     HEAP32[$190>>2] = $cnt$1;
     $1053 = $191;$1054 = $218;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 1:  {
     $192 = $191;
     HEAP32[$192>>2] = $cnt$1;
     $1053 = $191;$1054 = $218;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 2:  {
     $193 = ($cnt$1|0)<(0);
     $194 = $193 << 31 >> 31;
     $195 = $191;
     $196 = $195;
     $197 = $196;
     HEAP32[$197>>2] = $cnt$1;
     $198 = (($196) + 4)|0;
     $199 = $198;
     HEAP32[$199>>2] = $194;
     $1053 = $191;$1054 = $218;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 3:  {
     $200 = $cnt$1&65535;
     $201 = $191;
     HEAP16[$201>>1] = $200;
     $1053 = $191;$1054 = $218;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 4:  {
     $202 = $cnt$1&255;
     $203 = $191;
     HEAP8[$203>>0] = $202;
     $1053 = $191;$1054 = $218;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 6:  {
     $204 = $191;
     HEAP32[$204>>2] = $cnt$1;
     $1053 = $191;$1054 = $218;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 7:  {
     $205 = ($cnt$1|0)<(0);
     $206 = $205 << 31 >> 31;
     $207 = $191;
     $208 = $207;
     $209 = $208;
     HEAP32[$209>>2] = $cnt$1;
     $210 = (($208) + 4)|0;
     $211 = $210;
     HEAP32[$211>>2] = $206;
     $1053 = $191;$1054 = $218;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    default: {
     $1053 = $191;$1054 = $218;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $212 = ($p$0>>>0)>(8);
    $213 = $212 ? $p$0 : 8;
    $214 = $fl$1$ | 8;
    $fl$3 = $214;$p$1 = $213;$t$1 = 120;
    label = 75;
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
    label = 75;
    break;
   }
   case 109:  {
    $305 = (___errno_location()|0);
    $306 = HEAP32[$305>>2]|0;
    $307 = (_strerror(($306|0))|0);
    $a$1 = $307;
    label = 96;
    break;
   }
   case 115:  {
    $308 = $191;
    $309 = ($191|0)==(0);
    $$15 = $309 ? 54056 : $308;
    $a$1 = $$15;
    label = 96;
    break;
   }
   case 111:  {
    $238 = ($191|0)==(0);
    $239 = ($218|0)==(0);
    $240 = $238 & $239;
    if ($240) {
     $$0$lcssa$i45 = $2;
    } else {
     $$03$i42 = $2;$242 = $191;$246 = $218;
     while(1) {
      $241 = $242 & 7;
      $243 = $241 | 48;
      $244 = $243&255;
      $245 = (($$03$i42) + -1|0);
      HEAP8[$245>>0] = $244;
      $247 = (_bitshift64Lshr(($242|0),($246|0),3)|0);
      $248 = tempRet0;
      $249 = ($247|0)==(0);
      $250 = ($248|0)==(0);
      $251 = $249 & $250;
      if ($251) {
       $$0$lcssa$i45 = $245;
       break;
      } else {
       $$03$i42 = $245;$242 = $247;$246 = $248;
      }
     }
    }
    $252 = $fl$1$ & 8;
    $253 = ($252|0)==(0);
    $or$cond13 = $253 | $240;
    $$19 = $or$cond13 ? 54040 : ((54040 + 5|0));
    $254 = $or$cond13&1;
    $$20 = $254 ^ 1;
    $293 = $191;$295 = $218;$a$0 = $$0$lcssa$i45;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $$20;$prefix$1 = $$19;
    label = 91;
    break;
   }
   case 105: case 100:  {
    $255 = ($218|0)<(0);
    if ($255) {
     $256 = (_i64Subtract(0,0,($191|0),($218|0))|0);
     $257 = tempRet0;
     $263 = $257;$265 = $256;$pl$0 = 1;$prefix$0 = 54040;
     label = 86;
     break L89;
    }
    $258 = $fl$1$ & 2048;
    $259 = ($258|0)==(0);
    if ($259) {
     $260 = $fl$1$ & 1;
     $261 = ($260|0)==(0);
     $$ = $261 ? 54040 : ((54040 + 2|0));
     $263 = $218;$265 = $191;$pl$0 = $260;$prefix$0 = $$;
     label = 86;
    } else {
     $263 = $218;$265 = $191;$pl$0 = 1;$prefix$0 = ((54040 + 1|0));
     label = 86;
    }
    break;
   }
   case 117:  {
    $263 = $218;$265 = $191;$pl$0 = 0;$prefix$0 = 54040;
    label = 86;
    break;
   }
   case 99:  {
    $304 = $191&255;
    HEAP8[$4>>0] = $304;
    $1060 = $191;$1061 = $218;$a$2 = $4;$fl$6 = $189;$p$5 = 1;$pl$2 = 0;$prefix$2 = 54040;$z$2 = $2;
    break;
   }
   default: {
    $1060 = $191;$1061 = $218;$a$2 = $fmt83;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 54040;$z$2 = $2;
   }
   }
  } while(0);
  do {
   if ((label|0) == 75) {
    label = 0;
    $215 = $t$1 & 32;
    $216 = ($191|0)==(0);
    $217 = ($218|0)==(0);
    $219 = $216 & $217;
    if ($219) {
     $293 = $191;$295 = $218;$a$0 = $2;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 54040;
     label = 91;
    } else {
     $$012$i = $2;$221 = $191;$228 = $218;
     while(1) {
      $220 = $221 & 15;
      $222 = (54120 + ($220)|0);
      $223 = HEAP8[$222>>0]|0;
      $224 = $223&255;
      $225 = $224 | $215;
      $226 = $225&255;
      $227 = (($$012$i) + -1|0);
      HEAP8[$227>>0] = $226;
      $229 = (_bitshift64Lshr(($221|0),($228|0),4)|0);
      $230 = tempRet0;
      $231 = ($229|0)==(0);
      $232 = ($230|0)==(0);
      $233 = $231 & $232;
      if ($233) {
       break;
      } else {
       $$012$i = $227;$221 = $229;$228 = $230;
      }
     }
     $234 = $fl$3 & 8;
     $235 = ($234|0)==(0);
     if ($235) {
      $293 = $191;$295 = $218;$a$0 = $227;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 54040;
      label = 91;
     } else {
      $236 = $t$1 >> 4;
      $237 = (54040 + ($236)|0);
      $293 = $191;$295 = $218;$a$0 = $227;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $237;
      label = 91;
     }
    }
   }
   else if ((label|0) == 86) {
    label = 0;
    $262 = ($263>>>0)>(0);
    $264 = ($265>>>0)>(4294967295);
    $266 = ($263|0)==(0);
    $267 = $266 & $264;
    $268 = $262 | $267;
    if ($268) {
     $$05$i = $2;$269 = $265;$270 = $263;
     while(1) {
      $271 = (___uremdi3(($269|0),($270|0),10,0)|0);
      $272 = tempRet0;
      $273 = $271 | 48;
      $274 = $273&255;
      $275 = (($$05$i) + -1|0);
      HEAP8[$275>>0] = $274;
      $276 = (___udivdi3(($269|0),($270|0),10,0)|0);
      $277 = tempRet0;
      $278 = ($270>>>0)>(9);
      $279 = ($269>>>0)>(4294967295);
      $280 = ($270|0)==(9);
      $281 = $280 & $279;
      $282 = $278 | $281;
      if ($282) {
       $$05$i = $275;$269 = $276;$270 = $277;
      } else {
       break;
      }
     }
     $$0$lcssa$i47 = $275;$$01$lcssa$off0$i = $276;
    } else {
     $$0$lcssa$i47 = $2;$$01$lcssa$off0$i = $265;
    }
    $283 = ($$01$lcssa$off0$i|0)==(0);
    if ($283) {
     $293 = $265;$295 = $263;$a$0 = $$0$lcssa$i47;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
     label = 91;
    } else {
     $$12$i = $$0$lcssa$i47;$y$03$i = $$01$lcssa$off0$i;
     while(1) {
      $284 = (($y$03$i>>>0) % 10)&-1;
      $285 = $284 | 48;
      $286 = $285&255;
      $287 = (($$12$i) + -1|0);
      HEAP8[$287>>0] = $286;
      $288 = (($y$03$i>>>0) / 10)&-1;
      $289 = ($y$03$i>>>0)<(10);
      if ($289) {
       $293 = $265;$295 = $263;$a$0 = $287;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
       label = 91;
       break;
      } else {
       $$12$i = $287;$y$03$i = $288;
      }
     }
    }
   }
   else if ((label|0) == 96) {
    label = 0;
    $310 = $a$1;
    $311 = $310 & 3;
    $312 = ($311|0)!=(0);
    $313 = ($p$0|0)!=(0);
    $or$cond11$i = $312 & $313;
    L456: do {
     if ($or$cond11$i) {
      $$012$i1 = $p$0;$s$013$i = $a$1;
      while(1) {
       $314 = HEAP8[$s$013$i>>0]|0;
       $315 = ($314<<24>>24)==(0);
       if ($315) {
        $$3$i6 = $$012$i1;$s$2$i = $s$013$i;
        break L456;
       }
       $316 = (($s$013$i) + 1|0);
       $317 = (($$012$i1) + -1)|0;
       $318 = $316;
       $319 = $318 & 3;
       $320 = ($319|0)!=(0);
       $321 = ($317|0)!=(0);
       $or$cond$i2 = $320 & $321;
       if ($or$cond$i2) {
        $$012$i1 = $317;$s$013$i = $316;
       } else {
        $$0$lcssa$i3 = $317;$$lcssa$i = $321;$s$0$lcssa$i = $316;
        label = 99;
        break;
       }
      }
     } else {
      $$0$lcssa$i3 = $p$0;$$lcssa$i = $313;$s$0$lcssa$i = $a$1;
      label = 99;
     }
    } while(0);
    L460: do {
     if ((label|0) == 99) {
      label = 0;
      if ($$lcssa$i) {
       $$pre19 = HEAP8[$s$0$lcssa$i>>0]|0;
       $phitmp = ($$pre19<<24>>24)==(0);
       if ($phitmp) {
        $$3$i6 = $$0$lcssa$i3;$s$2$i = $s$0$lcssa$i;
       } else {
        $322 = ($$0$lcssa$i3>>>0)>(3);
        L464: do {
         if ($322) {
          $$15$i = $$0$lcssa$i3;$w$06$i = $s$0$lcssa$i;
          while(1) {
           $323 = HEAP32[$w$06$i>>2]|0;
           $324 = (($323) + -16843009)|0;
           $325 = $323 & -2139062144;
           $326 = $325 ^ -2139062144;
           $327 = $326 & $324;
           $328 = ($327|0)==(0);
           if (!($328)) {
            $$1$lcssa$i = $$15$i;$w$0$lcssa$i = $w$06$i;
            break L464;
           }
           $329 = (($w$06$i) + 4|0);
           $330 = (($$15$i) + -4)|0;
           $331 = ($330>>>0)>(3);
           if ($331) {
            $$15$i = $330;$w$06$i = $329;
           } else {
            $$1$lcssa$i = $330;$w$0$lcssa$i = $329;
            break;
           }
          }
         } else {
          $$1$lcssa$i = $$0$lcssa$i3;$w$0$lcssa$i = $s$0$lcssa$i;
         }
        } while(0);
        $332 = ($$1$lcssa$i|0)==(0);
        if ($332) {
         $$3$i6 = 0;$s$2$i = $w$0$lcssa$i;
        } else {
         $$22$i = $$1$lcssa$i;$s$13$i = $w$0$lcssa$i;
         while(1) {
          $333 = HEAP8[$s$13$i>>0]|0;
          $334 = ($333<<24>>24)==(0);
          if ($334) {
           $$3$i6 = $$22$i;$s$2$i = $s$13$i;
           break L460;
          }
          $335 = (($s$13$i) + 1|0);
          $336 = (($$22$i) + -1)|0;
          $337 = ($336|0)==(0);
          if ($337) {
           $$3$i6 = 0;$s$2$i = $335;
           break;
          } else {
           $$22$i = $336;$s$13$i = $335;
          }
         }
        }
       }
      } else {
       $$3$i6 = 0;$s$2$i = $s$0$lcssa$i;
      }
     }
    } while(0);
    $338 = ($$3$i6|0)!=(0);
    $339 = $338 ? $s$2$i : 0;
    $340 = ($339|0)==(0|0);
    if ($340) {
     $341 = (($a$1) + ($p$0)|0);
     $1060 = $191;$1061 = $218;$a$2 = $a$1;$fl$6 = $189;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 54040;$z$2 = $341;
     break;
    } else {
     $342 = $339;
     $343 = (($342) - ($310))|0;
     $1060 = $191;$1061 = $218;$a$2 = $a$1;$fl$6 = $189;$p$5 = $343;$pl$2 = 0;$prefix$2 = 54040;$z$2 = $339;
     break;
    }
   }
   else if ((label|0) == 112) {
    label = 0;
    $i$0166 = 0;$l$1165 = 0;$ws$0167 = $1062;
    while(1) {
     $346 = HEAP32[$ws$0167>>2]|0;
     $347 = ($346|0)==(0);
     if ($347) {
      $i$0$lcssa = $i$0166;$l$2 = $l$1165;
      break;
     }
     $348 = (_wcrtomb($mb,$346)|0);
     $349 = ($348|0)<(0);
     $350 = (($p$4266) - ($i$0166))|0;
     $351 = ($348>>>0)>($350>>>0);
     $or$cond17 = $349 | $351;
     if ($or$cond17) {
      $i$0$lcssa = $i$0166;$l$2 = $348;
      break;
     }
     $352 = (($ws$0167) + 4|0);
     $353 = (($348) + ($i$0166))|0;
     $354 = ($p$4266>>>0)>($353>>>0);
     if ($354) {
      $i$0166 = $353;$l$1165 = $348;$ws$0167 = $352;
     } else {
      $i$0$lcssa = $353;$l$2 = $348;
      break;
     }
    }
    $355 = ($l$2|0)<(0);
    if ($355) {
     $$0 = -1;
     label = 382;
     break L1;
    } else {
     $1064 = $1063;$1065 = $1062;$i$0$lcssa267 = $i$0$lcssa;
     label = 117;
    }
   }
  } while(0);
  if ((label|0) == 91) {
   label = 0;
   $290 = ($p$2|0)>(-1);
   $291 = $fl$4 & -65537;
   $$fl$4 = $290 ? $291 : $fl$4;
   $292 = ($293|0)!=(0);
   $294 = ($295|0)!=(0);
   $296 = $292 | $294;
   $297 = ($p$2|0)!=(0);
   $or$cond = $296 | $297;
   if ($or$cond) {
    $298 = $a$0;
    $299 = (($3) - ($298))|0;
    $300 = $296&1;
    $301 = $300 ^ 1;
    $302 = (($301) + ($299))|0;
    $303 = ($p$2|0)>($302|0);
    $p$2$ = $303 ? $p$2 : $302;
    $1060 = $293;$1061 = $295;$a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
   } else {
    $1060 = $293;$1061 = $295;$a$2 = $2;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $2;
   }
  }
  else if ((label|0) == 117) {
   label = 0;
   $356 = $fl$1$ & 73728;
   $357 = ($356|0)==(0);
   $358 = ($w$1|0)>($i$0$lcssa267|0);
   $or$cond$i58 = $357 & $358;
   if ($or$cond$i58) {
    $359 = (($w$1) - ($i$0$lcssa267))|0;
    $360 = ($359>>>0)>(256);
    $361 = $360 ? 256 : $359;
    _memset(($pad$i|0),32,($361|0))|0;
    $362 = ($359>>>0)>(255);
    if ($362) {
     $$01$i60 = $359;
     while(1) {
      ___fwritex($pad$i,256,$f);
      $363 = (($$01$i60) + -256)|0;
      $364 = ($363>>>0)>(255);
      if ($364) {
       $$01$i60 = $363;
      } else {
       break;
      }
     }
     $365 = $359 & 255;
     $$0$lcssa$i62 = $365;
    } else {
     $$0$lcssa$i62 = $359;
    }
    ___fwritex($pad$i,$$0$lcssa$i62,$f);
   }
   $366 = ($i$0$lcssa267|0)==(0);
   L494: do {
    if (!($366)) {
     $i$1174 = 0;$ws$1175 = $1065;
     while(1) {
      $367 = HEAP32[$ws$1175>>2]|0;
      $368 = ($367|0)==(0);
      if ($368) {
       break L494;
      }
      $369 = (_wcrtomb($mb,$367)|0);
      $370 = (($369) + ($i$1174))|0;
      $371 = ($370|0)>($i$0$lcssa267|0);
      if ($371) {
       break L494;
      }
      $372 = (($ws$1175) + 4|0);
      ___fwritex($mb,$369,$f);
      $373 = ($370>>>0)<($i$0$lcssa267>>>0);
      if ($373) {
       $i$1174 = $370;$ws$1175 = $372;
      } else {
       break;
      }
     }
    }
   } while(0);
   $374 = ($356|0)==(8192);
   $or$cond$i65 = $374 & $358;
   if ($or$cond$i65) {
    $375 = (($w$1) - ($i$0$lcssa267))|0;
    $376 = ($375>>>0)>(256);
    $377 = $376 ? 256 : $375;
    _memset(($pad$i|0),32,($377|0))|0;
    $378 = ($375>>>0)>(255);
    if ($378) {
     $$01$i67 = $375;
     while(1) {
      ___fwritex($pad$i,256,$f);
      $379 = (($$01$i67) + -256)|0;
      $380 = ($379>>>0)>(255);
      if ($380) {
       $$01$i67 = $379;
      } else {
       break;
      }
     }
     $381 = $375 & 255;
     $$0$lcssa$i69 = $381;
    } else {
     $$0$lcssa$i69 = $375;
    }
    ___fwritex($pad$i,$$0$lcssa$i69,$f);
   }
   $382 = $358 ? $w$1 : $i$0$lcssa267;
   $1053 = $1064;$1054 = $218;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $382;$l10n$0 = $l10n$3;
   continue;
  }
  $949 = $z$2;
  $950 = $a$2;
  $951 = (($949) - ($950))|0;
  $952 = ($p$5|0)<($951|0);
  $$p$5 = $952 ? $951 : $p$5;
  $953 = (($pl$2) + ($$p$5))|0;
  $954 = ($w$1|0)<($953|0);
  $w$2 = $954 ? $953 : $w$1;
  $955 = $fl$6 & 73728;
  $956 = ($955|0)==(0);
  $957 = ($w$2|0)>($953|0);
  $or$cond$i75 = $956 & $957;
  if ($or$cond$i75) {
   $958 = (($w$2) - ($953))|0;
   $959 = ($958>>>0)>(256);
   $960 = $959 ? 256 : $958;
   _memset(($pad$i|0),32,($960|0))|0;
   $961 = ($958>>>0)>(255);
   if ($961) {
    $$01$i77 = $958;
    while(1) {
     ___fwritex($pad$i,256,$f);
     $962 = (($$01$i77) + -256)|0;
     $963 = ($962>>>0)>(255);
     if ($963) {
      $$01$i77 = $962;
     } else {
      break;
     }
    }
    $964 = $958 & 255;
    $$0$lcssa$i79 = $964;
   } else {
    $$0$lcssa$i79 = $958;
   }
   ___fwritex($pad$i,$$0$lcssa$i79,$f);
  }
  ___fwritex($prefix$2,$pl$2,$f);
  $965 = ($955|0)==(65536);
  $or$cond$i51 = $965 & $957;
  if ($or$cond$i51) {
   $966 = (($w$2) - ($953))|0;
   $967 = ($966>>>0)>(256);
   $968 = $967 ? 256 : $966;
   _memset(($pad$i|0),48,($968|0))|0;
   $969 = ($966>>>0)>(255);
   if ($969) {
    $$01$i53 = $966;
    while(1) {
     ___fwritex($pad$i,256,$f);
     $970 = (($$01$i53) + -256)|0;
     $971 = ($970>>>0)>(255);
     if ($971) {
      $$01$i53 = $970;
     } else {
      break;
     }
    }
    $972 = $966 & 255;
    $$0$lcssa$i55 = $972;
   } else {
    $$0$lcssa$i55 = $966;
   }
   ___fwritex($pad$i,$$0$lcssa$i55,$f);
  }
  $973 = ($$p$5|0)>($951|0);
  if ($973) {
   $974 = (($$p$5) - ($951))|0;
   $975 = ($974>>>0)>(256);
   $976 = $975 ? 256 : $974;
   _memset(($pad$i|0),48,($976|0))|0;
   $977 = ($974>>>0)>(255);
   if ($977) {
    $$01$i38 = $974;
    while(1) {
     ___fwritex($pad$i,256,$f);
     $978 = (($$01$i38) + -256)|0;
     $979 = ($978>>>0)>(255);
     if ($979) {
      $$01$i38 = $978;
     } else {
      break;
     }
    }
    $980 = $974 & 255;
    $$0$lcssa$i40 = $980;
   } else {
    $$0$lcssa$i40 = $974;
   }
   ___fwritex($pad$i,$$0$lcssa$i40,$f);
  }
  ___fwritex($a$2,$951,$f);
  $981 = ($955|0)==(8192);
  $or$cond$i = $981 & $957;
  if (!($or$cond$i)) {
   $1053 = $1060;$1054 = $1061;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $w$2;$l10n$0 = $l10n$3;
   continue;
  }
  $982 = (($w$2) - ($953))|0;
  $983 = ($982>>>0)>(256);
  $984 = $983 ? 256 : $982;
  _memset(($pad$i|0),32,($984|0))|0;
  $985 = ($982>>>0)>(255);
  if ($985) {
   $$01$i = $982;
   while(1) {
    ___fwritex($pad$i,256,$f);
    $986 = (($$01$i) + -256)|0;
    $987 = ($986>>>0)>(255);
    if ($987) {
     $$01$i = $986;
    } else {
     break;
    }
   }
   $988 = $982 & 255;
   $$0$lcssa$i = $988;
  } else {
   $$0$lcssa$i = $982;
  }
  ___fwritex($pad$i,$$0$lcssa$i,$f);
  $1053 = $1060;$1054 = $1061;$cnt$0 = $cnt$1;$fmt83 = $131;$l$0 = $w$2;$l10n$0 = $l10n$3;
 }
 if ((label|0) == 363) {
  $989 = ($f|0)==(0|0);
  if (!($989)) {
   $$0 = $cnt$1;
   STACKTOP = sp;return ($$0|0);
  }
  $990 = ($l10n$0|0)==(0);
  if ($990) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   $i$2100 = 1;
  }
  while(1) {
   $991 = (($nl_type) + ($i$2100<<2)|0);
   $992 = HEAP32[$991>>2]|0;
   $993 = ($992|0)==(0);
   if ($993) {
    $1066 = 1;$i$397 = $i$2100;
    break;
   }
   $994 = (($nl_arg) + ($i$2100<<3)|0);
   $995 = ($992>>>0)>(20);
   L551: do {
    if (!($995)) {
     do {
      switch ($992|0) {
      case 9:  {
       $arglist_current35 = HEAP32[$ap>>2]|0;
       $996 = HEAP32[$arglist_current35>>2]|0;
       $arglist_next36 = (($arglist_current35) + 4|0);
       HEAP32[$ap>>2] = $arglist_next36;
       HEAP32[$994>>2] = $996;
       break L551;
       break;
      }
      case 10:  {
       $arglist_current38 = HEAP32[$ap>>2]|0;
       $997 = HEAP32[$arglist_current38>>2]|0;
       $arglist_next39 = (($arglist_current38) + 4|0);
       HEAP32[$ap>>2] = $arglist_next39;
       $998 = ($997|0)<(0);
       $999 = $998 << 31 >> 31;
       $1000 = $994;
       $1001 = $1000;
       HEAP32[$1001>>2] = $997;
       $1002 = (($1000) + 4)|0;
       $1003 = $1002;
       HEAP32[$1003>>2] = $999;
       break L551;
       break;
      }
      case 11:  {
       $arglist_current41 = HEAP32[$ap>>2]|0;
       $1004 = HEAP32[$arglist_current41>>2]|0;
       $arglist_next42 = (($arglist_current41) + 4|0);
       HEAP32[$ap>>2] = $arglist_next42;
       $1005 = $994;
       $1006 = $1005;
       HEAP32[$1006>>2] = $1004;
       $1007 = (($1005) + 4)|0;
       $1008 = $1007;
       HEAP32[$1008>>2] = 0;
       break L551;
       break;
      }
      case 12:  {
       $arglist_current44 = HEAP32[$ap>>2]|0;
       $1009 = $arglist_current44;
       $1010 = $1009;
       $1011 = HEAP32[$1010>>2]|0;
       $1012 = (($1009) + 4)|0;
       $1013 = $1012;
       $1014 = HEAP32[$1013>>2]|0;
       $arglist_next45 = (($arglist_current44) + 8|0);
       HEAP32[$ap>>2] = $arglist_next45;
       $1015 = $994;
       $1016 = $1015;
       HEAP32[$1016>>2] = $1011;
       $1017 = (($1015) + 4)|0;
       $1018 = $1017;
       HEAP32[$1018>>2] = $1014;
       break L551;
       break;
      }
      case 13:  {
       $arglist_current47 = HEAP32[$ap>>2]|0;
       $1019 = HEAP32[$arglist_current47>>2]|0;
       $arglist_next48 = (($arglist_current47) + 4|0);
       HEAP32[$ap>>2] = $arglist_next48;
       $1020 = $1019&65535;
       $1021 = $1020 << 16 >> 16;
       $1022 = ($1021|0)<(0);
       $1023 = $1022 << 31 >> 31;
       $1024 = $994;
       $1025 = $1024;
       HEAP32[$1025>>2] = $1021;
       $1026 = (($1024) + 4)|0;
       $1027 = $1026;
       HEAP32[$1027>>2] = $1023;
       break L551;
       break;
      }
      case 14:  {
       $arglist_current50 = HEAP32[$ap>>2]|0;
       $1028 = HEAP32[$arglist_current50>>2]|0;
       $arglist_next51 = (($arglist_current50) + 4|0);
       HEAP32[$ap>>2] = $arglist_next51;
       $$mask1$i = $1028 & 65535;
       $1029 = $994;
       $1030 = $1029;
       HEAP32[$1030>>2] = $$mask1$i;
       $1031 = (($1029) + 4)|0;
       $1032 = $1031;
       HEAP32[$1032>>2] = 0;
       break L551;
       break;
      }
      case 15:  {
       $arglist_current53 = HEAP32[$ap>>2]|0;
       $1033 = HEAP32[$arglist_current53>>2]|0;
       $arglist_next54 = (($arglist_current53) + 4|0);
       HEAP32[$ap>>2] = $arglist_next54;
       $1034 = $1033&255;
       $1035 = $1034 << 24 >> 24;
       $1036 = ($1035|0)<(0);
       $1037 = $1036 << 31 >> 31;
       $1038 = $994;
       $1039 = $1038;
       HEAP32[$1039>>2] = $1035;
       $1040 = (($1038) + 4)|0;
       $1041 = $1040;
       HEAP32[$1041>>2] = $1037;
       break L551;
       break;
      }
      case 16:  {
       $arglist_current56 = HEAP32[$ap>>2]|0;
       $1042 = HEAP32[$arglist_current56>>2]|0;
       $arglist_next57 = (($arglist_current56) + 4|0);
       HEAP32[$ap>>2] = $arglist_next57;
       $$mask$i = $1042 & 255;
       $1043 = $994;
       $1044 = $1043;
       HEAP32[$1044>>2] = $$mask$i;
       $1045 = (($1043) + 4)|0;
       $1046 = $1045;
       HEAP32[$1046>>2] = 0;
       break L551;
       break;
      }
      case 17:  {
       $arglist_current59 = HEAP32[$ap>>2]|0;
       HEAP32[tempDoublePtr>>2]=HEAP32[$arglist_current59>>2];HEAP32[tempDoublePtr+4>>2]=HEAP32[$arglist_current59+4>>2];$1047 = +HEAPF64[tempDoublePtr>>3];
       $arglist_next60 = (($arglist_current59) + 8|0);
       HEAP32[$ap>>2] = $arglist_next60;
       HEAPF64[$994>>3] = $1047;
       break L551;
       break;
      }
      case 18:  {
       $arglist_current62 = HEAP32[$ap>>2]|0;
       HEAP32[tempDoublePtr>>2]=HEAP32[$arglist_current62>>2];HEAP32[tempDoublePtr+4>>2]=HEAP32[$arglist_current62+4>>2];$1048 = +HEAPF64[tempDoublePtr>>3];
       $arglist_next63 = (($arglist_current62) + 8|0);
       HEAP32[$ap>>2] = $arglist_next63;
       HEAPF64[$994>>3] = $1048;
       break L551;
       break;
      }
      default: {
       break L551;
      }
      }
     } while(0);
    }
   } while(0);
   $1049 = (($i$2100) + 1)|0;
   $1050 = ($1049|0)<(10);
   if ($1050) {
    $i$2100 = $1049;
   } else {
    $$0 = 1;
    label = 382;
    break;
   }
  }
  if ((label|0) == 382) {
   STACKTOP = sp;return ($$0|0);
  }
  while(1) {
   $1052 = (($i$397) + 1)|0;
   if (!($1066)) {
    $$0 = -1;
    label = 382;
    break;
   }
   $1051 = ($1052|0)<(10);
   if (!($1051)) {
    $$0 = 1;
    label = 382;
    break;
   }
   $$phi$trans$insert = (($nl_type) + ($1052<<2)|0);
   $$pre18 = HEAP32[$$phi$trans$insert>>2]|0;
   $phitmp20 = ($$pre18|0)==(0);
   $1066 = $phitmp20;$i$397 = $1052;
  }
  if ((label|0) == 382) {
   STACKTOP = sp;return ($$0|0);
  }
 }
 else if ((label|0) == 382) {
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function runPostSets() {
 
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _strlen(ptr) {
    ptr = ptr|0;
    var curr = 0;
    curr = ptr;
    while (((HEAP8[((curr)>>0)])|0)) {
      curr = (curr + 1)|0;
    }
    return (curr - ptr)|0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {

    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_ctlz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((ctlz_i8)+(x >>> 24))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((ctlz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((ctlz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((ctlz_i8)+(x&0xff))>>0)])|0) + 24)|0;
  }

function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return (tempRet0 = tempRet0, $10$0) | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return (tempRet0 = tempRet0, $1$0) | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 8 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = _llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = _llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (_llvm_ctlz_i32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



// EMSCRIPTEN_END_FUNCS

  
  function dynCall_iiii(index,a1,a2,a3) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0;
    return FUNCTION_TABLE_iiii[index&31](a1|0,a2|0,a3|0)|0;
  }


  function dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
    FUNCTION_TABLE_viiiiiii[index&63](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0);
  }


  function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    FUNCTION_TABLE_viiiii[index&3](a1|0,a2|0,a3|0,a4|0,a5|0);
  }


  function dynCall_i(index) {
    index = index|0;
    
    return FUNCTION_TABLE_i[index&3]()|0;
  }


  function dynCall_vi(index,a1) {
    index = index|0;
    a1=a1|0;
    FUNCTION_TABLE_vi[index&255](a1|0);
  }


  function dynCall_vii(index,a1,a2) {
    index = index|0;
    a1=a1|0; a2=a2|0;
    FUNCTION_TABLE_vii[index&63](a1|0,a2|0);
  }


  function dynCall_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0;
    FUNCTION_TABLE_viiiiiiiii[index&3](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0);
  }


  function dynCall_ii(index,a1) {
    index = index|0;
    a1=a1|0;
    return FUNCTION_TABLE_ii[index&127](a1|0)|0;
  }


  function dynCall_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=+a7;
    FUNCTION_TABLE_viiiiiid[index&3](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,+a7);
  }


  function dynCall_viii(index,a1,a2,a3) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0;
    FUNCTION_TABLE_viii[index&3](a1|0,a2|0,a3|0);
  }


  function dynCall_viiiiid(index,a1,a2,a3,a4,a5,a6) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=+a6;
    FUNCTION_TABLE_viiiiid[index&7](a1|0,a2|0,a3|0,a4|0,a5|0,+a6);
  }


  function dynCall_v(index) {
    index = index|0;
    
    FUNCTION_TABLE_v[index&15]();
  }


  function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
    return FUNCTION_TABLE_iiiiiiiii[index&15](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
  }


  function dynCall_iiiii(index,a1,a2,a3,a4) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    return FUNCTION_TABLE_iiiii[index&31](a1|0,a2|0,a3|0,a4|0)|0;
  }


  function dynCall_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
    FUNCTION_TABLE_viiiiiiii[index&7](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0);
  }


  function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
    FUNCTION_TABLE_viiiiii[index&15](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
  }


  function dynCall_iii(index,a1,a2) {
    index = index|0;
    a1=a1|0; a2=a2|0;
    return FUNCTION_TABLE_iii[index&63](a1|0,a2|0)|0;
  }


  function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
    return FUNCTION_TABLE_iiiiii[index&15](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
  }


  function dynCall_viiii(index,a1,a2,a3,a4) {
    index = index|0;
    a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
    FUNCTION_TABLE_viiii[index&7](a1|0,a2|0,a3|0,a4|0);
  }

function b0(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(0);return 0; }
  function b1(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; abort(1); }
  function b2(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(2); }
  function b3() { ; abort(3);return 0; }
  function b4(p0) { p0 = p0|0; abort(4); }
  function b5(p0,p1) { p0 = p0|0;p1 = p1|0; abort(5); }
  function b6(p0,p1,p2,p3,p4,p5,p6,p7,p8) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0; abort(6); }
  function b7(p0) { p0 = p0|0; abort(7);return 0; }
  function b8(p0,p1,p2,p3,p4,p5,p6) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = +p6; abort(8); }
  function b9(p0,p1,p2) { p0 = p0|0;p1 = p1|0;p2 = p2|0; abort(9); }
  function b10(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = +p5; abort(10); }
  function b11() { ; abort(11); }
  function b12(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; abort(12);return 0; }
  function b13(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(13);return 0; }
  function b14(p0,p1,p2,p3,p4,p5,p6,p7) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; abort(14); }
  function b15(p0,p1,p2,p3,p4,p5) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; abort(15); }
  function b16(p0,p1) { p0 = p0|0;p1 = p1|0; abort(16);return 0; }
  function b17(p0,p1,p2,p3,p4) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; abort(17);return 0; }
  function b18(p0,p1,p2,p3) { p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; abort(18); }
  // EMSCRIPTEN_END_FUNCS
  var FUNCTION_TABLE_iiii = [b0,__ZN14StringBOStream4putsEPKci,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,__ZNSt3__111__stdoutbufIwE6xsputnEPKwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__111__stdoutbufIcE6xsputnEPKci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,__ZNKSt3__17collateIcE7do_hashEPKcS3_,__ZNKSt3__17collateIwE7do_hashEPKwS3_,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__15ctypeIcE9do_narrowEcc,__ZNKSt3__15ctypeIwE5do_isEtw,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__15ctypeIwE9do_narrowEwc,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,__ZNK10__cxxabiv116__enum_type_info9can_catchEPKNS_16__shim_type_infoERPv,_sn_write,_do_read,b0
  ,b0,b0,b0];
  var FUNCTION_TABLE_viiiiiii = [b1,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
  ,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1];
  var FUNCTION_TABLE_viiiii = [b2,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib];
  var FUNCTION_TABLE_i = [b3,__Z12getUnikeyBufv,__Z19getUnikeyBackspacesv,__Z17getUnikeyBufCharsv];
  var FUNCTION_TABLE_vi = [b4,__ZN10ByteStreamD2Ev,__ZN14StringBIStreamD0Ev,__ZN14StringBOStreamD0Ev,__ZN9VnCharset10startInputEv,__ZN9VnCharset11startOutputEv,__ZN9VnCharsetD2Ev,__ZN17SingleByteCharsetD0Ev,__ZN14UnicodeCharsetD0Ev,__ZN18UnicodeCompCharsetD0Ev,__ZN17DoubleByteCharsetD0Ev,__ZN11VIQRCharset10startInputEv,__ZN11VIQRCharset11startOutputEv,__ZN11VIQRCharsetD0Ev,__ZN15UTF8VIQRCharset10startInputEv,__ZN15UTF8VIQRCharset11startOutputEv,__ZN15UTF8VIQRCharsetD0Ev,__ZN16WinCP1258CharsetD0Ev,__ZN17VnInternalCharsetD0Ev,__ZN18UnicodeUTF8CharsetD0Ev,__ZN17UnicodeRefCharsetD0Ev,__ZN17UnicodeHexCharsetD0Ev,__ZN21UnicodeCStringCharset10startInputEv,__ZN21UnicodeCStringCharsetD0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__111__stdoutbufIwED0Ev,__ZNSt3__110__stdinbufIwED0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__111__stdoutbufIcED0Ev
  ,__ZNSt3__110__stdinbufIcED0Ev,__ZNSt3__112system_errorD2Ev,__ZNSt3__112system_errorD0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED1Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED1Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__18ios_base7failureD2Ev,__ZNSt3__18ios_base7failureD0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__114error_categoryD2Ev,__ZNSt3__119__iostream_categoryD0Ev,__ZNSt3__17collateIcED1Ev
  ,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,__ZNSt3__17collateIwED1Ev,__ZNSt3__17collateIwED0Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__110moneypunctIcLb0EED1Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,__ZNSt3__110moneypunctIcLb1EED1Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,__ZNSt3__110moneypunctIwLb0EED1Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,__ZNSt3__110moneypunctIwLb1EED1Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev
  ,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED1Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED1Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18messagesIcED1Ev,__ZNSt3__18messagesIcED0Ev,__ZNSt3__18messagesIwED1Ev,__ZNSt3__18messagesIwED0Ev,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev
  ,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,__ZNSt12length_errorD0Ev,__ZNSt12out_of_rangeD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,__ZN10__cxxabiv116__enum_type_infoD0Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZN13CVnCharsetLibD2Ev,__ZN10emscripten8internal7InvokerIvJEE6invokeEPFvvE,_UnikeySetInputMethod,_UnikeyPutChar,_UnikeyFilter,__ZNSt3__112__do_nothingEPv,___cxx_global_array_dtor112,___cxx_global_array_dtor97,___cxx_global_array_dtor73,___cxx_global_array_dtor48,___cxx_global_array_dtor45,___cxx_global_array_dtor,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED1Ev
  ,__ZNSt3__18ios_base4InitD2Ev,_free,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4];
  var FUNCTION_TABLE_vii = [b5,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv
  ,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__18messagesIcE8do_closeEi,__ZNKSt3__18messagesIwE8do_closeEi,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,__Z17UnikeyCheckKbCasePiS_,__ZN10emscripten8internal7InvokerIvJ13UkInputMethodEE6invokeEPFvS2_ES2_,__ZN10emscripten8internal7InvokerIvJjEE6invokeEPFvjEj,_UnikeySetCapsState,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5];
  var FUNCTION_TABLE_viiiiiiiii = [b6,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,b6];
  var FUNCTION_TABLE_ii = [b7,__ZN14StringBIStream8bookmarkEv,__ZN14StringBIStream12gotoBookmarkEv,__ZN14StringBIStream3eosEv,__ZN14StringBIStream5closeEv,__ZN14StringBOStream4isOKEv,__ZN14StringBOStream5closeEv,__ZN9VnCharset11elementSizeEv,__ZN14UnicodeCharset11elementSizeEv,__ZN18UnicodeCompCharset11elementSizeEv,__ZN17VnInternalCharset11elementSizeEv,__ZNSt3__111__stdoutbufIwE4syncEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__110__stdinbufIwE9underflowEv,__ZNSt3__110__stdinbufIwE5uflowEv,__ZNSt3__111__stdoutbufIcE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__110__stdinbufIcE9underflowEv,__ZNSt3__110__stdinbufIcE5uflowEv,__ZNKSt13runtime_error4whatEv,__ZNKSt3__119__iostream_category4nameEv,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv
  ,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__18numpunctIcE16do_decimal_pointEv
  ,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,__ZNKSt9bad_alloc4whatEv,__ZNKSt11logic_error4whatEv,__ZNKSt8bad_cast4whatEv,__ZN10emscripten8internal7InvokerIiJEE6invokeEPFivE,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7];
  var FUNCTION_TABLE_viiiiiid = [b8,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b8];
  var FUNCTION_TABLE_viii = [b9,__ZNKSt3__114error_category23default_error_conditionEi,__ZNKSt3__119__iostream_category7messageEi,__ZN10emscripten8internal7InvokerIvJiiEE6invokeEPFviiEii];
  var FUNCTION_TABLE_viiiiid = [b10,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b10,b10,b10];
  var FUNCTION_TABLE_v = [b11,__ZL25default_terminate_handlerv,_UnikeySetup,_UnikeyCleanup,_UnikeyResetBuf,_UnikeyBackspacePress,_UnikeySetSingleMode,_UnikeyRestoreKeyStrokes,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b11,b11,b11,b11,b11,b11,b11];
  var FUNCTION_TABLE_iiiiiiiii = [b12,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b12,b12,b12,b12,b12,b12,b12];
  var FUNCTION_TABLE_iiiii = [b13,__ZN17SingleByteCharset9nextInputER12ByteInStreamRjRi,__ZN17SingleByteCharset7putCharER13ByteOutStreamjRi,__ZN14UnicodeCharset9nextInputER12ByteInStreamRjRi,__ZN14UnicodeCharset7putCharER13ByteOutStreamjRi,__ZN18UnicodeCompCharset9nextInputER12ByteInStreamRjRi,__ZN18UnicodeCompCharset7putCharER13ByteOutStreamjRi,__ZN17DoubleByteCharset9nextInputER12ByteInStreamRjRi,__ZN17DoubleByteCharset7putCharER13ByteOutStreamjRi,__ZN11VIQRCharset9nextInputER12ByteInStreamRjRi,__ZN11VIQRCharset7putCharER13ByteOutStreamjRi,__ZN15UTF8VIQRCharset9nextInputER12ByteInStreamRjRi,__ZN15UTF8VIQRCharset7putCharER13ByteOutStreamjRi,__ZN16WinCP1258Charset9nextInputER12ByteInStreamRjRi,__ZN16WinCP1258Charset7putCharER13ByteOutStreamjRi,__ZN17VnInternalCharset9nextInputER12ByteInStreamRjRi,__ZN17VnInternalCharset7putCharER13ByteOutStreamjRi,__ZN18UnicodeUTF8Charset9nextInputER12ByteInStreamRjRi,__ZN18UnicodeUTF8Charset7putCharER13ByteOutStreamjRi,__ZN17UnicodeRefCharset9nextInputER12ByteInStreamRjRi,__ZN17UnicodeRefCharset7putCharER13ByteOutStreamjRi,__ZN17UnicodeHexCharset7putCharER13ByteOutStreamjRi,__ZN21UnicodeCStringCharset9nextInputER12ByteInStreamRjRi,__ZN21UnicodeCStringCharset7putCharER13ByteOutStreamjRi,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw
  ,b13,b13,b13];
  var FUNCTION_TABLE_viiiiiiii = [b14,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b14];
  var FUNCTION_TABLE_viiiiii = [b15,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib];
  var FUNCTION_TABLE_iii = [b16,__ZN14StringBIStream7getNextERh,__ZN14StringBIStream8peekNextERh,__ZN14StringBIStream5ungetEh,__ZN14StringBIStream8getNextWERt,__ZN14StringBIStream9peekNextWERt,__ZN14StringBIStream9getNextDWERj,__ZN14StringBOStream4putBEh,__ZN14StringBOStream4putWEt,__ZN8UkEngine11processRoofER10UkKeyEvent,__ZN8UkEngine11processHookER10UkKeyEvent,__ZN8UkEngine9processDdER10UkKeyEvent,__ZN8UkEngine11processToneER10UkKeyEvent,__ZN8UkEngine13processTelexWER10UkKeyEvent,__ZN8UkEngine14processMapCharER10UkKeyEvent,__ZN8UkEngine14processEscCharER10UkKeyEvent,__ZN8UkEngine13processAppendER10UkKeyEvent,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__111__stdoutbufIwE8overflowEj,__ZNSt3__110__stdinbufIwE9pbackfailEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__111__stdoutbufIcE8overflowEi,__ZNSt3__110__stdinbufIcE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNKSt3__15ctypeIcE10do_toupperEc,__ZNKSt3__15ctypeIcE10do_tolowerEc,__ZNKSt3__15ctypeIcE8do_widenEc,__ZNKSt3__15ctypeIwE10do_toupperEw
  ,__ZNKSt3__15ctypeIwE10do_tolowerEw,__ZNKSt3__15ctypeIwE8do_widenEc,__Z18uniCompInfoComparePKvS0_,__Z15wideCharComparePKvS0_,__Z18tripleVowelComparePKvS0_,__Z16tripleConComparePKvS0_,__Z13VCPairComparePKvS0_,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
  ,b16,b16,b16,b16,b16];
  var FUNCTION_TABLE_iiiiii = [b17,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,b17,b17,b17];
  var FUNCTION_TABLE_viiii = [b18,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__17collateIcE12do_transformEPKcS3_,__ZNKSt3__17collateIwE12do_transformEPKwS3_,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi];

  return { _memset: _memset, _malloc: _malloc, ___cxa_can_catch: ___cxa_can_catch, _free: _free, _main: _main, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _realloc: _realloc, _i64Subtract: _i64Subtract, _strlen: _strlen, ___cxa_demangle: ___cxa_demangle, _memcpy: _memcpy, ___getTypeName: ___getTypeName, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, __GLOBAL__I_a: __GLOBAL__I_a, __GLOBAL__I_a60: __GLOBAL__I_a60, __GLOBAL__I_a90: __GLOBAL__I_a90, __GLOBAL__I_a114: __GLOBAL__I_a114, __GLOBAL__I_a199: __GLOBAL__I_a199, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiii: dynCall_iiii, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_i: dynCall_i, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_viiiiiiiii: dynCall_viiiiiiiii, dynCall_ii: dynCall_ii, dynCall_viiiiiid: dynCall_viiiiiid, dynCall_viii: dynCall_viii, dynCall_viiiiid: dynCall_viiiiid, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiii: dynCall_iiiii, dynCall_viiiiiiii: dynCall_viiiiiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var ___cxa_demangle = Module["___cxa_demangle"] = asm["___cxa_demangle"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var __GLOBAL__I_a60 = Module["__GLOBAL__I_a60"] = asm["__GLOBAL__I_a60"];
var __GLOBAL__I_a90 = Module["__GLOBAL__I_a90"] = asm["__GLOBAL__I_a90"];
var __GLOBAL__I_a114 = Module["__GLOBAL__I_a114"] = asm["__GLOBAL__I_a114"];
var __GLOBAL__I_a199 = Module["__GLOBAL__I_a199"] = asm["__GLOBAL__I_a199"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viiiiiid = Module["dynCall_viiiiiid"] = asm["dynCall_viiiiiid"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];


// TODO: strip out parts of this we do not need

//======= begin closure i64 code =======

// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */

var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };


  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.

    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };


  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.


  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};


  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }

    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };


  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };


  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };


  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }

    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }

    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));

    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };


  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.


  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;


  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;


  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);


  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);


  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);


  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);


  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);


  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);


  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };


  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };


  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }

    if (this.isZero()) {
      return '0';
    }

    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }

    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));

    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);

      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };


  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };


  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };


  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };


  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };


  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };


  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };


  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };


  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };


  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }

    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }

    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };


  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };


  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };


  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }

    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }

    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.

    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;

    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;

    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };


  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }

    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }

    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }

    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));

      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);

      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }

      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }

      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };


  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };


  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };


  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };


  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };


  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };


  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };


  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };

  //======= begin jsbn =======

  var navigator = { appName: 'Modern Browser' }; // polyfill a little

  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/

  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */

  // Basic JavaScript BN library - subset useful for RSA encryption.

  // Bits per digit
  var dbits;

  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);

  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }

  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }

  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.

  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }

  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);

  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;

  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }

  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }

  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }

  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }

  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }

  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }

  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }

  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }

  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }

  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }

  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }

  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }

  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }

  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }

  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }

  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }

  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }

  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }

  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;

  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }

  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }

  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }

  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }

  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }

  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;

  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }

  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }

  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;

  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;

  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // jsbn2 stuff

  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }

  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }

  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }

  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }

  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }

  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }

  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }

  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }

  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;

  //======= end jsbn =======

  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();

//======= end closure i64 code =======



// === Auto-generated postamble setup entry stuff ===

if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, STATIC_BASE);
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      HEAPU8.set(data, STATIC_BASE);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = STACKTOP;

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status) {
  if (Module['noExitRuntime']) {
    return;
  }

  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;

  // exit the runtime
  exitRuntime();

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  throw 'abort() at ' + stackTrace() + extra;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



